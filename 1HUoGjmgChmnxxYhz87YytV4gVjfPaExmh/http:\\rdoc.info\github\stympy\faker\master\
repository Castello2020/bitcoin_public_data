http://rdoc.info/github/stympy/faker/master/
File: README
— Documentation for stympy/faker (master)
Search: Libraries »
stympy/faker (master)
» Index » File: README
(no frames)
Class List
Method List
File List
Faker
This gem is a port of Perl's Data::Faker library that generates fake data. It comes in very handy for taking screenshots (taking screenshots for my
project, Catch the Best was the original impetus
for the creation of this gem), having real-looking test data, and having your
database populated with more than one or two records while you're doing
development.
Installing
gem install faker
Usage
Faker::Name.name      #=&gt; &quot;Christophe Bartell&quot;

Faker::Internet.email #=&gt; &quot;kirsten.greenholt@corkeryfisher.info&quot;
Faker::Address
Faker::Address.city #=&gt; &quot;Imogeneborough&quot;

Faker::Address.street_name #=&gt; &quot;Larkin Fork&quot;

Faker::Address.street_address #=&gt; &quot;282 Kevin Brook&quot;

Faker::Address.secondary_address #=&gt; &quot;Apt. 672&quot;

Faker::Address.building_number #=&gt; &quot;7304&quot;

Faker::Address.zip_code #=&gt; &quot;58517&quot;

Faker::Address.zip #=&gt; &quot;58517&quot;

Faker::Address.postcode #=&gt; &quot;58517&quot;

Faker::Address.time_zone #=&gt; &quot;Asia/Yakutsk&quot;

Faker::Address.street_suffix #=&gt; &quot;Street&quot;

Faker::Address.city_suffix #=&gt; &quot;fort&quot;

Faker::Address.city_prefix #=&gt; &quot;Lake&quot;

Faker::Address.state_abbr #=&gt; &quot;AP&quot;

Faker::Address.state #=&gt; &quot;California&quot;

Faker::Address.country #=&gt; &quot;French Guiana&quot;

Faker::Address.latitude #=&gt; &quot;-58.17256227443719&quot;

Faker::Address.longitude #=&gt; &quot;-156.65548382095133&quot;


Faker::Bitcoin

Faker::Bitcoin.address #=&gt; &quot;1HUoGjmgChmnxxYhz87YytV4gVjfPaExmh&quot;

Faker::Business

Faker::Business.credit_card_number #=&gt; &quot;1228-1221-1221-1431&quot;

Faker::Business.credit_card_expiry_date #=&gt; &lt;Date: 2015-11-11 ((2457338j,0s,0n),+0s,2299161j)&gt;

Faker::Business.credit_card_type #=&gt; &quot;visa&quot;

Faker::Code

Faker::Code.isbn #=&gt; &quot;759021701-8&quot;

Faker::Commerce

Faker::Commerce.color #=&gt; &quot;lavender&quot;

Faker::Commerce.department #=&gt; &quot;Grocery, Health &amp; Beauty&quot;

Faker::Commerce.product_name #=&gt; &quot;Practical Granite Shirt&quot;

Faker::Company

Faker::Company.name #=&gt; &quot;Hirthe-Ritchie&quot;

Faker::Company.suffix #=&gt; &quot;Group&quot;

# Generate a buzzword-laden catch phrase.
Faker::Company.catch_phrase #=&gt; &quot;Business-focused coherent parallelism&quot;

# When a straight answer won&#39;t do, BS to the rescue!
Faker::Company.bs #=&gt; &quot;empower one-to-one web-readiness&quot;

Faker::Company.duns_number #=&gt; &quot;08-341-3736&quot;

Faker::Internet
# Optional argument name=nil
Faker::Internet.email #=&gt; &quot;eliza@mann.net&quot;

Faker::Internet.email(&#39;Nancy&#39;) #=&gt; &quot;nancy@terry.biz&quot;

# Optional argument name=nil
Faker::Internet.free_email #=&gt; &quot;freddy@gmail.com&quot;

Faker::Internet.free_email(&#39;Nancy&#39;) #=&gt; &quot;nancy@yahoo.com&quot;

# Optional argument name=nil
Faker::Internet.safe_email #=&gt; &quot;christelle@example.org&quot;

Faker::Internet.safe_email(&#39;Nancy&#39;) #=&gt; &quot;nancy@example.net&quot;

# Optional arguments specifier=nil, separators=%w(. _)
Faker::Internet.user_name #=&gt; &quot;alexie&quot;

Faker::Internet.user_name(&#39;Nancy&#39;) #=&gt; &quot;nancy&quot;

Faker::Internet.user_name(&#39;Nancy Johnson&#39;, %w(. _ -)) #=&gt; &quot;johnson-nancy&quot;

# Optional argument min_length=0
Faker::Internet.password #=&gt; &quot;doloremquealiquidrerum&quot;

Faker::Internet.password(8) #=&gt; &quot;consecteturadasperiores&quot;

Faker::Internet.domain_name #=&gt; &quot;effertz.info&quot;

Faker::Internet.fix_umlauts(&#39;äöüß&#39;) #=&gt; &quot;aeoeuess&quot;

Faker::Internet.domain_word #=&gt; &quot;haleyziemann&quot;

Faker::Internet.domain_suffix #=&gt; &quot;info&quot;

Faker::Internet.ip_v4_address #=&gt; &quot;24.29.18.175&quot;

Faker::Internet.ip_v6_address #=&gt; &quot;ac5f:d696:3807:1d72:2eb5:4e81:7d2b:e1df&quot;

# Optional arguments: host=domain_name, path=&quot;/#{user_name}&quot;
Faker::Internet.url #=&gt; &quot;http://thiel.com/chauncey_simonis&quot;
Faker::Internet.url(&#39;example.com&#39;) #=&gt; &quot;http://example.com/clotilde.swift&quot;
Faker::Internet.url(&#39;example.com&#39;, &#39;/foobar.html&#39;) #=&gt; &quot;http://example.com/foobar.html&quot;

# Optional arguments: words=nil, glue=nil
Faker::Internet.slug #=&gt; &quot;pariatur_laudantium&quot;
Faker::Internet.slug(&#39;foo bar&#39;) #=&gt; &quot;foo.bar&quot;
Faker::Internet.slug(&#39;foo bar&#39;, &#39;-&#39;) #=&gt; &quot;foo-bar&quot;


Faker::Lorem

Faker::Lorem.word #=&gt; &quot;repellendus&quot;

# Optional arguments: num=3, supplemental=false
Faker::Lorem.words #=&gt; [&quot;dolores&quot;, &quot;adipisci&quot;, &quot;nesciunt&quot;]
Faker::Lorem.words(4) #=&gt; [&quot;culpa&quot;, &quot;recusandae&quot;, &quot;aut&quot;, &quot;omnis&quot;]
Faker::Lorem.words(4, true) #=&gt; [&quot;colloco&quot;, &quot;qui&quot;, &quot;vergo&quot;, &quot;deporto&quot;]

# Optional arguments: char_count=255
Faker::Lorem.characters #=&gt; &quot;uw1ep04lhs0c4d931n1jmrspprf5wrj85fefue0y7y6m56b6omquh7br7dhqijwlawejpl765nb1716idmp3xnfo85v349pzy2o9rir23y2qhflwr71c1585fnynguiphkjm8p0vktwitcsm16lny7jzp9t4drwav3qmhz4yjq4k04x14gl6p148hulyqioo72tf8nwrxxcclfypz2lc58lsibgfe5w5p0xv95peafjjmm2frkhdc6duoky0aha&quot;
Faker::Lorem.characters(10) #=&gt; &quot;ang9cbhoa8&quot;

# Optional arguments: word_count=4, supplemental=false, random_words_to_add=6
Faker::Lorem.sentence #=&gt; &quot;Dolore illum animi et neque accusantium.&quot;
Faker::Lorem.sentence(3) #=&gt; &quot;Commodi qui minus deserunt sed vero quia.&quot;
Faker::Lorem.sentence(3, true) #=&gt; &quot;Inflammatio denego necessitatibus caelestis autus illum.&quot;
Faker::Lorem.sentence(3, false, 4) #=&gt; &quot;Aut voluptatem illum fugit ut sit.&quot;
Faker::Lorem.sentence(3, true, 4) #=&gt; &quot;Accusantium tantillus dolorem timor.&quot;

# Optional arguments: sentence_count=3, supplemental=false
Faker::Lorem.sentences #=&gt; [&quot;Vero earum commodi soluta.&quot;, &quot;Quaerat fuga cumque et vero eveniet omnis ut.&quot;, &quot;Cumque sit dolor ut est consequuntur.&quot;]
Faker::Lorem.sentences(1) #=&gt; [&quot;Ut perspiciatis explicabo possimus doloribus enim quia.&quot;]
Faker::Lorem.sentences(1, true) #=&gt; [&quot;Quis capillus curo ager veritatis voro et ipsum.&quot;]

# Optional arguments: sentence_count=3, supplemental=false, random_sentences_to_add=3
Faker::Lorem.paragraph #=&gt; &quot;Neque dicta enim quasi. Qui corrupti est quisquam. Facere animi quod aut. Qui nulla consequuntur consectetur sapiente.&quot;
Faker::Lorem.paragraph(2) #=&gt; &quot;Illo qui voluptas. Id sit quaerat enim aut cupiditate voluptates dolorum. Porro necessitatibus numquam dolor quia earum.&quot;
Faker::Lorem.paragraph(2, true) #=&gt; &quot;&quot;
Faker::Lorem.paragraph(2, false, 4) #=&gt; &quot;&quot;
Faker::Lorem.paragraph(2, true, 4) #=&gt; &quot;&quot;

# Optional arguments: paragraph_count=3, supplemental=false
Faker::Lorem.paragraphs #=&gt; &quot;&quot;
Faker::Lorem.paragraphs(1) #=&gt; &quot;&quot;
Faker::Lorem.paragraphs(1, true) #=&gt; &quot;&quot;

Faker::Name

Faker::Name.name #=&gt; &quot;Tyshawn Johns Sr.&quot;

Faker::Name.first_name #=&gt; &quot;Kaci&quot;

Faker::Name.last_name #=&gt; &quot;Ernser&quot;

Faker::Name.prefix #=&gt; &quot;Mr.&quot;

Faker::Name.suffix #=&gt; &quot;IV&quot;

Faker::Name.title #=&gt; &quot;Legacy Creative Director&quot;

Faker::Number

# Required parameter: digits
Faker::Number.number(10) #=&gt; &quot;1968353479&quot;

Faker::Number.digit #=&gt; &quot;1&quot;

Faker::PhoneNumber
Phone numbers may be in any of the following formats:
333-333-3333
(333) 333-3333
1-333-333-3333
333.333.3333
333-333-3333
333-333-3333 x3333
(333) 333-3333 x3333
1-333-333-3333 x3333
333.333.3333 x3333
(Don't let the example output below fool you - any format can be returned at random.)

Faker::PhoneNumber.phone_number #=&gt; &quot;397.693.1309&quot;

Faker::PhoneNumber.cell_phone #=&gt; &quot;(186)285-7925&quot;

# NOTE NOTE NOTE NOTE
# For the &#39;US only&#39; methods below, first you must do the following:
Faker::Config.locale = &#39;en-us&#39;

# US only
Faker::PhoneNumber.area_code #=&gt; &quot;201&quot;

# US only
Faker::PhoneNumber.exchange_code #=&gt; &quot;208&quot;

# Optional parameter: length=4
Faker::PhoneNumber.subscriber_number #=&gt; &quot;3873&quot;

Faker::PhoneNumber.subscriber_number(2) #=&gt; &quot;39&quot;

Faker::PhoneNumber.extension #=&gt; &quot;3764&quot;

Customization
Since you may want to make addresses and other types of data look different
depending on where in the world you are (US postal codes vs. UK postal codes,
for example), Faker uses the I18n gem to store strings (like state names) and
formats (US postal codes are NNNNN while UK postal codes are AAN NAA),
allowing you to get different formats by switching locales. Just set
Faker::Config.locale to the locale you want, and Faker will take care of the
rest.
Contributing
If you'd like to contribute code or formats/data for another locale, fork
the project at github, make your changes,
then send a pull request.
note
Run bundle install and rake test to confirm tests are passing.
Contact
Comments and feedback are welcome. Send an email to Benjamin Curtis via the google group.
License
This code is free to use under the terms of the MIT license.
Generated on Sat Jul 12 05:57:55 2014 by
yard
0.8.7.4 (ruby-2.1.1).

