http://ch00ftech.com/feed/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 16:15:08 GMT
Server: Apache
X-Pingback: http://ch00ftech.com/xmlrpc.php
ETag: "2ea0d98c6eeb3430bdab365411cf2542"
Last-Modified: Tue, 27 May 2014 05:12:21 GMT
Connection: close
Content-Type: text/xml; charset=UTF-8

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>ch00ftech Industries</title>
	<atom:link href="http://ch00ftech.com/feed/" rel="self" type="application/rss+xml" />
	<link>http://ch00ftech.com</link>
	<description>What if it actually works?</description>
	<lastBuildDate>Tue, 27 May 2014 05:12:21 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.4.2</generator>
		<item>
		<title>Circuit board layout timelapse</title>
		<link>http://ch00ftech.com/2014/04/07/circuit-board-layout-timelapse/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=circuit-board-layout-timelapse</link>
		<comments>http://ch00ftech.com/2014/04/07/circuit-board-layout-timelapse/#comments</comments>
		<pubDate>Mon, 07 Apr 2014 05:53:17 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Processes]]></category>
		<category><![CDATA[eagle]]></category>
		<category><![CDATA[layout]]></category>
		<category><![CDATA[timelapse]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=4394</guid>
		<description><![CDATA[I know I haven't updated in a long time, but I've been super busy with some other projects.  Expect some new posts soon. In the meantime, I found some old footage that I took of me laying out the sound-reactive EL &#8230; <a href="http://ch00ftech.com/2014/04/07/circuit-board-layout-timelapse/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p>I know I haven't updated in a <strong>long</strong> time, but I've been super busy with some other projects.  Expect some new posts soon. In the meantime, I found some old footage that I took of me laying out the <a title="Can I get this thing off my desk now?" href="http://ch00ftech.com/2013/01/20/can-i-get-this-thing-off-my-desk-now/">sound-reactive EL panel driver</a> that's been sitting on my hard drive for the past six months, so I decided to upload it.</p>
<p>Enjoy!</p>
<p><iframe width="584" height="329" src="http://www.youtube.com/embed/Uc1MgtPmwTs?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2014/04/07/circuit-board-layout-timelapse/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>CNC machine, Christmas gifts, and I&#039;m a dope</title>
		<link>http://ch00ftech.com/2014/01/20/cnc-machine-christmas-gifts-and-im-a-dope/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=cnc-machine-christmas-gifts-and-im-a-dope</link>
		<comments>http://ch00ftech.com/2014/01/20/cnc-machine-christmas-gifts-and-im-a-dope/#comments</comments>
		<pubDate>Mon, 20 Jan 2014 21:23:37 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Earrings]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=4267</guid>
		<description><![CDATA[Christmas time is always such a miserable, stressful lovely time at ch00ftech headquarters as I frantically scramble to finish all of the gifts that I've started for friends and family.  Unfortunately, in my haste, I haven't been able to write up &#8230; <a href="http://ch00ftech.com/2014/01/20/cnc-machine-christmas-gifts-and-im-a-dope/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5293.jpg"><img class="aligncenter size-full wp-image-4268" title="IMG_5293" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5293.jpg" alt="" width="1024" height="683" /></a></p>
<p>Christmas time is always such a <del>miserable, stressful</del> lovely time at ch00ftech headquarters as I frantically scramble to finish all of the gifts that I've started for friends and family.  Unfortunately, in my haste, I haven't been able to write up everything I did in detail, but I hope this post serves as a good summary of some of the stuff I did and what I learned.</p>
<p><span id="more-4267"></span></p>
<h1>CNC4UANDME</h1>
<p><a href="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_1805.jpg"><img class="aligncenter size-full wp-image-4384" title="IMG_1805" src="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_1805.jpg" alt="" width="768" height="1024" /></a></p>
<p style="text-align: left;">A few weeks into October, I tried to sign up for a new iPhone through T-mobile.  With credit card in-hand, I waited at the T-mobile store while my sales rep entered in my information, called over his manager, called T-mobile headquarters, entered in my information again, and generally struggled with the one task he was hired to do.</p>
<p style="text-align: left;">After 45 min, I was told that they would be unable to sell me that phone on that day. Unsure of why a phone store would still remain open when they are unable to complete the one transaction that they are in place to perform, I walked home.  Unsatisfied by the lack of gross irresponsible financial release that I had so thoroughly prepared for, I ordered a CNC machine.</p>
<p style="text-align: left;">It wasn't really an impulse buy though considering I have been thinking about buying a CNC mill for <a href="http://www.reddit.com/r/CNC/comments/1fyct7/looking_for_a_5k_3axis_small_bench_top_cnc_mill/">the past year or so</a>.  I used to have access to one back in undergrad which is how I made the metal stamp that I used to make the burned wood image you sometimes see in this page's header:</p>
<p style="text-align: left;"><a href="http://ch00ftech.com/wp-content/uploads/2013/12/qmScx.jpg"><img class="aligncenter size-full wp-image-4270" title="qmScx" src="http://ch00ftech.com/wp-content/uploads/2013/12/qmScx.jpg" alt="" width="1024" height="683" /></a></p>
<p style="text-align: left;">I really missed having the ability to make extremely precise objects out of a whole range of materials.  I know a lot of folks are going the 3D printer route, but I wanted to have the ability to make very precise and durable parts and enclosure for my projects out of a plethora of materials from wood and plastic to various metal alloys.</p>
<p style="text-align: left;">The mill I settled on is a <a href="http://www.soigeneris.com/taig_cnc_mill_packages-details.aspx">Taig from Soigeneris.</a> A lot of folks have told me that I should have built my own CNC, but I wanted this machine to be a tool that I use to complete projects, not a project in itself.  I ordered the mill with the optional rotary axis table, though I haven't found much of a use for it yet.  I just thought that I might as well go all out.</p>
<p style="text-align: left;">It comes with the software CamBam and Mach3.  CamBam is a CAM or Computer Aided Manufacturing package.  Unlike CAD, CAM work involves actually deciding what kind of motions the tool has to take to carve out the shape you're trying to make.  CamBam can do some 3D work, but it's sometimes referred to as a "2.5D" solution as it mostly focuses on cutting and carving shapes out of flat stock. Mach3 is meant to control the CNC mill directly.  This software can read in GCode to control the CNC, or it can control it using direct input from the keyboard.  It apparently also has a number of built-in wizards for performing common tasks, but I haven't had a chance to play with them yet.</p>
<p style="text-align: left;">The mill, the software, and a few collets and bits ran me almost exactly $3000.</p>
<h1 style="text-align: left;">Early Projects</h1>
<p>One of the first things I did on my mill was carve a rod of aluminum into a 3D puzzle:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1864.jpg"><img class="aligncenter size-full wp-image-4271" title="IMG_1864" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1864.jpg" alt="" width="1024" height="768" /></a></p>
<p>It's not a whole lot to look at.  I got the design online and simply coded CamBam to carve some channels into some sections of 1/2" 6061 aluminum bar stock.  This stock was held easily in my mill's included vice grip.  This project could have easily been completed by a handmill, but I was still getting my bearings.</p>
<p>My second big project was a pinewood derby car.  I found the 3D model in the <a href="http://www.123dapp.com/smb-123D_Design/Indy-Car/1108784">catalog of parts</a> available for free in <a href="http://www.123dapp.com/">AutoDesk's 123D</a>.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/car.jpg"><img class="aligncenter size-full wp-image-4272" title="car" src="http://ch00ftech.com/wp-content/uploads/2013/12/car.jpg" alt="" width="996" height="827" /></a></p>
<p>I tried to tweak the model a bit to align the wheels with the wheel channels carved into the standard pinewood derby block, but 123D Design's extreme lack of practical engineering features (it's more of an art program) made this very difficult.  I ended up having to drill new holes for the wheels' axels.</p>
<p>One of the hardest things to accomplish with a design like this is fixturing.  unlike 3D printing, CNC mill work requires some method of holding the stock material in place before cutting into it.  While it was easy to have a vice grip clamp down on the aluminum bar stock for the 3D puzzle, it's a little more difficult to pull off when basically all sides of the model are going to get sliced up.</p>
<p>After asking around, I heard one very simple suggestion that I wouldn't have expected to actually work.  Double-sided tape.</p>
<p>I started by carving out a flat channel in a block of wood using an end-mill. Because this was produced by the mill itself, it's guaranteed to be square and level relative to the mill's coordinates.  I then applied some two-sided tape to the pinewood block and stuck it down:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_1882.jpg"><img class="aligncenter size-full wp-image-4385" title="IMG_1882" src="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_1882.jpg" alt="" width="1024" height="768" /></a></p>
<p>After tweaking some of the car's dimensions in 123D, I exported as a .STL file and imported it into CamBam.  I don't have too many details of the settings I chose, but I did select "waterline-rough" as my method of cutting the 3D profile.  This means that it cuts down one level entirely before moving to deeper levels.</p>
<p>I made the mistake of doing this entire job with a 1/8" bit.  CamBam makes it fairly easy to do multiple passes with different sized bits, so I should have used a fatter bit to do a rough pass quickly and then moved to a smaller bit for more precise work.  Either way, it worked:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1884.jpg"><img class="aligncenter size-full wp-image-4275" title="IMG_1884" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1884.jpg" alt="" width="1024" height="768" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1885.jpg"><img class="aligncenter size-full wp-image-4276" title="IMG_1885" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1885.jpg" alt="" width="1024" height="768" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1888.jpg"><img class="aligncenter size-full wp-image-4277" title="IMG_1888" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1888.jpg" alt="" width="1024" height="768" /></a></p>
<p>Because my bit of choice had a cutting head that was narrower than its shank, I had trouble with long vertical sections.  Once the bit sank deep enough, the wider shank would rub up against the vertical surface of the wood.  For this reason, I manually destroyed the tail of the car with a pair of wire cutters to prevent the bit from damaging the rest of the model.</p>
<p>I did one more partial smoothing pass with a smaller vertical step size, and the model became pretty smooth.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1889.jpg"><img class="aligncenter size-full wp-image-4278" title="IMG_1889" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1889.jpg" alt="" width="1024" height="768" /></a></p>
<h1><span style="color: #000000; font-weight: bold;">Bitcoin Wallet</span></h1>
<p>I've been nerding out about Bitcoin for the past few months, and my dad has taken a cursory interest as well despite not actually purchasing any of his own.  For Christmas, I decided to give my dad some Bitcoin, but I wanted to find a fun way to deliver them.</p>
<p><a href="http://bitcoin.org/en/">Bitcoin</a> is a digital currency.  I don't want to go into too much detail here, but the relevant portion of the system is that owning a Bitcoin consists of having the private key to a public address that someone has sent Bitcoin to at some point.  The private key is required to spend Bitcoin and the public address is required to receive them.</p>
<p>The kicker is that the public address is generated from the public key using a special algorithm, but there is no way to generate a private key knowing only the public address.</p>
<p>For the most part, public addresses are completely random strings of numbers and letters as the algorithm does a great job of scrambling the private key up so that it cannot be found from the public address.  Even small changes to a private key will change the public address entirely to a new random string.  Sometimes however, there's a chance that the public address will have a word or phrase in it that people might recognize.</p>
<p>If you guess enough private keys fast enough, the odds of finding a specific word or phrase in a public address goes up.  I thought it would be fun to give my dad a Bitcoin wallet with his name in the address.  This is commonly referred to as a "vanity address".</p>
<p>My dad's first initial and last name came out to seven characters, and since Bitcoin addresses are case-sensitive and I wanted to specify that, it took an incredibly large number of guesses to find the private key that worked.</p>
<p>Fortunately, I was able to use <a href="https://en.bitcoin.it/wiki/Vanitygen">OCLVanityGen</a> on my video card to guess a little over 18,000,000 private keys per second using my video card.  It was a little hard to set up, but thanks to some <a href="http://www.reddit.com/r/Bitcoin/comments/1s3wuh/safe_offline_qr_code_generator_for_printing/cdtvu2j">helpful folk on reddit</a>, I got it working.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/oclvanitygen.png"><img class="aligncenter size-full wp-image-4280" title="oclvanitygen" src="http://ch00ftech.com/wp-content/uploads/2013/12/oclvanitygen.png" alt="" width="677" height="342" /></a></p>
<p>Half a trillion guesses later, the program spat out a private key and public address:</p>
<pre>1ACiuffovDAfshKeQKo7vo36KfDPxQGEgv</pre>
<p>I wrote the private key down somewhere safe and generated a QR code from the public address using an online QR code generator.</p>
<p>Looking for yet another way to utilize my CNC mill this holiday season, I decided to mill my dad a QR code keychain out of aluminum that he can use to accept Bitcoin into his new vanity address.</p>
<p>I imported the QR code into CamBam using the Draw&gt;Surface&gt;From Bitmap feature.  This will take a bitmap and assign a cutting depth based on the shade of grey in the image where darker pixels are cut deeper.  I learned that when importing low resolution images into the program, it will internally scale them up using a method that blurs the sharp edges of the QR code.  The end result is that every edge in the 3D surface ends up slanty:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/qrslanty.png"><img class="aligncenter size-full wp-image-4281" title="qrslanty" src="http://ch00ftech.com/wp-content/uploads/2013/12/qrslanty.png" alt="" width="663" height="215" /></a></p>
<p>Scaling up the image in Photoshop where I could control the scaling method fixed this problem.</p>
<p>I then told CamBam to generate tool paths using a waterline method and a 0.049" bit.  I apparently had two such bits just...lying around.  I think I originally bought them to somehow cut holes in the enclosure of my <a title="The Bullet Counter" href="http://ch00ftech.com/2011/11/15/the-bullet-counter/">bullet counter</a> like...three years ago.  CamBam does not show you what your end result will look like, so I was unsure if a 0.049" bit would provide a QR code with sharp enough edges to be scanned (the bit is scarcely narrower than a single QR code pixel).  Drawing such a pixel in Eagle and remembering what I learned from the <a href="http://ch00ftech.com/2012/10/27/qr-clock/#display">QR Clock</a> convinced me that it was square enough for most scanners.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/toolpaths.png"><img class="aligncenter size-full wp-image-4282" title="toolpaths" src="http://ch00ftech.com/wp-content/uploads/2013/12/toolpaths.png" alt="" width="2560" height="1440" /></a></p>
<p>With these toolpaths generated, I moved on to bringing it into the real world.  I started with a bar of 2"x1/8" aluminum bar stock that I picked up from <a href="http://onlinemetals.com">Onlinemetals.com</a>.  They're based in Seattle and don't charge shipping if you pick your order up at their warehouse.</p>
<p>Mounting the bar stock into my mill, I set about squaring off the surfaces:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1989.jpg"><img class="aligncenter size-full wp-image-4283" title="IMG_1989" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1989.jpg" alt="" width="1024" height="768" /></a></p>
<p>This wasn't entirely necessary for such a low-precision project, but I wanted to get rid of the roller marks and other blemishes that you can see on the stock in the above picture.  I used some parallels and 1/2" bar stock to set the piece so that its top surface sat just barely higher than the edge of the mill.  As it sat, there was probably 0.1mm of clearance between the mill and the vice as it shaved off the surface of the bar stock.  I would like to have given myself more wiggle room, but I couldn't find anything uniform enough to wedge in there to prop it up, so I just worked very carefully with the small gap.</p>
<p>With the surfaces all clean, I used an edge finder to program the mill's coordinates around the stock piece.</p>
<p>Used to working with larger bits and softer materials, my first attempt involved digging my bit in a solid 0.5mm and cutting at much too fast a pace.  This resulting in snapping my end mill off almost immediately.  You can see the hole here:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/broken-bit.jpg"><img class="aligncenter size-full wp-image-4284" title="broken bit" src="http://ch00ftech.com/wp-content/uploads/2013/12/broken-bit.jpg" alt="" width="543" height="375" /></a></p>
<p>Fortunately, I had a backup bit, so I changed it to 0.05mm depth and slowed down the cutting speed too just in case.  This ended up taking several hours to get to the 0.5mm depth.  If I was running a factory, I would have chosen different settings, but as I was just trying to make a one-off without breaking any more bits, I was happy to wait.  Furthermore, Mach3 makes it easy to increase cutting speed as the job is progressing, so as I built up confidence, I carefully stepped up the speed to move things along.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1994.jpg"><img class="aligncenter size-full wp-image-4285" title="IMG_1994" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1994.jpg" alt="" width="1024" height="768" /></a></p>
<p>It was interesting to see the order in which CamBam decided to cut the grooves.  Even more interesting was the fact that by simply changing the depth of each cut, CamBam decided to start in a completely different section from where the bit was broken off.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1996.jpg"><img class="aligncenter size-full wp-image-4287" title="IMG_1996" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1996.jpg" alt="" width="1024" height="768" /></a></p>
<p>Unfortunately, the code wasn't scannable in this form, so I quickly moved on to painting it.  Two coats of flat black spray paint gave me this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/flatblack.jpg"><img class="aligncenter size-full wp-image-4289" title="flatblack" src="http://ch00ftech.com/wp-content/uploads/2013/12/flatblack.jpg" alt="" width="1024" height="768" /></a></p>
<p>Then some work with a piece of 80 and then 400 grit sand paper on a flat surface gave me this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/sanded.jpg"><img class="aligncenter size-full wp-image-4290" title="sanded" src="http://ch00ftech.com/wp-content/uploads/2013/12/sanded.jpg" alt="" width="1024" height="768" /></a></p>
<p>Finally, a hole for the keychain and a few layers of clear-coat:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/clearcoat.jpg"><img class="aligncenter size-full wp-image-4291" title="clearcoat" src="http://ch00ftech.com/wp-content/uploads/2013/12/clearcoat.jpg" alt="" width="1024" height="768" /></a></p>
<p>The clear coat doesn't seem to stick too well to the aluminum, but it should provide some protection for the paint.  Regardless, my dad is pretty handy, and as long as the aluminum itself isn't seriously destroyed, refinishing it and returning it to this shape should be possible long into the future.</p>
<p>Let's just hope Bitcoin lasts that long.</p>
<h2>Earrings</h2>
<p>After the disaster that was my <a title="Light Up Earrings" href="http://ch00ftech.com/2013/10/08/light-up-earrings/">first pair of earrings</a>, I decided to re-make them entirely with new PCBs cut with my CNC and new enclosures cut out of plastic instead of Sculpey.</p>
<h3>PCB</h3>
<p>Using a CNC mill to cut PCBs is often called the "isolation method" as you're removing material to isolate separate traces on a solid sheet of copper clad PCB.  My CNC mill has a step distance of 0.0005" or 0.5 mil, so cutting the 10 mil traces that I was so proud of etching previously is trivial.  The hard part is finding a bit small enough.</p>
<p>Some of the gaps in this circuit are just a few mil wide, and it's difficult to find endmills with tips that are that small.  That's why most people use engraving bits.  These bits have ends that are pointed to some set angle and taper down to a point that is smaller than a mil across.</p>
<p>Presumably, you'd want a bit that tapers down to a point at the sharpest angle possible.  This will allow for the narrowest possible cuts.  What I learned looking around online however is that sharper bits will leave your traces with sharper edges that may peel up faster than the more gradually tapered ends produced by shallower angles.  Splitting the difference, I ordered a 30 degree and 60 degree bit off Soigeneris.</p>
<p>To generate the Gcode file necessary to cut the board, I used a free plugin for Eagle called <a href="http://www.pcbgcode.org/">PCB-Gcode</a>.  This software suite lets you select things like your cutting depth and isolation distance as well as the number of passes.  Technically, only one pass is necessary, but with such a narrow path cut between the traces and the unused copper on the board, it becomes fairly easy to accidentally form shorts.</p>
<p>Here are the settings I used:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/pcbgcode0.png"><img class="aligncenter size-full wp-image-4294" title="pcbgcode0" src="http://ch00ftech.com/wp-content/uploads/2013/12/pcbgcode0.png" alt="" width="1375" height="876" /></a></p>
<p><img class="aligncenter size-full wp-image-4293" title="pcbgcode" src="http://ch00ftech.com/wp-content/uploads/2013/12/pcbgcode.png" alt="" width="1375" height="876" /></p>
<p>A lot of the settings such as Z up and Z down are pretty self explanatory, but I had some trouble with epsilon and isolation.  Minimum isolation is supposed to tell the software how far to keep the bit away from the edge of your trace to guarantee that the bit's edge doesn't remove any of the trace in question. Epsilon is the gap to allow between subsequent passes.</p>
<p>This all makes a lot of sense for end-mills, but my bit tapers to an end that's essentially zero width, so neither of those settings make any sense.  I eventually decided to pretend that the width of the bit is its width at the surface of the copper clad which is just a fraction of a millimeter back from its tip.  Using the thickness of the copper, the angle of the bit, and a bit of trigonometry, I came up with the numbers you see above.  Some sources online reminded me that honing in these numbers is something of a trial and error process, so I'm sure I'll come up with better numbers as time goes on.</p>
<p>With these settings, the program spit out this doodle:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/Screen-Shot-2013-12-19-at-11.09.57-PM.png"><img class="aligncenter size-full wp-image-4296" title="Screen Shot 2013-12-19 at 11.09.57 PM" src="http://ch00ftech.com/wp-content/uploads/2013/12/Screen-Shot-2013-12-19-at-11.09.57-PM.png" alt="" width="914" height="736" /></a></p>
<p>Each color represents a separate pass. You can see that in some areas only one or two passes could fit, but this is enough to properly isolate the circuit.  Sort of has a fun psychedelic look to it.</p>
<p>Just to see what would happen, I jammed a pen into the collet and ran this program:</p>
<p><iframe width="584" height="329" src="http://www.youtube.com/embed/BDpioV5Tkeo?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>Of course, when actually removing such a small amount of material, programming the height of the bit above the copper is absolutely critical.  I found one source that provided an interesting tip.  Just as the flutes of endmill bits are precisely manufactured, the shanks (the part that goes into the mill's collet) are also of very precise diameter.  By rolling a bit back and forth on the copper clad's surface and trying to pass it under a very slowly dropping engraving bit, I was able to determine the exact moment when the rolling bit would no longer fit. At this point, the height of the engraving bit off the copper clad is exactly known.  This can yield very accurate results and doesn't run the risk of breaking the engraving bit.</p>
<p>My first attempt with the PCB was a disaster.  For some reason, I got it into my head that 1/32" copper clad has 1/32" of copper on the surface when it's actually 1/32" of fiberglass with a 0.0014" of copper coating.  With this setting keyed in, my 30 degree bit dug a deep hole into the board before immediately snapping:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5297.jpg"><img class="aligncenter size-full wp-image-4295" title="IMG_5297" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5297.jpg" alt="" width="1024" height="683" /></a></p>
<p>This lesson cost approximately $13.</p>
<p>My second attempt with the 60 degree bit worked much better:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5231.jpg"><img class="aligncenter size-full wp-image-4297" title="IMG_5231" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5231.jpg" alt="" width="1024" height="683" /></a></p>
<p>And though it took a long time to finish, it was still faster and less messy than etching the PCB, and the end results were beautiful!</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5238.jpg"><img class="aligncenter size-full wp-image-4298" title="IMG_5238" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5238.jpg" alt="" width="1024" height="683" /></a></p>
<p>I really was impressed with the level of precision I was able to achieve.  Just look at this close up (human hair for scale):</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/cnctrace2.jpg"><img class="aligncenter size-full wp-image-4299" title="cnctrace2" src="http://ch00ftech.com/wp-content/uploads/2013/12/cnctrace2.jpg" alt="" width="800" height="533" /></a></p>
<p>And compare it to a similar trace etched with acid:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/hairtrace.jpg"><img class="aligncenter size-full wp-image-4076" title="hairtrace" src="http://ch00ftech.com/wp-content/uploads/2013/09/hairtrace.jpg" alt="" width="1024" height="682" /></a></p>
<p>It looks a heck of a lot cleaner.  Now, the 10 mil traces definitely weren't 10 mil across, but more trial and error with the isolation and epsilon settings will improve that.</p>
<h3>Case</h3>
<p>I'll get back to how the PCB worked out, but now for the case.</p>
<p>For the new version of the earrings, I wanted a very simple case (box and lid) made out of some kind of durable semi-translucent material that cuts well on a CNC machine. I settled for a simple design that I whipped up in the cheap CAD suite <a href="http://www.punchcad.com/">ViaCAD</a> and cut out of some "delrin" or acetal resin that I purchased from Online metals as 1" round stock.</p>
<p>I might cover the CAD process in a later post, but the hardest part of making such a ridiculously tiny box (only 14mm across) was holding the damn thing in place.</p>
<p>For the super thin lid, I was able to use the same method that I used for the pinewood car:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5269.jpg"><img class="aligncenter size-full wp-image-4300" title="IMG_5269" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5269.jpg" alt="" width="1024" height="683" /></a></p>
<p>But I had no such luck on the much taller box.  Once it got down far enough into the form, the bit would always catch the box, rip it from its adhesive, and throw it across the room.  This happened five or six times before I decided that it just wasn't going to work out.  I heard some suggestions to move to a stronger adhesive, but I decided to just clamp it down and do it right.</p>
<p>The adhesive method would have let me mill the entire object at once, but when clamping the raw material down, I needed to stop once the bit neared the vice grip so I could flip the piece around and start milling out the other side.  This was trivial from a mechanical perspective, but programming the mill to know the coordinates of the newly re-seated part was a lot more challenging.</p>
<p>Some parallels let me set the Z dimension, and an edge-finder up against the inner lip of the vice got me the Y dimension easily, but X presented a problem.  Because the part itself was overshadowed by the mass of stock I was cutting it from, there was no way to get an edge finder up against the part's outer wall.  This image might make it a little clearer:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1998.jpg"><img class="aligncenter size-full wp-image-4302" title="IMG_1998" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1998.jpg" alt="" width="1024" height="768" /></a></p>
<p>As far as the CNC was concerned, that part could be anywhere along the length of that vice.  I ended up sort of fudging it using a parallel and an edge finder like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1997.jpg"><img class="aligncenter size-full wp-image-4303" title="IMG_1997" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1997.jpg" alt="" width="1024" height="768" /></a></p>
<p>This worked okay, but the tolerance stackup presented by the lack of rigidity of my hand and the softness of the delrin amplified by the length of the parallel caused one of my earrings to have a characteristic lip where the second half was milled just a few micrometers off center from the first.  This didn't have any mechanical impact, but considering that these are more form over function, I was mildly upset. In the future, I might try making a custom tool for this.</p>
<p>All setbacks aside, the final product turned out pretty well.  Here's the case with the original circuit in it:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1999.jpg"><img class="aligncenter size-full wp-image-4304" title="IMG_1999" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_1999.jpg" alt="" width="1024" height="768" /></a></p>
<p>The thinner walls of the delrin cases made the earrings much brighter and smaller than their Sculpey counterparts:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5277.jpg"><img class="aligncenter size-full wp-image-4305" title="IMG_5277" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5277.jpg" alt="" width="1024" height="683" /></a></p>
<p>And lighter too:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5282.jpg"><img class="aligncenter size-full wp-image-4306" title="IMG_5282" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5282.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5281.jpg"><img class="aligncenter size-full wp-image-4307" title="IMG_5281" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5281.jpg" alt="" width="1024" height="683" /></a></p>
<p>I made some other (poorly documented) improvements over the original design. The hole in the bottom was precision drilled with the mill which means that the little screw heads fit very snugly and almost snapped in place (a dab of super glue kept them there).  I attached the ear hooks to a steel loop of wire instead of the copper wire I used before.  The wire was the same stuff I used to make this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/nxM7zHP.jpg"><img class="aligncenter size-full wp-image-4308" title="nxM7zHP" src="http://ch00ftech.com/wp-content/uploads/2013/12/nxM7zHP.jpg" alt="" width="768" height="1024" /></a></p>
<p>Steel is more durable than copper, and it leaves me the option to use magnets to attach the positive charging terminals instead of alligator clips.  I was also happy to find that it can be easily soldered to copper to make the necessary electrical connections.</p>
<h1> I'm a dope</h1>
<p>You might be wondering why the above pictures show my original circuit board getting loaded into the new delrin case after I spent all of this time re-making said board with the CNC machine.</p>
<p>Well, there were some poor assumptions I made in the design of my original earring's <a href="http://ch00ftech.com/2013/10/08/light-up-earrings/3/">suicide circuit</a>.  I ended up using this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/10/battprotectioncircuitfinal.png"><img class="aligncenter size-full wp-image-4105" title="battprotectioncircuitfinal" src="http://ch00ftech.com/wp-content/uploads/2013/10/battprotectioncircuitfinal.png" alt="" width="551" height="545" /></a></p>
<p>Despite the fact that R13 should actually be tying the gate and source of Q1 together (oops), this circuit worked exactly as advertised. When the trace leading off the left side of the schematic is disconnected, R12 shuts off Q2 which in turn stops providing charge to the gate of Q1 which then turns off and disconnects circuit ground from the battery.</p>
<p>When I first designed this circuit, I had something like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/10/suicide1.jpg"><img class="aligncenter size-full wp-image-4100" title="suicide1" src="http://ch00ftech.com/wp-content/uploads/2013/10/suicide1.jpg" alt="" width="1024" height="767" /></a></p>
<p>Where I was driving the gate of the NFET directly from the output of the micro controller.  This failed because as the NFET shut off, the ground pin of the microcontroller rose, so it became impossible to exert a low enough voltage on the NFET to shut it off further.  The part would sometimes shut off, but most of the time, it settled into a half-on state where it continued to drain the battery.  Through some trial and error, I ended up adding both a PFET and some pull up/down resistors.</p>
<p>Though it was too late to undo what I had done, I was convinced by the end of that post that I didn't need the PFET and could get away with a single NFET as long as I made sure to include the pull-down resistor on the gate.  After all, the issue I originally dealt with was exerting a low voltage from the micro controller.  If the pull-down pulled from an outside source, it should be trivial to turn the part off simply by switching the micro controller pin to a high-impedance input.</p>
<p>As it turns out, I was wrong.</p>
<p>Upon re-building this circuit with the CNC, I discovered that my new circuit exhibited the same half-on battery-killing problems that I experienced with my very first draft of the board despite the addition of the pull-down resistor and change to the firmware.  I wasn't taking into account protection diodes.</p>
<p>Page 54 of the ATTiny24's datasheet includes this figure:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/protectiondiodes.png"><img class="aligncenter size-full wp-image-4310" title="protectiondiodes" src="http://ch00ftech.com/wp-content/uploads/2013/12/protectiondiodes.png" alt="" width="519" height="290" /></a></p>
<p>Pxn is the pin presented to the outside world.  You'll note two diodes connected to this pin.  These two diodes are in place to protect the main portion of the IC from over or undervoltage conditions.  In other words, if the voltage on the pin drops below chip ground, the lower diode will source current from ground to this lower outside voltage to prevent the rest of the part from experiencing a negative voltage event.</p>
<p>In reality, these diodes are only really used for extremely quick pulses of high or low voltage (things like static shocks).  Because of their important role in protecting the chip, these diodes cannot be switched on and off and are always present even if the pin in question is configured as a high impedance input.</p>
<p>So while I was assuming that no current was flowing from the pin that was configured as a high impedance input, this diode was actually sourcing a fair amount of current into the gate of the NFET (and associated pull-down resistor) as the chip's ground rail rose above the negative terminal of the battery.</p>
<p>Perhaps this image drawn with a laptop trackpad on an airplane will make it more clear:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/diodes.png"><img class="aligncenter size-full wp-image-4324" title="diodes" src="http://ch00ftech.com/wp-content/uploads/2013/12/diodes.png" alt="" width="279" height="415" /></a></p>
<p>(I can't wait to get home)</p>
<p>In this doodle, the "load" resistor represent the current draw of the processor itself from its VCC to its GND pins.</p>
<p>I poured over this for a while, and I really don't think anything can be done besides falling back to the NFET/PFET combo that I originally had.  That's the only configuration where current leaking through these diodes does not prevent the FETs from turning off.</p>
<p>So the issue for me leading up to Christmas was that I needed to get these earrings done in a weekend, and I had just discovered the need for a PFET which I did not currently have in stock. This meant that I had to make everything happen with the original PCBs which were some of the ugliest circuits I've had to deal with...</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5260.jpg"><img class="aligncenter size-full wp-image-4311" title="IMG_5260" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5260.jpg" alt="" width="1024" height="683" /></a></p>
<h1>Power management</h1>
<p>Despite the ugliness of the circuit boards, I still pressed on to see if I could employ any of the power management techniques I discovered after I wrote my last post.</p>
<h3>Watchdog</h3>
<p>Because my earrings have no power switches, they are designed to go to sleep when in the presence of a magnetic field and then periodically check for that field to see if they should wake up.  They also need to monitor their batteries to detect when they drop below the maximum discharge voltage.  This was previously done by putting the chip into idle mode and waking it up every 8 seconds to read the hall-effect sensor and battery voltage.</p>
<p>Readers suggested using the watchdog timer to wake the device up from power-down mode.  Power-down mode draws much less current than the idle mode, but the part cannot be woken up from this mode using a typical software timer.  Fortunately, the ATTiny24 includes a "watchdog" timer.</p>
<p>A watchdog timer is meant to serve as a fail safe to protect a system controlled by a micro controller that's caught a bug.  Code programmed to utilize a watch dog will need to ping the watch dog at regular intervals to tell it that everything is okay.  If the code catches a bug and gets stuck somewhere, the watchdog can be programmed to run a special line of code to attempt recovery or restart the part entirely.</p>
<p>All the watchdog needs is a time out delay setting and an instruction of what to do when it times out.  Unlike the software timers left enabled in idle mode, the watch dog timer runs on its own special low-frequency oscillator that requires a very small amount of current and can continue to run in power-down mode. Figure 21-12 on the ATTiny24 datasheet specified a power-down current of around 3-5<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/power-down-watchdog.png"><img class="aligncenter size-full wp-image-4314" title="power-down-watchdog" src="http://ch00ftech.com/wp-content/uploads/2013/12/power-down-watchdog.png" alt="" width="633" height="396" /></a></p>
<p>I modified my code to look for the presence of a magnetic field, and then turn on the watch dog timer and drop into power-down mode.  I selected the watchdog prescaler options to have it trigger every 8 seconds, and I made no attempt to ping the watch dog to prevent it from timing out.  Every 8 seconds, it threw an interrupt that woke the part up and let it iterate through checking the hall effect sensor.</p>
<p>This was surprisingly easy to setup.  I did have one problem with it though. If the battery voltage dropped below the safe threshold while the part was asleep, I noticed that the suicide circuit wasn't activating and the part was remaining alive.</p>
<p>It turns out that my code continued to iterate after activating the suicide circuit, so even though power was disconnected, it made it far enough to get back to the power-command which also disabled the suicide circuit.</p>
<p>I think the reason I didn't see this before is that my new lower-power state allowed the part to generally survive longer off bypass capacitance.  This doesn't totally follow considering that the current draw before the power-down command hasn't changed, but I'm guessing that I was skating some edge case.</p>
<p>The problem was easy to solve by adding a 100ms timeout after the suicide command.</p>
<h3>ADC configuration</h3>
<p>In order to read my battery voltage accurately, my previous attempt fed the battery voltage through a voltage divider and into an ADC pin. The divider was necessary because the ADC's 1.1V reference voltage only allowed it to measure voltages under 1.1V.</p>
<p>The big problem with this solution is the need for the voltage divider.  These two resistors will continuously drain current out of the battery even when they're not in use.  Larger resistors will improve that, but once they get too large, the measurement will become very susceptible to noise.</p>
<p>One reader suggested a brilliant to use the ATTiny's ADC in a way I hadn't considered before.  Instead of using the 1.1V reference to measure the battery voltage, the battery voltage can be used to measure the 1.1V reference!</p>
<p>A reference voltage is simply what the ADC considers to be the highest possible input voltage.  An 8-bit ADC will split this voltage up into 256 possible input measurements, so if my battery voltage is used as reference and drops to 3.0V, I know that a reading of 256 from the ADC will correspond to 3.0V.</p>
<p>While the battery voltage is at 3.0V, a reading of the 1.1V reference will come out to:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_ee5f6f35e51819cfb11d6546dc890d91.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Large \frac{256}{3.0V}\times 1.1V \approx 93" /></span><script type='math/tex'>\Large \frac{256}{3.0V}\times 1.1V \approx 93</script></p>
<p>Perhaps a little counter-intuitively, if the battery voltage is higher, my reading will actually be <em>lower </em>using this method.</p>
<p>This probably isn't a great method if high precision is required as it allows for small variations in the 1.1V reference to have a greater impact on the measurement, but for my purposes, it's fine.  This allowed me to completely remove the voltage divider which not only saved power, but it also saved space on my tiny board.</p>
<h3>Pull up/down resistors</h3>
<p>On the topic of removing resistors, I was surprised by my choice of pull up/down resistors in the previous design.  I was using a 10k<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2e9ef3d6ef62a48d70720728d3e90e31.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Omega" /></span><script type='math/tex'>\Omega</script> pull up/down on the two FETs and the open-collector output of my hall-effect sensor.  This accounts for nearly 1mA of current draw even when the battery is all the way down to 3.0V.</p>
<p>I think I chose these small values while I was still paranoid about the board not shutting off, and I figured that smaller resistors would pull harder to shut the circuit down.</p>
<p>I quickly swapped these three components out for 470k<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2e9ef3d6ef62a48d70720728d3e90e31.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Omega" /></span><script type='math/tex'>\Omega</script> resistors, and they worked fine.</p>
<h1>Power results</h1>
<p>With these changes in place, I noticed a substantial decrease in power draw from my circuit.  While my previous sleep current was over 450<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A, my new current draw hovered around 25<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_52581.jpg"><img class="aligncenter size-full wp-image-4317" title="IMG_5258" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_52581.jpg" alt="" width="1024" height="683" /></a></p>
<p>This went up slightly when a battery activated the hall-effect sensor, but still not much:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_52611.jpg"><img class="aligncenter size-full wp-image-4319" title="IMG_5261" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_52611.jpg" alt="" width="1024" height="683" /></a></p>
<p>This is the state that the earrings will stay in when left in their box, and with such a small current draw, they will drain just 4% of the tiny 19mAh battery a day.  I'm curious to see if I can get it even smaller though as I may not really need the pull-up resistors at all since I'm using the two-FET solution.  I'll have to play around with it later.</p>
<h1>A moderately ruined Christmas</h1>
<p>The circuits for these earrings have seen some serious shit.  By the time I was buttoning up the circuits for final delivery, I had wires breaking after being soldered and desoldered a dozen times.  Traces were starting to lift up off the PCB.  Solder-bridges everywhere.  Hell, one of my batteries even exploded in the process...</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_5296.jpg"><img class="aligncenter size-full wp-image-4373" title="IMG_5296" src="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_5296.jpg" alt="" width="1024" height="683" /></a></p>
<p>The short story is that they were ugly as sin, and I didn't have enough time before the big holiday to fix them.</p>
<p>I explained to my sister that her gift may only be partially functional on Christmas day, and sure enough, the negative charging terminal on one of the earrings broke, so I was unable to charge it before giving it to her.</p>
<p>I took the earrings back and spent the last few weeks completely remaking their circuit boards until they looked like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_5648.jpg"><img class="aligncenter size-full wp-image-4374" title="IMG_5648" src="http://ch00ftech.com/wp-content/uploads/2014/01/IMG_5648.jpg" alt="" width="1024" height="683" /></a></p>
<p>I feel much better about giving them away in this state, and I'll be mailing them out soon.</p>
<h1>Conclusion</h1>
<p>This turned into an insanely wordy post, and I really blazed through a lot of content here without much explanation.  I plan for the CNC machine to be a regular guest on the ch00ftech stage though, so expect a bunch of future posts with much more detail on how it works and what it can do.</p>
<p>In the mean time, I'm going to take a much-needed nap.</p>
<hr />
<p><strong> Project files can be downloaded <a href="http://ch00ftech.com/wp-content/uploads/2014/01/Earrings-v1.1.zip">here</a>.</strong></p>
<hr />
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2014/01/20/cnc-machine-christmas-gifts-and-im-a-dope/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
		</item>
		<item>
		<title>Reverse engineering a Hit Clip</title>
		<link>http://ch00ftech.com/2013/12/31/reverse-engineering-a-hit-clip/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=reverse-engineering-a-hit-clip</link>
		<comments>http://ch00ftech.com/2013/12/31/reverse-engineering-a-hit-clip/#comments</comments>
		<pubDate>Tue, 31 Dec 2013 23:42:13 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Hit Clips]]></category>
		<category><![CDATA[audio]]></category>
		<category><![CDATA[digital audio]]></category>
		<category><![CDATA[reverse engineering]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=4326</guid>
		<description><![CDATA[God...dammit Background It's hard to see a child outside today without some kind of iDevice pumping high fidelity 192kbps stereo lossless audio into their shiny white headphones, but BACK IN MY DAY, the iPod hadn't been invented yet.  Pickings were &#8230; <a href="http://ch00ftech.com/2013/12/31/reverse-engineering-a-hit-clip/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/hit-clip.jpg"><img class="aligncenter size-full wp-image-4327" title="hit clip" src="http://ch00ftech.com/wp-content/uploads/2013/12/hit-clip.jpg" alt="" width="1024" height="682" /></a></p>
<p>God...dammit</p>
<p><span id="more-4326"></span></p>
<h1>Background</h1>
<p>It's hard to see a child outside today without some kind of iDevice pumping high fidelity 192kbps stereo lossless audio into their shiny white headphones, but <em>BACK IN MY</em> <em>DAY, </em>the iPod hadn't been invented yet.  Pickings were slim.  Walkmen were outdated, CD players were pricey and would skip if bumped around despite their ESP features, MiniDisk was another stillborn Sony format, and MP3 players were still ugly and ridiculously expensive (at least Apple fixed the ugly part).</p>
<p>Thus, Tiger Electronics, pioneers in the high tech market of McDonald's Happy Meal toys, invented "Hit Clips"</p>
<p><iframe width="584" height="438" src="http://www.youtube.com/embed/N9pgMmDmd8w?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>Hit Clips were small cheap digital audio players that could play music off of little plastic cartridges.  The audio was mono, sounded terrible, and only included a 60 second sample of a song.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5621.jpg"><img class="aligncenter size-full wp-image-4328" title="IMG_5621" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5621.jpg" alt="" width="1024" height="683" /></a></p>
<p>Better hold on to that patent Tiger...</p>
<p>Still, the songs were officially licensed and included bands like The Backstreet Boys, Aaron Carter, Sugar Ray, and ...Dreamstreet</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/Dream_street_blue_house.jpg"><img class="aligncenter size-full wp-image-4329" title="Dream_street_blue_house" src="http://ch00ftech.com/wp-content/uploads/2013/12/Dream_street_blue_house.jpg" alt="" width="635" height="456" /></a></p>
<p>The 00s were a very strange time for all of us...</p>
<p>Anywho, while helping my 17 year old cousin move some furniture, we came across a large collection of hit clip cartridges, but no player.  Struck with a wave of nostalgia, I asked if I could take one to do a tear down.</p>
<p>Thus this post.</p>
<h1>Teardown</h1>
<p>The hit clip cartridge has 8 metal contacts on the back:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5620.jpg"><img class="aligncenter size-full wp-image-4330" title="IMG_5620" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5620.jpg" alt="" width="1024" height="682" /></a></p>
<p>Taking it apart, I was hoping to find some identifiable piece of hardware, but instead found the chip-on-board construction that is so popular with super-low-cost low-power electronics along with a few discrete components.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5625.jpg"><img class="aligncenter size-full wp-image-4331" title="IMG_5625" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5625.jpg" alt="" width="1024" height="683" /></a></p>
<p>Under this blob of epoxy is a wire-bonded chip of silicon.  The song is likely hard coded directly into the silicon wafer rather than being programmed there after the fact using flash or OTP memory.  It's cheaper that way if you make enough units.</p>
<p>This didn't give me a whole lot to work from, but assuming the capacitor is a bypass capacitor (decent assumption), I at least had some idea of how to power the thing.  Poking around for a bit gave me this schematic:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/hitclipschem.jpg"><img class="aligncenter size-full wp-image-4332" title="hitclipschem" src="http://ch00ftech.com/wp-content/uploads/2013/12/hitclipschem.jpg" alt="" width="1024" height="768" /></a></p>
<p>I'm not sure what the two No Connect pins do, but apparently there was a version of the Hit Clip that allowed music to be recorded to special cartridges, so I'm guessing they have something to do with that.</p>
<p>I wasn't sure how much voltage the part needed, but a quick search on Ebay gave me some idea:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/ebay.png"><img class="aligncenter size-full wp-image-4333" title="ebay" src="http://ch00ftech.com/wp-content/uploads/2013/12/ebay.png" alt="" width="720" height="475" /></a></p>
<p>3 AAAs means 4.5V.  Also, can you believe people are bidding $40+ for these things?</p>
<p>Before I could get serious about debugging, I needed some way to connect traces to the board easily.  I ended up soldering on some header pins and plugging it into a breadboard:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5629.jpg"><img class="aligncenter size-full wp-image-4334" title="IMG_5629" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5629.jpg" alt="" width="1024" height="683" /></a></p>
<p>My original assumption was that the bottom-left pin was ground as it connected to the mystery chip more times than the other power-pin.  You'll note the scratch-outs indicate that I was wrong.  In that configuration, the chip drew 200+mA during the half-second that I left it connected.  Presumably there's a reverse bias protection diode that I was blowing up.</p>
<p>Swapping the power pins around, the current started at around 280<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A before dropping to zero.</p>
<p>Convinced that I had it right, I moved to the other pins.  There were four pins to chose from and a voltage measurement showed me that two of them were at the 4.5V rail while the other two were settled close to 0V.</p>
<table>
<tbody>
<tr>
<td>1</td>
<td>High</td>
</tr>
<tr>
<td>2</td>
<td>Low</td>
</tr>
<tr>
<td>3</td>
<td>High</td>
</tr>
<tr>
<td>4</td>
<td>Low</td>
</tr>
</tbody>
</table>
<p>Since I had already identified my two power pins, I had to assume that these four pins were used for data somehow and that the two high pins had internal pull up resistors.</p>
<p>Connecting Pin1 to ground sinks about 12mA from that pin.  12mA is much to high to be from a simple pull-up resistor.  My guess is that it's some kind of output pin to tell the player that the cartridge is inserted all the way. I decided to leave it alone and move on to Pin 3.</p>
<p>Connecting Pin 3 to ground caused the circuit's current draw to rise from zero up to 300<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A. Removing this short did nothing to change the current increase although it did settle down after about 60 seconds.</p>
<p>This is when I knew I was on to something.  60 seconds of current draw meant that this part was outputting its music sample!  I was expecting the player to need to do something more complicated like pull bytes of music off the cartridge over a SPI bus or at least provide a clock source, but it turns out that the cartridge can handle that all by itself.  I'm guessing that the two on-board series resistors are used for fine-tuning its internal clock source after the chip has been printed.</p>
<p>I quickly whipped out my oscilloscope and took a trace of Pin 2:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/scopetrace.png"><img class="aligncenter size-full wp-image-4335" title="scopetrace" src="http://ch00ftech.com/wp-content/uploads/2013/12/scopetrace.png" alt="" width="1191" height="816" /></a></p>
<p>Data!</p>
<p>I noticed an intermittent square wave with a period of almost exactly 24kHz and a duty cycle that varied with time.  Pin 4 had similar data.</p>
<p>So there was definitely something going on here, and it was definitely digital somehow, but I needed some way to capture loads of digital data to later analyze.  Fortunately, Santa gave me an 8 bit Saleae logic analyzer for Christmas:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/saleae.jpg"><img class="aligncenter size-full wp-image-4336" title="saleae" src="http://ch00ftech.com/wp-content/uploads/2013/12/saleae.jpg" alt="" width="1024" height="683" /></a></p>
<p>I actually picked up the Hit Clip while looking for a good project to test this thing out.  It's a really nice device, and the Windows/Mac/Linux compatible software is really slick.</p>
<p>Anywho, with the Saleae connected to Pin 2 and Pin 4, I reactivated the circuit and took a trace at a 24MHz sample rate.  I came up with this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/saleae-trace.png"><img class="aligncenter size-full wp-image-4337" title="saleae trace" src="http://ch00ftech.com/wp-content/uploads/2013/12/saleae-trace.png" alt="" width="1647" height="986" /></a></p>
<p>It was strange at first to see how the two data lines appeared to take turns, but once I remembered that Hit Clips only output in mono, it made a lot more sense.  These two lines are encoding the same mono stream of audio.</p>
<p>Looking closer at the low-going blips, I noticed that they were quantized.  The length of each blip was always near some integer multiple of 0.3333<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>s.</p>
<p>Knowing what I know about audio amplifiers, I theorized that these two outputs are meant to directly drive the push and pull FETs of a <a href="http://en.wikipedia.org/wiki/Class-D_amplifier">class D amplifier</a> in real time.  In other words, a blip on one line pulls the waveform output voltage up while a blip on the other pulls it down.  The width of the blip indicates how hard (or for how long) it pulls.</p>
<p><strong>Update: </strong>Redditor urquan points out that this kind of modulation is called <a href="http://en.wikipedia.org/wiki/Delta-sigma_modulation">Sigma-Delta Modulation</a>.</p>
<p>While it's technically a digital output, it's encoded in such a way that it can be fed directly into an analog circuit.</p>
<p>I figured that if I could give myself a stream of this data, I could probably simulate the output digitally.  To cut down on the number of samples, I exported the trace to a CSV file that only records timestamps when something changes.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/saleae-output.png"><img class="aligncenter size-full wp-image-4339" title="saleae output" src="http://ch00ftech.com/wp-content/uploads/2013/12/saleae-output.png" alt="" width="534" height="810" /></a></p>
<p>In order to make use of this data, I just needed to record how much time passed between a signal dropping low and rising up again, and I should have such data points arriving at almost exactly 24kHz.  All of the data from one pin was given a positive value while the data from the other pin was given a negative value.</p>
<p>I also tried quantizing the data by dividing the time delays by 0.33333<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>s, and while this worked for small numbers, I noticed that some of the larger numbers fell pretty far from a solid integer.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/divby3.png"><img class="aligncenter size-full wp-image-4340" title="divby3" src="http://ch00ftech.com/wp-content/uploads/2013/12/divby3.png" alt="" width="603" height="555" /></a></p>
<p>It looked like 0.33333<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>s was a bad estimate of the actual quantization time.  Thinking a little more critically, I noticed that a 24kHz wave has a period of 41.67<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>s.  When divided by my quantization time, this comes out to almost exactly 125 which is pretty darn close to 128, a power of two.</p>
<p>Changing my quantization time to 0.3255<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>s or <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_d7efcee3110178fb773e908bd2b03eda.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\frac{1}{128\times 24kHz}" /></span><script type='math/tex'>\frac{1}{128\times 24kHz}</script> yielded much better results:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/divby3255.png"><img class="aligncenter size-full wp-image-4341" title="divby3255" src="http://ch00ftech.com/wp-content/uploads/2013/12/divby3255.png" alt="" width="603" height="555" /></a></p>
<p>Now the question is what to do with these numbers.</p>
<p>My first attempt involved just pumping them into a WAV file and taking a listen.  With this setup, all of the negative numbers were negative points on the waveform.  Here's the first 400 samples:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/straightwav.png"><img class="aligncenter size-full wp-image-4345" title="straightwav" src="http://ch00ftech.com/wp-content/uploads/2013/12/straightwav.png" alt="" width="937" height="523" /></a></p>
<p>I took these values, gained them up to fill a 16 bit WAV file and took a listen:</p>
<object width="100%" height="81"><param name="movie" value="http://player.soundcloud.com/player.swf?url=https%3A%2F%2Fsoundcloud.com%2Fch00ftech%2Fstraightwav"></param><param name="allowscriptaccess" value="always"></param><embed width="100%" height="81" src="http://player.soundcloud.com/player.swf?url=https%3A%2F%2Fsoundcloud.com%2Fch00ftech%2Fstraightwav" allowscriptaccess="always" type="application/x-shockwave-flash"></embed></object>
<p>Firstly, I was shocked to get anything even closely resembling audio.  Especially something so recognizable.  That being said, the audio quality isn't the best.  The raw values out of the cartridge only extend from around -60 to +60 which leads me to believe that it's encoded as a 7-bit signed integer (-64 to +63).  7-bit audio isn't exactly lossless, but I wasn't convinced that this was the best I could do.</p>
<p>I found two problems with the way I was decoding the audio:</p>
<h3>Empty samples</h3>
<p>I noticed looking at the Saleae trace that there were many periods in the 24kHz digital data stream where neither trace showed a blip.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/noblip.png"><img class="aligncenter size-full wp-image-4350" title="noblip" src="http://ch00ftech.com/wp-content/uploads/2013/12/noblip.png" alt="" width="1055" height="905" /></a></p>
<p>Because my script was only looking at the blips, I simply skipped passed these data points.  The end result was that the music played slightly faster than it should have.  This was obvious when my output WAV file was shorter than my original trace.</p>
<p>I modified the script to detect when more than <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_e8eaa034768987e29c645972e4862a53.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\frac{1}{24kHz}" /></span><script type='math/tex'>\frac{1}{24kHz}</script> passed between consecutive blips and interpolate blips at the proper places by just repeating the previous value.</p>
<h3>Push Pull simulation</h3>
<p>I noticed later on that I wasn't really simulating the push-pull driver that the Hit Clip likely used.  The digital encoding is actually more of a derivative of the output waveform rather than the waveform itself.  In other words, a positive value doesn't guarantee that the output will be positive, but rather that it will have a positive slope.  A larger value specifies a larger slope.</p>
<p>I modified my script to keep a running value starting from zero where the incoming value from the cartridge is added to the previous value to generate the next one.  There was a problem of DC drift because the values don't all add up to zero.  My first time through, I found that the largest value was 1 while the smallest value was somewhere around -50,000 which overflowed my signed 16 bit WAV output.</p>
<p>I solved this by multiplying the output value by 0.99 before storing it.  This acts as a very simple high pass filter as DC offsets will slowly drop to zero over time.</p>
<p>The first 400 samples now looked like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/pushpullwav.png"><img class="aligncenter size-full wp-image-4352" title="pushpullwav" src="http://ch00ftech.com/wp-content/uploads/2013/12/pushpullwav.png" alt="" width="916" height="497" /></a></p>
<p>And it sounded like this:</p>
<object width="100%" height="81"><param name="movie" value="http://player.soundcloud.com/player.swf?url=https%3A%2F%2Fsoundcloud.com%2Fch00ftech%2Fpushpull"></param><param name="allowscriptaccess" value="always"></param><embed width="100%" height="81" src="http://player.soundcloud.com/player.swf?url=https%3A%2F%2Fsoundcloud.com%2Fch00ftech%2Fpushpull" allowscriptaccess="always" type="application/x-shockwave-flash"></embed></object>
<h1>Looking forward</h1>
<p>The audio is 100% recognizable which is much more than I thought I'd get out of this project.  It's far from perfect, but with no base of comparison, it's possible that Hit Clips really just sounded that bad.  There's also probably a large amount of filtering performed by the Hit Clip player that I would have difficulty trying to replicate.  They likely mixed the tracks specifically to tailor to whichever audio stages they could make cheaply and easily, so without more information, there isn't a whole lot I can do to fix it.</p>
<p>The big problem with a project like this is that audio is just so easy to pull out of a circuit.  Human ears are very good at picking signal out of noise, so it's difficult to tell whether or not I'm doing this right.  Heck, while I was trying to get the WAV script working in Python, there were times when I had selected the wrong bit depth and produced cacophonous full scale noise, but I was still able to hear the Jackson Five playing underneath it all.</p>
<p>Looking at the waveform, there isn't anything totally obvious that I could be doing wrong, and yet, I can't get the audio to sound much better than the garbled samples you've heard above.</p>
<p>Below, I've provided a link where you can download a CSV file of the trace from my Saleae as well as my Python scripts.  If you have some experience with audio processing, and have an idea for how to improve the audio output, feel free to download it and give it a try.  Just make sure to report back if you figure anything out!</p>
<h1>Update 1-2-2014</h1>
<p>Reader Cory took up my challenge to improve the sound quality, and actually fixed it up a bunch!  He method was explained in an email to me:</p>
<blockquote><p>Technically, the Hit Clip audio is PWM, but the principles for demodulating are the same. You need nothing more than a low-pass filter. The Hit Clip devices would have contained a pair of transistors, an RC or LC filter with a cutoff frequency around 20 kHz, and a speaker. You can also use a digital low-pass filter to achieve the same result.</p>
<p><span style="font-family: Georgia, 'Bitstream Charter', serif; font-style: italic;">I have attached a script I wrote to do exactly that. It reads in the CSV data you provided, converts ch0 and ch1 into ternary (+1, 0, -1) representation, and expands it into samples at a rate of 24*128 kHz. The expanded data is decimated to 48 kHz using SciPy, which simultaneously low-pass filters the data at the Nyquist rate of 24 kHz. That data is then written out to a WAV file for your listening enjoyment. The results are surprisingly good! It definitely sounds more like what I remember it was like as a kid.</span></p></blockquote>
<p>Cory's Python script can be downloaded <a href="http://ch00ftech.com/wp-content/uploads/2013/12/lowpassfilter.py_.zip">here</a>.  And here's the result:</p>
<object width="100%" height="81"><param name="movie" value="http://player.soundcloud.com/player.swf?url=https%3A%2F%2Fsoundcloud.com%2Fch00ftech%2Fhit-clip-audio-improved-by"></param><param name="allowscriptaccess" value="always"></param><embed width="100%" height="81" src="http://player.soundcloud.com/player.swf?url=https%3A%2F%2Fsoundcloud.com%2Fch00ftech%2Fhit-clip-audio-improved-by" allowscriptaccess="always" type="application/x-shockwave-flash"></embed></object>
<p>Sounds great!</p>
<hr />
<p><strong>Download the files for this project here: <a href="http://ch00ftech.com/wp-content/uploads/2013/12/Hit-Clip.zip">Hit-Clip.zip</a></strong></p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/12/31/reverse-engineering-a-hit-clip/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
		</item>
		<item>
		<title>A Christmas CaroLED</title>
		<link>http://ch00ftech.com/2013/12/17/a-christmas-caroled/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=a-christmas-caroled</link>
		<comments>http://ch00ftech.com/2013/12/17/a-christmas-caroled/#comments</comments>
		<pubDate>Tue, 17 Dec 2013 06:31:41 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Beat Tracking Windshield Wipers]]></category>
		<category><![CDATA[LED Marquee]]></category>
		<category><![CDATA[reverse engineering]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=4217</guid>
		<description><![CDATA[Happy Holidays! Background When I was younger, my father used to bring me to see a local stage production of A Christmas Carol every year performed by just 7 actors.  It's a really excellent tale, and it's no wonder that &#8230; <a href="http://ch00ftech.com/2013/12/17/a-christmas-caroled/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><iframe width="584" height="329" src="http://www.youtube.com/embed/X2KLnThDfNw?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>Happy Holidays!</p>
<h1><span id="more-4217"></span>Background</h1>
<p>When I was younger, my father used to bring me to see a local stage production of <span style="text-decoration: underline;">A Christmas Carol</span> every year performed by just 7 actors.  It's a really excellent tale, and it's no wonder that it's been told and retold in so many formats and renditions.</p>
<p>The story is a dark and terrifying take on what is otherwise a bright and cheery holiday, and it provides a stark contrast to typical upbeat yuletide fodder.  Unfortunately, it's pretty hard to convey a story like this in holiday lights, so I thought, why not just tell the story itself?</p>
<p>Because the book was published over 170 years ago, it has long since entered the public domain, and anyone looking to read a copy can just go <a href="http://web.archive.org/web/20080825120326/http://etext.lib.virginia.edu/toc/modeng/public/DicChri.html">here</a> though you can probably find it in hundreds of places online.  Living on the first floor of an apartment building, I thought it would be fun to allow passers by to take in a little Dickens if they care to stop for a while. What's especially neat about the book is how incredibly well-known it is.  I think that most people could turn to just about any point in the story and know what's going to happen next (even folks who haven't read it).</p>
<p>That's how I came up with this sign.  Anyone curious about what the sign is saying can probably identify the book in a matter of seconds and be reminded of this awesome holiday tale.  If they like, they can read the whole thing in one sitting (although I hope I don't have too many people hanging outside my apartment doing that).</p>
<p>The end result is a piece of software that controls a "GeekCatch" 3-color LED marquee that I picked up off <a href="http://www.amazon.com/gp/product/B0055PKD2U/ref=oh_details_o00_s00_i00?ie=UTF8&amp;psc=1">Amazon</a> for $110.  This is certainly not the only thing I plan on doing with the sign, but I thought it was a great way to get acquainted with how it works over the holidays.</p>
<h1>Display</h1>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/photo.jpg"><img class="aligncenter size-full wp-image-4226" title="photo" src="http://ch00ftech.com/wp-content/uploads/2013/12/photo.jpg" alt="" width="1024" height="768" /></a></p>
<p>The display is an 80x7 array of red and green LEDs that can be combined to produce a few shades of Amber.  The refresh rate is a little low which makes it show up funny in video, but it's perfectly readable in real life.  It comes with a remote control and a pretty long serial cable for programming.  The remote control works, but it has the worst button layout.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/remote.jpg"><img class="aligncenter size-full wp-image-4228" title="remote" src="http://ch00ftech.com/wp-content/uploads/2013/12/remote.jpg" alt="" width="768" height="1024" /></a></p>
<p>Note that the CAPS key is in the middle of the arrows and the enter key is in the top right (it's the one below "Run").</p>
<p>Programming over a serial port is obviously much more convenient.  The software isn't beautiful, but it lets you input the text, font, color, and animation style you want, and it sends it out to the display over a serial connection.  There is no documentation of this protocol anywhere, but by looping back the serial output into an input using "Free Virtual Serial Ports Configuration Utility" (some freeware app I found online), I was able to reverse engineer it.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/serial-port-setup.png"><img class="aligncenter size-full wp-image-4230" title="serial port setup" src="http://ch00ftech.com/wp-content/uploads/2013/12/serial-port-setup.png" alt="" width="1381" height="939" /></a></p>
<h1>GeekCatch LED Marquee Text Protocol</h1>
<p>The marquee operates at 9600 baud and sends data over as plain ASCII.</p>
<h3>Preamble</h3>
<p>It always starts with a header that looks like this:</p>
<pre>~128~f01</pre>
<ul>
<li><strong>~128~</strong> is the "address", though I don't know how you'd have multiple marquees on the same bus.</li>
<li><strong>f01</strong> tells the marquee to store the message in file location 1.  The sign can store 99 files, though they all share the same memory, so you can either have one huge file or a bunch of small ones.</li>
</ul>
<p>After this preamble, you need to specify an animation, color, and font, and speed.</p>
<h3>Animation style</h3>
<p>Any text is always prefaced with an uppercase letter which specifies the animation style.<strong> </strong>The sign has 24 different display styles and a 25th which simply cycles through all of the options.  These animations are all designed for text that fits on the screen in its entirety. If all of the text on a single line won't fit on the screen at once, it defaults to a right to left scroll.  Text can only have a single animation style per line.</p>
<p>The animations are designated as follows:</p>
<table>
<tbody>
<tr>
<td>A</td>
<td>Random Cycle</td>
</tr>
<tr>
<td>B</td>
<td>Static</td>
</tr>
<tr>
<td>C</td>
<td>Open from right</td>
</tr>
<tr>
<td>D</td>
<td>Open from left</td>
</tr>
<tr>
<td>E</td>
<td>Open from center</td>
</tr>
<tr>
<td>F</td>
<td>Open to center</td>
</tr>
<tr>
<td>G</td>
<td>Cover from center</td>
</tr>
<tr>
<td>H</td>
<td>Cover from right</td>
</tr>
<tr>
<td>I</td>
<td>Cover from left</td>
</tr>
<tr>
<td>J</td>
<td>Cover to center</td>
</tr>
<tr>
<td>K</td>
<td>Scroll up</td>
</tr>
<tr>
<td>L</td>
<td>Scroll down</td>
</tr>
<tr>
<td>M</td>
<td>Interlace to center</td>
</tr>
<tr>
<td>N</td>
<td>Interlace cover</td>
</tr>
<tr>
<td>O</td>
<td>Cover up</td>
</tr>
<tr>
<td>P</td>
<td>Cover down</td>
</tr>
<tr>
<td>Q</td>
<td>Scan line</td>
</tr>
<tr>
<td>R</td>
<td>Explode</td>
</tr>
<tr>
<td>S</td>
<td>Pac-man</td>
</tr>
<tr>
<td>T</td>
<td>Fall+stack</td>
</tr>
<tr>
<td>U</td>
<td>Shoot</td>
</tr>
<tr>
<td>V</td>
<td>Flash</td>
</tr>
<tr>
<td>W</td>
<td>Random (pixels are added randomly)</td>
</tr>
<tr>
<td>X</td>
<td>Slide in</td>
</tr>
</tbody>
</table>
<h3>Color</h3>
<p>Color is specified by a backslash followed by a lower case letter.  It can be specified anywhere in a line and will apply to all of the text following the marker until the next marker.</p>
<table>
<tbody>
<tr>
<td>\a</td>
<td>Red</td>
</tr>
<tr>
<td>\b</td>
<td>Bright red</td>
</tr>
<tr>
<td>\c</td>
<td>Orange</td>
</tr>
<tr>
<td>\d</td>
<td>Bright Orange</td>
</tr>
<tr>
<td>\e</td>
<td>Yellow</td>
</tr>
<tr>
<td>\f</td>
<td>Bright yellow (for some reason, this always shows as red on my display)</td>
</tr>
<tr>
<td>\g</td>
<td>Green</td>
</tr>
<tr>
<td>\h</td>
<td>Bright green</td>
</tr>
<tr>
<td>\i</td>
<td>Layer mix (rainbow)</td>
</tr>
<tr>
<td>\j</td>
<td>Bright layer mix</td>
</tr>
<tr>
<td>\k</td>
<td>Vertical mix</td>
</tr>
<tr>
<td>\l</td>
<td>Saw tooth mix</td>
</tr>
<tr>
<td>\m</td>
<td>Green on red</td>
</tr>
<tr>
<td>\n</td>
<td>Red on green</td>
</tr>
<tr>
<td>\o</td>
<td>Orange on red</td>
</tr>
<tr>
<td>\p</td>
<td>Yellow on green</td>
</tr>
</tbody>
</table>
<p>Note that those last four are nauseating and impossible to read.</p>
<h3>Fonts</h3>
<p>Similar to colors, fonts can be specified at any point in a block of text.  They also use a backslash and a set of lowercase letters. For some reason, a lot of the fonts don't seem to work over serial and just show up as the default font. They all work with the remote control though as far as I've bothered to check.</p>
<table>
<tbody>
<tr>
<td>\q</td>
<td>5x6 Short</td>
</tr>
<tr>
<td>\r</td>
<td>5x11 Short-wide (not supported)</td>
</tr>
<tr>
<td>\s</td>
<td>7x6 Default</td>
</tr>
<tr>
<td>\t</td>
<td>7x11 Wide (not supported)</td>
</tr>
<tr>
<td>\u</td>
<td>7x9</td>
</tr>
<tr>
<td>\v</td>
<td>7x17 Xtra wide (not supported)</td>
</tr>
<tr>
<td>\w</td>
<td>Small</td>
</tr>
</tbody>
</table>
<h3>Speed</h3>
<p>Speed can be specified anywhere in a file and corresponds to the entire file (shared across multiple lines). It specifies the speed of the animations.  These are selected with <strong>\Y</strong> followed by a number 1-8 where higher is slower. If you're trying to display a long string of text that will revert to the default scrolling animation, your only options are really Y8 and Y3.  Any other speed doesn't mesh well with the refresh rate of the display and is nearly impossible to read while it's moving.  Y8 is painfully slow though, so really Y3 is your only option.</p>
<p>A pause of designated length can also be specified by inserting <strong>\Z</strong> followed by a number 1-8.  Higher indicates a longer pause before moving to the next section of animated text.</p>
<h3><span style="font-size: 10px; letter-spacing: 0.1em; line-height: 2.6em; text-transform: uppercase;">Ending</span></h3>
<p>Lines, files, and transmissions are all terminated by a different number of carriage return ASCII symbols (ASCII code 0x0D or \x0D in Python).</p>
<ul>
<li>Line - One carriage return</li>
<li>File - Two carriage returns</li>
<li>Transmission - Three carriage returns</li>
</ul>
<p>Note that multiple files can be sent by sending "fxx" and a second message after a double carriage return where xx designates the file number.</p>
<h3>Execute file</h3>
<p>When multiple files are stored on the display, a previously sent file can be recalled and displayed by issuing the following command:</p>
<pre>~128~XR01\x00\x00\x00\x00\x00\x00\x0D\x0D</pre>
<p>Where the \x00s represent a null character (0x00) and \x0Ds represent carriage returns.  Not exactly sure why so many null characters are required, but it doesn't work without them.</p>
<h3>Other info</h3>
<p>The display does not handle memory overflows gracefully.  I found that I could fit about 7485 characters of text into its file buffer until it crashed and just rebooted.</p>
<p>The current temperature can be displayed by sending:</p>
<pre>~128~XC\x00<span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00</span><span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00</span><span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00</span><span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00</span><span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00</span><span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00</span><span style="font-family: 'Courier 10 Pitch', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">\x00\x0D\x0D</span></pre>
<p>Again, as in the "execute file" section, this command must also be terminated with a bunch of null characters (8 this time).  The thing apparently has a thermometer.  I never tested it, so I don't know if it's accurate.  It's kind of a silly feature for an indoor display.</p>
<p>There are also a bunch of other supported animations, special characters, and clock features.  I don't care to look into them right now, but I will update this page in the future if I ever have a need to figure them out.</p>
<h1>Image protocol</h1>
<p>Custom graphics can be sent to the display as well.  Each image is sent with the following format:</p>
<pre> ~128~GA#####...#####\x0D\x0D</pre>
<p><strong>A</strong> represents the graphic selection.  The device has 8 banks A-G where you can send images.</p>
<p>The <strong>#</strong> symbols are the body of the image.  Image data is sent to the display left to right, top to bottom with each bit representing a single pixel of the display.  This data is sent four different times each time representing a different color.</p>
<p>The first two times represent red while the second two represent green.  This duplication allows you to have two brightness levels of each color as well as multiple different mixing levels for producing orange or yellow colors.</p>
<p>Once the image is stored, it needs to be recalled.  This can be done in the body of a typical text message by including the character <strong>^ </strong>followed by a letter <strong>I</strong> through <strong>P</strong>.  Don't ask me why I-P are used to represent A-G, but that's the way it works.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5286.jpg"><img class="aligncenter size-full wp-image-4224" title="IMG_5286" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5286.jpg" alt="" width="1024" height="683" /></a></p>
<h1>Taking a look inside</h1>
<p>This sign has a beeping feature which can be used to assign points in a message where the sign should beep.  I have no idea why that's a feature, but there it is. It also emits a beep when it receives a new serial command.  This is super <strong>super</strong> annoying.  There's no way to turn it off, so I thought the easier solution was just to remove the source of the beep.</p>
<p>The sign came apart easily once I removed the two screws from either end.  The circuit board slid out along a pair of rails and looks more or less exactly as you'd expect.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5239.jpg"><img class="aligncenter size-full wp-image-4220" title="IMG_5239" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5239.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5244.jpg"><img class="aligncenter size-full wp-image-4222" title="IMG_5244" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5244.jpg" alt="" width="1024" height="683" /></a></p>
<p>The front is covered in 10 8x8 LED matrices, but the display is only 7 pixels high.  This was fixed by literally blacking out a row of LEDs with a marker.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5242.jpg"><img class="aligncenter size-full wp-image-4221" title="IMG_5242" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5242.jpg" alt="" width="1024" height="683" /></a></p>
<p>The hardware probably can't even drive these LEDs, so they were likely blacked out to prevent light from bleeding over from neighboring LEDs.</p>
<p>The back is mostly unremarkable except for a small removable PCB:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5246.jpg"><img class="aligncenter size-full wp-image-4223" title="IMG_5246" src="http://ch00ftech.com/wp-content/uploads/2013/12/IMG_5246.jpg" alt="" width="1024" height="683" /></a></p>
<p>The buzzer is easily identified as the black circular thing at the top right.  The battery on the top left is likely to keep the internal realtime clock (used for time display purposes) running.  I have no idea what the DIP switch is used for.</p>
<p>I might look into this board further in an upcoming project, but for the time being, I wanted to get my display working again, so I removed the buzzer and reassembled the display.</p>
<h1>Scrolling a LOT of text</h1>
<p>My plan for this display was to scroll a <strong>lot</strong> of text, and as I said before, the text buffer inside the marquee only supports about 7,000 characters or so.</p>
<p>This of course meant that I had to send the text in sections, but there was a problem:  once the display reaches the end of file, it just starts back immediately at the beginning.  There's also no way to read back from the display exactly where it is in the file.  In other words, I had to find a way to send the subsequent section of text "open loop".</p>
<p>Fortunately, the display uses a fixed-width font.  It's not super easy on the eyes, but it does mean that I just need to count how many characters I've sent in order to predict how long it will take to scroll.  Through some trial and error, I discovered that it takes almost exactly 137ms per character at speed setting 3 with the default font.  I also had to account for how long it took the last character displayed to reach the end of the screen, so I added 15 character's worth of time to each timeout period.</p>
<p>The body of text itself is captured from a text document and "cleaned".  I simply made an array of acceptable characters (numbers, letters, uppercase, lowercase, some symbols) and had it only copy over characters that were on that list.  This isn't super efficient, but it works.  Too lazy to clean up my input text before feeding it in, there are multiple sections where and entire line of text is nothing but formatting symbols (this was captured from a website), so I had to program in a special case for an input string of length zero.</p>
<p>Once the string is cleaned, I add 20 or so blank spaces to the end to allow the text to scroll completely off the display before transmitting new text.</p>
<p>The code is incredibly simple and can be found at the bottom of this page.</p>
<h1>Conclusion</h1>
<p>I have an upcoming project that requires a large LED matrix.  I was originally planning on making one from scratch, but after playing with this thing for a while, I think I'll be sticking with it.  The low refresh rate leaves something to be desired, but at $110, it's a bargain and very easy to set up.  There are all kinds of crazy things I want to get it to show now.  Time? Date? Stock prices? Bitcoin prices?  Caller ID? Maybe put one on my bike and use it to say things to rude drivers?</p>
<hr />
<p><strong>Project files can be downloaded <a href="http://ch00ftech.com/wp-content/uploads/2013/12/Christmas-CaroLED.zip">here</a></strong></p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/12/17/a-christmas-caroled/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>Light Up Earrings</title>
		<link>http://ch00ftech.com/2013/10/08/light-up-earrings/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=light-up-earrings</link>
		<comments>http://ch00ftech.com/2013/10/08/light-up-earrings/#comments</comments>
		<pubDate>Tue, 08 Oct 2013 03:52:54 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Earrings]]></category>
		<category><![CDATA[3d modeling]]></category>
		<category><![CDATA[leds]]></category>
		<category><![CDATA[lithium polymer]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=4068</guid>
		<description><![CDATA[I think LEDs are rapidly becoming the "put a bird on it" of my blog... Background Something like two years ago, I had a friend who wore a pair of Christmas light earrings around the holidays.  They were the big &#8230; <a href="http://ch00ftech.com/2013/10/08/light-up-earrings/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><iframe width="584" height="329" src="http://www.youtube.com/embed/K-yV72fs4qY?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>I think LEDs are rapidly becoming the "put a bird on it" of my blog...</p>
<h1><span id="more-4068"></span>Background</h1>
<p>Something like two years ago, I had a friend who wore a pair of Christmas light earrings around the holidays.  They were the big bulby kind, and they looked so much like the real thing that she was constantly asked if they actually lit up.  That got me thinking: how hard would it be to make a pair of Christmas light earrings light up?</p>
<p>I purchased a few glass Christmas light bulbs and quickly set to work cutting them apart:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_8898.jpg"><img class="aligncenter size-full wp-image-4069" title="IMG_8898" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_8898.jpg" alt="" width="1024" height="683" /></a></p>
<p>I even bought a special diamond wheel for my Dremel tool for the project.  The plan was to remove the base from one bulb and the top from another and then reassemble them with a small circuit inside that powered an LED.</p>
<p>I really wanted to match the even glow of frosted holiday lights which ironically meant that I couldn't use frosted bulbs.  Frosted bulbs are typically coated on the inside with a frosting layer that flakes off very easily.  The plan was to use non-frosted bulbs and then frost the inside with some glass etchant:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_8902.jpg"><img class="aligncenter size-full wp-image-4070" title="IMG_8902" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_8902.jpg" alt="" width="1024" height="683" /></a></p>
<p>I even had plans to build a base station that looked like a conventional light socket.  Screwing the bulb into the socket would start it charging.  At the time, this was achieved using a tilt sensor and...to be honest, I never got a chance to work out the details.</p>
<p>See, no matter how bright of an LED I tucked inside my frosted bulb, I was still unable to achieve that brilliant even glow of an incandescent light.  This was partly because of how small of a point light source an LED represents but also because high intensity LEDs tend not to be the diffuse variety.  Even scuffing up the LED with sandpaper didn't help much.  I benched the project.</p>
<p>My pre-project shopping spree left me with a dozen Christmas lights in various states of broken and a small collection of very very small lithium polymer batteries:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/battery.jpg"><img class="aligncenter size-full wp-image-4071" title="battery" src="http://ch00ftech.com/wp-content/uploads/2013/09/battery.jpg" alt="" width="1024" height="768" /></a></p>
<p>These things are seriously tiny.  They were the smallest I could find online, and they just so happened to fit into the base of a Christmas light.  Although their 19mAh of charge is tiny compared to just about any other battery I've dealt with, it can still provide enough energy to run an LED for a few hours.</p>
<p>I found them on <a href="http://www.all-battery.com/tenergy3.7v19mahlipobattery-30544-0.aspx">All-Battery.com</a>, and unfortunately, they're no longer in stock (unless you want to order 30,000 of them).  I found a seller on Alibaba who sells them, but they're out of stock as well.</p>
<p>So a few weeks ago, I realized that I was sitting on some pretty rare parts and decided that I wanted to finalize my earrings.</p>
<h1>Earrings</h1>
<p>The goal of this project was to create a pair of tiny light-up earrings that are totally unobtrusive and look and feel more or less like normal earrings.  This involved creating the smallest circuit board I've ever made and packing it into a tiny case where none of its components would be accessible from the outside.</p>
<p>It's also the first project I've ever made that can recharge its own batteries.</p>
<h1>Fancy lights</h1>
<p>Before I dive into the details of the battery management and other electrical aspects of the design, I think I should cover the aesthetics and some of the non-electrical design decisions I made along the way.</p>
<p>The final circuit and battery combo looks like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4959.jpg"><img class="aligncenter size-full wp-image-4072" title="IMG_4959" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4959.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4962.jpg"><img class="aligncenter size-full wp-image-4073" title="IMG_4962" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4962.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/10/IMG_4960.jpg"><img class="aligncenter size-full wp-image-4135" title="IMG_4960" src="http://ch00ftech.com/wp-content/uploads/2013/10/IMG_4960.jpg" alt="" width="1024" height="683" /></a></p>
<p>The six lights on the front are programmed to light up in sequence going around the circle.</p>
<p>Now, you might be wondering how I developed the firmware for such a tiny platform that doesn't have so much as a programming header.  My original thought was to work out the firmware on a larger development platform and then when I was satisfied, program the parts before soldering them down.  Of course, you can't exactly plug a QTFN part into a breadboard for programming, so that would require something like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/10/GP-QFN20-0.5-3.jpg"><img class="aligncenter size-full wp-image-4137" title="GP-QFN20-0.5-3" src="http://ch00ftech.com/wp-content/uploads/2013/10/GP-QFN20-0.5-3.jpg" alt="" width="560" height="600" /></a></p>
<p>And these usually cost around <a href="http://www.wvshare.com/product/GP-QFN20-0.5.htm">$80</a>.  I wasn't quite ready to drop that much dough on something I probably wouldn't get a whole lot of use out of, so I came up with a different solution.</p>
<p>Both of the earrings started their lives like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4944.jpg"><img class="aligncenter size-full wp-image-4074" title="IMG_4944" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4944.jpg" alt="" width="1024" height="682" /></a></p>
<p>You might already recognize the bottom right portion as the front face.  The top right section is the "brain" which houses the microcontroller and just about everything else, and the top left section is the programming header.</p>
<p>The idea was that once I was happy with the firmware, I was able to permanently slice off the programming header and the LED face.  The LED section was then reattached with some small wires that wrapped around the battery.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4958.jpg"><img class="aligncenter size-full wp-image-4075" title="IMG_4958" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4958.jpg" alt="" width="1024" height="683" /></a></p>
<p>As you can imagine, this process really pushed my fabrication skills to the limit. Many of the traces on this PCB are only 10 thousands of an inch thick. The boards came out much better than I expected.  And that was kind of a problem.</p>
<p>When printing a board, you have the option of leaving the dimension layer on or off.  The dimension layer shows all the lines that represent the outer edges of the board.  Because this layer serves as a method of documentation rather than a representation of anything physical on the board itself like silkscreen or copper, it usually has "zero" thickness which means that the printer makes it as small as possible while still being visible.</p>
<p>Typically, this line is so thin that large portions of it don't make it to the end of the etching process.  This is why I had no qualms with running traces straight through this outline between the three mini-boards.</p>
<p>Surprisingly, this time my boards came out so well that these tiny lines of copper were actually shorting out some of my traces!  Seriously, look how small these things are:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/hairtrace.jpg"><img class="aligncenter size-full wp-image-4076" title="hairtrace" src="http://ch00ftech.com/wp-content/uploads/2013/09/hairtrace.jpg" alt="" width="1024" height="682" /></a></p>
<p>That clear looking fiber is a piece of hair from my head; I measured its thickness to be 0.003 inches.  That's a seriously tiny trace. I didn't even have to do anything special to get this result.  I just carefully followed my <a title="The Ch00ftech Guide to PCB Printing" href="http://ch00ftech.com/2012/11/12/the-ch00ftech-guide-to-pcb-printing/">normal printing methods</a>.</p>
<p>Because of their size, these boards were also the first of mine to require 0402 components.  Just about all of my boards up to this point have used 0603 components which are 0.06"x0.03".  These new parts are 0.04"x0.02".  They're small.  Small enough that I had to whip out <a href="http://ch00ftech.com/2010/09/08/goggles-came/">these bad boys</a> just to see what I was doing. For my earlier prototypes, I actually managed to assemble each component by hand with careful use of a pair of tweezers, but I soon switched to solder paste.</p>
<p>One thing I learned this time around is that solder paste doesn't need nearly as high of a temperature to melt as regular solder does.  For a while, I was cranking my hot air rework gun up to 360-400C figuring that it should be around the same temperature as my soldering iron.</p>
<p>What I later learned is that only 260C or so is required to get solder paste to flow.  I bet you can tell which of these two PCBs was made after I figured this out:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4947.jpg"><img class="aligncenter size-full wp-image-4077" title="IMG_4947" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4947.jpg" alt="" width="1024" height="683" /></a></p>
<p>Here's a good closeup of the board:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/closeup.jpg"><img class="aligncenter size-full wp-image-4079" title="closeup" src="http://ch00ftech.com/wp-content/uploads/2013/09/closeup.jpg" alt="" width="1024" height="683" /></a></p>
<p>The open pads on the top and bottom are where the charging pins connect.  The battery connections are on the LED board.</p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/10/08/light-up-earrings/feed/</wfw:commentRss>
		<slash:comments>23</slash:comments>
		</item>
		<item>
		<title>Finally, party lights</title>
		<link>http://ch00ftech.com/2013/09/01/finally-party-lights/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=finally-party-lights</link>
		<comments>http://ch00ftech.com/2013/09/01/finally-party-lights/#comments</comments>
		<pubDate>Sun, 01 Sep 2013 08:03:50 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Party Lights]]></category>
		<category><![CDATA[led]]></category>
		<category><![CDATA[power electronics]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=4004</guid>
		<description><![CDATA[So this looks kind of pretty I guess, but it took a lot to get here. Unbucking it If you remember from last time, I made a few mistakes when planning out the power supply for my new fancy party lights. &#8230; <a href="http://ch00ftech.com/2013/09/01/finally-party-lights/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4902.jpg"><img class="aligncenter size-full wp-image-4046" title="IMG_4902" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4902.jpg" alt="" width="1024" height="683" /></a></p>
<p>So this looks kind of pretty I guess, but it took a <strong>lot</strong> to get here.</p>
<p><span id="more-4004"></span></p>
<h1>Unbucking it</h1>
<p>If you remember from <a title="Bucking It Up" href="http://ch00ftech.com/2013/08/18/bucking-it-up/">last time</a>, I made a few mistakes when planning out the power supply for my new fancy party lights.  Namely, I chose the wrong kind of diode and capacitor.  I'm proud to say that after that debacle, I managed to get a very steady 12V out of my buck converter using the new components:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4837.jpg"><img class="aligncenter size-full wp-image-4005" title="IMG_4837" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4837.jpg" alt="" width="1024" height="682" /></a></p>
<p>The new <a href="http://www.digikey.com/product-detail/en/SB5100-T/SB5100DICT-ND/278750">diode</a> is rated for 100V and 5A, and the <a href="http://www.digikey.com/product-search/en?WT.z_header=search_go&amp;lang=en&amp;site=us&amp;keywords=P14909-ND&amp;x=0&amp;y=0">capacitor</a> is rated for 1.49A of ripple current with a 38m<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2e9ef3d6ef62a48d70720728d3e90e31.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Omega" /></span><script type='math/tex'>\Omega</script> ESR.  With these guys in place, the voltage ripple of my output dropped from a whopping 1.35Vp-p to well...almost nothing:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/powersupplyripple.png"><img class="aligncenter size-full wp-image-4006" title="powersupplyripple" src="http://ch00ftech.com/wp-content/uploads/2013/08/powersupplyripple.png" alt="" width="1435" height="837" /></a></p>
<p>And here you can see it powering and controlling the LEDs:</p>
<p><iframe width="584" height="438" src="http://www.youtube.com/embed/3DcKHhg6iys?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>Regardless, fixing this power supply was only an exercise in demonstrating what was possible.  The supply can't keep up with more than one strand of lights, so I decided to strip everything off and just use it as a controller with a separate 12V power supply powering the lights.</p>
<p>Besides, while it was no longer getting super hot, it was still getting warm enough to make me uncomfortable leaving it on for extended periods of time stapled to my ceiling...</p>
<h1>The LEDs</h1>
<p>Before getting into all the details of the stuff I further messed up in this project (there is a <strong>lot</strong>), I think it's important to layout the fundamentals behind how it was supposed to work to give everything context.</p>
<p>The Dreamcolor LED strands that I purchased run off 12VDC and draw about 1.8A a per 5 meter strand when powered on all the way.  They have four connections on each side: two for data and two for power:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/pinout.jpg"><img class="aligncenter size-full wp-image-4011" title="pinout" src="http://ch00ftech.com/wp-content/uploads/2013/08/pinout.jpg" alt="" width="1024" height="683" /></a></p>
<p>The pins are configured so they can be daisy chained together.  The power rails are just a straight through connection from section to section (so all sections are running in parallel), but the data pins actually enter and exit the onboard ICs.</p>
<p>These ICs are the <a href="http://ch00ftech.com/wp-content/uploads/2013/08/LPD6803-1.pdf">LPD6803</a> which it turns out are like the end-all of large-scale serial LED control. Using a special protocol, these ICs strip the data they need from the incoming signal and pass the rest through.  They contain integrated PWM drivers which maintain the RGB LEDs at independent fixed brightness levels even in the absence of incoming data.  There are 5 bits reserved for each channel meaning that each color can be driven at 32 different brightness levels (including "off") allowing for 32,768 possible colors.</p>
<p>Neater still, they can drive LEDs with a rail up to 12V, but only need a 5V signal for data and clock.  Seems like a great way to do it.</p>
<h1>The LED protocol</h1>
<p>The serial protocol is a little weird and not very well described in the data sheet:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/control-procedure.png"><img class="aligncenter size-full wp-image-4013" title="control procedure" src="http://ch00ftech.com/wp-content/uploads/2013/08/control-procedure.png" alt="" width="1107" height="216" /></a></p>
<p>I think they accidentally a few words there.</p>
<p>Here's what I was able to figure out:</p>
<ol>
<li>Every new frame must begin by clocking in 32 zeros (clock on rising edge). Presumably this just tells the system that you're going to be starting fresh.</li>
<li>Begin clocking in pixels. Each pixel begins with a one which is followed by 5 bits for red, 5 bits for green, and 5 bits for blue.</li>
<li>When all of your pixels are clocked in, clock in a zero for every pixel you just sent.</li>
</ol>
<p>There are a few interesting things about this protocol.  Because they're all daisy chained together, each driver IC presumably must see and then generate a signal that looks something like the signal the controller sends to the first driver.</p>
<p>My theory is that the 32 zeros must reset the IC and cause it to pass 32 zeros to the next device.  Once reset, the device will store the first RGB values it receives and pass all the rest along.</p>
<p><del>I'm not too certain what the final zeros are supposed to do.  At first, I thought they were some kind of latching signal to tell the drivers to change their LEDs to the newly programmed values, but in my testing, I think I remember seeing the LED drivers changing their LEDs before I sent this signal out.  When it's working correctly, sending data to the LEDs is so fast, there isn't really a need for a latch.</del></p>
<p>It would explain why every frame must start with a 1.  Perhaps when they get a frame that starts with a zero, they know to latch their values to the LEDs and pass the following zeros on.  Though in that case, I don't know the significance of the 32 starting zeros...</p>
<p>Regardless, I was too lazy to dig into it further (mostly because the LEDs I bought are encased in a waterproof rubber sleeve which makes probing difficult), so I just programmed device to send the signal as described.</p>
<h3> Update</h3>
<p>As Ken pointed out in the comments section, the final set of zeros are required to get the last bit of data input to the end of the strand.  This strand operates as a sort of "reverse" shift register.  The first data input stays at the beginning of the strand and the last data input goes to the end.  Once the drivers latch their color data, they pass the remaining data along, but they do so by buffering a single bit and passing it on the next clock cycle (otherwise they would need some kind of asynchronous system).  In order for the last bits of data input to make it all the way to the end, they need a single clock pulse for each driver to move the stored bits all the way to the end.</p>
<h1>The serial protocol</h1>
<p>Originally, I was a little concerned with how long all of this was going to take, so I built my driver with two outputs.  The plan was to have the driver board send data to two separate sections of LEDs.  This would effectively double the data rate.</p>
<p>Of course, had I done a little math before starting, I wouldn't have thought this.  The maximum data rate I can pass through the FTDI serial adapter I'm using is 230.4kbps. Since the device wants 5 bits each for red, green, and blue, I had to decide how I was going to send this over an 8 bit serial bus.</p>
<p>I ended up coming up with a pretty straight forward protocol.  The lower 5 bits of each byte sent contain data for a single color which alternates each time a byte is sent.  Every 3 bytes represents a single RGB pixel of the output. The controller will capture and store these values in a frame buffer as they are sent.</p>
<p>The upper two bits can be set to command the controller to do something specific. The 8th bit is reserved for telling the controller that it's time to output the currently stored frame to the LEDs.  The 7th bit tells the device to dump the frame buffer and start over (in case data gets corrupted somewhere along the way).  I haven't found anything to do with the 6th bit yet.</p>
<p>So, 170 some pixels with 3 colors each comes out to around 510 bytes or 4080 bits of data per frame which when sent at 230.4kbps will take 18ms to arrive.  This is much, much slower than the output of my microcontroller running at 11MHz.  I measured my data clock pin at somewhere around 660kHz.  Considering that it doesn't have the reserved control bytes to worry about, even with the added start and stop zeros, it can still dump an entire frame in about 4ms.</p>
<p>Now 4ms isn't zero, so it still needs time after every frame is sent to display it to the LEDs which means my minimum time between frames is 18+4ms or around 45 frames per second.  I could probably improve this by programming in some kind of circular frame buffer that could be read from and written to simultaneously, but 45fps is still faster than conventional television, so I'm sticking with it.</p>
<h1>Power</h1>
<p>The LED strips were shipped in packaging that warned against running more than 5 meters in series. Presumably, the concern is with large amounts of current traveling long distances over the thin conductors in the LED strands.</p>
<p>Fortunately, my room is laid out in a way that makes it easy to have all of the strands powered individually.  What's cool about their configuration is that while data must come from one side, power can come from either side as all of the sections are running in parallel off the same power rails.  I ended up configuring the room like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/powerdatadiagram.png"><img class="aligncenter size-full wp-image-4014" title="powerdatadiagram" src="http://ch00ftech.com/wp-content/uploads/2013/08/powerdatadiagram.png" alt="" width="767" height="604" /></a></p>
<p>As long as all of the lines share a ground connection, they can take power from two sources such as the top right and bottom right of the above diagram while still only taking data from the base station.</p>
<p>Getting power up to the ceiling was achieved with some heavy duty speaker wire:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4873.jpg"><img class="aligncenter size-full wp-image-4015" title="IMG_4873" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4873.jpg" alt="" width="683" height="1024" /></a></p>
<p>Which I spliced into my power supply.</p>
<h1>So what went wrong?</h1>
<p>Oh boy, where to begin...  This whole mess spanned over the course of a week, and to be honest, I forgot the order in which a lot of things happened, so I'm just going to lay out what I remember.</p>
<p>I think I legitimately made a mistake or had a major problem along every step of the way.  It's especially hilarious considering this was supposed to be a quick and easy project.</p>
<h1>Bad power supply</h1>
<p>Moving away from the buck converter, I needed a good 12VDC power source to run the lights.  I already had a 4A supply powering "source 1" above, but I wanted something beefier for source 2.  At first, I was using my lab power supply, but I wanted something that wouldn't tie up such a valuable resource  I settled on a 12V, 6A DC power brick which I found on Amazon for <a href="http://www.amazon.com/dp/B003TUMDWG/ref=pe_385040_30332190_pe_175190_21431760_M3T1_ST1_dp_1">$8.50</a>.</p>
<p>Unfortunately, it seems that you really get what you pay for.  This thing worked beautifully for about 3 minutes.  By "worked", I mean that it powered the lights while emitting a high-pitched whine.  After 3 minutes, the power cut out, and it started doing this power cycling thing where it would blink on for about a tenth of a second, then cut off for 2 seconds.</p>
<p>Looking a little closer, I shouldn't have been too surprised:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4842.jpg"><img class="aligncenter size-full wp-image-4007" title="IMG_4842" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4842.jpg" alt="" width="1024" height="683" /></a></p>
<p>My favorite part is how it lists the FCC Part 15 requirements for a Class A electronic device as "warnings" but does not show an FCC compliance mark anywhere...</p>
<p>Dumping this in the trash, I used my old converted PC power supply and placed another order for a better wall wart that shouldn't screw up.</p>
<h1>Not enough lights</h1>
<p>I originally ordered 3 strands of lights which claim to be 5 meters each.  Despite having a beautiful 3D model of my apartment (which I always make when moving into a new place):</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/apartment.png"><img class="aligncenter size-full wp-image-4008" title="apartment" src="http://ch00ftech.com/wp-content/uploads/2013/08/apartment.png" alt="" width="1138" height="944" /></a></p>
<p>I still managed to not measure correctly.  The permitter of the room is 17.32 meters.  I was 2.32 meters short:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/notenoughlights.jpg"><img class="aligncenter size-full wp-image-4009" title="notenoughlights" src="http://ch00ftech.com/wp-content/uploads/2013/08/notenoughlights.jpg" alt="" width="960" height="640" /></a></p>
<p>Whoops!  Temporarily, I ran some extra speaker wire to at least bring power to the lights that I did have.</p>
<p>Drunk at a bar with some friends, I ordered another 5 meter strand on my phone.  I never thought to look on Amazon (had been using ebay before), but sure enough, they had them available on Prime.</p>
<p>Somehow, I managed to accidentally order a strand that <a href="http://www.amazon.com/dp/B008L9YXJG/ref=pe_385040_30332190_pe_175190_21431760_M3T1_ST1_dp_2">came with a controller</a>.  These things are usually like $100 (even the Amazon lists the "original" price at $260), but for some reason, this is like the sale of the century and I got it for scarcely more than I paid for the original strands:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4867.jpg"><img class="aligncenter size-full wp-image-4010" title="IMG_4867" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4867.jpg" alt="" width="1024" height="683" /></a></p>
<p>In a pinch, the controller's actually pretty cool.  It has a few hundred different patterns pre-programmed (though a lot of them are the same pattern in a different color), and the remote control can change the pattern or the speed.  The remote also uses radio instead of IR, so you don't need a line of sight to control it.</p>
<p>I might hook this thing up to my leftover LED strands and glue them to my bike or something...</p>
<h1>Anustart</h1>
<p>After proving that the buck converter worked, I quickly set about ripping all of the buck converter parts off to be stored for perhaps a later project.  I unfortunately blew up my surface mount 5V regulator due to some nasty solder shorts, so I had to replace it.  I blew that one up too and didn't have any more extra, so I opted for an LM7805 in the TO-220 package:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4840.jpg"><img class="aligncenter size-full wp-image-4016" title="IMG_4840" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4840.jpg" alt="" width="1024" height="682" /></a></p>
<p>Strangely, after making these changes, the controller stopped working.  With some poking around, I noticed that something was wrong with the clock pin.  It wasn't pulling down hard enough and the output wasn't looking very square:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/clock-bad.png"><img class="aligncenter size-full wp-image-4017" title="clock-bad" src="http://ch00ftech.com/wp-content/uploads/2013/08/clock-bad.png" alt="" width="790" height="599" /></a></p>
<p>This pin was on the same port as an indicator LED that was working fine, and after looking around for a while, I established that the problem was localized to that pin.  I tried swapping out the microcontroller, but due to some nasty soldering, I ended up blowing that one up and another after it (alcohol may have been involved). The board was looking pretty haggard, so I decided to give it a rest and start fresh in the morning:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4847.jpg"><img class="aligncenter size-full wp-image-4018" title="IMG_4847" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4847.jpg" alt="" width="1024" height="682" /></a></p>
<p>This new revision removed the buck converter and replaced it with a footprint for the 7805 that was so haphazardly soldered before.</p>
<h1>Nogrammer</h1>
<p>Unfortunately, when I soldered everything down, I somehow mixed up a 7805 and a 7809. So powering up the board sent 9V coursing through my circuit.  You'd think they'd label these things or something!</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4849.jpg"><img class="aligncenter size-full wp-image-4019" title="IMG_4849" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4849.jpg" alt="" width="1024" height="683" /></a></p>
<p>Oh...</p>
<p>As you can see above, I did eventually swap in the LM7805, but not before I already (presumably) blew up (yet another) microcontroller that needed to be replaced.  I say "presumably" because before I had a chance to program it, I had another problem.  I only discovered this problem after connecting my AVRISPMKII programmer and watching the current output on my power supply rise to 1.5A.</p>
<p>After this point, the programmer would only blink the LED orange which would normally indicate that the programming header is backwards, but in this case indicated that the programmer was borked seeing how that's all it would do on any of the devices I connected it to.</p>
<p><a href="http://ch00ftech.com/2010/09/13/a-nation-of-frustration/">This isn't the first programmer I've obliterated.</a></p>
<p>So great, it's 11AM on a Saturday, and I had planned to spend the whole weekend on this project.  Although my firmware is pretty much finished, and I only need to write it to the microcontroller, my programmer is dead, and I won't be able to get another one until it gets delivered from Digi-key.  That's like 2 days at the earliest.</p>
<p>Desperate, I did something I never thought I'd do in a million years.  I bought one of these:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4855.jpg"><img class="aligncenter size-full wp-image-4020" title="IMG_4855" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4855.jpg" alt="" width="1024" height="683" /></a></p>
<p>I'll have to post a rant about why I hate Arduinos at some point in the future, but a lot of it could be summed up in this comment I received the other day:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/arduinnie.png"><img class="aligncenter size-full wp-image-4021" title="arduinnie" src="http://ch00ftech.com/wp-content/uploads/2013/08/arduinnie.png" alt="" width="620" height="104" /></a></p>
<p>So why did I buy this thing? As it turns out, Arduinos can be programmed to emulate AVRISP programmers.  It also turns out that they're available for purchase at Radio Shack. It also turns out that Radio Shack is open at 11AM on a Saturday morning.</p>
<p>Despite this fortuitous stop gap saving me a ton of time waiting, it still took me three hours to get it working.  The programmer emulation features of the Arduino aren't amazingly well documented.</p>
<p>Installing the emulation software (sorry, I meant "sketc-" *gag*) was pretty easy.  It's included under the "Examples" section under "ArduinoISP". What isn't as straight forward is getting AVRdude to recognize it.  I had to add these flags to the Makefile:</p>
<pre>-c avrisp -P /dev/tty.usbmodemfd1331 -b19200 -v -v -v -v.</pre>
<p>The '-v's are for mega verbose mode which helped in debugging.  The "avrisp" is changed from "avrispmkii" because presumably this emulates an earlier version of the device. The /dev/tty.usbmodemfd1331 is the name of the Arduino's serial interface in OSX.  It'll vary from computer to computer.  The hardest part to figure out was the -b19200.  This specifies the baudrate for communicating with the programmer.  This was super difficult because AVRdude wasn't throwing any kind of flag indicating that it couldn't talk to the programmer.  Finally, with everything set, it worked.</p>
<p>The hardware was pretty straightforward.  The comments at the top of the ArduinoISP code indicate which connections need to be made.  I combined the broken programmer's cable with a header I usually use for breadboarding and came up with this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4857.jpg"><img class="aligncenter size-full wp-image-4022" title="IMG_4857" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4857.jpg" alt="" width="1024" height="683" /></a></p>
<p>Of course, this thing doesn't have the specialized hardware that the normal programmer has, so it won't indicate when the header is connected backwards.  It also doesn't have any level changers, so it can only be used to program 5V circuits.</p>
<p>To make things easier, I powered the target board from the 5V pin on the header during programming.</p>
<p>So with that all working, I was back in business.</p>
<h1>Bad input</h1>
<p>Somewhere after that debacle, I began to have problems controlling the LEDs again.  I started noticing the messed up clock trace again, and this was on this entirely new PCB.  In fact, the messed up clock trace I showed above was actually taken at this point, but it looked exactly like the original which I didn't think to keep.</p>
<p>This time the data line was also acting weird.  Here's the data line with the light strand connected:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/datapin-with-strand-connected.png"><img class="aligncenter size-full wp-image-4023" title="datapin with strand connected" src="http://ch00ftech.com/wp-content/uploads/2013/08/datapin-with-strand-connected.png" alt="" width="790" height="599" /></a></p>
<p>And here it is with the light strand removed:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/data-bad-drive.png"><img class="aligncenter size-full wp-image-4024" title="data-bad drive" src="http://ch00ftech.com/wp-content/uploads/2013/08/data-bad-drive.png" alt="" width="790" height="599" /></a></p>
<p>It looked like there was some kind of intense pulldown behavior on the data line.  I postulated that perhaps something similar had happened on the clock line which caused it to eventually damage the output driver of the pin.</p>
<p>Disconnecting the lights and measuring the data and clock inputs didn't reveal anything useful.  They each had 20-30k<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2e9ef3d6ef62a48d70720728d3e90e31.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Omega" /></span><script type='math/tex'>\Omega</script> of resistance to ground which is more than high enough to drive with a microcontroller.</p>
<p>Regardless, the problem persisted when I reconnected the lights.  Guessing that this problem was unique to this particular segment of lights, I sliced off the first section of LEDs and connected the controller directly to the second section.  Voila! Problem solved.</p>
<p>The problem also came up on the first section of my third strand.  What was so weird about this is that these strands were all working at some point and <em>then</em> broke.  I decided to take a closer look.</p>
<p>In order for the LPD6803 to operate, it needs a 5V VCC line.  The chip doesn't really do anything with the 12V, it's just that the LED pins are 12V <em>tolerant</em>. For everything else, it needs 5V just like a normal micro controller.</p>
<p>Adding a 5V line to go along with 12V and data would be clumsy, and linear voltage regulators are expensive and bulky, so the designer of the Dreamcolor LEDs did it a different way.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4882.jpg"><img class="aligncenter size-full wp-image-4025" title="IMG_4882" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4882.jpg" alt="" width="1024" height="683" /></a></p>
<p>This is probably the most straight forward voltage regulating power supply you can make.  The schematic looks something like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/zener.png"><img class="aligncenter size-full wp-image-4026" title="zener" src="http://ch00ftech.com/wp-content/uploads/2013/08/zener.png" alt="" width="635" height="486" /></a></p>
<p>The diode here isn't a normal diode.  It's a special kind of diode called a <a href="http://en.wikipedia.org/wiki/Zener_diode">Zener diode</a>. Zener diodes are special in that they block reverse current until a voltage is applied to them greater than their threshold voltage.  Once their threshold is met, they will allow current to pass with little resistance.  You can select the specific threshold voltage when ordering.  In this case, it's 5V.</p>
<p>So the idea here is that when you supply 12V to the top, current will flow through the resistor and diode.  Because the diode has a 5V threshold voltage, it will pass enough current such that the drop through the resistor is 7V (12-5).  This is not unlike <a href="http://ch00ftech.com/2012/05/29/no-i-wont-make-you-a-chris-jericho-jacket-but-heres-how-i-would-if-i-wanted-to/#ledcurrent">choosing a current limiting resistor</a> for an LED.</p>
<p>When you apply a load on the 5V rail, more current will flow through the resistor.  This will cause the resistor's voltage drop to increase lowering the 5V rail.  This sag in voltage will lower the rail below the threshold of the Zener shutting it off.  With the Zener shut off, less current will flow through the resistor causing the rail to rise again eventually settling on 5V.</p>
<p>This process was spelled out to aid in explanation, but in reality, it all happens instantaneously and the 5V rail stays locked steady at 5V.</p>
<p>Measuring the voltage across the diode on a working section of LEDs, I found this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4881.jpg"><img class="aligncenter size-full wp-image-4028" title="IMG_4881" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4881.jpg" alt="" width="1024" height="682" /></a></p>
<p>But measuring on a broken section, I got this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4878.jpg"><img class="aligncenter size-full wp-image-4029" title="IMG_4878" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4878.jpg" alt="" width="1024" height="682" /></a></p>
<p>So there's your problem!</p>
<p>My first thought was that the Zener diode was somehow broken.  To check for this, I took it and the resistor out of the circuit, and set up my own little regulator:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4884.jpg"><img class="aligncenter size-full wp-image-4030" title="IMG_4884" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4884.jpg" alt="" width="1024" height="683" /></a></p>
<p>Whelp, that's not the problem... So what's going on here?</p>
<p>You might have suspected that there are some limitations to what you can do with Zener diode voltage regulators.  Otherwise, you'd see them a lot more often.  Besides the fact that they're highly inefficient, they also have a very limited range of output current.</p>
<p>See, at some point, the load placed on the rail will draw more current than the Zener did at the beginning.  After this point, even if the Zener shuts off all the way, there will still be enough current flowing through the resistor to droop the voltage below 5V.</p>
<p>In this case, the 1.2k<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2e9ef3d6ef62a48d70720728d3e90e31.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Omega" /></span><script type='math/tex'>\Omega</script> resistor can pass up to 5.8mA before there's a problem (5.8mA*1200<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2e9ef3d6ef62a48d70720728d3e90e31.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Omega" /></span><script type='math/tex'>\Omega</script>=12V-5V).  Doing a quick measurement of the current the chip is using on a working section gave me this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4894.jpg"><img class="aligncenter size-full wp-image-4032" title="IMG_4894" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4894.jpg" alt="" width="1024" height="683" /></a></p>
<p>Cutting it pretty close there, eh guys?</p>
<p>A similar measurement performed on a broken section:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4892.jpg"><img class="aligncenter size-full wp-image-4033" title="IMG_4892" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4892.jpg" alt="" width="1024" height="683" /></a></p>
<p>And it's pretty clear what's going on here.</p>
<p>What I suspect was happening here is that some sort of "event" (ESD, electrical surge, whatever) broke the LPD6803 in the first segment of those strands.  This failure mode included drawing a larger current somewhere which caused the 5V rail to droop down to 1.2V.  As a part of this failure, whether caused by low voltage or something else, the data and clock inputs started drawing a lot of current.  Repeated high current loads on the GPIO pins of the microcontroller caused those pins to eventually break giving me the crappy waveforms shown above.</p>
<p>I probably should have figured this out when I noticed that the LEDs weren't lighting up, but when the strips are first powered on, their LEDs are in an indeterminate state which can sometimes be totally off.  It was only after closer inspection that I saw this and knew something was up:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4853.jpg"><img class="aligncenter size-full wp-image-4031" title="IMG_4853" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4853.jpg" alt="" width="1024" height="683" /></a></p>
<p>The LEDs definitely aren't supposed to get <em>that</em> dim.</p>
<p>A new strand of LEDs still left me with a broken pin on my microcontroller, and rather than swapping it out (yet again), I decided to just do some rework to use a different GPIO pin.  I picked one of the programming pins as it was easier to solder to the programming header:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4876.jpg"><img class="aligncenter size-full wp-image-4036" title="IMG_4876" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4876.jpg" alt="" width="1024" height="682" /></a></p>
<h1>PySerial</h1>
<p>So with all my hardware in place, I needed to write a Python script to drive patterns to the LED controller over the serial port on the FTDI chip.  I had a really hard time getting this to work as I found that every few signals sent, there'd be a totally corrupt frame that would flash all of the LEDs a different color.</p>
<p>Suspecting just about everything at this point, I eventually settled on probing the serial output of the FTDI chip and was fortunate enough to catch something strange.  Here is the beginning of a normal UART stream:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/serialgood.png"><img class="aligncenter size-full wp-image-4037" title="serialgood" src="http://ch00ftech.com/wp-content/uploads/2013/09/serialgood.png" alt="" width="1347" height="845" /></a></p>
<p>Every once in a while though (maybe once every two seconds), I'd get one of these:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/serialbad.png"><img class="aligncenter size-full wp-image-4038" title="serialbad" src="http://ch00ftech.com/wp-content/uploads/2013/09/serialbad.png" alt="" width="1347" height="845" /></a></p>
<p>It might be subtle, but you'll notice that there are two little bumps at the beginning instead of one.  It's like it got one bit into a byte and decided to start over.  At the time, I was invoking a Serial.write() command for each byte I sent from the Python script.</p>
<p>I think that doing it this way must be very inefficient for the Python backend.  Perhaps it releases control of the serial driver between writes?</p>
<p>Fixing this problem was pretty simple.  In addition to sending single bytes, Serial.write() is able to take an entire string and output it one byte at a time.  This method appears to be much more efficient and got rid of the problem for me.</p>
<h1>Insufficient memory</h1>
<p>Excited about getting my final strand of LEDs, I installed them right away.  This required a change to the firmware to increase the size of the frame buffer and an update to the Python script to increase the width of the pattern.  Unfortunately (SURPRISE), all of my lights stopped working as soon as I adjusted the Python script to control an additional 20 some pixels.  The colors only updated maybe once per second (if at all), and it never matched up with what I was sending.</p>
<p>Earlier, I had some problems with serial timing when I wasn't allowing enough time between packets, so that was my first guess.  Perhaps sending all of the bytes in a single Serial.write() command was overflowing some kind of buffer?  I was also concerned that I had messed up the new firmware although it seemed to work fine with smaller frames.</p>
<p>After playing with the numbers a bunch, I found that as long as I sent 166 pixels or fewer, it worked fine.  Well, maybe not super fine...</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4866.jpg"><img class="aligncenter size-full wp-image-4039" title="IMG_4866" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4866.jpg" alt="" width="1024" height="683" /></a></p>
<p>All of the LEDs were supposed to be black in the above image.  The section on the right is the LEDs past 166 which I can't try to control without crashing the controller.  The LEDs in the middle appeared to be "stuck" on various colors.  I was a little surprised to see this as I had just tested the strand earlier when I was playing with the LED controller from Amazon.  Maybe I had stepped on them and broke something?</p>
<p>Because I had enough extra LEDs to replace this broken section, I didn't think too much of it and focused instead on this 166 problem.</p>
<p>166 pixels at three bytes a piece with a frame clear message at the beginning and a print frame message at the end (using the 7th and 8th bits) came out to:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_fa28c4a166f7ab60622f883db0f814cf.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Large 166 \times 3 + 1 + 1 = 500" /></span><script type='math/tex'>\Large 166 \times 3 + 1 + 1 = 500</script></p>
<p>Well...that's a strangely square number...</p>
<p>At this point, I really started to suspect Python.  Normally, in the microcontroller world, numbers are powers of 2.  Perhaps the PySerial library only allowed for 500 bytes in the serial buffer? a quantity arbitrary selected by a developer?</p>
<p>It was only after I gave up and went to work that my mind could wander enough to find the culprit.</p>
<p>For this project, I was using the ATMega48.  The ATMega48 is a member of a series of pin compatible parts that have varying levels of onboard flash and RAM.  The ATMega328 for example has 32k of flash and 2K of SRAM.  The ATMega48 has 4k of flash and ...512 bytes of SRAM.</p>
<p>With 170 LEDs, I needed 510 bytes of RAM, and I only had 512 to work with.  The reason the code started acting funny when my frame grew longer than 166 pixels is that I was overwriting some other variable with LED data.  In fact, the "broken" section of LEDs was actually some other random piece of system memory being read and interpreted as part of the framebuffer.  How cool is that!</p>
<p>This problem really surprised me because I had marked just about all of my variables as "volatile" which means they have sections in memory specifically carved out just for them.  I would expect that the compiler or linker or whatever would notice that there wasn't enough RAM before it decided to allocate variables on top of each other.</p>
<p>Had I worked out the numbers a little bit ahead of time, I would have just used an ATMega328 which has more than enough RAM. This is not the first time I've done <a href="http://ch00ftech.com/2012/10/27/qr-clock/#atmega328">something like this</a>.</p>
<p>If you read through that link, you'll find this quote:</p>
<p><em>I guess it was sort of silly to do development work on a 4k part when the 32k equivalent was not much more expensive.  I guess I've never really had a need for that much memory before.  I'll be sure to order larger parts in the future so I don't run into this problem.</em></p>
<p><em></em>FUNNY.</p>
<p>Swapping in an ATMega328 fixed the problem.  Though as an aside, I'd like to add that after checking every single solder joint for shorts and making sure I had everything connected right, I managed to do this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4896.jpg"><img class="aligncenter size-full wp-image-4041" title="IMG_4896" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4896.jpg" alt="" width="1024" height="683" /></a></p>
<p>The chip is rotated 90 degrees from where it's supposed to be.  I'm really like 0 for 20 at this point...</p>
<p>With that fixed, the ENTIRE strip works excellently.</p>
<h1>Things that I didn't mess up, but still kind of suck</h1>
<p>So, I've talked about color accuracy of LEDs <a href="http://ch00ftech.com/2012/10/27/qr-clock/#LEDcolor">before</a>.  When making LED displays like this, it's important to match the LEDs perfectly so that they all agree on what each color should look like and guarantee a certain level of color consistency.  When this isn't possible, LED controllers can sometimes be programmed to calibrate the LED color and modify their output levels to keep colors more consistent between LEDs.</p>
<p>As it turns out, my LED strands disagree fundamentally on what certain colors look like.  For example, here's two interpretations of yellow:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4898.jpg"><img class="aligncenter size-full wp-image-4043" title="IMG_4898" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4898.jpg" alt="" width="1024" height="683" /></a></p>
<p>Interestingly, although the color mixture is totally off for yellow, it's not perceptible with pure colors such as red:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4899.jpg"><img class="aligncenter size-full wp-image-4044" title="IMG_4899" src="http://ch00ftech.com/wp-content/uploads/2013/09/IMG_4899.jpg" alt="" width="1024" height="683" /></a></p>
<p>I'm guessing that human eyes (and therefore camera sensors) are less perceptive of slight changes in brightness than they are of slight changes in hue.  Non primary colors such as yellow require accurate mixing of two colors.  A slight miscalibration there will shoot the color off in a totally different direction.</p>
<p>So how do you fix this? One solution is to just limit your patterns to those that use primary colors.  It was interesting to note that a majority of the patterns that came with the controller I purchased off Amazon used only pure red, green, and blue.</p>
<p>Another solution is to use the built-in color calibration functions of the LPD6803 outlined in the datasheet:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/09/cmode.png"><img class="aligncenter size-full wp-image-4045" title="cmode" src="http://ch00ftech.com/wp-content/uploads/2013/09/cmode.png" alt="" width="777" height="97" /></a></p>
<p>Not totally sure what they're trying to say here, but I'm guessing that the LPD6803 has some sort of feature for setting the "gray level" which has a higher bit depth than the typical 5 bit control.  Unfortunately, using this feature requires a few hardware changes, and I don't have any control over the circuit the parts are already connected to.</p>
<p>The final option is to try to calibrate it in software.  Unfortunately, I only have 32 shades of each color to work with, so I would have to severely limit my color depth in order to do this. I'd probably end up creating a list of possible colors and having to design patterns using only those.</p>
<p>I might take a stab at this in the future, but for the time being, I'm very pleased that I have it working, and I'm just going to leave it as-is.</p>
<h1>So now what?</h1>
<p>At the moment, I have 171 segments of individually controllable party lights attached to the ceiling of my apartment.  They're pretty dang sweet.</p>
<p>I had a friend help me write a quick script for generating patterns, but it barely scratches the surface of what these lights are capable of.  I'm going to take a break from this project for the time being (for fear that I break something again), but I'll be writing some pretty cool control software at some point in the future, so expect something cool soon.</p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/09/01/finally-party-lights/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Bucking It Up</title>
		<link>http://ch00ftech.com/2013/08/18/bucking-it-up/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=bucking-it-up</link>
		<comments>http://ch00ftech.com/2013/08/18/bucking-it-up/#comments</comments>
		<pubDate>Sun, 18 Aug 2013 07:46:37 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Party Lights]]></category>
		<category><![CDATA[analog circuits]]></category>
		<category><![CDATA[inductors]]></category>
		<category><![CDATA[switching converter]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=3929</guid>
		<description><![CDATA[This week, I learned that when it comes to power electronics, there's no such thing as a "quick easy circuit". Ughhh Party Lights So, one of the reasons I haven't updated my blog much recently was a move to a &#8230; <a href="http://ch00ftech.com/2013/08/18/bucking-it-up/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p>This week, I learned that when it comes to power electronics, there's no such thing as a "quick easy circuit".</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/photo.jpg"><img class="aligncenter size-full wp-image-3930" title="photo" src="http://ch00ftech.com/wp-content/uploads/2013/08/photo.jpg" alt="" width="1024" height="768" /></a></p>
<p>Ughhh</p>
<h1><span id="more-3929"></span></h1>
<h1>Party Lights</h1>
<p>So, one of the reasons I haven't updated my blog much recently was a move to a new apartment.  I'm definitely enjoying my new place for a number of reasons, but one of the really cool features is a sort of molding that runs around the perimeter of the living room.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/molding.jpg"><img class="aligncenter size-full wp-image-3931" title="molding" src="http://ch00ftech.com/wp-content/uploads/2013/08/molding.jpg" alt="" width="1024" height="683" /></a></p>
<p>This molding sits about 8 inches from the curved ceiling of the room and is about a 1/2 inch wide.  I had a similar molding arrangement back at school where there was some molding that ran the length of the hall that I lived on.  Of course, we couldn't just let that be, so we made this:</p>
<p><iframe width="584" height="329" src="http://www.youtube.com/embed/HtlVxP_jHCM?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>(The 100 refers to the name of the hall "Bemis 100" and not the number of LEDs which was well over 1600)</p>
<p>This system was comprised of a bunch of little hand-soldered shift-register circuits that powered a number of LEDs.  When chained together, we had a giant strand of individually controllable LED lights.</p>
<p>Of course, we probably wouldn't have spent all the time soldering these guys together if we had known that there was a readymade solution that accomplished exactly what we were going for.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4803.jpg"><img class="aligncenter size-full wp-image-3932" title="IMG_4803" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4803.jpg" alt="" width="1024" height="683" /></a></p>
<p>This is a strand of "<a href="http://www.ebay.com/itm/5M-5050-SMD-Flash-RGB-Dreamcolor-132-Change-6803-IC-150-LED-Strip-Light-Colorful-/180905280025?ssPageName=ADME:L:OC:US:3160">Dreamcolor</a>" LEDs.  Unlike the LED strands I've used <a title="Light up Leather Jacket" href="http://ch00ftech.com/2012/01/16/light-up-leather-jacket/">before</a>, this strand doesn't have to light up all the lights the same color. I purchased these originally for a project that required individually addressable LEDs and was disappointed to find that these LEDs can only be controlled in groups of three.  Each group of three RGB LEDs can have their red green and blue brightnesses selected in software.  There are also marks where you can cut the strand to fit whatever you're trying to do.</p>
<p>I'll be covering the protocol and how this all works in a later post, but some quick breadboarding got me this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4811.jpg"><img class="aligncenter size-full wp-image-3933" title="IMG_4811" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4811.jpg" alt="" width="1024" height="683" /></a></p>
<p>So all I had to do was glue these things to my molding, find a way to control them, and power them.</p>
<p>The control portion went off without hitch, and I will cover it at some other time.  Power however was problematic...</p>
<h1>High Voltage</h1>
<p>One of the goals of this project was to make the circuit more or less invisible when not in use.  The plan was to tuck the circuit up in the corner of my room and have a single cable going up to it to supply power and data.  When transmitting data long distances, a simple 5V TTL bus normally isn't enough.  There are a lot of opportunities for noise to get coupled on to the data lines and introduce problems.</p>
<p>To avoid this, I typically use RS422.  This differential transmission protocol can cancel out noise coupled on to the line and make a more robust signal.  I've used this in the past with my <a title="Lighting my desk on fire with a pencil" href="http://ch00ftech.com/2012/02/07/lighting-my-desk-on-fire-with-a-pencil/">wiper motor</a> project.  This solution requires a long preferably low-cost cable with at least one twisted pair.  I settled on Cat5.</p>
<p>Cat5 ethernet cable is typically used for transmitting data over hundreds of feet in twisted pairs.  Less commonly, it can also be used to transmit power.  This is known as "<a href="http://en.wikipedia.org/wiki/Power_over_Ethernet">Power over Ethernet</a>".  PoE requires special hardware to inject power into the data lines and extract it at the load end.  It's a pretty complicated system, but the premise behind it is fairly simple.</p>
<p>Ethernet cable is certainly not designed to deliver large amounts of current, but it is often used to carry fairly high voltage signals such as the 90V ring of a corded telephone. Wikipedia places the <a href="http://en.wikipedia.org/wiki/Category_5_cable#Characteristics">maximum current per conductor</a> of Cat5 at 0.577A, but the maximum voltage is over 100V.  If I give myself two conductors for my data signal, the remaining six will give me enough copper for 1.7A at 100V.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4815.jpg"><img class="aligncenter size-full wp-image-3934" title="IMG_4815" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4815.jpg" alt="" width="1024" height="683" /></a></p>
<p>While running a test pattern, I measured around 0.7A of current at 12V for each 5 meter strand of LEDs which is about 25 watts of power total for the entire ceiling (15 meters).  By stepping up to 48V, I could transmit just as much power with just 0.5A of current which was more than small enough to transmit over Cat5.</p>
<p>So the plan was to run 48VDC up to the ceiling of the room and then step it down to 12VDC for the lights.  Conveniently enough, Digikey sells 48VDC power supplies for pretty cheap:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4823.jpg"><img class="aligncenter size-full wp-image-3969" title="IMG_4823" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4823.jpg" alt="" width="1024" height="683" /></a></p>
<h1>Messing it up</h1>
<p>So if you couldn't tell from the title, as of time of writing, this circuit doesn't work as it's supposed to.  Since I clearly need a good review of the methods I tried (and failed) to use, I thought I'd write this post detailing what I should have done, and then detail exactly what I messed up.</p>
<p>So take notes for the first portion, and please don't take notes for the second.</p>
<h1>Stepping it Down</h1>
<p>In order to efficiently step my 48V down to 12V, I needed some kind of switching step-down converter.  Probably the simplest one of these is the "Buck Converter" which looks something like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/buck.png"><img class="aligncenter size-full wp-image-3935" title="buck" src="http://ch00ftech.com/wp-content/uploads/2013/08/buck.png" alt="" width="821" height="263" /></a></p>
<h1><a href="http://ch00ftech.com/wp-content/uploads/2013/08/inputvsoutput.png"><img class="aligncenter size-full wp-image-3936" title="inputvsoutput" src="http://ch00ftech.com/wp-content/uploads/2013/08/inputvsoutput.png" alt="" width="766" height="418" /></a></h1>
<p>The switch pictured to the left outputs a pulse-width-modulated current which the inductor and capacitor then low pass filter to output something resembling DC at a lower voltage.  The inductor acts to smooth out the rapidly changing current of the input, and the capacitor acts to smooth out the output voltage.  The diode allows the inductor to pull current from ground when the switch is opened.  These types of supplies can run at upwards of 85% efficiency which is pretty good when compared to linear regulators.</p>
<p>Better still, as the switching frequency increases, the size of the components shrink (more on that later), so these kinds of supplies can be made fairly small.</p>
<p>Of course, the devil's in the details, so for a supply like this to work, you need to have properly sized components.</p>
<h1>Assumptions</h1>
<ul>
<li>Input voltage = 48V</li>
<li>Output voltage = 12V</li>
<li>Load current = 3A</li>
<li>Switching frequency = 50kHz</li>
<li>Duty cycle = 1/4</li>
</ul>
<h1>Inductor</h1>
<p>The goal for most switching supplies is to remain in "constant conduction".  In other words, you don't want to have any periods of time where the inductor's current drops all the way to zero.  This kind of discontinuous operation can lead to a number of problems with the stability of the output.</p>
<p>As the 48V is applied to the left side of the inductor, its current will ramp up linearly depending on its inductance.  When the 48V is removed, the current will ramp down similarly.  This follows the formula:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_7269b173eb31d9c817cc8f923ebc7767.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large V = L\times\frac{di}{dt}" /></span><script type='math/tex'>\large V = L\times\frac{di}{dt}</script></p>
<p>While this current (which I'll call <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_13c6f96418eb5b730b5dc97e014331e9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="I_{mag}" /></span><script type='math/tex'>I_{mag}</script>) ramps up and down, the average current will be delivered to the load.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/currentramp.png"><img class="aligncenter size-full wp-image-3938" title="currentramp" src="http://ch00ftech.com/wp-content/uploads/2013/08/currentramp.png" alt="" width="975" height="305" /></a></p>
<p>In order to maintain continuous conduction, <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_13c6f96418eb5b730b5dc97e014331e9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="I_{mag}" /></span><script type='math/tex'>I_{mag}</script> should never ramp down to 0A.  We need to define the exact point where it will hit 0A and size our components such that that won't happen.</p>
<p>Assuming we're already in continuous conduction, the beginning and end of each cycle must happen at the same current level (we're assuming that it's in some kind of steady state and that there are no transients).  This means we only need to analyze either the ramp up or the ramp down.  I chose ramp up for this discussion.</p>
<p>Doing some geometric analysis, you'll notice that <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_212dd6fa5d80da785b67fd8a45765633.gif' style='vertical-align: middle; border: none; ' class='tex' alt="<I_{mag}>" /></span><script type='math/tex'><I_{mag}></script> (the average) will always sit halfway between the upper and lower extremes of <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_13c6f96418eb5b730b5dc97e014331e9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="I_{mag}" /></span><script type='math/tex'>I_{mag}</script>.  So in order for <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_13c6f96418eb5b730b5dc97e014331e9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="I_{mag}" /></span><script type='math/tex'>I_{mag}</script> to never reach 0A, the peak must be <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_3b761226020192ad0e36ab2ed0bda648.gif' style='vertical-align: middle; border: none; ' class='tex' alt="2\times <I_{mag}>" /></span><script type='math/tex'>2\times <I_{mag}></script> or twice the load current.</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_beda5fb90d6420f4260015a1e916e2b6.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large{\frac{{\Delta}I_{mag}}{2}< 3A}" /></span><script type='math/tex'>\large{\frac{{\Delta}I_{mag}}{2}< 3A}</script></p>
<p>Where <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_fc964c1e47bdeb6d098a90b41353ea6d.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Delta I_{mag}" /></span><script type='math/tex'>\Delta I_{mag}</script> represents the current ripple or the difference between the maximum and minimum current.</p>
<p>Using this information, we can size our inductor.  We know that during 1/4 of the switching cycle, the current will be ramping up, and we want to make sure that that ramp up (<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_fc964c1e47bdeb6d098a90b41353ea6d.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Delta I_{mag}" /></span><script type='math/tex'>\Delta I_{mag}</script>) is less than twice the load current (3A).  We can also assume that the output voltage is already steady at 12V, so the voltage across the inductor is the input minus the output.</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_afac6218443e3f00f380cfabba768d9f.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large 3A>\frac{\Delta I_{mag}}{2}" /></span><script type='math/tex'>\large 3A>\frac{\Delta I_{mag}}{2}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_3cae008d59e8f9cdf876b6fe6616372f.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large 3A\times 2>\Delta I_{mag}" /></span><script type='math/tex'>\large 3A\times 2>\Delta I_{mag}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_559dd36a0dd683a9338d0e8fe4b2c941.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large V=L\times \frac{dI}{dt}" /></span><script type='math/tex'>\large V=L\times \frac{dI}{dt}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_ab007ae70f5d1eaa31e1077185d32aef.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large (V_{in}-V_{out}) = L\times \frac{\Delta I_{mag}}{\frac{1}{f_{switch}}\times D}" /></span><script type='math/tex'>\large (V_{in}-V_{out}) = L\times \frac{\Delta I_{mag}}{\frac{1}{f_{switch}}\times D}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_60f095e6c7125fe50d841fcf956ff5d0.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large 36V = L\times \frac{\Delta I_{mag}}{20\mu s\times .25}" /></span><script type='math/tex'>\large 36V = L\times \frac{\Delta I_{mag}}{20\mu s\times .25}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_5e9aaf4e9ec91d5a639d348f43eaeed7.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \frac{36V\times 5\mu s}{L}= \Delta I_{mag}" /></span><script type='math/tex'>\large \frac{36V\times 5\mu s}{L}= \Delta I_{mag}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_16c1ee773d11c134edea947ec89eda36.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \frac{36V\times 5\mu s}{L}<3A\times 2" /></span><script type='math/tex'>\large \frac{36V\times 5\mu s}{L}<3A\times 2</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_00b4dfea51ac1037202aeba42ea25604.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \frac{36V\times 5\mu s}{3A\times 2}<L" /></span><script type='math/tex'>\large \frac{36V\times 5\mu s}{3A\times 2}<L</script></p>
<p>From this, we know that L must be larger than 30 microhenries.</p>
<p>Additionally, we need to make sure that the inductor can handle the current load.  The inductor I chose saturates at 4A.  This means that above 4A, its inductance drops off dramatically.  I figured that if I chose a larger inductor than required, I could probably get away with this.  More on that later.</p>
<h1>Picking a regulator</h1>
<p>Before I started doing all of this math, I had already picked out a switchmode controller that I liked, the <a href="http://ch00ftech.com/wp-content/uploads/2013/08/lm2576hv.pdf">LM2576HVS-12</a>.  This regulator acts like the switch in the above buck converter doodle.  Just select the inductor, capacitor, and diode, and it will output a steady 12VDC.  The datasheet claims that it operates at just over 50kHz which is why I used 50kHz in the above calculations.</p>
<p>Another cool feature is that it's able to maintain its output voltage in discontinuous operation.  That means that if <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_212dd6fa5d80da785b67fd8a45765633.gif' style='vertical-align: middle; border: none; ' class='tex' alt="<I_{mag}>" /></span><script type='math/tex'><I_{mag}></script> drops too low, the regulator will still maintain 12V output. This is very inefficient though and should only be used for low-power situations.</p>
<p>Looking on the first page of the datasheet, I saw this graphic:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/buckdoodle.png"><img class="aligncenter size-full wp-image-3971" title="buckdoodle" src="http://ch00ftech.com/wp-content/uploads/2013/08/buckdoodle.png" alt="" width="682" height="220" /></a></p>
<p>Although this was for the 5V version, and the input voltage was different, I saw that they were using a 100<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>H inductor and thought I'd round my own up to 100<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>H.</p>
<p>Being lazy, I figured I'd eschew the math and just pick a 1000<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F capacitor for the output cap.</p>
<h1>Capping it off</h1>
<p>For the sake of this blog post, let's work through the math that determines what kind of capacitor value is good.</p>
<p>In reality, a capacitor isn't entirely necessary.  In fact, the inductor isn't even necessary for some applications.  The only purpose of the cap is to even out the output voltage, so in order to determine what kind of cap you need, you first need to select a desired output voltage ripple.</p>
<p>For this application, let's arbitrarily choose:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_adfc03d1807e1cdc7f314c6a6e967028.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Delta V=0.1V" /></span><script type='math/tex'>\Delta V=0.1V</script></p>
<p>This capacitor will need to absorb all the extra current when <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_13c6f96418eb5b730b5dc97e014331e9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="I_{mag}" /></span><script type='math/tex'>I_{mag}</script> rises above <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_212dd6fa5d80da785b67fd8a45765633.gif' style='vertical-align: middle; border: none; ' class='tex' alt="<I_{mag}>" /></span><script type='math/tex'><I_{mag}></script>, and provide extra current to the load when it drops below.  In other words, the cap will shunt the AC component of the output to ground.</p>
<p>So all you need to do is determine how much current will make it into the cap and how much the voltage will change as a result.  A cap's voltage changes linearly with respect to its stored charge, so we first need to figure out how much charge is stored.</p>
<p>As stated before, we're assuming the device is in steady state, so whatever charge enters the capacitor on the upswing must leave it on the downswing.  For this reason, I only need to look at half of a cycle to determine what the current ripple will be.  Integrating the current ripple will tell us how much charge enters (and later exits) the capacitor:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/capcurrent.png"><img class="aligncenter size-full wp-image-3972" title="capcurrent" src="http://ch00ftech.com/wp-content/uploads/2013/08/capcurrent.png" alt="" width="1024" height="361" /></a></p>
<p>This works out to:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_f9b6b4127aac741a7338474efcdf0668.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large Q=\frac{\frac{1}{50kHz}\times 1.8A}{2\times 2\times 2}" /></span><script type='math/tex'>\large Q=\frac{\frac{1}{50kHz}\times 1.8A}{2\times 2\times 2}</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_e466814d634ff49e567ea16cb204bd35.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large Q=4.5\mu C" /></span><script type='math/tex'>\large Q=4.5\mu C</script></p>
<p>This is for <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2a75f1b700cc65e299919cf9e967e330.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Delta I_{mag}=1.8A" /></span><script type='math/tex'>\Delta I_{mag}=1.8A</script> which is the case for L=100<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>H.</p>
<p>So long story short, we want the capacitor's output to change by less than .1V when 4.5<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>C of charge is dumped into it.  For this, we use the home shopping network equation:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_892ed24b0208db336b48dd4ece8bc368.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large Q=VC" /></span><script type='math/tex'>\large Q=VC</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_481695a57d4c794d8057e7285b4fb44c.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \frac{Q}{V}=C" /></span><script type='math/tex'>\large \frac{Q}{V}=C</script></p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_1db224bbd59ee0a77bbd4ff8cf335120.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \frac{4.5\mu C}{.1V}=45\mu F" /></span><script type='math/tex'>\large \frac{4.5\mu C}{.1V}=45\mu F</script></p>
<p>So in order to keep the voltage ripple down to .1V, we need a 45<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F capacitor.  0.1V is a pretty generous value for current ripple.  A lot of supplies go as low as 20mV ripple which would require a capacitor in the hundreds of microfarads.  There's no harm in adding some extra capacitance, and the schematic from the datasheet shown above shows a 1000<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F capacitor, so I decided to go with 1000<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F.</p>
<p>An advantage of going with such a large capacitor is that it drops the capacitive impedance presented to the AC component of the current close to zero.  This means that the impedance of the cap is primarily due to its Equivalent Series Resistance (ESR).  Most caps have an ESR rating which can be modeled as a resistor of that value in series with an ideal cap (duh).  As the cap's value gets very large, we can model the circuit like this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/ESR.png"><img class="aligncenter size-full wp-image-3976" title="ESR" src="http://ch00ftech.com/wp-content/uploads/2013/08/ESR.png" alt="" width="875" height="331" /></a></p>
<p>Note that this only models the AC function of the circuit.</p>
<p>So with this simplified version, you can easily determine the output voltage ripple due to the ESR of the capacitor:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_38564ec234c765748fbab828e0592d82.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \Delta V=\Delta I_{mag}\times ESR" /></span><script type='math/tex'>\large \Delta V=\Delta I_{mag}\times ESR</script></p>
<p>Assuming the ripple due to the capacitor is negligible, let's determine an ESR that gives us 0.1V of ripple:</p>
<p><span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_2f7e54170ec54eb444f2b0eab00be722.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\large \frac{.1V}{1.8A}=56m\Omega" /></span><script type='math/tex'>\large \frac{.1V}{1.8A}=56m\Omega</script></p>
<h1>Diode</h1>
<p>The purpose of the diode is to allow the inductor to continue to conduct even when the input switch is opened.  Inductors "don't like" to have their currents changed rapidly, and will induce an electric potential to keep current flowing as their energy-storing magnetic fields collapse.  Without the diode, the inductor would generate a very large voltage that could potentially damage the switch (also, the circuit just generally wouldn't work).</p>
<p>Selection of the diode is fairly simple.  It needs to be able to tolerate the reversed biased voltage presented to it.  In this case, that's 48V while the switch is closed.</p>
<p>It also needs to be able to conduct enough current to keep up with <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_13c6f96418eb5b730b5dc97e014331e9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="I_{mag}" /></span><script type='math/tex'>I_{mag}</script>.  For the most part, you only need to worry about <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_212dd6fa5d80da785b67fd8a45765633.gif' style='vertical-align: middle; border: none; ' class='tex' alt="<I_{mag}>" /></span><script type='math/tex'><I_{mag}></script> as most diodes will have a higher instantaneous current rating than DC current rating anyway.</p>
<p>Finally, you want your diode to be efficient.  All diodes have a forward voltage drop.  As current passes over this voltage drop, energy will be dissipated.  The lower the <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_7041d411574ddfb7190b3d730d2355f9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="V_F" /></span><script type='math/tex'>V_F</script>, the less energy is wasted.  Most silicon diodes have a <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_7041d411574ddfb7190b3d730d2355f9.gif' style='vertical-align: middle; border: none; ' class='tex' alt="V_F" /></span><script type='math/tex'>V_F</script> of 0.7V while Schottky diodes drop much lower.</p>
<p>Additionally, Schottky diodes are sometimes called "fast recovery" diodes because they are able to switch on and off quickly.  Silicon diodes often have a small amount of <del>capacitance</del> charge built up in their junction that needs to be removed before they will block reverse current. This will cause them to draw current in reverse for a small period of time every time they are reversed biased.  This pulls current away from the load and places a heavier burden on the switch.</p>
<h1>So that wasn't that bad, how'd you mess it up?</h1>
<p>So...right.</p>
<p>Starting out, I wasn't too excited about this project because it's really not anything super new.  These lights have been used everywhere, and it isn't difficult to find pre-made solutions that do exactly what I'm trying to do.  I mostly added the buck converter as a way to make this project somewhat more challenging/interesting.</p>
<p>Unmotivated, I definitely didn't spend enough time with my head "in the zone" to vet out all of the decisions I was making during the design of this device.  I came up with two PCB designs, ordered parts, and quickly assembled them:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/circuits.jpg"><img class="aligncenter size-full wp-image-3982" title="circuits" src="http://ch00ftech.com/wp-content/uploads/2013/08/circuits.jpg" alt="" width="1024" height="768" /></a></p>
<p>The circuit on the left connects to the 48VDC supply and to a computer over USB.  The onboard FTDI serial interface chip and RS422 converter take the data from USB and pass it through ethernet along with the 48VDC.  The circuit on the right accepts the 48VDC and steps it down to 12V for the LEDs and then down to 5V with a linear regulator for the onboard AVR. The idea is for the AVR to take frames passed to it over ethernet and move the data out to the LEDs.</p>
<p>Here's a collection of things I messed up:</p>
<h2>Diode Selection</h2>
<p>I really don't know how I mixed this one up so bad.  For some reason, I selected the <a href="http://ch00ftech.com/wp-content/uploads/2013/08/ss3p3.pdf">SS3P3</a> Schottky diode from Vishay.  I guess I got the Schottky part right, but a quick glance at the datasheet should have shown me the vital <strong>30V</strong> reverse bias voltage limit.  I guess at the time, I was thinking that the diode would only be exposed to the output voltage.  I have no idea why I thought this, but a 30V diode will not last long in a 48V circuit.</p>
<p>The diode actually held up for maybe 30 seconds, but then it promptly burned out.  I went through 5 diodes this way.  Interestingly, at one point, I tried working two diodes in series so that they'd each only have to handle 24V, but they also burned out in a similar fashion.  I'm guessing that that's due to the heat dissipation issues associated with a power diode floating over the board with no copper to pull the heat away.  It could also been because 12V wasn't enough of a safety margin.</p>
<h2>Capacitor Selection</h2>
<p>So I made a few mistakes here.  You'll notice on the left PCB up there there are two locations which look like they could hold SMT caps.  These are there because I somehow forgot about capacitor voltage limits while selecting and placing those caps.  Those footprints are for 16V caps which would explode the second I connected them to the 48V supply rail.</p>
<p>On the output side, I made a few mistakes.  Firstly, I budgeted to have two 1000<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F capacitors, but somehow messed up my parts library and ended up placing footprints for 100<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F caps thinking they were 1000<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F.  This error carried through to my order, so I never ordered the 1000<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F caps.</p>
<p>Still though, 200<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F of capacitor should have been large enough to handle my voltage ripple (I only needed 45<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>F, remember?).  Unfortunately, I didn't think to even look at the <a href="http://ch00ftech.com/wp-content/uploads/2013/08/e-wx.pdf">datasheet</a> for these caps:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/capdatasheet.png"><img class="aligncenter size-full wp-image-3985" title="capdatasheet" src="http://ch00ftech.com/wp-content/uploads/2013/08/capdatasheet.png" alt="" width="1577" height="710" /></a></p>
<p>The layout of the datasheet is a little vague. There is no listed ESR, but the rated ripple current is either 23 or 18 <strong>milliamps</strong>. Considering my math shows something like 1-2 <strong>amps</strong> of ripple current, these caps don't stand a chance.</p>
<p>That's why the amount of voltage ripple on the output shouldn't be a surprise:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/ripplecurrent.png"><img class="aligncenter size-full wp-image-3986" title="ripplecurrent" src="http://ch00ftech.com/wp-content/uploads/2013/08/ripplecurrent.png" alt="" width="942" height="624" /></a></p>
<p>That's 1.35V peak to peak.</p>
<p>Interestingly, the frequency here is almost half the rated 50+kHz.  I'm guessing the regulator is in some kind of special mode as a result of the crazy output voltage swing.</p>
<h1>Attempts to fix it and reading the datasheet more closely</h1>
<p>So when my circuit kept blowing up, I made a few attempts to fix it.  As shown in the header image to this post, I tried at one point to add a larger inductor (which I pulled out of my failed <a title="Dimming an EL panel is harder than it looks" href="http://ch00ftech.com/2012/05/14/dimming-an-el-panel-is-harder-than-it-looks/">EL wire power supply</a>).  This was after looking closer at the regulator datasheet where I saw a plot that's supposed to help you size your inductor:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/inductorplot.png"><img class="aligncenter size-full wp-image-3987" title="inductorplot" src="http://ch00ftech.com/wp-content/uploads/2013/08/inductorplot.png" alt="" width="785" height="705" /></a></p>
<p>This plot would seem to indicate that I should use a 220<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>H inductor.  I'm still convinced that this isn't necessary.  I connected my multimeter in series with the 100<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>H inductor and took a measurement of the AC and DC current flowing through it with a 1.8A load.</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4821.jpg"><img class="aligncenter size-full wp-image-3988" title="IMG_4821" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4821.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4822.jpg"><img class="aligncenter size-full wp-image-3989" title="IMG_4822" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4822.jpg" alt="" width="1024" height="683" /></a></p>
<p>0.541A is the RMS of the AC current passing through the inductor.  In order to convert this to <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_fc964c1e47bdeb6d098a90b41353ea6d.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\Delta I_{mag}" /></span><script type='math/tex'>\Delta I_{mag}</script>, I need to convert the RMS current into the peak to peak of a triangle wave.  This can be done by multiplying by <span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_91a24814efa2661939c57367281c819c.gif' style='vertical-align: middle; border: none; ' class='tex' alt="\sqrt{3}" /></span><script type='math/tex'>\sqrt{3}</script>.  This works out to just under 1A. This seems to be just in line with predictions.  I said earlier that we'd have 1.8A of ripple for a 3A load, and here I'm getting 1A of ripple for a 1.8A load.</p>
<p>I'm skeptical, but I've ordered a 220<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>H inductor just in case.  For all I know, there's something weird about this particular regulator that requires an especially large inductor.</p>
<p>In order to get some of the measurements for this post I had to replace my burned out Schottky diodes with the only diodes I had on hand, 1N4001s:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4826.jpg"><img class="aligncenter size-full wp-image-3990" title="IMG_4826" src="http://ch00ftech.com/wp-content/uploads/2013/08/IMG_4826.jpg" alt="" width="1024" height="683" /></a></p>
<p>These are rated for 50V but only 1A, so I had to place three of them in parallel.  Even with this parallelization, they heat up really fast, and I can only keep the circuit running for a few seconds at a time.  This is because they are very slow diodes that are not meant for high frequency applications.  This is where that "fast recovery" thing comes into play.</p>
<p>I guess I shouldn't have been surprised with the results when I discovered this line in the datasheet specifically calling out the 1N4001:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/08/whoops.png"><img class="aligncenter size-full wp-image-3992" title="whoops" src="http://ch00ftech.com/wp-content/uploads/2013/08/whoops.png" alt="" width="1042" height="70" /></a></p>
<p>I've ordered some new diodes which should get here along with the inductor.</p>
<p>As for the capacitors, they heat up immediately after power on.  I'll be ordering some new high current caps as well while I'm at it.</p>
<h1>Bad Ass-umptions</h1>
<p>I was a little upset to discover that even with all of these updates, the entire execution of this concept is flawed.  Before, I talked about the current draw per 5m LED strand being 0.7A.  I derived this number by watching the current of the strand while running a little scrolling rainbow pattern routine that I wrote.</p>
<p>Unfortunately, I somehow neglected to note that the color white is tragically left out of the rainbow.  White involves all three colors, and is the worst case scenario from a power draw standpoint.  While I had originally assumed a current draw of 0.7A per strand, the actual current draw is 1.8A per strand.</p>
<p>This means that all three strands add up to 5.4A which is way beyond the 3A maximum output of this circuit.  Furthermore, at 12V, the lights will draw around 60W of power.  My 48V supply can only output 1.25A which places it just barely at 60W and not nearly high enough to work once conversion losses and safety factor are taken into account.</p>
<p>DANG</p>
<h1>Conclusion</h1>
<p>So, yes, the circuit isn't currently working, and even if it was working 100% as designed, it was still designed under bad assumptions and will never function as intended.</p>
<p>I think my next step is going to be fixing up the circuit so that I can at least demonstrate it powering a single strand. Then I'll come up with a better simpler solution for what I'm trying to accomplish.</p>
<p>If I just ditch the ethernet idea, it should be trivial to run 12VDC around the room.  I can even spread out multiple taps to take care of resistive losses in the power lines.  This might even let me keep the ethernet , so I don't have to throw away the circuits I've made.  By spreading out the power draw to multiple cables, I might come in just under the ethernet spec.</p>
<p>In other words, YOU CAN'T STOP THE PARTY!</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/08/18/bucking-it-up/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
		</item>
		<item>
		<title>[No Longer] Writing for Hackaday</title>
		<link>http://ch00ftech.com/2013/08/12/now-writing-for-hackaday/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=now-writing-for-hackaday</link>
		<comments>http://ch00ftech.com/2013/08/12/now-writing-for-hackaday/#comments</comments>
		<pubDate>Mon, 12 Aug 2013 15:39:02 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Blog]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=3925</guid>
		<description><![CDATA[&#160; If you checked out Hackaday.com earlier today, you may have noticed a familiar name on the byline of one of the recent posts. A few weeks ago, Mike Szczys, the Managing Editor of Hackaday, contacted me asking if I &#8230; <a href="http://ch00ftech.com/2013/08/12/now-writing-for-hackaday/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p>&nbsp;</p>
<p><del>If you checked out Hackaday.com earlier today, you may have noticed a familiar name on the byline of one of the <a href="http://hackaday.com/2013/08/12/boominator-solar-stereo-keeps-the-music-pumping-even-in-cloudy-weather/">recent posts</a>.</del></p>
<p><del>A few weeks ago, Mike Szczys, the Managing Editor of Hackaday, contacted me asking if I would like to write for the blog.  Owing a lot of my web traffic to Hackaday and being a fan for a while, I happily took the offer.  My priorities still lie with my own blog (and y'know...my day job), so don't expect my blog posts to slow down <em>any more than they already have</em>.</del></p>
<p><del>I probably won't be contributing as much as the other writers, but if you have any tips for something that you think is Hackaday worthy, feel free to email or tweet them to me.</del></p>
<p>I wrote four articles for Hack-a-day, but couldn't keep up with their publication schedule, so I quit.  It was fun while it lasted.</p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/08/12/now-writing-for-hackaday/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>Rolling Shutter Display</title>
		<link>http://ch00ftech.com/2013/07/11/rolling-shutter-display/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=rolling-shutter-display</link>
		<comments>http://ch00ftech.com/2013/07/11/rolling-shutter-display/#comments</comments>
		<pubDate>Thu, 11 Jul 2013 03:50:00 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[Rolling Shutter Display]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=3882</guid>
		<description><![CDATA[I've got a few days before my big summer vacation, so I thought I'd hammer out an incredibly impractical display technology! Rolling Shutter In order to fully understand what you're seeing above, you need to know a thing or two &#8230; <a href="http://ch00ftech.com/2013/07/11/rolling-shutter-display/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><iframe width="584" height="329" src="http://www.youtube.com/embed/AoX_kqehU7s?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>I've got a few days before my big summer vacation, so I thought I'd hammer out an incredibly impractical display technology!</p>
<p><span id="more-3882"></span></p>
<h1>Rolling Shutter</h1>
<p>In order to fully understand what you're seeing above, you need to know a thing or two about how CMOS camera sensors work.  CMOS or "Complimentary Metal-Oxide Semiconductor" image sensors can be found in a plethora of consumer level imaging devices.  Anything from cellphones to digital SLRs.</p>
<p>Any image sensor simply needs to provide a grid of light sensitive pixels that can record how much light hits them.  Light is focused on to this sensor with a lens, and what the sensor records is reconstituted into an image using some image processing.</p>
<p>Now, one thing that's special about CMOS sensors in particular is how the data is read off of them.  One might expect that a photo sensor being used to take a picture (or a series of pictures in a video) captures a single moment in time.  In reality, it captures an extended moment.</p>
<p>See, for most CMOS sensors, the image can not be read entirely all at once.  Only one row of pixels can be read at a time (the exception is Global Shutter devices which you might find in high end cameras)..  This means that the first row captures a moment in time very slightly before the last row.  For the most part, this doesn't really matter, but it can cause some issues when the object you are recording is moving fast enough such that it has changed locations between when the first and last row are recorded.</p>
<p>This is often referred to as "rolling shutter", and you can find examples of it all over the internet:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/blades-1282772892.jpg"><img class="aligncenter size-full wp-image-3883" title="blades-1282772892" src="http://ch00ftech.com/wp-content/uploads/2013/07/blades-1282772892.jpg" alt="" width="500" height="374" /></a></p>
<p>(image credit: <a href="http://www.tuaw.com/2010/08/26/rolling-shutter-effect-can-make-stunning-iphone-photos/">TUAW</a>)</p>
<p>While this effect can produce some rather surreal works of art, I was curious if it could be harnessed to accomplish a specific task: creating a display.</p>
<h1>The Display</h1>
<p>If you read my blog often, you're no stranger to <a title="LED persistence of vision toy" href="http://ch00ftech.com/2011/10/24/led-persistence-of-vision-toy/">persistence of vision displays</a>.  The basic concept behind a POV display is generating a 2D image by taking a single row of point light sources and moving it rapidly while changing its lighting configuration.  In this way, a 2D image can be swept out with a 1D array.</p>
<p>I wanted to see if it was possible to emulate this sweeping motion with the rolling shutter of a digital camera.  I woke up with this idea on the 4th of July.  I don't remember what I was dreaming about, so I'm not entirely sure if I'm allowed to take total credit for it...</p>
<p>By creating a vertical column of lights that can be illuminated in a very specific manner, it should be possible to draw an image using the rolling shutter effect from a digital camera.  Let me explain:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/cmosscan1.png"><img class="aligncenter size-full wp-image-3886" title="cmosscan1" src="http://ch00ftech.com/wp-content/uploads/2013/07/cmosscan1.png" alt="" width="1024" height="1024" /></a></p>
<p>Above, you can see what is supposed to be six vertical columns of light.  Each of the columns can be illuminated, but the entire column must be illuminated at once (imagine a flashlight aiming down a translucent paper tube).  On the left, an arrow indicates which row of the CMOS scanner is being recorded.  Below it is a depiction of what the resulting image looks like so far.  As you can see, nothing too surprising.  But then, mid scan, the lights change configuration:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/cmosscan2.png"><img class="aligncenter size-full wp-image-3887" title="cmosscan2" src="http://ch00ftech.com/wp-content/uploads/2013/07/cmosscan2.png" alt="" width="1024" height="1024" /></a></p>
<p>As you can see, the resulting image now contains rows of pixels from the first configuration as well as the new arrangement.  If the lighting configurations were to continue to change, an entire image could be drawn out this way:</p>
<h1><a href="http://ch00ftech.com/wp-content/uploads/2013/07/cmosscan_3.png"><img class="aligncenter size-full wp-image-3897" title="cmosscan_3" src="http://ch00ftech.com/wp-content/uploads/2013/07/cmosscan_3.png" alt="" width="1024" height="1024" /></a></h1>
<p>In other words, the vertical placement and scale of the pixels is handled by the rolling shutter artifact in CMOS sensors while the horizontal placement is handled by a microcontroller illuminating LEDs.</p>
<h1>Hardware</h1>
<p>So to make this thing happen, I just had to illuminate a few vertical columns of light in a very particular pattern and speed and aim a camera at them.  The circuit here is extremely simple (just a few LEDs), so I decided to focus a little more on the aesthetics.</p>
<p>In order to properly demonstrate exactly what's going on here, I wanted to create a display out of something that couldn't be used to display images otherwise.  For example, if I used paper tubes as mentioned above, an observer may think that I had simply filled the tubes with an array of LEDs to create the effect.</p>
<p>Originally, I was hoping to use some <a href="http://www.amazon.com/Lumisource-LS-RADIANCE-FLR-Radiance-Floor/dp/B0036074GO/ref=sr_1_1?ie=UTF8&amp;qid=1373515946&amp;sr=8-1&amp;keywords=bubble+lamp">bubble lights</a>, but I was a little put off by their price tag.  Eventually, I settled on fiber optic bundles.  These are the kinds of things you see all the time being sold at outdoor events during the summer.  They're very cheap, and can create a pretty neat effect.  Looking around on Amazon, I found some "Light Up Hair Extensions":</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2442.jpg"><img class="aligncenter size-full wp-image-3889" title="IMG_2442" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2442.jpg" alt="" width="1024" height="683" /></a></p>
<p>When switched on, they flash and fade in a number of colors and patterns:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2446.jpg"><img class="aligncenter size-full wp-image-3890" title="IMG_2446" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2446.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2450.jpg"><img class="aligncenter size-full wp-image-3891" title="IMG_2450" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2450.jpg" alt="" width="1024" height="683" /></a></p>
<p>Taking one apart, I found that the circuit was incredibly simple.  Just an LED and some batteries:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2452.jpg"><img class="aligncenter size-full wp-image-3892" title="IMG_2452" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2452.jpg" alt="" width="1024" height="683" /></a></p>
<p>But wait! How are they flashing and fading without some kind of control circuitry? There isn't even a current limiting resistor!  Just take a closer look at the LED:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2454.jpg"><img class="aligncenter size-full wp-image-3893" title="IMG_2454" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2454.jpg" alt="" width="1024" height="683" /></a></p>
<p>Cool, huh?</p>
<p>But I digress.  Ripping a few of these things apart, I came up with what I needed:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2455.jpg"><img class="aligncenter size-full wp-image-3894" title="IMG_2455" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2455.jpg" alt="" width="1024" height="683" /></a></p>
<p>I'll spare you most of the details, but what happened next was some <strong>very</strong> haphazard breadboarding and some taping of LEDs:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2471.jpg"><img class="aligncenter size-full wp-image-3895" title="IMG_2471" src="http://ch00ftech.com/wp-content/uploads/2013/07/IMG_2471.jpg" alt="" width="1024" height="683" /></a></p>
<p>I'm visiting my family in two days, and I wanted to get this thing working before I left. Don't judge me.</p>
<p>I included four user interface buttons to allow me to "tune" the display.  More on that later.</p>
<h1>Software</h1>
<p>The software for this project was also very simple.  The six LEDs of the display were hooked up to six pins of the same GPIO port.  This allowed me to change all six of them simultaneously.  All my software had to do was take the bytes stored in RAM and output them to that port in turn to generate the image.</p>
<p>The more complicated bit was the timing.  When recording a video, a camera's sensor will record an image at 30 frames per second (actually 29.97, but who's counting?).  That frequency is a standard across almost all video recording devices (in America anyway).  What isn't the least bit standardized is the scan rate of the CMOS sensor.  This second measurement is critical for controlling the vertical size of the image.</p>
<p>Ideally, the scan rate would be infinitely fast, but in reality it will vary from camera to camera depending on the quality of the sensor.  Lower quality cameras tend to have slower sensors and will record more "wobbly" video.</p>
<p>I set the software up with two timers.  One timer fires exactly 30 times a second, and the second timer is triggered by the first and executes once for every row in the image to be displayed before quitting and waiting for the next trigger.</p>
<p>The four buttons allowed me to adjust the length of these two timers to "tune" the image to exactly where I wanted it.</p>
<h1>Is it Practical?</h1>
<p>When I started this project, I was thinking about applying this technique to artwork.  Imagine a giant vertical sculpture in a night club that looks like a bunch of columns of light that fade in and out, but when you look through your cellphone's camera, you see an image!  Cool huh?  Sure, you couldn't make an pattern that displays exactly the same image on everyone's phone due to the aforementioned differences in CMOS speed, but you could probably have it progress through various speeds so that people would eventually see something clear if they looked long enough.  Heck, the distortion caused by viewing the image at the wrong speed might look kind of neat on its own.</p>
<p>Looking at the video, this might seem pretty feasible, but there is one detail that I didn't mention, and it has to do with how cameras deal with changes in subject brightness.</p>
<p>With a digital and film camera alike, there are only a handful of things you can do to limit how many photons strike the sensor or film and how they affect the resulting image.  You can adjust the sensitivity of the sensor or film, decrease the aperture size (make the sensor peer through a smaller hole), or simply limit the amount of time you expose the sensor to light.</p>
<p>In the case of a SLR, this last one can be problematic.  The actual mechanism that moves to expose the film or sensor to light can only move so fast.  It may take longer just to open the shutter than the entire exposure is supposed to last!  Take a look at this video:</p>
<p><iframe width="584" height="438" src="http://www.youtube.com/embed/8xEVAyIlgvw?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>You can see that this problem is solved by passing a small slit of open shutter over the image sensor.  This way, any given pixel on the sensor is only exposed for a brief period of time, but they are exposed at slightly different times as the shutter moves.  Sound familiar?</p>
<p>This is how the image from <a href="http://www.reddit.com/r/photography/comments/hchhs/waterballoon_what_just_happened/">this</a> thread was captured:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/balloon.jpg"><img class="aligncenter size-full wp-image-3896" title="balloon" src="http://ch00ftech.com/wp-content/uploads/2013/07/balloon.jpg" alt="" width="1024" height="768" /></a></p>
<p>The ballon started to pop when the shutter's gap was in the middle of the image.  Note that the image isn't blurry because each pixel was only exposed for a very brief period of time. It's just...a little wonky.   As a brief side note, this is the same reason why DSLRs can't operate with a flash with an exposure set faster than  1/200th of a second.  Since the flash is only a few microseconds long, only the area under the gap in the shutter at the time of flash will get exposed properly.  Under 1/200th, the curtain is actually fast enough to expose the entire frame simultaneously before firing the strobe.</p>
<p>As it turns out, this same problem exists for cellphone cameras that have no moving parts.  Just like the shutter curtain, a CMOS sensor can only "move" so fast.  Unlike SLR cameras, cheap cellphone cameras cannot adjust their aperture, and while some work can be done to increase the sensitivity of a sensor by applying gain, not a lot can be done to decrease it once the subject is bright enough.  The only alternative is to adjust the exposure time.  This is where the wonkiness comes in.</p>
<p>What does this have to do with me?</p>
<p>Well, in order to get a proper exposure in low light environments, a camera's sensor is going to increase its exposure time as much as possible.  In the diagram above, I used a red arrow to indicate exactly where the pixels were being read from, but in reality, there should be two arrows.  One arrow turns on the sensors, and a later arrow collects data from them.  The resulting image will be a time average of all of the light that hit the pixels between these two arrows:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/07/cmosblurry.png"><img class="aligncenter size-full wp-image-3898" title="cmosblurry" src="http://ch00ftech.com/wp-content/uploads/2013/07/cmosblurry.png" alt="" width="1024" height="1024" /></a></p>
<p>The end result is that the light configuration will change between the time when a pixel is activated and when its data is collected.  That means that the pixel will contain an average of data from both configurations.  The image will appear blurry and there will be some vertical overlap.</p>
<p>For the video I showed, I used a fancy video camera that let me manually set the exposure time per frame.  By decreasing the exposure time, I was able to force those two arrows close together to minimize overlap and blur (coincidentally, this video camera was actually DSLR though for video mode, the mechanical shutter is locked open, and the shutter speed is controlled by the CMOS sensor).</p>
<p>In most cameras however, the user has very little control over the exposure time.  In very low light situations, the exposure time will be so long that the camera will have time to activate all of the pixels before it even begins to collect data.  In some cases, each pixel might be averaging the data from <em>every</em> light configuration instead of just one or two.</p>
<p>The only way to force a cheap camera to quicken its shutter speed is to expose it to a very bright light source.  This is why most of the super weird images you see are of things like airplane propellers in broad daylight.  Under dimmer conditions, the user might just see a blurry propeller as one is accustomed to seeing with a naked eye.</p>
<p>So if I wanted to install something in a night club and have it work with a wide variety of the cameras one would expect to find there, I would need a display bright enough to rival the Sun, and that's not the kind of thing people really want in their <em>night </em>club.</p>
<h1>Conclusion</h1>
<p>So the moral of the story is that this thing really isn't very practical at all.  It was just a quick and dirty project, and I'm kind of glad I got something working without spending too much time/money on it just to be let down.</p>
<p>It was also a great review of how camera sensors work which is knowledge I might be putting towards a future project.</p>
<p>Plus I have some cool leftover light up hair extensions!</p>
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/07/11/rolling-shutter-display/feed/</wfw:commentRss>
		<slash:comments>11</slash:comments>
		</item>
		<item>
		<title>Getting Itty Bitty With The Ice Breaker 2.0</title>
		<link>http://ch00ftech.com/2013/06/11/getting-itty-bitty-with-the-ice-breaker-2-0/?utm_source=rss&#038;utm_medium=rss&#038;utm_campaign=getting-itty-bitty-with-the-ice-breaker-2-0</link>
		<comments>http://ch00ftech.com/2013/06/11/getting-itty-bitty-with-the-ice-breaker-2-0/#comments</comments>
		<pubDate>Tue, 11 Jun 2013 03:59:47 +0000</pubDate>
		<dc:creator>ch00f</dc:creator>
				<category><![CDATA[The Ice Breaker]]></category>

		<guid isPermaLink="false">http://ch00ftech.com/?p=3815</guid>
		<description><![CDATA[Dusted off and polished an old idea to get it ready for prime time! Background About eighteen months ago (jesus, was it really that long?), I made the "Ice Breaker", a small persistence of vision toy worn on the hand &#8230; <a href="http://ch00ftech.com/2013/06/11/getting-itty-bitty-with-the-ice-breaker-2-0/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
			<content:encoded><![CDATA[<p><iframe width="584" height="329" src="http://www.youtube.com/embed/wocugXQ58FY?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>Dusted off and polished an old idea to get it ready for prime time!</p>
<h1><span id="more-3815"></span>Background</h1>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2320.jpg"><img class="aligncenter size-full wp-image-3816" title="IMG_2320" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2320.jpg" alt="" width="1024" height="683" /></a></p>
<p>About eighteen months ago (jesus, was it really that long?), I made the "<a title="Ice Breaker v1.1" href="http://ch00ftech.com/2011/11/24/ice-breaker-v1-1/">Ice Breaker</a>", a small persistence of vision toy worn on the hand that displays "HELLO" or "GOODBYE" when waved back and forth.  It contained a "ghetto" accelerometer that determined the frequency and phase of the user's hand motion and drew apparently stationary text on the forward swing.</p>
<p>Before the <a title="The Slowest $380 I'll Ever Make" href="http://ch00ftech.com/2013/05/19/the-slowest-100-ive-ever-made/">QR Clock</a>, I was planning on turning this into the first commercial Ch00ftech product.  It's a super small and relatively low-risk circuit (unlike the clock), which makes it great for the purpose.  I figured that with some clever engineering, I could get the bill of materials costs down to a minimum and improve the functionality while I'm at it.</p>
<p>Still not sure if I want to go through all the work of selling this thing since I'm still nursing my wounds from the QR clock experiment, but I thought designing it for such a purpose posed an interesting challenge.</p>
<p>Who knows, if the demand is high enough, I might make a small run.</p>
<h1>Accelerometer</h1>
<p>The original Ice Breaker had a number of features that would make it very expensive to manufacture.  The biggest problem was the ghetto accelerometer.  Taking a tip from a similar device that I <a title="In Which I Spent my Weekend Reverse Engineering a Children's Toy." href="http://ch00ftech.com/2011/12/20/in-which-i-spent-my-weekend-reverse-engineering-a-childrens-toy/">reverse engineered</a>, I built my "accelerometer" using a drinking straw, a wad of paper, and an infra-red proximity sensor:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2011/11/IMG_8037.jpg"><img class="aligncenter size-full wp-image-793" title="IMG_8037" src="http://ch00ftech.com/wp-content/uploads/2011/11/IMG_8037.jpg" alt="" width="1024" height="683" /></a></p>
<p>The idea was that when the wad of paper passed in front of the sensor, it would send a pulse back to the micro controller that would indicate that the user had reached the beginning or the end of a wave.</p>
<p>This whole system utilized the inherent properties of a mass inside a tube to function.  The wad of paper only moved when the retrograde acceleration was large enough to overcome friction.  It's actually super convenient because it works out that the paper only moved at the absolute edges of the waving motion.</p>
<p>This solution is much cheaper than an accelerometer when you have access to the tools required to mass produce a plastic housing, but I'm not going to make thousands of these if I end up cutting up and gluing drinking straws for each one.</p>
<p>I settled on a conventional accelerometer.  If you shop for accelerometers, you'll rapidly find that the market (phones) has dictated that they have to be tiny.  This basically rules out any sort of leaded package.  I chose the <a href="http://ch00ftech.com/wp-content/uploads/2013/06/KXTC9-2050-Specifications-Rev-1_0.pdf">KXTC9-2050</a>, a 2g, 3 axis accelerometer based on its capabilities and low price.  I only needed a single axis, but again, the demand for 3 axes is huge.</p>
<p>I wasn't sure how exactly this part would behave in the context of a waving motion, so I ended up building a small breakout board that would let me run some experiments.  The part is a "Land Grid Array" (LGA) package which means that there are no leads and the solder points are on the bottom of the part; the pitch between pads is also very small (.65mm).</p>
<p>I was impressed with how fine I managed to make the contacts on the breakout board:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1439.jpg"><img class="aligncenter size-full wp-image-3818" title="IMG_1439" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1439.jpg" alt="" width="1024" height="683" /></a></p>
<p>It's gotten to the point where I'm pretty sure I can do anything with my current <a title="The Ch00ftech Guide to PCB Printing" href="http://ch00ftech.com/2012/11/12/the-ch00ftech-guide-to-pcb-printing/">fab methods</a>...</p>
<p>In the absence of a hot-air gun at home, I originally tried to assemble this thing using a blow torch attachment for my butane soldering iron and managed to COMPLETELY screw it up.  A second attempt using a hot air gun at work got me this:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2321.jpg"><img class="aligncenter size-full wp-image-3819" title="IMG_2321" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2321.jpg" alt="" width="1024" height="683" /></a></p>
<p>The accelerometer puts out an analog voltage that's centered at around 1.65V and goes up and down for positive and negative acceleration.  I hooked the thing up to an oscilloscope and took a video of me waving it around.  Video analysis seemed to show that the output was at an extreme during the beginning and end of each motion:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/forth.jpg"><img class="aligncenter size-full wp-image-3820" title="forth" src="http://ch00ftech.com/wp-content/uploads/2013/06/forth.jpg" alt="" width="1024" height="576" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/back.jpg"><img class="aligncenter size-full wp-image-3821" title="back" src="http://ch00ftech.com/wp-content/uploads/2013/06/back.jpg" alt="" width="1024" height="576" /></a></p>
<p>This was good news for my application.  By detecting the maximum and minimum of each motion, I would be able to determine the exact starting and ending points.</p>
<p>I also discovered another cool feature of the accelerometer.  It seemed that no matter how low the input voltage got, the minimum output voltage stayed at a constant .7V (no doubt because of some kind of diode situation going on inside):</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_0907.jpg"><img class="aligncenter size-full wp-image-3822" title="IMG_0907" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_0907.jpg" alt="" width="1024" height="768" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_0908.jpg"><img class="aligncenter size-full wp-image-3823" title="IMG_0908" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_0908.jpg" alt="" width="1024" height="768" /></a></p>
<p>This was good because all I would need to do is look for times when the accelerometer's voltage dropped below around .75V to  locate the beginning of each cycle.</p>
<p>Satisfied, I moved on to the rest of the circuit.</p>
<h1>On the Cheap</h1>
<p>There really wasn't a whole lot of space for lowering the cost of the original circuit.  After all, it was just 8 LEDs and a micro controller.  Even ditching the drinking straw left me with a replacement $3 accelerometer.  The only spot I saw room for improvement was with the switch.</p>
<p>A lot of people don't realize this, but it's not very uncommon to see physical interface items like switches and plugs dominate the pricing of a BOM.  The double pole triple throw switch that I used for the original design which acted as both the power and mode switch cost a whopping <a href="http://www.digikey.com/product-detail/en/AYZ0203AGRLC/401-2015-1-ND/1640124">$1.33</a> which places it a good $.20 above the <a href="http://www.digikey.com/product-detail/en/ATTINY24A-SSUR/ATTINY24A-SSURCT-ND/2774343">microcontroller</a> which...y'know...actually has the millions of transistors and does all the magic.</p>
<p>I replaced it with a simple <a href="http://www.digikey.com/product-detail/en/PTS645SM43SMTR92%20LFS/CKN9112CT-ND/1146934">tactile switch</a> that lopped a good dollar off the price of the original.  Unlike the original switch, I wasn't able to route power directly through this one, so I opted to use the technique I developed for my <a title="Longboard Wheel Display" href="http://ch00ftech.com/2012/11/15/lonboard-wheel-display/">Longboard Display</a> which involves sleeping the circuit when it's not in use and waking it up from a button press.</p>
<p>One other area where I was concerned about manufacturing costs was the actual mechanism that holds the device on the user's finger.  I ended up opting for two simple pieces of wire creating a finger loop.</p>
<p>I was originally planning on using some kind of thread, so I wasn't too worried about the solder properties of my holes.  These holes doubled as ground plane vias, and they were printed with no thermals.  Thermals are the little gaps around solder points that help slow the flow of heat away from the solder pad.  Without them, it's often too hard to heat up a pad hot enough to melt solder.</p>
<p>I had no trouble melting the solder when adding the wire, but removing the solder that plugged the holes after the wire inevitably broke almost destroyed the entire circuit.  After about half an hour with an iron, solder wick, a hot air gun, and tweezers, I was able to remove it.  For the next round, I chose to stick the wire through and blob some solder on the end to act as a plug to keep the wire in place without soldering it to the PCB:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2358.jpg"><img class="aligncenter size-full wp-image-3847" title="IMG_2358" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2358.jpg" alt="" width="1024" height="683" /></a></p>
<p>If I were to sell these, I'd probably leave it up to the end users to find a way to attach it to their fingers.  I might widen the holes a bit to help them.</p>
<h1>Tiny</h1>
<p>I wanted this device to be something small enough to put on a keychain and keep with you at all times.  Because of this, I opted to not even try to suffer through hand crafting the tiny vias required to make something so small and instead got the boards made at my new favorite low-volume fab house <a href="http://www.seeedstudio.com/depot/">seeedstudio</a>:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1980.jpg"><img class="aligncenter size-full wp-image-3824" title="IMG_1980" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1980.jpg" alt="" width="1024" height="683" /></a></p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1981.jpg"><img class="aligncenter size-full wp-image-3825" title="IMG_1981" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1981.jpg" alt="" width="1024" height="683" /></a></p>
<p>In addition to shrinking the accelerometer down to a 3x3mm LGA package, I also chose a 4x4mm Micro Lead Frame (MLF) package for the microcontroller and even dropped the battery down to a CR2016 which is 8mm smaller than the CR2032 I used before.</p>
<p>Without access to a hot air gun at home, soldering the microcontroller and accelerometer wasn't trivial.  I've done reflow soldering <a title="Flow and Reflow are riding in a boat..." href="http://ch00ftech.com/2010/09/16/flow-and-reflow-are-riding-in-a-boat/">before</a>, but this time, I couldn't find a solder stencil for the packages I was using.  I read somewhere online that reflow soldering can be pretty forgiving, so I opted instead to just apply it by hand.</p>
<p>I purchased some "Chip Quik" solder paste:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1982.jpg"><img class="aligncenter size-full wp-image-3828" title="IMG_1982" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1982.jpg" alt="" width="1024" height="683" /></a></p>
<p>And put a small amount on my PCB.  I used a toothpick to remove some of the paste between the traces:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1987.jpg"><img class="aligncenter size-full wp-image-3830" title="IMG_1987" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1987.jpg" alt="" width="1024" height="683" /></a></p>
<p>And carefully placed my components on top:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1988.jpg"><img class="aligncenter size-full wp-image-3831" title="IMG_1988" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_1988.jpg" alt="" width="1024" height="683" /></a></p>
<p>Then I plunked the whole PCB down in a frying pan on the stove and heated it up until the solder flowed locking the chip in place:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/soldertime.gif"><img class="aligncenter size-full wp-image-3829" title="soldertime" src="http://ch00ftech.com/wp-content/uploads/2013/06/soldertime.gif" alt="" width="406" height="359" /></a></p>
<p>Wow!  This gif is probably playing back slightly sped up, but in reality the whole process still only took about 10 seconds once it got started.  I made a big deal the last time I did this about getting the solder paste exactly right, but judging from my experience this time, I could have done much worse.</p>
<p>Now, It wasn't totally perfect.  I applied way too much paste which ended up creating a few shorts:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/short.jpg"><img class="aligncenter size-full wp-image-3832" title="short" src="http://ch00ftech.com/wp-content/uploads/2013/06/short.jpg" alt="" width="800" height="533" /></a></p>
<p>But they were quickly dispatched with a swift tap of a hot soldering iron:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/noshort.jpg"><img class="aligncenter size-full wp-image-3833" title="noshort" src="http://ch00ftech.com/wp-content/uploads/2013/06/noshort.jpg" alt="" width="800" height="533" /></a></p>
<p>I imagine the precision of a good solder stencil is very important when you're making hundreds or thousands of something, but I was excited to find that for small hobby projects, a toothpick and 5mL of paste will go a long way.</p>
<p>I imagine I could probably make it smaller still if I wanted to.  Replacing the current limiting resistors with a single resistor array and replacing the programming header with a smaller proprietary header could also shave off a few square millimeters.  Though anything smaller than the current design would likely require a smaller battery.</p>
<p>Still, I managed to shave the board area of the current design down to 65% of the original and that's not even counting the space taken up by the drinking straw!</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2324.jpg"><img class="aligncenter size-full wp-image-3834" title="IMG_2324" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2324.jpg" alt="" width="1024" height="683" /></a></p>
<h1>Schematic</h1>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/icebreakerschem.png"><img class="aligncenter size-full wp-image-3860" title="icebreakerschem" src="http://ch00ftech.com/wp-content/uploads/2013/06/icebreakerschem.png" alt="" width="1139" height="1016" /></a></p>
<p>Unsurprisingly, the schematic is very simple, though there are a few notes I'd like to share.</p>
<p>R2 and R3 aren't meant to be stuffed at the same time.  It's always kind of disorienting trying to make sense of exactly how the output of an accelerometer will work.  Just take a look at this page from the datasheet:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/accelerometer.png"><img class="aligncenter size-full wp-image-3836" title="accelerometer" src="http://ch00ftech.com/wp-content/uploads/2013/06/accelerometer.png" alt="" width="876" height="403" /></a></p>
<p>Easy, right?</p>
<p>I figured that there was a fairly high chance that I'd mix up X and Y and mount the accelerometer at a 90 degree angle to where it needed to be, so I gave myself some options.  It's not like I'd be able to do rework on a part that hides its terminals underneath it.  As it turns out, R3 was the correct stuffing option.</p>
<p>R13 is used to hold the accelerometer in standby mode when it's not in use.  This drops its current consumption down to just 5<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A which when added to the 2<span class='MathJax_Preview'><img src='http://ch00ftech.com/wp-content/plugins/latex/cache/tex_c9faf6ead2cd2c2187bd943488de1d0a.gif' style='vertical-align: middle; border: none; padding-bottom:1px;' class='tex' alt="\mu" /></span><script type='math/tex'>\mu</script>A of the ATTiny gives me about 1.5 years of standby time on the 90mAh capacity of the CR2016.  This isn't quite as amazing as the 13.6 years of the <a href="http://ch00ftech.com/2012/11/15/lonboard-wheel-display/">longboard display</a>, but considering it's powering more components with a smaller battery, it's still pretty impressive.</p>
<p>Everything else you've seen before on the original Ice Breaker.</p>
<h1>User Interface</h1>
<p>Curtailing the user interface to a single button presented an interesting challenge.  I wanted this device to go beyond the simple hello/goodbye of the original design and allow for user-programmable text.  Through some trial and error, I came up with the following program flow:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/pgmflow.png"><img class="aligncenter size-full wp-image-3850" title="pgmflow" src="http://ch00ftech.com/wp-content/uploads/2013/06/pgmflow.png" alt="" width="1024" height="1152" /></a></p>
<p>Might seem kind of confusing, but I think that it can be pretty intuitive once you have the device in your hand.</p>
<p>The device can store eight twelve-letter patterns which it indicates by lighting up one of the eight LEDs when it's at rest.  It could actually store a lot more than that, but I figured that most people would be displaying short messages anyway.  Besides, working the 8 LEDs into some mode that could indicate more than 8 patterns in a user friendly way is problematic.  Yes, I know what binary is, but a lot of people don't.</p>
<p>When first powered up, the device is populated with 8 standard messages.  I haven't decided what they should be yet, but of course "HELLO", "GOODBYE", "YES", and "NO" will be included.  If you have any more recommendations, let me know.</p>
<p>The user is then free to modify these messages by holding down the interface button to enter into edit mode.  In edit mode, pressing the button briefly will increment the currently selected letter and a longer hold will move to the next letter.</p>
<p>I was originally planning on programming functions for "double tap" and "triple tap", but I realized that they would interfere with the fact that the user is going to want to push the button as fast as possible to roll through the alphabet.  I even considered utilizing the accelerometer to have the user shake the device while holding the button down, but I quickly found that people have much more precision when pushing buttons than when shaking their hand.</p>
<p>The "cursor" is just a bar that replaces the current character every other cycle.  I went through a few different options such as having the letter disappear entirely every other cycle or inverting the letter's colors, but I found that this method was the most visible especially considering cases like selecting a blank space:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/cursor.gif"><img class="aligncenter size-full wp-image-3838" title="cursor" src="http://ch00ftech.com/wp-content/uploads/2013/06/cursor.gif" alt="" width="615" height="451" /></a></p>
<p>The cursor still isn't perfect though.  Depending on the lighting conditions, the users might wear themselves out just trying to figure out which letter they're editing.  This is why I included the "clear current pattern" function.  It's actually fairly easy (if time consuming) to enter an entire word without looking at the device if you keep everything straight in your head.  I figure that the user will just clear out the whole word at the first sign of trouble and start over rather than try to repair it.</p>
<p>Likewise, when editing a letter that's already filled, pressing the button once always changes it to "A" no matter what letter was there before.</p>
<p>Every time the user leaves edit mode, the current set of messages are stored to the nonvolatile EEPROM.  That way, if the device loses power, the custom messages are still preserved.  This is especially important considering how easy it is to short out the battery on anything metallic sharing the same pocket.</p>
<p>If the user really messes up the messages and wants to return them to the defaults, he just needs to remove the battery and hold down the button while replacing the battery.  This runs a special routine which reprograms the EEPROM to the default values stored in the program memory.</p>
<h1>Firmware</h1>
<p>I'm actually kind of proud of this firmware.  A lot of my projects end up with horribly disfigured spaghetti code, but this time I made a point of keeping things orderly from the start (I used my first #define!).  The framework is very similar to the original IceBreaker with a few exceptions.</p>
<p>When I first set out to use the accelerometer, I was really hoping to take advantage of the .7V low output of the accelerometer.  The ATTiny24 has an integrated 1.1V voltage reference that can be compared to an external voltage to generate an interrupt.  I was hoping that the .7V would be close enough to 1.1V to generate an interrupt very close to the end of the wave.  I wrote a quick routine to test this theory that generated a test pattern that included diagonal lines with vertical bars at the beginning and end:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/testpattern.jpg"><img class="aligncenter size-full wp-image-3845" title="testpattern" src="http://ch00ftech.com/wp-content/uploads/2013/06/testpattern.jpg" alt="" width="1024" height="683" /></a></p>
<p>Not even close...</p>
<p>I ditched the 1.1V voltage reference and fell back on a simple digital interrupt.  I noticed that the time between this interrupt and the end of the wave was more or less a constant percentage of the whole wave time.</p>
<p>I rounded this timeout off to the closest thing that I could calculate quickly:</p>
<pre>timeout = (mastercount&gt;&gt;1)+(mastercount&gt;&gt;3);</pre>
<p>This works out to roughly 5/8 of the total cycle time.</p>
<p>The most dramatic change to the new firmware is the editable text.  The original Ice Breaker had no text.  The text displayed was simply a pre-programmed image stored in program memory.  This image took up a substantial amount of space.  In order to compress the text small enough to fit in 128 bytes of EEPROM, I needed to create a font so that the image of the text could be reproduced every time it's needed.</p>
<p>Creating a font (and basic word processor) was a little more difficult than I was anticipating.  The original plan was to create a fixed-width font.  This would simplify some issues such as letter spacing when editing letters in the middle of a word.  Once I started drawing out my font though, I realized that this would be a major problem:</p>
<p><a href="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2360.jpg"><img class="aligncenter size-full wp-image-3862" title="IMG_2360" src="http://ch00ftech.com/wp-content/uploads/2013/06/IMG_2360.jpg" alt="" width="1024" height="683" /></a></p>
<p>I couldn't think of a more efficient way to draw W or G which are 7 pixels wide.  Most of the  other letters are 6, but some like S and of course the punctuation marks are smaller.  Using a fixed width font would totally destroy my kerning as I'd need to have enough space for a W in every letter slot.</p>
<p>I ended up storing the font as three separate arrays.  The first array is simply the pixel values of each letter all crunched together.  If you removed all the spaces between the letters in the above picture and recorded the byte values of each column of pixels, you'd get this array.  The second array contains the starting position of each letter in the first array.  The third array contains the width of each letter.</p>
<p>To generate a letter, the code needs to grab the letter position from the second array, pull the pixel value from the first array, and then keep iterating the number of times indicated in the third array.  With this method, only the numerical value of each letter (A=1, B=2, etc) needs to be recorded.</p>
<p>The AVR framework only allows for program memory arrays to be 256 bytes long.  Fortunately, none of these arrays needed to be longer, but if more symbols were required, some more code would be needed to accommodate it.</p>
<p>It was only after I spent all the time doodling up this font that I thought of maybe looking online to see if anyone had already made an 8 bit font.  Turns out lots of people have, but I stuck with mine anyway.  I might tweak the X and Y a bit at some point...</p>
<h1>Price</h1>
<p>A quick tally on Digikey says that at a quantity of 500, the parts would cost around $5.93 including the battery.</p>
<p>The PCBs would be basically free.  They're slightly more complex than the QR clock PCB, but they're only 1.6% the size.  If I get them V-scored or tab routed and cut them apart myself, I might save a lot of money.</p>
<p>If I were to try to sell these, the most expensive part would probably be assembly.  After my very negative experience with <a title="Vendor Bender" href="http://ch00ftech.com/2013/05/02/vendor-bender/">Myro</a>, I'm not exactly willing to dump a lot more money into foreign assembly houses unless I get a really solid recommendation.  Some quotes I found for domestic houses however put the assembly costs at around $8 a unit for quantities of over 1000.  Sort of demolishes my margin, doesn't it?</p>
<p>I'll keep poking around, but I really think a gadget like this has a good market if it's sold for $10-15.  Until I can get it down to that price and keep my profit margin, I think I'm going to just sit on it.</p>
<p>Might make for a fun experiment in extremely cheap toy production engineering.</p>
<h1>Looking Forward</h1>
<p>This project is sort of on the side burner at the moment.  I'm pretty proud of how polished the whole thing is, but at the end of the day, it's not super useful.  The "HELLO" and "GOODBYE" features are fun, but programming custom messages can be downright tedious, and at twelve letters a pop, nobody's going to be writing a soliloquy.</p>
<p>It was still a lot of fun though.  It's certainly the smallest circuit I've ever built, and I'm sure I could make it even smaller if I had the right batteries.  Solder paste is something I'll certainly be using in my future projects, and I want to try to start using smaller component packages to really cram stuff together.  Maybe even 4-layer boards?</p>
<p>If I were to sell them, I'd also need a better product name than "IceBreaker".  I've got a few prototypes lying around, best three product name suggestions in my inbox get a free prototype mailed to their door.</p>
<hr />
<p><strong>Project files can be found here: <a href="http://ch00ftech.com/wp-content/uploads/2013/06/IceBreaker-2.02.zip">IceBreaker 2.02</a></strong></p>
<hr />
]]></content:encoded>
			<wfw:commentRss>http://ch00ftech.com/2013/06/11/getting-itty-bitty-with-the-ice-breaker-2-0/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>
		</item>
	</channel>
</rss>

