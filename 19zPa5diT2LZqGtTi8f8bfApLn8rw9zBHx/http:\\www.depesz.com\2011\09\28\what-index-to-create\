http://www.depesz.com/2011/09/28/what-index-to-create/
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 13:03:05 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2302>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; What index to create?</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; What index to create? Comments Feed" href="http://www.depesz.com/2011/09/28/what-index-to-create/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2011/09/28/what-index-to-create/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2302' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2302">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2011/09/28/what-index-to-create/" rel="bookmark" title="Permanent Link to What index to create?">What index to create?</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>September 28th, 2011 by depesz | Tags: <a href="http://www.depesz.com/tag/index/" rel="tag">index</a>, <a href="http://www.depesz.com/tag/multicolumn/" rel="tag">multicolumn</a>, <a href="http://www.depesz.com/tag/partial-index/" rel="tag">partial index</a>, <a href="http://www.depesz.com/tag/performance/" rel="tag">performance</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/tutorial/" rel="tag">tutorial</a> |  <a href="http://www.depesz.com/2011/09/28/what-index-to-create/#comments" title="Comment on What index to create?">9 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>Some time ago I wrote a blogpost about <a href="http://www.depesz.com/index.php/2010/09/09/why-is-my-index-not-being-used/">why index might not be used</a>.</p>
<p>While this post seemed to be well received (top link from depesz.com on reddit), it doesn't answer another question &#8211; what index to create for given situation.</p>
<p>I'll try to cover this question now.</p>
<p><span id="more-2302"></span></p>
<p>First of all, before we can even start thinking about details, we need to know more about what we're dealing with. That is &#8211; indexes.</p>
<p>What is an index?</p>
<p>Once, we used this question as a starter point on interviews for jobs (I was on the hiring &#8220;committee"). The biggest surprise came from the fact that very few people could answer it. Most people thought about index as being &#8220;numeric column in table, that has incrementing, unique values".</p>
<p>I am not big on encyclopedic definitions, so let me just write what I understand as index:</p>
<p>Index is, external to table, data structure, that can be used to speed up searches for values existing in the table.</p>
<p>In PostgreSQL, we have currently 4 different kinds of indexes, and out of these, I will discuss only one. There four are:</p>
<ul>
<li>B-Tree &#8211; the most common type of index, default. This is the one I'll talk about.</li>
<li>Hash &#8211; potentially interesting index type, but with a fatal (for me) flaw of being <b>not</b> WAL logged &#8211; <a href="http://www.depesz.com/index.php/2010/06/28/should-you-use-hash-index/">more details</a></li>
<li>GiST &#8211; Generalized Search Tree &#8211; these are custom indexes for specialized datatypes, and while they are great, it's not very common for most of dbas (in my opinion)</li>
<li>GIN &#8211; Generalized Inverted Index &#8211; another kind of custom indexes, mostly useful for TSearch.</li>
</ul>
<p>Of all those, I will focus entirely on B-Tree. Reason is very simple &#8211; when you're using specialized datatypes and/or text searches &#8211; you usually know what you're doing, so this blogpost wouldn't help you. I'd like to help people who are at lost about what's what, and how to deal with indexing. And this is by default BTree.</p>
<p>B-Tree indexes, can be imagined (which helps) as sorted lists.</p>
<p>Let's assume you have a table with 1 million integers. Checking if you have given integer inside the table would require scanning whole table (worst case).</p>
<p>On the other hand &#8211; if, aside from the table, you also keep sorted list of those integers (with each element in this index/list containing also <i>pointer</i> to place where row with this integer is in table &#8211; finding given integer becomes trivial.</p>
<p>Let's see it on simple example:</p>
<p>Table data:</p>
<pre>  Row # | column a (integer)
      1 |            8238320
      2 |            7321114
      3 |            3866827
      4 |            4875272
      5 |            6465694
      6 |             308890
      7 |               1568
      8 |            6477632
      9 |            3518089
     10 |             703321</pre>
<p>Index data:</p>
<pre>  Row # | column a (integer) | Row #
      1 |               1568 |     7
      2 |             308890 |     6
      3 |             703321 |    10
      4 |            3518089 |     9
      5 |            3866827 |     3
      6 |            4875272 |     4
      7 |            6465694 |     5
      8 |            6477632 |     8
      9 |            7321114 |     2
     10 |            8238320 |     1</pre>
<p>Now, when we want to read table record &#8220;WHERE column_a = 3866827&#8243; &#8211; we don't need to scan whole table, but we can just check in index.</p>
<p>Since index data is sorted, we can (it is simplification, but it's good enough to understand the idea):</p>
<ul>
<li>start with middle element in index</li>
<li>check if value in given element in index is the one we're looking for</li>
<li>if it is &#8211; we're done.</li>
<li>if the found value is smaller than the value we're looking for &#8211; search in the 2nd half of index (from current place to end) &#8211; i.e. repeat all steps, including getting middle element, but on subset of index</li>
<li>if the found value is larger than the value we're looking for &#8211; search in the 1st half of index</li>
</ul>
<p>This is all nice and good, but it shows only one part of very simple index &#8211; single column index, on integer value. And searching using &#8220;=" operator (find row which has column <b>equal to</b> something).</p>
<p>But our indexes can do much more.</p>
<p>Please note that when we'll finally find row with value 3866827 &#8211; we can <b>very</b> easily find rows smaller or larger from it &#8211; we don't have to do any sorting, because the data is already sorted.</p>
<p>Let me show you this using real queries:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #993333; font-weight: bold;">as</span>
    <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">cast</span><span style="color: #66cc66;">&#40;</span> random<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">1000000000</span> <span style="color: #993333; font-weight: bold;">as</span> <span style="color: #993333; font-weight: bold;">integer</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> i
    <span style="color: #993333; font-weight: bold;">from</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">1000000</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">1000000</span></pre></td></tr></table></div>

<p>This created test table. And now we can see that searching for value in it takes time, regardless of whether the value exists:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">$ explain analyze select * from test where i = 361243617;
                                            QUERY PLAN
---------------------------------------------------------------------------------------------------
 Seq Scan on test  (cost=0.00..16925.00 rows=1 width=4) (actual time=0.015..96.439 rows=1 loops=1)
   Filter: (i = 361243617)
 Total runtime: 96.461 ms
(3 rows)</pre></td></tr></table></div>

<p>or not:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">$ explain analyze select * from test where i = -1;
                                             QUERY PLAN
----------------------------------------------------------------------------------------------------
 Seq Scan on test  (cost=0.00..16925.00 rows=1 width=4) (actual time=98.658..98.658 rows=0 loops=1)
   Filter: (i = (-1))
 Total runtime: 98.680 ms
(3 rows)</pre></td></tr></table></div>

<p>But when I'll add index:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> idx <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span></pre></td></tr></table></div>

<p>Situation changes:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">$ explain analyze select * from test where i = 361243617;
                                                QUERY PLAN
----------------------------------------------------------------------------------------------------------
 Index Scan using idx on test  (cost=0.00..8.38 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=1)
   Index Cond: (i = 361243617)
 Total runtime: 0.032 ms
(3 rows)</pre></td></tr></table></div>


<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">=</span> <span style="color: #66cc66;">-</span><span style="color: #cc66cc;">1</span>;
                                                QUERY PLAN
<span style="color: #808080; font-style: italic;">----------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">using</span> idx <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>8<span style="color: #66cc66;">.</span>38 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.009</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>009 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">=</span> <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">-</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">0.030</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>This showed the basics. Now, let see sorting, without sorting:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">&gt;=</span> <span style="color: #cc66cc;">361243617</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">asc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">10</span>;
                                                        QUERY PLAN
<span style="color: #808080; font-style: italic;">--------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>56 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">10</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.019</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>086 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">10</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">using</span> idx <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>35886<span style="color: #66cc66;">.</span>74 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">638546</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.017</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>082 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">10</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;=</span> <span style="color: #cc66cc;">361243617</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">0.108</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">4</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Please note lack of &#8220;Sort" element. Without index, it would look like:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">&gt;=</span> <span style="color: #cc66cc;">361243617</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">asc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">10</span>;
                                                        QUERY PLAN
<span style="color: #808080; font-style: italic;">--------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">30723.75</span><span style="color: #66cc66;">..</span>30723<span style="color: #66cc66;">.</span>77 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">10</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">192.021</span><span style="color: #66cc66;">..</span>192<span style="color: #66cc66;">.</span>023 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">10</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  Sort  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">30723.75</span><span style="color: #66cc66;">..</span>32320<span style="color: #66cc66;">.</span>11 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">638546</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">192.019</span><span style="color: #66cc66;">..</span>192<span style="color: #66cc66;">.</span>021 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">10</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         Sort <span style="color: #993333; font-weight: bold;">Key</span>: i
         Sort Method: top<span style="color: #66cc66;">-</span>N heapsort  Memory: 25kB
         <span style="color: #66cc66;">-&gt;</span>  Seq Scan <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>16925<span style="color: #66cc66;">.</span>00 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">638546</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.012</span><span style="color: #66cc66;">..</span>129<span style="color: #66cc66;">.</span>238 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">638256</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
               <span style="color: #993333; font-weight: bold;">Filter</span>: <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;=</span> <span style="color: #cc66cc;">361243617</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">192.053</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">7</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>We can see that Scan on test table returns 638256 rows, which had to be sorted (well, top-N sorted, which is a bit different than full sort, but it's not relevant for now).</p>
<p>Exactly the same thing applies in any case where we can define &gt; and &lt; operators on data.</p>
<p>One note in here. When using &#8220;LIMIT x OFFSET y" &#8211; please note that index has to fetch <em>x+y</em> rows and then just skip first y. So getting, even with index, 10 rows, with offset 1000000 will be slow. For more discussion on this, including chart, please check <a href="http://www.depesz.com/index.php/2011/05/20/pagination-with-fixed-order/">my previous post</a>.</p>
<p>Some data doesn't have sensible greater/smaller operators &#8211; for example &#8211; ltree or hstore. Sometimes the definition of comparison is debatable.</p>
<p>Anyway.</p>
<p>As we can see, we can easily search for = , &lt; or &gt; using our simple index.</p>
<p>But what happens when we'll use more complex situations? More columns?</p>
<p>Let's create new test situation:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #993333; font-weight: bold;">as</span>
    <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">cast</span><span style="color: #66cc66;">&#40;</span> random<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">100000</span> <span style="color: #993333; font-weight: bold;">as</span> <span style="color: #993333; font-weight: bold;">integer</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> i<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">cast</span><span style="color: #66cc66;">&#40;</span> random<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">100</span> <span style="color: #993333; font-weight: bold;">as</span> <span style="color: #993333; font-weight: bold;">integer</span> <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> j
    <span style="color: #993333; font-weight: bold;">from</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">10000000</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">1000000</span></pre></td></tr></table></div>

<p>Sample data:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">20</span>;
   i   <span style="color: #66cc66;">|</span> j
<span style="color: #808080; font-style: italic;">-------+----</span>
 <span style="color: #cc66cc;">63748</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">36</span>
 <span style="color: #cc66cc;">37462</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">96</span>
 <span style="color: #cc66cc;">25753</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">24</span>
 <span style="color: #cc66cc;">89899</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">21</span>
 <span style="color: #cc66cc;">26357</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">49</span>
 <span style="color: #cc66cc;">67950</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">83</span>
  <span style="color: #cc66cc;">4226</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">91</span>
 <span style="color: #cc66cc;">51442</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">32</span>
 <span style="color: #cc66cc;">29346</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">41</span>
 <span style="color: #cc66cc;">86067</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">65</span>
 <span style="color: #cc66cc;">47286</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">18</span>
 <span style="color: #cc66cc;">55357</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">94</span>
 <span style="color: #cc66cc;">11806</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">45</span>
   <span style="color: #cc66cc;">663</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">91</span>
 <span style="color: #cc66cc;">89186</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">11</span>
  <span style="color: #cc66cc;">1200</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">53</span>
 <span style="color: #cc66cc;">46942</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">39</span>
 <span style="color: #cc66cc;">48841</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">73</span>
 <span style="color: #cc66cc;">62640</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">39</span>
 <span style="color: #cc66cc;">93524</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">89</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">20</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Now, our indexing options dramatically expand:</p>
<ul>
<li>We can use two single-column indexes</li>
<li>We can use index on (i,j)</li>
<li>We can use index on (j,i)</li>
</ul>
<p>Plus &#8211; sometimes it just so happens, that while j has 100 different values, we care only about rows with j = 10. Or, a bit more complex &#8211; j &lt; 10.</p>
<p>Up until PostgreSQL 8.1, when scanning single table, PostgreSQL could use at most one index. Luckily today, we have so called &#8220;bitmap index scans" which means that we can use multiple indexes. Let's see how it works:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> idx_i <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span>
$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> idx_j <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span></pre></td></tr></table></div>

<p>And now:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span>;
                                                        QUERY PLAN
<span style="color: #808080; font-style: italic;">---------------------------------------------------------------------------------------------------------------------------</span>
 Bitmap Heap Scan <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">187.98</span><span style="color: #66cc66;">..</span>282<span style="color: #66cc66;">.</span>72 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">25</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">2.290</span><span style="color: #66cc66;">..</span>2<span style="color: #66cc66;">.</span>290 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   Recheck Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  BitmapAnd  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">187.98</span><span style="color: #66cc66;">..</span>187<span style="color: #66cc66;">.</span>98 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">25</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">2.277</span><span style="color: #66cc66;">..</span>2<span style="color: #66cc66;">.</span>277 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_j  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>93<span style="color: #66cc66;">.</span>86 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">5000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1.760</span><span style="color: #66cc66;">..</span>1<span style="color: #66cc66;">.</span>760 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9979</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
               <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_i  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>93<span style="color: #66cc66;">.</span>86 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">5000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.009</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>009 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
               <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">2.321</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">8</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>As you can see both indexes were used.</p>
<p>What bitmap scanning really is?</p>
<p>PostgreSQL gets list of pages that will contain matching rows from index 1, and list of pages that will containing matching rows from index 2, and then checks which pages should be fetched by checking only pages that were returned from both indexes.</p>
<p>So, let's assume, that index idx_j returned that rows that will match it will be on pages:</p>
<ul>
<li>1</li>
<li>10</li>
<li>11</li>
<li>99</li>
</ul>
<p>and idx_i returned pages</p>
<ul>
<li>7</li>
<li>11</li>
<li>31</li>
</ul>
<p>By doing bitmap &#8220;AND" operation on it, we know that only page #11 needs to be loaded from disk to check for data.</p>
<p>This is all great, but dedicated index will, most likely, be better. Let's see:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> idx_ij <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> j<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span>;
                                                 QUERY PLAN
<span style="color: #808080; font-style: italic;">-------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">using</span> idx_ij <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>8<span style="color: #66cc66;">.</span>38 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.030</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>031 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">0.053</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>The time is much better. Reason is very simple &#8211; indexscan returns only 1 row, no further actions have to be done, just fetching the correct row from table to return.</p>
<p>Will order of columns matter?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> idx_ji <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">,</span> i<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span>;
                                                 QUERY PLAN
<span style="color: #808080; font-style: italic;">-------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">using</span> idx_ji <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>8<span style="color: #66cc66;">.</span>38 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.017</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>018 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">36</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">63748</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">0.043</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Time is mostly the same.</p>
<p>But. Order of columns in index will matter when we'll want to use different operator than &#8220;=" for one of the columns.</p>
<p>Which might be (for example) sorting.</p>
<p>To test it nicely, I used larger table:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #993333; font-weight: bold;">as</span>
    <span style="color: #993333; font-weight: bold;">select</span>
        <span style="color: #993333; font-weight: bold;">cast</span><span style="color: #66cc66;">&#40;</span> random<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">15000</span> <span style="color: #993333; font-weight: bold;">as</span> <span style="color: #993333; font-weight: bold;">integer</span> <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> i<span style="color: #66cc66;">,</span>
        <span style="color: #993333; font-weight: bold;">cast</span><span style="color: #66cc66;">&#40;</span> random<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">15000</span> <span style="color: #993333; font-weight: bold;">as</span> <span style="color: #993333; font-weight: bold;">integer</span> <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> j
    <span style="color: #993333; font-weight: bold;">from</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">200000000</span><span style="color: #66cc66;">&#41;</span>;</pre></td></tr></table></div>

<p>Let's get some base stats:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">min</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">count</span><span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">distinct</span> i<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">max</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">min</span><span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">count</span><span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">distinct</span> j<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">max</span><span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">count</span><span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">*</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> test;
<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#91;</span> RECORD <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#93;</span><span style="color: #808080; font-style: italic;">--</span>
<span style="color: #993333; font-weight: bold;">min</span>   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
<span style="color: #993333; font-weight: bold;">count</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">15001</span>
<span style="color: #993333; font-weight: bold;">max</span>   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">15000</span>
<span style="color: #993333; font-weight: bold;">min</span>   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
<span style="color: #993333; font-weight: bold;">count</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">15001</span>
<span style="color: #993333; font-weight: bold;">max</span>   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">15000</span>
<span style="color: #993333; font-weight: bold;">count</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">200000000</span></pre></td></tr></table></div>

<p>On this (test) table I created two indexes, and then I made two copies of the table (test_ij and test_ji) with multicolumn indexes.</p>
<p>Let's say we'd want to get rows with highest <em>i</em> for some given j.</p>
<p>Query is simple:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">3</span>;</pre></td></tr></table></div>

<p>So, let's see how it will work with different indexes. First, two indexes:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">3</span>;
                                                             QUERY PLAN
<span style="color: #808080; font-style: italic;">------------------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">47594.60</span><span style="color: #66cc66;">..</span>47594<span style="color: #66cc66;">.</span>61 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">285.532</span><span style="color: #66cc66;">..</span>285<span style="color: #66cc66;">.</span>533 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  Sort  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">47594.60</span><span style="color: #66cc66;">..</span>47627<span style="color: #66cc66;">.</span>13 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13014</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">285.531</span><span style="color: #66cc66;">..</span>285<span style="color: #66cc66;">.</span>531 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         Sort <span style="color: #993333; font-weight: bold;">Key</span>: i
         Sort Method: top<span style="color: #66cc66;">-</span>N heapsort  Memory: 25kB
         <span style="color: #66cc66;">-&gt;</span>  Bitmap Heap Scan <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">267.04</span><span style="color: #66cc66;">..</span>47426<span style="color: #66cc66;">.</span>40 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13014</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">7.416</span><span style="color: #66cc66;">..</span>283<span style="color: #66cc66;">.</span>018 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13516</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
               Recheck Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span><span style="color: #66cc66;">&#41;</span>
               <span style="color: #993333; font-weight: bold;">Rows</span> Removed <span style="color: #993333; font-weight: bold;">by</span> <span style="color: #993333; font-weight: bold;">Index</span> Recheck: <span style="color: #cc66cc;">2190542</span>
               <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_j  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>263<span style="color: #66cc66;">.</span>79 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13014</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">5.549</span><span style="color: #66cc66;">..</span>5<span style="color: #66cc66;">.</span>549 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13516</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
                     <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">285.562</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>In here we see different kind of Bitmap scan, but it's irrelevant. Only one index has been used. It returned 13516 rows which had to be sorted to return 3 rows.</p>
<p>Now. Let's see in case of index on (i, j):</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_ij <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">3</span>;
                                                               QUERY PLAN
<span style="color: #808080; font-style: italic;">-----------------------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>856<span style="color: #66cc66;">.</span>38 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1.180</span><span style="color: #66cc66;">..</span>2<span style="color: #66cc66;">.</span>577 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  <span style="color: #993333; font-weight: bold;">Index</span> Scan Backward <span style="color: #993333; font-weight: bold;">using</span> idx_ij <span style="color: #993333; font-weight: bold;">on</span> test_ij  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>3745802<span style="color: #66cc66;">.</span>69 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13122</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1.180</span><span style="color: #66cc66;">..</span>2<span style="color: #66cc66;">.</span>575 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">2.602</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">4</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Now, that's fast.</p>
<p>So, let's see the final index &#8211; on (j, i):</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_ji <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">3</span>;
                                                              QUERY PLAN
<span style="color: #808080; font-style: italic;">---------------------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>12<span style="color: #66cc66;">.</span>01 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.022</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>026 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  <span style="color: #993333; font-weight: bold;">Index</span> Scan Backward <span style="color: #993333; font-weight: bold;">using</span> idx_ji <span style="color: #993333; font-weight: bold;">on</span> test_ji  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>52188<span style="color: #66cc66;">.</span>94 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13039</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.021</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>024 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">3</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">0.050</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">4</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>It's 50 times faster!</p>
<p>Why? Reason is very simple. Please note that in case of index on (i, j) order of reading rows from table gives you descending i, but within this, you have also descending j.</p>
<p>Which means that to get to 3 rows Pg had to:</p>
<ul>
<li>get max i</li>
<li>check if there is row with max i and j = 50</li>
<li>get next largest i</li>
<li>repeat</li>
</ul>
<p>On the other hand, when index is on (j, i), PostgreSQL quickly finds j = 50, and then, within it, it just reads top 3 nodes from index.</p>
<p>We can see clearly the problem by running the same query, but for more ids:</p>
<p>Index in &#8220;wrong" order:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_ij <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">1000</span>;
                                                                  QUERY PLAN
<span style="color: #808080; font-style: italic;">----------------------------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>285459<span style="color: #66cc66;">.</span>74 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1.648</span><span style="color: #66cc66;">..</span>426<span style="color: #66cc66;">.</span>232 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  <span style="color: #993333; font-weight: bold;">Index</span> Scan Backward <span style="color: #993333; font-weight: bold;">using</span> idx_ij <span style="color: #993333; font-weight: bold;">on</span> test_ij  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>3745802<span style="color: #66cc66;">.</span>69 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13122</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1.647</span><span style="color: #66cc66;">..</span>425<span style="color: #66cc66;">.</span>964 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">426.342</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">4</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>And when index is on (j, i):</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_ji <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">1000</span>;
                                                                QUERY PLAN
<span style="color: #808080; font-style: italic;">------------------------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>4002<span style="color: #66cc66;">.</span>53 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.017</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>950 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  <span style="color: #993333; font-weight: bold;">Index</span> Scan Backward <span style="color: #993333; font-weight: bold;">using</span> idx_ji <span style="color: #993333; font-weight: bold;">on</span> test_ji  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>52188<span style="color: #66cc66;">.</span>94 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13039</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.017</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>809 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">1.031</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">4</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Another approach might be, to use so called partial indexes.</p>
<p>Partial indexes are indexes which cover not all, but just some subset of rows in a table.</p>
<p>For example. Let's assume we care only about rows with j = 50. We can do:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> partial_i <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span>;</pre></td></tr></table></div>

<p>And now:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> j <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">50</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">desc</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">1000</span>;
                                                                QUERY PLAN
<span style="color: #808080; font-style: italic;">------------------------------------------------------------------------------------------------------------------------------------------</span>
 <span style="color: #993333; font-weight: bold;">Limit</span>  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>4000<span style="color: #66cc66;">.</span>74 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.016</span><span style="color: #66cc66;">..</span>1<span style="color: #66cc66;">.</span>058 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  <span style="color: #993333; font-weight: bold;">Index</span> Scan Backward <span style="color: #993333; font-weight: bold;">using</span> partial_i <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>52065<span style="color: #66cc66;">.</span>70 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">13014</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.016</span><span style="color: #66cc66;">..</span>0<span style="color: #66cc66;">.</span>896 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">1.151</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>The biggest selling point of partial indexes is that they are cheaper. For example, let's consider sizes:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">  relname  <span style="color: #66cc66;">|</span> pg_size_pretty
<span style="color: #808080; font-style: italic;">-----------+----------------</span>
 idx_i     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4284</span> MB
 idx_j     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4284</span> MB
 idx_ij    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4284</span> MB
 idx_ji    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4284</span> MB
 partial_i <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">312</span> kB</pre></td></tr></table></div>

<p>Reason is very simple &#8211; less rows to be indexes &#8211; smaller index. This makes all updates of values in it faster.</p>
<p>Additional benefit of partial indexes, is that you can have partial uniqueness. Typical example is unique username, but only for active users, which can be trivially done with:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #993333; font-weight: bold;">INDEX</span> ui_username <span style="color: #993333; font-weight: bold;">ON</span> users <span style="color: #66cc66;">&#40;</span> username <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">WHERE</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'active'</span>;</pre></td></tr></table></div>

<p>Let's imagine we want to search using two inequality operations. Like:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span>;</pre></td></tr></table></div>

<p>Times to run it with various indexes:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span>;
                                                               QUERY PLAN
<span style="color: #808080; font-style: italic;">----------------------------------------------------------------------------------------------------------------------------------------</span>
 Bitmap Heap Scan <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">48191.55</span><span style="color: #66cc66;">..</span>79652<span style="color: #66cc66;">.</span>52 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8493</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">532.949</span><span style="color: #66cc66;">..</span>14410<span style="color: #66cc66;">.</span>958 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   Recheck Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #993333; font-weight: bold;">Rows</span> Removed <span style="color: #993333; font-weight: bold;">by</span> <span style="color: #993333; font-weight: bold;">Index</span> Recheck: <span style="color: #cc66cc;">119778817</span>
   <span style="color: #66cc66;">-&gt;</span>  BitmapAnd  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">48191.55</span><span style="color: #66cc66;">..</span>48191<span style="color: #66cc66;">.</span>55 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8493</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">531.835</span><span style="color: #66cc66;">..</span>531<span style="color: #66cc66;">.</span>835 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_j  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>23892<span style="color: #66cc66;">.</span>09 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1292521</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">240.616</span><span style="color: #66cc66;">..</span>240<span style="color: #66cc66;">.</span>616 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1327963</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
               <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_i  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>24294<span style="color: #66cc66;">.</span>96 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1314237</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">257.556</span><span style="color: #66cc66;">..</span>257<span style="color: #66cc66;">.</span>556 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1327155</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
               <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">14411.996</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">9</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>


<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_ij <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span>;
                                                        QUERY PLAN
<span style="color: #808080; font-style: italic;">---------------------------------------------------------------------------------------------------------------------------</span>
 Bitmap Heap Scan <span style="color: #993333; font-weight: bold;">on</span> test_ij  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">28280.35</span><span style="color: #66cc66;">..</span>62276<span style="color: #66cc66;">.</span>90 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9211</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">64.067</span><span style="color: #66cc66;">..</span>96<span style="color: #66cc66;">.</span>207 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   Recheck Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_ij  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>28278<span style="color: #66cc66;">.</span>05 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9211</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">62.483</span><span style="color: #66cc66;">..</span>62<span style="color: #66cc66;">.</span>483 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">96.904</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>


<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_ji <span style="color: #993333; font-weight: bold;">where</span> i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span> <span style="color: #993333; font-weight: bold;">and</span> j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span>;
                                                        QUERY PLAN
<span style="color: #808080; font-style: italic;">---------------------------------------------------------------------------------------------------------------------------</span>
 Bitmap Heap Scan <span style="color: #993333; font-weight: bold;">on</span> test_ji  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">30580.85</span><span style="color: #66cc66;">..</span>65451<span style="color: #66cc66;">.</span>73 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9460</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">62.709</span><span style="color: #66cc66;">..</span>92<span style="color: #66cc66;">.</span>195 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   Recheck Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> idx_ji  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>30578<span style="color: #66cc66;">.</span>49 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">9460</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">61.127</span><span style="color: #66cc66;">..</span>61<span style="color: #66cc66;">.</span>127 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>j <span style="color: #66cc66;">&lt;</span> <span style="color: #cc66cc;">100</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">AND</span> <span style="color: #66cc66;">&#40;</span>i <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">14900</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">92.673</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>In here we see that the times with two column indexes are not that bad, but this is mostly because we have very low number of distinct values. If the number was higher, the time would dramatically increase.</p>
<p>Using normal BTree indexes, there is no simple solution for this. We could try to add functional indexes on (for example) ( i/1000, j/1000) and modify the queries accordingly.</p>
<p>For such cases, the most sensible approach is to use GiST indexes, for example like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> gist_idx <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #993333; font-weight: bold;">using</span> gist <span style="color: #66cc66;">&#40;</span>box<span style="color: #66cc66;">&#40;</span>point<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span>j<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> point<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span>j<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;</pre></td></tr></table></div>

<p>This looks a bit complex, so let's deconstruct it.</p>
<p>The index is created not on columns i,j, but rather on a geometric box. Geometric boxes (rectangles) are defined by two corners &#8211; points. First point is located (on x/y grid) in (i,j), and the second point in (i,j) &#8211; So this is basically a rectangle with 0 width and height, just located in specific point.</p>
<p>Why so complex thing? Reason is simple &#8211; PG GiST indexes let us search for geometries quite fast. Like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">explain</span> analyze
<span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">FROM</span> test
    <span style="color: #993333; font-weight: bold;">WHERE</span> box<span style="color: #66cc66;">&#40;</span> point<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> j<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> point<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> j<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span> &amp;&amp; <span style="color: #ff0000;">'(14901,0),(999999999,99)'</span>::box;
                                                                               QUERY PLAN
<span style="color: #808080; font-style: italic;">------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span>
 Bitmap Heap Scan <span style="color: #993333; font-weight: bold;">on</span> test  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">50535.67</span><span style="color: #66cc66;">..</span>1007566<span style="color: #66cc66;">.</span>98 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">38.130</span><span style="color: #66cc66;">..</span>52<span style="color: #66cc66;">.</span>140 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
   Recheck Cond: <span style="color: #66cc66;">&#40;</span>box<span style="color: #66cc66;">&#40;</span>point<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">,</span> <span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> point<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">,</span> <span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span> &amp;&amp; <span style="color: #ff0000;">'(999999999,99),(14901,0)'</span>::box<span style="color: #66cc66;">&#41;</span>
   <span style="color: #66cc66;">-&gt;</span>  Bitmap <span style="color: #993333; font-weight: bold;">Index</span> Scan <span style="color: #993333; font-weight: bold;">on</span> gist_idx_2  <span style="color: #66cc66;">&#40;</span>cost<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0.00</span><span style="color: #66cc66;">..</span>50285<span style="color: #66cc66;">.</span>67 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1000000</span> width<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>actual <span style="color: #993333; font-weight: bold;">time</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">37.367</span><span style="color: #66cc66;">..</span>37<span style="color: #66cc66;">.</span>367 <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">=</span><span style="color: #cc66cc;">8789</span> loops<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>
         <span style="color: #993333; font-weight: bold;">Index</span> Cond: <span style="color: #66cc66;">&#40;</span>box<span style="color: #66cc66;">&#40;</span>point<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">,</span> <span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> point<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">,</span> <span style="color: #66cc66;">&#40;</span>j<span style="color: #66cc66;">&#41;</span>::<span style="color: #993333; font-weight: bold;">double</span> <span style="color: #993333; font-weight: bold;">precision</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span> &amp;&amp; <span style="color: #ff0000;">'(999999999,99),(14901,0)'</span>::box<span style="color: #66cc66;">&#41;</span>
 Total runtime: <span style="color: #cc66cc;">52.576</span> ms
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>So, to wrap it:</p>
<ul>
<li>Indexes will let you quickly find rows based on &#8220;=" condition</li>
<li>Indexes have the ability to quickly return rows from given point forward or backward (&gt;>= 1000 or &lt;= 900)</li>
<li>Indexes can't easily &#8220;skip" rows (offset x)</li>
<li>When creating index for 2 columns &#8211; first put the column that will be used with &#8220;=" condition</li>
<li>Consider and/or test usage of partial indexes</li>
<li>If all else fails &#8211; there are functional indexes, BTree and other, which still can help.</li>
</ul>
<p><!-- vim: set spell spelllang=en_US ft=xhtml: --></p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">9 comments <a href='http://www.depesz.com/2011/09/28/what-index-to-create/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-34182" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34182" title="">#</a></span> Alexander Korotkov</div>  <div class="date">Sep 28, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/049dd7dfcd1931183e4d12a5154c34f8?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Since 9.0 we can build GiST indexes just on points. Expression would be simplier a bit, however index size is same.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-34183" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34183" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Sep 28, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Alexander:<br />
thanks a lot, missed that.</p>
	</li>
		
		
			
<li class="odd" id="comment-34184" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34184" title="">#</a></span> Leonardo</div>  <div class="date">Sep 28, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>can you elaborate on why the gist index is faster in that case?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-34185" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34185" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Sep 28, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Leonardo:<br />
Gist indexes for geometric types are emulating internally structure called &#8220;RTree&#8221; &#8211; <a href="http://en.wikipedia.org/wiki/Rtree" rel="nofollow">http://en.wikipedia.org/wiki/Rtree</a> &#8211; which is very fast.<br />
Details &#8211; sorry, way over my skill level.<br />
The drawback of Btree in here, is that while finding all rows with &#8220;i > 4900&#8243; is simple, adding condition on &#8220;j < 100&#8243; is actually quite complex &#8211; mostly because there is no correlation between those two columns.</p>
	</li>
		
		
			
<li class="odd" id="comment-34186" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34186" title="">#</a></span> Alexander Korotkov</div>  <div class="date">Sep 28, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/049dd7dfcd1931183e4d12a5154c34f8?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>R-tree is faster than B-tree for two- and more dimensional range search when selectivity in various dimensions is similar. When selectivity of one dimension is much less than others then B-tree is faster than R-tree.<br />
If different indexes (B-tree and GiST) are preset, we have to select possible index in query. It would be nice if planner can select index for particular search, but it seems to be hard problem.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-34187" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34187" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Sep 28, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Alexander: Solution is actually very simple, but there is strong (and totally unreasonable, in my opinion) resistance against it. The solution are hints.</p>
	</li>
		
		
			
<li class="odd" id="comment-34191" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34191" title="">#</a></span> Leonardo</div>  <div class="date">Sep 29, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p><a href="http://www.sai.msu.su/~megera/wiki/plantuner" rel="nofollow">http://www.sai.msu.su/~megera/wiki/plantuner</a></p>
<p>this can turn on / off indexes (never used it myself though)</p>
	</li>
		
		
			
<li class="odd" id="comment-34226" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34226" title="">#</a></span> Manav Goel</div>  <div class="date">Oct 10, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/580594b668886de3076b41a7e61f57b0?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Thanks for very interesting and useful post. I have couple of questions though.</p>
<p>In case where use case require search on either i or j or (i,j) both.<br />
Index on (i,j) will work for both searching based on just i and (i,j) both.<br />
But for searching based on j it will not work. So what will be more prudent in this case &#8211; an index on j alone with index on (i,j) or index (j,i) and (i,j).?</p>
<p>Is searching based on i with index(i,j) will be slow as compare to the case when index is only on i?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-34229" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34229" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Oct 10, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Manav:<br />
assuming both conditions use &#8220;=&#8221; operator, I would create indexes on:<br />
- (i,j)<br />
- (j)</p>
<p>As for searching using &#8220;i=..&#8221; using index on (i,j) &#8211; it will be slighly slower than using index on (i), but usually the difference is negligible.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2302" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="b584b5b630" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="171"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">336 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">314 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">266 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">207 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">158 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">135 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">134 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">132 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">104 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

