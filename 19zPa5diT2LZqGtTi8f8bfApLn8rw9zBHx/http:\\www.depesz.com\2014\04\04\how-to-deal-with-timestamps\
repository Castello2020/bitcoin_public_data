http://www.depesz.com/2014/04/04/how-to-deal-with-timestamps/
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 03:47:23 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2841>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; How to deal with timestamps?</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; How to deal with timestamps? Comments Feed" href="http://www.depesz.com/2014/04/04/how-to-deal-with-timestamps/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2014/04/04/how-to-deal-with-timestamps/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2841' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2841">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2014/04/04/how-to-deal-with-timestamps/" rel="bookmark" title="Permanent Link to How to deal with timestamps?">How to deal with timestamps?</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>April 4th, 2014 by depesz | Tags: <a href="http://www.depesz.com/tag/date_trunc/" rel="tag">date_trunc</a>, <a href="http://www.depesz.com/tag/format/" rel="tag">format</a>, <a href="http://www.depesz.com/tag/immutable/" rel="tag">immutable</a>, <a href="http://www.depesz.com/tag/index/" rel="tag">index</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/timestamp/" rel="tag">timestamp</a>, <a href="http://www.depesz.com/tag/timestamptz/" rel="tag">timestamptz</a>, <a href="http://www.depesz.com/tag/timezone/" rel="tag">timezone</a>, <a href="http://www.depesz.com/tag/to_char/" rel="tag">to_char</a> |  <a href="http://www.depesz.com/2014/04/04/how-to-deal-with-timestamps/#comments" title="Comment on How to deal with timestamps?">7 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>Every now and then someone asks, on <a href="irc://irc.freenode.net/%23postgresql,ischannel">irc</a> or mailing lists, some question which shows deep misunerstanding (or lack of understanding) of timestamps &#8211; especially the ones with time zones.</p>
<p>Since I got bitten by this before, let me describe what timestamps are, how to work with them, and what are the most common pitfalls that you can encounter.</p>
<p><span id="more-2841"></span></p>
<p>So, basically we have two datatypes that we can use:</p>
<ul>
<li>timestamp</li>
<li>timestamp with time zone (a.k.a. timestamptz)</li>
</ul>
<p>timestamp contains just date and time, with no more information. So, while it might sound OK (after all &#8211; in normal life we are just using date and time, aren't we?) it's absolutely terrible.</p>
<p>Let's assume you have timestamp &#8220;2014-04-04 20:00:00&#8243;. What does it tell you? Unfortunately &#8211; not much. It all depends on <em>where</em> on earth it is. 8pm on 4th of April is different moment in Los Angeles, Chicago, London, Warsaw or Moscow. That's the problem with time zones.</p>
<p>Of course you can assume &#8211; I will be always in one time zone, so I don't need any fancy time zone support. In my time zone date and time is perfectly OK to represent point in time &#8211; just as it is in &#8220;real life".</p>
<p>Is it really true?</p>
<p>Let's assume you have timestamp '2013-10-27 02:00:00&#8242;, and you know that your application, and all times are stored according to Polish time. Well, you're still out of luck, as it could be either 2am CEST, or (1 hour later) CET. And that's due to daylight savings time.</p>
<p>Long story short &#8211; I believe that using timestamps (without time zone) is, in almost every case, a bug. And should be fixed.</p>
<p>This gets only more problematic when you have (for example) entries coming from different time zones. Think &#8211; scheduling application with users in various timezones.</p>
<p>So, the solution is to use timestamptz.</p>
<p>First thing &#8211; it doesn't take more disc space:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> typname<span style="color: #66cc66;">,</span> typlen <span style="color: #993333; font-weight: bold;">from</span> pg_type <span style="color: #993333; font-weight: bold;">where</span> typname ~ <span style="color: #ff0000;">'^timestamp'</span>;
   typname   <span style="color: #66cc66;">|</span> typlen 
<span style="color: #808080; font-style: italic;">-------------+--------</span>
 <span style="color: #993333; font-weight: bold;">timestamp</span>   <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">8</span>
 timestamptz <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">8</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">2</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>So how does it work? It has to know the timezone &#8211; so why isn't it using more disk space?</p>
<p>Well &#8211; it doesn't know the timezone. Internally, all values in timestamptz columns are stored in UTC time zone.</p>
<p>UTC has certain great features: it doesn't have &#8220;offset" (well, it's the base for offsets for other timezones), and it doesn't have daylight savings time.</p>
<p>So any timestamp in UTC is always guaranteed to point to just one point in time.</p>
<p>But if it's all UTC &#8211; how do I get time in my proper timezone?</p>
<p>Well, whenever dealing with timestamptz values, if the timezone is <em>not</em> specified &#8211; PostgreSQL uses configured timezone.</p>
<p>And you can configure it in multiple ways:</p>
<ul>
<li>timezone &#8220;GUC" in postgresql.conf</li>
<li>alter database &#8230; set timezone = &#8216;&#8230;'</li>
<li>alter user &#8230; set timezone = &#8216;&#8230;'</li>
<li>SET timezone = &#8216;&#8230;'</li>
</ul>
<p>First one is used to specify in which timezone your server is. Or &#8211; the default timezone that will be used unless something else changes the default.</p>
<p>The next two change defaults for given database and user.</p>
<p>The last one can be used if you want your db connection to work under different setting.</p>
<p>Please note how it changes now() output:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;
              now              
<span style="color: #808080; font-style: italic;">-------------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">20</span>:<span style="color: #cc66cc;">32</span>:<span style="color: #cc66cc;">59.390583</span><span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'America/New_York'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;
              now              
<span style="color: #808080; font-style: italic;">-------------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">14</span>:<span style="color: #cc66cc;">33</span>:<span style="color: #cc66cc;">06.442768</span><span style="color: #66cc66;">-</span>04
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>So &#8211; whenever you access timestamptz values (either read or write) PostgreSQL does, transparently, convert to/from UTC.</p>
<p>This means that values can be easily comparable (all are in the same timezone, it doesn't have daylight savings time, so comparison is always possible).</p>
<p>Now &#8211; let's assume you have string '2014-04-04 20:00:00&#8242;. And you know that it time in Los Angeles, but you want to store it in your database, which runs in different timezone. You can check that the current offset there is -7 hours, and use the value like:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00-07'</span>::timestamptz;
      timestamptz       
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>05 05:00:00<span style="color: #66cc66;">+</span>02</pre></td></tr></table></div>

<p>What happened? Why it doesn't show 8pm?</p>
<p>Reason is simple &#8211; in the query I provided timestamp, in some time zone. This was internally converted to UTC, and then converted again (or maybe even without UTC step, not sure) to my normal timezone, which is:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">show</span> timezone;
 TimeZone 
<span style="color: #808080; font-style: italic;">----------</span>
 Poland
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>If I'd have timezone set to LA, result of the query would be:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'America/Los_Angeles'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00-07'</span>::timestamptz;
      timestamptz       
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">20</span>:00:00<span style="color: #66cc66;">-</span>07
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>It is important, though, to understand that the output value always takes into consideration &#8220;timezone" setting.</p>
<p>There is also another way to get the 8pm in LA:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'Poland'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00'</span>::<span style="color: #993333; font-weight: bold;">timestamp</span> at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'America/Los_Angeles'</span>;
        timezone        
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>05 05:00:00<span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>It is important though to add &#8220;::timestamp" after the value. Otherwise we'll get something weird:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'Poland'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00'</span> at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'America/Los_Angeles'</span>;
      timezone       
<span style="color: #808080; font-style: italic;">---------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">11</span>:00:00
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>What happened in here? And why is there 11:00 ?</p>
<p>Well. The value in quotes (2014-04-04 20:00:00) as assumed to be timestamptz &#8211; which means 8pm in my local time zone:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00'</span>::timestamptz;
      timestamptz       
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">20</span>:00:00<span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>And only after treating the value as in my timezone, Pg read &#8220;at time zone &#8230;" &#8211; which can be used to show what the time was at given timezone.</p>
<p>So &#8211; <em>timestamp</em> at time zone gives <em>timestamptz</em> which represents the moment in time when local time at given zone was as given.</p>
<p>and <em>timestamptz</em> at time zone gives <em>timestamp</em>, which shows what the time was in given timezone at given point in time.</p>
<p>This is convoluted, so let me show you some examples:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00'</span>::timestamptz at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'UTC'</span>;
      timezone       
<span style="color: #808080; font-style: italic;">---------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">18</span>:00:00
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 20:00:00'</span>::<span style="color: #993333; font-weight: bold;">timestamp</span> at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'UTC'</span>;
        timezone        
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">22</span>:00:00<span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Interesting thing is that we can use this to convert time from one time zone to another &#8211; even if the Pg is in neither of them.</p>
<p>Let's assume we want to know what time it is in Los Angeles, when it's 8am in Moscow.</p>
<p>My local time zone is:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">show</span> timezone;
 TimeZone 
<span style="color: #808080; font-style: italic;">----------</span>
 Poland
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>So it doesn't help.</p>
<p>First, we need to get &#8220;point in time" (i.e. in timestamptz) that represents Moscow 8am:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #ff0000;">'2014-04-04 08:00:00'</span>::<span style="color: #993333; font-weight: bold;">timestamp</span> at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'Europe/Moscow'</span>;
        timezone        
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 06:00:00<span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>This tells me that it's 6am in my time zone. But we want Los Angeles. I could do '2014-04-04 06:00:00+02&#8242; at time zone &#8216;LA', but I can also:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'2014-04-04 08:00:00'</span>::<span style="color: #993333; font-weight: bold;">timestamp</span> at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'Europe/Moscow'</span><span style="color: #66cc66;">&#41;</span> at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'America/Los_Angeles'</span>;
      timezone       
<span style="color: #808080; font-style: italic;">---------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>03 <span style="color: #cc66cc;">21</span>:00:00
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>since the &#8216;timestamp at time zone ..' expression is timestamptz, we can use another &#8220;at time zone " to convert it back to timestamp (without time zone information) that is localized to some other place.</p>
<p>I hope it's clear &#8211; it took me a while to get to understand it, but I think I finally get it <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Interesting side effect of all of this is that you can't have (easily) indexes on functions on timestamptz. For example &#8211; you can't have index that would be used to get day of week:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #66cc66;">&#40;</span>i timestamptz<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> q <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>to_char<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'Day'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
ERROR:  functions <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #993333; font-weight: bold;">index</span> expression must be marked IMMUTABLE</pre></td></tr></table></div>

<p>The reason is very simple &#8211; as we say in the example above &#8211; the same point in time can represent different days &#8211; depending on time zone. And since to_char() uses <em>current</em> timezone &#8211; it can produce different values for the same input, depending on system configuration (i.e. timezone):</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'Europe/Warsaw'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">insert</span> <span style="color: #993333; font-weight: bold;">into</span> test <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">values</span> <span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'2014-04-04 06:00:00'</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">1</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> i<span style="color: #66cc66;">,</span> to_char<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'Day'</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> test;
           i            <span style="color: #66cc66;">|</span>  to_char  
<span style="color: #808080; font-style: italic;">------------------------+-----------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 06:00:00<span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> Friday   
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'Europe/Moscow'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> i<span style="color: #66cc66;">,</span> to_char<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'Day'</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> test;
           i            <span style="color: #66cc66;">|</span>  to_char  
<span style="color: #808080; font-style: italic;">------------------------+-----------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 08:00:00<span style="color: #66cc66;">+</span>04 <span style="color: #66cc66;">|</span> Friday   
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'America/Los_Angeles'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> i<span style="color: #66cc66;">,</span> to_char<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'Day'</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> test;
           i            <span style="color: #66cc66;">|</span>  to_char  
<span style="color: #808080; font-style: italic;">------------------------+-----------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>03 <span style="color: #cc66cc;">21</span>:00:00<span style="color: #66cc66;">-</span>07 <span style="color: #66cc66;">|</span> Thursday 
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Same point in time &#8211; different days. This could be different months or different years &#8211; it only depends on &#8220;when".</p>
<p>Timestamp (without time zone) actually &#8220;shines" in here &#8211; since it doesn't have timezone, it can be safely used to extract information.</p>
<p>But &#8211; we know how to convert timestamptz to timestamp. We need to tell it at which time zone.</p>
<p>So, we should be able to:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> q <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>to_char<span style="color: #66cc66;">&#40;</span>i at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'Poland'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'Day'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;</pre></td></tr></table></div>

<p>Unfortunately it also fails.</p>
<p>The reason is that to_char is <em>a bit</em> too versatile.</p>
<p>Namely &#8211; you can use to_char like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> to_char<span style="color: #66cc66;">&#40;</span>now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'TMMonth'</span><span style="color: #66cc66;">&#41;</span>;
 to_char 
<span style="color: #808080; font-style: italic;">---------</span>
 April
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">set</span> lc_time <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'pl_PL.UTF-8'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> to_char<span style="color: #66cc66;">&#40;</span>now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'TMMonth'</span><span style="color: #66cc66;">&#41;</span>;
 to_char  
<span style="color: #808080; font-style: italic;">----------</span>
 Kwiecień
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>So this time &#8211; we get different results not because of timezone &#8211; but because of localization.</p>
<p>The proper solution to indexing problem is to write your own function, which calls to_char in a perfectly constant &#8220;environment", and then index this. Like:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">function</span> day_from_ts<span style="color: #66cc66;">&#40;</span>timestamptz<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">returns</span> text <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">select</span> to_char<span style="color: #66cc66;">&#40;</span> $1 at <span style="color: #993333; font-weight: bold;">time</span> zone <span style="color: #ff0000;">'Poland'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'Day'</span> <span style="color: #66cc66;">&#41;</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> <span style="color: #993333; font-weight: bold;">sql</span> immutable;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">FUNCTION</span></pre></td></tr></table></div>

<p>And now we can use it to index:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span> q <span style="color: #993333; font-weight: bold;">on</span> test <span style="color: #66cc66;">&#40;</span>day_from_ts<span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span></pre></td></tr></table></div>

<p>This is safe because the function itself enforces timezone to be &#8220;Poland", and it calls to_char in such a way that locale is ignored (i.e. there is no TM prefix in to_char format).</p>
<p>Of course to use this index, all queries would need to use the function too, like:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> day_from_ts<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'Friday'</span>;</pre></td></tr></table></div>

<p>One more thing that is important when it comes to time zones is getting &#8220;unix time", a.k.a. epoch.</p>
<p>This is generally simple:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">extract</span><span style="color: #66cc66;">&#40;</span>epoch <span style="color: #993333; font-weight: bold;">from</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
    date_part     
<span style="color: #808080; font-style: italic;">------------------</span>
 <span style="color: #cc66cc;">1396638868.57491</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>What's interesting, is that it <em>doesn't</em> depend on timezone:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">begin</span>;
<span style="color: #993333; font-weight: bold;">BEGIN</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">show</span> timezone;
 TimeZone 
<span style="color: #808080; font-style: italic;">----------</span>
 Poland
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">extract</span><span style="color: #66cc66;">&#40;</span>epoch <span style="color: #993333; font-weight: bold;">from</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
              now              <span style="color: #66cc66;">|</span>    date_part     
<span style="color: #808080; font-style: italic;">-------------------------------+------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">15</span>:<span style="color: #cc66cc;">27.834775</span><span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1396638927.83477</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">set</span> timezone <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'America/Los_Angeles'</span>;
<span style="color: #993333; font-weight: bold;">SET</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">extract</span><span style="color: #66cc66;">&#40;</span>epoch <span style="color: #993333; font-weight: bold;">from</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
              now              <span style="color: #66cc66;">|</span>    date_part     
<span style="color: #808080; font-style: italic;">-------------------------------+------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">12</span>:<span style="color: #cc66cc;">15</span>:<span style="color: #cc66cc;">27.834775</span><span style="color: #66cc66;">-</span>07 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1396638927.83477</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ commit;
COMMIT</pre></td></tr></table></div>

<p>The reason is that, while not everybody knows it, epoch time is always taken into consideration at UTC time zone.</p>
<p>What it means is that when you're doing extract epoch from timestamp &#8211; pg assumes it to be UTC. Which leads to potential problems:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">extract</span><span style="color: #66cc66;">&#40;</span>epoch <span style="color: #993333; font-weight: bold;">from</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
              now              <span style="color: #66cc66;">|</span>    date_part    
<span style="color: #808080; font-style: italic;">-------------------------------+-----------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">19</span>:<span style="color: #cc66cc;">01.456205</span><span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1396639141.4562</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">extract</span><span style="color: #66cc66;">&#40;</span>epoch <span style="color: #993333; font-weight: bold;">from</span> <span style="color: #ff0000;">'2014-04-04 21:19:01.456205'</span>::<span style="color: #993333; font-weight: bold;">timestamp</span><span style="color: #66cc66;">&#41;</span>;
    date_part    
<span style="color: #808080; font-style: italic;">-----------------</span>
 <span style="color: #cc66cc;">1396646341.4562</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>In the first case, Pg gets &#8220;point in time", which gets internally converted to UTC (and when displayed &#8211; converted to my, +2, timezone).</p>
<p>In the second case &#8211; the timestamp is in my timezone, but it is assumed to be UTC (not converted!), and epoch is taken from '2014-04-04 21:19:01.456205 UTC' and not '2014-04-04 21:19:01.456205+02&#8242;.</p>
<p>Tricky.</p>
<p>Long story short &#8211; try to avoid timestamps and use timestamptz.</p>
<p>The last thing I wanted to show is not a bug or potential issue, but rather a functionality that many people don't know about.</p>
<p>As you saw PostgreSQL uses timestamps (and timestamptzs) with up to microsecond precision. While I don't like it, some people insist that they want just up to second precision.</p>
<p>Both timestamp and timestamptz (and other time related datatypes too) types can have optional &#8220;precision".</p>
<p>Let me show you simple example:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>::timestamptz<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>::timestamptz<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;
              now              <span style="color: #66cc66;">|</span>          now           <span style="color: #66cc66;">|</span>           now            
<span style="color: #808080; font-style: italic;">-------------------------------+------------------------+--------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">23</span>:<span style="color: #cc66cc;">42.322315</span><span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">23</span>:<span style="color: #cc66cc;">42</span><span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">23</span>:<span style="color: #cc66cc;">42.3</span><span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>You can, of course, use it in tables too:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #66cc66;">&#40;</span>i timestamptz<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">insert</span> <span style="color: #993333; font-weight: bold;">into</span> test<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">values</span> <span style="color: #66cc66;">&#40;</span>now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">1</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test;
           i            
<span style="color: #808080; font-style: italic;">------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">24</span>:<span style="color: #cc66cc;">16</span><span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Nice. You don't have to change your &#8220;now()" or anything &#8211; just add precision to datatype, and it will do the sensible thing.</p>
<p>I mentioned that I don't like it. The reason is very simple &#8211; in any sensibly busy system, a second is simply too low precision. What's more &#8211; keeping data up to microsecond doesn't cost me anything, and it can get useful.</p>
<p>but then &#8211; if the data is up to microsecond &#8211; how do I get values to display without subsecond?</p>
<p>It's simple &#8211; I use (in select clauses) to_char(), or date_trunc, or even cast to timestamptz(0):</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
    to_char<span style="color: #66cc66;">&#40;</span>now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'YYYY-MM-DD HH24:MI:SS TZ'</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
    date_trunc<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'second'</span><span style="color: #66cc66;">,</span> now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span>
    now<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>::timestamptz<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>;
              now              <span style="color: #66cc66;">|</span>         to_char          <span style="color: #66cc66;">|</span>       date_trunc       <span style="color: #66cc66;">|</span>          now           
<span style="color: #808080; font-style: italic;">-------------------------------+--------------------------+------------------------+------------------------</span>
 <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">28</span>:<span style="color: #cc66cc;">20.827763</span><span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">28</span>:<span style="color: #cc66cc;">20</span> CEST <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">28</span>:<span style="color: #cc66cc;">20</span><span style="color: #66cc66;">+</span>02 <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2014</span><span style="color: #66cc66;">-</span>04<span style="color: #66cc66;">-</span>04 <span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">28</span>:<span style="color: #cc66cc;">21</span><span style="color: #66cc66;">+</span>02
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>I hope this blogpost will clear some confusion. If something is still not clear &#8211; please comment, and I'll do my best to answer all questions.</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">7 comments <a href='http://www.depesz.com/2014/04/04/how-to-deal-with-timestamps/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-45292" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45292" title="">#</a></span> JIm Nasby</div>  <div class="date">Apr 4, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/366d4d58c58105e24af6532acda68586?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Great article, and I agree that timestamp without timezone is pretty guaranteed to be a bug.</p>
<p>Unfortunately, I don&#8217;t think timestamptz goes far enough either.</p>
<p>The problem is that it&#8217;s throwing away useful information; namely: what timezone was this timestamp originally specified in?</p>
<p>That&#8217;s frequently very useful information to have. Things like&#8230;</p>
<p>&#8220;What time did the customer think they were actually scheduling this for, based on the timezone they entered?&#8221;</p>
<p>&#8220;At what local time was X supposed to happen?&#8221;</p>
<p>&#8220;What was the local time when X actually did happen?&#8221;</p>
<p>I think it&#8217;s a shame that we don&#8217;t actually have a data type that preserves timezone (though, I think there is an add-on one).</p>
<p>There&#8217;s another important point I think needs to be made in any discussion of time.</p>
<p>Humans apply a magic connotation to time. People don&#8217;t see time as just some other datum&#8230; it&#8217;s a real thing that we experience every day. And this causes huge problems. For example, trying to determine the history of changes to something. Time is actually a HORRIBLE way to do that.</p>
<p>Think of it this way&#8230; when humans talk about time, what we&#8217;re actually referring to is the constant *immutable* chain of events that we experience in our lives. If you just read that sentence and now you&#8217;re reading this one, that is history. And it can never change. You can never un-read the previous sentence, and you can never say that you read the second one before the first one.</p>
<p>This immutable stream of events is what we think about when we talk about time. And it has NOTHING to do with clocks, timezones, dates, timestamps or any of that stuff. All of that stuff is about a *measurement*. It&#8217;s not even a measurement of what we perceive time to be, because it doesn&#8217;t actually chain events together.</p>
<p>So next time you want the history of something, do yourself a huge favor and *build a chain of events that doesn&#8217;t use time*. For example, give each record a previous_event_id that points at the event that came before this one.</p>
	</li>
		
		
			
<li class="odd" id="comment-45296" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45296" title="">#</a></span> <a href='http://blog.2ndquadrant.com/' rel='external nofollow' class='url'>Craig Ringer</a></div>  <div class="date">Apr 5, 2014</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/85f50c23bb5e9dfb061af5032bfe8e65?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Personally, I think we lack a data type that preserves all the important information. Both timestamp and timestamptz are seriously flawed.</p>
<p>What we need is a genuine &#8220;timestamp with time zone(s)&#8221;.</p>
<p>This type must be sufficient to identify:</p>
<p>- A unique instant in UTC; and<br />
- A distinct local time</p>
<p>to do this, we&#8217;d need to store a timestamp in utc seconds, *and* an unambiguous identifier for a time zone. That means either something like &#8220;Australia/Sydney; DST=0&#8243; or some disambiguated form of a short tz code like &#8220;EST&#8221; / &#8220;EDT&#8221;.</p>
<p>All in all, times are a horrible mess, and SQL makes a bigger mess out of times.</p>
<p>Right now there are plenty of cases where you have to store a &#8216;timestamptz&#8217; and a separate offset and/or timestamp code (depending on your specific requirements) in order to deal with times correctly. This tends to involve horrible chains of AT TIME ZONE operators, or falling back to client code.</p>
	</li>
		
		
			
<li class="odd" id="comment-45309" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45309" title="">#</a></span> <a href='http://xenoterracide.com' rel='external nofollow' class='url'>Caleb Cushing</a></div>  <div class="date">Apr 5, 2014</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e990c7cdac81e570939c4d5b17303b42?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Would be interesting if you updated this to include the why not epoch, since a large number of developers seem to think an int is a sane way to store timestamps</p>
	</li>
		
		
			
<li class="odd" id="comment-45328" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45328" title="">#</a></span> <a href='http://quarto.pl' rel='external nofollow' class='url'>gotar</a></div>  <div class="date">Apr 7, 2014</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/c938bd96190e3e000cd5e33becc8476b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Jim, @Craig &#8211; if you need additional TZ information stored (I usually don&#8217;t) is there anything that stops you from &#8230;storing it (either as common name or offset or &#8230;a timestamp w/o TZ)? Add a column or create complex data type on your own. It doesn&#8217;t differ from complex numbers or anything composed &#8211; do you thing PostgreSQL should support quaternions and octonions OOTbaseB? Anyway &#8211; how do you want know what the user timezone is!? In the web you can use JS to get offset only, maybe some fancy Java applet that looks for TZ environment variable and parses /etc/localtime, but all the other ways?</p>
<p>If you think that time representation is a mess, then apparently you are skwed by using windows OS. Time is universal (well, not the physical time, just the administration one on earth), all that differs is it&#8217;s representation (not only TZ and DST, but also gregorian/julian/discordian and other calendars). Value stored in DB should reflect exact point in time, just like it reflects exact number &#8211; and it&#8217;s up to a user whether display it in hex, oct or dec. However, the bits of stored number don&#8217;t contain information if it is a float or int &#8211; table definition tells you that. Your suggestion to store user TZ in a row is equal to creating new datatype named &#8220;some number&#8221; with per-row declarable precision. While storing ints and floats (and complex? and simple fractions to save infinite precision?) in a single column might be interesting idea for some specific usecase, it&#8217;s not the general-use type.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-45332" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45332" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Apr 7, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Caleb:<br />
actually, in my opinion &#8211; it&#8217;s not *that* bad. As long as you understand what you&#8217;re storing (i.e. epoch timestamp should be based on UTC time zone, and not any local).</p>
<p>My only major problem with integer based time is that it is less readable. I.e. I prefer to see: now() &#8211; &#8217;1 week&#8217;::interval, than now() &#8211; 604800. Not to mention whole timestamps &#8211; like 1396866292 &#8211; it bears almost no meaning for humans.</p>
	</li>
		
		
			
<li class="odd" id="comment-45341" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45341" title="">#</a></span> Arek</div>  <div class="date">Apr 7, 2014</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>As for epoch timestamp..</p>
<p>It is bad.. it gives you false impresion that you optimized your table, but loosing at the same time:<br />
* the whole point of real timestamp with time zones, intervals, leap years.. etc..<br />
* precision &#8212; epoch expressed in seconds is pretty bad precision for nowadays speedy servers.<br />
* readability &#8212; of course <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="odd" id="comment-45342" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45342" title="">#</a></span> Dan Harris</div>  <div class="date">Apr 7, 2014</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/26a296ae094d51a41ba7768955ed4f35?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>While it is rare to have a use case for timestamp WITHOUT time zone, I live in one every day.  I store archive data from dozens of different systems in many different time zones.  There are many different systems with which I have to interface.  Very few of these systems store a time zone.</p>
<p>For most of these systems, I have no clue what the originating UTC time stamp is.  Yet, I still must store them in Postgres.  An hour of deviation twice per year is fine for these purposes.  But, because I can only stuff a date into a field, I have to go with the plain timestamp WITHOUT time zone field to make my system work.  The data is only relative to other data within each of those systems.  So, as long as this deviation is acceptable, this works.</p>
<p>It scares me when people state &#8220;that must a bug&#8221;.  These systems I deal with were developed when time zones and databases did not mix (some are even stored as character fields).  I NEED these in my database or else my systems would be completely sunk if this feature was deprecated.</p>
<p>Never assume that you have control over the data you are storing.  It&#8217;s great that some of those systems are evolving to store it. But as long as I need to support those that don&#8217;t, I will rely on timestamp without time zone.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2841" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="ce275315d2" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="175"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">329 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">307 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">248 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">192 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">138 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">123 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">123 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">123 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">95 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

