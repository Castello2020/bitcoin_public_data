http://www.depesz.com/2012/06/07/123-vs-depesz-what-is-faster/
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 14:36:59 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2455>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; &#8220;= 123&#8243; vs. &#8220;= &#8216;depesz&#8217;&#8221;. What is faster?</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; &#8220;= 123&#8243; vs. &#8220;= &#8216;depesz&#8217;&#8221;. What is faster? Comments Feed" href="http://www.depesz.com/2012/06/07/123-vs-depesz-what-is-faster/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2012/06/07/123-vs-depesz-what-is-faster/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2455' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2455">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2012/06/07/123-vs-depesz-what-is-faster/" rel="bookmark" title="Permanent Link to &#8220;= 123&#8243; vs. &#8220;= &#8216;depesz&#8217;&#8221;. What is faster?">&#8220;= 123&#8243; vs. &#8220;= &#8216;depesz&#8217;&#8221;. What is faster?</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>June 7th, 2012 by depesz | Tags: <a href="http://www.depesz.com/tag/index/" rel="tag">index</a>, <a href="http://www.depesz.com/tag/integer/" rel="tag">integer</a>, <a href="http://www.depesz.com/tag/natural/" rel="tag">natural</a>, <a href="http://www.depesz.com/tag/performance/" rel="tag">performance</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/primary-key/" rel="tag">primary key</a>, <a href="http://www.depesz.com/tag/surrogate/" rel="tag">surrogate</a>, <a href="http://www.depesz.com/tag/text/" rel="tag">text</a> |  <a href="http://www.depesz.com/2012/06/07/123-vs-depesz-what-is-faster/#comments" title="Comment on &#8220;= 123&#8243; vs. &#8220;= &#8216;depesz&#8217;&#8221;. What is faster?">22 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>There is this idea that normal form in databases require you to use integer, auto incrementing, primary keys.</p>
<p>The idea was discussed by many people, I will just point you to series of three blog posts on the subject by Josh Berkus ( <a href="http://it.toolbox.com/blogs/database-soup/primary-keyvil-part-i-7327">part 1</a>, <a href="http://it.toolbox.com/blogs/database-soup/primary-keyvil-part-ii-7345">2</a> and <a href="http://it.toolbox.com/blogs/database-soup/primary-keyvil-part-iii-7365"> 3</a>).</p>
<p>One of the points that proponents of surrogate keys (i.e. those based on integer and sequences) raise is that comparing integers is faster than comparing texts. So,</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> users <span style="color: #993333; font-weight: bold;">where</span> id <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">123</span></pre></td></tr></table></div>

<p>is faster than</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> users <span style="color: #993333; font-weight: bold;">where</span> username <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'depesz'</span></pre></td></tr></table></div>

<p>Is it?</p>
<p><span id="more-2455"></span></p>
<p>It definitely looks like it should be slower &#8211; after all &#8211; integer takes 4 bytes, and text (&#8220;depesz" in this case) takes 7. almost twice as bad.</p>
<p>So, since I haven't written anything on the blog for quite some time, I decided to take a closer look at this question.</p>
<p>Of course I need some test tables.</p>
<p>In case of int4-primary-key the table is:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> users_s <span style="color: #66cc66;">&#40;</span>
    id          INT4        <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span><span style="color: #66cc66;">,</span>
    username    TEXT        <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">UNIQUE</span><span style="color: #66cc66;">,</span>
    password    TEXT        <span style="color: #66cc66;">,</span>
    is_admin    BOOL        <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #ff0000;">'false'</span><span style="color: #66cc66;">,</span>
    created_tsz TIMESTAMPTZ <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
    blocked_tsz TIMESTAMPTZ <span style="color: #66cc66;">,</span>
    blocked_by  INT4        <span style="color: #993333; font-weight: bold;">REFERENCES</span> users_s <span style="color: #66cc66;">&#40;</span>id <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#41;</span>;</pre></td></tr></table></div>

<p>Version with text based primary key is similar:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> users_n <span style="color: #66cc66;">&#40;</span>
    username    TEXT        <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">PRIMARY</span> <span style="color: #993333; font-weight: bold;">KEY</span><span style="color: #66cc66;">,</span>
    password    TEXT        <span style="color: #66cc66;">,</span>
    is_admin    BOOL        <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">DEFAULT</span> <span style="color: #ff0000;">'false'</span><span style="color: #66cc66;">,</span>
    created_tsz TIMESTAMPTZ <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
    blocked_tsz TIMESTAMPTZ <span style="color: #66cc66;">,</span>
    blocked_by  TEXT        <span style="color: #993333; font-weight: bold;">REFERENCES</span> users_s <span style="color: #66cc66;">&#40;</span>username <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#41;</span>;</pre></td></tr></table></div>

<p>To these tables I loaded the same dataset &#8211; 10 million rows, with following properties:</p>
<ul>
<li>username &#8211; random string 2 or more characters long (from: a-z, A-Z, 0-9)</li>
<li>password &#8211; random strgin, 32 letters</li>
<li>is_admin &#8211; false in ~ 99.99% of rows, true in ~ 0.01%</li>
<li>created_tsz &#8211; random timestamp between 2000-01-01 00:00:00 and now, made so that (in users_s table) it only rises (when ordering by id)</li>
<li>blocked_tsz &#8211; null in 99.9% rows. In other cases &#8211; random timestamp between created_tsz and now</li>
<li>blocked_by &#8211; null if blocked_tsz is null, in other case &#8211; id (or username) of random user that has &#8220;is_admin" set to true.</li>
</ul>
<p>sample data:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> users_s <span style="color: #993333; font-weight: bold;">where</span> id <span style="color: #66cc66;">&gt;=</span> random<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">*</span> <span style="color: #cc66cc;">10000000</span> <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">10</span>;
   id    │  username  │             password             │ is_admin │      created_tsz       │ blocked_tsz │ blocked_by
─────────┼────────────┼──────────────────────────────────┼──────────┼────────────────────────┼─────────────┼────────────
 <span style="color: #cc66cc;">3223759</span> │ NmqLFYS1xa │ TNiwvhtqJGPYeLdbuSjpXWDMQCKsFgAa │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">53</span>:<span style="color: #cc66cc;">39</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223760</span> │ g9LE46QtWU │ wFgkSRLMOHvdcTyWNxhYtlAVbmPQfUED │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">53</span>:<span style="color: #cc66cc;">53</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223762</span> │ arjvTCObUi │ MswoWZpSYaALuVnHzCEIgtmvrBJxXQby │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">54</span>:<span style="color: #cc66cc;">35</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223764</span> │ brJ4aMXng3 │ FzKLxrwWqJeVdkRIAjpaYCNUsPZihBcb │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">55</span>:<span style="color: #cc66cc;">36</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223765</span> │ thZWJzMb7K │ rAckTDMwuozflENFZKUbhxPnaRisYCVJ │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">57</span>:<span style="color: #cc66cc;">38</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223766</span> │ aykbcMFQ0e │ SejNzfrnmOhJyCXEivxautqkgDQbdTpL │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">58</span>:<span style="color: #cc66cc;">50</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223767</span> │ WgR1yxm9Zu │ kAZVTmMxjqocCHgnOuseiQyNFtXGPKRh │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">58</span>:<span style="color: #cc66cc;">51</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223768</span> │ HFOJsG9nKl │ zNYrptxwTPIRdQugEBicLebyZShaWHsG │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 09:<span style="color: #cc66cc;">59</span>:<span style="color: #cc66cc;">12</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223770</span> │ fbXPnuUMgD │ BwDWRgpQasbZuAfzVqKonclCGOYJSkxL │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 <span style="color: #cc66cc;">10</span>:00:02<span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
 <span style="color: #cc66cc;">3223776</span> │ yJ8A1V9rNL │ YwDSTceukhCXEiPoaVIMrzJgbtnvHQZp │ f        │ <span style="color: #cc66cc;">2004</span><span style="color: #66cc66;">-</span>01<span style="color: #66cc66;">-</span>02 <span style="color: #cc66cc;">10</span>:01:<span style="color: #cc66cc;">11</span><span style="color: #66cc66;">+</span>01 │ <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>      │     <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>length of username distribution:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">count</span><span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">*</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> users_s <span style="color: #993333; font-weight: bold;">group</span> <span style="color: #993333; font-weight: bold;">by</span> <span style="color: #993333; font-weight: bold;">length</span> <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> <span style="color: #993333; font-weight: bold;">length</span>;
 <span style="color: #993333; font-weight: bold;">length</span> │  <span style="color: #993333; font-weight: bold;">count</span>
────────┼─────────
      <span style="color: #cc66cc;">4</span> │  <span style="color: #cc66cc;">999999</span>
      <span style="color: #cc66cc;">6</span> │ <span style="color: #cc66cc;">1000000</span>
      <span style="color: #cc66cc;">8</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">10</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">12</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">14</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">16</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">18</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">20</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">22</span> │ <span style="color: #cc66cc;">1000000</span>
     <span style="color: #cc66cc;">24</span> │       <span style="color: #cc66cc;">1</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">11</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>(oops, looks like I had an &#8220;off by one" error in data generation script. But that's not very important.</p>
<p>Sizes of tables and indexes:</p>
<ul>
<li>int4 based primary key
<ul>
<li>table data (with toast): 886 MB</li>
<li>primary key index (on &#8220;id"): 214 MB</li>
<li>username index: 318 MB</li>
<li>created_tsz index: 214 MB</li>
<li>total size: 1633 MB</li>
</ul>
</li>
<li>text based primary key
<ul>
<li>table data (with toast): 847 MB</li>
<li>primary key index (on &#8220;username"): 318 MB</li>
<li>created_tsz index: 214 MB</li>
<li>total size: 1379 MB</li>
</ul>
</li>
</ul>
<p>So, from start it looks like text based primary key is better because it decreases size of data that have to be cached. But that's not the point of this blogpost. Let's see some speeds.</p>
<p>Generated list of 100000 ids, and 10 lists, each of 100000 usernames &#8211; each list contained only usernames of given length &#8211; from 4 to 22 characters.</p>
<p>Then, wrote a simple program, which did, in a loop:</p>
<ul>
<li>pick random test (check by id, check by username of length 4, check by username &#8230;)</li>
<li>fetch next value to test (id or username)</li>
<li>run -&gt;execute() on the query, getting time information</li>
<li>run -&gt;fetchrow() on the query, getting time information</li>
</ul>
<p>The query was always select * from table where field = ?.</p>
<p>This was done in a loop that queried all values (100000 ids, and 1 million usernames).</p>
<p>Results are below in a table.</p>
<p>Most of the columns should be self-explanatory, just a note on &#8220;95%" &#8211; this is time that 95% of queries finished in. So if it's &#8220;2 seconds" it means that 95% of queries finished in 2 seconds or less time, and only 5% was more than 2 seconds.</p>
<p>All times are in milliseconds (0.001 of a second) &#8211; i skipped the units to make it less cluttered (though it's still is).</p>
<table class="normal">
<thead>
<tr>
<th rowspan="2">test</th>
<th colspan="5">execute</th>
<th colspan="5">fetch</th>
<th colspan="5">query</th>
</tr>
<tr>
<th>min</th>
<th>avg</th>
<th>95%</th>
<th>max</th>
<th>sum</th>
<th>min</th>
<th>avg</th>
<th>95%</th>
<th>max</th>
<th>sum</th>
<th>min</th>
<th>avg</th>
<th>95%</th>
<th>max</th>
<th>sum</th>
</tr>
</thead>
<tbody>
<tr>
<th>100k-ids</th>
<td class="num">0.068</td>
<td class="num">0.637</td>
<td class="num">0.452</td>
<td class="num">150.973</td>
<td class="num">63734.133</td>
<td class="num">0.009</td>
<td class="num">0.018</td>
<td class="num">0.019</td>
<td class="num">0.299</td>
<td class="num">1782.907</td>
<td class="num">0.077</td>
<td class="num">0.655</td>
<td class="num">0.473</td>
<td class="num">150.992</td>
<td class="num">65517.040</td>
</tr>
<tr>
<th>100k-u4</th>
<td class="num">0.075</td>
<td class="num">0.144</td>
<td class="num">0.152</td>
<td class="num">32.408</td>
<td class="num">14372.208</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.427</td>
<td class="num">1591.908</td>
<td class="num">0.084</td>
<td class="num">0.160</td>
<td class="num">0.168</td>
<td class="num">32.426</td>
<td class="num">15964.116</td>
</tr>
<tr>
<th>100k-u6</th>
<td class="num">0.075</td>
<td class="num">0.143</td>
<td class="num">0.152</td>
<td class="num">17.031</td>
<td class="num">14282.245</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.180</td>
<td class="num">1590.029</td>
<td class="num">0.084</td>
<td class="num">0.159</td>
<td class="num">0.169</td>
<td class="num">17.050</td>
<td class="num">15872.274</td>
</tr>
<tr>
<th>100k-u8</th>
<td class="num">0.071</td>
<td class="num">0.144</td>
<td class="num">0.152</td>
<td class="num">19.309</td>
<td class="num">14420.358</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.396</td>
<td class="num">1597.304</td>
<td class="num">0.080</td>
<td class="num">0.160</td>
<td class="num">0.169</td>
<td class="num">19.327</td>
<td class="num">16017.662</td>
</tr>
<tr>
<th>100k-u10</th>
<td class="num">0.071</td>
<td class="num">0.199</td>
<td class="num">0.154</td>
<td class="num">82.696</td>
<td class="num">19910.616</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.125</td>
<td class="num">1588.379</td>
<td class="num">0.080</td>
<td class="num">0.215</td>
<td class="num">0.172</td>
<td class="num">82.717</td>
<td class="num">21498.995</td>
</tr>
<tr>
<th>100k-u12</th>
<td class="num">0.071</td>
<td class="num">0.224</td>
<td class="num">0.155</td>
<td class="num">38.788</td>
<td class="num">22438.004</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.432</td>
<td class="num">1589.520</td>
<td class="num">0.080</td>
<td class="num">0.240</td>
<td class="num">0.173</td>
<td class="num">38.806</td>
<td class="num">24027.524</td>
</tr>
<tr>
<th>100k-u14</th>
<td class="num">0.069</td>
<td class="num">0.266</td>
<td class="num">0.157</td>
<td class="num">106.409</td>
<td class="num">26584.445</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.120</td>
<td class="num">1581.030</td>
<td class="num">0.077</td>
<td class="num">0.282</td>
<td class="num">0.175</td>
<td class="num">106.429</td>
<td class="num">28165.475</td>
</tr>
<tr>
<th>100k-u16</th>
<td class="num">0.075</td>
<td class="num">0.296</td>
<td class="num">0.159</td>
<td class="num">98.583</td>
<td class="num">29613.015</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.188</td>
<td class="num">1594.267</td>
<td class="num">0.084</td>
<td class="num">0.312</td>
<td class="num">0.177</td>
<td class="num">98.602</td>
<td class="num">31207.282</td>
</tr>
<tr>
<th>100k-u18</th>
<td class="num">0.075</td>
<td class="num">0.212</td>
<td class="num">0.155</td>
<td class="num">52.395</td>
<td class="num">21248.188</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.407</td>
<td class="num">1591.861</td>
<td class="num">0.084</td>
<td class="num">0.228</td>
<td class="num">0.173</td>
<td class="num">52.417</td>
<td class="num">22840.050</td>
</tr>
<tr>
<th>100k-u20</th>
<td class="num">0.070</td>
<td class="num">0.146</td>
<td class="num">0.154</td>
<td class="num">25.016</td>
<td class="num">14587.051</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">0.444</td>
<td class="num">1592.307</td>
<td class="num">0.079</td>
<td class="num">0.162</td>
<td class="num">0.171</td>
<td class="num">25.033</td>
<td class="num">16179.358</td>
</tr>
<tr>
<th>100k-u22</th>
<td class="num">0.073</td>
<td class="num">0.146</td>
<td class="num">0.155</td>
<td class="num">14.897</td>
<td class="num">14647.908</td>
<td class="num">0.008</td>
<td class="num">0.016</td>
<td class="num">0.017</td>
<td class="num">1.680</td>
<td class="num">1583.701</td>
<td class="num">0.082</td>
<td class="num">0.162</td>
<td class="num">0.171</td>
<td class="num">14.915</td>
<td class="num">16231.609</td>
</tr>
</tbody>
</table>
<p>Table is huge, but the first thing that I see is that we can easily skip the &#8220;fetch" part &#8211; it shows very similar timings &#8211; actually fetching row with integer primary key is a bit slower (~10% slower), but that's because row with additional column is wider.</p>
<p>Also &#8211; I'm not really interested in all the other columns &#8211; 95% should be enough. Why not max? Well, there can be always some spikes which will cause general system performance degradation, and I don't want to punish some tests &#8220;on random". 95% of cases seems to be good enough to get some sensible results.</p>
<p>So, I can simplify the table to:</p>
<table class="normal">
<thead>
<tr>
<th>test</th>
<th>95% execute</th>
</tr>
</thead>
<tbody>
<tr>
<th>100k-ids</th>
<td class="num">0.452 ms</td>
</tr>
<tr>
<th>100k-u4</th>
<td class="num">0.152 ms</td>
</tr>
<tr>
<th>100k-u6</th>
<td class="num">0.152 ms</td>
</tr>
<tr>
<th>100k-u8</th>
<td class="num">0.152 ms</td>
</tr>
<tr>
<th>100k-u10</th>
<td class="num">0.154 ms</td>
</tr>
<tr>
<th>100k-u12</th>
<td class="num">0.155 ms</td>
</tr>
<tr>
<th>100k-u14</th>
<td class="num">0.157 ms</td>
</tr>
<tr>
<th>100k-u16</th>
<td class="num">0.159 ms</td>
</tr>
<tr>
<th>100k-u18</th>
<td class="num">0.155 ms</td>
</tr>
<tr>
<th>100k-u20</th>
<td class="num">0.154 ms</td>
</tr>
<tr>
<th>100k-u22</th>
<td class="num">0.155 ms</td>
</tr>
</tbody>
</table>
<p>Much nicer table (to read, at least.</p>
<p>Whoa. But it looks like integer searching is ~ 3 times slower than text searching. It could be influenced by simple fact &#8211; better caching of the text-bases table &#8211; i.e. it was queried a million times, and integer-based table &#8211; only 100,000. So the text based table got unfair advantage.</p>
<p>So let's redo the test, this time, I will query them in order &#8211; 100,000 queries to integer based table, and then all the other tests, also in order. Results:</p>
<table class="normal">
<thead>
<tr>
<th>test</th>
<th>95% execute</th>
</tr>
</thead>
<tbody>
<tr>
<th>100k-ids</th>
<td class="num">0.143 ms</td>
</tr>
<tr>
<th>100k-u4</th>
<td class="num">0.146 ms</td>
</tr>
<tr>
<th>100k-u6</th>
<td class="num">0.146 ms</td>
</tr>
<tr>
<th>100k-u8</th>
<td class="num">0.147 ms</td>
</tr>
<tr>
<th>100k-u10</th>
<td class="num">0.148 ms</td>
</tr>
<tr>
<th>100k-u12</th>
<td class="num">0.148 ms</td>
</tr>
<tr>
<th>100k-u14</th>
<td class="num">0.148 ms</td>
</tr>
<tr>
<th>100k-u16</th>
<td class="num">0.149 ms</td>
</tr>
<tr>
<th>100k-u18</th>
<td class="num">0.150 ms</td>
</tr>
<tr>
<th>100k-u20</th>
<td class="num">0.149 ms</td>
</tr>
<tr>
<th>100k-u22</th>
<td class="num">0.150 ms</td>
</tr>
</tbody>
</table>
<p>Much better. And a lesson for me, for future, about how to do such tests <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Anyway &#8211; what do these results tell us? Well &#8211; as expected &#8211; text based searches are slower. But the difference is (in my opinion) negligible.</p>
<ul>
<li>~ 2.7% of performance decrease when switching to 8 character texts</li>
<li>~ 4.8% when switching to (huge) 22 character texts</li>
</ul>
<p>8 character string is using 9 bytes. 22 characters &#8211; 23 bytes. So we can see that the performance decrease is not linear with number of bytes.</p>
<p>That, plus the fact that with text based primary keys we can remove one column, and one index means that benefits will most likely outweigh this small slowdown.</p>
<p>Of course &#8211; this doesn't mean: get rid of all integer primary keys. It just means: do not treat &#8220;performance degradation" as an argument against using natural, text based, keys. </p>
<p><!-- vim: set spell spelllang=en_US ft=xhtml: --></p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">22 comments <a href='http://www.depesz.com/2012/06/07/123-vs-depesz-what-is-faster/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-35538" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35538" title="">#</a></span> <a href='http://www.tanga.com' rel='external nofollow' class='url'>Joe Van Dyk</a></div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e1c881ecb7bf966f44fecaa5387ab26b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I&#8217;ve often wondered about that. Thanks!</p>
<p>Of course, the downside of using a text column for a primary key is if the primary key ever changes, all the rows referencing that key need to be updated as well.  Seems like that scenario could happen more if using a text column that references, say, a username.</p>
	</li>
		
		
			
<li class="odd" id="comment-35539" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35539" title="">#</a></span> Thomas</div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e74de2943e3f4505ab3d07acb083f428?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Nice comparison, thanks. Might be interesting to see how this performs if a UUID is used for a primary key.</p>
	</li>
		
		
			
<li class="odd" id="comment-35540" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35540" title="">#</a></span> Joby</div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e9b163424f7fb0dd0c78dd10c99eafc7?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>This is great info.  It would be interesting to see if there is a significant difference joining tables on an integer key vs. a text key.</p>
	</li>
		
		
			
<li class="odd" id="comment-35541" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35541" title="">#</a></span> Tony H.</div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>IMHO it&#8217;s important that index is used, reducing significantly the number of comparisons. On the other hand, if for example the (primary) key consists of multiple columns such that the underlying index can&#8217;t be used for some particular query, full scan may become necessary. Then I&#8217;d expect the total number of comparisons to grow and in turn higher difference in the query execution time.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-35542" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35542" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Joe:<br />
Sure. There are always benefits and drawbacks. I just wanted to clear the case about performance of scans.</p>
<p>@Thomas:<br />
uuid length is 16 bytes. So I can only assume it would behave as text of 15 normal characters.</p>
<p>@Joby:<br />
Same thing &#8211; join has to scan the table using some method. If it will use index scan &#8211; this is what you&#8217;ll get. If it will use sequential scan &#8211; you will get a bit faster response, since the table is smaller.</p>
<p>@Tony:<br />
Not sure what you mean &#8211; of course index is used &#8211; I am fetching a row using primary key lookup.<br />
If you are talking in general &#8211; it doesn&#8217;t matter &#8211; if the planner cannot use index on text column &#8211; it wouldn&#8217;t use one on integer too.</p>
	</li>
		
		
			
<li class="odd" id="comment-35543" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35543" title="">#</a></span> <a href='http://blog.teksol.info/' rel='external nofollow' class='url'>François Beausoleil</a></div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/7da32f740e64088d2b07c277f3c1b94b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I too wonder about JOIN performance. That would be a neat test to write. Thanks!</p>
	</li>
		
		
			
<li class="odd" id="comment-35545" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35545" title="">#</a></span> Andres Freund</div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/829c4602319681bad5aea2778e859594?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>The difference will be noticeably bigger if your index gets bigger than the amount of shared_buffers and then when it gets bigger than ram.<br />
For one the int index is simply smaller, for another it will take quite a bit longer for the int index to get 4 levels deep than with strings.</p>
	</li>
		
		
			
<li class="odd" id="comment-35546" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35546" title="">#</a></span> <a href='http://xenoterracide.com' rel='external nofollow' class='url'>Caleb Cushing</a></div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e990c7cdac81e570939c4d5b17303b42?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>what about UUID&#8217;s?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-35547" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35547" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 7, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Caleb: check earlier comments.</p>
	</li>
		
		
			
<li class="odd" id="comment-35548" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35548" title="">#</a></span> <a href='http://xenoterracide.com' rel='external nofollow' class='url'>Caleb Cushing</a></div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e990c7cdac81e570939c4d5b17303b42?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I think I would hope that UUID are faster than just a text search, but I&#8217;ll be honest to say that I don&#8217;t understand indexing to have any idea if that would remotely hold up logically.</p>
	</li>
		
		
			
<li class="odd" id="comment-35549" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35549" title="">#</a></span> Galaxiom</div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Indexes are binary so comparisons on indexed fields are going to be pretty much the same regardless of the type.</p>
<p>My understanding is that the disadvantage of large text keys lies in the generation of the index during inserts.</p>
<p>That comparison would be interesting.</p>
	</li>
		
		
			
<li class="odd" id="comment-35550" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35550" title="">#</a></span> Sefer</div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/f3a8eef5f0d1547fc5ca7f5da9adf35e?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi Depesz,</p>
<p>There is one thing you didn&#8217;t share during your test.<br />
What is your locale &amp; encoding?</p>
<p>I ask this because (for example):</p>
<p>1. A UTF8 string for a non-latin string would take more bytes than characters (resulting in larger tables and longer fetching/comparison time).</p>
<p>2. When the locale is not trivial (ala C) then the comparison has to go through some more complex routines (see how that can affect sorting for example). <a href="http://www.postgresql.org/docs/devel/static/locale.html#AEN32412" rel="nofollow">http://www.postgresql.org/docs/devel/static/locale.html#AEN32412</a></p>
<p>So the test is not entirely reflective of text vs integer fields performance issues.<br />
 <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Thanks,<br />
   Sefer.</p>
	</li>
		
		
			
<li class="odd" id="comment-35551" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35551" title="">#</a></span> Stephan</div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Great article! </p>
<p>We have a legacy database which uses VARCHAR(20) columns as IDs. These columns contain numbers, padded with &#8217;0&#8242;, e. g. &#8217;00000000000000012345&#8242;.</p>
<p>I wonder how (in)efficient such IDs are, compared to normal integers.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-35552" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35552" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Sefer:<br />
as you saw the data didn&#8217;t contain any non-latin characters (i mentioned it specifically). As such &#8211; the utf8 is irrelevant.<br />
and &#8211; i was using utf8 with en_US.UTF-8 locale.</p>
	</li>
		
		
			
<li class="odd" id="comment-35553" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35553" title="">#</a></span> gj</div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/07a8b2ae31ca11464c23f375330e146a?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>the problem starts when you got foreign keys, and you want to change user name of a guy.<br />
Also, if there&#8217;s many tables linked through FK &#8211; then the difference becomes significant. </p>
<p>But like in every case &#8211; its a choice, and you have to decide at design time. There&#8217;s no one size fits them all. Ignoring either choices is plain stupid.</p>
	</li>
		
		
			
<li class="odd" id="comment-35554" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35554" title="">#</a></span> Dawgbert the Elder</div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/8863dcdc19cfcae181334647500130cc?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Interesting article, but until there is a world-moving, compelling, difference-which-makes-a-difference kind of reason to use strings as the ID, count me among the stalinists who use BIGINT for their IDs.</p>
<p>One more thing: this article, but much more so the Berkus article linked from here shows that there is a widespread, fundamental misunderstanding of what an ID is and what its function is.</p>
	</li>
		
		
			
<li class="odd" id="comment-35559" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35559" title="">#</a></span> <a href='http://justatheory.com/' rel='external nofollow' class='url'>David E. Wheeler</a></div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/397f829eea921e02e35c37c22f9e6d3b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Great stuff depesz, as usual. I, however, would also be interested in seeing benchmarks for values including multibyte characters. Limiting the test to ASCII is, increasingly, misleading: lots of folks use accented characters, asian language charcters, and other fun stuff, in their usernames. And it&#8217;s not just usernames that work that way, of course.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-35560" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35560" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 8, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@David:<br />
sure, but it just doesn&#8217;t matter. index doesn&#8217;t care about what the bytes represent (well, at least usually). So multibyte characters mean *only* increased length of string.<br />
So &#8220;żółw&#8221; is 8 bytes.</p>
	</li>
		
		
			
<li class="odd" id="comment-35562" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35562" title="">#</a></span> David E. Wheeler</div>  <div class="date">Jun 9, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/397f829eea921e02e35c37c22f9e6d3b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@depesz:</p>
<p>Maybe I don&#8217;t understand indexing well enough, but won&#8217;t adding 1000s of characters make the btree much broader? That is, thousands of branches to scan at the root of the tree, rather than just 128. I would think that would make for slower index scans.</p>
	</li>
		
		
			
<li class="odd" id="comment-35586" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35586" title="">#</a></span> Andres Freund</div>  <div class="date">Jun 11, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/829c4602319681bad5aea2778e859594?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@depesz: Well, btrees very frequently do compare different values and expect to learn whether a value is smaller, equal or bigger. For that they do locale specific comparison which is noticeable more expensive for non a-zA-Z0-9 characters.</p>
<p>@david: Sure, the fanout is relevant, but thats noticeable by the tree getting deeper, not the root getting wider.</p>
	</li>
		
		
			
<li class="odd" id="comment-40246" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-40246" title="">#</a></span> Dawid</div>  <div class="date">Jun 11, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/68bbbe65ccd9ff9e40a56e5e5146e973?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Zysk na rozmiarze danych w tym przypadku jest widoczny, jednak nie uwzględniłeś (może przeoczyłem) przypadku większej bazy &#8211; gdzie tabele powiązane (np. posty, obrazy&#8230;) muszą mieć kolumnę klucza zewnętrznego z tekstowym identyfikatorem. Na twoim przykładzie widać, że jest to 100MB różnicy. Przy 20 tabelach daje to 2GB, a więc zysk w takim przypadku byłby iluzją.<br />
Pozdrawiam</p>
	</li>
		
		
			
<li class="mycomment" id="comment-40255" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-40255" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 11, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Dawid:<br />
W przypadku większej bazy te 2GB nie mają znaczenia. To jest podstawowy problem gdy wyciąga się argument ilości danych. Jak masz większą bazę, to i pojedynczy rekord w tabeli jest większy i rekordów jest więcej. Więc &#8211; w liczbach bezwzglednych &#8211; wzrost wielkości bazy jest większy, ale procentowo &#8211; dużo mniejszy.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2455" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="0fdf788a88" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="116"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">339 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">314 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">272 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">212 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">160 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">153 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">137 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">134 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">133 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">107 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

