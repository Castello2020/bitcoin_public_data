http://www.depesz.com/2007/07/05/how-to-insert-data-to-database-as-fast-as-possible/
HTTP/1.1 200 OK
Server: nginx
Date: Wed, 23 Jul 2014 19:24:14 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=1068>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; how to insert data to database &#8211; as fast as possible</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; how to insert data to database &#8211; as fast as possible Comments Feed" href="http://www.depesz.com/2007/07/05/how-to-insert-data-to-database-as-fast-as-possible/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2007/07/05/how-to-insert-data-to-database-as-fast-as-possible/' />
<link rel='shortlink' href='http://www.depesz.com/?p=1068' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-1068">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2007/07/05/how-to-insert-data-to-database-as-fast-as-possible/" rel="bookmark" title="Permanent Link to how to insert data to database &#8211; as fast as possible">how to insert data to database &#8211; as fast as possible</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>July 5th, 2007 by depesz | Tags: <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a> |  <a href="http://www.depesz.com/2007/07/05/how-to-insert-data-to-database-as-fast-as-possible/#comments" title="Comment on how to insert data to database &#8211; as fast as possible">6 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>some time ago i wrote a <a href="http://www.depesz.com/index.php/2006/12/09/nowosci-w-postgresie-82-values/">piece</a> on values(),() in postgresql 8.2, saying that multi-row inserts are very fast.</p>
<p>some people said that my benchmark is pretty useless as i didn't take into consideration transactions.</p>
<p>others asked me to translate the text to english.</p>
<p>so i decided to redo the test, with more test scenarios, and write it up in english. this is the summary.</p>
<p>at first what i used, what i tested and how.</p>
<p>i used a linux machine, with these things inside:</p>
<ul>
<li>cpu: AMD Sempron(tm) Processor 2600+ (1.6ghz)</li>
<li>memory: 3gb</li>
<li>discs: 4 250gb hitachi sata discs (only one was used)</li>
</ul>
<p>i tried to make the machine as predictable as possible, thus i stopped all daemons which were not neccessary. full ps auxwwf output is provided in results tar file.  basically &#8211; there is postgresql, sshd, openvpn, dhclient and some gettys. no cron, atd, smtpd, httpd or anything like this.</p>
<p>then i wrote a small <a href="http://www.depesz.com/wp-content/uploads/2007/07/pgsql-inserts-test/runme.pl">program</a> which generated test files. i do not distribute test files themselves, as in total they use nearly 70gb!</p>
<p>then i wrote another small <a href="http://www.depesz.com/wp-content/uploads/2007/07/pgsql-inserts-test/run.tests.sh">program</a> &#8211; which basically ran all of the tests (3 times to get an average).</p>
<p>full set of results is <a href="http://www.depesz.com/wp-content/uploads/2007/07/pgsql-inserts-test/output.tar.bz2">downloadable</a> as tar file, which contains 10598 files (tar file is 350k, unpacked directory takes 42megs).</p>
<p>one very important notice. all tests that i have performed inserted random data to table of this structure:</p>
<ul>
<li>id int4 primary key,</li>
<li>some_text text,</li>
<li>bool_1 bool,</li>
<li>bool_2 bool,</li>
<li>some_date date,</li>
<li>some_timestamp timestamp</li>
</ul>
<p>so results (especially &#8220;break-points" where there is no further gain) will be different when inserting to another tables. the only point of this benchmark is to show which approach can give which results. and what's really worth the trouble <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p><span id="more-1068"></span> to have some perspective, i did test of fastest way that is available in standard postgresql &#8211; copy, and the slowest one &#8211; a lot of single-row inserts, without transactions, without preparing.</p>
<p>copy'ing the data took:</p>
<ul>
<li>17.02 second</li>
<li>1451 cpu in user mode</li>
<li>191 cpu in system mode</li>
<li>20.67 cpu in iowait</li>
</ul>
<p>(cpu units are &#8220;USER_HZ" as described in filesystems/proc.txt.gz file in linux kernel documentation).</p>
<p>simple inserts took:</p>
<ul>
<li>622.66 seconds</li>
<li>43208 cpu in user mode</li>
<li>14175 cpu in system mode</li>
<li>64.33 cpu in iowait</li>
</ul>
<p>whoat. that's quite a difference <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  copy time is about 2% of inserts time. i wonder how close to these 2% we can get with different inserts.</p>
<p>so, let's see how things will be better if i would use transactions.</p>
<p><a href="http://www.depesz.com/wp-content/uploads/2007/07/inserts-time.png" title="inserts-time.png"><img src="http://www.depesz.com/wp-content/uploads/2007/07/inserts-time.png" alt="inserts-time.png" /></a></p>
<p>as we can see, using transactions speeds things up to around 425-430 seconds. this gives about 32% boost. how about cpu usage?</p>
<p><a href="http://www.depesz.com/wp-content/uploads/2007/07/inserts-percentage.png" title="inserts-percentage.png"><img src="http://www.depesz.com/wp-content/uploads/2007/07/inserts-percentage.png" alt="inserts-percentage.png" /></a></p>
<p>from the graph i can deduce that iowaits are somehow random, so i will not show them in next charts (after all, all that i'm really interested in total time).</p>
<p>biggest gain is showed in system cpu usage. reasons? i have some theories, but none is bases on hard facts <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>anyway &#8211; it seems that the serious gains are given by putting 25 inserts in transaction. above this &#8211; there still some gains, but not really noticeable.</p>
<p>ok, so now let's check if prepare'ing the insert statements will bring any good.</p>
<p><a href="http://www.depesz.com/wp-content/uploads/2007/07/prepared-inserts-time.png" title="prepared-inserts-time.png"><img src="http://www.depesz.com/wp-content/uploads/2007/07/prepared-inserts-time.png" alt="prepared-inserts-time.png" /></a></p>
<p>it's definitely faster. let's look at the speedups:</p>
<p><a href="http://www.depesz.com/wp-content/uploads/2007/07/prepared-inserts-percentage.png" title="prepared-inserts-percentage.png"><img src="http://www.depesz.com/wp-content/uploads/2007/07/prepared-inserts-percentage.png" alt="prepared-inserts-percentage.png" /></a></p>
<p>(percentage is against simplest inserts, no prepare, no transactions).</p>
<p>as it can be seen, adding prepare shaves some time and some cpu usage, so it's clearly good idea. using prepare and inserts we can get the time down to about 60% of original. which isn't too bad.</p>
<p>the last thing that can be done is making the inserts insert more rows in one call.</p>
<p>since we know that prepare'ing is good, i will show results only for prepared statements.</p>
<p><a href="http://www.depesz.com/wp-content/uploads/2007/07/multi-inserts-1.png" title="multi-inserts-1.png"><img src="http://www.depesz.com/wp-content/uploads/2007/07/multi-inserts-1.png" alt="multi-inserts-1.png" /></a></p>
<p>different lines show different number of rows inserted by single statement.</p>
<p>this image shows (i hope it does) that (just like with simple inserts) transaction bonus lasts only for some time &#8211; at most 25 statements per transaction.</p>
<p>and what about the point when there is no further benefit from adding additional rows to a single statement?</p>
<p><a href="http://www.depesz.com/wp-content/uploads/2007/07/multi-inserts-2.png" title="multi-inserts-2.png"><img src="http://www.depesz.com/wp-content/uploads/2007/07/multi-inserts-2.png" alt="multi-inserts-2.png" /></a></p>
<p>different lines show different number of statement per transaction.</p>
<p>with multi-rows per insert there is no clear &#8220;end of speedup". at least not in this test.</p>
<p>so, let's have a summary.</p>
<ul>
<li>copy did the job in 17.02 seconds</li>
<li>simplest possible inserts did it in 622.66 seconds</li>
<li>best-possible way of grouping inserts in transactions was 80 inserts per transactions, and it used 426.81 seconds</li>
<li>prepared inserts in autocommit mode did the job in 545.23 seconds</li>
<li>best-possible way of grouping prepared inserts in transactions &#8211; also 80 inserts per transaction, used 348.38 seconds.</li>
<li>simplest multi-row inserts (5 rows per insert, no prepared statement, autocommit) did the job in 164 seconds</li>
<li>best possible way of inserting with multiple rows was using 100 rows per statement, 100 statements per transaction, using prepared statements &#8211; it did it's work in 37.73 seconds.</li>
<li>best possible multi-row insert without transactions or prepared statements &#8211; 100 rows per statement. time used &#8211; 42.07 second!</li>
</ul>
<p>so, if you want to insert data as fast as possible &#8211; use copy (or better yet &#8211; <a href="http://pgbulkload.projects.postgresql.org/">pgbulkload</a>). if for whatever reason you can't use copy, then use multi-row inserts (new in 8.2!). then if you can, bundle them in transactions, and use prepared transactions, but generally &#8211; they don't give you much.</p>
<p>all other data &#8211; please take a look at a <a href="http://www.depesz.com/wp-content/uploads/2007/07/pgsql-inserts-test/inserts.speed.test.results.ods">spreadsheet</a> (openoffice format, 42k size) with results.</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">6 comments <a href='http://www.depesz.com/2007/07/05/how-to-insert-data-to-database-as-fast-as-possible/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-19294" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-19294" title="">#</a></span> <a href='http://lotso.livejournal.com' rel='external nofollow' class='url'>lotso</a></div>  <div class="date">Aug 12, 2007</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/3f06d84ccf2abeb6a438c44ff2e98f50?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>This is really very interesting. Even more interesting is your comment about checking out pgbulkload. Will there be any chance that you will look into that  performance based on your current dataset?</p>
<p>In addition to that, just wondering if the copy would be slowed down considerably by having a large index or PK or Fk etc?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-19304" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-19304" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Aug 12, 2007</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@lotso:<br />
maybe i&#8217;ll do more tests in some time (depending on free time).<br />
on the other hand &#8211; you can try it yourself &#8211; all programs used by me are downloadable, so you get get them, modify to test what you need, and then run the test on your machine.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-25350" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-25350" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Mar 10, 2008</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>ads asked me to provide a bit more info.</p>
<p>import consisted of 1 million rows.<br />
all fields of all rows were filled.</p>
<p>some_text field was filled with alphanumerics, random string, with length from 5 to 20 characters (uniform distribution).</p>
<p>it makes average row contain:</p>
<p>- id: 4 bytes<br />
- some_text: average 16 bytes<br />
- bool_1: 1 byte<br />
- bool_2: 1 byte<br />
- some_date: 4 bytes<br />
- some_timestamp: 8 bytes</p>
<p>plus some postgresql internal fields.</p>
	</li>
		
		
			
<li class="odd" id="comment-34705" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34705" title="">#</a></span> Simon Kempster</div>  <div class="date">Dec 21, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>I&#8217;ve only just recently found this article and implemented the techniques described in it.  I have to say that I&#8217;m absolutely amazed at the speed increase that has been achieved.  Fantastic work, thanks!</p>
	</li>
		
		
				
<li class="odd" id="comment-36239" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36239" title="">#</a></span> <a href='http://www.joelonsql.com' rel='external nofollow' class='url'>Joel Jacobson</a></div>  <div class="date">Sep 25, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/4ad2f4c966a16020b0c5dee627718b78?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Despite the age of this article (2012-2007=5 years), it has been certified by David Fetter as being &#8220;Still Valid &#8482;&#8221;. Date of next inspection: 2017-09-25</p>
	</li>
		
		
		
	</ol>
	
	

	<ol class="bob">

	<li style="background:transparent;padding-left:0;"><h2>1 Trackback(s)</h2></li>
	

	<li id="comment-36110">
		Aug 13, 2012: <a href='http://www.dbforums.com/postgresql/1684083-multiple-insert-bulk-insert-into-partially-loaded-database.html#post6564288' rel='external nofollow' class='url'>Multiple Insert or Bulk insert into a partially loaded database - dBforums</a>			</li>
	
		

	</ol>

	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="1068" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="d8961b8ba5" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="120"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">604 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">375 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">284 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">220 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">170 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">153 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">137 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">135 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/11/14/how-i-learned-to-stop-worrying-and-love-the-triggers/" title="How I Learned to Stop Worrying and Love the Triggers" class="wpp-post-title" target="_self">How I Learned to Stop Worrying and Love the Triggers</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">107 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

