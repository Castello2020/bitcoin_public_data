http://www.depesz.com/2013/12/06/what-does-fix-vacuums-tests-to-see-whether-it-can-update-relfrozenxid-really-mean/
HTTP/1.1 200 OK
Server: nginx
Date: Wed, 23 Jul 2014 07:47:21 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2775>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; What does &#8220;Fix VACUUM&#8217;s tests to see whether it can update relfrozenxid&#8221; really mean?</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; What does &#8220;Fix VACUUM&#8217;s tests to see whether it can update relfrozenxid&#8221; really mean? Comments Feed" href="http://www.depesz.com/2013/12/06/what-does-fix-vacuums-tests-to-see-whether-it-can-update-relfrozenxid-really-mean/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2013/12/06/what-does-fix-vacuums-tests-to-see-whether-it-can-update-relfrozenxid-really-mean/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2775' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2775">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2013/12/06/what-does-fix-vacuums-tests-to-see-whether-it-can-update-relfrozenxid-really-mean/" rel="bookmark" title="Permanent Link to What does &#8220;Fix VACUUM&#8217;s tests to see whether it can update relfrozenxid&#8221; really mean?">What does &#8220;Fix VACUUM&#8217;s tests to see whether it can update relfrozenxid&#8221; really mean?</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>December 6th, 2013 by depesz | Tags: <a href="http://www.depesz.com/tag/bug/" rel="tag">bug</a>, <a href="http://www.depesz.com/tag/freeze/" rel="tag">freeze</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/relfrozenxid/" rel="tag">relfrozenxid</a>, <a href="http://www.depesz.com/tag/vacuum/" rel="tag">vacuum</a>, <a href="http://www.depesz.com/tag/violation/" rel="tag">violation</a>, <a href="http://www.depesz.com/tag/xid/" rel="tag">xid</a> |  <a href="http://www.depesz.com/2013/12/06/what-does-fix-vacuums-tests-to-see-whether-it-can-update-relfrozenxid-really-mean/#comments" title="Comment on What does &#8220;Fix VACUUM&#8217;s tests to see whether it can update relfrozenxid&#8221; really mean?">17 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>In release notes to latest release you can find:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">Fix VACUUM's tests to see whether it can update relfrozenxid (Andres Freund)
&nbsp;
In some cases VACUUM (either manual or autovacuum) could incorrectly advance
a table's relfrozenxid value, allowing tuples to escape freezing, causing
those rows to become invisible once 2^31 transactions have elapsed. The
probability of data loss is fairly low since multiple incorrect advancements
would need to happen before actual loss occurs, but it's not zero. In 9.2.0
and later, the probability of loss is higher, and it's also possible to get
&quot;could not access status of transaction&quot; errors as a consequence of this
bug. Users upgrading from releases 9.0.4 or 8.4.8 or earlier are not
affected, but all later versions contain the bug.
&nbsp;
The issue can be ameliorated by, after upgrading, vacuuming all tables in
all databases while having vacuum_freeze_table_age set to zero. This will
fix any latent corruption but will not be able to fix all pre-existing data
errors. However, an installation can be presumed safe after performing this
vacuuming if it has executed fewer than 2^31 update transactions in its
lifetime (check this with SELECT txid_current() &lt; 2^31).</pre></td></tr></table></div>

<p>What does it really mean?</p>
<p><span id="more-2775"></span></p>
<p>Before I can explain the bug, let me explain what xid is, and how does that matter.</p>
<p>Every (well, technically not every, but let's ignore it for now) transaction in PostgreSQL has it's own number. For example 123.</p>
<p>For reason that will be explained in a moment, these numbers start from 3.</p>
<p>And what about the numbers?</p>
<p>Every row, in every table, has (aside from other data) 2 xid values &#8211; xmin and xmax. Normally you can't see them:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test;
 a <span style="color: #66cc66;">|</span> b 
<span style="color: #808080; font-style: italic;">---+---</span>
 <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">3</span>
 <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4</span>
 <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">5</span>
 <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">6</span>
 <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">7</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>But if you know their names, you can force pg to show them:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> xmin<span style="color: #66cc66;">,</span> xmax<span style="color: #66cc66;">,</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test;
 xmin <span style="color: #66cc66;">|</span> xmax <span style="color: #66cc66;">|</span> a <span style="color: #66cc66;">|</span> b 
<span style="color: #808080; font-style: italic;">------+------+---+---</span>
  <span style="color: #cc66cc;">877</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">3</span>
  <span style="color: #cc66cc;">877</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4</span>
  <span style="color: #cc66cc;">877</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">5</span>
  <span style="color: #cc66cc;">877</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">6</span>
  <span style="color: #cc66cc;">877</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">7</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>The values above mean that row was inserted in transaction 877 (so it will be visible to transactions 877, 878, 879 and all later). Xmax value of 0 means that the row has not been deleted.</p>
<p>If the row would be deleted, it's data in table would contain some non-zero value in xmax column. But, if you'd use transaction that was created before the row was deleted, you could still see it.</p>
<p>So &#8211; whether the row is visible (which basically means: whether it exists) is all depending on these two numbers.</p>
<p>Now. As you might noticed, when row is deleted (or updated, as update is, on file level, treated as delete + insert), it is actually left there, with some xmax value.</p>
<p>I hope that so far it's all clear.</p>
<p>Now, here comes VACUUM. When vacuum runs, and it sees deleted row (one that has xmax that is not 0), it (vacuum) checks if there are any transactions running that are older than the xmax (so they should still see the row). If there are, nothing is done as the row might still be needed.</p>
<p>But if there aren't any such transactions &#8211; the row is cleaned, and both xmin/xmax are set to NULL. Thanks to this the place that the row occupied can be reused for another row, inserted in the future.</p>
<p>It all is fun, and cool, until you'll consider one thing. XID is only 32 bit. It's unsigned, but it's 32bit. This means that we have ~ 4 billion possible xids &#8211; from 0 to 4,294,967,295. What would happen then?</p>
<p>Luckily Pg doesn't break when you hit 4 billion rows. It just wraps, and restarts xid numbering from lowest possible (3, as I mentioned earlier).</p>
<p>This means &#8211; OK. But if I had some row inserted in transaction &#8220;4&#8243; and not removed later. Xid wrapped, I'm now in transaction 3. What happens? If I'm just looking at the xids &#8211; I shouldn't see the row, as the insert is in the future?</p>
<p>Xid being in the future is pretty normal situation &#8211; it happens if you have long transaction running, and some other inserted row during your long one. Xid of inserted row will be &#8220;in the future" for your long running transaction.</p>
<p>Anyway. So, what can Pg do about it?</p>
<p>It's actually pretty simple. Every so often vacuum finds rows that are old (i.e. inserted long time ago, and the xid is older than all other transactions currently in the system). And then vacuum changes xid to special value &#8211; 2.</p>
<p>This means &#8211; this row is Frozen. Frozen means &#8211; it's older than anything else in the system, and (since it's xmax is 0) not deleted, so it's visible to all transactions. Even after 10000 wraps of xids &#8211; the row will still be visible.</p>
<p>To prevent the problem with &#8220;wrapped xid, and now inserted rows seem to be in the future" &#8211; all old rows in the system have to be frozen before <em>half</em> of xid range will pass from their creation.</p>
<p>To remind &#8211; full range of xid is 2^32, so half of it is 2^31, which is more or less 2 billion. This means that if you inserted row with xid = 100, you have 2 billion transactions to freeze it.</p>
<p>Freezing, as I said, is done by vacuum. It's one of the things vacuum does.</p>
<p>And as such, it should be relatively fast. Scanning entire table to find rows that can be frozen is not the best idea &#8211; as it would be slow. Luckily Pg has pretty cool way to speed things up.</p>
<p>Whenever it freezes rows, it remembers newest xid that was frozen &#8211; i.e. if it is sure that there are no more rows with xmin earlier than &#8220;x", it saves this &#8220;x" value in relfrozenxid in pg_class table.</p>
<p>So, the value of relfrozenxid is simple information: in the table there are no <em>unfrozen</em> rows from transactions earlier than relfrozenxid.</p>
<p>I hope you follow.</p>
<p>So, with everything running correctly, at any point in time, we can be sure that all rows in the table are either:</p>
<ul>
<li>xmin = 2 (frozen)</li>
<li>xmin is between relfrozenxid and current xid</li>
</ul>
<p>The &#8220;between" is a bit problematic since xid wraps, but assuming we have current xid = 100, relfrozenxid = 4,000,000,000, we know it's after wrap, and all rows should have xmin (and xmax in case of removed rows) >= 4,000,000,000 or <= 100.</p>
<p>The bug that was found in pg broke this premise.</p>
<p>It was possible for some rows to <em>not</em> be freezed, but relfrozenxid was still progressed.</p>
<p>And since, it did progress, no further vacuum would freeze this missed rows, since it wouldn't even know to look for them. After all &#8211; if you know that you should freeze rows with xid from 50 to 100, you don't look for rows with xid = 45.</p>
<p>What is the immediate problem? Well, none.</p>
<p>All visibility checks will still work fine, without problem. After all &#8211; 45 is still older than current transaction, so it will be visible.</p>
<p>But what happens when we'll go 2^31 (half of xid range) to the future? Suddenly the very old value becomes very distant in the future (generally at any given time, 2^31 xids before current are treated as past, and 2^31 xids ahead of current are treated as future).</p>
<p>This can mean couple of things. Let me show you, but to keep the example simple let's assume we have just 100 xids. 0, 1, 2 are still restricted, and after xid 100 we're going back to 3.</p>
<p>Now, let's assume we have some rows in a table with these values:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"> xmin <span style="color: #66cc66;">|</span> xmax <span style="color: #66cc66;">|</span> row<span style="color: #66cc66;">-</span><span style="color: #993333; font-weight: bold;">data</span>
 <span style="color: #cc66cc;">3</span>    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>    <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">row</span> a
 <span style="color: #cc66cc;">3</span>    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">20</span>   <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">row</span> b
 <span style="color: #cc66cc;">2</span>    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>    <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">row</span> c
 <span style="color: #cc66cc;">2</span>    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">15</span>   <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">row</span> d</pre></td></tr></table></div>

<p>When we are at transaction 30, Pg assumes that:</p>
<ul>
<li>transactions with xid => 80 or < 30 are in the past</li>
<li>transactions with xid >31 and < 80 are in the future</li>
</ul>
<p>So it will see &#8220;row a" and &#8220;row c" &#8211; since the other two have been deleted in xids 20 and 15.</p>
<p>Now, let's move forward to transaction 60. Now, Pg assumes that:</p>
<ul>
<li>transactions with xid => 10 and < 60 are in the past</li>
<li>transactions with xid >61 or < 10 are in the future</li>
</ul>
<p>And this means that we have situation that currently, we'll see only the &#8220;row c" (which is correctly frozen, so always visible).</p>
<p>&#8220;row a", which should be visible has xmin = 3, which is in the future. So it will become re-visible in 41 transactions.</p>
<p>Interesting thing is that if we'll continue forwards, and wrap, and go to transaction &#8220;7&#8243; &#8211; we'll see all four rows &#8211; since they will get deleted &#8220;in the future".</p>
<p>So, depending on what are the values of xmin/xmax, you might lose visibility of the normally visible row, or you might start to see rows that shouldn't be visible. That doesn't look good.</p>
<p>Fortunately, the bug is (afaik) not very problematic &#8211; the chances of being bitten are there, but just not all that good.</p>
<p>The thing is &#8211; how do you know if you're &#8220;bitten"? If you read, and understood, above, but do not fully grasp how pg works &#8211; you can say: &#8220;that's trivial. Let's just fetch all rows, and compare xmin/xmax with relfrozenxid and current xid, and you're done".</p>
<p>Well, it's not all that simple. The problem is that from SQL level you can't really select rows that are not visible to you. So while you might be lucky enough to find some rows that have xmin before relfrozenxid, if the row has been deleted, or the 2^31 transactions already passed &#8211; you will not see some of the &#8220;damaged" rows, because visibility rules will forbid you from seeing them. </p>
<p>Luckily there is PostgreSQL extension that gives you low-level access to table (and index) pages. It's called pageinspect. You can, using it, get information of all rows in any given page of relation. Like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> heap_page_items<span style="color: #66cc66;">&#40;</span>get_raw_page<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'test'</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
 lp <span style="color: #66cc66;">|</span> lp_off <span style="color: #66cc66;">|</span> lp_flags <span style="color: #66cc66;">|</span> lp_len <span style="color: #66cc66;">|</span> t_xmin <span style="color: #66cc66;">|</span> t_xmax <span style="color: #66cc66;">|</span> t_field3 <span style="color: #66cc66;">|</span> t_ctid <span style="color: #66cc66;">|</span> t_infomask2 <span style="color: #66cc66;">|</span> t_infomask <span style="color: #66cc66;">|</span> t_hoff <span style="color: #66cc66;">|</span> t_bits <span style="color: #66cc66;">|</span> t_oid  
<span style="color: #808080; font-style: italic;">----+--------+----------+--------+--------+--------+----------+--------+-------------+------------+--------+--------+--------</span>
  <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">8160</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">32</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>  <span style="color: #66cc66;">|</span>           <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">2304</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">24</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
  <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">8128</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">32</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#41;</span>  <span style="color: #66cc66;">|</span>           <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">2304</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">24</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
  <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">8032</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">32</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">879</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#41;</span>  <span style="color: #66cc66;">|</span>           <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">2304</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">24</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
  <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">8096</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">32</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#41;</span>  <span style="color: #66cc66;">|</span>           <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">2304</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">24</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
  <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">8064</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">32</span> <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>    <span style="color: #cc66cc;">880</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">5</span><span style="color: #66cc66;">&#41;</span>  <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">8194</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">256</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">24</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>This shows, that there are 5 rows in the page. One of them was removed in transaction 880 (lp = 5). Four rows were frozen to xid = 2, and one of them was not frozen &#8211; either due to bug, or (in this case) simply because there is no point in freezing one row immediately after it got inserted. You might notice that the content of the row is nowhere to be found, but we can get to the rows using ctid. For example:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> ctid <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'(0,3)'</span>;
 a <span style="color: #66cc66;">|</span> b 
<span style="color: #808080; font-style: italic;">---+---</span>
 <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>This will not show me row from &#8216;(0,5)':</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> ctid <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'(0,5)'</span>;
 a <span style="color: #66cc66;">|</span> b 
<span style="color: #808080; font-style: italic;">---+---</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>And that's because xmin/xmax rules forbid me from seeing it.</p>
<p>Anyway &#8211; pageinspect lets me see all rows in every page of the table, so I can check xmin/xmax now.</p>
<p>Doing it, proved to be more complicated than I assumed. I wrote a function. And tested it. And it kept having errors. Finally, I think I have it done. Finally split the code to two functions:</p>
<p>(<a href="/wp-content/uploads/2013/12/freeze-validation-function1.sql">you can also download it here</a>)</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">OR</span> <span style="color: #993333; font-weight: bold;">REPLACE</span> <span style="color: #993333; font-weight: bold;">FUNCTION</span> xmin_xmax_status <span style="color: #66cc66;">&#40;</span>
    <span style="color: #993333; font-weight: bold;">IN</span>   p_xmin        xid<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">IN</span>   p_xmax        xid<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">IN</span>   p_frozenxid   xid<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">IN</span>   p_currentxid  xid<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">OUT</span>  <span style="color: #993333; font-weight: bold;">status</span>        INT4
<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">RETURNS</span> INT4 <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">DECLARE</span>
    v_xmin        int8  :<span style="color: #66cc66;">=</span>  p_xmin::text::int8;
    v_xmax        int8  :<span style="color: #66cc66;">=</span>  p_xmax::text::int8;
    v_frozenxid   int8  :<span style="color: #66cc66;">=</span>  p_frozenxid::text::int8;
    v_currentxid  int8  :<span style="color: #66cc66;">=</span>  p_currentxid::text::int8;
<span style="color: #993333; font-weight: bold;">BEGIN</span>
    <span style="color: #808080; font-style: italic;">-- status = 0 (binary: 00) - all ok</span>
    <span style="color: #808080; font-style: italic;">-- status = 1 (binary: 01) - xmin bad</span>
    <span style="color: #808080; font-style: italic;">-- status = 2 (binary: 10) - xmax bad</span>
    <span style="color: #808080; font-style: italic;">-- status = 3 (binary: 11) - xmin and xmax bad</span>
    <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
    <span style="color: #993333; font-weight: bold;">IF</span> v_xmin <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">AND</span> v_xmax <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #808080; font-style: italic;">-- vacuumed, deleted, row ?</span>
        <span style="color: #993333; font-weight: bold;">RETURN</span>;
    <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">IF</span> v_xmin <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">,</span>v_frozenxid<span style="color: #66cc66;">,</span>v_currentxid<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #808080; font-style: italic;">-- correct values</span>
    ELSIF v_xmin <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span> <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1</span>;
    ELSIF v_frozenxid <span style="color: #66cc66;">&lt;=</span> v_currentxid <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #993333; font-weight: bold;">IF</span> v_xmin <span style="color: #993333; font-weight: bold;">between</span> v_frozenxid <span style="color: #993333; font-weight: bold;">AND</span> v_currentxid <span style="color: #993333; font-weight: bold;">THEN</span>
            <span style="color: #808080; font-style: italic;">-- correct value</span>
        <span style="color: #993333; font-weight: bold;">ELSE</span>
            <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1</span>;
        <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">ELSE</span>
        <span style="color: #808080; font-style: italic;">-- xid wrapped between frozenxid AND currentxid</span>
        <span style="color: #993333; font-weight: bold;">IF</span> v_xmin <span style="color: #993333; font-weight: bold;">between</span> v_currentxid <span style="color: #993333; font-weight: bold;">AND</span> v_frozenxid <span style="color: #993333; font-weight: bold;">THEN</span>
            <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1</span>;
        <span style="color: #993333; font-weight: bold;">ELSE</span>
            <span style="color: #808080; font-style: italic;">-- correct value</span>
        <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">IF</span> v_xmax <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span>v_frozenxid<span style="color: #66cc66;">,</span>v_currentxid<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #808080; font-style: italic;">-- correct value</span>
    ELSIF v_xmax <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">2</span> <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>;
    ELSIF v_frozenxid <span style="color: #66cc66;">&lt;=</span> v_currentxid <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #993333; font-weight: bold;">IF</span> v_xmax <span style="color: #993333; font-weight: bold;">between</span> v_frozenxid <span style="color: #993333; font-weight: bold;">AND</span> v_currentxid <span style="color: #993333; font-weight: bold;">THEN</span>
            <span style="color: #808080; font-style: italic;">-- correct value</span>
        <span style="color: #993333; font-weight: bold;">ELSE</span>
            <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>;
        <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">ELSE</span>
        <span style="color: #808080; font-style: italic;">-- xid wrapped between frozenxid AND currentxid</span>
        <span style="color: #993333; font-weight: bold;">IF</span> v_xmax <span style="color: #993333; font-weight: bold;">between</span> v_currentxid <span style="color: #993333; font-weight: bold;">AND</span> v_frozenxid <span style="color: #993333; font-weight: bold;">THEN</span>
            <span style="color: #993333; font-weight: bold;">status</span> :<span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">status</span> <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>;
        <span style="color: #993333; font-weight: bold;">ELSE</span>
            <span style="color: #808080; font-style: italic;">-- correct value</span>
        <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
    <span style="color: #993333; font-weight: bold;">RETURN</span>;
<span style="color: #993333; font-weight: bold;">END</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> plpgsql;</pre></td></tr></table></div>

<p>That's the main logic function &#8211; it checks if given xmin/xmax values make sense when we consider (also given) relfrozenxid, and current xid number.</p>
<p>Then there is the looping function:</p>
<p>(<a href="/wp-content/uploads/2013/12/freeze-validation-function2.sql">you can also download it here</a>)</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">OR</span> <span style="color: #993333; font-weight: bold;">replace</span> <span style="color: #993333; font-weight: bold;">function</span> test_correct_relfrozenxid<span style="color: #66cc66;">&#40;</span>
    <span style="color: #993333; font-weight: bold;">IN</span>   p_table        regclass<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">IN</span>   p_results      TEXT   <span style="color: #993333; font-weight: bold;">DEFAULT</span>  <span style="color: #993333; font-weight: bold;">NULL</span><span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">OUT</span>  <span style="color: #993333; font-weight: bold;">table_name</span>     TEXT<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">OUT</span>  scanned_pages  INT8<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">OUT</span>  bad_pages      INT8<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">OUT</span>  scanned_rows   INT8<span style="color: #66cc66;">,</span>
    <span style="color: #993333; font-weight: bold;">OUT</span>  bad_rows       INT8
<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">RETURNS</span> record <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">DECLARE</span>
    r_class        record;
    page_no        INT4;
    temprec        record;
    max_age        INT4;
    v_current_xid  xid;
<span style="color: #993333; font-weight: bold;">BEGIN</span>
&nbsp;
    <span style="color: #808080; font-style: italic;">-- verify that results table exists, if we should use it</span>
    <span style="color: #993333; font-weight: bold;">IF</span> p_results <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">THEN</span>
        <span style="color: #993333; font-weight: bold;">BEGIN</span>
            <span style="color: #993333; font-weight: bold;">SELECT</span> oid <span style="color: #993333; font-weight: bold;">INTO</span> temprec <span style="color: #993333; font-weight: bold;">FROM</span> pg_class <span style="color: #993333; font-weight: bold;">WHERE</span> oid <span style="color: #66cc66;">=</span> p_results::regclass;
        EXCEPTION <span style="color: #993333; font-weight: bold;">WHEN</span> undefined_table <span style="color: #993333; font-weight: bold;">THEN</span>
            <span style="color: #993333; font-weight: bold;">execute</span> <span style="color: #ff0000;">'CREATE TABLE '</span> <span style="color: #66cc66;">||</span> p_results <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">' as
                SELECT '</span><span style="color: #ff0000;">'pg_class'</span><span style="color: #ff0000;">'::regclass as table_name, 0::INT8 as page_no, '</span><span style="color: #ff0000;">'0'</span><span style="color: #ff0000;">'::xid as relfrozenxid, '</span><span style="color: #ff0000;">'0'</span><span style="color: #ff0000;">'::xid as current_xid, i.*, 0::INT4 as check_status, h.*
                FROM heap_page_items(get_raw_page('</span><span style="color: #ff0000;">'pg_catalog.pg_class'</span><span style="color: #ff0000;">', 0)) as i,
                page_header(get_raw_page('</span><span style="color: #ff0000;">'pg_catalog.pg_class'</span><span style="color: #ff0000;">', 0)) as h
                LIMIT 0'</span>;
        <span style="color: #993333; font-weight: bold;">END</span>;
    <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
&nbsp;
    <span style="color: #808080; font-style: italic;">-- get base relation data</span>
    <span style="color: #993333; font-weight: bold;">SELECT</span> n<span style="color: #66cc66;">.</span>nspname<span style="color: #66cc66;">,</span> c<span style="color: #66cc66;">.</span>relname<span style="color: #66cc66;">,</span> pg_relation_size<span style="color: #66cc66;">&#40;</span>c<span style="color: #66cc66;">.</span>oid<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">/</span> current_setting<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'block_size'</span><span style="color: #66cc66;">&#41;</span>::INT4 <span style="color: #993333; font-weight: bold;">as</span> relpages<span style="color: #66cc66;">,</span> c<span style="color: #66cc66;">.</span>relfrozenxid <span style="color: #993333; font-weight: bold;">INTO</span> r_class
        <span style="color: #993333; font-weight: bold;">FROM</span> pg_class c <span style="color: #993333; font-weight: bold;">join</span> pg_namespace n <span style="color: #993333; font-weight: bold;">on</span> c<span style="color: #66cc66;">.</span>relnamespace <span style="color: #66cc66;">=</span> n<span style="color: #66cc66;">.</span>oid
        <span style="color: #993333; font-weight: bold;">WHERE</span> c<span style="color: #66cc66;">.</span>relkind <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'r'</span> <span style="color: #993333; font-weight: bold;">AND</span> c<span style="color: #66cc66;">.</span>oid <span style="color: #66cc66;">=</span> p_table;
    <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #993333; font-weight: bold;">NOT</span> FOUND <span style="color: #993333; font-weight: bold;">THEN</span> raise exception <span style="color: #ff0000;">'No such table: %'</span><span style="color: #66cc66;">,</span> p_table; <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
&nbsp;
    <span style="color: #993333; font-weight: bold;">table_name</span> :<span style="color: #66cc66;">=</span> format<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'%I.%I'</span><span style="color: #66cc66;">,</span> r_class<span style="color: #66cc66;">.</span>nspname<span style="color: #66cc66;">,</span> r_class<span style="color: #66cc66;">.</span>relname<span style="color: #66cc66;">&#41;</span>;
&nbsp;
    <span style="color: #808080; font-style: italic;">-- 5 million is just some cutoff value to accomodate rows that are currently being inserted/updated/deleted.</span>
    <span style="color: #808080; font-style: italic;">-- this value was suggested to me BY Andres Freund, and since he originally found the bug, I tend to trust him</span>
    v_current_xid :<span style="color: #66cc66;">=</span> <span style="color: #66cc66;">&#40;</span>txid_current<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">5000000</span><span style="color: #66cc66;">&#41;</span>::TEXT::xid;
&nbsp;
    scanned_pages :<span style="color: #66cc66;">=</span> r_class<span style="color: #66cc66;">.</span>relpages;
    bad_pages :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
    scanned_rows :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
    bad_rows :<span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
&nbsp;
    <span style="color: #808080; font-style: italic;">-- Iterate over all pages of relation...</span>
    <span style="color: #993333; font-weight: bold;">for</span> page_no <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #993333; font-weight: bold;">SELECT</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">,</span> r_class<span style="color: #66cc66;">.</span>relpages <span style="color: #66cc66;">-</span> <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span> loop
&nbsp;
        <span style="color: #808080; font-style: italic;">-- check how many *bad* rows are there in this page</span>
&nbsp;
        <span style="color: #993333; font-weight: bold;">IF</span> p_results <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #993333; font-weight: bold;">NULL</span> <span style="color: #993333; font-weight: bold;">THEN</span>
            <span style="color: #808080; font-style: italic;">-- we're not collecting bad rows</span>
            <span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #993333; font-weight: bold;">count</span><span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">*</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> all_rows<span style="color: #66cc66;">,</span>
                <span style="color: #993333; font-weight: bold;">sum</span><span style="color: #66cc66;">&#40;</span>
                    <span style="color: #993333; font-weight: bold;">case</span> <span style="color: #993333; font-weight: bold;">when</span> xmin_xmax_status<span style="color: #66cc66;">&#40;</span> t_xmin<span style="color: #66cc66;">,</span> t_xmax<span style="color: #66cc66;">,</span> r_class<span style="color: #66cc66;">.</span>relfrozenxid<span style="color: #66cc66;">,</span> v_current_xid <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">0</span> <span style="color: #993333; font-weight: bold;">THEN</span> <span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">ELSE</span> <span style="color: #cc66cc;">0</span> <span style="color: #993333; font-weight: bold;">END</span>
                <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> bad_rows
                <span style="color: #993333; font-weight: bold;">INTO</span> temprec
                <span style="color: #993333; font-weight: bold;">FROM</span> heap_page_items<span style="color: #66cc66;">&#40;</span>get_raw_page<span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">table_name</span><span style="color: #66cc66;">,</span> page_no<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
        <span style="color: #993333; font-weight: bold;">ELSE</span>
            <span style="color: #808080; font-style: italic;">-- we are collecting bad rows, so we should get them, and some stats ...</span>
            <span style="color: #993333; font-weight: bold;">EXECUTE</span> <span style="color: #ff0000;">'
                with page as (
                    SELECT get_raw_page( $1, $2 ) as p
                ), all_rows_in_page as (
                    SELECT *, xmin_xmax_status( t_xmin, t_xmax, $3, $4 ) as check_status
                    FROM heap_page_items((SELECT p FROM page))
                ), insert_bad_rows as (
                    INSERT INTO '</span> <span style="color: #66cc66;">||</span> p_results <span style="color: #66cc66;">||</span> <span style="color: #ff0000;">' SELECT $1, $2, $3, $4, r.*, h.* FROM all_rows_in_page r, (SELECT page_header( p ) FROM page ) as h WHERE r.check_status &gt; 0
                )
                SELECT
                    count(*) as all_rows,
                    sum( case when check_status &gt; 0 THEN 1 ELSE 0 END) as bad_rows
                FROM all_rows_in_page
            '</span> <span style="color: #993333; font-weight: bold;">INTO</span> temprec <span style="color: #993333; font-weight: bold;">USING</span> <span style="color: #993333; font-weight: bold;">table_name</span><span style="color: #66cc66;">,</span> page_no<span style="color: #66cc66;">,</span> r_class<span style="color: #66cc66;">.</span>relfrozenxid<span style="color: #66cc66;">,</span> v_current_xid;
        <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
&nbsp;
        <span style="color: #808080; font-style: italic;">-- update statistics based on data fetched from check query above</span>
        scanned_rows :<span style="color: #66cc66;">=</span> scanned_rows <span style="color: #66cc66;">+</span> temprec<span style="color: #66cc66;">.</span>all_rows;
&nbsp;
        <span style="color: #993333; font-weight: bold;">IF</span> temprec<span style="color: #66cc66;">.</span>bad_rows <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">0</span> <span style="color: #993333; font-weight: bold;">THEN</span>
            raise notice <span style="color: #ff0000;">'Found bad rows (%) in TABLE (%) page (%)'</span><span style="color: #66cc66;">,</span> temprec<span style="color: #66cc66;">.</span>bad_rows<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">table_name</span><span style="color: #66cc66;">,</span> page_no;
            bad_rows  :<span style="color: #66cc66;">=</span> bad_rows <span style="color: #66cc66;">+</span> temprec<span style="color: #66cc66;">.</span>bad_rows;
            bad_pages :<span style="color: #66cc66;">=</span> bad_pages <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span>;
        <span style="color: #993333; font-weight: bold;">END</span> <span style="color: #993333; font-weight: bold;">IF</span>;
&nbsp;
    <span style="color: #993333; font-weight: bold;">END</span> LOOP;
    <span style="color: #993333; font-weight: bold;">RETURN</span>;
<span style="color: #993333; font-weight: bold;">END</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> plpgsql;</pre></td></tr></table></div>

<p>How do you use it?</p>
<p>For starters you can:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_correct_relfrozenxid<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'pg_class'</span> <span style="color: #66cc66;">&#41;</span>;
     <span style="color: #993333; font-weight: bold;">table_name</span>      <span style="color: #66cc66;">|</span> scanned_pages <span style="color: #66cc66;">|</span> bad_pages <span style="color: #66cc66;">|</span> scanned_rows <span style="color: #66cc66;">|</span> bad_rows 
<span style="color: #808080; font-style: italic;">---------------------+---------------+-----------+--------------+----------</span>
 pg_catalog<span style="color: #66cc66;">.</span>pg_class <span style="color: #66cc66;">|</span>           <span style="color: #cc66cc;">310</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">15674</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">0</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>This will show you some statistics. That it scanned 310 pages. On these pages there were 15674 rows (this includes also deleted rows!). Out of which there were 0 problems.</p>
<p>In other case you might get:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_correct_relfrozenxid<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'xxxxxxxxxxxxxx'</span> <span style="color: #66cc66;">&#41;</span>;
NOTICE:  Found bad <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #66cc66;">&#40;</span>public<span style="color: #66cc66;">.</span>xxxxxxxxxxxxxx<span style="color: #66cc66;">&#41;</span> page <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">19</span><span style="color: #66cc66;">&#41;</span>
NOTICE:  Found bad <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #66cc66;">&#40;</span>public<span style="color: #66cc66;">.</span>xxxxxxxxxxxxxx<span style="color: #66cc66;">&#41;</span> page <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">42</span><span style="color: #66cc66;">&#41;</span>
      <span style="color: #993333; font-weight: bold;">table_name</span>       <span style="color: #66cc66;">|</span> scanned_pages <span style="color: #66cc66;">|</span> bad_pages <span style="color: #66cc66;">|</span> scanned_rows <span style="color: #66cc66;">|</span> bad_rows 
<span style="color: #808080; font-style: italic;">-----------------------+---------------+-----------+--------------+----------</span>
 public<span style="color: #66cc66;">.</span>xxxxxxxxxxxxxx <span style="color: #66cc66;">|</span>            <span style="color: #cc66cc;">50</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">6986</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">2</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>In here, we see some problems.</p>
<p>Alternatively, I can supply second argument to the test_correct_relfrozenxid() function &#8211; it is name of a table to store bad row info:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ \d xxx
Did <span style="color: #993333; font-weight: bold;">not</span> find any relation named <span style="color: #ff0000;">&quot;xxx&quot;</span><span style="color: #66cc66;">.</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test_correct_relfrozenxid<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'xxxxxxxxxxxxxx'</span><span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'xxx'</span> <span style="color: #66cc66;">&#41;</span>;
NOTICE:  Found bad <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #66cc66;">&#40;</span>public<span style="color: #66cc66;">.</span>xxxxxxxxxxxxxx<span style="color: #66cc66;">&#41;</span> page <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">19</span><span style="color: #66cc66;">&#41;</span>
NOTICE:  Found bad <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">in</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #66cc66;">&#40;</span>public<span style="color: #66cc66;">.</span>xxxxxxxxxxxxxx<span style="color: #66cc66;">&#41;</span> page <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">42</span><span style="color: #66cc66;">&#41;</span>
      <span style="color: #993333; font-weight: bold;">table_name</span>       <span style="color: #66cc66;">|</span> scanned_pages <span style="color: #66cc66;">|</span> bad_pages <span style="color: #66cc66;">|</span> scanned_rows <span style="color: #66cc66;">|</span> bad_rows 
<span style="color: #808080; font-style: italic;">-----------------------+---------------+-----------+--------------+----------</span>
 public<span style="color: #66cc66;">.</span>xxxxxxxxxxxxxx <span style="color: #66cc66;">|</span>            <span style="color: #cc66cc;">50</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">6986</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">2</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> xxx;
<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#91;</span> RECORD <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">+</span><span style="color: #808080; font-style: italic;">-------------------------------------------------------------------------</span>
<span style="color: #993333; font-weight: bold;">table_name</span>   <span style="color: #66cc66;">|</span> xxxxxxxxxxxxxx
page_no      <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">19</span>
relfrozenxid <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">178398715</span>
current_xid  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">233400263</span>
lp           <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">139</span>
lp_off       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">3968</span>
lp_flags     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1</span>
lp_len       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">77</span>
t_xmin       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
t_xmax       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">10853873</span>
t_field3     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
t_ctid       <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">19</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">139</span><span style="color: #66cc66;">&#41;</span>
t_infomask2  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">11</span>
t_infomask   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">6529</span>
t_hoff       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">32</span>
t_bits       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">110011110010000000000000000000000000000000000000000000000000000000000000</span>
t_oid        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
check_status <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
lsn          <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span>2CBE<span style="color: #66cc66;">/</span>EF092CA8<span style="color: #66cc66;">,</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">5</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">664</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">760</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">8192</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">8192</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>
tli          <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
flags        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #993333; font-weight: bold;">lower</span>        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #993333; font-weight: bold;">upper</span>        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
special      <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
pagesize     <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
version      <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
prune_xid    <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#91;</span> RECORD <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">+</span><span style="color: #808080; font-style: italic;">-------------------------------------------------------------------------</span>
<span style="color: #993333; font-weight: bold;">table_name</span>   <span style="color: #66cc66;">|</span> xxxxxxxxxxxxxx
page_no      <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">42</span>
relfrozenxid <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">178398715</span>
current_xid  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">233400263</span>
lp           <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">33</span>
lp_off       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">5504</span>
lp_flags     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1</span>
lp_len       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">77</span>
t_xmin       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
t_xmax       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">9255167</span>
t_field3     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
t_ctid       <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">42</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">33</span><span style="color: #66cc66;">&#41;</span>
t_infomask2  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">11</span>
t_infomask   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">6529</span>
t_hoff       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">32</span>
t_bits       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">110011110010000000000000000000000000000000000000000000000000000000000000</span>
t_oid        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
check_status <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2</span>
lsn          <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span>2CBE<span style="color: #66cc66;">/</span>EF0983B0<span style="color: #66cc66;">,</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">412</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">3664</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">8192</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">8192</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>
tli          <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
flags        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #993333; font-weight: bold;">lower</span>        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #993333; font-weight: bold;">upper</span>        <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
special      <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
pagesize     <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
version      <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>
prune_xid    <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span></pre></td></tr></table></div>

<p>The &#8220;xxx' table can be reused &#8211; if you'll run another test_correct_relfrozenxid(), it will simply add new rows to the &#8220;xxx" table. And if that wouldn't be obvious &#8211; it doesn't have to be called &#8220;xxx" &#8211; I just picked it as simple to type.</p>
<p>Anyway. Data in xxx table show name of the table, which page of the table contains the bad row. What was the relfrozenxid of the table when the check was done, what was current xid at the the of the check (well, current xid + 5 million, but that's not all that important). Then there are row_data (up to t_oid column), and afterwards there are some page header information.</p>
<p>In our case above, we can see that the two rows were deleted at some point in time (xmax = 10,853,873 and 9,255,167), and given that we're now at xid 233,400,263 &#8211; we still have quite a long way ahead before the problem will hit us (which would happen at xid 2,156,738,815), because then the xmax would &#8220;switch" to being in future, and the row would again be visible, despite the fact that it should be removed.</p>
<p>And here lies another issue. What if the transactions that removed these rows were actually *rolled back*? This would mean that now we can see it (it's testable luckily), but in some time (2^31 transactions more or less) status of the transaction will get reset, and then after some time &#8211; it might become deleted.</p>
<p>Now. About the fix. With newer Pgs (the ones released <a href="http://www.postgresql.org/about/news/1492/">recently</a>), the bug with moving relfrozenxid too soon, is no more.</p>
<p>But the fact that relfrozenxid will not advance incorrectly anymore doesn't change the fact that you might already have bad data.</p>
<p>Release notes say that you should, after upgrade:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">set</span> vacuum_freeze_table_age <span style="color: #66cc66;">=</span> zero;
$ vacuum;</pre></td></tr></table></div>

<p>This would force vacuum to check each end every row in the table, and freeze them correctly.</p>
<p>But. If you already passed 2^31 transactions since the problem <em>happened</em> &#8211; you might have seen rows that shouldn't be there. Or you could have &#8220;lost" some rows that should be there. This would mean that you could have violations of foreign keys, unique constraints or primary keys.</p>
<p>What to do with it?</p>
<p>My opinion is:</p>
<p>Get all the data about problems <em>Before</em> upgrade. Check, row by row (usually there is really not much of these rows), if they should be deleted, or not. Maybe someone will write function/extension to modify xmin/xmax values directly in pg pages, and then you could fix it manually. If not &#8211; you can try to use <a href="http://www.depesz.com/2012/04/04/lets-talk-dirty/">pg_dirtyread</a> to get data from affected rows. Or just note ids, and after post-ugprade vacuum, delete the ones that should be deleted.</p>
<p>Finally, after upgrade + vacuum use this script:</p>
<p>(<a href="/wp-content/uploads/2013/12/constraint-violation-check.sh">you can also download it here</a>)</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">#!<span style="color: #66cc66;">/</span>usr<span style="color: #66cc66;">/</span>bin<span style="color: #66cc66;">/</span>env bash
&nbsp;
<span style="color: #993333; font-weight: bold;">if</span> ! psql <span style="color: #66cc66;">-</span>qAtX <span style="color: #66cc66;">-</span>c <span style="color: #ff0000;">&quot;select 1&quot;</span> &amp;<span style="color: #66cc66;">&gt;/</span>dev<span style="color: #66cc66;">/</span><span style="color: #993333; font-weight: bold;">null</span>
<span style="color: #993333; font-weight: bold;">then</span>
    echo <span style="color: #ff0000;">&quot;Cannot connect to PostgreSQL database using current PG* settings:&quot;</span> <span style="color: #66cc66;">&gt;</span>&amp;<span style="color: #cc66cc;">2</span>
    <span style="color: #993333; font-weight: bold;">set</span> <span style="color: #66cc66;">|</span> grep ^PG <span style="color: #66cc66;">&gt;</span>&amp;<span style="color: #cc66cc;">2</span>
    exit <span style="color: #cc66cc;">1</span>
fi
&nbsp;
# Makes sorting much faster
export LC_ALL<span style="color: #66cc66;">=</span>C
&nbsp;
timestamping_awk<span style="color: #66cc66;">=</span><span style="color: #ff0000;">'{print strftime(&quot;%Y-%m-%d %H:%M:%S :&quot;), $0; fflush();}'</span>
<span style="color: #993333; font-weight: bold;">exec</span> <span style="color: #66cc66;">&gt;</span> <span style="color: #66cc66;">&gt;</span><span style="color: #66cc66;">&#40;</span> awk <span style="color: #ff0000;">&quot;$timestamping_awk&quot;</span> <span style="color: #66cc66;">&#41;</span> <span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&gt;</span>&amp;<span style="color: #cc66cc;">1</span>
logging_process_pid<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$!&quot;</span>
&nbsp;
current_db<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( psql -qAtX -c &quot;</span><span style="color: #993333; font-weight: bold;">select</span> current_database<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #ff0000;">&quot; )&quot;</span>
<span style="color: #993333; font-weight: bold;">current_user</span><span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( psql -qAtX -c &quot;</span><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #993333; font-weight: bold;">current_user</span><span style="color: #ff0000;">&quot; )&quot;</span>
&nbsp;
tmp_dir<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( mktemp -d )&quot;</span>
trap <span style="color: #ff0000;">'rm -rf &quot;$tmp_dir&quot;; kill $logging_process_pid'</span> EXIT
&nbsp;
df_line<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( df -hP &quot;</span>$tmp_dir<span style="color: #ff0000;">&quot; | tail -n 1 )&quot;</span>
df_available<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( echo &quot;</span>$df_line<span style="color: #ff0000;">&quot; | awk '{print $4}' )&quot;</span>
df_mount<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( echo &quot;</span>$df_line<span style="color: #ff0000;">&quot; | awk '{print $NF}' )&quot;</span>
&nbsp;
echo <span style="color: #ff0000;">&quot;You are about to check database [$current_db], using account [$current_user]&quot;</span>
echo <span style="color: #ff0000;">&quot;Temporary files will be stored on $df_mount filesystem (in $tmp_dir directory). There is $df_available space available.&quot;</span>
echo
echo <span style="color: #66cc66;">-</span>n <span style="color: #ff0000;">&quot;Do you want to continue? (type: <span style="color: #000099; font-weight: bold;">\&quot;</span>yes<span style="color: #000099; font-weight: bold;">\&quot;</span> to continue): &quot;</span>
<span style="color: #993333; font-weight: bold;">read</span> answer
<span style="color: #993333; font-weight: bold;">if</span> <span style="color: #66cc66;">&#91;</span><span style="color: #66cc66;">&#91;</span> ! <span style="color: #ff0000;">&quot;$answer&quot;</span> <span style="color: #66cc66;">==</span> <span style="color: #ff0000;">&quot;yes&quot;</span> <span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #993333; font-weight: bold;">then</span>
    echo <span style="color: #ff0000;">&quot;Exiting.&quot;</span>
    exit
fi
&nbsp;
all_problems<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;&quot;</span>
&nbsp;
echo <span style="color: #ff0000;">&quot;Testing Unique keys&quot;</span>
psql <span style="color: #66cc66;">-</span>qAtX <span style="color: #66cc66;">-</span>c <span style="color: #ff0000;">&quot;COPY (select c.oid, pg_get_indexdef( c.oid ), pg_size_pretty(pg_relation_size(c.oid))  from pg_namespace n join pg_class c on c.relnamespace = n.oid join pg_index i on c.oid = i.indexrelid where c.relkind = 'i' and i.indisunique order by pg_relation_size(c.oid) desc) TO STDOUT&quot;</span> <span style="color: #66cc66;">&gt;</span> <span style="color: #ff0000;">&quot;$tmp_dir/indexes.lst&quot;</span>
index_count<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( wc -l &quot;</span>$tmp_dir<span style="color: #66cc66;">/</span>indexes<span style="color: #66cc66;">.</span>lst<span style="color: #ff0000;">&quot; | awk '{print $1}' )&quot;</span>
&nbsp;
seq_scan_preamble<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;
set enable_bitmapscan = false;
set enable_indexonlyscan = false;
set enable_indexscan = false;
set enable_seqscan = true;
&quot;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">for</span> i <span style="color: #993333; font-weight: bold;">in</span> $<span style="color: #66cc66;">&#40;</span> seq <span style="color: #cc66cc;">1</span> $index_count <span style="color: #66cc66;">&#41;</span>
do
    idx_line<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( sed -ne &quot;</span>$<span style="color: #66cc66;">&#123;</span>i<span style="color: #66cc66;">&#125;</span>p<span style="color: #ff0000;">&quot; &quot;</span>$tmp_dir<span style="color: #66cc66;">/</span>indexes<span style="color: #66cc66;">.</span>lst<span style="color: #ff0000;">&quot; )&quot;</span>
    idx_oid<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( echo &quot;</span>$idx_line<span style="color: #ff0000;">&quot; | cut -f1 )&quot;</span>
    idx_def<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( echo &quot;</span>$idx_line<span style="color: #ff0000;">&quot; | cut -f2 )&quot;</span>
    idx_size<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( echo &quot;</span>$idx_line<span style="color: #ff0000;">&quot; | cut -f3 )&quot;</span>
    echo <span style="color: #ff0000;">&quot;- Index $i/$index_count:&quot;</span>
    echo <span style="color: #ff0000;">&quot;  - def   : $idx_def&quot;</span>
    echo <span style="color: #ff0000;">&quot;  - size  : $idx_size&quot;</span>
    query<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( echo &quot;</span>$idx_def<span style="color: #ff0000;">&quot; | perl -ne '
    if ( /^.* ON (.*) USING [^ ]* <span style="color: #000099; font-weight: bold;">\(</span>(.*)<span style="color: #000099; font-weight: bold;">\)</span> WHERE <span style="color: #000099; font-weight: bold;">\(</span>(.*)<span style="color: #000099; font-weight: bold;">\)</span><span style="color: #000099; font-weight: bold;">\s</span>*$/ ) {
        print &quot;</span><span style="color: #993333; font-weight: bold;">SELECT</span> $2 <span style="color: #993333; font-weight: bold;">FROM</span> $1 <span style="color: #993333; font-weight: bold;">WHERE</span> $3\n<span style="color: #ff0000;">&quot;;
    } elsif ( /^.* ON (.*) USING [^ ]* <span style="color: #000099; font-weight: bold;">\(</span>(.*)<span style="color: #000099; font-weight: bold;">\)</span><span style="color: #000099; font-weight: bold;">\s</span>*$/ ) {
        print &quot;</span><span style="color: #993333; font-weight: bold;">SELECT</span> $2 <span style="color: #993333; font-weight: bold;">FROM</span> $1\n<span style="color: #ff0000;">&quot;;
    }' )&quot;</span>
    <span style="color: #993333; font-weight: bold;">if</span> <span style="color: #66cc66;">&#91;</span><span style="color: #66cc66;">&#91;</span> <span style="color: #66cc66;">-</span>z <span style="color: #ff0000;">&quot;$query&quot;</span> <span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#93;</span>
    <span style="color: #993333; font-weight: bold;">then</span>
        echo <span style="color: #ff0000;">&quot;Cannot build query for this index?! Something is wrong.&quot;</span> <span style="color: #66cc66;">&gt;</span>&amp;<span style="color: #cc66cc;">2</span>
        continue
    fi
    echo <span style="color: #ff0000;">&quot;  - query : $query&quot;</span>
    echo <span style="color: #ff0000;">&quot;$seq_scan_preamble COPY ($query) TO STDOUT;&quot;</span> <span style="color: #66cc66;">|</span> \
        psql <span style="color: #66cc66;">-</span>qAtX <span style="color: #66cc66;">|</span> \
        perl <span style="color: #66cc66;">-</span>ne <span style="color: #ff0000;">'print unless /(^|<span style="color: #000099; font-weight: bold;">\t</span>)<span style="color: #000099; font-weight: bold;">\\</span>N($|<span style="color: #000099; font-weight: bold;">\t</span>)/'</span> <span style="color: #66cc66;">|</span> \
        sort <span style="color: #66cc66;">-</span>S1G <span style="color: #66cc66;">|</span> \
        uniq <span style="color: #66cc66;">-</span>dc <span style="color: #66cc66;">&gt;</span> <span style="color: #ff0000;">&quot;$tmp_dir/duplicates&quot;</span>
&nbsp;
    <span style="color: #993333; font-weight: bold;">if</span> <span style="color: #66cc66;">&#91;</span><span style="color: #66cc66;">&#91;</span> <span style="color: #66cc66;">-</span>s <span style="color: #ff0000;">&quot;$tmp_dir/duplicates&quot;</span> <span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#93;</span>
    <span style="color: #993333; font-weight: bold;">then</span>
        echo <span style="color: #ff0000;">&quot;There are duplicates here:&quot;</span>
        cat <span style="color: #ff0000;">&quot;$tmp_dir/duplicates&quot;</span>
        all_problems<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$all_problems- Index: $idx_def
&quot;</span>
    fi
    rm <span style="color: #ff0000;">&quot;$tmp_dir/duplicates&quot;</span>
done
&nbsp;
echo <span style="color: #ff0000;">&quot;Testing Foreign keys&quot;</span>
echo <span style="color: #ff0000;">&quot;
COPY (
with con as (
    SELECT
        c.conname,
        c.conrelid::regclass as con_rel,
        c.conkey,
        c.confrelid::regclass as conf_rel,
        c.confkey,
        generate_subscripts(c.conkey, 1) as i
    FROM
        pg_constraint c
    WHERE
        c.contype = 'f'
)
SELECT
    c.con_rel,
    string_agg( quote_ident(a.attname), ', ' ORDER BY c.i ) as con_col,
    c.conf_rel,
    string_agg( quote_ident(fa.attname), ', ' ORDER BY c.i ) as conf_col
FROM
    con as c
    join pg_attribute a on c.con_rel = a.attrelid AND a.attnum = c.conkey[c.i]
    join pg_attribute fa on c.conf_rel = fa.attrelid AND fa.attnum = c.confkey[c.i]
WHERE
    pg_relation_size(c.con_rel) &gt; 0
    and pg_relation_size(c.conf_rel) &gt; 0
group BY
    c.conname,
    c.con_rel,
    c.conf_rel
ORDER BY pg_relation_size(c.conf_rel) + pg_relation_size(con_rel) desc
) TO STDOUT
&quot;</span> <span style="color: #66cc66;">&gt;</span> <span style="color: #ff0000;">&quot;$tmp_dir/fkey-get-query&quot;</span>
&nbsp;
psql <span style="color: #66cc66;">-</span>qAtX <span style="color: #66cc66;">-</span>f <span style="color: #ff0000;">&quot;$tmp_dir/fkey-get-query&quot;</span> <span style="color: #66cc66;">|</span> awk <span style="color: #ff0000;">'!c[$0]++'</span> <span style="color: #66cc66;">&gt;</span> $tmp_dir<span style="color: #66cc66;">/</span>fkey<span style="color: #66cc66;">-</span>get<span style="color: #66cc66;">-</span>list
all_fkeys<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( cat $tmp_dir/fkey-get-list | wc -l )&quot;</span>
i<span style="color: #66cc66;">=</span><span style="color: #cc66cc;">0</span>
while IFS<span style="color: #66cc66;">=</span>$<span style="color: #ff0000;">'<span style="color: #000099; font-weight: bold;">\t</span>'</span> <span style="color: #993333; font-weight: bold;">read</span> r_table r_columns p_table p_columns
do
    rm <span style="color: #66cc66;">-</span>f <span style="color: #ff0000;">&quot;$tmp_dir/table_r.gz&quot;</span>
    rm <span style="color: #66cc66;">-</span>f <span style="color: #ff0000;">&quot;$tmp_dir/table_p.gz&quot;</span>
&nbsp;
    i<span style="color: #66cc66;">=</span>$<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
    echo <span style="color: #ff0000;">&quot;Fkey #$i / $all_fkeys):&quot;</span>
    echo <span style="color: #ff0000;">&quot;- $r_table ($r_columns) -=&gt; $p_table ($p_columns)&quot;</span>
&nbsp;
    echo <span style="color: #ff0000;">&quot;BEGIN;
    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
    SET TRANSACTION READ ONLY;
    <span style="color: #000099; font-weight: bold;">\o</span> | sort -S1G -u | pigz -c - &gt; $tmp_dir/table_r.gz
    COPY ( SELECT $r_columns FROM $r_table ) TO STDOUT;
    <span style="color: #000099; font-weight: bold;">\o</span> | sort -S1G -u | pigz -c - &gt; $tmp_dir/table_p.gz
    COPY ( SELECT $p_columns FROM $p_table ) TO STDOUT;
    <span style="color: #000099; font-weight: bold;">\o</span>
    ROLLBACK;&quot;</span> <span style="color: #66cc66;">|</span> psql <span style="color: #66cc66;">-</span>qAtX
    bad_lines<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$( comm -13 &lt;( pigz -dc $tmp_dir/table_p.gz | perl -ne 'print unless /(^|<span style="color: #000099; font-weight: bold;">\t</span>)<span style="color: #000099; font-weight: bold;">\\</span>N($|<span style="color: #000099; font-weight: bold;">\t</span>)/' ) &lt;( pigz -dc $tmp_dir/table_r.gz | perl -ne 'print unless /(^|<span style="color: #000099; font-weight: bold;">\t</span>)<span style="color: #000099; font-weight: bold;">\\</span>N($|<span style="color: #000099; font-weight: bold;">\t</span>)/' ) | wc -l )&quot;</span>
    <span style="color: #993333; font-weight: bold;">if</span> <span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#40;</span> $bad_lines <span style="color: #66cc66;">==</span> <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>
    <span style="color: #993333; font-weight: bold;">then</span>
        continue
    fi
    echo <span style="color: #ff0000;">&quot;Bad values in $r_table ($r_columns) - not existing in $p_table ($p_columns) : $bad_lines different values. Sample:&quot;</span>
    comm <span style="color: #66cc66;">-</span><span style="color: #cc66cc;">13</span> <span style="color: #66cc66;">&lt;</span><span style="color: #66cc66;">&#40;</span> pigz <span style="color: #66cc66;">-</span>dc $tmp_dir<span style="color: #66cc66;">/</span>table_p<span style="color: #66cc66;">.</span>gz <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&lt;</span><span style="color: #66cc66;">&#40;</span> pigz <span style="color: #66cc66;">-</span>dc $tmp_dir<span style="color: #66cc66;">/</span>table_r<span style="color: #66cc66;">.</span>gz <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">|</span> head <span style="color: #66cc66;">-</span>n <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span> sed <span style="color: #ff0000;">'s/^/- /'</span>
    all_problems<span style="color: #66cc66;">=</span><span style="color: #ff0000;">&quot;$all_problems- Fkey: $r_table ($r_columns) -=&gt; $p_table ($p_columns)
&quot;</span>
    echo
done <span style="color: #66cc66;">&lt;</span> <span style="color: #66cc66;">&lt;</span><span style="color: #66cc66;">&#40;</span> cat $tmp_dir<span style="color: #66cc66;">/</span>fkey<span style="color: #66cc66;">-</span>get<span style="color: #66cc66;">-</span>list <span style="color: #66cc66;">&#41;</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">if</span> <span style="color: #66cc66;">&#91;</span><span style="color: #66cc66;">&#91;</span> <span style="color: #66cc66;">-</span>z <span style="color: #ff0000;">&quot;$all_problems&quot;</span> <span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#93;</span>
<span style="color: #993333; font-weight: bold;">then</span>
    echo <span style="color: #ff0000;">&quot;All OK.&quot;</span>
<span style="color: #993333; font-weight: bold;">else</span>
    echo <span style="color: #ff0000;">&quot;Problems found:&quot;</span>
    echo <span style="color: #ff0000;">&quot;$all_problems&quot;</span>
fi</pre></td></tr></table></div>

<p>To test if your database has unique/fkey violations.</p>
<p>That was quite a long one. All in all &#8211; I think that bugs happen, so that's kinda ok. But what bugs me is that the topic, which in itself is pretty complicated and confusing, was presented &#8220;as is" in the release docs.</p>
<p>I would be much happier if our beloved devs (no sarcasm in here, I am deeply grateful for all their work!) would provide such function (like the one I wrote), with &#8220;Pg Devs Blessing" as part of distribution. Perhaps even a tool to check for fkey/unique violations? I know that these shouldn't happen. But they do. Usually because of hardware issues, sure, but it would be really good to have a blessed way to test for these cases.</p>
<p>Anyway &#8211; That's about it. If you have any comments/questions &#8211; &#8220;comment below, let me know" <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">17 comments <a href='http://www.depesz.com/2013/12/06/what-does-fix-vacuums-tests-to-see-whether-it-can-update-relfrozenxid-really-mean/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-42522" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42522" title="">#</a></span> quaker</div>  <div class="date">Dec 7, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/4c770dca565a32da9a15dc8ceb4d0712?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>You wrote, that xmax greater than 0 means that the row is deleted. Now I have noticed strange behavior in my database. No transaction is progress. I do simple select on one of my tables:</p>
<p>SELECT xmin,xmax,cl_id FROM core.clients ORDER by cl_id</p>
<p>and got:</p>
<pre>
    xmin    |    xmax    | cl_id 
------------+------------+-------
          2 |          0 |     1
 1395466567 | 1395466567 |     2
          2 | 1394063040 |     3
 1359574078 | 1359574078 |     4
...
</pre>
<p>In this sample every row beside that with cl_id is deleted? I get it right?</p>
<p>But how it is possible when these rows are accessable by transactions with xid &gt; xmax? Am I affected by this bug?</p>
	</li>
		
		
			
<li class="odd" id="comment-42523" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42523" title="">#</a></span> David Johnston</div>  <div class="date">Dec 7, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/c16f0f30170bb7df43273c6f678fc9bc?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>My only question here is whether the suggestion of:</p>
<p>SELECT txid_current() &lt; (2 ^ 31)</p>
<p>has any kind of wrap-around behavior to be aware of.</p>
	</li>
		
		
			
<li class="odd" id="comment-42524" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42524" title="">#</a></span> quaker</div>  <div class="date">Dec 7, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/4c770dca565a32da9a15dc8ceb4d0712?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I ate &#8220;&#8230; beside cl_id = 1 is deleted&#8221;.</p>
<p>This is postgresql 9.3.1 on freebsd and we are running for long time with high insert/update/delete rate.</p>
<p>I&#8217;ve just inserted row into this table and got:</p>
<p> 1395417586 | 1395417587 |   336</p>
<p>So it looks like it was marked already deleted.</p>
	</li>
		
		
			
<li class="odd" id="comment-42525" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42525" title="">#</a></span> <a href='http://omniti.com' rel='external nofollow' class='url'>Robert Treat</a></div>  <div class="date">Dec 7, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/283ee380fb66088e5acf5a13d7d5e792?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@ David Johnston</p>
<p>The theory is that if your database shows current_txid() &lt; 2^31, you don&#039;t have to worry about any wraparound / xid issues caused by the bug, so it should be safe to upgrade and run the vacuum with vacuum_freeze_table_age set to 0 and be ok with regards to this bug.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-42534" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42534" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 9, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@quaker:<br />
the transactions could have been rolled back. So now you can see this. This is not a problem. Some vacuum in the future will change xmax to 0</p>
	</li>
		
		
			
<li class="odd" id="comment-42547" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42547" title="">#</a></span> Omar</div>  <div class="date">Dec 10, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Would running the test_correct_relfrozenxid on a promoted slave show the same results as running it on the master?</p>
<p>We have &gt;2TB of data, and it would be hard to run this on a master.</p>
<p>Thanks!</p>
	</li>
		
		
			
<li class="mycomment" id="comment-42560" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42560" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 10, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Omar:<br />
it&#8217;s a good start. Please rmember that running the check on master, aside from some reads, does not cause problems. there are no important locks, and it generally just works.</p>
	</li>
		
		
			
<li class="odd" id="comment-42565" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42565" title="">#</a></span> Omar</div>  <div class="date">Dec 10, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>@Depesz: I understand, but the I/O load + displacing all the hot data from FS cache would probably impact it too much. <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-42566" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42566" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 10, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>FS cache is probably smart enough to ignore simple sequential read (which this more or less does). Anyway &#8211; up to you. You can check on promoted slave, but I wouldn&#8217;t trust the results in 100%.</p>
	</li>
		
		
			
<li class="odd" id="comment-44797" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44797" title="">#</a></span> Pius</div>  <div class="date">Feb 26, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/31dcfcd65cef63d80cc1df0cdf6a168c?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi,</p>
<p>I run your utility on my production DB and even after upgrading to 9.1.11 and manually vacuuming as instructed in the release note, your utility still reports some bad row from time to time. Even more intriguing is that these bad rows are created in the past few days. For example, I ran your utility this morning and it reported several bad rows with xmax=3000. So this is possible if there is rollback, however, I dont understand why the xmax is 3000, as the current transaction ID is like 1883161595:</p>
<p>MY_DB=# select txid_current();<br />
 txid_current<br />
&#8212;&#8212;&#8212;&#8212;&#8211;<br />
   1885152935<br />
(1 row)</p>
<p>MY_DB=# select xmin,xmax,id,file_type from file_sent where id=225020;<br />
    xmin    | xmax |   id   | file_type<br />
&#8212;&#8212;&#8212;&#8212;+&#8212;&#8212;+&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;&#8211;<br />
 1883161595 |    0 | 225020 | pdf<br />
(1 row)</p>
<p>MY_DB=# </p>
<p>Any idea?</p>
<p>Thanks a lot,</p>
<p>Pius</p>
	</li>
		
		
			
<li class="odd" id="comment-44798" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44798" title="">#</a></span> Pius</div>  <div class="date">Feb 26, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/31dcfcd65cef63d80cc1df0cdf6a168c?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Sorry, post the wrong result, it should be like this:</p>
<p>MY_DB=# select xmin,xmax,id,file_type from scheduled_report_delivery where id=225020;<br />
    xmin    | xmax |   id   | file_type<br />
&#8212;&#8212;&#8212;&#8212;+&#8212;&#8212;+&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;&#8211;<br />
 1883161595 | 3000 | 225020 | pdf<br />
(1 row)</p>
	</li>
		
		
			
<li class="mycomment" id="comment-44824" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44824" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Feb 27, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Pius:<br />
assuming your txid_current is 1885152935, the 3000 in xmin does look strange.</p>
<p>What does the output from test_correct_relfrozenxid(&#8230;) for this table look like?</p>
	</li>
		
		
			
<li class="odd" id="comment-44827" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44827" title="">#</a></span> Pius</div>  <div class="date">Feb 28, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/31dcfcd65cef63d80cc1df0cdf6a168c?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi,</p>
<p>Actually it is the xmax which has the value 3000, I found these rows after running your utility  test_correct_relfrozenxid.  According to my knowledge, this xmax is only populated on ROLLBACK, so I don&#8217;t understand how a value of 3000 was put in this row and I am sure this row was inserted few days ago.</p>
<p>Thanks for your help.</p>
<p>Pius</p>
	</li>
		
		
			
<li class="mycomment" id="comment-44832" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44832" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Feb 28, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Pius:<br />
1. you didn&#8217;t show me the output I asked<br />
2. xmax is not related to rollback. xmax is set when given record has been deleted (or updated).</p>
	</li>
		
		
			
<li class="odd" id="comment-44852" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44852" title="">#</a></span> Pius</div>  <div class="date">Mar 5, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/31dcfcd65cef63d80cc1df0cdf6a168c?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi Depesz,</p>
<p>Here is the output of test_correct_relfrozenxid:</p>
<p>MY_DB=# select * from test_correct_relfrozenxid(&#8216;public.scenario&#8217;,&#8217;bad_result&#8217;);<br />
NOTICE:  Found bad rows (1) in TABLE (public.scenario) page (161)<br />
NOTICE:  Found bad rows (1) in TABLE (public.scenario) page (163)<br />
NOTICE:  Found bad rows (1) in TABLE (public.scenario) page (165)<br />
NOTICE:  Found bad rows (1) in TABLE (public.scenario) page (233)<br />
NOTICE:  Found bad rows (1) in TABLE (public.scenario) page (244)<br />
NOTICE:  Found bad rows (3) in TABLE (public.scenario) page (255)<br />
NOTICE:  Found bad rows (1) in TABLE (public.scenario) page (283)<br />
   table_name    | scanned_pages | bad_pages | scanned_rows | bad_rows<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;&#8212;&#8212;+&#8212;&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;&#8212;&#8211;+&#8212;&#8212;&#8212;-<br />
 public.scenario |           296 |         7 |        30526 |        9<br />
(1 row)</p>
<p>and here is one row in the bad_result table:</p>
<p>MY_DB=# select * from bad_result limit 1;<br />
-[ RECORD 1 ]+&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
table_name   | scenario<br />
page_no      | 161<br />
relfrozenxid | 1801398747<br />
current_xid  | 1927675335<br />
lp           | 68<br />
lp_off       | 3552<br />
lp_flags     | 1<br />
lp_len       | 72<br />
t_xmin       | 2<br />
t_xmax       | 3387<br />
t_field3     | 0<br />
t_ctid       | (161,68)<br />
t_infomask2  | 6<br />
t_infomask   | 4491<br />
t_hoff       | 32<br />
t_bits       | 110011000000000000000000000000000000000011100110110110010110111101000000<br />
t_oid        | 49716071<br />
check_status | 2<br />
lsn          | (688/74EE0FA8,2,1,440,496,8192,8192,4,0)<br />
tli          |<br />
flags        |<br />
lower        |<br />
upper        |<br />
special      |<br />
pagesize     |<br />
version      |<br />
prune_xid    | </p>
<p>Pius</p>
	</li>
		
		
			
<li class="odd" id="comment-44853" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44853" title="">#</a></span> Pius</div>  <div class="date">Mar 5, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/31dcfcd65cef63d80cc1df0cdf6a168c?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi depesz,</p>
<p>This is response from Alvaro Herrera:</p>
<p>================================================<br />
It&#8217;s normal to have low numbers used in Xmax.  This just means that they used a multixact instead of a plain transaction ID.  You can check that by using the pageinspect extension and seeing the flag set in the t_infomask field.</p>
<p>I&#8217;m not saying there is no bug here, only that you have provided no evidence that there is.<br />
=================================================</p>
<p>Pius</p>
	</li>
		
		
			
<li class="mycomment" id="comment-44854" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-44854" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Mar 5, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Pius:<br />
You&#8217;re OK.<br />
The t_infomask value of 4491 contains bit for multixact (0&#215;1000).</p>
<p>So the xmax is multixact, and you&#8217;re OK.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2775" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="fa321a7dd0" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="157"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">3 comments</span> | <span class="wpp-views">590 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">368 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">254 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">197 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">153 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">134 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">124 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">123 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">119 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">101 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

