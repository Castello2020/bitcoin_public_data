http://www.depesz.com/2008/05/17/waiting-for-84-partial-match-support-in-gin-and-sequence-restart/
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 15:20:42 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=1208>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Waiting for 8.4 &#8211; partial-match support in GIN, and sequence restart</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Waiting for 8.4 &#8211; partial-match support in GIN, and sequence restart Comments Feed" href="http://www.depesz.com/2008/05/17/waiting-for-84-partial-match-support-in-gin-and-sequence-restart/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2008/05/17/waiting-for-84-partial-match-support-in-gin-and-sequence-restart/' />
<link rel='shortlink' href='http://www.depesz.com/?p=1208' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-1208">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2008/05/17/waiting-for-84-partial-match-support-in-gin-and-sequence-restart/" rel="bookmark" title="Permanent Link to Waiting for 8.4 &#8211; partial-match support in GIN, and sequence restart">Waiting for 8.4 &#8211; partial-match support in GIN, and sequence restart</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>May 17th, 2008 by depesz | Tags: <a href="http://www.depesz.com/tag/gin/" rel="tag">gin</a>, <a href="http://www.depesz.com/tag/pg84/" rel="tag">pg84</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/prefix/" rel="tag">prefix</a>, <a href="http://www.depesz.com/tag/sequence/" rel="tag">sequence</a>, <a href="http://www.depesz.com/tag/truncate/" rel="tag">truncate</a>, <a href="http://www.depesz.com/tag/tsearch/" rel="tag">tsearch</a> |  <a href="http://www.depesz.com/2008/05/17/waiting-for-84-partial-match-support-in-gin-and-sequence-restart/#comments" title="Comment on Waiting for 8.4 &#8211; partial-match support in GIN, and sequence restart">1 comment &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>Today we have two interesting patches:</p>
<ul>
<li>patch by Teodor Sigaev and Oleg Bartunov, and <a href="http://archives.postgresql.org/pgsql-committers/2008-05/msg00273.php">committed</a> by Tom Lane, which adds interesting capability to GIN indexes</li>
<li>patch by Zoltan Boszormenyi, also <a href="http://archives.postgresql.org/pgsql-committers/2008-05/msg00283.php">committed</a> by Tom, which adds &#8220;RESTART" option to ALTER SEQUENCE. With some interesting consequences</li>
</ul>
<p><span id="more-1208"></span></p>
<p>Since describing patch on GIN will take much more time and blog-post-space, I'll first go into details of SEQUENCE RESTART patch.</p>
<p>Basically, newly added syntax let's you do something like this:</p>
<p><code># create sequence test;<br />
CREATE SEQUENCE<br />
# select nextval('test');<br />
 nextval<br />
---------<br />
       1<br />
(1 row)<br />
# select count(nextval('test')) from generate_series(1,10000);<br />
 count<br />
-------<br />
 10000<br />
(1 row)<br />
# select nextval('test');<br />
 nextval<br />
---------<br />
   10002<br />
(1 row)<br />
# alter sequence test restart;<br />
ALTER SEQUENCE<br />
# select nextval('test');<br />
 nextval<br />
---------<br />
       1<br />
(1 row)</code></p>
<p>It doesn't seem very revolutionary &#8211; after all you could always do:</p>
<p><code>SELECT setval('test', 1);</code></p>
<p>But you have to remember that not all sequences start from 0.</p>
<p>What's more &#8211; having this syntax (or, to be more specific, this ability) to restart sequence, gave us something else:</p>
<p><code># create table test (id serial primary key, something int4);<br />
NOTICE:  CREATE TABLE will create implicit sequence "test_id_seq" for serial column "test.id"<br />
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "test_pkey" for table "test"<br />
CREATE TABLE<br />
# insert into test (something) values (15) returning *;<br />
 id | something<br />
----+-----------<br />
  1 |        15<br />
(1 row)<br />
INSERT 0 1<br />
# insert into test (something) select * from generate_series(1000, 10000, 5);<br />
INSERT 0 1801<br />
# TRUNCATE TABLE test RESTART IDENTITY;<br />
TRUNCATE TABLE<br />
# insert into test (something) values (50) returning *;<br />
 id | something<br />
----+-----------<br />
  1 |        50<br />
(1 row)<br />
INSERT 0 1</code></p>
<p>In case you missed that &#8211; now truncate can automatically restart sequence that is used for primary key generator. And this is what I found really cool.</p>
<p>Now to the second (or first, depending how you'll look at it) patch: partial-matches in GIN.</p>
<p>Of course the most prominent use case for GIN is TSearch2. So I'll concentrate on using partial-matches in GIN in TSearch2.</p>
<p>First, I have a test table:</p>
<p><code># \d pages<br />
                          Table "public.pages"<br />
 Column |   Type   |                     Modifiers<br />
--------+----------+----------------------------------------------------<br />
 id     | integer  | not null default nextval('pages_id_seq'::regclass)<br />
 url    | text     | not null<br />
 title  | text     |<br />
 body   | text     |<br />
 ft     | tsvector |<br />
Indexes:<br />
    "pages_pkey" PRIMARY KEY, btree (id)<br />
    "pages_url_key" UNIQUE, btree (url)<br />
    "tsearch_test" gin (ft)<br />
Triggers:<br />
    tsvectorupdate BEFORE INSERT OR UPDATE ON pages FOR EACH ROW EXECUTE PROCEDURE tsvector_update_trigger('ft', 'public.polish', 'url', 'title', 'body')</code></p>
<p>Which contains some (but very little) data:</p>
<p><code># select count(*), min(length(body)), max(length(body)), sum(length(body)) from pages;<br />
 count | min  |  max   |   sum<br />
-------+------+--------+---------<br />
   443 | 1147 | 142286 | 2935151<br />
(1 row)</code></p>
<p>This table contains pages from Polish wikipedia, so my TSearch configuration is also based on Polish language. But it shouldn't matter in this case.</p>
<p>For my test I chosen 2 words: drzwi and drzewa (door and trees).</p>
<p>First, let's check it tsearch can tokenize them properly:</p>
<p><code># select to_tsvector('public.polish', 'drzwi drzewa');<br />
     to_tsvector<br />
----------------------<br />
 'drzewo':2 'drzwi':1<br />
(1 row)</code></p>
<p>Looks fine for me. Now, let's check how fast I can search for trees with tsearch:</p>
<p><code># explain analyze select * from pages where ft @@ to_tsquery('public.polish', 'drzewa');<br />
                                                       QUERY PLAN<br />
------------------------------------------------------------------------------------------------------------------------<br />
 Index Scan using tsearch_test on pages  (cost=0.00..16.31 rows=1 width=596) (actual time=0.038..0.111 rows=17 loops=1)<br />
   Index Cond: (ft @@ '''drzewo'''::tsquery)<br />
 Total runtime: 0.193 ms<br />
(3 rows)</code></p>
<p>Pretty fast. How about doors?</p>
<p><code># explain analyze select * from pages where ft @@ to_tsquery('public.polish', 'drzwi');<br />
                                                      QUERY PLAN<br />
-----------------------------------------------------------------------------------------------------------------------<br />
 Index Scan using tsearch_test on pages  (cost=0.00..16.31 rows=1 width=596) (actual time=0.043..0.046 rows=1 loops=1)<br />
   Index Cond: (ft @@ '''drzwi'''::tsquery)<br />
 Total runtime: 0.099 ms<br />
(3 rows)</code></p>
<p>Now, let's check for pages which have any of these two words:</p>
<p><code># explain analyze select * from pages where ft @@ to_tsquery('public.polish', 'drzwi|drzewa');<br />
                                                       QUERY PLAN<br />
------------------------------------------------------------------------------------------------------------------------<br />
 Index Scan using tsearch_test on pages  (cost=0.00..16.31 rows=1 width=596) (actual time=0.057..0.142 rows=18 loops=1)<br />
   Index Cond: (ft @@ '''drzwi'' | ''drzewo'''::tsquery)<br />
 Total runtime: 0.230 ms<br />
(3 rows)</code></p>
<p>OK. Looks fine. Times are pretty good. For comparison purposes let's check how &#8220;LIKE" will work:</p>
<p><code># explain analyze select * from pages where (title||' '||body) like '%drzwi%';<br />
                                             QUERY PLAN<br />
----------------------------------------------------------------------------------------------------<br />
 Seq Scan on pages  (cost=0.00..36.75 rows=1 width=596) (actual time=24.924..73.689 rows=2 loops=1)<br />
   Filter: (((title || ' '::text) || body) ~~ '%drzwi%'::text)<br />
 Total runtime: 73.746 ms<br />
(3 rows)<br />
# explain analyze select * from pages where (title||' '||body) like '%drzewa%';<br />
                                            QUERY PLAN<br />
---------------------------------------------------------------------------------------------------<br />
 Seq Scan on pages  (cost=0.00..36.75 rows=1 width=596) (actual time=9.499..72.118 rows=8 loops=1)<br />
   Filter: (((title || ' '::text) || body) ~~ '%drzewa%'::text)<br />
 Total runtime: 72.191 ms<br />
(3 rows)<br />
# explain analyze select * from pages where (title||' '||body) like '%drz%';<br />
                                              QUERY PLAN<br />
------------------------------------------------------------------------------------------------------<br />
 Seq Scan on pages  (cost=0.00..36.75 rows=18 width=596) (actual time=0.180..63.877 rows=108 loops=1)<br />
   Filter: (((title || ' '::text) || body) ~~ '%drz%'::text)<br />
 Total runtime: 64.165 ms<br />
(3 rows)</code></p>
<p>As you can see last test of like is not exactly comparable with &#8216;drzwi|drzewa', as it found also other words &#8211; even words where &#8220;drz" is only part of word, not necessarily its beginning.</p>
<p>This new patch, lets TSearch (and other applications) to use GIN indexes for prefix searches. TSearch syntax for this is: &#8216;prefix:*'. So, let's check how well (or how bad) it will work:</p>
<p><code># explain analyze select * from pages where ft @@ to_tsquery('public.polish', 'drz:*');<br />
                                                       QUERY PLAN<br />
------------------------------------------------------------------------------------------------------------------------<br />
 Index Scan using tsearch_test on pages  (cost=0.00..16.31 rows=1 width=596) (actual time=0.068..0.168 rows=23 loops=1)<br />
   Index Cond: (ft @@ '''drz'':*'::tsquery)<br />
 Total runtime: 0.262 ms<br />
(3 rows)</code></p>
<p>Whoa. Pretty fast. And it found 5 new pages. I checked them manually, and found out, that the matched tokens were:</p>
<ul>
<li>drzeć</li>
<li>drzewiecki</li>
<li>drzeżdżon</li>
<li>drzwiczki</li>
<li>drzyzga</li>
</ul>
<p>So &#8211; it works. And to give credit to Oleg and Teodor &#8211; it works really fast!</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">One comment <a href='http://www.depesz.com/2008/05/17/waiting-for-84-partial-match-support-in-gin-and-sequence-restart/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-26237" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-26237" title="">#</a></span> digicon</div>  <div class="date">May 23, 2008</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/cd7838fe6ff4a70c29a3b853417a2973?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Sweeeeet! I have been waiting for this for some time! Thanks Oleg and Teodor!</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="1208" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="16c942316b" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="158"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">339 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">315 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">275 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">215 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">160 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">154 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">138 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">134 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">133 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">107 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

