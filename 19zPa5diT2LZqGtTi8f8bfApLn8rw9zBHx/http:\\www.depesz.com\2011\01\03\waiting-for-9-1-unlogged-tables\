http://www.depesz.com/2011/01/03/waiting-for-9-1-unlogged-tables/
HTTP/1.1 200 OK
Server: nginx
Date: Tue, 22 Jul 2014 13:22:41 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=1937>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Waiting for 9.1 &#8211; Unlogged tables</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Waiting for 9.1 &#8211; Unlogged tables Comments Feed" href="http://www.depesz.com/2011/01/03/waiting-for-9-1-unlogged-tables/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2011/01/03/waiting-for-9-1-unlogged-tables/' />
<link rel='shortlink' href='http://www.depesz.com/?p=1937' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-1937">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2011/01/03/waiting-for-9-1-unlogged-tables/" rel="bookmark" title="Permanent Link to Waiting for 9.1 &#8211; Unlogged tables">Waiting for 9.1 &#8211; Unlogged tables</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>January 3rd, 2011 by depesz | Tags: <a href="http://www.depesz.com/tag/performance/" rel="tag">performance</a>, <a href="http://www.depesz.com/tag/pg91/" rel="tag">pg91</a>, <a href="http://www.depesz.com/tag/pitr/" rel="tag">pitr</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/table/" rel="tag">table</a>, <a href="http://www.depesz.com/tag/unlogged/" rel="tag">unlogged</a>, <a href="http://www.depesz.com/tag/wal/" rel="tag">wal</a> |  <a href="http://www.depesz.com/2011/01/03/waiting-for-9-1-unlogged-tables/#comments" title="Comment on Waiting for 9.1 &#8211; Unlogged tables">29 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>On 29th of December, Robert Haas <a href="http://archives.postgresql.org/pgsql-committers/2010-12/msg00235.php">committed</a> interesting patch, which does:</p>
<p><code>Support unlogged tables.<br />
&nbsp;<br />
The contents of an unlogged table aren't WAL-logged; thus, they are not<br />
available on standby servers and are truncated whenever the database<br />
system enters recovery.  Indexes on unlogged tables are also unlogged.<br />
Unlogged GiST indexes are not currently supported.</code></p>
<p>(edited commit message, due to <a href="http://archives.postgresql.org/pgsql-committers/2010-12/msg00237.php">this mail</a>.</p>
<p><span id="more-1937"></span></p>
<p>As you perhaps know every change in table, is first written to WAL (files in pg_xlog/ directory), and then, on checkpoint time &#8211; to actual data files.</p>
<p>There is idea that if we'd skip write to WAL (and subsequently &#8211; fsync() on commit), writes to the tables would be faster.</p>
<p>Speedup is not free, of course &#8211; data in this table wouldn't survive db crash &#8211; for the very reason that there is no WAL info for them, and it's the WAL that is being used on recovery.</p>
<p>So. Let's see how it looks/works.</p>
<p><code>$ create unlogged table test (<br />
    id serial primary key,<br />
    some_text text<br />
);<br />
NOTICE:  CREATE TABLE will create implicit sequence &quot;test_id_seq&quot; for serial column &quot;test.id&quot;<br />
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index &quot;test_pkey&quot; for table &quot;test&quot;<br />
CREATE TABLE</code></p>
<p>So far, it looks OK.</p>
<p>For comparison purposes, I'll also create second table &#8211; identical, but logged;</p>
<p><code>$ create table test2 (<br />
    id serial primary key,<br />
    some_text text<br />
);<br />
NOTICE:  CREATE TABLE will create implicit sequence &quot;test2_id_seq&quot; for serial column &quot;test2.id&quot;<br />
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index &quot;test2_pkey&quot; for table &quot;test2&quot;<br />
CREATE TABLE</code></p>
<p>First thing &#8211; how reliable is the data in those tables?</p>
<p>Simple test &#8211; I'll insert some rows, issue checkpoint, insert some more rows, and kill -9 all postgres processes. Then I'll restart Pg, and we'll see.</p>
<p><code>=$ cat run.sql<br />
INSERT INTO test (some_text) VALUES ('a'), ('b'), ('c');<br />
INSERT INTO test2 (some_text) VALUES ('a'), ('b'), ('c');<br />
checkpoint;<br />
INSERT INTO test (some_text) VALUES ('d'), ('e'), ('f');<br />
INSERT INTO test2 (some_text) VALUES ('d'), ('e'), ('f');</code></p>
<p><code>=$ psql -f run.sql ; ssh pgdba@localhost killall -9 postgres postmaster<br />
INSERT 0 3<br />
INSERT 0 3<br />
CHECKPOINT<br />
INSERT 0 3<br />
INSERT 0 3<br />
postmaster: no process found</code></p>
<p>OK, and after restart:</p>
<p><code>$ select * from test;<br />
 id | some_text<br />
----+-----------<br />
(0 rows)<br />
&nbsp;<br />
$ select * from test2;<br />
 id | some_text<br />
----+-----------<br />
  1 | a<br />
  2 | b<br />
  3 | c<br />
  4 | d<br />
  5 | e<br />
  6 | f<br />
(6 rows)</code></p>
<p>OK. so the difference seems to be trivially visible &#8211; data from unlogged table is *lost* if there needs to be recovery. And what about normal restart?</p>
<p><code>=$ psql -f run.sql ; ssh pgdba@localhost pg_ctl -m fast restart<br />
INSERT 0 3<br />
INSERT 0 3<br />
CHECKPOINT<br />
INSERT 0 3<br />
INSERT 0 3<br />
waiting for server to shut down.... done<br />
server stopped<br />
server starting</code></p>
<p><code>$ select * from test;<br />
 id | some_text<br />
----+-----------<br />
 37 | a<br />
 38 | b<br />
 39 | c<br />
 40 | d<br />
 41 | e<br />
 42 | f<br />
(6 rows)</code></p>
<p>Nice.</p>
<p>So, what about the speed?</p>
<p>Let's test simple thing &#8211; load 450k of rows, using 3 rows per insert, each insert in it's own transaction. So, wrote this simple one-liner:</p>
<p><code>=$ perl -le 'my $x = &quot;aaaaaaaa&quot;; for (1..450000) {print $x++}' | \<br />
    perl -pe 's/.*/(\047$&amp;\047)/;s/\s*\z/,/ if $.%3' | \<br />
    sed 's/.*/insert into test (some_text) values &amp;;/'</code></p>
<p>Which generates output like this:</p>
<p><code>insert into test (some_text) values ('aaaaaaaa'),('aaaaaaab'),('aaaaaaac');<br />
insert into test (some_text) values ('aaaaaaad'),('aaaaaaae'),('aaaaaaaf');<br />
insert into test (some_text) values ('aaaaaaag'),('aaaaaaah'),('aaaaaaai');<br />
insert into test (some_text) values ('aaaaaaaj'),('aaaaaaak'),('aaaaaaal');<br />
insert into test (some_text) values ('aaaaaaam'),('aaaaaaan'),('aaaaaaao');<br />
insert into test (some_text) values ('aaaaaaap'),('aaaaaaaq'),('aaaaaaar');<br />
insert into test (some_text) values ('aaaaaaas'),('aaaaaaat'),('aaaaaaau');<br />
insert into test (some_text) values ('aaaaaaav'),('aaaaaaaw'),('aaaaaaax');<br />
insert into test (some_text) values ('aaaaaaay'),('aaaaaaaz'),('aaaaaaba');<br />
insert into test (some_text) values ('aaaaaabb'),('aaaaaabc'),('aaaaaabd');</code></p>
<p>Then, I prepended the output with single &#8220;CHECKPOINT;" command (to get as similar situation as possible in both tests), and then ran the test.</p>
<p>I ran the inserts for test table 3 times, and then for test2 (normal, logged) also 3 times. (I did truncate of the tables before each run). Run times (just the inserts):</p>
<ul>
<li>unlogged table: 1m29.108s, 1m29.460s, 1m28.713s.</li>
<li>logged table: 15m40.459s, 15m41.560s, 15m44.181s.</li>
</ul>
<p>That's fast.</p>
<p>Of course I chose the best-case scenario &#8211; slow inserts, each normally requiring sync() to discs. What would happen if I'd use &#8220;copy"?</p>
<ul>
<li>unlogged table: 0m1.564s, 0m1.567s, 0m1.562s.</li>
<li>logged table: 0m3.116s, 0m2.992s, 0m3.183s.</li>
</ul>
<p>That's really fast.</p>
<p>So, unlogged tables are good for cases when:</p>
<ul>
<li>you don't need it to stay alive over Pg crash</li>
<li>you don't need it replicated to slaves (well &#8211; at least using warm/hot standby mechanisms)</li>
<li>you do need as fast writes as possible</li>
</ul>
<p>There are not many use-cases for it, but when you have the right use case &#8211; the unlogged tables are simply amazing!</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">29 comments <a href='http://www.depesz.com/2011/01/03/waiting-for-9-1-unlogged-tables/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-32771" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32771" title="">#</a></span> <a href='http://tapoueh.org' rel='external nofollow' class='url'>dim</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/7b615d104c506aa0a49e17151fa94d9f?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Well, think HTTP sessions for example. Having to deal with them above the dynamic stack is gruesome (load balancers, cookies, etc).  If you put them in the database, you can load balance as much as you want to and it just works when one node fail because the session is to be found easily from any other one.</p>
<p>That and maybe also all log tables (append only tables) where you&#8217;d checkpoint every minute if business rules say that losing 1 minute worth of logs is acceptable.</p>
<p>Well, some other nice cases will certainly show up now that the feature exists <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-32772" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32772" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Dim:<br />
checkpointing doesn&#8217;t help with those tables. please check first test. i did inserts, checkpoint, more inserts, and db crash. effect &#8211; *all* rows were removed. even pre-checkpoint.</p>
<p>so &#8211; session data &#8211; yeah. logs &#8211; well, not really.</p>
	</li>
		
		
			
<li class="odd" id="comment-32773" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32773" title="">#</a></span> <a href='http://tapoueh.org' rel='external nofollow' class='url'>dim</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/7b615d104c506aa0a49e17151fa94d9f?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>ah yes. confused. sorry.</p>
	</li>
		
		
			
<li class="odd" id="comment-32774" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32774" title="">#</a></span> <a href='http://www.gnegg.ch' rel='external nofollow' class='url'>Philip Hofstetter</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/117112d883960c8ed0e13823f88e45f1?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>concerning logging, what&#8217;s stoping you to</p>
<p>insert into logged_table (select from nonlogged_table where&#8230;) </p>
<p>in a set interval (being the maximum amount of time you are willing to lose data for)? That can be done asynchronously helping you to achieve the maximum speed at logging time while still giving you the needed safety.</p>
<p>And of course HTTP sessions (which I recently had to move out of Postgres out of performance concerns).</p>
<p>This is a really, really cool feature!</p>
	</li>
		
		
			
<li class="mycomment" id="comment-32775" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32775" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Philip:<br />
nothing stops me. It&#8217;s possible. And it might be sensible. In case the costs (more complicated code/infrastructure) will be less important than benefits (speedup).</p>
	</li>
		
		
			
<li class="odd" id="comment-32776" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32776" title="">#</a></span> arthurr</div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Hi,</p>
<p>Is it possible to use an unlogged table for insert/create and then alter it to logged table ?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-32777" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32777" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Arthurr:<br />
afaik &#8211; no.</p>
	</li>
		
		
			
<li class="odd" id="comment-32778" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32778" title="">#</a></span> arthurr</div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>So &#8230; I&#8217;ll waiting for 9.2 <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-32779" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32779" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Arthurr: well, I&#8217;m not sure such functionality will appear. Remember that on the &#8220;alter table&#8221; you&#8217;d basically have to copy whole table to WAL &#8211; so that it will be on standby server(s). seems complicated.</p>
	</li>
		
		
			
<li class="odd" id="comment-32780" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32780" title="">#</a></span> <a href='http://www.gnegg.ch' rel='external nofollow' class='url'>Philip Hofstetter</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/117112d883960c8ed0e13823f88e45f1?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>After some thinking and discussions, I really think this is one of the best features I&#8217;ve ever seen appear in postgresql. I&#8217;m having to deal with so much data I could easily live with losing a certain amount of.</p>
<p>With this and minimal changes to my application, I could, for each table_with_not_so_important_data an unlogged clone unlogged_table_with_not_so_important data and a view all_table_with_not_so_important_data that just unions them.</p>
<p>Then I could write a script that in set intervals does a serialized transaction in which it just does insert into table_with_not_so_important_data (select * from unlogged_table_with_not_so_important_data); delete from unlogged_table_with_not_so_important_data. Using the pg_tables view, I could even find all the tables I&#8217;m concerned about, so it&#8217;s just one script running.</p>
<p>This is basically turning your first benchmark case (450&#8217;000 INSERTs, 15 minutes) into the second (1 copy, 3 seconds) at the cost of, say 10 minutes of possible data loss, which in my case is more than acceptable. Especially because it helps keeping the I/O load down, so every other query can benefit too.</p>
<p>I see myself using this in about four cases in the application in question (currently sometimes using just inserts, sometimes writing into a file and then processing those entries in bulk, which is considerably more work than my two-table-clones-approach).</p>
<p>This is amazing (for my usecase).</p>
<p>Philip</p>
	</li>
		
		
			
<li class="odd" id="comment-32782" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32782" title="">#</a></span> Marko Tiikkaja</div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>@Arthurr:</p>
<p>I think someone mentioned this on the development mailing list too, when trying to do fast bulk-loads into a table.  But there&#8217;s already a way to do that: if you create or TRUNCATE the table in the same transaction before COPYing or INSERTing, no WAL is written and you get the same speedup.</p>
	</li>
		
		
			
<li class="odd" id="comment-32783" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32783" title="">#</a></span> <a href='http://www.2ndquadrant.com/' rel='external nofollow' class='url'>Greg Smith</a></div>  <div class="date">Jan 3, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/c23b7f3e87b77eaa90e0f9353ffdc28f?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>The acceleration Marko is referring to isn&#8217;t always available.  If you have WAL archiving turned on, the capability to do fast bulk loading by doing TRUNCATE first goes away.  That makes it essentially unavailable for some environments.  Unlogged tables let you create faster semi-permanent tables on the master regardless of the archiving setup.</p>
	</li>
		
		
			
<li class="odd" id="comment-32788" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32788" title="">#</a></span> Jesper</div>  <div class="date">Jan 4, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/2bfd0ce1421bc5750cd3236fbf79af4b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Could the same infrastructure be utillized by &#8220;restores from dump&#8221; to speed up that usecase? </p>
<p>Jesper</p>
	</li>
		
		
			
<li class="odd" id="comment-32789" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32789" title="">#</a></span> Fernando Hartmann</div>  <div class="date">Jan 4, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/9de1661de8c00ab93e0474bd82bd2485?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Very interesting feature !<br />
But @arthurr reveled a very good point, this feature will be much more helpful  if we have the option to change the &#8220;unlogged&#8221; attribute, so we can use a table normally with all PG features, and WEN, only wen, we need to insert a lot of data, we can change the attribute and live with the risk of data loss.</p>
	</li>
		
		
			
<li class="odd" id="comment-32791" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32791" title="">#</a></span> Tira</div>  <div class="date">Jan 4, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/f3a8eef5f0d1547fc5ca7f5da9adf35e?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi</p>
<p>The most obvious use for such tables are temporary (intermediate) tables within functions.</p>
<p>For example a function that needs to calculate a temporary table which is then used to derive the final output. That temporary table is going to be dropped (possibly with &#8220;on commit drop&#8221;) anyhow at the end of the function, might as well make it unlogged and gain some performance.<br />
If the function fails in the middle (hardware failure, for example) then everything is rolled back and I don&#8217;t care that the temporary table got truncated (since it is bound to disappear anyhow).</p>
<p>Tira.</p>
	</li>
		
		
			
<li class="odd" id="comment-32792" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32792" title="">#</a></span> Marko Tiikkaja</div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>@Tira:</p>
<p>Regular temporary tables already behave like that.  There is no reason to use this feature for the use case you mentioned.</p>
	</li>
		
		
			
<li class="odd" id="comment-32794" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32794" title="">#</a></span> darkos</div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>this is an excellent capability though for any batch process where, if it were to die part way through, the entire batch process would be re-started, rather than trying to pick up from where it left off.</p>
	</li>
		
		
			
<li class="odd" id="comment-32796" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32796" title="">#</a></span> <a href='http://www.postgresonline.com' rel='external nofollow' class='url'>Regina</a></div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/fdeac731da75c06316d72bc9b401b953?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>This is a great feature.  I think it will make a lot of MySQLers looking for MyISAM type behavior happy.</p>
<p>2 cases for me where this is incredably useful.<br />
1) Stats tables &#8211; I have stats tables that are basically just rollups of existing data.  So if I lose the table in a crash, its not a big deal since I can reconstitute with a scheduled stored proc.  However since I&#8217;m rolling up a lot of data, the fast loading is really important.</p>
<p>2) Stupid web logs.  Heck if it crashed it wouldn&#8217;t really be too big of a deal &#8211; but again insert speed is really important.  Its not mission critical &#8212; just nice to have data (kind of like Twitter data that&#8217;s months old).</p>
	</li>
		
		
			
<li class="odd" id="comment-32797" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32797" title="">#</a></span> demo</div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/2dc80ab107b2b02a4a2599d713ba4779?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Will an unlogged table be writable on a synchronous replication slave?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-32798" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32798" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Demo:<br />
We&#8217;ll see, but I doubt that. As far as I understand, sync replication that will be (hopefully) in 9.1 will be based on wal shipping. since unlogged tables are not in wal &#8211; it will not be on slave.</p>
	</li>
		
		
			
<li class="odd" id="comment-32799" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32799" title="">#</a></span> <a href='http://tapoueh.org' rel='external nofollow' class='url'>dim</a></div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/7b615d104c506aa0a49e17151fa94d9f?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Another way to mitigate between unlogged performance and reliable data after a while would be using PGQ.</p>
<p>If you store the PGQ tables as unlogged and have a consumer that basically replays the traffic into the static table, you have that.</p>
<p>The performance gain will come from the fact that the consumer does the writes in batch and without concurrency, which is a huge performance drop as soon as WAL is concerned.</p>
<p>Also, we&#8217;re talking about 3s lag by default, which should make that approach sensible in lots of cases.  I guess.</p>
	</li>
		
		
			
<li class="odd" id="comment-32801" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32801" title="">#</a></span> <a href='http://notatnik.mekk.waw.pl' rel='external nofollow' class='url'>Mekk</a></div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/bc87ac1f18c71c8fad6703be6de20c44?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Immediate use which comes to mind: any kind of calculated/cached data. Whether it improves performance by caching denormalized/formatted data or by caching remotely loaded something, unlogged table can be sweet.</p>
<p>Is the data lost also when the table was not touched at all (= does recovery simply throw away all unlogged tables, or only those which would need an update)? If not, then partitioning by time could be used to limit the range of data loss&#8230;</p>
	</li>
		
		
			
<li class="mycomment" id="comment-32802" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32802" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 5, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Mekk:<br />
all unlogged tables are truncated on recovery. touched or untouched &#8211; all of them.</p>
<p>reason is very simple &#8211; since we don&#8217;t know what happened to them &#8211; we can&#8217;t assume anything about their content.</p>
	</li>
		
		
			
<li class="odd" id="comment-32808" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32808" title="">#</a></span> Mathew Frank</div>  <div class="date">Jan 6, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/afc3f80c1da8cbc37d1e0bb54577334d?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>This is REALLY useful for speeding up ETL (ELT for purists).  I usually turn off logs on Oracle for this reason.  Brilliant to see it in Postgres at last.</p>
<p>Why?  Because your etl code keeps track of each table you have loaded, and in the event of a crash, you just either start again from scratch (having lost no actual data) or from the table you were loading when it crashed.</p>
<p>The caveat for ETL is you still want logging on tables for which you store logging or change data that cannot be lost &#8211; ie no longer exists in source tables.</p>
	</li>
		
		
			
<li class="odd" id="comment-32851" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32851" title="">#</a></span> demo</div>  <div class="date">Jan 11, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/2dc80ab107b2b02a4a2599d713ba4779?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@depesz</p>
<p>So even the DML statements to create/delete the unlogged table are unlogged?</p>
<p>The use-case for the original question is that if an unlogged table was empty and writable on a synchronous slave, then it could be used as a cache for ca</p>
	</li>
		
		
			
<li class="odd" id="comment-33788" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33788" title="">#</a></span> Billy</div>  <div class="date">Jun 17, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/648c164384883b35df45b2847fc8bfcf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I&#8217;m hoping to be able to reproduce your benchmark on my own so I can re-run as 9.1 becomes more stable over time.  Any chance you could provide the specs for you environment and/or the actual code you used, or anything that might help?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-33789" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33789" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 17, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Billy: i&#8217;m not sure which machine I ran the tests on, but as for data &#8211; all scripts to create data are in the body of blogpost.</p>
	</li>
		
		
			
<li class="odd" id="comment-33796" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33796" title="">#</a></span> Billy</div>  <div class="date">Jun 17, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/648c164384883b35df45b2847fc8bfcf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I only ask because I believe I have replicated your 450,000 insert test but with less impressive results:</p>
<p>unlogged table: 29.549s, 22.196s, 22.486s.<br />
logged table: 49.497s, 59.519s, 51.108s.</p>
<p>As you can see, unlogged is still faster but by a factor of 2x, not 10x like yours.</p>
<p>I&#8217;m using &#8220;PostgreSQL 9.1beta2 on i686-pc-linux-gnu, compiled by gcc (GCC) 4.1.2 20080704<br />
(Red Hat 4.1.2-46), 32-bit&#8221;</p>
<p>I&#8217;m at a loss for how to explain the different results.  Any thoughts?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-33827" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33827" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 19, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Billy:<br />
no idea, sorry.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="1937" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="be97dd9390" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="120"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">2 comments</span> | <span class="wpp-views">646 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">4 comments</span> | <span class="wpp-views">621 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">284 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">224 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">154 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">149 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">135 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">131 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">121 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">105 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

