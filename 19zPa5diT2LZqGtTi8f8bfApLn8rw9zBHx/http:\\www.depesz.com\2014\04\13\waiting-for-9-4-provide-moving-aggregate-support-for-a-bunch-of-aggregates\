http://www.depesz.com/2014/04/13/waiting-for-9-4-provide-moving-aggregate-support-for-a-bunch-of-aggregates/
HTTP/1.1 200 OK
Server: nginx
Date: Wed, 23 Jul 2014 03:00:03 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2843>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Waiting for 9.4 &#8211; Provide moving-aggregate support for a bunch of aggregates.</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Waiting for 9.4 &#8211; Provide moving-aggregate support for a bunch of aggregates. Comments Feed" href="http://www.depesz.com/2014/04/13/waiting-for-9-4-provide-moving-aggregate-support-for-a-bunch-of-aggregates/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2014/04/13/waiting-for-9-4-provide-moving-aggregate-support-for-a-bunch-of-aggregates/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2843' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2843">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2014/04/13/waiting-for-9-4-provide-moving-aggregate-support-for-a-bunch-of-aggregates/" rel="bookmark" title="Permanent Link to Waiting for 9.4 &#8211; Provide moving-aggregate support for a bunch of aggregates.">Waiting for 9.4 &#8211; Provide moving-aggregate support for a bunch of aggregates.</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>April 13th, 2014 by depesz | Tags: <a href="http://www.depesz.com/tag/aggregate/" rel="tag">aggregate</a>, <a href="http://www.depesz.com/tag/frame/" rel="tag">frame</a>, <a href="http://www.depesz.com/tag/moving/" rel="tag">moving</a>, <a href="http://www.depesz.com/tag/pg94/" rel="tag">pg94</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/window/" rel="tag">window</a>, <a href="http://www.depesz.com/tag/window-functions/" rel="tag">window functions</a> |  <a href="http://www.depesz.com/2014/04/13/waiting-for-9-4-provide-moving-aggregate-support-for-a-bunch-of-aggregates/#comments" title="Comment on Waiting for 9.4 &#8211; Provide moving-aggregate support for a bunch of aggregates.">2 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>On 13th of April, Tom Lane <a href="http://git.postgresql.org/pg/commitdiff/9d229f399e87d2ae7132c2e8feef317ce1479728">committed</a> patch:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">Provide moving-aggregate support for a bunch of numerical aggregates.
&nbsp;
First installment of the promised moving-aggregate support in built-in
aggregates: count(), sum(), avg(), stddev() and variance() for
assorted datatypes, though not for float4/float8.
&nbsp;
In passing, remove a 2001-vintage kluge in interval_accum(): interval
array elements have been properly aligned since around 2003, but
nobody remembered to take out this workaround.  Also, fix a thinko
in the opr_sanity tests for moving-aggregate catalog entries.
&nbsp;
David Rowley and Florian Pflug, reviewed by Dean Rasheed</pre></td></tr></table></div>

<p>On the same day he also <a href="http://git.postgresql.org/pg/commitdiff/d95425c8b9d3ea1681bd91b76ce73be95ca5ee21">committed</a>:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">Provide moving-aggregate support for boolean aggregates.
&nbsp;
David Rowley and Florian Pflug, reviewed by Dean Rasheed</pre></td></tr></table></div>

<p><span id="more-2843"></span></p>
<p>A bit before these two happened, there was also other commit, that provided infrastructure for these aggregates.</p>
<p>So, what is it about?</p>
<p>As you know we have so called Window Functions. These can be used, for example, to calculate moving sum:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> i<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">sum</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">over</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> i <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i;
 i  <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">sum</span> 
<span style="color: #808080; font-style: italic;">----+-----</span>
  <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">1</span>
  <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">3</span>
  <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">6</span>
  <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">10</span>
  <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">15</span>
  <span style="color: #cc66cc;">6</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">21</span>
  <span style="color: #cc66cc;">7</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">28</span>
  <span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">36</span>
  <span style="color: #cc66cc;">9</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">45</span>
 <span style="color: #cc66cc;">10</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">55</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>What is less known/used, is that you can limit the &#8220;window" that the aggregate is using, for example &#8211; to 5 rows &#8220;around" current:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> i<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">sum</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">over</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #993333; font-weight: bold;">between</span> <span style="color: #cc66cc;">2</span> preceding <span style="color: #993333; font-weight: bold;">and</span> <span style="color: #cc66cc;">2</span> following <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> i <span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> i;
 i  <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">sum</span> 
<span style="color: #808080; font-style: italic;">----+-----</span>
  <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">6</span>
  <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">10</span>
  <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">15</span>
  <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">20</span>
  <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">25</span>
  <span style="color: #cc66cc;">6</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">30</span>
  <span style="color: #cc66cc;">7</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">35</span>
  <span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">40</span>
  <span style="color: #cc66cc;">9</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">34</span>
 <span style="color: #cc66cc;">10</span> <span style="color: #66cc66;">|</span>  <span style="color: #cc66cc;">27</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>For example &#8211; sum for i = 3 sums only 1, 2, 3, 4, 5.</p>
<p>Up until now, when doing this kind of aggregates, PostgreSQL had to recalculate the aggregate for each row.</p>
<p>So, for row:</p>
<ul>
<li>i=1, it did 1 + 2 + 3</li>
<li>i=2, it did 1 + 2 + 3 + 4</li>
<li>i=3, it did 1 + 2 + 3 + 4 + 5</li>
<li>i=4, it did 2 + 3 + 4 + 5 + 6</li>
<li>&#8230;</li>
<li>i=10, id did 8 + 9 + 10</li>
</ul>
<p>Despite &#8220;obvious" optimization of reusing calculation from previous row, and some &#8220;logic".</p>
<p>Now &#8211; the aggregates get much more parameters (compare <a href="http://www.postgresql.org/docs/9.3/static/sql-createaggregate.html">old</a> and <a href="http://www.postgresql.org/docs/devel/static/sql-createaggregate.html">new</a> versions of CREATE AGGREGATE docs), and they can &#8220;know" how to handle reuse of previous values.</p>
<p>Of course &#8211; it's not magical &#8211; aggregate has to be taught what it should do to &#8220;unaggregate" values that shouldn't be uses anymore.</p>
<p>Let's see how that would work. I'll make a string aggregate that can work with moving windows.</p>
<p>First, let's make some very simple test data:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #66cc66;">&#40;</span>id serial <span style="color: #993333; font-weight: bold;">primary</span> <span style="color: #993333; font-weight: bold;">key</span><span style="color: #66cc66;">,</span> payload text<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>
$ copy test<span style="color: #66cc66;">&#40;</span>payload<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> stdin;
a
b
c
d
e
\<span style="color: #66cc66;">.</span>
COPY <span style="color: #cc66cc;">5</span></pre></td></tr></table></div>

<p>Now. Let's write simple string concatenating aggregate, using custom functions so I can add there some notices:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">function</span> custom_concat<span style="color: #66cc66;">&#40;</span>text<span style="color: #66cc66;">,</span> text<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">returns</span> text <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">begin</span>
    raise notice <span style="color: #ff0000;">'custom_concat( %, % )'</span><span style="color: #66cc66;">,</span> $1<span style="color: #66cc66;">,</span> $2;
    <span style="color: #993333; font-weight: bold;">return</span> <span style="color: #993333; font-weight: bold;">coalesce</span><span style="color: #66cc66;">&#40;</span>$1<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">''</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">||</span> <span style="color: #993333; font-weight: bold;">coalesce</span><span style="color: #66cc66;">&#40;</span>$2<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">''</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">end</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> plpgsql;</pre></td></tr></table></div>

<p>Now, I can create test aggregate:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> aggregate dt<span style="color: #66cc66;">&#40;</span>text<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>
    sfunc <span style="color: #66cc66;">=</span> custom_concat<span style="color: #66cc66;">,</span>
    stype <span style="color: #66cc66;">=</span> text
<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> AGGREGATE</pre></td></tr></table></div>

<p>And quick check if it works:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> dt<span style="color: #66cc66;">&#40;</span>payload<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">over</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> id<span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">from</span> test
<span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> id;
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&lt;</span>NULL<span style="color: #66cc66;">&gt;,</span> a <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> a<span style="color: #66cc66;">,</span> b <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> ab<span style="color: #66cc66;">,</span> c <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> abc<span style="color: #66cc66;">,</span> d <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> abcd<span style="color: #66cc66;">,</span> e <span style="color: #66cc66;">&#41;</span>
 id <span style="color: #66cc66;">|</span>  dt   
<span style="color: #808080; font-style: italic;">----+-------</span>
  <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> a
  <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> ab
  <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> abc
  <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span> abcd
  <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span> abcde
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Nice. The function was called 5 times, all is well. But what will happen if I'll introduce moving frame?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> dt<span style="color: #66cc66;">&#40;</span>payload<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">over</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> id <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #993333; font-weight: bold;">between</span> <span style="color: #cc66cc;">1</span> preceding <span style="color: #993333; font-weight: bold;">and</span> <span style="color: #cc66cc;">1</span> following <span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">from</span> test
<span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> id;
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&lt;</span>NULL<span style="color: #66cc66;">&gt;,</span> a <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> a<span style="color: #66cc66;">,</span> b <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> ab<span style="color: #66cc66;">,</span> c <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&lt;</span>NULL<span style="color: #66cc66;">&gt;,</span> b <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> b<span style="color: #66cc66;">,</span> c <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> bc<span style="color: #66cc66;">,</span> d <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&lt;</span>NULL<span style="color: #66cc66;">&gt;,</span> c <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> c<span style="color: #66cc66;">,</span> d <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> cd<span style="color: #66cc66;">,</span> e <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&lt;</span>NULL<span style="color: #66cc66;">&gt;,</span> d <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> d<span style="color: #66cc66;">,</span> e <span style="color: #66cc66;">&#41;</span>
 id <span style="color: #66cc66;">|</span> dt  
<span style="color: #808080; font-style: italic;">----+-----</span>
  <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> ab
  <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> abc
  <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> bcd
  <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span> cde
  <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span> de
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Here we see some interesting things:</p>
<ul>
<li>even without any added logic, Pg is smart enough not to repeat concatenation of a and b for the 2nd row (abc)</li>
<li>these NULLs show when aggregate function was called from scratch &#8211; so it happened 4 times</li>
<li>all together, we had 11 concat calls</li>
</ul>
<p>Now, let's drop the aggregate, and add moving &#8220;sfunc":</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">drop</span> aggregate dt<span style="color: #66cc66;">&#40;</span>text<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">DROP</span> AGGREGATE
&nbsp;
<span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">function</span> ms_custom_concat<span style="color: #66cc66;">&#40;</span>text<span style="color: #66cc66;">,</span> text<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">returns</span> text <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">begin</span>
    raise notice <span style="color: #ff0000;">'ms_custom_concat( %, % )'</span><span style="color: #66cc66;">,</span> $1<span style="color: #66cc66;">,</span> $2;
    <span style="color: #993333; font-weight: bold;">if</span> <span style="color: #993333; font-weight: bold;">position</span><span style="color: #66cc66;">&#40;</span> $2 <span style="color: #993333; font-weight: bold;">in</span> $1 <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">then</span>
        <span style="color: #993333; font-weight: bold;">return</span> substr<span style="color: #66cc66;">&#40;</span>$1<span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">+</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>$2<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
    <span style="color: #993333; font-weight: bold;">end</span> <span style="color: #993333; font-weight: bold;">if</span>;
    <span style="color: #993333; font-weight: bold;">return</span> $1;
<span style="color: #993333; font-weight: bold;">end</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> plpgsql;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">FUNCTION</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">create</span> aggregate dt<span style="color: #66cc66;">&#40;</span>text<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#40;</span>
    sfunc <span style="color: #66cc66;">=</span> custom_concat<span style="color: #66cc66;">,</span>
    stype <span style="color: #66cc66;">=</span> text<span style="color: #66cc66;">,</span>
    msfunc <span style="color: #66cc66;">=</span> custom_concat<span style="color: #66cc66;">,</span>
    mstype <span style="color: #66cc66;">=</span> text<span style="color: #66cc66;">,</span>
    minvfunc <span style="color: #66cc66;">=</span> ms_custom_concat
<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> AGGREGATE</pre></td></tr></table></div>

<p>Now aggregate dt has second set of parameters &#8211; used only for &#8220;moving frame" type of queries &#8211; these are the msfunc/mstype/minvfunc.<br />
The important one is minvfunc which is used to reverse aggregate.</p>
<p>With this defined, I get:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> dt<span style="color: #66cc66;">&#40;</span>payload<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">over</span> <span style="color: #66cc66;">&#40;</span><span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> id <span style="color: #993333; font-weight: bold;">rows</span> <span style="color: #993333; font-weight: bold;">between</span> <span style="color: #cc66cc;">1</span> preceding <span style="color: #993333; font-weight: bold;">and</span> <span style="color: #cc66cc;">1</span> following <span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">from</span> test
<span style="color: #993333; font-weight: bold;">order</span> <span style="color: #993333; font-weight: bold;">by</span> id;
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&lt;</span>NULL<span style="color: #66cc66;">&gt;,</span> a <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> a<span style="color: #66cc66;">,</span> b <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> ab<span style="color: #66cc66;">,</span> c <span style="color: #66cc66;">&#41;</span>
NOTICE:  ms_custom_concat<span style="color: #66cc66;">&#40;</span> abc<span style="color: #66cc66;">,</span> a <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> bc<span style="color: #66cc66;">,</span> d <span style="color: #66cc66;">&#41;</span>
NOTICE:  ms_custom_concat<span style="color: #66cc66;">&#40;</span> bcd<span style="color: #66cc66;">,</span> b <span style="color: #66cc66;">&#41;</span>
NOTICE:  custom_concat<span style="color: #66cc66;">&#40;</span> cd<span style="color: #66cc66;">,</span> e <span style="color: #66cc66;">&#41;</span>
NOTICE:  ms_custom_concat<span style="color: #66cc66;">&#40;</span> cde<span style="color: #66cc66;">,</span> c <span style="color: #66cc66;">&#41;</span>
 id <span style="color: #66cc66;">|</span> dt  
<span style="color: #808080; font-style: italic;">----+-----</span>
  <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> ab
  <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> abc
  <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> bcd
  <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">|</span> cde
  <span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">|</span> de
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>5 calls to custom_concat + 3 to ms_custom_concat. That's nice. Generally &#8211; the larger the &#8220;frame" the better these new aggregates will be. Of course there is non-zero cost of calling inversion function, but, if written correctly &#8211; it shouldn't be a big problem.</p>
<p>One additional thing to note &#8211; moving aggregate can use different &#8220;storage type" (that's why I had both stype and mstype). So you can, for example, choose different algorithm and temporary storage for moving aggregates. And that's definitely cool. Thanks guys.</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">2 comments <a href='http://www.depesz.com/2014/04/13/waiting-for-9-4-provide-moving-aggregate-support-for-a-bunch-of-aggregates/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-45404" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45404" title="">#</a></span> <a href='http://michael.otacoo.com' rel='external nofollow' class='url'>Michael Paquier</a></div>  <div class="date">Apr 14, 2014</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/81099862bde55b51bc65f6a64545b66e?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>There&#8217;s a type here:<br />
&#8220;Pg is smart enough not to repeat concatenation of and b for the 2nd row.&#8221;<br />
It should be &#8220;concatenation of a and b&#8221;.</p>
<p>Btw, nicely explained!</p>
	</li>
		
		
			
<li class="mycomment" id="comment-45405" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-45405" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Apr 14, 2014</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Michael:<br />
thanks, fixed.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2843" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="79d262940f" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="2"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">4 comments</span> | <span class="wpp-views">587 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">364 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">251 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">192 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">147 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">132 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">118 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">116 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">116 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/11/14/how-i-learned-to-stop-worrying-and-love-the-triggers/" title="How I Learned to Stop Worrying and Love the Triggers" class="wpp-post-title" target="_self">How I Learned to Stop Worrying and Love the Triggers</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">97 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

