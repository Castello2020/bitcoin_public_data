http://www.depesz.com/2011/03/04/waiting-for-9-1-per-column-collation-support/
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 12:17:42 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2114>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Waiting for 9.1 &#8211; Per-column collation support</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Waiting for 9.1 &#8211; Per-column collation support Comments Feed" href="http://www.depesz.com/2011/03/04/waiting-for-9-1-per-column-collation-support/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2011/03/04/waiting-for-9-1-per-column-collation-support/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2114' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2114">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2011/03/04/waiting-for-9-1-per-column-collation-support/" rel="bookmark" title="Permanent Link to Waiting for 9.1 &#8211; Per-column collation support">Waiting for 9.1 &#8211; Per-column collation support</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>March 4th, 2011 by depesz | Tags: <a href="http://www.depesz.com/tag/collate/" rel="tag">collate</a>, <a href="http://www.depesz.com/tag/collation/" rel="tag">collation</a>, <a href="http://www.depesz.com/tag/email/" rel="tag">email</a>, <a href="http://www.depesz.com/tag/index/" rel="tag">index</a>, <a href="http://www.depesz.com/tag/like/" rel="tag">like</a>, <a href="http://www.depesz.com/tag/locale/" rel="tag">locale</a>, <a href="http://www.depesz.com/tag/order/" rel="tag">order</a>, <a href="http://www.depesz.com/tag/pg91/" rel="tag">pg91</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a> |  <a href="http://www.depesz.com/2011/03/04/waiting-for-9-1-per-column-collation-support/#comments" title="Comment on Waiting for 9.1 &#8211; Per-column collation support">8 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>On 8th of February, Peter Eisentraut <a href="http://archives.postgresql.org/pgsql-committers/2011-02/msg00096.php">committed</a> patch:</p>
<p><code>Per-column collation support<br />
&nbsp;<br />
This adds collation support for columns and domains, a COLLATE clause<br />
to override it per expression, and B-tree index support.<br />
&nbsp;<br />
Peter Eisentraut<br />
reviewed by Pavel Stehule, Itagaki Takahiro, Robert Haas, Noah Misch<br />
&nbsp;<br />
Branch<br />
------<br />
master</code></p>
<p><span id="more-2114"></span></p>
<p>This is really, really great.</p>
<p>Let's see. I have 9.1 database with American locale (en_US.UTF-8):</p>
<p><code>$ select name, setting from pg_settings where name ~ 'lc_';<br />
    name     |   setting<br />
-------------+-------------<br />
 lc_collate  | en_US.UTF-8<br />
 lc_ctype    | en_US.UTF-8<br />
 lc_messages | en_US.UTF-8<br />
 lc_monetary | en_US.UTF-8<br />
 lc_numeric  | en_US.UTF-8<br />
 lc_time     | en_US.UTF-8<br />
(6 rows)</code></p>
<p>Now, let's assume we want some Polish words:</p>
<p><code>$ create table normal_polish ( some_text text );<br />
CREATE TABLE<br />
&nbsp;<br />
$ copy normal_polish from '/tmp/polish';<br />
COPY 14<br />
&nbsp;<br />
$ select * from normal_polish ;<br />
 some_text<br />
-----------<br />
 ćma<br />
 łódka<br />
 śnieg<br />
 mama<br />
 ser<br />
 car<br />
 lama<br />
 żółw<br />
 zorza<br />
 tata<br />
 źdźbło<br />
 coś<br />
 alfa<br />
 szopa<br />
(14 rows)</code></p>
<p>and some Czech:</p>
<p><code>$ create table normal_czech ( some_text text );<br />
CREATE TABLE<br />
&nbsp;<br />
$ copy normal_czech from '/tmp/czech';<br />
COPY 8<br />
&nbsp;<br />
(depesz@[local]:5910) 13:56:54 [depesz]<br />
$ select * from normal_czech ;<br />
 some_text<br />
-----------<br />
 1234<br />
 červený<br />
 chleba<br />
 cihla<br />
 damašek<br />
 žluťoučký<br />
 kůň<br />
 zelí<br />
(8 rows)</code></p>
<p>The problem is that while sorted outputs can look sensible to others &#8211; they are not properly sorted in Polish and Czech languages:</p>
<p><code>$ select * from normal_czech order by some_text;<br />
 some_text<br />
-----------<br />
 1234<br />
 červený<br />
 chleba<br />
 cihla<br />
 damašek<br />
 kůň<br />
 zelí<br />
 žluťoučký<br />
(8 rows)<br />
&nbsp;<br />
$ select * from normal_polish order by some_text;<br />
 some_text<br />
-----------<br />
 alfa<br />
 car<br />
 ćma<br />
 coś<br />
 lama<br />
 łódka<br />
 mama<br />
 ser<br />
 śnieg<br />
 szopa<br />
 tata<br />
 źdźbło<br />
 żółw<br />
 zorza<br />
(14 rows)</code></p>
<p>Up to 9.0 you couldn't really do anything about it.</p>
<p>But now, I can:</p>
<p><code>$ create table collated_polish (some_text text collate &quot;pl_PL.utf8&quot;);<br />
CREATE TABLE<br />
&nbsp;<br />
$ copy collated_polish from '/tmp/polish';<br />
COPY 14<br />
&nbsp;<br />
$ select * from collated_polish order by some_text;<br />
 some_text<br />
-----------<br />
 alfa<br />
 car<br />
 coś<br />
 ćma<br />
 lama<br />
 łódka<br />
 mama<br />
 ser<br />
 szopa<br />
 śnieg<br />
 tata<br />
 zorza<br />
 źdźbło<br />
 żółw<br />
(14 rows)</code></p>
<p>It's interesting, because I had pl_PL locales installed when doing initdb, but I didn't have cs_CZ, so it will fail:</p>
<p><code>$ create table collated_czech (some_text text collate &quot;cs_CZ.utf8&quot;);<br />
ERROR:  collation &quot;cs_CZ.utf8&quot; for current database encoding &quot;UTF8&quot; does not exist<br />
LINE 1: create table collated_czech (some_text text collate &quot;cs_CZ.u...<br />
                                               ^</code></p>
<p>Luckily, with all locale files for cs_CZ installed, fixing it is simple:</p>
<p><code>$ CREATE COLLATION &quot;cs_CZ.utf8&quot; ( locale = 'cs_CZ.UTF-8' );<br />
CREATE COLLATION<br />
&nbsp;<br />
$ create table collated_czech (some_text text collate &quot;cs_CZ.utf8&quot;);<br />
CREATE TABLE<br />
&nbsp;<br />
$ copy collated_czech from '/tmp/czech';<br />
COPY 8<br />
&nbsp;<br />
$ select * from collated_czech order by some_text;<br />
ERROR:  could not create locale &quot;cs_CZ.UTF-8&quot;: Success</code></p>
<p>The last error is actually pretty bad. I mean &#8211; we all know stories about error dialogs saying &#8220;error: success", but apparently now it did hit PostgreSQL too.</p>
<p>The problem in here is that I added the locale to system, but didn't restart PostgreSQL. So, a quick restart later:</p>
<p><code>$ select * from collated_czech order by some_text;<br />
 some_text<br />
-----------<br />
 cihla<br />
 červený<br />
 damašek<br />
 chleba<br />
 kůň<br />
 zelí<br />
 žluťoučký<br />
 1234<br />
(8 rows)</code></p>
<p>And how can you check what collations there are already? Simple, just:</p>
<p><code>$ select * from pg_collation;</code></p>
<p>Of course you can have columns of different collations within single table, like this:</p>
<p><code>$ create table collated_mix (english text, polish text collate &quot;pl_PL.utf8&quot;, czech text collate &quot;cs_CZ.utf8&quot;, basic text collate ucs_basic);<br />
CREATE TABLE<br />
&nbsp;<br />
$ \d collated_mix<br />
     Table &quot;public.collated_mix&quot;<br />
 Column  | Type |     Modifiers<br />
---------+------+--------------------<br />
 english | text |<br />
 polish  | text | collate pl_PL.utf8<br />
 czech   | text | collate cs_CZ.utf8<br />
 basic   | text | collate ucs_basic</code></p>
<p>Now. I did put there 10000 rows, each containing the same (within a row) values. Each value is 10 character string containing only these characters:</p>
<p><code>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&amp;*()-=_+[]{},./&lt;&gt;?;:&quot;|</code></p>
<p>Data looks like this:</p>
<p><code>$ select * from collated_mix  limit 10;<br />
  english   |   polish   |   czech    |   basic<br />
------------+------------+------------+------------<br />
 [m49rLoOdL | [m49rLoOdL | [m49rLoOdL | [m49rLoOdL<br />
 4HIQT-Kc*c | 4HIQT-Kc*c | 4HIQT-Kc*c | 4HIQT-Kc*c<br />
 )#*aD&gt;$e^k | )#*aD&gt;$e^k | )#*aD&gt;$e^k | )#*aD&gt;$e^k<br />
 /s5;@wIO/v | /s5;@wIO/v | /s5;@wIO/v | /s5;@wIO/v<br />
 j;_!NEjhqP | j;_!NEjhqP | j;_!NEjhqP | j;_!NEjhqP<br />
 .Y0z)EvlsY | .Y0z)EvlsY | .Y0z)EvlsY | .Y0z)EvlsY<br />
 4l|9i!^@;y | 4l|9i!^@;y | 4l|9i!^@;y | 4l|9i!^@;y<br />
 VgwGF.UyZ/ | VgwGF.UyZ/ | VgwGF.UyZ/ | VgwGF.UyZ/<br />
 ?RR;|8But# | ?RR;|8But# | ?RR;|8But# | ?RR;|8But#<br />
 2xM1&amp;^#kez | 2xM1&amp;^#kez | 2xM1&amp;^#kez | 2xM1&amp;^#kez<br />
(10 rows)</code></p>
<p>Sorting the rows using different columns show how's that different:</p>
<p><code>$ select * from collated_mix  order by english limit 5;<br />
  english   |   polish   |   czech    |   basic<br />
------------+------------+------------+------------<br />
 &lt;01a=WS%gp | &lt;01a=WS%gp | &lt;01a=WS%gp | &lt;01a=WS%gp<br />
 0:1iRvr64t | 0:1iRvr64t | 0:1iRvr64t | 0:1iRvr64t<br />
 01mM;g&amp;BP; | 01mM;g&amp;BP; | 01mM;g&amp;BP; | 01mM;g&amp;BP;<br />
 :01OJsyOf; | :01OJsyOf; | :01OJsyOf; | :01OJsyOf;<br />
 01uoah,MT7 | 01uoah,MT7 | 01uoah,MT7 | 01uoah,MT7<br />
(5 rows)<br />
&nbsp;<br />
$ select * from collated_mix  order by polish limit 5;<br />
  english   |   polish   |   czech    |   basic<br />
------------+------------+------------+------------<br />
 &lt;01a=WS%gp | &lt;01a=WS%gp | &lt;01a=WS%gp | &lt;01a=WS%gp<br />
 0:1iRvr64t | 0:1iRvr64t | 0:1iRvr64t | 0:1iRvr64t<br />
 01mM;g&amp;BP; | 01mM;g&amp;BP; | 01mM;g&amp;BP; | 01mM;g&amp;BP;<br />
 :01OJsyOf; | :01OJsyOf; | :01OJsyOf; | :01OJsyOf;<br />
 01uoah,MT7 | 01uoah,MT7 | 01uoah,MT7 | 01uoah,MT7<br />
(5 rows)<br />
&nbsp;<br />
$ select * from collated_mix  order by czech limit 5;<br />
  english   |   polish   |   czech    |   basic<br />
------------+------------+------------+------------<br />
 AAA&gt;P&gt;#&gt;^_ | AAA&gt;P&gt;#&gt;^_ | AAA&gt;P&gt;#&gt;^_ | AAA&gt;P&gt;#&gt;^_<br />
 +!AA/B/Zug | +!AA/B/Zug | +!AA/B/Zug | +!AA/B/Zug<br />
 Aa=Ca)K71b | Aa=Ca)K71b | Aa=Ca)K71b | Aa=Ca)K71b<br />
 aAFJ^1EwsY | aAFJ^1EwsY | aAFJ^1EwsY | aAFJ^1EwsY<br />
 aAi&lt;dQAhld | aAi&lt;dQAhld | aAi&lt;dQAhld | aAi&lt;dQAhld<br />
(5 rows)<br />
&nbsp;<br />
$ select * from collated_mix  order by basic limit 5;<br />
  english   |   polish   |   czech    |   basic<br />
------------+------------+------------+------------<br />
 !!1&lt;bJ;jio | !!1&lt;bJ;jio | !!1&lt;bJ;jio | !!1&lt;bJ;jio<br />
 !!&gt;N(g&quot;mYq | !!&gt;N(g&quot;mYq | !!&gt;N(g&quot;mYq | !!&gt;N(g&quot;mYq<br />
 !!N&gt;s{*;c^ | !!N&gt;s{*;c^ | !!N&gt;s{*;c^ | !!N&gt;s{*;c^<br />
 !!QuMts/1^ | !!QuMts/1^ | !!QuMts/1^ | !!QuMts/1^<br />
 !&quot;I7&lt;d.33g | !&quot;I7&lt;d.33g | !&quot;I7&lt;d.33g | !&quot;I7&lt;d.33g<br />
(5 rows)</code></p>
<p>The interesting thing is ucs_basic collation, which works like &#8220;C" locale. That is &#8211; it doesn't care about real order of letters, just compares their numerical values. Which is usually not helpful, until you'd want to do like, on them:</p>
<p><code>$ create index i1 on collated_mix (english);<br />
CREATE INDEX<br />
&nbsp;<br />
$ create index i2 on collated_mix (polish);<br />
CREATE INDEX<br />
&nbsp;<br />
$ create index i3 on collated_mix (czech);<br />
CREATE INDEX<br />
&nbsp;<br />
$ create index i4 on collated_mix (basic);<br />
CREATE INDEX</code></p>
<p>And now queries:</p>
<p><code>$ explain select * from collated_mix  where english like 'abc%';<br />
                          QUERY PLAN<br />
---------------------------------------------------------------<br />
 Seq Scan on collated_mix  (cost=0.00..219.00 rows=1 width=44)<br />
   Filter: (english ~~ 'abc%'::text)<br />
(2 rows)<br />
&nbsp;<br />
$ explain select * from collated_mix  where polish like 'abc%';<br />
                          QUERY PLAN<br />
---------------------------------------------------------------<br />
 Seq Scan on collated_mix  (cost=0.00..219.00 rows=1 width=44)<br />
   Filter: (polish ~~ 'abc%'::text)<br />
(2 rows)<br />
&nbsp;<br />
$ explain select * from collated_mix  where czech like 'abc%';<br />
                          QUERY PLAN<br />
---------------------------------------------------------------<br />
 Seq Scan on collated_mix  (cost=0.00..219.00 rows=1 width=44)<br />
   Filter: (czech ~~ 'abc%'::text)<br />
(2 rows)<br />
&nbsp;<br />
$ explain select * from collated_mix  where basic like 'abc%';<br />
                               QUERY PLAN<br />
------------------------------------------------------------------------<br />
 Index Scan using i4 on collated_mix  (cost=0.00..8.27 rows=1 width=44)<br />
   Index Cond: ((basic &gt;= 'abc'::text) AND (basic &lt; 'abd'::text))<br />
   Filter: (basic ~~ 'abc%'::text)<br />
(3 rows)</code></p>
<p>Of course, if you know anything about PostgreSQL, you know that you could use text_pattern_ops, and varchar_pattern_ops to get like &#8216;&#8230;%' from indexes, but the thing is &#8211; that you couldn't do it on primary key index!</p>
<p>Which made it necessary to have 2 indexes.</p>
<p>Now, you can have table, with primary key being email in ucs_basic collation, and the like operator will work well:</p>
<p><code>$ create table users ( email text collate ucs_basic primary key );<br />
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index &quot;users_pkey&quot; for table &quot;users&quot;<br />
CREATE TABLE<br />
&nbsp;<br />
$ explain select * from users where email like 'dep%';<br />
                               QUERY PLAN<br />
-------------------------------------------------------------------------<br />
 Bitmap Heap Scan on users  (cost=4.32..14.47 rows=7 width=32)<br />
   Filter: (email ~~ 'dep%'::text)<br />
   -&gt;  Bitmap Index Scan on users_pkey  (cost=0.00..4.32 rows=7 width=0)<br />
         Index Cond: ((email &gt;= 'dep'::text) AND (email &lt; 'deq'::text))<br />
(4 rows)</code></p>
<p>YEAH! Congratulations and thanks (a lot of them) go to author and reviewers.</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">8 comments <a href='http://www.depesz.com/2011/03/04/waiting-for-9-1-per-column-collation-support/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-33197" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33197" title="">#</a></span> Lafriks</div>  <div class="date">Mar 4, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>That&#8217;s just superb! Looks like this will be great release! <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="odd" id="comment-33203" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33203" title="">#</a></span> <a href='http://gurjeet-tech.blogspot.com' rel='external nofollow' class='url'>Gurjeet Singh</a></div>  <div class="date">Mar 5, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/2752422e98586f8451b6bf22c3af4a18?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>A big thank you to Peter and all the reviewers for the feature.</p>
<p>And thank you Depesz for the &#8216;Waiting for&#8217; series.</p>
	</li>
		
		
			
<li class="odd" id="comment-33367" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33367" title="">#</a></span> <a href='http://www.saurik.com/' rel='external nofollow' class='url'>Jay Freeman (saurik)</a></div>  <div class="date">Apr 24, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/2aeddf3522b96c79031ae5e460bd9b40?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Am I the only person who is disappointed that &#8220;per-column&#8221; collation has been accepted rather than doing something with operator classes?</p>
<p>The actual use case for arbitrary collation is being able to change the locale based on a user-specified property, like Accept-Language on HTTP. If a user comes to my website and speaks French, I need to sort the data I return to him in French collation order. If my website primarily serves users who speak English and French, it would be great to be able to have two indexes, one specified with English collation, and one specified with French collation.</p>
<p>The easiest way to make that a reality, meanwhile, is to make this a property of an operator class. Much like I can use text_pattern_ops in order build indexes or do order by operations using the C locale, even when my database is set to en_US, I should be able to get text_eu_US_pattern_ops. In an /ideal/ world, using a &#8220;meta operator class&#8221;, like text_locale_ops(&#8216;en_US&#8217;).</p>
<p>Can someone please explain to me in what way is this ever a property of a column? What is the use case for having multiple columns, each with their own fixed locale?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-33368" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33368" title="">#</a></span> <a href='http://depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Apr 24, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Jay:<br />
Reason is very simple. If it was query-based, than you couldn&#8217;t have index on the column.</p>
<p>Indexes make sense only if there is well defined less-than and greater-than operators. Which &#8211; if you&#8217;d make the collation query-definable &#8211; wouldn&#8217;t be well defined, because it would be different from one query to another.</p>
	</li>
		
		
			
<li class="odd" id="comment-33641" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33641" title="">#</a></span> Marcin</div>  <div class="date">Jun 9, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>@Depesz:<br />
Yes, your right. But wy not use functional indexes, like this:<br />
CREATE INDEX same_text_idx ON test (collation(same_text, &#8216;pl_PL.utf8&#8242;));<br />
CREATE INDEX same_text_idx ON test (collation(same_text, &#8216;cz_CZ.utf8&#8242;));<br />
&#8230;</p>
<p>SELECT * FROM test ORDER BY collation(same_text, &#8216;cz_CZ.utf8&#8242;);<br />
?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-33644" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33644" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 9, 2011</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Marcin:<br />
Function based collation is possible in earlier Pgs too, just write smart enough collation() function.</p>
<p>So it&#8217;s not that it has been chosen instead, but rather &#8211; new way has been added, which is based on normal indexes, and one-time definition of data collation (instead of redefinition on every query).</p>
	</li>
		
		
			
<li class="odd" id="comment-33649" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-33649" title="">#</a></span> Marcin</div>  <div class="date">Jun 9, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Yes, but it&#8217;s pity that PostgreSQL don&#8217;t offer method like collation(str, locale) from my example, just &#8220;out of the box&#8221;;-)</p>
	</li>
		
		
			
<li class="odd" id="comment-34113" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34113" title="">#</a></span> <a href='http://www.saurik.com/' rel='external nofollow' class='url'>Jay Freeman (saurik)</a></div>  <div class="date">Sep 12, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/2aeddf3522b96c79031ae5e460bd9b40?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Depesz:</p>
<p>The problem with defining it with the data is that it isn&#8217;t a property of the data. You now expect to find 7 identical columns in a row that all collate differently, but otherwise have the exact same contents. What you want are simply 7 different indexes, and we already have that feature using operator classes: you define indexes for the queries you want to accelerate, and you can specify the collations you want to support. You already can already use a custom operator during ORDER BY (thanks to USING), and you already can use a custom operator for comparison (thanks to, well, operators), but what you can&#8217;t do is have a &#8220;meta operator class&#8221;, something that takes an argument (the name of a collation) and returns an operator class: we don&#8217;t have a solution for the fact that there are an arbitrary number of collations. If this one feature were added, then this collation feature would already be supported, and we wouldn&#8217;t need to duplicate our data in our rows: the engine is already smart enough to choose the right index from the 7 indexes we have based on the operators being used (and if you don&#8217;t believe that, an obvious case is text_pattern_ops, which already smooths over a specific collation issue between whatever you are currently using and C collation for byte-based ordering).</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2114" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a20d694eb6" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="48"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">335 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">314 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">264 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">207 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">156 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">133 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">133 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">131 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">103 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

