http://www.depesz.com/2013/09/11/how-to-make-backups-of-postgresql/
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 04:20:54 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2753>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; How to make backups of PostgreSQL?</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; How to make backups of PostgreSQL? Comments Feed" href="http://www.depesz.com/2013/09/11/how-to-make-backups-of-postgresql/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2013/09/11/how-to-make-backups-of-postgresql/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2753' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2753">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2013/09/11/how-to-make-backups-of-postgresql/" rel="bookmark" title="Permanent Link to How to make backups of PostgreSQL?">How to make backups of PostgreSQL?</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>September 11th, 2013 by depesz | Tags: <a href="http://www.depesz.com/tag/backup/" rel="tag">backup</a>, <a href="http://www.depesz.com/tag/linux/" rel="tag">linux</a>, <a href="http://www.depesz.com/tag/pg_dump/" rel="tag">pg_dump</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/wiki/" rel="tag">wiki</a> |  <a href="http://www.depesz.com/2013/09/11/how-to-make-backups-of-postgresql/#comments" title="Comment on How to make backups of PostgreSQL?">10 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>Recently someone was looking for help with <a href="http://wiki.postgresql.org/wiki/Automated_Backup_on_Linux">script from Pg wiki</a>.</p>
<p>I never really checked it, but when talking with the guy needing help, I looked at it. And didn't really like it.</p>
<p><span id="more-2753"></span></p>
<p>For starters &#8211; the scripts are huge &#8211; over 9kB. Second &#8211; they use techniques that are not that great (I'm talking about bash scripting/programming, not Pg related stuff).</p>
<p>Based on problems of the guy from IRC, decided to write something. Maybe it will not have all the functionality, but at the very least &#8211; it should be simpler to understand, and fit on single screen.</p>
<p>Before I will go to this, let me first provide some theory.</p>
<p>There are at least two kinds of backups that PostgreSQL handles. pg_dump way &#8211; which (more or less) generates SQL script that you can load to any new database using psql, and file-level backup &#8211; which is basically tarball of whole data directory, and as such cannot be loaded to existing database, but rather &#8211; can be untarred, and Pg can be started from it.</p>
<p>Both approaches have their benefits and drawbacks, of course:</p>
<p>pg_dump is simpler. It is also smaller. You can load just parts of it, and you can load it to any database you want.</p>
<p>file level backup is larger, and cannot be loaded to existing database. On the other hand &#8211; it contains <em>everything</em> about the source database, including things like bloat, statistics, and all kind of metainformation.</p>
<p>The script on the wiki page is for pg_dump backups. It's basically a wrapper around pg_dump that does some smart things, and is configurable.</p>
<p>So, let's try to get most of its functionality, without writing 9kB of code.</p>
<p>Simplest backup of database can be done using:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dump <span style="color: #660033;">-f</span> <span style="color: #000000; font-weight: bold;">/</span>var<span style="color: #000000; font-weight: bold;">/</span>backups<span style="color: #000000; font-weight: bold;">/</span>pg-database_name.sql database_name</pre></td></tr></table></div>

<p>Output ( file /var/backups/pg-database_name.sql ) is plain sql script that will create all tables, and load data.</p>
<p>That's fine, but it's better to use so called &#8220;custom format". Thanks to this you will get ability to easily pick what to restore, and what not to restore. Luckily the change is simple:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> <span style="color: #000000; font-weight: bold;">/</span>var<span style="color: #000000; font-weight: bold;">/</span>backups<span style="color: #000000; font-weight: bold;">/</span>pg-database_name.dump database_name</pre></td></tr></table></div>

<p>Great. What about compressing it? Well, it just so happens that it already is compressed. The data at least. If you'd do `strings /var/backups/pg-database_name.dump | less` you would notice sql queries, but these are only for schema creation, not data loading!</p>
<p>But this dumps only single database. How can we dump more?</p>
<p>You could, of course, write multiple pg_dump commands. But on the other hand &#8211; we have full power of shell to utilize, so why don't we use it?</p>
<p>First, list of all databases, that might contain data, sorted from largest to smallest:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">psql <span style="color: #660033;">-qAtX</span> <span style="color: #660033;">-c</span> <span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span></pre></td></tr></table></div>

<p>What it does it gets all rows from pg_database table (which conveniently contains information on all databases, limits to these that users can connect to (it removes template0, which is important for Pg, but not important for backups), and sorts by database size.</p>
<p>Now, with this in place, we can use returned names and run pg_dumps for all of the databases:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">psql <span style="color: #66cc66;">-</span>qAtX <span style="color: #66cc66;">-</span>c <span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span> <span style="color: #66cc66;">|</span> \
    xargs <span style="color: #66cc66;">-</span>d<span style="color: #ff0000;">'<span style="color: #000099; font-weight: bold;">\n</span>'</span> <span style="color: #66cc66;">-</span>I<span style="color: #66cc66;">&#123;</span><span style="color: #66cc66;">&#125;</span> pg_dump <span style="color: #66cc66;">-</span>Fc <span style="color: #66cc66;">-</span>f pg<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#123;</span><span style="color: #66cc66;">&#125;</span><span style="color: #66cc66;">.</span>dump <span style="color: #66cc66;">&#123;</span><span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>This is more complex, so let's look at it more closely.</p>
<p>Output from psql (which is list of databases, one database name per line) is feed to xargs.</p>
<p>Xargs will read it, and split on line end (-d'\n'). Next, for each line, it will run:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> pg-<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>.dump <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span></pre></td></tr></table></div>

<p>where {} will be changed to database name.</p>
<p>So, for example, if your largest database is named &#8220;main_db" it will call:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> pg-main_db.dump main_db</pre></td></tr></table></div>

<p>What's more. xargs program has the great thing that is -P option. This makes it possible to run the backups in parallel.</p>
<p>For example:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">psql <span style="color: #660033;">-qAtX</span> <span style="color: #660033;">-c</span> <span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span> <span style="color: #000000; font-weight: bold;">|</span> \
    <span style="color: #c20cb9; font-weight: bold;">xargs</span> <span style="color: #660033;">-d</span><span style="color: #ff0000;">'\n'</span> -I<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span> <span style="color: #660033;">-P2</span> pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> pg-<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>.dump <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span></pre></td></tr></table></div>

<p>would dump 2 databases at the same time.</p>
<p>With this in place, we can have backup of every database. But &#8211; there is no dump of roles. Database dumps to contain tables, data, views, functions and even privileges, but not the users themselves.</p>
<p>To add dump of roles, we need to use pg_dumpall program and its -r option:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dumpall <span style="color: #660033;">-r</span> <span style="color: #000000; font-weight: bold;">&gt;</span> roles.sql</pre></td></tr></table></div>

<p>pg_dumpall can be used to dump all databases, but I don't use it because:</p>
<ul>
<li>it dumps everything into one single file</li>
<li>it uses plain text format, which means it's more complicated to extract just a bit from the dump</li>
</ul>
<p>So, script to dump roles, and all databases is currently:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dumpall <span style="color: #660033;">-r</span> <span style="color: #000000; font-weight: bold;">&gt;</span> roles.sql
psql <span style="color: #660033;">-qAtX</span> <span style="color: #660033;">-c</span> <span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span> <span style="color: #000000; font-weight: bold;">|</span> \
    <span style="color: #c20cb9; font-weight: bold;">xargs</span> <span style="color: #660033;">-d</span><span style="color: #ff0000;">'\n'</span> -I<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span> <span style="color: #660033;">-P2</span> pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> pg-<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>.dump <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span></pre></td></tr></table></div>

<p>Now, you could say that it's unreadable. To this, I can only answer with:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">pg_dumpall <span style="color: #660033;">--roles-only</span> <span style="color: #000000; font-weight: bold;">&gt;</span> roles.sql
psql <span style="color: #660033;">--quiet</span> <span style="color: #660033;">--no-align</span> <span style="color: #660033;">--tuples-only</span> <span style="color: #660033;">--no-psqlrc</span> <span style="color: #660033;">--command</span>=<span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span> <span style="color: #000000; font-weight: bold;">|</span> \
    <span style="color: #c20cb9; font-weight: bold;">xargs</span> <span style="color: #660033;">--delimiter</span>=<span style="color: #ff0000;">'\n'</span> -I<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span> <span style="color: #660033;">--max-procs</span>=<span style="color: #000000;">2</span> pg_dump <span style="color: #660033;">--format</span>=c <span style="color: #660033;">--file</span>=pg-<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>.dump <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span></pre></td></tr></table></div>

<p>Interestingly, -I option for xargs doesn't have long version (&#8211;replace is for -i, not -I).</p>
<p>Anyway. We have the dump. Now what about keeping more than one, and removing old ones?</p>
<p>I assume we're on Linux system with GNU utils. This is important, because on other systems base shell tools are <em>backward compatible</em>, which means &#8211; very limited in their uses.</p>
<p>But on Linux we can write:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/usr/bin/env bash</span>
<span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #000000; font-weight: bold;">/</span>var<span style="color: #000000; font-weight: bold;">/</span>backups<span style="color: #000000; font-weight: bold;">/</span>pg
<span style="color: #007800;">backup_dir</span>=$<span style="color: #7a0874; font-weight: bold;">&#40;</span> <span style="color: #c20cb9; font-weight: bold;">date</span> +<span style="color: #000000; font-weight: bold;">%</span>Y-<span style="color: #000000; font-weight: bold;">%</span>m-<span style="color: #000000; font-weight: bold;">%</span>d <span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #c20cb9; font-weight: bold;">mkdir</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$backup_dir</span>&quot;</span>
<span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$backup_dir</span>&quot;</span>
pg_dumpall <span style="color: #660033;">-r</span> <span style="color: #000000; font-weight: bold;">&gt;</span> roles.dump
psql <span style="color: #660033;">-qAtX</span> <span style="color: #660033;">-c</span> <span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span> <span style="color: #000000; font-weight: bold;">|</span> \
    <span style="color: #c20cb9; font-weight: bold;">xargs</span> <span style="color: #660033;">-d</span><span style="color: #ff0000;">'\n'</span> -I<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span> <span style="color: #660033;">-P2</span> pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> pg-<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>.dump <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>
<span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #000000; font-weight: bold;">/</span>var<span style="color: #000000; font-weight: bold;">/</span>backups<span style="color: #000000; font-weight: bold;">/</span>pg
<span style="color: #c20cb9; font-weight: bold;">find</span> . <span style="color: #660033;">-type</span> f <span style="color: #660033;">-mtime</span> +<span style="color: #000000;">6</span> <span style="color: #660033;">-delete</span>
<span style="color: #c20cb9; font-weight: bold;">find</span> . <span style="color: #660033;">-type</span> d <span style="color: #660033;">-delete</span> <span style="color: #000000;">2</span><span style="color: #000000; font-weight: bold;">&gt;/</span>dev<span style="color: #000000; font-weight: bold;">/</span>null</pre></td></tr></table></div>

<p>This would dump backups to /var/backups/pg/DATE (date in format YYYY-MM-DD), and keep just like week of them.</p>
<p>Now, this script is of course not fully safe. It could potentially remove some files from other directory, if /var/backups/pg wouldn't work. But adding safety precautions, and making it more readable, is still pretty simple:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/usr/bin/env bash</span>
<span style="color: #666666; font-style: italic;"># common</span>
<span style="color: #007800;">top_level_backup_dir</span>=<span style="color: #000000; font-weight: bold;">/</span>var<span style="color: #000000; font-weight: bold;">/</span>backups<span style="color: #000000; font-weight: bold;">/</span>pg
<span style="color: #666666; font-style: italic;"># common</span>
&nbsp;
<span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$top_level_backup_dir</span>&quot;</span> <span style="color: #000000; font-weight: bold;">||</span> <span style="color: #7a0874; font-weight: bold;">exit</span> <span style="color: #000000;">1</span>
&nbsp;
<span style="color: #007800;">backup_dir</span>=$<span style="color: #7a0874; font-weight: bold;">&#40;</span> <span style="color: #c20cb9; font-weight: bold;">date</span> +<span style="color: #000000; font-weight: bold;">%</span>Y-<span style="color: #000000; font-weight: bold;">%</span>m-<span style="color: #000000; font-weight: bold;">%</span>d <span style="color: #7a0874; font-weight: bold;">&#41;</span>
<span style="color: #c20cb9; font-weight: bold;">mkdir</span> <span style="color: #660033;">-p</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$backup_dir</span>&quot;</span> <span style="color: #000000; font-weight: bold;">||</span> <span style="color: #7a0874; font-weight: bold;">exit</span> <span style="color: #000000;">1</span>
<span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$backup_dir</span>&quot;</span>
&nbsp;
<span style="color: #666666; font-style: italic;"># Make actual backup files</span>
pg_dumpall <span style="color: #660033;">-r</span> <span style="color: #000000; font-weight: bold;">&gt;</span> roles.dump
psql <span style="color: #660033;">-qAtX</span> <span style="color: #660033;">-c</span> <span style="color: #ff0000;">&quot;select datname from pg_database where datallowconn order by pg_database_size(oid) desc&quot;</span> <span style="color: #000000; font-weight: bold;">|</span> \
    <span style="color: #c20cb9; font-weight: bold;">xargs</span> <span style="color: #660033;">-d</span><span style="color: #ff0000;">'\n'</span> -I<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span> <span style="color: #660033;">-P2</span> pg_dump <span style="color: #660033;">-Fc</span> <span style="color: #660033;">-f</span> pg-<span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>.dump <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #7a0874; font-weight: bold;">&#125;</span>
&nbsp;
<span style="color: #666666; font-style: italic;"># Retention policy</span>
<span style="color: #7a0874; font-weight: bold;">cd</span> <span style="color: #ff0000;">&quot;<span style="color: #007800;">$top_level_backup_dir</span>&quot;</span> <span style="color: #000000; font-weight: bold;">||</span> <span style="color: #7a0874; font-weight: bold;">exit</span> <span style="color: #000000;">1</span>
<span style="color: #c20cb9; font-weight: bold;">find</span> . <span style="color: #660033;">-mindepth</span> <span style="color: #000000;">2</span> <span style="color: #660033;">-maxdepth</span> <span style="color: #000000;">2</span> <span style="color: #660033;">-type</span> f <span style="color: #660033;">-regex</span> <span style="color: #ff0000;">'\./[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/.*dump'</span> <span style="color: #660033;">-mtime</span> +<span style="color: #000000;">6</span> <span style="color: #660033;">-delete</span>
<span style="color: #c20cb9; font-weight: bold;">find</span> . <span style="color: #660033;">-mindepth</span> <span style="color: #000000;">1</span> <span style="color: #660033;">-maxdepth</span> <span style="color: #000000;">1</span> <span style="color: #660033;">-type</span> d <span style="color: #660033;">-regex</span> <span style="color: #ff0000;">'\./[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]'</span> <span style="color: #660033;">-empty</span> <span style="color: #660033;">-delete</span></pre></td></tr></table></div>

<p>Now you can ask &#8211; why there is only one variable in common configuration? Why isn't there PATH, or number of days to keep backups for.</p>
<p>Answer is very simple. PATH should be set properly before the script is run. And the number of days is used only once in script, so moving it to another location, would not make it simpler to change, but instead would make the script larger.</p>
<p>This is actually pretty common problem, which I've seen many times. There is a simple problem to solve (make a backup). Someone decides that it's best to write super-general wrapper around existing tool, so that it can be <em>configured</em> and not written for scratch when new case will happen.</p>
<p>The problem is that it often leads to configurable monstrocity that has thousands of lines of code, and dozens of lines of configuration, just to replace 10 line bash script. And all of this in the name of making it reusable and easier to maintain.</p>
<p>Anyway. The script, as it is, has 683 characters (including all comments, new lines, and so on). It does what one could assume to be sensible backup policy, and is (or at least should be) easy to read and understand by virtually anyone. Or so I hope.</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">10 comments <a href='http://www.depesz.com/2013/09/11/how-to-make-backups-of-postgresql/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-41686" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41686" title="">#</a></span> postgres</div>  <div class="date">Sep 11, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/89e3d8b1d0324b097de9ba7540224bd3?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>For these kind of scripts I prefer to use `set -e&#8217; at the beginning of the bash script, which will make it exit whenever a command fails (instead of adding `|| exit 1&#8242; to all commands):</p>
<p>&gt; set -e<br />
&gt; cd &#8220;$top_level_backup_dir&#8221;<br />
&gt; backup_dir=$( date +%Y-%m-%d )<br />
&gt; mkdir -p &#8212; &#8220;$backup_dir&#8221;<br />
&gt; cd &#8220;$backup_dir&#8221;<br />
&gt; [...]</p>
<p>This also allows you to catch errors from all the `pg_dumpall&#8217;, `psql&#8217; and `xargs/pg_dump&#8217;.</p>
<p>Here, your script will exit with a success exit code even if a (or all) pg_dump(s) have failed. Whereas with `set -e&#8217; it will exit with an error exit code at the first error encountered.</p>
<p>Oh, and by the way, these kind of scripts are always perfectible… <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-41687" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41687" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Sep 11, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@postgres:<br />
Based on <a href="http://mywiki.wooledge.org/BashFAQ/105" rel="nofollow">http://mywiki.wooledge.org/BashFAQ/105</a> I tend to not use `set -e` in scripts that I want people to learn from. In my own, I sometimes take the -e shortcut, but am trying to get rid of this.</p>
	</li>
		
		
			
<li class="odd" id="comment-41690" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41690" title="">#</a></span> <a href='http://www.pgexperts.com' rel='external nofollow' class='url'>Jeff Frost</a></div>  <div class="date">Sep 11, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>We have a couple scripts to do this.  First is a python script (rewritten from an old shell script that I had written) that does basic rotation by keeping x copies of dumps around: <a href="https://github.com/pgexperts/pgbackup" rel="nofollow">https://github.com/pgexperts/pgbackup</a></p>
<p>Second one is more robust for keeping various amounts of backups per day/week/month and is written in perl: <a href="https://github.com/pgexperts/pg-rolldump" rel="nofollow">https://github.com/pgexperts/pg-rolldump</a></p>
	</li>
		
		
			
<li class="odd" id="comment-41692" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41692" title="">#</a></span> Joe</div>  <div class="date">Sep 11, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/0d235d4094b8dbf2cd9932667d828795?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>The psql commands don&#8217;t specify a database name so they will fail if the default dbname doesn&#8217;t exist (or PGDATABASE hasn&#8217;t been used).</p>
	</li>
		
		
			
<li class="mycomment" id="comment-41693" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41693" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Sep 12, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Joe:<br />
Sure. Neither is hostname, or port, or username. I am working under certain assumptions in here. The most important one being that I&#8217;m merely providing a way, not a complete toolset.<br />
And anyway &#8211; running backups should happen from postgres account, and as such it&#8217;s unlikely to hit &#8220;no such database&#8221; error.</p>
	</li>
		
		
			
<li class="odd" id="comment-41703" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41703" title="">#</a></span> Gabriele</div>  <div class="date">Sep 13, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Surely custom format has many advantages w.r.t. plain format.</p>
<p>Suppose however that you have a fixed amount of space and a number of not so small db. And suppose that you would like to preserve the maximum number of copies of each db.</p>
<p>Well, if one day nothing changes in a db you can think of symlink backup file and save space.</p>
<p>Plain format can be md5-summed and symlinked.</p>
<p>AFAIK custom format cannot since date and time is embedded so even if schema and data are the same the dump is different every day.<br />
I have not found a way to strip metadata from the dump.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-41712" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41712" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Sep 13, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Gabriele:<br />
just use rdiff-backup to store it.</p>
	</li>
		
		
			
<li class="odd" id="comment-41727" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41727" title="">#</a></span> Ben</div>  <div class="date">Sep 14, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/e091b9b56d55cb862e5ac373a25438b2?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Nice and simple.</p>
<p>Adding a &#8220;psql -l &gt; dabatases.list&#8221; may also prove useful at restore time (unless you remember all the dbs encodings, collations, etc).</p>
<p>Sometimes I also generate a file containing the sizes of each databases. So, when I need to replace a dead server in a hurry, I can choose a suitable one (with enough disk space) and I can partition it as needed. Otherwise I&#8217;d have to ask Munin for the last tablespace&#8217;s known size on this server.</p>
	</li>
		
		
			
<li class="odd" id="comment-41787" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-41787" title="">#</a></span> <a href='http://blog.teksol.info/' rel='external nofollow' class='url'>François Beausoleil</a></div>  <div class="date">Sep 17, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/7da32f740e64088d2b07c277f3c1b94b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Regarding backup rotation, I wrote a Ruby tool which &#8220;understands&#8221; date formats and returns files that should be deleted:  <a href="https://github.com/francois/surrender" rel="nofollow">https://github.com/francois/surrender</a></p>
<p>Hope that helps!</p>
	</li>
		
		
			
<li class="odd" id="comment-42767" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42767" title="">#</a></span> zawada</div>  <div class="date">Dec 17, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>@Gabriele:</p>
<p><a href="http://zbackup.org/" rel="nofollow">http://zbackup.org/</a> &#8211; nice tool for storage.<br />
I use that for KVM images</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2753" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="50397356e3" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="123"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">332 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">307 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">249 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">195 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">139 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">124 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">123 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">123 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">95 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

