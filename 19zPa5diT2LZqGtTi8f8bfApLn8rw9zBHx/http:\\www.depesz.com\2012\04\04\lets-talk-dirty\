http://www.depesz.com/2012/04/04/lets-talk-dirty/
HTTP/1.1 200 OK
Server: nginx
Date: Wed, 23 Jul 2014 01:08:35 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2437>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Let&#8217;s talk dirty</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Let&#8217;s talk dirty Comments Feed" href="http://www.depesz.com/2012/04/04/lets-talk-dirty/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2012/04/04/lets-talk-dirty/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2437' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2437">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2012/04/04/lets-talk-dirty/" rel="bookmark" title="Permanent Link to Let&#8217;s talk dirty">Let&#8217;s talk dirty</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>April 4th, 2012 by depesz | Tags: <a href="http://www.depesz.com/tag/dirty/" rel="tag">dirty</a>, <a href="http://www.depesz.com/tag/omniti/" rel="tag">omniti</a>, <a href="http://www.depesz.com/tag/pg_dirtyread/" rel="tag">pg_dirtyread</a>, <a href="http://www.depesz.com/tag/phil/" rel="tag">phil</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a> |  <a href="http://www.depesz.com/2012/04/04/lets-talk-dirty/#comments" title="Comment on Let&#8217;s talk dirty">19 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p><em>Important disclaimer: the module that I'm writing about was written by my colleague <a href="http://philsorber.blogspot.com/">Phil Sorber</a>.</em></p>
<p>We all have been in, or heard about, situation like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">update</span> users <span style="color: #993333; font-weight: bold;">set</span> password <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'...'</span>; <span style="color: #993333; font-weight: bold;">where</span> id <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">123</span>;</pre></td></tr></table></div>

<p>(hint: first ; is before where).</p>
<p>Of course you should have backups, and you can <a href="http://www.depesz.com/2007/07/27/update-account-set-password-new_password-oops/">protect</a> yourself from it. But what if backup is too old, and you didn't protect yourself?</p>
<p><span id="more-2437"></span></p>
<p>We (well, technically Phil) were faced with this problem. He managed to recover enough data using different means, but this made him think, and write <a href="https://github.com/omniti-labs/pgtreats/tree/master/contrib/pg_dirtyread">pg_dirtyread</a>.</p>
<p>Supposedly, it should make it possible to read removed data. So let's test this claim.</p>
<p>Installation is simple enough:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">=$ <span style="color: #c20cb9; font-weight: bold;">git clone</span> https:<span style="color: #000000; font-weight: bold;">//</span>github.com<span style="color: #000000; font-weight: bold;">/</span>omniti-labs<span style="color: #000000; font-weight: bold;">/</span>pgtreats
...
&nbsp;
=$ <span style="color: #7a0874; font-weight: bold;">cd</span> pgtreats<span style="color: #000000; font-weight: bold;">/</span>contrib<span style="color: #000000; font-weight: bold;">/</span>pg_dirtyread<span style="color: #000000; font-weight: bold;">/</span>
&nbsp;
=$ <span style="color: #c20cb9; font-weight: bold;">make</span>
...
&nbsp;
=$ <span style="color: #c20cb9; font-weight: bold;">make</span> <span style="color: #c20cb9; font-weight: bold;">install</span>
<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span><span style="color: #c20cb9; font-weight: bold;">mkdir</span> <span style="color: #660033;">-p</span> <span style="color: #ff0000;">'/opt/pgbrew/9.1.3/share/postgresql/extension'</span>
<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span><span style="color: #c20cb9; font-weight: bold;">mkdir</span> <span style="color: #660033;">-p</span> <span style="color: #ff0000;">'/opt/pgbrew/9.1.3/lib/postgresql'</span>
<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span><span style="color: #c20cb9; font-weight: bold;">sh</span> <span style="color: #000000; font-weight: bold;">/</span>opt<span style="color: #000000; font-weight: bold;">/</span>pgbrew<span style="color: #000000; font-weight: bold;">/</span>9.1.3<span style="color: #000000; font-weight: bold;">/</span>lib<span style="color: #000000; font-weight: bold;">/</span>postgresql<span style="color: #000000; font-weight: bold;">/</span>pgxs<span style="color: #000000; font-weight: bold;">/</span>src<span style="color: #000000; font-weight: bold;">/</span>makefiles<span style="color: #000000; font-weight: bold;">/</span>..<span style="color: #000000; font-weight: bold;">/</span>..<span style="color: #000000; font-weight: bold;">/</span>config<span style="color: #000000; font-weight: bold;">/</span>install-sh <span style="color: #660033;">-c</span> <span style="color: #660033;">-m</span> <span style="color: #000000;">644</span> .<span style="color: #000000; font-weight: bold;">/</span>pg_dirtyread.control <span style="color: #ff0000;">'/opt/pgbrew/9.1.3/share/postgresql/extension/'</span>
<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span><span style="color: #c20cb9; font-weight: bold;">sh</span> <span style="color: #000000; font-weight: bold;">/</span>opt<span style="color: #000000; font-weight: bold;">/</span>pgbrew<span style="color: #000000; font-weight: bold;">/</span>9.1.3<span style="color: #000000; font-weight: bold;">/</span>lib<span style="color: #000000; font-weight: bold;">/</span>postgresql<span style="color: #000000; font-weight: bold;">/</span>pgxs<span style="color: #000000; font-weight: bold;">/</span>src<span style="color: #000000; font-weight: bold;">/</span>makefiles<span style="color: #000000; font-weight: bold;">/</span>..<span style="color: #000000; font-weight: bold;">/</span>..<span style="color: #000000; font-weight: bold;">/</span>config<span style="color: #000000; font-weight: bold;">/</span>install-sh <span style="color: #660033;">-c</span> <span style="color: #660033;">-m</span> <span style="color: #000000;">644</span> .<span style="color: #000000; font-weight: bold;">/</span>pg_dirtyread--<span style="color: #000000;">1.0</span>.sql  <span style="color: #ff0000;">'/opt/pgbrew/9.1.3/share/postgresql/extension/'</span>
<span style="color: #000000; font-weight: bold;">/</span>bin<span style="color: #000000; font-weight: bold;">/</span><span style="color: #c20cb9; font-weight: bold;">sh</span> <span style="color: #000000; font-weight: bold;">/</span>opt<span style="color: #000000; font-weight: bold;">/</span>pgbrew<span style="color: #000000; font-weight: bold;">/</span>9.1.3<span style="color: #000000; font-weight: bold;">/</span>lib<span style="color: #000000; font-weight: bold;">/</span>postgresql<span style="color: #000000; font-weight: bold;">/</span>pgxs<span style="color: #000000; font-weight: bold;">/</span>src<span style="color: #000000; font-weight: bold;">/</span>makefiles<span style="color: #000000; font-weight: bold;">/</span>..<span style="color: #000000; font-weight: bold;">/</span>..<span style="color: #000000; font-weight: bold;">/</span>config<span style="color: #000000; font-weight: bold;">/</span>install-sh <span style="color: #660033;">-c</span> <span style="color: #660033;">-m</span> <span style="color: #000000;">755</span>  pg_dirtyread.so <span style="color: #ff0000;">'/opt/pgbrew/9.1.3/lib/postgresql/'</span></pre></td></tr></table></div>

<p>Couple of things &#8211; it comes as a Pg extension, and contains basically just one .so file (plus the extension things, like .control and of course sql.</p>
<p>Having it installed, let's load this to Pg:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="bash" style="font-family:monospace;">=$ psql <span style="color: #660033;">-c</span> <span style="color: #ff0000;">'create extension pg_dirtyread'</span>
CREATE EXTENSION</pre></td></tr></table></div>

<p>Note of warning though &#8211; it did work on 9.1 for me, but did not on 9.2. Trying to load pg_dirtyread on 9.2 ended up with:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">ERROR:  could not load library &quot;/home/pgdba/work/lib/postgresql/pg_dirtyread.so&quot;: /home/pgdba/work/lib/postgresql/pg_dirtyread.so: undefined symbol: RelationGetDescr</pre></td></tr></table></div>

<p>No idea why, I let Phil know, but I don't think it's very big problem, since 9.2 is not released yet, so noone is (hopefully) storing important information in it <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Whole extension is just one, simple function:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ \dx<span style="color: #66cc66;">+</span> pg_dirtyread
Objects <span style="color: #993333; font-weight: bold;">in</span> extension <span style="color: #ff0000;">&quot;pg_dirtyread&quot;</span>
     Object Description
────────────────────────────
 <span style="color: #993333; font-weight: bold;">function</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span>oid<span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Let's see how it works.</p>
<p>To test it, I will create some table, enter there some rows, delete some, and will try to recover. All with disabled autovacuum (just in case).</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">show</span> autovacuum;
 autovacuum
────────────
 off
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> test <span style="color: #993333; font-weight: bold;">as</span> <span style="color: #993333; font-weight: bold;">select</span> i <span style="color: #993333; font-weight: bold;">as</span> id<span style="color: #66cc66;">,</span> <span style="color: #ff0000;">'depesz #'</span> <span style="color: #66cc66;">||</span> i <span style="color: #993333; font-weight: bold;">as</span> username <span style="color: #993333; font-weight: bold;">from</span> generate_series<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">10</span><span style="color: #66cc66;">&#41;</span> i;
<span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">10</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test;
 id │  username
────┼────────────
  <span style="color: #cc66cc;">1</span> │ depesz #<span style="color: #cc66cc;">1</span>
  <span style="color: #cc66cc;">2</span> │ depesz #<span style="color: #cc66cc;">2</span>
  <span style="color: #cc66cc;">3</span> │ depesz #<span style="color: #cc66cc;">3</span>
  <span style="color: #cc66cc;">4</span> │ depesz #<span style="color: #cc66cc;">4</span>
  <span style="color: #cc66cc;">5</span> │ depesz #<span style="color: #cc66cc;">5</span>
  <span style="color: #cc66cc;">6</span> │ depesz #<span style="color: #cc66cc;">6</span>
  <span style="color: #cc66cc;">7</span> │ depesz #<span style="color: #cc66cc;">7</span>
  <span style="color: #cc66cc;">8</span> │ depesz #<span style="color: #cc66cc;">8</span>
  <span style="color: #cc66cc;">9</span> │ depesz #<span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">10</span> │ depesz #<span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>OK. Data is ready, let's delete some rows:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">delete</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">=</span> id % <span style="color: #cc66cc;">3</span>;
<span style="color: #993333; font-weight: bold;">DELETE</span> <span style="color: #cc66cc;">3</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> test;
 id │  username
────┼────────────
  <span style="color: #cc66cc;">1</span> │ depesz #<span style="color: #cc66cc;">1</span>
  <span style="color: #cc66cc;">2</span> │ depesz #<span style="color: #cc66cc;">2</span>
  <span style="color: #cc66cc;">4</span> │ depesz #<span style="color: #cc66cc;">4</span>
  <span style="color: #cc66cc;">5</span> │ depesz #<span style="color: #cc66cc;">5</span>
  <span style="color: #cc66cc;">7</span> │ depesz #<span style="color: #cc66cc;">7</span>
  <span style="color: #cc66cc;">8</span> │ depesz #<span style="color: #cc66cc;">8</span>
 <span style="color: #cc66cc;">10</span> │ depesz #<span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">7</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Now, let' try to use the function to recover deleted rows:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span>;
ERROR:  a <span style="color: #993333; font-weight: bold;">column</span> definition list <span style="color: #993333; font-weight: bold;">is</span> required <span style="color: #993333; font-weight: bold;">for</span> functions returning <span style="color: #ff0000;">&quot;record&quot;</span>
LINE <span style="color: #cc66cc;">1</span>: <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span>;
                      ^</pre></td></tr></table></div>

<p>Oops. We need to specify columns. It's simple because we know them <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span>;
 id │  username
────┼────────────
  <span style="color: #cc66cc;">1</span> │ depesz #<span style="color: #cc66cc;">1</span>
  <span style="color: #cc66cc;">2</span> │ depesz #<span style="color: #cc66cc;">2</span>
  <span style="color: #cc66cc;">3</span> │ depesz #<span style="color: #cc66cc;">3</span>
  <span style="color: #cc66cc;">4</span> │ depesz #<span style="color: #cc66cc;">4</span>
  <span style="color: #cc66cc;">5</span> │ depesz #<span style="color: #cc66cc;">5</span>
  <span style="color: #cc66cc;">6</span> │ depesz #<span style="color: #cc66cc;">6</span>
  <span style="color: #cc66cc;">7</span> │ depesz #<span style="color: #cc66cc;">7</span>
  <span style="color: #cc66cc;">8</span> │ depesz #<span style="color: #cc66cc;">8</span>
  <span style="color: #cc66cc;">9</span> │ depesz #<span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">10</span> │ depesz #<span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>That's great. The value really got recovered!</p>
<p>So let's test some more cruel things. What about vacuumed table?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ vacuum test;
VACUUM
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span>;
 id │  username
────┼────────────
  <span style="color: #cc66cc;">1</span> │ depesz #<span style="color: #cc66cc;">1</span>
  <span style="color: #cc66cc;">2</span> │ depesz #<span style="color: #cc66cc;">2</span>
  <span style="color: #cc66cc;">4</span> │ depesz #<span style="color: #cc66cc;">4</span>
  <span style="color: #cc66cc;">5</span> │ depesz #<span style="color: #cc66cc;">5</span>
  <span style="color: #cc66cc;">7</span> │ depesz #<span style="color: #cc66cc;">7</span>
  <span style="color: #cc66cc;">8</span> │ depesz #<span style="color: #cc66cc;">8</span>
 <span style="color: #cc66cc;">10</span> │ depesz #<span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">7</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>OK &#8211; vacuum makes the data fully gone. So you have to be fast. But &#8211; will the dirty read work also for toasted values? Let's see it:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">insert</span> <span style="color: #993333; font-weight: bold;">into</span> test <span style="color: #66cc66;">&#40;</span>id<span style="color: #66cc66;">,</span> username<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">values</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">11</span><span style="color: #66cc66;">,</span>repeat<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'depesz #11'</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">100000</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">1</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> md5<span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> test <span style="color: #993333; font-weight: bold;">where</span> id <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">11</span>;
 id │               md5                │ <span style="color: #993333; font-weight: bold;">length</span>
────┼──────────────────────────────────┼─────────
 <span style="color: #cc66cc;">11</span> │ 05a472c082f47348d85af868d2d7861d │ <span style="color: #cc66cc;">1000000</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>OK. So I entered 1 million characters in the column, got md5 of it (because I will not compare 1 million of bytes to show you that it worked). So, let's delete it, and try to recover:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> md5<span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span>;
ERROR:  unexpected chunk <span style="color: #993333; font-weight: bold;">number</span> <span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">&#40;</span>expected <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">for</span> toast <span style="color: #993333; font-weight: bold;">value</span> <span style="color: #cc66cc;">16395</span> <span style="color: #993333; font-weight: bold;">in</span> pg_toast_16389</pre></td></tr></table></div>

<p>OK. Toasted values are also not available. Which is probably relatively large problem.</p>
<p>But, the whole &#8220;read dirty" thing, made me think about reading uncommitted data. Let's see. First &#8211; I vacuumed test table to skip issues with row #11 and it's missing toast. Then I did:</p>
<table class="normal">
<thead>
<tr>
<th>session #1</th>
<th>session #2</th>
</tr>
</thead>
<tbody>
<tr>
<td>$ begin;</td>
<td></td>
</tr>
<tr>
<td>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">insert</span> <span style="color: #993333; font-weight: bold;">into</span> test <span style="color: #66cc66;">&#40;</span>id<span style="color: #66cc66;">,</span> username<span style="color: #66cc66;">&#41;</span>
    <span style="color: #993333; font-weight: bold;">values</span> <span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">12</span><span style="color: #66cc66;">,</span>repeat<span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">'depesz #12'</span><span style="color: #66cc66;">,</span> <span style="color: #cc66cc;">100000</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">INSERT</span> <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">1</span></pre></td></tr></table></div>

</td>
<td>
            </td>
</tr>
<tr>
<td></td>
<td>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> md5<span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span>;
 id │               md5                │ <span style="color: #993333; font-weight: bold;">length</span>
────┼──────────────────────────────────┼────────
  <span style="color: #cc66cc;">1</span> │ e7b3a18efa4dccdba1dbe3b1ee261a0a │      <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">2</span> │ 71ff75c0e4e0f97d5571b1494036a8cb │      <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">4</span> │ ad2193303191f9778e1eb567b4253c51 │      <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">5</span> │ c36973dd5eec47eec490963be7346f35 │      <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">7</span> │ 5a57a3a8f9b71656939ddced280987a3 │      <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">8</span> │ eba729acefe975ee08d0b213f2cd322f │      <span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">10</span> │ defc1a12ff09c42c4e168784e31e4915 │     <span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">7</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

</td>
</tr>
<tr>
<td></td>
<td>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> md5<span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span>;
 id │               md5                │ <span style="color: #993333; font-weight: bold;">length</span>
────┼──────────────────────────────────┼─────────
  <span style="color: #cc66cc;">1</span> │ e7b3a18efa4dccdba1dbe3b1ee261a0a │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">2</span> │ 71ff75c0e4e0f97d5571b1494036a8cb │       <span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">12</span> │ c50f23ab00c5d98d016a67a711bd1223 │ <span style="color: #cc66cc;">1000000</span>
  <span style="color: #cc66cc;">4</span> │ ad2193303191f9778e1eb567b4253c51 │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">5</span> │ c36973dd5eec47eec490963be7346f35 │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">7</span> │ 5a57a3a8f9b71656939ddced280987a3 │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">8</span> │ eba729acefe975ee08d0b213f2cd322f │       <span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">10</span> │ defc1a12ff09c42c4e168784e31e4915 │      <span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">8</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

</td>
</tr>
<tr>
<td>$ rollback;</td>
<td></td>
</tr>
<tr>
<td></td>
<td>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> md5<span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">length</span><span style="color: #66cc66;">&#40;</span>username<span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span>;
 id │               md5                │ <span style="color: #993333; font-weight: bold;">length</span>
────┼──────────────────────────────────┼─────────
  <span style="color: #cc66cc;">1</span> │ e7b3a18efa4dccdba1dbe3b1ee261a0a │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">2</span> │ 71ff75c0e4e0f97d5571b1494036a8cb │       <span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">12</span> │ c50f23ab00c5d98d016a67a711bd1223 │ <span style="color: #cc66cc;">1000000</span>
  <span style="color: #cc66cc;">4</span> │ ad2193303191f9778e1eb567b4253c51 │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">5</span> │ c36973dd5eec47eec490963be7346f35 │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">7</span> │ 5a57a3a8f9b71656939ddced280987a3 │       <span style="color: #cc66cc;">9</span>
  <span style="color: #cc66cc;">8</span> │ eba729acefe975ee08d0b213f2cd322f │       <span style="color: #cc66cc;">9</span>
 <span style="color: #cc66cc;">10</span> │ defc1a12ff09c42c4e168784e31e4915 │      <span style="color: #cc66cc;">10</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">8</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

</td>
</tr>
</tbody>
</table>
<p>Which is pretty interesting &#8211; not only you can read data inserted by other transactions before commit &#8211; you can also read it after rollback &#8211; up until it will get vacuumed.</p>
<p>And what happens in case of updates?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">update</span> test <span style="color: #993333; font-weight: bold;">set</span> username <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'xxx'</span> <span style="color: #993333; font-weight: bold;">where</span> id <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">1</span>;
<span style="color: #993333; font-weight: bold;">UPDATE</span> <span style="color: #cc66cc;">1</span>
&nbsp;
$ <span style="color: #993333; font-weight: bold;">select</span> id<span style="color: #66cc66;">,</span> username <span style="color: #993333; font-weight: bold;">from</span> pg_dirtyread<span style="color: #66cc66;">&#40;</span> <span style="color: #ff0000;">'test'</span>::regclass <span style="color: #66cc66;">&#41;</span> t <span style="color: #66cc66;">&#40;</span>id int4<span style="color: #66cc66;">,</span> username text<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">where</span> id <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">1</span>;
 id │ username
────┼───────────
  <span style="color: #cc66cc;">1</span> │ depesz #<span style="color: #cc66cc;">1</span>
  <span style="color: #cc66cc;">1</span> │ xxx
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">2</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>We just see all versions of given row available.</p>
<p>All of this is pretty cool, and can definitely be useful. We just need some changes to make it truly a great tool:</p>
<ul>
<li>Fix compilation issue on 9.2 (and test on all other supported Pg versions, and maybe even some unsupported by Pg</li>
<li>Do something about toast. If it's technically not possible to get the value from toast &#8211; make it return &#8220;null" for the column, or whatever &#8211; just don't fail fully &#8211; otherwise it will break for virtually any real-world table.</li>
<li>I would definitely add information about xmin/xmax to outputted columns &#8211; this is required to be able to tell which row is latest, and which was previous</li>
<li>I don't much like the interface &#8211; requirement to name all columns, while possible, can be made nicer. Maybe returning set of texts, where each text is representation of row? So you could query like: select disk_xmin, disk_xmax, (row::table).* from pg_dirtyread(&#8216;table'::regclass) ?</li>
</ul>
<p>All things said &#8211; this tool shows great premise, and can become invaluable for any serious DBA, but it has some issues that need to be addressed.</p>
<p><!-- vim: set spell spelllang=en_US ft=xhtml: --></p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">19 comments <a href='http://www.depesz.com/2012/04/04/lets-talk-dirty/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-35375" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35375" title="">#</a></span> Marek Szalik</div>  <div class="date">Apr 4, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Very nice feature. It ought to be a part of standard postgres distribution not only an extension.</p>
	</li>
		
		
			
<li class="odd" id="comment-35376" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35376" title="">#</a></span> alvherre</div>  <div class="date">Apr 4, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>I bet the 9.2 problem is just a missing #include &#8220;utils/rel.h&#8221; in the source.</p>
	</li>
		
		
			
<li class="odd" id="comment-35377" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35377" title="">#</a></span> <a href='http://philsorber.blogspot.com/' rel='external nofollow' class='url'>Phil Sorber</a></div>  <div class="date">Apr 4, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/f3758f5cfd62c3d60c47b5aaf31d18dc?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Depesz,</p>
<p>Thanks for the review!</p>
<p>I had not tested it against 9.2 yet, so I will look into that. I also need to work on backward compatibility. I am using some macro&#8217;s that I am not sure exist before 9.1.</p>
<p>I have intentions of including xmin/xmax and friends in the output but haven&#8217;t gotten that far yet.</p>
<p>I was unaware of the toast issue and that is the first thing I will fix. As you mentioned it is nearly useless without it.</p>
<p>The interface is a tough one. I tried very hard to use the generic record type so that I could return rows like the underlying table. My thought was that you would want to select into a temp table and manipulate the data there. There are no indexes in action so you are doing a full table scan every time you access it. It&#8217;s not really meant to be an everyday use function, though I am open to the possibility of optimizing it. I&#8217;ll have to think more on this one.</p>
<p>@marek, I would imagine this as updated select functionality than a standalone function if it were to make the postgres core. Perhaps some sort of &#8220;USING SNAPSHOT ANY&#8221; syntax.</p>
	</li>
		
		
			
<li class="odd" id="comment-35378" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35378" title="">#</a></span> <a href='http://www.endpoint.com/' rel='external nofollow' class='url'>Jon Jensen</a></div>  <div class="date">Apr 4, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/c306387e70ecb5ad86d09b25fa39a122?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Very nice demonstration, Depesz. Especially the access to uncommitted writes from other transactions shows how useful this can be beyond data recovery.</p>
	</li>
		
		
			
<li class="odd" id="comment-35379" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35379" title="">#</a></span> Josh Berkus</div>  <div class="date">Apr 5, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/1b8d5f170c84fa45b1420cd5faf629b6?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Yeah, I&#8217;d need xmin/xmax data as well.  ctid would be nice too, so that you can *select* the specific row version you want.</p>
	</li>
		
		
			
<li class="odd" id="comment-35380" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35380" title="">#</a></span> Peter van Hardenberg</div>  <div class="date">Apr 5, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/53ffd374deb821ab07cdef9f7e321364?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>How often is an unqualified UPDATE or DELETE not a mistake?</p>
<p>Will Leinweber suggests that those two commands should always require a WHERE clause, at least in interactive mode. If you really, really want to update all the rows, just add a &#8220;WHERE true&#8221; clause. </p>
<p>Precedent for this has been pretty well established thanks to protection against mistakes like inserting a space along the lines of `rm -rf ~ /foo/*`.</p>
	</li>
		
		
			
<li class="odd" id="comment-35381" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35381" title="">#</a></span> <a href='http://momjian.us' rel='external nofollow' class='url'>Bruce Momjian</a></div>  <div class="date">Apr 6, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/ecaa579ddbd27537b4ac50a26f1814a9?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Great idea &#8212; I have always felt we needed a way to access this data.  FYI, I think you will also find that a SELECT on a full page will also make the old data unrecoverable &#8212; see my MVCC Unmasked talk for details.</p>
	</li>
		
		
			
<li class="odd" id="comment-35620" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35620" title="">#</a></span> jorge</div>  <div class="date">Jun 21, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>@peter<br />
I definitely agree with you. Those statements are not meant to be used unqualified &#8211; ever. Should be a SQL standard to always have a condition. I never got burned with it but I think it&#8217;s just a matter of time.</p>
	</li>
		
		
			
<li class="mycomment" id="comment-35621" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35621" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jun 21, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Peter, @Jorge: sure, but how&#8217;s that related? Besides, it&#8217;s trivial to protect against it.</p>
	</li>
		
		
			
<li class="odd" id="comment-36643" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36643" title="">#</a></span> <a href='http://-' rel='external nofollow' class='url'>Guillermo</a></div>  <div class="date">Dec 7, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d65406d7b332df2d248688c58b2e75e5?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hello! HELP! I need to install this tool in my postgres.<br />
I read your page  but when I follow the steps I get the following error:<br />
Makefile: 8: /usr/lib/postgresql/9.1/lib/pgxs/src/makefiles/pgxs.mk: No such file or directory.<br />
If I go to my /usr/lib/postgresql/9.1/lib I notice that there is no subdirectory there.<br />
How do I install the developer package without breaking more things?.<br />
Thank you very much and sorry for my bad English.<br />
Guillermo</p>
<p>guillermovil at gmail</p>
	</li>
		
		
			
<li class="mycomment" id="comment-36644" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36644" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 7, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Guillermo:<br />
Based on path, I guess that you&#8217;re using Debian or Ubuntu. In such case, apt-get install postgresql-server-dev-9.1</p>
	</li>
		
		
			
<li class="odd" id="comment-36675" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36675" title="">#</a></span> <a href='http://-' rel='external nofollow' class='url'>Guillermo</a></div>  <div class="date">Dec 9, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d65406d7b332df2d248688c58b2e75e5?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>thank you very much DEPESZ, yes my s.o. is ubuntu if I try:<br />
apt-get install postgresql-server-dev-9.1<br />
I got:<br />
Leyendo lista de paquetes&#8230; Hecho<br />
Creando árbol de dependencias<br />
Leyendo la información de estado&#8230; Hecho<br />
Se instalarán los siguientes paquetes NUEVOS:<br />
  postgresql-server-dev-9.1<br />
0 actualizados, 1 se instalarán, 0 para eliminar y 10 no actualizados.<br />
Necesito descargar 920 kB de archivos.<br />
Se utilizarán 4.653 kB de espacio de disco adicional después de esta operación.<br />
Err <a href="http://ppa.launchpad.net/pitti/postgresql/ubuntu/" rel="nofollow">http://ppa.launchpad.net/pitti/postgresql/ubuntu/</a> natty/main postgresql-server-dev-9.1 amd64 9.1.6-1~natty1<br />
  404  Not Found<br />
Imposible obtener <a href="http://ppa.launchpad.net/pitti/postgresql/ubuntu/pool/main/p/postgresql-9.1/postgresql-server-dev-9.1_9.1.6-1~natty1_amd64.deb" rel="nofollow">http://ppa.launchpad.net/pitti/postgresql/ubuntu/pool/main/p/postgresql-9.1/postgresql-server-dev-9.1_9.1.6-1~natty1_amd64.deb</a>  404  Not Found<br />
E: No se pudieron obtener algunos archivos, ¿quizás deba ejecutar «apt-get update» o deba intentarlo de nuevo con &#8211;fix-missing?</p>
<p>What can I do?</p>
	</li>
		
		
			
<li class="odd" id="comment-36676" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36676" title="">#</a></span> <a href='http://-' rel='external nofollow' class='url'>Guillermo</a></div>  <div class="date">Dec 9, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d65406d7b332df2d248688c58b2e75e5?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>DEPESZ my postgres is 9.1.4</p>
	</li>
		
		
			
<li class="mycomment" id="comment-36677" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36677" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 9, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Guillermo:<br />
no idea &#8211; I don&#8217;t understand the message. Perhaps try someone who knows ubuntu and speaks the language.</p>
	</li>
		
		
			
<li class="odd" id="comment-36678" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36678" title="">#</a></span> <a href='http://-' rel='external nofollow' class='url'>Guillermo</a></div>  <div class="date">Dec 9, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d65406d7b332df2d248688c58b2e75e5?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>DEPESZ, Thank you very very much!! I could recover the lost information.</p>
	</li>
		
		
			
<li class="odd" id="comment-36728" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36728" title="">#</a></span> Alejandro</div>  <div class="date">Dec 14, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>Hi depesz,</p>
<p>It&#8217;s possible make a jdbc version to read the deleted rows in postgresql ?</p>
<p>Thanks</p>
	</li>
		
		
			
<li class="mycomment" id="comment-36731" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36731" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 15, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Alejandro:<br />
1. have you *ever* seen anything about jdbc on depesz.com? hint: no. I don&#8217;t use it, I don&#8217;t know anything about it, I don&#8217;t write about it.<br />
2. as far as I can understand, jdbc is protocol to send queries to pg from java application. so any query that you can send from psql, you should be able to send via jdbc. so &#8211; the solution that I describe in here &#8211; should work via jdbc, just as fine as via *any* database interface &#8211; it&#8217;s just a query.</p>
	</li>
		
		
			
<li class="odd" id="comment-36850" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36850" title="">#</a></span> Alejandro</div>  <div class="date">Dec 28, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/0ad6344c65bb0c1b98d79cc1ac9dee6f?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi,</p>
<p>After of very tried to compile this PostgreSQL C function for Windows, I compile that (with VS C++ 2008), but the function get a error when try to read a deleted row. The example:</p>
<p>CREATE FUNCTION pg_dirtyread(oid)<br />
RETURNS setof record<br />
AS E&#8217;$libdir/pg_dirtyread&#8217;, &#8216;pg_finfo_pg_dirtyread&#8217; LANGUAGE C STRICT ;</p>
<p>Create table hola(<br />
id bigserial,<br />
dato1 varchar(199) not null,<br />
fecha date<br />
);</p>
<p>/*insert 3 rows and delete 1 row*/</p>
<p>select * from pg_dirtyread(&#8216;hola&#8217;::regclass) t (id bigint,dato1 varchar(199), fecha date);</p>
<p>ERROR:  invalid memory alloc request size 1850015748</p>
<p>Thanks</p>
	</li>
		
		
			
<li class="mycomment" id="comment-36854" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36854" title="">#</a></span> <a href='http://depesz.com' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Dec 28, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Alejandro:<br />
if you are reporting bug, or requesting help withcompilation, I suggest you contact author, and not some random blogger who wrote about it. Besides, I dont have any windows machines, nor I have any access to such box.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2437" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="e183466193" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="67"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">4 comments</span> | <span class="wpp-views">586 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">362 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">249 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">192 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">147 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">131 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">118 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">116 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">115 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/11/14/how-i-learned-to-stop-worrying-and-love-the-triggers/" title="How I Learned to Stop Worrying and Love the Triggers" class="wpp-post-title" target="_self">How I Learned to Stop Worrying and Love the Triggers</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">97 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

