http://www.depesz.com/2013/11/24/waiting-for-9-4-support-multi-argument-unnest-and-table-syntax-for-multiple-functions/
HTTP/1.1 200 OK
Server: nginx
Date: Tue, 22 Jul 2014 15:25:25 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2772>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Waiting for 9.4 &#8211; Support multi-argument UNNEST(), and TABLE() syntax for multiple functions.</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Waiting for 9.4 &#8211; Support multi-argument UNNEST(), and TABLE() syntax for multiple functions. Comments Feed" href="http://www.depesz.com/2013/11/24/waiting-for-9-4-support-multi-argument-unnest-and-table-syntax-for-multiple-functions/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2013/11/24/waiting-for-9-4-support-multi-argument-unnest-and-table-syntax-for-multiple-functions/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2772' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2772">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2013/11/24/waiting-for-9-4-support-multi-argument-unnest-and-table-syntax-for-multiple-functions/" rel="bookmark" title="Permanent Link to Waiting for 9.4 &#8211; Support multi-argument UNNEST(), and TABLE() syntax for multiple functions.">Waiting for 9.4 &#8211; Support multi-argument UNNEST(), and TABLE() syntax for multiple functions.</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>November 24th, 2013 by depesz | Tags: <a href="http://www.depesz.com/tag/array/" rel="tag">array</a>, <a href="http://www.depesz.com/tag/pg94/" rel="tag">pg94</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/srf/" rel="tag">srf</a>, <a href="http://www.depesz.com/tag/table/" rel="tag">table</a>, <a href="http://www.depesz.com/tag/unnest/" rel="tag">unnest</a> |  <a href="http://www.depesz.com/2013/11/24/waiting-for-9-4-support-multi-argument-unnest-and-table-syntax-for-multiple-functions/#comments" title="Comment on Waiting for 9.4 &#8211; Support multi-argument UNNEST(), and TABLE() syntax for multiple functions.">1 comment &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>On 22nd of November, Tom Lane <a href="http://git.postgresql.org/pg/commitdiff/784e762e886e6f72f548da86a27cd2ead87dbd1c">committed</a> patch:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">Support multi-argument UNNEST(), and TABLE() syntax for multiple functions.
&nbsp;
This patch adds the ability to write TABLE( function1(), function2(), ...)
as a single FROM-clause entry.  The result is the concatenation of the
first row from each function, followed by the second row from each
function, etc; with NULLs inserted if any function produces fewer rows than
others.  This is believed to be a much more useful behavior than what
Postgres currently does with multiple SRFs in a SELECT list.
&nbsp;
This syntax also provides a reasonable way to combine use of column
definition lists with WITH ORDINALITY: put the column definition list
inside TABLE(), where it's clear that it doesn't control the ordinality
column as well.
&nbsp;
Also implement SQL-compliant multiple-argument UNNEST(), by turning
UNNEST(a,b,c) into TABLE(unnest(a), unnest(b), unnest(c)).
&nbsp;
The SQL standard specifies TABLE() with only a single function, not
multiple functions, and it seems to require an implicit UNNEST() which is
not what this patch does.  There may be something wrong with that reading
of the spec, though, because if it's right then the spec's TABLE() is just
a pointless alternative spelling of UNNEST().  After further review of
that, we might choose to adopt a different syntax for what this patch does,
but in any case this functionality seems clearly worthwhile.
&nbsp;
Andrew Gierth, reviewed by Zoltán Böszörményi and Heikki Linnakangas, and
significantly revised by me</pre></td></tr></table></div>

<p><span id="more-2772"></span></p>
<p>There are many things about this patch that make me happy <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>For <a href="http://www.depesz.com/2008/11/14/waiting-for-84-array-aggregate-and-array-unpacker/">quite some time</a> we have unnest function. Which can be used to extract values from arrays:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">$ <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> unnest<span style="color: #66cc66;">&#40;</span> array<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span>;
 unnest 
<span style="color: #808080; font-style: italic;">--------</span>
      <span style="color: #cc66cc;">1</span>
      <span style="color: #cc66cc;">2</span>
      <span style="color: #cc66cc;">3</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>The problem is &#8211; can we unnest several arrays at once?</p>
<p>We could:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span>
<span style="color: #993333; font-weight: bold;">from</span>
    unnest<span style="color: #66cc66;">&#40;</span>array<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> unnest_1<span style="color: #66cc66;">,</span>
    unnest<span style="color: #66cc66;">&#40;</span>array<span style="color: #66cc66;">&#91;</span><span style="color: #ff0000;">'a'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'b'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'c'</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> unnest_2;
 unnest_1 <span style="color: #66cc66;">|</span> unnest_2 
<span style="color: #808080; font-style: italic;">----------+----------</span>
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> a
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> b
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> c
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> a
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> b
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> c
        <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> a
        <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> b
        <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> c
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">9</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>But the behavior is (at least for some) quite unexpected. Of course we could:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span>
    unnest<span style="color: #66cc66;">&#40;</span>array<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> unnest_1<span style="color: #66cc66;">,</span>
    unnest<span style="color: #66cc66;">&#40;</span>array<span style="color: #66cc66;">&#91;</span><span style="color: #ff0000;">'a'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'b'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'c'</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> unnest_2;
 unnest_1 <span style="color: #66cc66;">|</span> unnest_2 
<span style="color: #808080; font-style: italic;">----------+----------</span>
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> a
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> b
        <span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">|</span> c
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Which seems simple, but &#8211; having it in select clause makes certain things harder, and what's more &#8211; it did produce quite unexpected results in cases where number of items in arrays was not identical:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span>
    unnest<span style="color: #66cc66;">&#40;</span>array<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> unnest_1<span style="color: #66cc66;">,</span>
    unnest<span style="color: #66cc66;">&#40;</span>array<span style="color: #66cc66;">&#91;</span><span style="color: #ff0000;">'a'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'b'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'c'</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">as</span> unnest_2;
 unnest_1 <span style="color: #66cc66;">|</span> unnest_2 
<span style="color: #808080; font-style: italic;">----------+----------</span>
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> a
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> b
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> c
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> a
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> b
        <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> c
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">6</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Now. The problem is gone. We can unnest multiple arrays at once, with single call to unnest:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span>
    <span style="color: #66cc66;">*</span>
<span style="color: #993333; font-weight: bold;">from</span>
    unnest<span style="color: #66cc66;">&#40;</span>
        array<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span><span style="color: #66cc66;">,</span>
        array<span style="color: #66cc66;">&#91;</span><span style="color: #ff0000;">'a'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'b'</span><span style="color: #66cc66;">,</span><span style="color: #ff0000;">'c'</span><span style="color: #66cc66;">&#93;</span>
    <span style="color: #66cc66;">&#41;</span>;
 unnest <span style="color: #66cc66;">|</span> unnest 
<span style="color: #808080; font-style: italic;">--------+--------</span>
      <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> a
      <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">|</span> b
 <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> c
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Result of such unnest is also less surprising &#8211; if one (or more) arrays will &#8220;run out of elements" &#8211; null will be substituted.</p>
<p>The second part of the change (extended table() syntax) is what was used, to make it possible, but we can use it for other purposes too.</p>
<p>Let's assume we have two simple set-returning functions:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">function</span> t1<span style="color: #66cc66;">&#40;</span> <span style="color: #993333; font-weight: bold;">OUT</span> lang_oid INT4<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">OUT</span> lang_name TEXT <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">returns</span> setof record <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">select</span> oid::int4<span style="color: #66cc66;">,</span> lanname::text <span style="color: #993333; font-weight: bold;">from</span> pg_language <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">3</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> <span style="color: #993333; font-weight: bold;">sql</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">FUNCTION</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> t1<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;
 lang_oid <span style="color: #66cc66;">|</span> lang_name 
<span style="color: #808080; font-style: italic;">----------+-----------</span>
       <span style="color: #cc66cc;">12</span> <span style="color: #66cc66;">|</span> internal
       <span style="color: #cc66cc;">13</span> <span style="color: #66cc66;">|</span> c
       <span style="color: #cc66cc;">14</span> <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">sql</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>And second:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">function</span> t2<span style="color: #66cc66;">&#40;</span> <span style="color: #993333; font-weight: bold;">OUT</span> table_oid INT4<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">OUT</span> table_schema text<span style="color: #66cc66;">,</span> <span style="color: #993333; font-weight: bold;">OUT</span> <span style="color: #993333; font-weight: bold;">table_name</span> TEXT <span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">returns</span> setof record <span style="color: #993333; font-weight: bold;">as</span> $$
<span style="color: #993333; font-weight: bold;">select</span> c<span style="color: #66cc66;">.</span>oid::int4<span style="color: #66cc66;">,</span> n<span style="color: #66cc66;">.</span>nspname::text<span style="color: #66cc66;">,</span> c<span style="color: #66cc66;">.</span>relname::text
<span style="color: #993333; font-weight: bold;">from</span> pg_class c
    <span style="color: #993333; font-weight: bold;">join</span> pg_namespace n <span style="color: #993333; font-weight: bold;">on</span> c<span style="color: #66cc66;">.</span>relnamespace <span style="color: #66cc66;">=</span> n<span style="color: #66cc66;">.</span>oid
<span style="color: #993333; font-weight: bold;">where</span>
    c<span style="color: #66cc66;">.</span>relkind <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'r'</span>
<span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">5</span>;
$$ <span style="color: #993333; font-weight: bold;">language</span> <span style="color: #993333; font-weight: bold;">sql</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">FUNCTION</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> t2<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;
 table_oid <span style="color: #66cc66;">|</span> table_schema <span style="color: #66cc66;">|</span>  <span style="color: #993333; font-weight: bold;">table_name</span>   
<span style="color: #808080; font-style: italic;">-----------+--------------+---------------</span>
      <span style="color: #cc66cc;">2619</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_statistic
      <span style="color: #cc66cc;">1247</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_type
     <span style="color: #cc66cc;">16623</span> <span style="color: #66cc66;">|</span> public       <span style="color: #66cc66;">|</span> owocowy_rynek
      <span style="color: #cc66cc;">1260</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_authid
      <span style="color: #cc66cc;">1249</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_attribute
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>And now you can:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> <span style="color: #993333; font-weight: bold;">table</span><span style="color: #66cc66;">&#40;</span> t1<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">,</span> t2<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
 lang_oid <span style="color: #66cc66;">|</span> lang_name <span style="color: #66cc66;">|</span> table_oid <span style="color: #66cc66;">|</span> table_schema <span style="color: #66cc66;">|</span>  <span style="color: #993333; font-weight: bold;">table_name</span>   
<span style="color: #808080; font-style: italic;">----------+-----------+-----------+--------------+---------------</span>
       <span style="color: #cc66cc;">12</span> <span style="color: #66cc66;">|</span> internal  <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">2619</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_statistic
       <span style="color: #cc66cc;">13</span> <span style="color: #66cc66;">|</span> c         <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">1247</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_type
       <span style="color: #cc66cc;">14</span> <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">sql</span>       <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">16623</span> <span style="color: #66cc66;">|</span> public       <span style="color: #66cc66;">|</span> owocowy_rynek
   <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>    <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">1260</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_authid
   <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#91;</span><span style="color: #993333; font-weight: bold;">null</span><span style="color: #66cc66;">&#93;</span>    <span style="color: #66cc66;">|</span>      <span style="color: #cc66cc;">1249</span> <span style="color: #66cc66;">|</span> pg_catalog   <span style="color: #66cc66;">|</span> pg_attribute
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">5</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>(of course showing language and table information in the same result set doesn't make sense, but it's just an example).</p>
<p>It's a pretty cool addition. One that (by me) will not be used very often, but it's good to know that I can now unnest multiple arrays, and get the results in reasonable way. Thanks RhodiumToad (Andrew).</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">One comment <a href='http://www.depesz.com/2013/11/24/waiting-for-9-4-support-multi-argument-unnest-and-table-syntax-for-multiple-functions/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-42269" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-42269" title="">#</a></span> <a href='http://lasart.es/' rel='external nofollow' class='url'>Damian Jennings</a></div>  <div class="date">Nov 24, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/398a31e99faa0980aa1faaea4da9be93?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Just my little contribution when it comes to random row selection used with mysql &amp; php. Based on the solution that consists of returning the count(*) of a table, then using that value to select a random row.SELECT FLOOR(RAND() * COUNT(*)) AS rand_row FROM foo;SELECT * FROM foo LIMIT {$rand_row}, 1; orSELECT COUNT(*) AS rows FROM foo;SELECT * FROM foo LIMIT {rand(0,$rows-1)}, 1;The problem with that solution from the MySQL standpoint is that there still remains the possibility of duplicate selections when we want more than one row, especially if the table is not that large (e.g. what are the chances of getting at least 2 duplicate rows while selecting 5 randomly, 1 at a time, out of a set of 10).My approach is to rather generate unique random numbers from php, then fetch the corresponding table rows:1- Use the appropriate php methods to fetch the table count from MySQL as done before:SELECT COUNT(*) FROM foo;2- Use php to generate some unique random numbers based on the count.This is the php function that i use. It takes 3 arguments: the minimum and maximum range values, and the amount of unique random numbers to be returned. It returns these numbers as an array.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2772" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="c0b362cb7e" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="207"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">2 comments</span> | <span class="wpp-views">649 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">4 comments</span> | <span class="wpp-views">622 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">290 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">225 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">160 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">135 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">134 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">124 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">109 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

