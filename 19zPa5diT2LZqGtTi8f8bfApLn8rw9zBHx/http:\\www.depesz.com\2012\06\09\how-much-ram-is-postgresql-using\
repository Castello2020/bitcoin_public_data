http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/
HTTP/1.1 200 OK
Server: nginx
Date: Tue, 22 Jul 2014 18:42:58 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2466>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; How much RAM is PostgreSQL using?</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; How much RAM is PostgreSQL using? Comments Feed" href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2466' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2466">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" rel="bookmark" title="Permanent Link to How much RAM is PostgreSQL using?">How much RAM is PostgreSQL using?</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>June 9th, 2012 by depesz | Tags: <a href="http://www.depesz.com/tag/administration/" rel="tag">administration</a>, <a href="http://www.depesz.com/tag/linux/" rel="tag">linux</a>, <a href="http://www.depesz.com/tag/memory/" rel="tag">memory</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/ps/" rel="tag">ps</a>, <a href="http://www.depesz.com/tag/pss/" rel="tag">pss</a>, <a href="http://www.depesz.com/tag/ram/" rel="tag">ram</a>, <a href="http://www.depesz.com/tag/rss-2/" rel="tag">rss</a>, <a href="http://www.depesz.com/tag/shell/" rel="tag">shell</a>, <a href="http://www.depesz.com/tag/top/" rel="tag">top</a> |  <a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/#comments" title="Comment on How much RAM is PostgreSQL using?">4 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>(disclaimer: all the data and examples in here are on Linux &#8211; the same data can be probably obtained on other systems too, it's just that I work on Linux and don't know other systems well).</p>
<p>This question pops occasionally in various places &#8211; PostgreSQL is using too much memory, why is that, and how can it be mitigated?</p>
<p>Before we can go to &#8220;optimizing", we should understand the problem. But do we? Both standard tools &#8211; ps and top &#8211; lie. How/why? Let's see.</p>
<p><span id="more-2466"></span></p>
<p>I have a very simple PostgreSQL instance on my desktop, configured with 4 GB of shared buffers, and 100MB of work_mem. I did run some work, and now the ps shows:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">=$ ps -u pgdba uf
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
pgdba    32324  0.0  0.0  79788  1900 ?        S    14:26   0:00 sshd: pgdba@pts/13  
pgdba    32325  0.0  0.0  25844  5788 pts/13   Ss+  14:26   0:00  \_ -bash
pgdba    27502  0.0  0.8 4344112 109724 ?      S    14:18   0:00 /home/pgdba/work/bin/postgres
pgdba    27506  0.0  0.0  24792   620 ?        Ss   14:18   0:00  \_ postgres: logger process     
pgdba    27508  1.5 34.7 4346688 4274752 ?     Ss   14:18   0:14  \_ postgres: checkpointer process   
pgdba    27509  0.2 12.1 4346164 1495780 ?     Ss   14:18   0:02  \_ postgres: writer process     
pgdba    27510  0.3  0.1 4346164 17292 ?       Ss   14:18   0:03  \_ postgres: wal writer process   
pgdba    27511  0.0  0.0 4347168 2408 ?        Ss   14:18   0:00  \_ postgres: autovacuum launcher process   
pgdba    27512  0.0  0.0  26888   856 ?        Ss   14:18   0:00  \_ postgres: archiver process   last was 00000001000000060000004D
pgdba    27513  0.0  0.0  27184  1160 ?        Ss   14:18   0:00  \_ postgres: stats collector process   
pgdba    27713  5.6 34.8 4347268 4285716 ?     Ss   14:19   0:51  \_ postgres: depesz depesz [local] idle
pgdba    27722  2.6  3.1 4347412 392704 ?      Ss   14:19   0:23  \_ postgres: depesz depesz [local] idle
pgdba    27726 15.8 35.0 4352560 4309776 ?     Ss   14:19   2:25  \_ postgres: depesz depesz [local] idle</pre></td></tr></table></div>

<p>top shows basically the same numbers.</p>
<p>Which is suspicious, because &#8220;free" shows:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">=$ free
             total       used       free     shared    buffers     cached
Mem:      12296140   12144356     151784          0      26828   10644460
-/+ buffers/cache:    1473068   10823072
Swap:            0          0          0</pre></td></tr></table></div>

<p>i.e &#8211; only 1.5GB of ram used (and ~ 10GB used as disk cache &#8211; ready to be freed if any app would need more ram).</p>
<p>So how come I see such huge numbers in PS?</p>
<p>First of all &#8211; we need to disregard VSZ column. The one that's important is RSS. But its still not really useful:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">=$ ps -u pgdba o pid,rss:8,cmd | awk 'NR&gt;1 {A+=$2} {print} END{print &quot;Total RSS: &quot; A}'
  PID      RSS CMD
27502   109724 /home/pgdba/work/bin/postgres
27506      620 postgres: logger process     
27508  4274752 postgres: checkpointer process   
27509  1755420 postgres: writer process     
27510    17292 postgres: wal writer process   
27511     2408 postgres: autovacuum launcher process   
27512      856 postgres: archiver process   last was 00000001000000060000004D
27513     1160 postgres: stats collector process   
27713  4285716 postgres: depesz depesz [local] idle
27722   392700 postgres: depesz depesz [local] idle
27726  4309776 postgres: depesz depesz [local] idle
32324     1900 sshd: pgdba@pts/13  
32325     5788 -bash
Total RSS: 15158112</pre></td></tr></table></div>

<p>So, this clocks at ~ 15GB, which is more than I have in this box. So, what is the real memory usage. As in: how much memory I would gain, if I'd kill Pg?</p>
<p>Luckily, we can view what exactly is the RAM being used for, thanks to wonderful world of /proc directory/filesystem/mountpoint/fairy.</p>
<p>Each process on Linux has a directory in /proc. In this directory there is a number of files and directories. Don't be fooled by reported size of the files &#8211; they all have &#8220;0&#8243; bytes, but they do contain information. It's magic.</p>
<p>The one file we're interested in is &#8220;smaps".</p>
<p>Content of it looks like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">=$ sudo head -n 20 /proc/27713/smaps
00400000-00914000 r-xp 00000000 09:00 3545633                            /home/pgdba/work/bin/postgres
Size:               5200 kB
Rss:                 964 kB
Pss:                 214 kB
Shared_Clean:        964 kB
Shared_Dirty:          0 kB
Private_Clean:         0 kB
Private_Dirty:         0 kB
Referenced:          964 kB
Anonymous:             0 kB
AnonHugePages:         0 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB
Locked:                0 kB
00b13000-00b14000 r--p 00513000 09:00 3545633                            /home/pgdba/work/bin/postgres
Size:                  4 kB
Rss:                   4 kB
Pss:                   0 kB
Shared_Clean:          0 kB
...</pre></td></tr></table></div>

<p>For this particular process smaps has over 2000 lines, so I will not show you all of it.</p>
<p>So, anyway &#8211; this process &#8211; 27713 &#8211; according to ps, uses 4285716 kilobytes of RAM. So, what is it so big? Quick grep, and we see:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">=$ sudo grep -B1 -E '^Size: *[0-9]{6}' /proc/27713/smaps
7fde8dacc000-7fdf952d6000 rw-s 00000000 00:04 232882235                  /SYSV005a5501 (deleted)
Size:            4317224 kB</pre></td></tr></table></div>

<p>There is only one &#8220;block" that is over 100MB of size, and it's size is very close to total size of process.</p>
<p>Full information about it:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">7fde8dacc000-7fdf952d6000 rw-s 00000000 00:04 232882235                  /SYSV005a5501 (deleted)
Size:            4317224 kB
Rss:             4280924 kB
Pss:             1245734 kB
Shared_Clean:          0 kB
Shared_Dirty:    4280924 kB
Private_Clean:         0 kB
Private_Dirty:         0 kB
Referenced:      4280924 kB
Anonymous:             0 kB
AnonHugePages:         0 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB
Locked:                0 kB</pre></td></tr></table></div>

<p>Most of this information is more or less cryptic, but we see couple of things:</p>
<ul>
<li>it is shared memory (first line contains rw-s, where &#8220;s" is for shared)</li>
<li>by the look of it (/SYSV&#8230; deleted) it looks like the shared memory is done using mmaping deleted file &#8211; so the memory will be in &#8220;Cached", and not &#8220;Used" columns in free output.</li>
<li>Size of the shared block is 4317224, and 4280924 from it is actually resident in memory</li>
</ul>
<p>That's ok &#8211; that's shared_buffers. But the thing is &#8211; shared buffers are used by most of the backends. And, what's worse, not always to the same extent. For example, the same shared buffers data from process 27722:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="text" style="font-family:monospace;">=$ sudo grep -A14 7fde8dacc000-7fdf952d6000 /proc/27722/smaps
7fde8dacc000-7fdf952d6000 rw-s 00000000 00:04 232882235                  /SYSV005a5501 (deleted)
Size:            4317224 kB
Rss:              388652 kB
Pss:               95756 kB
Shared_Clean:          0 kB
Shared_Dirty:     388652 kB
Private_Clean:         0 kB
Private_Dirty:         0 kB
Referenced:       388652 kB
Anonymous:             0 kB
AnonHugePages:         0 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB
Locked:                0 kB</pre></td></tr></table></div>

<p>In here we see that this process requested/used only 388MB of the memory.</p>
<p>So calculating will be complex. For exaple &#8211; we might have two processes, each using 400MB of shared_buffers, but it doesn't tell us how much memory it is actually using &#8211; because it could be that they are using 100MB of the same buffers, and 300MB of different &#8211; so in total the memory usage would be 700MB.</p>
<p>We do know that total size of this shared_buffers block is 4317224. Which is great. But what about other things? Libraries for example &#8211; they can be shared by kernel between multiple processes.</p>
<p>Luckily, in 2007 Fengguang Wu <a href="http://lkml.indiana.edu/hypermail/linux/kernel/0708.1/3420.html">sent</a> (and previously wrote) a very cool patch for kernel &#8211; which added &#8220;Pss" info to smaps.</p>
<p>Basically, Pss is at most Rss, but gets decreased if the same pages of memory are used by more than one process.</p>
<p>That's why Pss above was so much lower than Rss/Size. For example &#8211; in the last example. Rss was given 388652, but Pss just 95756, which means that most of the pages this backend used was also used by 3 other backends.</p>
<p>So, now &#8211; knowing about Pss, we can finally get real memory usage of a running pg cluster:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ ps <span style="color: #66cc66;">-</span>u pgdba o pid<span style="color: #66cc66;">=</span> <span style="color: #66cc66;">|</span> sed <span style="color: #ff0000;">'s#.*#/proc/&amp;/smaps#'</span> <span style="color: #66cc66;">|</span> xargs sudo grep ^Pss: <span style="color: #66cc66;">|</span> awk <span style="color: #ff0000;">'{A+=$2} END{print A}'</span>
<span style="color: #cc66cc;">4329040</span></pre></td></tr></table></div>

<p>If you just said &#8220;WTF, WHAT DID HE RUN?!", let me explain. First command:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ ps <span style="color: #66cc66;">-</span>u pgdba o pid<span style="color: #66cc66;">=</span>
<span style="color: #cc66cc;">27502</span>
<span style="color: #66cc66;">...</span>
<span style="color: #cc66cc;">32325</span></pre></td></tr></table></div>

<p>just returns pids of pgdba user (usually you'll want postgres, but I'm different, and run PostgreSQL as pgdba).</p>
<p>Second &#8211; sed &#8211; changes the pids to paths to smaps files:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ ps <span style="color: #66cc66;">-</span>u pgdba o pid<span style="color: #66cc66;">=</span> <span style="color: #66cc66;">|</span> sed <span style="color: #ff0000;">'s#.*#/proc/&amp;/smaps#'</span>
<span style="color: #66cc66;">/</span>proc<span style="color: #66cc66;">/</span><span style="color: #cc66cc;">27502</span><span style="color: #66cc66;">/</span>smaps
<span style="color: #66cc66;">...</span>
<span style="color: #66cc66;">/</span>proc<span style="color: #66cc66;">/</span><span style="color: #cc66cc;">32325</span><span style="color: #66cc66;">/</span>smaps</pre></td></tr></table></div>

<p>Then I do simple grep for ^Pss lines in the files given from sed. Which returns lots of lines like:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">/</span>proc<span style="color: #66cc66;">/</span><span style="color: #cc66cc;">32325</span><span style="color: #66cc66;">/</span>smaps:Pss:                   <span style="color: #cc66cc;">0</span> kB
<span style="color: #66cc66;">/</span>proc<span style="color: #66cc66;">/</span><span style="color: #cc66cc;">32325</span><span style="color: #66cc66;">/</span>smaps:Pss:                   <span style="color: #cc66cc;">4</span> kB
<span style="color: #66cc66;">/</span>proc<span style="color: #66cc66;">/</span><span style="color: #cc66cc;">32325</span><span style="color: #66cc66;">/</span>smaps:Pss:                   <span style="color: #cc66cc;">4</span> kB</pre></td></tr></table></div>

<p>And then the awk summarizes 2nd column (which is the size). And I get the number 4329040 &#8211; in kilobytes.</p>
<p>So, theoretically, if I'd stop Pg, I would reclaim that much of RAM. Let's see if it's true:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ free; pg_ctl <span style="color: #66cc66;">-</span>m immediate stop; free
             total       used       free     shared    buffers     cached
Mem:      <span style="color: #cc66cc;">12296140</span>   <span style="color: #cc66cc;">12145424</span>     <span style="color: #cc66cc;">150716</span>          <span style="color: #cc66cc;">0</span>      <span style="color: #cc66cc;">40708</span>   <span style="color: #cc66cc;">10640968</span>
<span style="color: #66cc66;">-/+</span> buffers<span style="color: #66cc66;">/</span>cache:    <span style="color: #cc66cc;">1463748</span>   <span style="color: #cc66cc;">10832392</span>
Swap:            <span style="color: #cc66cc;">0</span>          <span style="color: #cc66cc;">0</span>          <span style="color: #cc66cc;">0</span>
waiting <span style="color: #993333; font-weight: bold;">for</span> server <span style="color: #993333; font-weight: bold;">to</span> shut down<span style="color: #66cc66;">....</span> done
server stopped
             total       used       free     shared    buffers     cached
Mem:      <span style="color: #cc66cc;">12296140</span>    <span style="color: #cc66cc;">7781960</span>    <span style="color: #cc66cc;">4514180</span>          <span style="color: #cc66cc;">0</span>      <span style="color: #cc66cc;">40856</span>    <span style="color: #cc66cc;">6325092</span>
<span style="color: #66cc66;">-/+</span> buffers<span style="color: #66cc66;">/</span>cache:    <span style="color: #cc66cc;">1416012</span>   <span style="color: #cc66cc;">10880128</span>
Swap:            <span style="color: #cc66cc;">0</span>          <span style="color: #cc66cc;">0</span>          <span style="color: #cc66cc;">0</span></pre></td></tr></table></div>

<p>Used memory dropped from 12145424 to 7781960 &#8211; meaning I got back 4363464 kB of RAM. Which is even a bit higher than expected 4329040, but it's close enough. And most of it came off disk cache &#8211; as expected, because it was used for shared_buffers.</p>
<p>This is all good, but can this method be used to estimate how much RAM I would reclaim by killing single backend?</p>
<p>No and yes. Shutting down whole Pg meant that the shared memory that it was using &#8211; could have been freed. In normal environments, when you kill backend &#8211; you end up freeing only the memory that was private to this backend. And this is usually depressingly low number.</p>
<p>For example, on another machine, with much more impressive hardware:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=&gt;</span> ps uxf <span style="color: #66cc66;">|</span> grep <span style="color: #993333; font-weight: bold;">user</span><span style="color: #66cc66;">.</span>db_name <span style="color: #66cc66;">|</span> sort <span style="color: #66cc66;">-</span>nk6 <span style="color: #66cc66;">|</span> tail <span style="color: #66cc66;">-</span>n <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span> tee <span style="color: #66cc66;">&gt;</span><span style="color: #66cc66;">&#40;</span> cat <span style="color: #66cc66;">-</span> <span style="color: #66cc66;">&gt;</span>&amp;<span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">|</span> awk <span style="color: #ff0000;">'{system(&quot;cat /proc/&quot;$2&quot;/smaps&quot;)}'</span> <span style="color: #66cc66;">|</span> grep ^Private <span style="color: #66cc66;">|</span> awk <span style="color: #ff0000;">'{A+=$2} END{print A}'</span>
postgres  <span style="color: #cc66cc;">5278</span>  <span style="color: #cc66cc;">8.2</span>  <span style="color: #cc66cc;">0.3</span> <span style="color: #cc66cc;">107465132</span> <span style="color: #cc66cc;">1727408</span> ?   Ss   <span style="color: #cc66cc;">13</span>:<span style="color: #cc66cc;">21</span>   <span style="color: #cc66cc;">0</span>:03  \_ postgres: <span style="color: #993333; font-weight: bold;">user</span> db_name aa<span style="color: #66cc66;">.</span>bbb<span style="color: #66cc66;">.</span>cc<span style="color: #66cc66;">.</span>dd<span style="color: #66cc66;">&#40;</span>eeeee<span style="color: #66cc66;">&#41;</span> idle
<span style="color: #cc66cc;">52580</span></pre></td></tr></table></div>

<p>I.e. &#8211; the process has 1.7GB of RSS (as visible in ps output), but only 52MB of it is Private memory that would be freed if it got killed.</p>
<p>So no &#8211; you can't use the Pss for this, but you can use Private_* data from smaps to get the number.</p>
<p>To summarize it all &#8211; PostgreSQL uses much less memory than it looks like at first sight, and while it is possible to get quite accurate numbers &#8211; you need to do some shell scripting to get them.</p>
<p>And now I brace myself for comments from the people that will point all technical mistakes in this post, or (what's worse) typos. <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p><!-- vim: set spell spelllang=en_US ft=xhtml: --></p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">4 comments <a href='http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-35563" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35563" title="">#</a></span> Vatroslav</div>  <div class="date">Jun 9, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/69a54391f06ce6b9436545c5604ed150?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>This is pretty advanced for my understanding, but it has helped me grasp a bit more about Linux and PostgreSQL, and for that, I&#8217;m thankful.</p>
	</li>
		
		
			
<li class="odd" id="comment-35609" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35609" title="">#</a></span> <a href='http://fraggod.net' rel='external nofollow' class='url'>Mike</a></div>  <div class="date">Jun 16, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/db0d5b15da76246bed0ba3c253b5ea82?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>While my memory on the subject is a bit fuzzy and me being a lousy reader, I&#8217;m afraid I can&#8217;t point out any specific mistakes.</p>
<p>I&#8217;d strongly suggest you to try out &#8220;smem&#8221; tool (www.selenic.com/smem/) though, which provides same valuable info in a much more *ahem* user-friendly way, as well as providing great aggregations of it.</p>
	</li>
		
		
			
<li class="odd" id="comment-35975" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35975" title="">#</a></span> 73rddef</div>  <div class="date">Jul 21, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/?d=identicon&amp;s=64' class='avatar avatar-64 photo avatar-default' height='64' width='64' />		<p>My version of ps aligns the output, which means that the command fails if the pids have a different number of digits. (It tries to access filenames such as &#8220;/proc/ 1792/smaps&#8221;)</p>
<p>I rewrote the sed as &#8216;s#[0-9]\+#/proc/&amp;/smaps#&#8217; which isn&#8217;t perfect but works</p>
	</li>
		
		
			
<li class="odd" id="comment-39434" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-39434" title="">#</a></span> <a href='http://filip.rembialkowski.net' rel='external nofollow' class='url'>Filip</a></div>  <div class="date">Apr 8, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/3c7762851de72b8505fa70cae4eb7c83?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>It&#8217;s worth to mention some tools which show process listings with better memory metrics than `ps`. Including `meminfo.py` <a href="http://koltsoff.com/pub/meminfo/" rel="nofollow">http://koltsoff.com/pub/meminfo/</a> &#8211; here private memory size is shown as URES.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2466" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="9776a5977f" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="229"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">656 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">4 comments</span> | <span class="wpp-views">631 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">295 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">237 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">163 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">157 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">139 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">135 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">127 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">110 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

