http://www.depesz.com/2010/01/03/waiting-for-8-5-exclusion-constraints/
HTTP/1.1 200 OK
Server: nginx
Date: Wed, 23 Jul 2014 18:03:08 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=1563>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Waiting for 8.5 &#8211; exclusion constraints</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Waiting for 8.5 &#8211; exclusion constraints Comments Feed" href="http://www.depesz.com/2010/01/03/waiting-for-8-5-exclusion-constraints/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2010/01/03/waiting-for-8-5-exclusion-constraints/' />
<link rel='shortlink' href='http://www.depesz.com/?p=1563' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-1563">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2010/01/03/waiting-for-8-5-exclusion-constraints/" rel="bookmark" title="Permanent Link to Waiting for 8.5 &#8211; exclusion constraints">Waiting for 8.5 &#8211; exclusion constraints</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>January 3rd, 2010 by depesz | Tags: <a href="http://www.depesz.com/tag/conflict/" rel="tag">conflict</a>, <a href="http://www.depesz.com/tag/constraint/" rel="tag">constraint</a>, <a href="http://www.depesz.com/tag/exclude/" rel="tag">exclude</a>, <a href="http://www.depesz.com/tag/hotel/" rel="tag">hotel</a>, <a href="http://www.depesz.com/tag/pg85/" rel="tag">pg85</a>, <a href="http://www.depesz.com/tag/pg90/" rel="tag">pg90</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/rooms/" rel="tag">rooms</a> |  <a href="http://www.depesz.com/2010/01/03/waiting-for-8-5-exclusion-constraints/#comments" title="Comment on Waiting for 8.5 &#8211; exclusion constraints">7 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>On 7th of December, Tom Lane <a href="http://archives.postgresql.org/pgsql-committers/2009-12/msg00035.php">committed</a> patch by Jeff Davis that adds general exclusion constraints:</p>
<p><code>Log Message:<br />
-----------<br />
Add exclusion constraints, which generalize the concept of uniqueness to<br />
support any indexable commutative operator, not just equality.  Two rows<br />
violate the exclusion constraint if &quot;row1.col OP row2.col&quot; is TRUE for<br />
each of the columns in the constraint.<br />
&nbsp;<br />
Jeff Davis, reviewed by Robert Haas</code></p>
<p><span id="more-1563"></span></p>
<p>Now, this sounds, useful, but after checking the docs, I have only slight idea on how to actually use this feature.</p>
<p>I know what it is for &#8211; it's a way to specify that such 2 rows cannot exist together. Simplest possible way of exclusion is unique index &#8211; 2 rows with the same (NOT NULL) value for given row, cannot exist at the same time in the same table.</p>
<p>So, knowing that it's the simplest way, let's try to use this new capability to emulate UNIQUE CONSTRAINT (side note: as docs say &#8211; it's possible, but not suggested, standard UNIQUE will be always faster).</p>
<p>So, test table, will have only 1 column, and this EXCLUSION CONSTRAINT on it. Here's the definition:</p>
<p><code>CREATE TABLE test (<br />
    i INT4,<br />
    EXCLUDE (i WITH =)<br />
);</code></p>
<p>What does it mean? It's simple &#8211; for every row, there is a violation, is there is any other row with the same ( operator &#8220;=" ) value in column <em>i</em>.</p>
<p>Let's test it. First, let's see how the table looks via \d:</p>
<p><code>     Table &quot;public.test&quot;<br />
 Column |  Type   | Modifiers<br />
--------+---------+-----------<br />
 i      | integer |<br />
Indexes:<br />
    &quot;test_i_exclusion&quot; btree (i)<br />
Exclusion constraints:<br />
    &quot;test_i_exclusion&quot; EXCLUDE USING btree (i WITH =)</code></p>
<p>2 simple sanity-checks by standard, correct inserts:</p>
<p><code>INSERT INTO test (i) VALUES (1);<br />
INSERT INTO test (i) VALUES (2);</code></p>
<p>And then INSERT that should break:</p>
<p><code># INSERT INTO test (i) VALUES (1);<br />
psql:z.sql:9: ERROR:  conflicting key value violates exclusion constraint &quot;test_i_exclusion&quot;<br />
DETAIL:  Key (i)=(1) conflicts with existing key (i)=(1).</code></p>
<p>Nice. Now for something more complex.</p>
<p>Let's try to use this capability to check for overlapping time ranges. This could be used for example for making sure that given room is only reserved by 1 user at any give point in time.</p>
<p>There is a problem with it, though, that I can't seem to find a way to define this exclusion using plain timestamptz datatypes &#8211; I have to resort to use geometric types for comparing ranges.</p>
<p>In case you're not familiar with the idea, here we go with some overview:</p>
<p>If you have a range, that you specify with 2 endpoints (1-10, or from 1st to 15th of November 2009), you can change it to geometric type (rectangle for example). For example &#8211; range &lt;1,10&gt; can be stored as rectangle (1,1)-(10,10). What is the purpose?</p>
<p>That's simple &#8211; searching for ranges in this way is usually faster using GiST indexes for geometric data, than using standard BTree indexes on base columns.</p>
<p>So, knowing this, let's create test table with time ranges, and exclusion constraint based on them:</p>
<p><code>CREATE TABLE test (<br />
    from_ts TIMESTAMPTZ,<br />
    to_ts   TIMESTAMPTZ,<br />
    CHECK ( from_ts &lt; to_ts ),<br />
    CONSTRAINT overlapping_times EXCLUDE USING GIST (<br />
        box(<br />
            point( extract(epoch FROM from_ts at time zone 'UTC'), extract(epoch FROM from_ts at time zone 'UTC') ),<br />
            point( extract(epoch FROM to_ts at time zone 'UTC')  , extract(epoch FROM to_ts at time zone 'UTC') )<br />
        ) WITH &amp;&amp;<br />
    )<br />
);</code></p>
<h1>PLEASE CHECK COMMENTS BEFORE IMPLEMENTING IT</h1>
<p>Scared with the example? Just check this:</p>
<p><code># \d test<br />
              Table &quot;public.test&quot;<br />
 Column  |           Type           | Modifiers<br />
---------+--------------------------+-----------<br />
 from_ts | timestamp with time zone |<br />
 to_ts   | timestamp with time zone |<br />
Indexes:<br />
    &quot;overlapping_times&quot; gist (box(point(date_part('epoch'::text, timezone('UTC'::text, from_ts)), date_part('epoch'::text, timezone('UTC'::text, from_ts))), point(date_part('epoch'::text, timezone('UTC'::text, to_ts)), date_part('epoch'::text, timezone('UTC'::text, to_ts)))))<br />
Check constraints:<br />
    &quot;test_check&quot; CHECK (from_ts &lt; to_ts)<br />
Exclusion constraints:<br />
    &quot;overlapping_times&quot; EXCLUDE USING gist (box(point(date_part('epoch'::text, timezone('UTC'::text, from_ts)), date_part('epoch'::text, timezone('UTC'::text, from_ts))), point(date_part('epoch'::text, timezone('UTC'::text, to_ts)), date_part('epoch'::text, timezone('UTC'::text, to_ts)))) WITH &amp;&amp;)</code></p>
<p>I'll get back to it (what it is, and how it works) in a minute, but first let's see if it really works. First, standard sanity check:</p>
<p><code>INSERT INTO test ( from_ts, to_ts ) VALUES ( '2009-01-01 01:23:45 EST', '2009-01-10 23:45:12 EST' );<br />
INSERT INTO test ( from_ts, to_ts ) VALUES ( '2009-02-01 01:23:45 EST', '2009-02-10 23:45:12 EST' );</code></p>
<p>Works fine, ranges do not overlap. But when I'll try to insert row with invalid (overlapping with some previous) range:</p>
<p><code># INSERT INTO test ( from_ts, to_ts ) VALUES ( '2009-01-08 00:00:00 EST', '2009-01-15 23:59:59 EST' );<br />
psql:z.sql:18: ERROR:  conflicting key value violates exclusion constraint &quot;overlapping_times&quot;<br />
DETAIL:  Key (box(point(date_part('epoch'::text, timezone('UTC'::text, from_ts)), date_part('epoch'::text, timezone('UTC'::text, from_ts))), point(date_part('epoch'::text, timezone('UTC'::text, to_ts)), date_part('epoch'::text, timezone('UTC'::text, to_ts)))))=((1232078399,1232078399),(1231387200,1231387200)) conflicts with existing key (box(point(date_part('epoch'::text, timezone('UTC'::text, from_ts)), date_part('epoch'::text, timezone('UTC'::text, from_ts))), point(date_part('epoch'::text, timezone('UTC'::text, to_ts)), date_part('epoch'::text, timezone('UTC'::text, to_ts)))))=((1231645512,1231645512),(1230787425,1230787425)).</code></p>
<p>So, we know it works. But how and why?</p>
<p>Let's bring back table definition for discussion:</p>
<p><code>CREATE TABLE test (<br />
    from_ts TIMESTAMPTZ,<br />
    to_ts   TIMESTAMPTZ,<br />
    CHECK ( from_ts &lt; to_ts ),<br />
    CONSTRAINT overlapping_times EXCLUDE USING GIST (<br />
        box(<br />
            point( extract(epoch FROM from_ts at time zone 'UTC'), extract(epoch FROM from_ts at time zone 'UTC') ),<br />
            point( extract(epoch FROM to_ts at time zone 'UTC')  , extract(epoch FROM to_ts at time zone 'UTC') )<br />
        ) WITH &amp;&amp;<br />
    )<br />
);</code></p>
<p>First line is obvious, so are next 2 lines &#8211; they simply define columns with timestamptz datatype (timestamp with time zone).</p>
<p>Next line is check &#8211; I added it so that I will be sure that from_ts is always before to_ts &#8211; to avoid application/test errors that would provide from_ts after to_ts. This could have been also done with trigger, with optionally switching values in case of bad order in them.</p>
<p>And now the constraint. First of all &#8211; this time I used named constraint. Without &#8220;CONSTRAINT overlapping_times" it would work just as fine, but on violation, it would report constraint check as &#8220;test_box_exclusion" which is not really usable.</p>
<p>Now, this exclude has been defined using GIST &#8211; it means that it will create GiST index &#8211; just like docs say &#8211; you will practically always use GiST for your constraint exclusions.</p>
<p>Within the exclusion, we create box(), and use &amp;&amp; operator, which (as you can <a href="http://www.postgresql.org/docs/current/interactive/functions-geometry.html">check</a>) finds whether 2 polygons overlap.</p>
<p>So, we have to create the polygons. Choosen polygons are boxes (rectangles), which are defined using 2 points. Each point gets its coordinates from from_ts and to_ts respectively, but since coordinates are assumed to be float values, and we have timestampts, we have to convert them to floats, using extract() function.</p>
<p>One more notice &#8211; extract() on timestamp<b>tz</b> is not immutable &#8211; which is required for indexes &#8211; so we couldn't use it directly &#8211; I had first to convert timestatmptz to timestamp, by requesting timestamp at specific timezone &#8211; in this situation I choose UTC which seems to be pretty sane &#8211; stable, doesn't have daylight savings, just works.</p>
<p>So, let's do it step by step, what are the actual values that our index (overlapping_times) will store, for row with (from_ts => '2009-01-01 01:23:45 EST', to_ts => '2009-01-10 23:45:12 EST').</p>
<p>First, let's convert the values to UTC:</p>
<p><code># SELECT '2009-01-01 01:23:45 EST'::timestamptz at time zone 'UTC', '2009-01-10 23:45:12 EST'::timestamptz at time zone 'UTC';<br />
      timezone       |      timezone<br />
---------------------+---------------------<br />
 2009-01-01 06:23:45 | 2009-01-11 04:45:12<br />
(1 row)</code></p>
<p>Now, let's extract epochs:</p>
<p><code>SELECT<br />
    extract( epoch from '2009-01-01 01:23:45 EST'::timestamptz at time zone 'UTC' ),<br />
    extract( epoch from '2009-01-10 23:45:12 EST'::timestamptz at time zone 'UTC' );<br />
 date_part  | date_part<br />
------------+------------<br />
 1230787425 | 1231645512<br />
(1 row)</code></p>
<p>Now, let's convert it to box:</p>
<p><code>&lt;code&gt;SELECT<br />
    box(<br />
        point(<br />
            extract( epoch from '2009-01-01 01:23:45 EST'::timestamptz at time zone 'UTC' ),<br />
            extract( epoch from '2009-01-01 01:23:45 EST'::timestamptz at time zone 'UTC' )<br />
        ),<br />
        point(<br />
            extract( epoch from '2009-01-10 23:45:12 EST'::timestamptz at time zone 'UTC' ),<br />
            extract( epoch from '2009-01-10 23:45:12 EST'::timestamptz at time zone 'UTC' )<br />
        )<br />
    );&lt;/code&gt;<br />
                       box<br />
-------------------------------------------------<br />
 (1231645512,1231645512),(1230787425,1230787425)<br />
(1 row)</code></p>
<p>Sweet. It looks pretty convoluted, but once you &#8220;get it" &#8211; it's all fine and simple.</p>
<p>What's more &#8211; readability of the code can be dramatically improved by providing a wrapper around calculations, like this:</p>
<p><code>CREATE OR REPLACE FUNCTION box_from_ts_range(in_first timestamptz, in_second timestamptz) RETURNS box as $$<br />
DECLARE<br />
    first_float  float8 := extract(epoch FROM in_first  AT TIME ZONE 'UTC');<br />
    second_float float8 := extract(epoch FROM in_second AT TIME ZONE 'UTC');<br />
BEGIN<br />
    RETURN box( point ( first_float, first_float), point( second_float, second_float ) );<br />
END;<br />
$$ language plpgsql IMMUTABLE;</code></p>
<p>And then, making the table like this:</p>
<p><code># CREATE TABLE test (<br />
    from_ts TIMESTAMPTZ,<br />
    to_ts   TIMESTAMPTZ,<br />
    CHECK ( from_ts &lt; to_ts ),<br />
    CONSTRAINT overlapping_times EXCLUDE USING GIST ( box_from_ts_range( from_ts, to_ts ) WITH &amp;&amp; )<br />
);<br />
\d test<br />
              Table &quot;public.test&quot;<br />
 Column  |           Type           | Modifiers<br />
---------+--------------------------+-----------<br />
 from_ts | timestamp with time zone |<br />
 to_ts   | timestamp with time zone |<br />
Indexes:<br />
    &quot;overlapping_times&quot; gist (box_from_ts_range(from_ts, to_ts))<br />
Check constraints:<br />
    &quot;test_check&quot; CHECK (from_ts &lt; to_ts)<br />
Exclusion constraints:<br />
    &quot;overlapping_times&quot; EXCLUDE USING gist (box_from_ts_range(from_ts, to_ts) WITH &amp;&amp;)</code></p>
<p>Actuall error message now is also more readable (although only slightly):</p>
<p><code># INSERT INTO test ( from_ts, to_ts ) VALUES ( '2009-01-08 00:00:00 EST', '2009-01-15 23:59:59 EST' );<br />
psql:z.sql:21: ERROR:  conflicting key value violates exclusion constraint &quot;overlapping_times&quot;<br />
DETAIL:  Key (box_from_ts_range(from_ts, to_ts))=((1232078399,1232078399),(1231387200,1231387200)) conflicts with existing key (box_from_ts_range(from_ts, to_ts))=((1231645512,1231645512),(1230787425,1230787425)).</code></p>
<p>Now, let's try to use the EXCLUDE for something more realistic &#8211; room reservations for hotel.</p>
<p>Let's assume following table structure:<br />
<code>CREATE TABLE reservations (<br />
    id          SERIAL PRIMARY KEY,<br />
    room_number INT4 NOT NULL,<br />
    from_ts     DATE NOT NULL,<br />
    to_ts       DATE NOT NULL,<br />
    guest_name  TEXT NOT NULL,<br />
    CHECK       ( from_ts &lt;= to_ts ),<br />
    CHECK       ( room_number &gt;= 101 AND room_number &lt;= 700 AND room_number % 100 &gt;= 1 AND room_number % 100 &lt;= 25 )<br />
);<br />
\d reservations<br />
                            Table &quot;public.reservations&quot;<br />
   Column    |  Type   |                         Modifiers<br />
-------------+---------+-----------------------------------------------------------<br />
 id          | integer | not null default nextval('reservations_id_seq'::regclass)<br />
 room_number | integer | not null<br />
 from_ts     | date    | not null<br />
 to_ts       | date    | not null<br />
 guest_name  | text    | not null<br />
Indexes:<br />
    &quot;reservations_pkey&quot; PRIMARY KEY, btree (id)<br />
Check constraints:<br />
    &quot;reservations_check&quot; CHECK (from_ts &lt;= to_ts)<br />
    &quot;reservations_room_number_check&quot; CHECK (room_number &gt;= 101 AND room_number &lt;= 700 AND (room_number % 100) &gt;= 1 AND (room_number % 100) &lt;= 25)</code></p>
<p>Small explanation &#8211; hotel works in &#8220;days" &#8211; you can't have reservation from 8am to 1pm &#8211; it is assumed that you can check-in not sooner than 3pm, and you have to check-out by 11am. And as for days &#8211; we store to_ts as the last day that customer reserverd &#8220;till midnight".</p>
<p>For example &#8211; if somebody makes a reservation from 1st of November, till 7th of November, &#8211; i.e. his room will be reserved for him from '2009-11-01 15:00:00&#8242; to '2009-11-07 11:00:00&#8242;, but in reservations table we will store it as:</p>
<ul>
<li>from_ts &#8211; 2009-11-01</li>
<li>to_ts &#8211; 2009-11-06 (not 7th, but 6th &#8211; as this is the last midnight for this reservation)</li>
</ul>
<p>This means that single-day reservations will have the same day in from_ts and to_ts columns. A bit strange perhaps, but workable.</p>
<p>Now. We need/want to add constraint that will make sure that the same room cannot be reserved 2 times.</p>
<p>Since we are creating the constraint using boxes, we actually have 2 axes &#8211; one can be used for time, and the other for room_number, so we can:</p>
<p><code>ALTER TABLE public.reservations ADD CONSTRAINT check_overlapping_reservations EXCLUDE USING GIST (<br />
    box (<br />
        point(<br />
            from_ts - '2000-01-01'::date,<br />
            room_number<br />
        ),<br />
        point(<br />
            ( to_ts - '2000-01-01'::date ) + 0.5,<br />
            room_number + 0.5<br />
        )<br />
    )<br />
    WITH &amp;&amp;<br />
);</code></p>
<p>You might wonder why I add 0.5 &#8211; it's simple &#8211; to avoid creation of boxes that have 0 width or height. Since base numbers (number of days since 2000-01-01, and room_number) are always integers, adding 0.5 there is safe &#8211; it will not get mixed with another day/room.</p>
<p>And now, let's test. First, insert simple reservation:</p>
<p><code># INSERT INTO reservations (room_number, from_ts, to_ts, guest_name) VALUES (101, '2010-01-05', '2010-01-23', 'test1');<br />
INSERT 0 1</code></p>
<p>Now, let's insert reservation that is in the same time, but for different room:</p>
<p><code># INSERT INTO reservations (room_number, from_ts, to_ts, guest_name) VALUES (102, '2010-01-07', '2010-01-21', 'test2');<br />
INSERT 0 1</code></p>
<p>And now, same room, but different time:</p>
<p><code># INSERT INTO reservations (room_number, from_ts, to_ts, guest_name) VALUES (101, '2010-01-25', '2010-01-30', 'test3');<br />
INSERT 0 1</code></p>
<p>All works fine. And now &#8211; let's add real conflict:</p>
<p><code># INSERT INTO reservations (room_number, from_ts, to_ts, guest_name) VALUES (101, '2010-01-07', '2010-01-08', 'test4');<br />
ERROR:  conflicting key value violates exclusion constraint &quot;check_overlapping_reservations&quot;<br />
DETAIL:  Key (box(point((from_ts - '2000-01-01'::date)::double precision, room_number::double precision), point(((to_ts - '2000-01-01'::date)::numeric + 0.5)::double precision, (room_number::numeric + 0.5)::double precision)))=((3660.5,101.5),(3659,101)) conflicts with existing key (box(point((from_ts - '2000-01-01'::date)::double precision, room_number::double precision), point(((to_ts - '2000-01-01'::date)::numeric + 0.5)::double precision, (room_number::numeric + 0.5)::double precision)))=((3675.5,101.5),(3657,101)).</code></p>
<p>Error message is (as usual) nearly unreadable (the DETAIL: line), but that's not the point. The point is that the conflict was nicely caught.</p>
<p>What's more &#8211; since this is constraint &#8211; we can add it to table that already has bad data in it, and it will correctly detect problem:</p>
<p><code># select * from reservations;<br />
 id | room_number |  from_ts   |   to_ts    | guest_name<br />
----+-------------+------------+------------+------------<br />
  1 |         101 | 2010-01-05 | 2010-01-23 | test1<br />
  2 |         102 | 2010-01-07 | 2010-01-21 | test2<br />
  3 |         101 | 2010-01-25 | 2010-01-30 | test3<br />
  4 |         101 | 2010-01-07 | 2010-01-08 | test4<br />
(4 rows)<br />
&nbsp;<br />
# ALTER TABLE public.reservations ADD CONSTRAINT check_overlapping_reservations EXCLUDE USING GIST (<br />
&gt;&gt;     box (<br />
&gt;&gt;         point(<br />
&gt;&gt;             from_ts - '2000-01-01'::date,<br />
&gt;&gt;             room_number<br />
&gt;&gt;         ),<br />
&gt;&gt;         point(<br />
&gt;&gt;             ( to_ts - '2000-01-01'::date ) + 0.5,<br />
&gt;&gt;             room_number + 0.5<br />
&gt;&gt;         )<br />
&gt;&gt;     )<br />
&gt;&gt;     WITH &amp;&amp;<br />
&gt;&gt; );<br />
NOTICE:  ALTER TABLE / ADD EXCLUDE will create implicit index &quot;check_overlapping_reservations&quot; for table &quot;reservations&quot;<br />
ERROR:  could not create exclusion constraint &quot;check_overlapping_reservations&quot;<br />
DETAIL:  Key (box(point((from_ts - '2000-01-01'::date)::double precision, room_number::double precision), point(((to_ts - '2000-01-01'::date)::numeric + 0.5)::double precision, (room_number::numeric + 0.5)::double precision)))=((3675.5,101.5),(3657,101)) conflicts with key (box(point((from_ts - '2000-01-01'::date)::double precision, room_number::double precision), point(((to_ts - '2000-01-01'::date)::numeric + 0.5)::double precision, (room_number::numeric + 0.5)::double precision)))=((3660.5,101.5),(3659,101)).</code></p>
<p>This is simply amazing. Brilliant feature. Even if the end-user-interface (the way actual constraints are defined) is <em>a bit</em> convoluted.</p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">7 comments <a href='http://www.depesz.com/2010/01/03/waiting-for-8-5-exclusion-constraints/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-28948" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-28948" title="">#</a></span> gregj</div>  <div class="date">Jan 4, 2010</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/6870ded0f7f315d7bc075aca723fdaf9?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I suppose they could have added naming feature. So that in app you could catch the exception by name. There&#8217;s still time to do it before 8.5 is out.</p>
	</li>
		
		
			
<li class="odd" id="comment-28949" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-28949" title="">#</a></span> <a href='http://scottrbailey.wordpress.com/' rel='external nofollow' class='url'>Scott Bailey</a></div>  <div class="date">Jan 4, 2010</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/ebba8ae20c62da220e741c126f5892e5?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>This will feel a lot less kludgy with a period data type. Jeff and Nathan Boley are working on getting range data types in as a contrib module. If not, we still have Jeff&#8217;s period type from pgFoundry. It&#8217;ll just be harder to install. </p>
<p><a href="http://pgfoundry.org/projects/temporal" rel="nofollow">http://pgfoundry.org/projects/temporal</a></p>
<p>Scott</p>
	</li>
		
		
			
<li class="mycomment" id="comment-28952" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-28952" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 4, 2010</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@gregj: not sure I get you &#8211; constraints can be named? I showed it in post.</p>
	</li>
		
		
			
<li class="odd" id="comment-32905" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-32905" title="">#</a></span> <a href='http://blog.tplus1.com' rel='external nofollow' class='url'>Matt Wilson</a></div>  <div class="date">Jan 15, 2011</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/454da7ba000fe740399a3e5a18c0ade4?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Thanks for putting this together.</p>
<p>Before postgresql 9, I would prevent overlapping stuff by putting in triggers.</p>
<p>Are exclusion constraints faster?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-34884" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-34884" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 25, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I&#8217;m putting it in comment, as I don&#8217;t like changing existing posts (aside from adding a note).</p>
<p>Implementing it by doing &#8220;extract(epoch from field at time zone &#8216;UTC&#8217;)&#8221; is unfortunately flawed.</p>
<p>The correct way would be to use function like:</p>
<p>create function epoch(timestamptz) returns double precision language sql immutable strict as $f$ select extract(epoch from $1); $f$</p>
<p>instead of the epoch(field) instead of extract(epoch from field at &#8230;).</p>
<p>Thanks for correction go to RhodiumToad @IRC.</p>
	</li>
		
		
			
<li class="odd" id="comment-35516" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35516" title="">#</a></span> yokoloko</div>  <div class="date">May 16, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/8d43914ed98d56cf76d20546cc7d1985?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Really really nice and helpful.</p>
<p>But there are few things i don&#8217;t really get.</p>
<p>- Why is it flawed to use extract(epoch from field at time zone ‘UTC’)? Cos i&#8217;m implementing it and it works perfectly</p>
<p>- Why are you substracting &#8217;2000-01-01&#8242;::date to the timestamp?</p>
<p>- And also for comprehension is there a reason why you put the room number in the box and not outside as in EXCLUDE USING GIST (room_number WITH =, box ( &#8230; ) WITH &amp;&amp;);</p>
	</li>
		
		
			
<li class="mycomment" id="comment-35517" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-35517" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">May 16, 2012</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@yokoloko:<br />
1. epoch &#8211; try changing timezone to very different, and retry.<br />
2. 2000-01-01 &#8211; to get smaller numbers. it doesn&#8217;t matter for pg, but makes for simpler reading<br />
3. you definitely could do it, but it would require installation of gist_btree extension.</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="1563" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="e410462f92" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="54"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">603 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">375 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">281 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">217 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">168 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">152 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">150 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">136 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">132 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/03/07/waiting-for-9-1-foreach-in-array/" title="Waiting for 9.1 &#8211; FOREACH IN ARRAY" class="wpp-post-title" target="_self">Waiting for 9.1 &#8211; FOREACH IN ARRAY</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">108 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

