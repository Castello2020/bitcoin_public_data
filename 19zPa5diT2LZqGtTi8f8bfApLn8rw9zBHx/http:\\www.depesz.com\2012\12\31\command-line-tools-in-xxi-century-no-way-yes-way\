http://www.depesz.com/2012/12/31/command-line-tools-in-xxi-century-no-way-yes-way/
HTTP/1.1 200 OK
Server: nginx
Date: Wed, 23 Jul 2014 03:40:33 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.5.12-1
X-Pingback: http://www.depesz.com/xmlrpc.php
Link: <http://www.depesz.com/?p=2589>; rel=shortlink

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="coder" content="MHweb.pl" />
<title>select * from depesz;  &raquo; Blog Archive   &raquo; Command line tools? In XXI century? No way! Yes way!</title>
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats -->
<link rel="stylesheet" href="http://www.depesz.com/wp-content/themes/depesz/style.css" type="text/css" media="screen" />
<!-- <link rel="stylesheet" href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/style1.css" type="text/css" media="screen" /> -->

<link rel="alternate" type="application/rss+xml" title="select * from depesz; RSS Feed" href="http://www.depesz.com/feed/" />
<link rel="pingback" href="http://www.depesz.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="select * from depesz; &raquo; Command line tools? In XXI century? No way! Yes way! Comments Feed" href="http://www.depesz.com/2012/12/31/command-line-tools-in-xxi-century-no-way-yes-way/feed/" />
<link rel='stylesheet' id='cookie-style-css'  href='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.depesz.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='wordpress-popular-posts-css'  href='http://www.depesz.com/wp-content/plugins/wordpress-popular-posts/style/wpp.css?ver=3.0.3' type='text/css' media='all' />
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.depesz.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var user_options = {"messageContent":"In order for this site to work properly, and in order to evaluate and improve the site we need to store small files (called cookies) on your computer.<br\/> Over 90% of all websites do this, however, since the 25th of May 2011 we are required by EU regulations to obtain your consent first. What do you say?","redirectLink":"http:\/\/google.com","okText":"That's fine","notOkText":"I don't agree","cookieName":"jsCookiewarning29Check","ajaxUrl":"http:\/\/www.depesz.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/cookie-warning/cookiewarning.js?ver=3.9.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.depesz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.depesz.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.depesz.com/2012/12/31/command-line-tools-in-xxi-century-no-way-yes-way/' />
<link rel='shortlink' href='http://www.depesz.com/?p=2589' />

<link rel="stylesheet" href="http://www.depesz.com/wp-content/plugins/dd-formmailer/dd-formmailer.css" type="text/css" media="screen" />
<style type="text/css">

</style>
<!--[if lte IE 7]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie.css" rel="stylesheet" type="text/css" /><![endif]-->
<!--[if lte IE 6]><link href="http://mhweb.pl/work/wp/wp-content/themes/blue-box/ie6.css" rel="stylesheet" type="text/css" /><![endif]-->
</head>
<body>
<div id="box">
	<div id="up">
		<div id="logo"></div>
		<div id="menu">

			<div class="lc"></div>
			
			<div class="main">
				<div id="nav">
					<ul class="nav">
					<li class="first"><a href="http://www.depesz.com">Blog</a></li>
					<li class="page_item page-item-1947"><a href="http://www.depesz.com/projects/">Projects</a></li>
<li class="page_item page-item-1618"><a href="http://www.depesz.com/contact/">Contact</a></li>
					</ul>
				</div>
			</div>

			<div class="rc"></div>

		</div>
	</div>

	<div id="top_cont"></div>
	<div id="mainbck">



	<div id="content">

	
		<div class="entry">
			<div class="post" id="post-2589">
				<div class="topek">
					<div class="name">
						<a href="http://www.depesz.com/2012/12/31/command-line-tools-in-xxi-century-no-way-yes-way/" rel="bookmark" title="Permanent Link to Command line tools? In XXI century? No way! Yes way!">Command line tools? In XXI century? No way! Yes way!</a><div class="rss-img"><a href="http://www.depesz.com/feed/">&nbsp;&nbsp;</a></div>
					</div>

					<small>December 31st, 2012 by depesz | Tags: <a href="http://www.depesz.com/tag/cli/" rel="tag">cli</a>, <a href="http://www.depesz.com/tag/console/" rel="tag">console</a>, <a href="http://www.depesz.com/tag/less/" rel="tag">less</a>, <a href="http://www.depesz.com/tag/pg_dump/" rel="tag">pg_dump</a>, <a href="http://www.depesz.com/tag/pg_restore/" rel="tag">pg_restore</a>, <a href="http://www.depesz.com/tag/postgresql/" rel="tag">postgresql</a>, <a href="http://www.depesz.com/tag/psql/" rel="tag">psql</a>, <a href="http://www.depesz.com/tag/terminal/" rel="tag">terminal</a> |  <a href="http://www.depesz.com/2012/12/31/command-line-tools-in-xxi-century-no-way-yes-way/#comments" title="Comment on Command line tools? In XXI century? No way! Yes way!">7 comments &#187;</a></small>
<br><small><big>Did it help? If yes - maybe you can help me? Donate BTC to <a href="https://blockchain.info/address/19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx">19zPa5diT2LZqGtTi8f8bfApLn8rw9zBHx</a></big></small>
				</div>
				
				<div class="the">
					<p>So, you just installed your PostgreSQL, and you have no idea how to use it &#8211; there is no icon in the menu of your OS, so how can you use it? Well, with the dreadful command line.</p>
<p>Of course &#8211; some people will never get used to textual programs. They need a GUI. That's fine. Not understandable for me, but who am I to judge. But knowing at least a basic things about standard command line tools for PostgreSQL can save you a lot of headache in some cases. Plus &#8211; you <em>always</em> have them so these are treated as default programs to use.</p>
<p><span id="more-2589"></span></p>
<p>There are <a href="http://www.postgresql.org/docs/current/interactive/reference-client.html">many tools</a>, but I think that you should know three of them. At least to the point where you're not afraid of them, and feel reasonably comfortable using them. This holy trinity is:</p>
<ol>
<li><a href="http://www.postgresql.org/docs/current/interactive/app-psql.html">psql</a></li>
<li><a href="http://www.postgresql.org/docs/current/interactive/app-pgdump.html">pg_dump</a></li>
<li><a href="http://www.postgresql.org/docs/current/interactive/app-pgrestore.html">pg_restore</a></li>
</ol>
<p>First, let's start with psql. When you'll first run it, you will see something more or less like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ psql
psql <span style="color: #66cc66;">&#40;</span>9<span style="color: #66cc66;">.</span>3devel<span style="color: #66cc66;">&#41;</span>
<span style="color: #993333; font-weight: bold;">Type</span> <span style="color: #ff0000;">&quot;help&quot;</span> <span style="color: #993333; font-weight: bold;">for</span> help<span style="color: #66cc66;">.</span>
&nbsp;
postgres<span style="color: #66cc66;">=</span>#</pre></td></tr></table></div>

<p>Immediately we see some interesting information. For starters &#8211; it tells us what is the version of psql (and PostgreSQL server) I'm using.</p>
<p>If, for whatever reason, I would use psql in version that is not the same as version of PostgreSQL server, I would see:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">psql <span style="color: #66cc66;">&#40;</span>9<span style="color: #66cc66;">.</span>1<span style="color: #66cc66;">.</span>3<span style="color: #66cc66;">,</span> server 9<span style="color: #66cc66;">.</span>3devel<span style="color: #66cc66;">&#41;</span>
WARNING: psql version <span style="color: #cc66cc;">9.1</span><span style="color: #66cc66;">,</span> server version <span style="color: #cc66cc;">9.3</span><span style="color: #66cc66;">.</span>
         <span style="color: #993333; font-weight: bold;">Some</span> psql features might <span style="color: #993333; font-weight: bold;">not</span> <span style="color: #993333; font-weight: bold;">work</span><span style="color: #66cc66;">.</span>
<span style="color: #993333; font-weight: bold;">Type</span> <span style="color: #ff0000;">&quot;help&quot;</span> <span style="color: #993333; font-weight: bold;">for</span> help<span style="color: #66cc66;">.</span></pre></td></tr></table></div>

<p>So, we know that I'm using 9.3devel version. Next, I see some welcoming &#8220;help" message, and a prompt. The &#8220;postgres" in prompt does not relate to name of the product &#8211; i.e. PostgreSQL database server, but is a name of database that I am connected to.</p>
<p>This is important. MySQL allows you to connect to database server, but not being connected to any specific database. Then you issue &#8220;USE &#8230;" statement, or something similar to connect to whatever database you're interested in. In PostgreSQL &#8211; when you have connection with server, the connection is always to one particular database.</p>
<p>Now &#8211; the help message. What does it show?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># help
You are <span style="color: #993333; font-weight: bold;">using</span> psql<span style="color: #66cc66;">,</span> the command<span style="color: #66cc66;">-</span>line interface <span style="color: #993333; font-weight: bold;">to</span> PostgreSQL<span style="color: #66cc66;">.</span>
<span style="color: #993333; font-weight: bold;">Type</span>:  \copyright <span style="color: #993333; font-weight: bold;">for</span> distribution terms
       \h <span style="color: #993333; font-weight: bold;">for</span> help <span style="color: #993333; font-weight: bold;">with</span> <span style="color: #993333; font-weight: bold;">SQL</span> commands
       \? <span style="color: #993333; font-weight: bold;">for</span> help <span style="color: #993333; font-weight: bold;">with</span> psql commands
       \g <span style="color: #993333; font-weight: bold;">or</span> terminate <span style="color: #993333; font-weight: bold;">with</span> semicolon <span style="color: #993333; font-weight: bold;">to</span> <span style="color: #993333; font-weight: bold;">execute</span> query
       \q <span style="color: #993333; font-weight: bold;">to</span> quit
postgres<span style="color: #66cc66;">=</span>#</pre></td></tr></table></div>

<p>Immediately you can notice something &#8211; all the things it tells you to type start with backslash.</p>
<p>This is a convention &#8211; all psql commands (not PostgreSQL! psql &#8211; as in: command line <em>client</em>) start with backslash. With the only (known to me) exception: help.</p>
<p>You can try, of course all the various commands it told you, but, if possible, try to wait until you'll be done with this blogpost.</p>
<p>The first, most basic, thing you have to know, is of course: how to exit the damn thing. Help text stated that it's \q, and indeed it works. But I, personally, prefer to use a keyboard shortcut. If you're not familiar with command line tools in general (and I assume you're not, since otherwise you wouldn't need to read this blogpost) you might not know but there is quite commonly used key combination, which is ctrl-d (that is: press control/ctrl key, and while pressing it press letter d).</p>
<p>OK. If you know how to exit psql, now for &#8211; what you can do with it.</p>
<p>Of course &#8211; you can use it to run SQL queries. As help page said &#8211; use \g or ; to run it:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #cc66cc;">1</span>;
 ?<span style="color: #993333; font-weight: bold;">column</span>?
<span style="color: #808080; font-style: italic;">----------</span>
        <span style="color: #cc66cc;">1</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #cc66cc;">2</span>\g
 ?<span style="color: #993333; font-weight: bold;">column</span>?
<span style="color: #808080; font-style: italic;">----------</span>
        <span style="color: #cc66cc;">2</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Some people forget that commands have to be ended, and press enter, at which point they are at loss, since &#8220;nothing happens":</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #cc66cc;">3</span>
postgres<span style="color: #66cc66;">-</span>#</pre></td></tr></table></div>

<p>Important thing to notice is that prompt has subtly changed. Instead of &#8220;=" it now contains &#8220;-". This means that psql is waiting for continuation of the SQL command. Because you might want to have multiline-commands:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span>
postgres<span style="color: #66cc66;">-</span># <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">,</span>
postgres<span style="color: #66cc66;">-</span># <span style="color: #cc66cc;">2</span>
postgres<span style="color: #66cc66;">-</span># ;
 ?<span style="color: #993333; font-weight: bold;">column</span>? <span style="color: #66cc66;">|</span> ?<span style="color: #993333; font-weight: bold;">column</span>?
<span style="color: #808080; font-style: italic;">----------+----------</span>
        <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">|</span>        <span style="color: #cc66cc;">2</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>There are also other possibilities for this character:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">&#40;</span>
postgres<span style="color: #66cc66;">&#40;</span># <span style="color: #ff0000;">'
postgres'</span># ab
postgres<span style="color: #ff0000;">'# '</span>
postgres<span style="color: #66cc66;">&#40;</span># <span style="color: #66cc66;">&#41;</span>
postgres<span style="color: #66cc66;">-</span># ;
 ?<span style="color: #993333; font-weight: bold;">column</span>?
<span style="color: #808080; font-style: italic;">----------</span>
         <span style="color: #66cc66;">+</span>
 ab      <span style="color: #66cc66;">+</span>
&nbsp;
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Note the ( and &#8216; characters in prompt &#8211; they show what has been opened, but not ended yet.</p>
<p>One great thing about psql, and something I miss a lot when I have to use mysql (program &#8211; command line interface to MySQL database), is another great keyboard shortcut &#8211; ctrl-c. In MySQL, it terminates the client, but in psql &#8211; like in bash, for example &#8211; it just cancels currently entered command, and lets you start writing new one:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">+</span> <span style="color: #cc66cc;">2</span>^C
postgres<span style="color: #66cc66;">=</span>#</pre></td></tr></table></div>

<p>Now that you know how to run some basic queries, let's see what other things you can get psql to do.</p>
<p>Of course &#8211; we can ask it to show list of databases, or tables.</p>
<p>To do it, you use &#8220;\l" and &#8220;\d" psql commands:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \l
                                     List <span style="color: #993333; font-weight: bold;">of</span> <span style="color: #993333; font-weight: bold;">databases</span>
      Name      <span style="color: #66cc66;">|</span>     Owner      <span style="color: #66cc66;">|</span> Encoding <span style="color: #66cc66;">|</span>   <span style="color: #993333; font-weight: bold;">Collate</span>   <span style="color: #66cc66;">|</span>    Ctype    <span style="color: #66cc66;">|</span>    Access privileges
<span style="color: #808080; font-style: italic;">----------------+----------------+----------+-------------+-------------+-------------------------</span>
 postgres       <span style="color: #66cc66;">|</span> postgres       <span style="color: #66cc66;">|</span> UTF8     <span style="color: #66cc66;">|</span> en_US<span style="color: #66cc66;">.</span>UTF<span style="color: #66cc66;">-</span><span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span> en_US<span style="color: #66cc66;">.</span>UTF<span style="color: #66cc66;">-</span><span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span>
 template0      <span style="color: #66cc66;">|</span> postgres       <span style="color: #66cc66;">|</span> UTF8     <span style="color: #66cc66;">|</span> en_US<span style="color: #66cc66;">.</span>UTF<span style="color: #66cc66;">-</span><span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span> en_US<span style="color: #66cc66;">.</span>UTF<span style="color: #66cc66;">-</span><span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">=</span>c<span style="color: #66cc66;">/</span>postgres            <span style="color: #66cc66;">+</span>
                <span style="color: #66cc66;">|</span>                <span style="color: #66cc66;">|</span>          <span style="color: #66cc66;">|</span>             <span style="color: #66cc66;">|</span>             <span style="color: #66cc66;">|</span> postgres<span style="color: #66cc66;">=</span>CTc<span style="color: #66cc66;">/</span>postgres
 template1      <span style="color: #66cc66;">|</span> postgres       <span style="color: #66cc66;">|</span> UTF8     <span style="color: #66cc66;">|</span> en_US<span style="color: #66cc66;">.</span>UTF<span style="color: #66cc66;">-</span><span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span> en_US<span style="color: #66cc66;">.</span>UTF<span style="color: #66cc66;">-</span><span style="color: #cc66cc;">8</span> <span style="color: #66cc66;">|</span> postgres<span style="color: #66cc66;">=</span>CTc<span style="color: #66cc66;">/</span>postgres  <span style="color: #66cc66;">+</span>
                <span style="color: #66cc66;">|</span>                <span style="color: #66cc66;">|</span>          <span style="color: #66cc66;">|</span>             <span style="color: #66cc66;">|</span>             <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">=</span>c<span style="color: #66cc66;">/</span>postgres
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">3</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
postgres<span style="color: #66cc66;">=</span># \d
No relations found<span style="color: #66cc66;">.</span></pre></td></tr></table></div>

<p>Technically \d does more, and it's not always good idea to use it, but I'll get to it later.</p>
<p>For reasons that are not really important, \d used word &#8220;relations". In case you're not sure what this means you can (for now) assume it's basically the same as table.</p>
<p>When I'll create some tables, I will see them, with some more or less interesting information:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> t1 <span style="color: #66cc66;">&#40;</span>i int4<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>
postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">table</span> t2 <span style="color: #66cc66;">&#40;</span>i int4<span style="color: #66cc66;">&#41;</span>;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span>
postgres<span style="color: #66cc66;">=</span># \d
       List <span style="color: #993333; font-weight: bold;">of</span> relations
 Schema <span style="color: #66cc66;">|</span> Name <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">Type</span>  <span style="color: #66cc66;">|</span> Owner
<span style="color: #808080; font-style: italic;">--------+------+-------+--------</span>
 public <span style="color: #66cc66;">|</span> t1   <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">table</span> <span style="color: #66cc66;">|</span> depesz
 public <span style="color: #66cc66;">|</span> t2   <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">table</span> <span style="color: #66cc66;">|</span> depesz
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">2</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Now, using the same \d, I can get information about how the table &#8220;looks like":</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \d t1
      <span style="color: #993333; font-weight: bold;">Table</span> <span style="color: #ff0000;">&quot;public.t1&quot;</span>
 <span style="color: #993333; font-weight: bold;">Column</span> <span style="color: #66cc66;">|</span>  <span style="color: #993333; font-weight: bold;">Type</span>   <span style="color: #66cc66;">|</span> Modifiers
<span style="color: #808080; font-style: italic;">--------+---------+-----------</span>
 i      <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">integer</span> <span style="color: #66cc66;">|</span></pre></td></tr></table></div>

<p>This is <b>the</b> thing you need to do, when someone asks you on IRC for schema of your table, or sometimes even &#8220;\d of your_table". Output of \d will contain all indexes, primary key, unique constraints, foreign keys, checks, constraints, and virtually anything you might need to know about a table.</p>
<p>In some databases there exists a concept of SCHEMA. It is a kind of namespace. In the examples above, the schema is public, and it's the default schema. But there are others. To list them you use \dn command (n for namespace):</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \dn
List <span style="color: #993333; font-weight: bold;">of</span> schemas
  Name  <span style="color: #66cc66;">|</span> Owner
<span style="color: #808080; font-style: italic;">--------+-------</span>
 public <span style="color: #66cc66;">|</span> pgdba
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Here is important bit of information: psql, but default, doesn't show you system schema/tables. To see them all, you just add uppercase letter S:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \dnS
      List <span style="color: #993333; font-weight: bold;">of</span> schemas
        Name        <span style="color: #66cc66;">|</span> Owner
<span style="color: #808080; font-style: italic;">--------------------+-------</span>
 information_schema <span style="color: #66cc66;">|</span> pgdba
 pg_catalog         <span style="color: #66cc66;">|</span> pgdba
 pg_temp_1          <span style="color: #66cc66;">|</span> pgdba
 pg_temp_2          <span style="color: #66cc66;">|</span> pgdba
 pg_temp_3          <span style="color: #66cc66;">|</span> pgdba
 pg_toast           <span style="color: #66cc66;">|</span> pgdba
 pg_toast_temp_1    <span style="color: #66cc66;">|</span> pgdba
 pg_toast_temp_2    <span style="color: #66cc66;">|</span> pgdba
 pg_toast_temp_3    <span style="color: #66cc66;">|</span> pgdba
 public             <span style="color: #66cc66;">|</span> pgdba
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">10</span> <span style="color: #993333; font-weight: bold;">rows</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>(you can also do it with \d &#8211; i.e. use \dS, but I will not paste the output as it's too long).</p>
<p>So, how does psql show you results. Assuming your terminal has 132 characters, if you'll select from table that has many columns, you'll see something like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_class <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">1</span>;
   relname    <span style="color: #66cc66;">|</span> relnamespace <span style="color: #66cc66;">|</span> reltype <span style="color: #66cc66;">|</span> reloftype <span style="color: #66cc66;">|</span> relowner <span style="color: #66cc66;">|</span> relam <span style="color: #66cc66;">|</span> relfilenode <span style="color: #66cc66;">|</span> reltablespace <span style="color: #66cc66;">|</span> relpages <span style="color: #66cc66;">|</span> reltuples <span style="color: #66cc66;">|</span> relall
visible <span style="color: #66cc66;">|</span> reltoastrelid <span style="color: #66cc66;">|</span> reltoastidxid <span style="color: #66cc66;">|</span> relhasindex <span style="color: #66cc66;">|</span> relisshared <span style="color: #66cc66;">|</span> relpersistence <span style="color: #66cc66;">|</span> relkind <span style="color: #66cc66;">|</span> relnatts <span style="color: #66cc66;">|</span> relchecks <span style="color: #66cc66;">|</span> relhasoids
<span style="color: #66cc66;">|</span> relhaspkey <span style="color: #66cc66;">|</span> relhasrules <span style="color: #66cc66;">|</span> relhastriggers <span style="color: #66cc66;">|</span> relhassubclass <span style="color: #66cc66;">|</span> relfrozenxid <span style="color: #66cc66;">|</span>        relacl         <span style="color: #66cc66;">|</span> reloptions
<span style="color: #808080; font-style: italic;">--------------+--------------+---------+-----------+----------+-------+-------------+---------------+----------+-----------+-------</span>
<span style="color: #808080; font-style: italic;">--------+---------------+---------------+-------------+-------------+----------------+---------+----------+-----------+------------</span>
<span style="color: #66cc66;">+</span><span style="color: #808080; font-style: italic;">------------+-------------+----------------+----------------+--------------+-----------------------+------------</span>
 pg_statistic <span style="color: #66cc66;">|</span>           <span style="color: #cc66cc;">11</span> <span style="color: #66cc66;">|</span>   <span style="color: #cc66cc;">10817</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">10</span> <span style="color: #66cc66;">|</span>     <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">11795</span> <span style="color: #66cc66;">|</span>             <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">21</span> <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">388</span> <span style="color: #66cc66;">|</span>
     <span style="color: #cc66cc;">12</span> <span style="color: #66cc66;">|</span>          <span style="color: #cc66cc;">2840</span> <span style="color: #66cc66;">|</span>             <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> t           <span style="color: #66cc66;">|</span> f           <span style="color: #66cc66;">|</span> p              <span style="color: #66cc66;">|</span> r       <span style="color: #66cc66;">|</span>       <span style="color: #cc66cc;">26</span> <span style="color: #66cc66;">|</span>         <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">|</span> f
<span style="color: #66cc66;">|</span> f          <span style="color: #66cc66;">|</span> f           <span style="color: #66cc66;">|</span> f              <span style="color: #66cc66;">|</span> f              <span style="color: #66cc66;">|</span>          <span style="color: #cc66cc;">712</span> <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#123;</span>pgdba<span style="color: #66cc66;">=</span>arwdDxt<span style="color: #66cc66;">/</span>pgdba<span style="color: #66cc66;">&#125;</span> <span style="color: #66cc66;">|</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>This doesn't really look good. But there are couple of ways to solve the problem.</p>
<p>First, is usage of extended output. To turn it on, or back off, you issue &#8220;\x" command:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \x
Expanded display <span style="color: #993333; font-weight: bold;">is</span> <span style="color: #993333; font-weight: bold;">on</span><span style="color: #66cc66;">.</span></pre></td></tr></table></div>

<p>And then, when you'll again run this query, you'll get:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_class <span style="color: #993333; font-weight: bold;">limit</span> <span style="color: #cc66cc;">1</span>;
<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#91;</span> RECORD <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#93;</span><span style="color: #808080; font-style: italic;">--+----------------------</span>
relname        <span style="color: #66cc66;">|</span> pg_statistic
relnamespace   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">11</span>
reltype        <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">10817</span>
reloftype      <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
relowner       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">10</span>
relam          <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
relfilenode    <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">11795</span>
reltablespace  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
relpages       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">21</span>
reltuples      <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">388</span>
relallvisible  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">12</span>
reltoastrelid  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2840</span>
reltoastidxid  <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
relhasindex    <span style="color: #66cc66;">|</span> t
relisshared    <span style="color: #66cc66;">|</span> f
relpersistence <span style="color: #66cc66;">|</span> p
relkind        <span style="color: #66cc66;">|</span> r
relnatts       <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">26</span>
relchecks      <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">0</span>
relhasoids     <span style="color: #66cc66;">|</span> f
relhaspkey     <span style="color: #66cc66;">|</span> f
relhasrules    <span style="color: #66cc66;">|</span> f
relhastriggers <span style="color: #66cc66;">|</span> f
relhassubclass <span style="color: #66cc66;">|</span> f
relfrozenxid   <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">712</span>
relacl         <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#123;</span>pgdba<span style="color: #66cc66;">=</span>arwdDxt<span style="color: #66cc66;">/</span>pgdba<span style="color: #66cc66;">&#125;</span>
reloptions     <span style="color: #66cc66;">|</span></pre></td></tr></table></div>

<p>Much better, isn't it?</p>
<p>There is also another way.</p>
<p>In your shell, set PAGER environment to value &#8220;less":</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">export PAGER<span style="color: #66cc66;">=</span>less</pre></td></tr></table></div>

<p>This possibly should be added to your ~/.bash_profile, or something like this.</p>
<p>Also, configure &#8220;less" properly. I use this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">export LESS<span style="color: #66cc66;">=</span><span style="color: #ff0000;">'-iMFXSx4R'</span></pre></td></tr></table></div>

<p>with these setting, I get both vertically, and horizontally, scrollable screen. Like in <a href="http://ascii.io/a/1806">here</a>.</p>
<p>Yet another option, is to redirect output to file.</p>
<p>This can be done from within psql using \o command, like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \o <span style="color: #66cc66;">/</span>tmp<span style="color: #66cc66;">/</span>test<span style="color: #66cc66;">.</span>output
postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #66cc66;">*</span> <span style="color: #993333; font-weight: bold;">from</span> pg_class;
postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #cc66cc;">123</span>;
postgres<span style="color: #66cc66;">=</span># \o
postgres<span style="color: #66cc66;">=</span># <span style="color: #993333; font-weight: bold;">select</span> <span style="color: #cc66cc;">256</span>;
 ?<span style="color: #993333; font-weight: bold;">column</span>?
<span style="color: #808080; font-style: italic;">----------</span>
      <span style="color: #cc66cc;">256</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Outputs from select * from pg_class <em>and</em> select 123; both were redirected to /tmp/test.ouput file, and now you can view it using any tool you want.</p>
<p>Of course, just like \o outputs text, \i can be used to read commands from file, and run them.</p>
<p>For example, let's create /tmp/test.sql file, with following content:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #993333; font-weight: bold;">count</span><span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">*</span><span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">FROM</span> pg_class;
\x
<span style="color: #993333; font-weight: bold;">SELECT</span> oid<span style="color: #66cc66;">,</span> relname <span style="color: #993333; font-weight: bold;">FROM</span> pg_class <span style="color: #993333; font-weight: bold;">LIMIT</span> <span style="color: #cc66cc;">2</span>;
\x
<span style="color: #993333; font-weight: bold;">SELECT</span> <span style="color: #cc66cc;">123</span>;</pre></td></tr></table></div>

<p>As you can see it contains both SQL queries and psql \* commands (in this case \x only), and when I'll run it:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \i <span style="color: #66cc66;">/</span>tmp<span style="color: #66cc66;">/</span>test<span style="color: #66cc66;">.</span><span style="color: #993333; font-weight: bold;">sql</span>
 <span style="color: #993333; font-weight: bold;">count</span>
<span style="color: #808080; font-style: italic;">-------</span>
   <span style="color: #cc66cc;">293</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span>
&nbsp;
Expanded display <span style="color: #993333; font-weight: bold;">is</span> <span style="color: #993333; font-weight: bold;">on</span><span style="color: #66cc66;">.</span>
<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#91;</span> RECORD <span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#93;</span><span style="color: #808080; font-style: italic;">---------</span>
oid     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">2619</span>
relname <span style="color: #66cc66;">|</span> pg_statistic
<span style="color: #66cc66;">-</span><span style="color: #66cc66;">&#91;</span> RECORD <span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">&#93;</span><span style="color: #808080; font-style: italic;">---------</span>
oid     <span style="color: #66cc66;">|</span> <span style="color: #cc66cc;">1247</span>
relname <span style="color: #66cc66;">|</span> pg_type
&nbsp;
Expanded display <span style="color: #993333; font-weight: bold;">is</span> off<span style="color: #66cc66;">.</span>
 ?<span style="color: #993333; font-weight: bold;">column</span>?
<span style="color: #808080; font-style: italic;">----------</span>
      <span style="color: #cc66cc;">123</span>
<span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span> <span style="color: #993333; font-weight: bold;">row</span><span style="color: #66cc66;">&#41;</span></pre></td></tr></table></div>

<p>Please note that both \o and \i can be &#8220;simulated" from shell, using simply redirects:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">psql <span style="color: #66cc66;">&lt;</span> <span style="color: #66cc66;">/</span>tmp<span style="color: #66cc66;">/</span>test<span style="color: #66cc66;">.</span><span style="color: #993333; font-weight: bold;">sql</span>
<span style="color: #66cc66;">&lt;</span>psql <span style="color: #66cc66;">&lt;</span> <span style="color: #66cc66;">/</span>tmp<span style="color: #66cc66;">/</span>test<span style="color: #66cc66;">.</span><span style="color: #993333; font-weight: bold;">sql</span> <span style="color: #66cc66;">&gt;</span> <span style="color: #66cc66;">/</span>tmp<span style="color: #66cc66;">/</span>test<span style="color: #66cc66;">.</span>ouput</pre></td></tr></table></div>

<p>Another command that I think you should know by heart, is: \e. When you'll enter it your editor of choice will be ran, so you will be able to edit the query in possibly more convenient way. But what exactly is editor of choice? Well, it depends on environment variables. In this particular case, psql runs command that is in one of these environment variables:</p>
<ol>
<li>PSQL_EDITOR</li>
<li>EDITOR</li>
<li>VISUAL</li>
</ol>
<p>So, if your editor of choice is, for example, kate, you can:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ export PSQL_EDITOR<span style="color: #66cc66;">=</span>kate
<span style="color: #66cc66;">=</span>$ psql</pre></td></tr></table></div>

<p>I, personally, prefer to have it set to &#8220;/usr/bin/vim -c &#8216;:set ft=sql'".</p>
<p>There are, of course, many more commands you can use &#8211; but I wanted to keep this as basic as possible. The last two commands I will mention in here, are your gateways to more information. First is &#8220;\?" &#8211; this shows list of all \* commands, and it's quite long (98 lines in my psql).</p>
<p>The other one, is one of the best things that psql can do to help you. It's the \h command.</p>
<p>When you'll type: \h, it will show you list of all possible SQL query &#8220;types", it's pretty long, so I will not copy paste it in here. And when you'll type: \h some_command &#8211; you will get syntax information for this command. For example:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">postgres<span style="color: #66cc66;">=</span># \h <span style="color: #993333; font-weight: bold;">create</span> <span style="color: #993333; font-weight: bold;">index</span>
Command:     <span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">INDEX</span>
Description: define a <span style="color: #993333; font-weight: bold;">new</span> <span style="color: #993333; font-weight: bold;">index</span>
Syntax:
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">UNIQUE</span> <span style="color: #66cc66;">&#93;</span> <span style="color: #993333; font-weight: bold;">INDEX</span> <span style="color: #66cc66;">&#91;</span> CONCURRENTLY <span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#91;</span> name <span style="color: #66cc66;">&#93;</span> <span style="color: #993333; font-weight: bold;">ON</span> <span style="color: #993333; font-weight: bold;">table_name</span> <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">USING</span> method <span style="color: #66cc66;">&#93;</span>
    <span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#123;</span> column_name <span style="color: #66cc66;">|</span> <span style="color: #66cc66;">&#40;</span> expression <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#125;</span> <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">COLLATE</span> collation <span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#91;</span> opclass <span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">ASC</span> <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">DESC</span> <span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">NULLS</span> <span style="color: #66cc66;">&#123;</span> <span style="color: #993333; font-weight: bold;">FIRST</span> <span style="color: #66cc66;">|</span> <span style="color: #993333; font-weight: bold;">LAST</span> <span style="color: #66cc66;">&#125;</span> <span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#91;</span><span style="color: #66cc66;">,</span> <span style="color: #66cc66;">...</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>
    <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">WITH</span> <span style="color: #66cc66;">&#40;</span> storage_parameter <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">value</span> <span style="color: #66cc66;">&#91;</span><span style="color: #66cc66;">,</span> <span style="color: #66cc66;">...</span> <span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#93;</span>
    <span style="color: #66cc66;">&#91;</span> TABLESPACE tablespace_name <span style="color: #66cc66;">&#93;</span>
    <span style="color: #66cc66;">&#91;</span> <span style="color: #993333; font-weight: bold;">WHERE</span> predicate <span style="color: #66cc66;">&#93;</span></pre></td></tr></table></div>

<p>And you can get this help for every query that you want. This helps me a lot, whenever I forget order of operations, or what exactly is possible to do, and so on.</p>
<p>In here, I'd like to conclude my review of psql. That doesn't mean I described what it can do. But &#8211; if you can't stand console-mode, you will probably not use psql anyway, and you just need the basics, so you will be able to provide requested information, when looking for help on <a href="irc://irc.freenode.net/%23postgresql,ischannel">irc</a>.</p>
<p>And if you'll like psql, you will read \?, \help, and of course <a href="http://www.postgresql.org/docs/current/interactive/app-psql.html">the fine manual</a>.</p>
<p>On to pg_dump.</p>
<p>This is <b>the</b> way to make dumps/backups of the database. Of course there are other ways, but this is the most basic thing.</p>
<p>When run with &#8211;help, it shows quite a lot of information, I will just show some examples.</p>
<p>First, to get full dump of a database, you just do:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">pg_dump database_name</pre></td></tr></table></div>

<p>That's all. Of course &#8211; you might need to provide &#8211;username/&#8211;host/&#8211;port, but no other options are needed.</p>
<p>Dump, in such case is printed to screen, and looks more or less like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ pg_dump postgres
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> statement_timeout <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_encoding <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'UTF8'</span>;
<span style="color: #993333; font-weight: bold;">SET</span> standard_conforming_strings <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">on</span>;
<span style="color: #993333; font-weight: bold;">SET</span> check_function_bodies <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">false</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_min_messages <span style="color: #66cc66;">=</span> warning;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Name: postgres; Type: COMMENT; Schema: -; Owner: pgdba</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
COMMENT <span style="color: #993333; font-weight: bold;">ON</span> <span style="color: #993333; font-weight: bold;">DATABASE</span> postgres <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #ff0000;">'default administrative connection database'</span>;
&nbsp;
<span style="color: #66cc66;">...</span></pre></td></tr></table></div>

<p>It will contain series of SQL commands, each prepended with meta-data comment, which create all tables, views, indexes, and so on, and of course load the data.</p>
<p>In some cases, you might want the dump, to contain also &#8220;DROP" commands, for example to be able to load the dump to database that contained previous version of the database (in which case normal dump, on loading, would cause errors due to creation of already-existing tables). This is done using:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ pg_dump <span style="color: #808080; font-style: italic;">--clean postgres</span>
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> statement_timeout <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_encoding <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'UTF8'</span>;
<span style="color: #993333; font-weight: bold;">SET</span> standard_conforming_strings <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">on</span>;
<span style="color: #993333; font-weight: bold;">SET</span> check_function_bodies <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">false</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_min_messages <span style="color: #66cc66;">=</span> warning;
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> search_path <span style="color: #66cc66;">=</span> public<span style="color: #66cc66;">,</span> pg_catalog;
&nbsp;
<span style="color: #993333; font-weight: bold;">DROP</span> <span style="color: #993333; font-weight: bold;">TABLE</span> public<span style="color: #66cc66;">.</span>t2;
<span style="color: #993333; font-weight: bold;">DROP</span> <span style="color: #993333; font-weight: bold;">TABLE</span> public<span style="color: #66cc66;">.</span>t1;
<span style="color: #993333; font-weight: bold;">DROP</span> EXTENSION plpgsql;
<span style="color: #993333; font-weight: bold;">DROP</span> SCHEMA public;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Name: postgres; Type: COMMENT; Schema: -; Owner: pgdba</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
COMMENT <span style="color: #993333; font-weight: bold;">ON</span> <span style="color: #993333; font-weight: bold;">DATABASE</span> postgres <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #ff0000;">'default administrative connection database'</span>;
<span style="color: #66cc66;">...</span></pre></td></tr></table></div>

<p>Alternatively you can make the dump that contains &#8220;CREATE DATABASE" command, but I personally don't recommend it. It's more flexible if name of database that data is loaded to is not hardcoded in dump.</p>
<p>One, very, very helpful option is: &#8211;schema-only option, which together with &#8211;table, gives you ability to do:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ pg_dump <span style="color: #808080; font-style: italic;">--schema-only --table t1 postgres</span>
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> statement_timeout <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_encoding <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'UTF8'</span>;
<span style="color: #993333; font-weight: bold;">SET</span> standard_conforming_strings <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">on</span>;
<span style="color: #993333; font-weight: bold;">SET</span> check_function_bodies <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">false</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_min_messages <span style="color: #66cc66;">=</span> warning;
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> search_path <span style="color: #66cc66;">=</span> public<span style="color: #66cc66;">,</span> pg_catalog;
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> default_tablespace <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">''</span>;
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> default_with_oids <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">false</span>;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Name: t1; Type: TABLE; Schema: public; Owner: depesz; Tablespace:</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> <span style="color: #993333; font-weight: bold;">TABLE</span> t1 <span style="color: #66cc66;">&#40;</span>
    i <span style="color: #993333; font-weight: bold;">integer</span>
<span style="color: #66cc66;">&#41;</span>;
&nbsp;
&nbsp;
<span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">TABLE</span> public<span style="color: #66cc66;">.</span>t1 OWNER <span style="color: #993333; font-weight: bold;">TO</span> depesz;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump complete</span>
<span style="color: #808080; font-style: italic;">--</span></pre></td></tr></table></div>

<p>That is &#8211; get SQL command to create given table, and just this table.</p>
<p>Of course, output from pg_dump should be sent to a file, not to screen, and this can be done using shell redirect:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">pg_dump database_name <span style="color: #66cc66;">&gt;</span> some_file</pre></td></tr></table></div>

<p>or using &#8211;file switch:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">pg_dump <span style="color: #808080; font-style: italic;">--file=some_file database_name</span></pre></td></tr></table></div>

<p>All the dumps shown above were done using normal, human-readable format. Which has certain benefits (mostly being human readable), but it makes certain things harder.</p>
<p>Luckily, there is, much better, custom format. To use it, you just do:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">pg_dump <span style="color: #808080; font-style: italic;">--format=custom --file=some_file database_name</span></pre></td></tr></table></div>

<p>The most immediate difference is how you restore from dump. When you use normal, plain text format &#8211; to load the dump you would use psql. Using &#8220;psql -f dump.file", or psql's &#8220;\i" command, or perhaps using redirection, like &#8220;psql &lt; dump.file".</p>
<p>But when you use custom format, to restore you have to use pg_restore tool, which has great capabilities, including, but not limiting to, loading data, from single dump, in multiple parallel threads, and loading just parts of dump file.</p>
<p>But before I will go to pg_restore, let me just finish quickly information about pg_dump.</p>
<p>Basically the only option that I want to cover is &#8211;data-only option. Just like &#8220;&#8211;schema-only", it modifies what will be dumped &#8211; this time, by removing all information about tables/ views, and alike, and dumping just the data from all tables (or single table if &#8211;table would be used).</p>
<p>The problem with data-only dumps is, that while they look like a sensible solution &#8211; they quite often cause problems. This is because Pg, when loading data, will load it to pre-existing tables. With their possibly existing foreign keys.</p>
<p>In many cases pg_dump is smart enough to order data so that loading will work, but in some cases, you will see:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ pg_dump <span style="color: #808080; font-style: italic;">--data-only postgres</span>
pg_dump: NOTICE: there are circular foreign<span style="color: #66cc66;">-</span><span style="color: #993333; font-weight: bold;">key</span> constraints among these <span style="color: #993333; font-weight: bold;">table</span><span style="color: #66cc66;">&#40;</span>s<span style="color: #66cc66;">&#41;</span>:
pg_dump:   t2
pg_dump: You might <span style="color: #993333; font-weight: bold;">not</span> be able <span style="color: #993333; font-weight: bold;">to</span> restore the dump <span style="color: #993333; font-weight: bold;">without</span> <span style="color: #993333; font-weight: bold;">using</span> <span style="color: #808080; font-style: italic;">--disable-triggers or temporarily dropping the constraints.</span>
pg_dump: Consider <span style="color: #993333; font-weight: bold;">using</span> a <span style="color: #993333; font-weight: bold;">full</span> dump instead <span style="color: #993333; font-weight: bold;">of</span> a <span style="color: #808080; font-style: italic;">--data-only dump to avoid this problem.</span>
<span style="color: #66cc66;">...</span></pre></td></tr></table></div>

<p>This means that there will be some issues when loading the dump. Options are listed, and of course running full dump is preferable, but the &#8211;disable-triggers option is interesting. This makes dump look like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> statement_timeout <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_encoding <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'UTF8'</span>;
<span style="color: #993333; font-weight: bold;">SET</span> standard_conforming_strings <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">on</span>;
<span style="color: #993333; font-weight: bold;">SET</span> check_function_bodies <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">false</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_min_messages <span style="color: #66cc66;">=</span> warning;
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> search_path <span style="color: #66cc66;">=</span> public<span style="color: #66cc66;">,</span> pg_catalog;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Data for Name: t1; Type: TABLE DATA; Schema: public; Owner: depesz</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> <span style="color: #993333; font-weight: bold;">SESSION</span> AUTHORIZATION <span style="color: #993333; font-weight: bold;">DEFAULT</span>;
&nbsp;
<span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">TABLE</span> t1 DISABLE <span style="color: #993333; font-weight: bold;">TRIGGER</span> <span style="color: #993333; font-weight: bold;">ALL</span>;
&nbsp;
COPY t1 <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">FROM</span> stdin;
\<span style="color: #66cc66;">.</span>
&nbsp;
&nbsp;
<span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">TABLE</span> t1 ENABLE <span style="color: #993333; font-weight: bold;">TRIGGER</span> <span style="color: #993333; font-weight: bold;">ALL</span>;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Data for Name: t2; Type: TABLE DATA; Schema: public; Owner: depesz</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">TABLE</span> t2 DISABLE <span style="color: #993333; font-weight: bold;">TRIGGER</span> <span style="color: #993333; font-weight: bold;">ALL</span>;
&nbsp;
COPY t2 <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">FROM</span> stdin;
\<span style="color: #66cc66;">.</span>
&nbsp;
&nbsp;
<span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">TABLE</span> t2 ENABLE <span style="color: #993333; font-weight: bold;">TRIGGER</span> <span style="color: #993333; font-weight: bold;">ALL</span>;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump complete</span>
<span style="color: #808080; font-style: italic;">--</span></pre></td></tr></table></div>

<p>That is, before loading data to any table, triggers are disabled, and then re-enabled afterwards.</p>
<p>One issue with this is: consider when you want to use data-only dumps. To be able to sensibly use them you need to remove all rows from tables before you will load such dump. And this means that (in non-trivial databases) it will be problematic: find all tables, remove all rows using DELETE or TRUNCATE, and then load dump.</p>
<p>Really, really &#8211; I have yet to see a case when using &#8211;data-only makes sense. Especially since you can use custom format, and just &#8220;extract" data from it.</p>
<p>As always, if you want to know more <a href="http://www.postgresql.org/docs/current/interactive/app-pgdump.html">the fine manual</a> is the best source of information.</p>
<p>Now, for the final piece: pg_restore.</p>
<p>As I wrote earlier, to use pg_restore on dump, it has to be made using &#8220;custom" format.</p>
<p>This can be done using:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ pg_dump <span style="color: #808080; font-style: italic;">--format=custom --file=test.dump postgres</span></pre></td></tr></table></div>

<p>To load such dump to existing database, you do:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">pg_restore <span style="color: #808080; font-style: italic;">--database=testdb test.dump</span></pre></td></tr></table></div>

<p>When ran without &#8211;database option, it will &#8220;decode" test.dump to SQL format, and print it to terminal &#8211; basically making the same output as pg_dump in plain format.</p>
<p>If you'll ever want to load large dump, with lots of data, indexes and so on, you will praise its (pg_restores) &#8211;jobs option, which lets you trivially speed up restoration by parallelization of restoration tasks. Usage is trivial:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;">pg_restore <span style="color: #808080; font-style: italic;">--database=testdb --jobs=16 test.dump</span></pre></td></tr></table></div>

<p>But, the single best thing about pg_restore is ability to use custom restoration lists.</p>
<p>First you need to generate content list for dump. This is done using &#8211;list option:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ pg_restore <span style="color: #808080; font-style: italic;">--list test.dump</span>
;
; Archive created at Mon <span style="color: #993333; font-weight: bold;">Dec</span> <span style="color: #cc66cc;">31</span> <span style="color: #cc66cc;">17</span>:<span style="color: #cc66cc;">21</span>:<span style="color: #cc66cc;">52</span> <span style="color: #cc66cc;">2012</span>
;     dbname: postgres
;     TOC Entries: <span style="color: #cc66cc;">15</span>
;     Compression: <span style="color: #cc66cc;">9</span>
;     Dump Version: <span style="color: #cc66cc;">1.12</span><span style="color: #66cc66;">-</span><span style="color: #cc66cc;">0</span>
;     Format: CUSTOM
;     <span style="color: #993333; font-weight: bold;">Integer</span>: <span style="color: #cc66cc;">4</span> bytes
;     Offset: <span style="color: #cc66cc;">8</span> bytes
;     Dumped <span style="color: #993333; font-weight: bold;">from</span> <span style="color: #993333; font-weight: bold;">database</span> version: 9<span style="color: #66cc66;">.</span>3devel
;     Dumped <span style="color: #993333; font-weight: bold;">by</span> pg_dump version: 9<span style="color: #66cc66;">.</span>3devel
;
;
; Selected TOC Entries:
;
<span style="color: #cc66cc;">1972</span>; <span style="color: #cc66cc;">1262</span> <span style="color: #cc66cc;">30048</span> <span style="color: #993333; font-weight: bold;">DATABASE</span> <span style="color: #66cc66;">-</span> postgres depesz
<span style="color: #cc66cc;">6</span>; <span style="color: #cc66cc;">2615</span> <span style="color: #cc66cc;">2200</span> SCHEMA <span style="color: #66cc66;">-</span> public pgdba
<span style="color: #cc66cc;">1973</span>; <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">0</span> COMMENT <span style="color: #66cc66;">-</span> SCHEMA public pgdba
<span style="color: #cc66cc;">1974</span>; <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">0</span> ACL <span style="color: #66cc66;">-</span> public pgdba
<span style="color: #cc66cc;">171</span>; <span style="color: #cc66cc;">3079</span> <span style="color: #cc66cc;">11783</span> EXTENSION <span style="color: #66cc66;">-</span> plpgsql
<span style="color: #cc66cc;">1975</span>; <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">0</span> COMMENT <span style="color: #66cc66;">-</span> EXTENSION plpgsql
<span style="color: #cc66cc;">169</span>; <span style="color: #cc66cc;">1259</span> <span style="color: #cc66cc;">30049</span> <span style="color: #993333; font-weight: bold;">TABLE</span> public t1 depesz
<span style="color: #cc66cc;">170</span>; <span style="color: #cc66cc;">1259</span> <span style="color: #cc66cc;">30052</span> <span style="color: #993333; font-weight: bold;">TABLE</span> public t2 depesz
<span style="color: #cc66cc;">1966</span>; <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">30049</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">DATA</span> public t1 depesz
<span style="color: #cc66cc;">1967</span>; <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">30052</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">DATA</span> public t2 depesz
<span style="color: #cc66cc;">1962</span>; <span style="color: #cc66cc;">2606</span> <span style="color: #cc66cc;">30056</span> <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> public t1_pkey depesz
<span style="color: #cc66cc;">1964</span>; <span style="color: #cc66cc;">2606</span> <span style="color: #cc66cc;">30058</span> <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> public t2_pkey depesz
<span style="color: #cc66cc;">1965</span>; <span style="color: #cc66cc;">2606</span> <span style="color: #cc66cc;">30059</span> FK <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> public t2_i_fkey depesz</pre></td></tr></table></div>

<p>Lines starting with &#8220;;" are comments.</p>
<p>You can redirect the list to file, edit it, removing any lines you want, and then use for restoration:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="sql" style="font-family:monospace;"><span style="color: #66cc66;">=</span>$ cat modified<span style="color: #66cc66;">.</span>list
<span style="color: #cc66cc;">171</span>; <span style="color: #cc66cc;">3079</span> <span style="color: #cc66cc;">11783</span> EXTENSION <span style="color: #66cc66;">-</span> plpgsql
<span style="color: #cc66cc;">1975</span>; <span style="color: #cc66cc;">0</span> <span style="color: #cc66cc;">0</span> COMMENT <span style="color: #66cc66;">-</span> EXTENSION plpgsql
<span style="color: #cc66cc;">1965</span>; <span style="color: #cc66cc;">2606</span> <span style="color: #cc66cc;">30059</span> FK <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> public t2_i_fkey depesz
&nbsp;
<span style="color: #cc66cc;">17</span>:<span style="color: #cc66cc;">27</span>:02 depesz@h3po4 ~
<span style="color: #66cc66;">=</span>$ pg_restore <span style="color: #808080; font-style: italic;">--use-list=modified.list test.dump</span>
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> statement_timeout <span style="color: #66cc66;">=</span> <span style="color: #cc66cc;">0</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_encoding <span style="color: #66cc66;">=</span> <span style="color: #ff0000;">'UTF8'</span>;
<span style="color: #993333; font-weight: bold;">SET</span> standard_conforming_strings <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">on</span>;
<span style="color: #993333; font-weight: bold;">SET</span> check_function_bodies <span style="color: #66cc66;">=</span> <span style="color: #993333; font-weight: bold;">false</span>;
<span style="color: #993333; font-weight: bold;">SET</span> client_min_messages <span style="color: #66cc66;">=</span> warning;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner:</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">CREATE</span> EXTENSION <span style="color: #993333; font-weight: bold;">IF</span> <span style="color: #993333; font-weight: bold;">NOT</span> <span style="color: #993333; font-weight: bold;">EXISTS</span> plpgsql <span style="color: #993333; font-weight: bold;">WITH</span> SCHEMA pg_catalog;
&nbsp;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner:</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
COMMENT <span style="color: #993333; font-weight: bold;">ON</span> EXTENSION plpgsql <span style="color: #993333; font-weight: bold;">IS</span> <span style="color: #ff0000;">'PL/pgSQL procedural language'</span>;
&nbsp;
&nbsp;
<span style="color: #993333; font-weight: bold;">SET</span> search_path <span style="color: #66cc66;">=</span> public<span style="color: #66cc66;">,</span> pg_catalog;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- Name: t2_i_fkey; Type: FK CONSTRAINT; Schema: public; Owner: depesz</span>
<span style="color: #808080; font-style: italic;">--</span>
&nbsp;
<span style="color: #993333; font-weight: bold;">ALTER</span> <span style="color: #993333; font-weight: bold;">TABLE</span> <span style="color: #993333; font-weight: bold;">ONLY</span> t2
    <span style="color: #993333; font-weight: bold;">ADD</span> <span style="color: #993333; font-weight: bold;">CONSTRAINT</span> t2_i_fkey <span style="color: #993333; font-weight: bold;">FOREIGN</span> <span style="color: #993333; font-weight: bold;">KEY</span> <span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span> <span style="color: #993333; font-weight: bold;">REFERENCES</span> t2<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>;
&nbsp;
&nbsp;
<span style="color: #808080; font-style: italic;">--</span>
<span style="color: #808080; font-style: italic;">-- PostgreSQL database dump complete</span>
<span style="color: #808080; font-style: italic;">--</span></pre></td></tr></table></div>

<p>As you can see, I left in modified.list just 3 lines &#8211; for extension, its config, and one foreign key. And that's precisely what got restored.</p>
<p>This feature is simply indispensable when dealing with many databases, and I use it on virtually daily basis. Potential use-cases include creation of simple backups of single objects when modifying them, extracting similar functions to be able to textually compare them, and more.</p>
<p>Pg_restore of course also has <a href="http://www.postgresql.org/docs/current/interactive/app-pgrestore.html">manual</a>, but it's help information (pg_restore &#8211;help) should be enough usually.</p>
<p>This blogpost definitely did not cover everything. I didn't show how to automatically create batch updates of large tables in psql, or how to customize its prompt. Or how to use pg_dump to copy databases, but I think it covers the basics. If you are a GUI user, consider using them for a bit longer &#8211; the first notion that &#8220;it can do very little", &#8220;it doesn't show me all information that I'm used to" relatively quickly should be changed into &#8220;it's amazing how fast it is and what it actually can do".</p>
<p><!-- vim: set spell spelllang=en_US ft=xhtml: --></p>

									</div>
			</div>
		</div>
			
		<div class="comm">
			
<!-- You can start editing here. -->

<div class="bobcomments">




	<ol class="commentlist">

	<li class="commenthead"><h3 id="comments">7 comments <a href='http://www.depesz.com/2012/12/31/command-line-tools-in-xxi-century-no-way-yes-way/feed/'><div class="rss-img"></div></a></h3></li>
	
			
<li class="odd" id="comment-36866" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36866" title="">#</a></span> Radomir</div>  <div class="date">Dec 31, 2012</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/299df8bb0831decdbbe2a145de01b4ae?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I&#8217;d only like to thank you for amazing blog posts about Postgres you made in 2012. Dzięki! <img src="http://www.depesz.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-36867" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36867" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 1, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Radomir: you&#8217;re welcome.</p>
	</li>
		
		
			
<li class="odd" id="comment-36889" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36889" title="">#</a></span> Unknown</div>  <div class="date">Jan 1, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/6e1567bcde6a97498a0e02053d33038d?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hello! Thanks for the post! If there are more posts for beginners like that, I&#8217;m pretty sure Postgres will get much more popular.</p>
<p>IMHO, you explain things in very understandable way. Have you considered to write a book?</p>
	</li>
		
		
			
<li class="mycomment" id="comment-36890" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36890" title="">#</a></span> <a href='http://www.depesz.com/' rel='external nofollow' class='url'>depesz</a></div>  <div class="date">Jan 1, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/d5ecebb85919589a7cbf7f90eb34eacf?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>@Unknown:<br />
Thanks.<br />
As for a book, I was already asked about it, but I don&#8217;t think it&#8217;s a good idea. I do not consider myself good writer, and to make things worse &#8211; I don&#8217;t actually like technical books :/</p>
	</li>
		
		
			
<li class="odd" id="comment-36938" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36938" title="">#</a></span> <a href='http://blog.tplus1.com' rel='external nofollow' class='url'>Matt Wilson</a></div>  <div class="date">Jan 2, 2013</div></div>
				<img alt='' src='http://0.gravatar.com/avatar/454da7ba000fe740399a3e5a18c0ade4?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>I didn&#8217;t know about the &#8211;jobs option to pg_restore until I read this post.  That is wonderful!</p>
	</li>
		
		
			
<li class="odd" id="comment-36971" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36971" title="">#</a></span> Karl Faller</div>  <div class="date">Jan 7, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/351ce2cd041c900d3db1b2b17707734b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Hi, thx for great txt. I read the psql &#8220;help for windows&#8221; users, and changed my runpsql.bat accordingly to use 1252 (german windows), but i don&#8217;t see a way to make lucida as default. Doing that manually every time one starts psql is not only a nuisance, but not very professional <img src="http://www.depesz.com/wp-includes/images/smilies/icon_wink.gif" alt=";-)" class="wp-smiley" /><br />
Any hint?<br />
TIA<br />
Karl</p>
	</li>
		
		
			
<li class="odd" id="comment-36972" onMouseOver="this.style.background='#dcdcdc'" onMouseOut="this.style.background='#e9e9e9'">

		<div class="name"><div class="title"><span class="bu"><a href="#comment-36972" title="">#</a></span> Karl Faller</div>  <div class="date">Jan 7, 2013</div></div>
				<img alt='' src='http://1.gravatar.com/avatar/351ce2cd041c900d3db1b2b17707734b?s=64&amp;d=identicon&amp;r=X' class='avatar avatar-64 photo' height='64' width='64' />		<p>Ups, sorry- found it. Running as admin, changing  and let it save the calling link does the job.<br />
HAND<br />
Karl</p>
	</li>
		
		
		
	</ol>
	
	
	

	
	
	<form action="http://www.depesz.com/wp-comments-post.php" method="post" id="commentform">

	<h2 id="respond">Leave a comment</h2>

		
	
		<label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="2" />
				
		<label for="email">E-mail</label>
		<input type="text" name="email" id="email" value="" tabindex="3" size="22" />		
		
		<label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="4" />
	
	
		<label for="text">Your text</label>
		<textarea name="comment" id="comment" cols="5" rows="10" tabindex="5"></textarea>

		<input name="submit" type="submit" id="submit" tabindex="6" value="Submit comment" />
		<input type="hidden" name="comment_post_ID" value="2589" />
	
	<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="3ef6cd2ffd" /></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="53"/></p>
	</form>


</div>
		</div>
	
	
	</div>
<div id="sidebar">
<div class="rsidebar">
		<ul>
			<li id="search-3" class="widget widget_search"><h2 class="widgettitle">Search</h2>
<form method="get" id="searchform" action="http://www.depesz.com/">
<input name="s" id="s" type="text" value="Write your text. Press the button!" onfocus="if (this.value == 'Write your text. Press the button!') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Write your text. Press the button!';}" tabindex="1"/>
<input type="submit" id="searchsubmit" value="" />
</form>
<br /><br />
<div id="podzialka"></div></li>
<li id="linkcat-659" class="widget widget_links"><h2 class="widgettitle">Follow me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.depesz.com/comments/feed/">Comments RSS</a></li>
<li><a href="http://depesz.com/feed/">Posts RSS</a></li>

	</ul>
</li>


<!-- Wordpress Popular Posts Plugin v3.0.3 [W] [weekly] [views] [regular] -->
<li id="wpp-3" class="widget popular-posts">
<h2 class="widgettitle">Popular Posts</h2>

<ul class="wpp-list">
<li><a href="http://www.depesz.com/2014/07/15/waiting-for-9-5-psql-show-tablespace-size-in-db/" title="Waiting for 9.5 &#8211; psql: Show tablespace size in \db+" class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; psql: Show tablespace size in \db+</a>  <span class="post-stats"><span class="wpp-comments">3 comments</span> | <span class="wpp-views">587 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/07/14/waiting-for-9-5-implement-import-foreign-schema/" title="Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA." class="wpp-post-title" target="_self">Waiting for 9.5 &#8211; Implement IMPORT FOREIGN SCHEMA.</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">364 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/10/why-is-upsert-so-complicated/" title="Why is UPSERT so complicated?" class="wpp-post-title" target="_self">Why is UPSERT so complicated?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">252 views</span></span> </li>
<li><a href="http://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/" title="CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03" class="wpp-post-title" target="_self">CHAR(x) vs. VARCHAR(x) vs. VARCHAR vs. TEXT &#8211; UPDATED 2010-03-03</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">192 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/05/06/understanding-postgresql-conf-log/" title="Understanding postgresql.conf : log*" class="wpp-post-title" target="_self">Understanding postgresql.conf : log*</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">147 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/06/09/how-much-ram-is-postgresql-using/" title="How much RAM is PostgreSQL using?" class="wpp-post-title" target="_self">How much RAM is PostgreSQL using?</a>  <span class="post-stats"><span class="wpp-comments">1 comment</span> | <span class="wpp-views">132 views</span></span> </li>
<li><a href="http://www.depesz.com/2008/05/05/error-operator-does-not-exist-integer-text-how-to-fix-it/" title="&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?" class="wpp-post-title" target="_self">&#8220;ERROR:  operator does not exist: integer = text&#8221; how to fix it?</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">118 views</span></span> </li>
<li><a href="http://www.depesz.com/2014/01/29/getting-count-of-distinct-elements-per-group-in-postgresql/" title="Getting count of distinct elements, per group, in PostgreSQL." class="wpp-post-title" target="_self">Getting count of distinct elements, per group, in PostgreSQL.</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">116 views</span></span> </li>
<li><a href="http://www.depesz.com/2011/07/14/write-ahead-log-understanding-postgresql-conf-checkpoint_segments-checkpoint_timeout-checkpoint_warning/" title="Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning" class="wpp-post-title" target="_self">Write Ahead Log + Understanding postgresql.conf: checkpoint_segments, checkpoint_timeout, checkpoint_warning</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">116 views</span></span> </li>
<li><a href="http://www.depesz.com/2012/11/14/how-i-learned-to-stop-worrying-and-love-the-triggers/" title="How I Learned to Stop Worrying and Love the Triggers" class="wpp-post-title" target="_self">How I Learned to Stop Worrying and Love the Triggers</a>  <span class="post-stats"><span class="wpp-comments">0 comments</span> | <span class="wpp-views">97 views</span></span> </li>

</ul>
</li>

<!-- End Wordpress Popular Posts Plugin v3.0.3 -->
<li id="linkcat-4" class="widget widget_links"><h2 class="widgettitle">postgresql</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://www.postgresql.org/docs/current/interactive/index.html">Documentation</a></li>
<li><a href="http://explain.depesz.com/">Explain Analyze analyzer</a></li>
<li><a href="irc://irc.freenode.net/#postgresql">IRC help channel</a></li>
<li><a href="http://archives.postgresql.org/">Mailing Lists search</a></li>
<li><a href="http://planet.postgresql.org/">PG Planet</a></li>
<li><a href="http://www.postgresql.org/" title="strona domowa postgresqla">PostgreSQL Home Page</a></li>

	</ul>
</li>

<li id="linkcat-376" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class='xoxo blogroll'>
<li><a href="http://search.cpan.org/~depesz/">CPAN</a></li>
<li><a href="https://github.com/depesz/">GitHub</a></li>
<li><a href="http://linkedin.com/in/depesz">Linked In</a></li>
<li><a href="http://www.depesz.com/toyota-gt86/">Samochód</a></li>

	</ul>
</li>

<li id="theme-switcher" class="widget widget_themeswitcher"><h2 class="widgettitle">Theme</h2>
<ul id="themeswitcher">
<li>
       <select style="width:140px" name="themeswitcher" onchange="location.href='http://www.depesz.com/index.php?wptheme=' + this.options[this.selectedIndex].value;">
               <option value="AS 400">AS 400</option>
               <option value="GrayGA">GrayGA</option>
               <option value="Twenty Eleven">Twenty Eleven</option>
               <option value="Twenty Fourteen">Twenty Fourteen</option>
               <option value="Twenty Ten">Twenty Ten</option>
               <option value="Twenty Thirteen">Twenty Thirteen</option>
               <option value="Twenty Twelve">Twenty Twelve</option>
               <option value="WordPress Classic">WordPress Classic</option>
               <option value="WordPress Default">WordPress Default</option>
               <option value="Wordpress Depesz" selected="selected">Wordpress Depesz</option>
       </select>
</li>
</ul></li>
		</ul>
</div>
		
</div>



<div id="space"></div>
</div>
<div id="bottom">
	<div class="navigation">			
					</div>
</div>

<!-- Powered by WPtouch: 3.4.4 --><script type='text/javascript' src='http://www.depesz.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
</div>

</body>
</html>

