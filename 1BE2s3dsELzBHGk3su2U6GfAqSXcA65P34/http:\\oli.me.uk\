HTTP/1.1 200 OK
Server: cloudflare-nginx
Date: Tue, 22 Jul 2014 15:05:08 GMT
Content-Type: text/html
Connection: close
Set-Cookie: __cfduid=daf1a7d6bd45bdc582a0fa1ce2372049e1406041507856; expires=Mon, 23-Dec-2019 23:50:00 GMT; path=/; domain=.oli.me.uk; HttpOnly
Last-Modified: Sat, 26 Apr 2014 13:24:40 GMT
Cache-Control: max-age=86400
Expires: Wed, 23 Jul 2014 15:05:16 GMT
Vary: Accept-Encoding
CF-RAY: 14e088e01d350880-IAD
Content-Encoding: gzip


<!DOCTYPE html>
<!--[if IEMobile 7 ]><html class="no-js iem7"><![endif]-->
<!--[if lt IE 9]><html class="no-js lte-ie8"><![endif]-->
<!--[if (gt IE 8)|(gt IEMobile 7)|!(IEMobile)|!(IE)]><!--><html class="no-js" lang="en"><!--<![endif]-->
<head>
<meta charset="utf-8">
<title>Oliver.prototype.blog</title>
<meta name="author" content="Oliver Caldwell">
<meta name="description" content="I&rsquo;m going to be talking at Vim London again on Tuesday, so I thought I&rsquo;d knock a quick presentation together. I was planning on using &hellip;">
 
<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="canonical" href="http://oli.me.uk">
<link href="/favicon.png" rel="icon">
<link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css">
<link href="/atom.xml" rel="alternate" title="Oliver.prototype.blog" type="application/atom+xml">
 
<link href="http://fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css">
<link href="http://fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css">
<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-29131116-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</head>
<body>
<header role="banner"><hgroup>
<h1><a href="/">Oliver.prototype.blog</a></h1>
<h2>A place to share my knowledge and escapades in the world of web development.</h2>
</hgroup>
</header>
<nav role="navigation"><ul class="subscription" data-subscription="rss">
<li><a href="/atom.xml" rel="subscribe-rss" title="subscribe via RSS">RSS</a></li>
</ul>
<form action="http://google.com/search" method="get">
<fieldset role="search">
<input type="hidden" name="q" value="site:oli.me.uk"/>
<input class="search" type="text" name="q" results="0" placeholder="Search"/>
</fieldset>
</form>
<ul class="main-navigation">
<li><a href="/">Blog</a></li>
<li><a href="/archives/">Archives</a></li>
<li><a href="/about-me/">About me</a></li>
<li><a href="https://github.com/Wolfy87/oli.me.uk">Source</a></li>
</ul>
</nav>
<div id="main">
<div id="content">
<div class="blog-index">
<article>
<header>
<h1 class="entry-title"><a href="/2014/04/26/installing-vimdeck-on-arch/">Installing Vimdeck on Arch</a></h1>
<p class="meta">
<time datetime="2014-04-26T14:07:06+01:00" pubdate data-updated="true">Apr 26<span>th</span>, 2014</time>
| <a href="/2014/04/26/installing-vimdeck-on-arch/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>I&rsquo;m going to be talking at <a href="http://www.meetup.com/Vim-London/events/174682642/">Vim London</a> again on Tuesday, so I thought I&rsquo;d knock a quick presentation together. I was planning on using <a href="https://github.com/tybenz/vimdeck">Vimdeck</a> but it turns out it freaks out on Arch based Linux distributions, such as Manjaro (probably some other Linux distributions too).</p>
<p>When executing <code>gem install vimdeck</code> it tries to install <a href="https://github.com/rmagick/rmagick">RMagick</a> which fails on my machine due to <a href="http://www.imagemagick.org/">ImageMagick</a> being installed with HDRI enabled, whatever the hell that is. Apparently the Arch team enabled it a few months back.</p>
<p>The solution? Clone the <a href="https://github.com/rmagick/rmagick">RMagick</a> repository and execute the following.</p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem buld rmagick.gemspec
</span><span class='line'>gem install rmagick-<span class="o">{</span>VERSION<span class="o">}</span>.gem
</span></code></pre></td></tr></table></div></figure>
<p>Where <code>{VERSION}</code> is the version of the gem you just built. This will vary from the time when this post was written so I won&rsquo;t bother putting the version I had in there. Now you have a fixed version of the gem install you can execute <code>gem install vimdeck</code> and it will install perfectly. If not, congratulations, you&rsquo;ve discovered a new issue!</p>
<p>Now to write my presentation&hellip;</p>
</div>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2014/03/18/always-remain-a-beginner/">Always remain a beginner</a></h1>
<p class="meta">
<time datetime="2014-03-18T21:47:00+00:00" pubdate data-updated="true">Mar 18<span>th</span>, 2014</time>
| <a href="/2014/03/18/always-remain-a-beginner/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>I&rsquo;ve been programming for about five years, almost entirely in JavaScript, three of which being professional. I&rsquo;m an absolute beginner and I always will be. This is a <em>good</em> thing.</p>
<h2>Why remain a beginner?</h2>
<p>Because a beginner will never stop learning. A beginner must continually progress or they will stall in their learning, stalling brings with it unhappiness and resentment towards your current situation.</p>
<p>Beginners actively seek knowledge and cast away presumptions, even if they think they know all there is to know about a given technology.</p>
</div>
<footer>
<a rel="full-article" href="/2014/03/18/always-remain-a-beginner/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/12/13/test-private-methods/">Test private methods</a></h1>
<p class="meta">
<time datetime="2013-12-13T20:08:00+00:00" pubdate data-updated="true">Dec 13<span>th</span>, 2013</time>
| <a href="/2013/12/13/test-private-methods/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>If you&rsquo;ve barely passed the title and you&rsquo;re already seething with violent rage: This post is for you. Like medicine that smells of battery acid, this&rsquo;ll taste bad and potentially kill you but you&rsquo;ll feel better for it in a few days. Let it settle in for a bit, mull it over.</p>
<p>Herein lies my argument <strong>for</strong> testing private methods within JavaScript (and potentially any other language that doesn&rsquo;t have <em>real</em> privates, I&rsquo;m looking at you, Python).</p>
</div>
<footer>
<a rel="full-article" href="/2013/12/13/test-private-methods/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/12/05/graph-from-scratch/">Graph from scratch</a></h1>
<p class="meta">
<time datetime="2013-12-05T23:55:00+00:00" pubdate data-updated="true">Dec 5<span>th</span>, 2013</time>
| <a href="/2013/12/05/graph-from-scratch/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p><a href="https://twitter.com/jamesfublo">James</a> mentioned the other day that he was drinking tea &ldquo;at a rate of 0.75 OC&rdquo;, OC being the base speed at which I myself consume a mug of that wonderful brown liquid. A little <a href="http://www.exquisitetweets.com/tweets?eids=EjQYN9DC57.EjRXe1BtqC.ElgZl6JxF6.ElhqBY5I1Q.Elhyot1C20.ElhGxGBZoi">flurry of tweets</a> ensued which resulted in me kind of accepting a joke/challenge using a meme.</p>
<p>This post is mainly about plotting a graph with nothing but JavaScript and a canvas element, but it also gives me a chance to finally document my tea drinking habits for the world to gaze upon in wonder.</p>
</div>
<footer>
<a rel="full-article" href="/2013/12/05/graph-from-scratch/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/09/25/grabbing-elements-from-the-dom/">Grabbing elements from the DOM</a></h1>
<p class="meta">
<time datetime="2013-09-25T21:31:00+01:00" pubdate data-updated="true">Sep 25<span>th</span>, 2013</time>
| <a href="/2013/09/25/grabbing-elements-from-the-dom/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>If, like me, you actually quite enjoy working with the vanilla DOM implementations, you may wonder how you&rsquo;re actually supposed to find the elements in the first place. I&rsquo;ve been using quite a nice technique for a while now that allows you to have hyphenated names in your HTML, but keep camel case in your JavaScript even though you&rsquo;re searching for the elements en masse.</p>
</div>
<footer>
<a rel="full-article" href="/2013/09/25/grabbing-elements-from-the-dom/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/09/24/do-things-that-scare-you/">Do things that scare you</a></h1>
<p class="meta">
<time datetime="2013-09-24T20:28:00+01:00" pubdate data-updated="true">Sep 24<span>th</span>, 2013</time>
| <a href="/2013/09/24/do-things-that-scare-you/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>No, I&rsquo;m not advocating base jumping while defusing a bomb, that&rsquo;s a different kind of scared. I&rsquo;m talking about things like learning Haskell or tackling TDD for the first time. Things that you can&rsquo;t or won&rsquo;t use right now. <em>Things that make you go &ldquo;eh?&rdquo;</em>.</p>
<p>I&rsquo;ve only started looking for things that I don&rsquo;t like the sound of since I became worried about stalling as a programmer. I had this horrible looming feeling that I was good with JavaScript and the web, but not too much else.</p>
</div>
<footer>
<a rel="full-article" href="/2013/09/24/do-things-that-scare-you/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/09/22/classless-javascript-continued/">Classless JavaScript - Continued</a></h1>
<p class="meta">
<time datetime="2013-09-22T19:57:00+01:00" pubdate data-updated="true">Sep 22<span>nd</span>, 2013</time>
| <a href="/2013/09/22/classless-javascript-continued/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p><em>This is a follow on from my previous post, <a href="/2013/09/17/classless-javascript/">Classless JavaScript</a>. You might want to read, or at least skim, that first.</em></p>
<p>I&rsquo;ve been having a think about all this classless JavaScript stuff, which is basically normal JavaScript without traditional constructors, and I&rsquo;ve come up with a few ideas to refine it. The first of which being <strong>DRY</strong> (Don&rsquo;t Repeat Yourself). I&rsquo;m going to show you the things I thought of and a few working examples of this strange technique.</p>
</div>
<footer>
<a rel="full-article" href="/2013/09/22/classless-javascript-continued/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/09/17/classless-javascript/">Classless JavaScript</a></h1>
<p class="meta">
<time datetime="2013-09-17T21:40:00+01:00" pubdate data-updated="true">Sep 17<span>th</span>, 2013</time>
| <a href="/2013/09/17/classless-javascript/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>As JavaScript developers, or even web developers as a whole, we seem terrified by the thought of direct usage. No technique or idea seems to be considered &ldquo;legit&rdquo; until it has been abstracted by several layers of syntactic sugar and, potentially useless, fluff.</p>
<p>One of the common abstractions is the addition of &ldquo;classes&rdquo; to JavaScript; prototypical inheritance isn&rsquo;t good enough for us lot by the looks of things. We seem to crave the features of other languages when our language of choice isn&rsquo;t really built for them, it&rsquo;s built in a different way and probably shouldn&rsquo;t have classical inheritance principals forced down its VM / throat.</p>
<p>So what if we worked with JavaScript in a more natural way? First, what would <em>be</em> more natural? Personally I believe that, like the underlying language, everything should revolve around objects; we create and manipulate these malleable entities instead of trying to lock things down and restrict our data.</p>
<p>This idea lends its self exceptionally well to functional programming and the actual VM, which no longer needs to mess with prototype chains or any other form of inheritance for that matter. It&rsquo;s as raw as JavaScript usage can get, it&rsquo;s kind of like C structs (although nothing like them at the same time) and I think it&rsquo;s pretty elegant.</p>
</div>
<footer>
<a rel="full-article" href="/2013/09/17/classless-javascript/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/09/11/handling-concurrency-and-asynchronous-javascript/">Handling concurrency and asynchronous JavaScript</a></h1>
<p class="meta">
<time datetime="2013-09-11T21:42:00+01:00" pubdate data-updated="true">Sep 11<span>th</span>, 2013</time>
| <a href="/2013/09/11/handling-concurrency-and-asynchronous-javascript/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>If you&rsquo;ve worked with JavaScript in a browser, or indeed on the server, for any length of time you&rsquo;ve probably had to deal with asynchronous spaghetti. This kind of spaghetti is not delicious in any way, shape or form.</p>
<p>You end up with multiple boolean variables and function calls constantly checking if all of those AJAX requests have finished; it is far from ideal. I&rsquo;m going to show you how to break the problem down and come out of the other side with your sanity still intact.</p>
</div>
<footer>
<a rel="full-article" href="/2013/09/11/handling-concurrency-and-asynchronous-javascript/">Read on &rarr;</a>
</footer>
</article>
<article>
<header>
<h1 class="entry-title"><a href="/2013/08/08/building-for-browsers-in-a-terminal/">Building for browsers in a terminal</a></h1>
<p class="meta">
<time datetime="2013-08-08T12:41:00+01:00" pubdate data-updated="true">Aug 8<span>th</span>, 2013</time>
| <a href="/2013/08/08/building-for-browsers-in-a-terminal/#disqus_thread">Comments</a>
</p>
</header>
<div class="entry-content"><p>My entire web development work flow takes place within my terminal; obviously I need a browser too, but other than that I have no GUI tools floating around. I&rsquo;m going to show you what tools I use and how I use them. Take from this what you will.</p>
</div>
<footer>
<a rel="full-article" href="/2013/08/08/building-for-browsers-in-a-terminal/">Read on &rarr;</a>
</footer>
</article>
<div class="pagination">
<a class="prev" href="/page/2/">&larr; Older</a>
<a href="/archives/">Blog Archives</a>
</div>
</div>
<aside class="sidebar">
<section>
<h1>Bitcoin</h1>
<p>Like what I do here? Want even more? Spur me on with a small donation, it will probably go towards a coffee that will fuel my next post or project.</p>
<script type='text/javascript' src='http://coinwidget.com/widget/coin.js'></script>
<script type='text/javascript'>
		CoinWidgetCom.go({
			wallet_address: '1BE2s3dsELzBHGk3su2U6GfAqSXcA65P34',
			currency: 'bitcoin',
			counter: 'hide',
			alignment: 'bl',
			qrcode: true,
			auto_show: false,
			lbl_button: 'Donate',
			lbl_address: 'My Bitcoin Address:',
			lbl_count: 'donations',
			lbl_amount: 'BTC'
		});
	</script>
</section>
<section>
<h1>Recent Posts</h1>
<ul id="recent_posts">
<li class="post">
<a href="/2014/04/26/installing-vimdeck-on-arch/">Installing Vimdeck on Arch</a>
</li>
<li class="post">
<a href="/2014/03/18/always-remain-a-beginner/">Always remain a beginner</a>
</li>
<li class="post">
<a href="/2013/12/13/test-private-methods/">Test private methods</a>
</li>
<li class="post">
<a href="/2013/12/05/graph-from-scratch/">Graph from scratch</a>
</li>
<li class="post">
<a href="/2013/09/25/grabbing-elements-from-the-dom/">Grabbing elements from the DOM</a>
</li>
</ul>
</section>
<section>
<h1>GitHub Repos</h1>
<ul id="gh_repos">
<li class="loading">Status updating...</li>
</ul>
<a href="https://github.com/Wolfy87">@Wolfy87</a> on GitHub
</section>
</aside>
</div>
</div>
<footer role="contentinfo"><script src="/javascripts/modernizr-2.0.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script>!window.jQuery && document.write(unescape('%3Cscript src="./javascripts/lib/jquery.min.js"%3E%3C/script%3E'))</script>
<script src="/javascripts/octopress.js" type="text/javascript"></script>
<script type="text/javascript" src="/javascripts/libs/jXHR.js"></script>
<script type="text/javascript" src="/javascripts/github.js"></script>
<script type="text/javascript">
	github.showRepos({
		user: 'Wolfy87',
		count: 5,
		skip_forks: true,
		target: '#gh_repos'
	});
</script>
<p>
Copyright &copy; 2014 - Oliver Caldwell -
<span class="credit">Powered by <a href="http://octopress.org">Octopress</a></span>
</p>
</footer>
<script type="text/javascript">
      var disqus_shortname = 'olimeuk';
      
        
        var disqus_script = 'count.js';
      
    (function () {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'http://' + disqus_shortname + '.disqus.com/' + disqus_script;
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    }());
</script>
<script type="text/javascript">
    (function(){
      var twitterWidgets = document.createElement('script');
      twitterWidgets.type = 'text/javascript';
      twitterWidgets.async = true;
      twitterWidgets.src = 'http://platform.twitter.com/widgets.js';
      document.getElementsByTagName('head')[0].appendChild(twitterWidgets);
    })();
  </script>
</body>
</html>

