http://corz.org/windows/software/checksum/checksum-tricks.php?page=1
HTTP/1.1 200 OK
Server: nginx
Date: Tue, 22 Jul 2014 21:31:18 GMT
Content-Type: text/html; charset=utf-8
Connection: close
Set-Cookie: PHPSESSID=9uui0h4gjndeavlt8uhqhdulo6; path=/
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: private
Pragma: no-cache
Set-Cookie: notice=seen; expires=Wed, 23-Jul-2014 21:31:18 GMT; path=/
Set-Cookie: cookie_notice=seen; expires=Fri, 19-Jul-2024 21:31:18 GMT; path=/
Content-Encoding: gzip
Vary: Accept-Encoding
X-Powered-By: PleskLin

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1.0, width=device-width" />
<title>Tricks, tips and hints for hashing with checksum.</title>
<meta name="description" content="tricks, tips and hints for making and checking hash files with checksum, a no-nonsense SHA1/MD5 hashing tool for Windows." />
<link rel="stylesheet" href="/inc/css/tech.css" type="text/css" media="screen" />
<script src="/inc/js/corz.js"></script>
<noscript><!-- for pre-sized pop-up windows and other goodies - not for ads! --></noscript>
<link rel="stylesheet" href="/inc/css/print.css" type="text/css" media="print" />
<!-- (c) copyright 2000-2014 cor + corz.org, some rights reserved -->
<meta name="dcterms.rights" content="copyright Â© 2000-2014 cor and corz.org, some rights reserved">
<meta name="generator" content="hand made by cor" />
<meta name="author" content="cor" />
<meta name="robots" content="all, index, follow" />
<meta name="dcterms.coverage" content="global" />
<meta name="dcterms.audience" content="all" />
<!-- <meta name="bitcoin" content="1EGLbAJktba42PAaFpvyvndYug8XhQTR1i" /> -->
<!-- <meta name="bitcoinmsg" content="Many thanks! Bitcoinerz are always welcome at corz.org!"/> -->
<link rel="shortcut icon" href="http://corz.org/favicon.ico" type="image/x-icon" />
<!-- client IP: 54.226.180.223 -->
<!-- saved from http://corz.org/windows/software/checksum/checksum-tricks.php -->
<meta name="revisit-after" content="13 days" />
<script>
	var _gaq = _gaq || [];
	var pluginUrl =
	'//www.google-analytics.com/plugins/ga/inpage_linkid.js';
	_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
	_gaq.push(['_setAccount', 'UA-31003967-1']);
	_gaq.push(['_trackPageview']);
</script>
<noscript><!-- google analytics - PLEASE enable JavaScript for corz.org! This stuff is helpful. --></noscript>
</head>
<body>
<script>
//<![CDATA[
<!--
window.status="I told you in my blog!"
//-->
//]]>
</script>
<noscript><!-- fun window status - JavaScript only - some are funny - worth enabling! --></noscript>
<a id="top-of-page" href="#" onclick="GoTop();return false;" title="Click here to go up to the top of the page, with a nice scrolling effect..
If that bugs you, use Ctrl+Home!"></a>
<noscript>
	<div id="lo-fi-warning" class="lo-fi" title="Please enable JavaScript for corz.org, this will hide the big ad!">
		lo-tech lame version
	</div>
</noscript>
<!-- begin funky toolbar -->
<nav class="tools">
	<h1>Site Navigation</h1>
	<ul>
		<li><a class="menu-link" id="home-link" href="/" title="corz.org front page. welcome!">home</a></li>
		<li><a class="menu-link" id="blog-link" href="/blog/" title="cor's blog, aka 'corzblog'. I write stuff here..">blog</a></li>
		<li><a class="menu-link" id="dev-link" href="/devblog/" title="Developing: sites, software, stuff.. updates generally get posted here, as well as developer-related tricks, tips, and thoughts..">dev</a></li>
		<li><a class="menu-link" id="audio-link" href="/audio/" title="Music is everywhere, I've been pinning it down and giving it away since I was a kid..">audio</a></li>
		<li><a class="menu-link" id="arc-link" href="/public/" title="The Archive.. Downloads of all shapes and sizes, documents, secret chasms, you name it..">arc</a></li>
		<li><a class="menu-link" id="img-link" href="/imaging/" title="Images. Soul-candy, captured things you can look at..">img</a></li>
		<li><a class="menu-link" id="server-link" href="/server/" title="Serving up the Web.. Webmasters tricks, tips, tools and resources.">server</a></li>
		<li><a class="menu-link" id="net-link" href="/network/" title="Networking, Routers, all that interconnected stuff..">net</a></li>
		<li><a class="menu-link" id="win-link" href="/windows/" title="Windows.. The devil's work, or a capable multimedia desktop..">win</a></li>
		<li><a class="menu-link" id="words-link" href="/words/" title="The Work..">words</a></li>
		<li><a class="menu-link" id="me-link" href="/corz/contact.php" title="Contact page for corz.org, ways to get stuff to me..">me</a></li>
		<li><a class="menu-link" id="prefs-link" href="/blog/inc/scheme-edit.php" title="Adjust your site preferences, colors. [new &quot;dark&quot; and &quot;browser&quot; schemes available!]">prefs</a></li>
	</ul>
</nav>
<script>
//<![CDATA[
<!--
function chompchomp() {
	var op = 100;
	startVanish = setInterval(function(){
		document.getElementById("cookie-notice").style.KHTMLOpacity = op/100;
		document.getElementById("cookie-notice").style.opacity = op/100;
		op -= 10;
		if (op < 0)  {
			clearInterval(startVanish);
			document.getElementById("cookie-notice").style.zIndex = 0;
		}
	}, 50);
}
//-->
//]]>
</script><noscript><!-- JavaScript Only --></noscript>
<div id="cookie-notice" title="You will be reminded again in Ten years.
Unless you delete your browser's cookies before then!
(click to remove this notice immediately-ish)" onclick="chompchomp();">corz.org uses cookies to remember that you've seen this notice explaining that corz.org uses cookies, okay!</div>
<nav>
<h1>Section Links</h1>
<ul class="toplinks">
	<li><a href="/windows/software/checksum/" title="checksum - a no-nonsense file hashing utility for Windows">checksum</a></li>
	<li><a href="/windows/software/checksum/simple-checksum.php" title="simple checksum - checksum's little brother">simple checksum</a></li>
	<li><a href="/windows/software/checksum/faq.php" title="checksum faq - frequently asked questions">faq</a></li>
	<li><a href="/windows/software/checksum/checksum-tricks.php" title="checksum MD5 &amp; SHA1 hashing tricks and tips">tricks + tips</a></li>
	<li><a href="/windows/software/checksum/checksum-prefs.php" title="checksum preferences, aka. 'settings'">prefs</a></li>
	<li><a href="/windows/software/checksum/checksum-licensing.php" title="checksum licensing  - how to pay for checksum, or not">licensing</a></li>
	<li><a href="/public/machine/source/beta/windows/checksum/version.nfo" title="checksum - version.nfo - aka. 'itstory'">itstory</a></li>
	<li><a href="./" title="Go Up ..">UP</a></li>
</ul>
</nav><div class="content">

	<h1>
		checksum tricks and tips<br />
		<span class="small-sub">hints, secrets, behaviours, assumptions and more..</span>
	</h1>

	<div class="intro-block">

		<h2 class="sub" id="checksum-tricks">Get the most from your hashing!</h2>

		<p>checksum represents a whole new way of working with hashes. This page aims to help you get the most out of the experience, wherever you're at..

		<img src="img/checksum_icon_256px.png" class="right-img-title noscale" id="img-soft-logo-with-corz-logo" alt="checksum icon/logo, in super-large 256 pixel size PNG!" />

		<div class="space-tiny"></div>

		<blockquote>
		<div class="blockquote">
			<ul>

				<li><a href="#section-Beginners" title="WTF is a checksum?" id="pagelink-checksum-beginners">Absolute beginners</a></li>

				<li><a href="#section-Common_Tasks" title="The basic checksum tasks we do every day" id="pagelink-section-Common_Tasks">Basic checksum tasks</a></li>

				<li><a href="#section-Launch_Modifiers" title="Would you like playlists with those checksums, sir?" id="pagelink-section-Launch_Modifiers">Launch modifiers</a></li>

				<li><a href="#section-Batch_Processing" title="Do it over and over and over again.." id="pagelink-section-Batch_Processing">Batch Processing</a></li>

				<li><a href="#section-Music_Playlists" title="Would you like playlists with those checksums, sir?" id="pagelink-section-Music_Playlists">Automatic Music playlists</a></li>

				<li><a href="#section-Custom_Context_Menus" title="Got some checksum task you do a lot? - Get a context command!" id="pagelink-tip-custom-right-click-context-commands-made-easy">Custom Explorer commands</a></li>

				<li><a href="#section-Quiet_Operation" title="want to script or schedule something with checksum, do it on the quiet" id="pagelink-section-Quiet_Operation">Creating "quiet" checksums</a></li>

				<li><a href="#section-Cross-Platform_Hashing" title="Sharing file hashes with other platforms, and their users.. See here" id="pagelink-section-Cross-Platform_Hashing">Cross-platform hashing</a></li>

				<li><a href="#section-SendTo_Processing" title="Running in portable mode on someone else's machine - drop checksum in their SendTo menu - or yours!" id="pagelink-section-SendTo_Processing">In your SendTo menu</a></li>

				<li><a href="#section-Compare_Two_Folders" title="checksum's read-only fall-back strategies make light work of comparing disks with super-accurate MD5, SHA1 and BLAKE2 hashes" id="pagelink-section-Compare_Two_Folders">Compare two Folders or Disks</a></li>

				<li><a href="#section-Compare_Two_CDs_or_DVDs" title="checksum's read-only fall-back strategies make light work of comparing disks with super-accurate MD5, SHA1 and BLAKE2 hashes" id="pagelink-section-Compare_Two_CDs_or_DVDs">Compare two CDs</a></li>

				<li><a href="#section-Compare_Disk_with_ISO" title="long after a disk is burned, so long as you keep the .hash of the original .iso file, you can rip an .iso at any time, to verify the data" id="pagelink-section-Compare_Disk_with_ISO">Compare a disk with the original .iso</a></li>

				<li><a href="#section-Installer_Watcher" title="The installer changed WHICH files?" id="pagelink-section-As_a_Watch_Installer">Installer Watch</a></li>

				<li><a href="#section-Command-Line_Switches" title="Normally, you click &amp; Go. But checksum can do a whole lot more.." id="pagelink-section-Command-Line_Switches">Command-line switches</a></li>
				<li><a href="#section-checksum.ini" title="checksum.ini - checksum's UNIX-style preferences file.." id="pagelink-section-checksum.ini">Preferences</a></li>

				<li><a href="#section-Requests" title="Your wish is my command, or rather, checksum's command-line.." id="pagelink-section-Requests">How do <em>I.</em>.</a></li>

			</ul>
		</div>
		</blockquote>
	</div>
	<div class="clear-tiny"></div>

	<h2 id="section-Beginners">Absolute beginners..</h2>

	<p>The basics: checksum creates "hash files". A hash file is a simple, plain text file containing one or more file <em>hashes</em>, aka. "checksums". Hashes are small strings which <strong>uniquely</strong> represent the data that was hashed. e.g..


	<p><code>cf88430390b98416d1fb415baa494dce *08. Allow Your Mind To Wander.mp3</code>


	<p><small>(Mike Mainieri - Journey Thru An Electric Tube [1968] - I have the vinyl)</small>


	<p>If you want to know more about the algorithms that checksum uses to hash files (MD5, SHA1 and BLAKE2), see <a href="md5-sha1-blake2-algorithms.php" title="The MD5, SHA1 and BLAKE2 algorithms explained." id="link-sha1-md5-blake2-explained">here</a>.


	<p>Once these hashes have been created for a particular file or folder (or disk), you have a snapshot that can be used, at any time in the future, to verify that not one bit of data has changed. And I do mean a "bit"; even the slightest change in the data will, thanks to the avalanche effect, produce a wildly different hash, which is what makes these algorithms so good for data verification.

	<div class="clear-tiny"></div>

	<img class="cb-img" src="img/checksum%20document%20128.png" alt="an image" /><img class="cb-img" src="img/checksum%20document%2048.png" alt="an image" /><img class="cb-img" src="img/checksum%20document%2032.png" alt="an image" /><img class="cb-img" src="img/checksum%20document%2016.png" alt="an image" /><br />




	<div class="clear-small"></div>

	<h2 id="section-Common_Tasks">The basic checksum tasks..</h2>

	<p>Most people will simply install checksum, and then use the Explorer context (right-click) menu to create and verify checksums, rarely needing any of the "extra" functionality that lurks beneath checksum's simple exterior. After all, checksum is designed to save you time, as well as aid peace of mind. This is how I mostly use it, too..


	<h3>Create checksums..</h3>

	<p><strong>Right-click a file</strong>, the <code>checksum</code> option produces a hash file (aka. 'checksum file') with the same name as the file you clicked, except with a <code>.hash</code> extension (or <code>.md5</code>/<code>.sha1</code>, if you use those, instead). So a checksum of <code>some-movie.avi</code> would be created, named <code>some-movie.hash</code> (if you don't use the unified <code>.hash</code> extension, your file would instead be named <code>some-movie.md5</code> or <code>some-movie.sha1</code>, depending on the algorithm used).


	<p><strong>Right-click a <em>folder</em></strong>, the <code>Create checksums..</code> option will produce a hash file <em>in</em> that folder, containing checksums for all the files in the folder (and so on, inside any interior folders), named after the folder(s), again, with a <code>.hash</code> extension, e.g. <code>somefolder.hash</code>


	<h3>Verify checksums..</h3>

	<p><strong>Click (left-click) a hash file</strong> (or right-click and choose <code>Verify this checksum file..</code>), checksum immediately verifies all the hashes (<code>.hash</code>/<code>.md5</code>/<code>.sha1</code>) contained within.


	<p><strong>Right-click a <em>folder</em></strong>, the <code>Verify checksums..</code> option instructs checksum to scan the directory and immediately verify any hash files contained within.


	<p>That's about it, and this simple usage is fine for most situation. But occasionally we need more..<br />




	<div class="clear-tiny"></div>
	<h2 id="section-Launch_Modifiers">checksum launch modifiers..</h2>

	<p>When you launch checksum, you can modify its default behaviour in two important ways.


	<p><img src="/img/windows/SHIFTKey.png" class="key dim" id="key-SHIFT" alt="a &lt;SHIFT&gt; Key, checksum's main modifier key" />


	<p>The first modifier is the <strong>&lt;SHIFT&gt;</strong> key. Hold it down when checksum launches, and you pop-up the one-shot options dialog, which enables you to change lots of <em>other</em> things about what checksum does next. This works with both create and verify tasks, from explorer menus <em>or</em> drag-and-drop. Here's what the one-shot <em>create</em> dialog looks like..

	<div class="clear-small"></div>

	<div class="centered">
		<img class="title-img" src="img/checksum_creation_options.png" alt="an image of checksum's one-shot hash creation dialog" />
	</div>
	<div class="clear-small"></div>

	<p>In there, as you can see, you can set all sorts of things. Hover over any control to get a Help ToolTip (you might need to repeat that to read the entire tip!). You can also drag files and folders directly onto that dialog, if you want to alter the path setting without typing. Same for the verify options.


	<p>The <code>file mask:</code> input is, by default, <code>*.*</code>, which means "All files", "*" being a wildcard, which matches any number of any characters. You can have multiple types, too, separated by commas. For example, if you wanted to hash only PNG files, you would use <code>*.png</code>; if you wanted to hash only text files beginning with "2008", you could use <code>2008*.txt</code>, and so on.


	<p>If you click the drop-down button to the right of the input, you can access your pre-defined file groups, ready-for-use (you can easily add to/edit these in your <a href="/windows/software/checksum/checksum.ini.php" title="The How and Why of checksum's ini preference file" id="link-section-checksum.ini-how-explained"><code>checksum.ini</code></a>)..
	<div class="clear-small"></div>

	<div class="centered">
		<img src="img/checksum_options_filetype_groups.png" class="title-img" id="checksum-file-type-groups" alt="checksum creation options dialog, file types group drop-down, regular Windows masks apply" title="one-shot checksum options dialog. file type group selector." />
	</div>
	<div class="clear-small"></div>

	<p>NOTE: If you drop a file onto the create options, the path is inserted into the <code>path:</code> input, and though the file mask remains <code>*.*</code>, the file name is also automatically added to the file mask drop-down, just in case you <em>really</em> do wish to only hash a single file.

	<p>Here's what the one-shot <em>verify</em> options dialog looks like..

	<div class="clear-small"></div>

	<p class="centered">
		<img class="title-img" src="img/checksum_verify_options.png" alt="an image of checksum's one-shot hash verification dialog" />



	<div class="clear-small"></div>
	<p><img src="/img/windows/CtrlKey.png" class="key dim" id="key-Ctrl" alt="a &lt;Ctrl&gt; Key, checksum's second modifier key" />


	<p>The second modifier is the <strong>&lt;Ctrl&gt;</strong> key. Hold it down when checksum launches and you force checksum into verify mode, that is to say, no matter what type of file it was, you instruct checksum to treat it as a hash file, and verify it. This works with drag-and-drop too, onto checksum itself, or a shortcut to checksum. checksum's default drag-and-drop action is to <em>create</em> hashes.


	<p>Amongst other things, this is useful for verifying folders in portable mode, simply Ctrl+drag-and-drop the folder directly onto checksum (or a shortcut to it), and all its hashes will be immediately verified.<br />

	<div class="clear-small"></div>


	<div class="top-tip">
		Hit the modifier key <strong>as soon as checksum launches</strong>, in other words, hit the	&lt;SHIFT&gt;/&lt;Ctrl&gt; key right after you choose the Explorer menu item, or before you let go of a drag &amp; <em>drop</em>, and so on. Hold the key down until checksum appears a moment later.
	</div>



	<div class="clear-tiny"></div>

	<div id="section-Batch_Processing" class="clear-small"></div>

	<h2 id="batch_processing">batch processing..</h2>
	<h3 id="hashDROP"><a href="http://hashdrop.50webs.com/" title="Got some batch processing to do? Here's hashDROP" id="hashDROP-checksum-batch-processing"><img src="img/hashDROP%20icon.png" class="left-img" alt="hashDROP icon (nicked from somewhere, I think!" />hashDROP</a><br />
	<small>A batch-processing front-end for checksum..</small></h3>

	<p>Because checksum can be controlled by command-line switches, it's possible to create all sorts of interesting front-ends for it. The first of these to come to my attention, is a neat wee application called "hashDROP", which enables you to run big batches of jobs through checksum, using a single set of customizable command-line switches.


	<p>As developer seVen explains on the <a href="http://hashdrop.50webs.com/" title="hashDROP, pretty neat." id="hashDROP-checksum-batch-processing2">hashDROP page</a>..


	<p><div class="quote"><a href="http://hashdrop.50webs.com/" title="A batch-processing front-end for checksum" id="link-hashDROP">hashDROP is a front-end for checksum which enables you to queue a bunch of jobs (files/folders) and then pass them all through checksum with your own custom switches in one batch process.</a></div>


	<p>On seVen's desktop, at least, it looks something like this..


	<blockquote>
	<div class="blockquote">
		<div class="two-column">
			<div class="two-column-row">
				<div class="left-column narrow-column">
					<a href="img/hashdrop01.png" title="See a larger version of this image"><img src="img/hashdrop01_th.png" class="title-img"  alt="thumbnail image of hashDROP window, create tab" /></a>
				</div>
				<div class="right-column wide-column">
					<a href="img/hashdrop02.png" title="See a larger version of this image"><img src="img/hashdrop02_th.png" class="title-img" alt="thumbnail image of hashDROP window, verify tab" /></a>
				</div>
			</div>
		</div>
	</div>
	</blockquote><br />

	<div class="clear-small"></div>

	hashDROP has already earned a place in my SendTo menu. Good work, seVen! For more information, documentation, and downloads, visit the <a href="http://hashdrop.50webs.com/" title="Excellent wee checksum batch processor, courtesy of seVen." id="link-hashDROP-page-good">hashDROP page</a>.<br />

	<div class="clear-small"></div>

	<h3 id="Batch_Runner"><a href="../batch-runner/" title="Got some batch processing to do? Here's Batch Runner!" id="Batch_Runner-batch-processing"><img src="../batch-runner/img/Batch_Runner-64_logo.png" class="left-img" alt="Batch Runner logo/icon" />Batch Runner</a><br />
	<small>Run multiple programs in a batch..</small></h3>

	<p>I originally designed Batch Runner to run a big batch of tests on checksum before release, but it has since proven useful for other tasks, so I spruced it up a bit, made it available.


	<p>If you want to run loads of hashing jobs using the same switches, <a href="#batch_processing" title="It's Right above this section!">hashDROP</a> is probably more useful to you. But if you want to run lots of checksum jobs with <em>different</em> switches, or as part of a larger batch of jobs involving <em>other</em> programs, then check out Batch Runner.


	<p>Batches can be saved, selected from a drop-down, run from the command-line, even from inside other batches, so it's handy for repetitive scheduled tasks, or application test suites, as well as general batch duties. At least on my desktop, it looks like this..



	<blockquote>
	<div class="blockquote">
		<a href="../batch-runner/" title="Check Out Batch Runner"><img src="../batch-runner/img/Batch_Runner_Main_GUI.png" class="title-img"  alt="thumbnail image of the Batch Runner window" /></a>
	</div>

	</blockquote>




	<div class="clear-small"></div>

	<h2 id="section-Music_Playlists">Automatic Music playlists..</h2>

	<p>Perhaps checksum's second most common <em>extra</em> usage is making music playlists. After you have ripped an album, you will most likely want a playlist along with your checksums, so why not do both at once? checksum can.


	<p>Right-click a folder and SHIFT-Select the <code>checksum</code> option (which pops up the one-shot options dialog), check either the <code>Winamp playlists</code> (.m3u/.m3u8) or <code>shoutcast playlists</code> (.pls) option, and then <code>do it now!</code> You're done.


	<p>By default, checksum will also recurse (dig) into other folders inside the root (top) folder. Now you've got music playlists that you can click to play the whole album in your media player.


	<p>Note that checksum will thoughtfully switch your file masks to your current music group when you select a playlists option, reckoning that you'll probably only want to actually hash the music files, not associated images, info files and such, but it's easy enough to switch it back to <code>*.*</code> (hash all files) if you need that. The rationale behind this being that it's what most people want, so the majority get the simpler, two-click task.


	<p>If you do this sort of thing a lot, check out the next section, for how to put this functionality directly into your Explorer context menu, and skip the dialog altogether..



	<div class="clear-tiny"></div>
	<h2 id="section-Custom_Context_Menus">Custom Explorer Context Menu Commands made easy..
		<img src="img/checksum_custom_music_command.png" class="right-img-title" id="checksum-custom-context-command" alt="custom Windows explorer context menu command" title="handy things in your explorer menus!" />
	</h2>

	<p>On the subject of music files, you may encounter a lot of these, and fancy creating a custom explorer right-click command along the lines of "checksum all music files", or something like that. No problem; you can simply create a new command in the registry, add the "m" switch add your file masks, right?


	<p>But what if you change your file masks? Perhaps add a new music file type? Do you have to go and change your registry again? NO! checksum has it covered. Instead of specifying individual file masks, use your group name in the command, e.g. <code>m(music)</code> and checksum applies all the file masks from that group automatically, so your concept command is always up-to-date with your latest preferences.


	<p>Here's an example registry command that would do exactly that. Copy and paste into an empty plain text file, save as <code><em>something.</em>reg</code>, and merge it into your registry. If you installed checksum in a different location, edit the path to checksum before you merge it into the registry (not forgetting to escape all path backslashes - in other words, double them)..

	<blockquote>
		<div class="blockquote">
		<pre>
Windows Registry Editor Version 5.00

[HKEY_CLASSES_ROOT\Directory\shell\01b.checksum music]
@="Checksum &amp;MUSIC files.."

[HKEY_CLASSES_ROOT\Directory\shell\01b.checksum music\command]
@="\"C:\\Program Files\\corz\\checksum\\checksum.exe\" crm(music) \"%1\""
		</pre>

		</div>
	</blockquote>

	<p><span class="warning"><strong>NOTE!</strong></span> If you add a "3" to the switches [i.e. make them <code>c3rm(music)</code>] you'll get a media player album playlist files created automatically along with the checksum files. Groovy! <a href="files/checksum-music-files-command-%5bedit+merge-me%5d.reg" title="I know, I watched too much Blue Peter as a kid. (right-click and save-as)" id="music-files-command-download-link">Here's one I prepared earlier</a>.


	<h3 id="tip-custom-default-right-click-context-commands">Setting new default Explorer context actions..</h3>

	<p>You can also change checksum's <em>default</em> Explorer commands, as well as add new commands, without going anywhere near the registry. Simply edit the installer's <code>setup.ini</code> file, <code>[keys]</code> section. For example, to always bring up the one-shot options dialog when creating checksums on folders and drives, you would add an "o" to those two commands..


	<p><code>HKCR\Directory\shell\01.|name|\command="|InstalledApp|" cor "%1"<br />
	HKCR\Drive\shell\01.|name|\command="|InstalledApp|" cor "%1"</code>


	Then run checksum's installer (setup.exe), and install/reinstall checksum with the new options. From then on, any time you select the "Create checksums.." Explorer context menu item, you will get the one-shot options dialog. If you would prefer to synchronize hashes under all circumstances, add a <code>y</code>, and so on.<br />
<!---->



	<div class="clear-tiny"></div>
	<h2 id="section-Quiet_Operation">Creating checksums <small>"quietly"</small>..</h2>

	<p>If you want to script or schedule your hashing tasks, you will probably want checksum to run without any dialogs, notifications and so forth. If so, add the Quiet switch.. <code>q</code>


	<p>When the <code>q</code> options is used alone, if checksum encounters existing hash files, it continues as if you had clicked "No to All", in the dialog, so no existing files are altered in any way. This is the safest default.

	<p>If you would prefer checksum to act as if you had clicked "Yes to all", instead, use <code>q+</code>, and any existing checksums will be overwritten.

	<p>If you want synchronization, add a <code>y</code> switch (it can be anywhere in the switches, so long as it's in there somewhere, but <code>qy</code> is just fine)

	<p>Quiet operation also works for verification, failures are logged, as usual. Like most of checksum's command-line switches, these behaviours can be set permanently, in your <a href="/windows/software/checksum/checksum.ini.php" title="The How and Why of checksum's ini preference file" id="link-section-checksum.ini-how-to"><code>checksum.ini</code></a>.




	<div class="clear-tiny"></div>
	<h2 id="section-Cross-Platform_Hashing">Working with Cross-Platform hashes..</h2>

	<p>checksum has a number of features designed to make your cross-platform, inter-networking life a bit easier.


	<p>You don't have to do anything special to verify hash files created on Linux, UNIX, Solaris, Mac, or indeed any other major computing platform; checksum can handle these out-of-the-box.


	<p>If you need to <em>create</em> hash files for <em>use</em> on other platform, perhaps with some particular system file verification tool, checksum has a few preferences which might help..


	<p>You will perhaps appreciate checksum's plain text ini file (<a href="/windows/software/checksum/checksum.ini.php" title="The How and Why of checksum's ini preference file" id="link-section-checksum.ini-how-to-explained"><code>checksum.ini</code></a>) containing all the permanent preferences. Inside there you can set not only which Line Feeds checksum uses in its files (Windows, UNIX, or Mac), but also enable UTF-8 files, single-file "root" hashing, generic hash file naming, UNIX file paths, and more. Lob <code>checksum.ini</code> into your favourite text editor and have a scroll.<br />




	<div class="clear-tiny"></div>
	<h2 id="section-SendTo_Processing">checksum in your SendTo menu..</h2>

	<p>There are a number of ways to run checksum. One handy way, especially if you are running checksum in portable mode without Explorer menus, is to keep a shortcut to checksum in the <code>SendTo</code> menu.


	<p>Simply put; any regular file or folder sent to checksum will be immediately <em>hashed.</em> Send a checksum file (<code>.hash</code>, <code>.md5</code>, <code>.sha1</code>, plus whatever UNIX hash files you have set), and it will be immediately <em>verified.</em> If you want extra options, hold down the &lt;SHIFT&gt; key, as usual.


	<p>If you want to send a non-checksum file, but have checksum <em>treat</em> it as a checksum file, hold down the &lt;Ctrl&gt; key during launch, to force checksum into verify mode (either just after you activate the <code>SendTo</code> item, or perhaps easier; hold down &lt;SHIFT&gt; AND &lt;Ctrl&gt; together while you click, to bring up the one-shot verify options). This is also handy for verifying folder hashes.




	<div class="clear-tiny"></div>
	<h2 id="section-Compare_Two_Folders">How to accurately compare two folders or disks.</h2>

	<p>This is an easy one. First, create a "root" hash in the root of the first folder/disk, then copy the .hash file over to the second and click it.

	<p>That's it!



	<div class="clear-tiny"></div>
	<h2 id="section-Compare_Two_CDs_or_DVDs">How to accurately compare two CDs, DVDs, etc.<br />
	<small>(even when they don't have hash files on them)</small>..</h2>

	<p>When hashing read-only media, obviously we cant store the hash files on the disk itself. However, thanks to checksum's range of intelligent read-only fallback strategies, you can make light work of comparing read-only disks with super-accurate MD5 or SHA1 hashes, even if those disk were burned <em>without</em> &nbsp;hashes.


	<p>All we need to do, is ask checksum to create a "root" hash file of the original disk, using the "Absolute paths" option. This will produce a hash file containing hashes for the <em>entire</em> disk, with full, absolute paths, e.g..


	<blockquote>
	<div class="blockquote">
		<code>531a3ce6b631bb0048508d872fb1d72f *D:\Sweet.rar<br />
		558e40b6996e8a35db668011394cb390 *D:\Backups\Efficient.cab<br />
		832e98561d3fe5464b45ce67d4007c11 *D:\Sales Reports\April.zip</code><br />
	</div>
	</blockquote>
	<br />

	<p>There are a few ways to achieve this. For one-off jobs, you can simply add <code>k1</code> to your usual <a href="#section-Command-Line_Switches" title="The next section is all about custom command-line switches" id="pagelink-command-line_switches">command-line switches</a>. For example, to create a recursive root hash file of a disk, with absolute paths, you would use <code>crk1</code>.


	<p>Another way, is to set (and forget) checksum's <code>fallback_level</code> preference to <code>2</code>, inside <a href="#section-checksum.ini" title="your prefs are here" id="pagelink-to-section-checksum.ini-section">checksum.ini</a>..


	<p><code>fallback_level=2</code>



	<p>With <code>fallback_level=2</code>, when checksum is asked to create hashes of a read-only volume, it will fall-back to creating a single "root" hash with absolute paths, inside your fall-back location (also configurable), which is exactly what we need!


	<p>Then in the future, to verify the original disk, or copies of the disk; you simply insert it, and click the hash file.


	<p>You can store the <code>.hash</code> file anywhere you like; so long as the disk is always at <code>D:\</code>, or whatever drive letter you used to create the <code>.hash</code> file originally, it will continue to function perfectly.


	<p>If you want to know more about checksum's read-only fall-back strategies, see <a href="checksum-prefs.php#fallback_settings" title="checksum's read-only fall-back strategies, explained" id="link-checksum-prefs-fallback-strategies">here</a>.<br />




	<div class="clear-tiny"></div>
	<h2 id="section-Compare_Disk_with_ISO">Or accurately compare a burned disk to its original .iso hashes..</h2>

	<p>If you have a <code>.hash</code> file of the original <code>.iso</code> file, in theory, a future rip of the disk to ISO format, should produce an <code>.iso</code> file with the exact same checksum as the original. My burner is getting  old, but I needed to know, and so tested the theory.


	<p>I Torrented an <code>.iso</code> file of a DVD (Linux Distro) - the hashes were published onsite, checksum verified these were correct. I burned the disk to a blank DVD-R, and then deleted the original <code>.iso</code> file. Everything is now on the disk only. The <code>.hash</code> file is still on my desktop.


	<p>Then I used the ever-wonderful <a href="http://www.imgburn.com/" title="HELL YES!" id="link-the-ever-excellent-ImgBurn">ImgBurn</a>, to read the DVD to a temporary <code>.iso</code> file on my desktop.


	<p>Fortunately, the <code>.iso</code> file, and the original <code>.iso</code> file had the same name, so I didn't need to edit the <code>.hash</code> file in any way. Then the moment of truth. I click the <code>.hash</code> file, and checksum spins into action, verifying. A few seconds later... Beep-Beep! No Errors! It's a perfect match!


	<p>I can't speak for other software, but with ImgBurn at least, a burned disk <em>can</em> produce an <code>.iso</code> file with a hash bit-perfectly identical to that of the original <code>.iso</code> file used to create the disk, and can be relied upon for data verification. Good to know.<br />
	<div id="section-Installer_Watcher" class="space-tiny"></div>

	<h2 id="checksum-as-installer-watcher">
	checksum as an installer watcher..</h2>

	<p>Because checksum can so accurately inform you of changes in files, it can function as an excellent ad-hoc installer watcher. All you do is create a root checksum for the area you would like to watch. Run the installer. And afterwards, verify the checksum. If anything has changed, checksum will let you know about it, with the option to log the list to funky XHTML or plain text.


	<p>Similarly, checksum can be utilized in any situation where you need to know about changed files. You can even use it to compare registry files, one exported before, the other after an install or other process. If the hashes match, there's no need to look further.<br />
	<div id="command-line" class="space-tiny"></div>



	<h2 id="section-Command-Line_Switches">checksum's custom command-line switches..</h2>

	<p><em>Click &amp; Go!</em> is the usual way to operate checksum; but checksum also contains a lot of special functionality, accessed by the use of "switches"; meaningful letter combinations which instruct checksum to alter its operation in some way.



	<p>If you have some unusual task to accomplish, the <a href="#section-Launch_Modifiers" title="Chances are, the one-shot options can handle it" id="pagelink-launch-modifiers">one-shot options dialog</a> enables you to manipulate the most common switches with simple checkbox controls. You can see the current switches in a readout, updating dynamically as you check and uncheck each option. But this output is also an <em>input</em>, where you can manipulate the switches directly, if you wish. If that is the case, you will probably find the following reference useful.


	<p>You may also find this section useful if you are constructing a full checksum command-line for some reason, maybe a <a href="/windows/software/batch-runner/" title="Run lots of programs, one after the other in a batch." id="link-site-Batch_Runner">Batch Runner</a> command or batch script, or custom front-end for checksum, or altering your explorer context menu, or creating a scheduled task, or something else. In each case, switches are placed <em>before</em> the file/folder path, for example; the full command-line to verify a checksum file might look like this..



	<blockquote>
	<div class="blockquote">
		<code>C:\Program Files\corz\checksum\checksum.exe v C:\path\to\file.hash</code>
	</div>
	</blockquote>
	<br />

	<p>Here are all the currently available switches:


	<blockquote>
	<div class="two-column">

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>c</strong></div>
			<div class="right-column wide-column">
				Create checksums.
			</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>v</strong></div>
		<div class="right-column wide-column">
			Verify checksums.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>r</strong></div>
		<div class="right-column wide-column">
			Recurse <small>(only for directories).</small>
			</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>y</strong></div>
		<div class="right-column wide-column">
			Synchronize <small>(add any new file hashes to existing checksum files).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>i</strong></div>
		<div class="right-column wide-column">
			Individual hash files <small>(one per file).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>s</strong></div>
		<div class="right-column wide-column">
			Create SHA1 checksums <small>(default is to create MD5 checksums).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>2</strong></div>
		<div class="right-column wide-column">
			Create BLAKE2 checksums <small>(default is to create MD5 checksums).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>u</strong></div>
		<div class="right-column wide-column">
			UPPERECASE hashes <small>(default is lowercase).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>m</strong></div>
		<div class="right-column wide-column">
			File masks. Put these in brackets after the m. e.g..  <code>m(*.avi,*.rm)</code><br />
			<small>Note: You can use your file groups here, e.g. <code>m(music)</code></small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>d</strong></div>
		<div class="right-column wide-column">
			Output Directory. Put this in brackets after the d. e.g..  <code>d(C:\hashes)</code><br />
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>j</strong></div>
		<div class="right-column wide-column">
			Custom hash name (think: "John"!). Put this in brackets after the j. e.g..  <code>j(my-hashes)</code><br />
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>e</strong></div>
		<div class="right-column wide-column">
			Add file extensions to checksum file name <small>(for individual file hashes).</small>.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>1</strong></div>
		<div class="right-column wide-column">
			Create one-file "root" checksums, like Linux CD's often have. <br />
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>3</strong></div>
		<div class="right-column wide-column">
			Create .m3u/.m3u8 playlists for all music files encountered <small>(only for folder hashing).</small>.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>p</strong></div>
		<div class="right-column wide-column">
			Create .pls playlists for all music files encountered <small>(only for folder hashing).</small>.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>q</strong></div>
		<div class="right-column wide-column">
			Quiet operation, no dialogs <small>(for scripting checksum - see help for other options).</small>.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>h</strong></div>
		<div class="right-column wide-column">
			Hide checksum files <small>(equivalent to 'attrib +h').</small> <br />
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>o</strong></div>
		<div class="right-column wide-column">
			One-shot Options. Brings up a dialog where you can select extra options for a job.<br />
			<small>(to pop up the options at run-time, hold down the &lt;SHIFT&gt; key)</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>b</strong></div>
		<div class="right-column wide-column">
			Beeps. Enable audio alerts (if disabled in your prefs - override it).<br />
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>t</strong></div>
		<div class="right-column wide-column">
			ToolTip. Enable the progress ToolTip windoid (if it is disabled in your prefs - override it).<br />
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>n</strong></div>
		<div class="right-column wide-column">
			No Pause. Normally checksum pauses on completion so you can see the status. This disables it.<br />
			<small>(note: you can also set the length of the pause, in your prefs)</small>
		</div>
		</div>
		<div class="clear-tiny"></div>
		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>k</strong></div>
		<div class="right-column wide-column">
			Absolute Paths. Record the absolute path inside the (root) checksum file.<br />
			<small>Use this only if you are ABSOLUTELY sure the drive letter isn't going to change in the future.</small>.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>f</strong></div>
		<div class="right-column wide-column">
			Log to a file <br />
			<small>(if there are failures, checksum always gives you the option to log them to a file)</small>
		</div>
		</div>
		<div class="clear-tiny"></div>
		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>g</strong></div>
		<div class="right-column wide-column">
			Go to errors. <br />
			<small>If a log was created; e.g. there were errors; open the log folder on task completion.</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>l</strong></div>
		<div class="right-column wide-column">
			Log everything. <br />
			<small>(the default is to only log failures, if any).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>w</strong></div>
		<div class="right-column wide-column">
			Update changed hashes. (think: reWrite) <br />
			<small>(during verification, hashes and timestamps for "CHANGED" files can be updated in your .hash file).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>x</strong></div>
		<div class="right-column wide-column">
			Delete missing hashes. <br />
			<small>(during verification, hashes for "MISSING" files are removed from your .hash file).</small>
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>a</strong></div>
		<div class="right-column wide-column">
			Only verify these checksum files.<br />
			<small>(followed by algorithm letter: <code>am</code> for MD5, <code>as</code> for SHA1, <code>a2</code> for BLAKE2 - see example below)</small>.
		</div>
		</div>
		<div class="clear-tiny"></div>

		<div class="two-column-row">
		<div class="left-column narrow-column"><strong>z</strong></div>
		<div class="right-column wide-column">
			Shutdown when done. <br />
			<small>Handy for long operations on desktop systems. A dialog will appear for 60 seconds, enabling you to abort the process, if required</small>
		</div>
		</div>
		<div class="clear-tiny"></div>


	</div>
	</blockquote>

	<div class="clear-small"></div>

	<p>The 'a', 'f', 'g', 'l', 'w' and 'x' switches only take effect when verifying hashes.

	<p>The '1', '2', '3', 'd', 'e', 'h', 'i', 'j', 'k', 'm', 'o', 'p', 's', 'u', and 'y' switches only take effect when creating hashes.


	<p>In other words..
	<blockquote>
	<div class="blockquote">
		global switches =  <strong>b</strong>, <strong>n</strong>, <strong>o</strong>, <strong>q</strong>, <strong>r</strong>, <strong>t</strong>, <strong>z</strong>.<br />
		creation switches =  <strong>1</strong>, <strong>2</strong>, <strong>3</strong>, <strong>c</strong>, <strong>d</strong>, <strong>e</strong>, <strong>h</strong>, <strong>i</strong>, <strong>j</strong>, <strong>k</strong>, <strong>m</strong>, <strong>p</strong>, <strong>s</strong>, <strong>u</strong>, <strong>y</strong>.<br />
		verify switches =  <strong>a</strong>, <strong>f</strong>, <strong>g</strong>, <strong>l</strong>, <strong>v</strong>, <strong>w</strong>, <strong>x</strong>.<br />
	</div>
	</blockquote>
	<p>Switches can be combined, like this..


	<div class="path-desc">

		<div class="left">
			<code>&hellip; checksum.exe v "C:\my long path\to\files.md5"</code><br />
		</div>
		<div class="right">
			[ note 'long' path (with spaces) enclosed in <strong>"</strong>quotes<strong>"</strong> ]
		</div>
		<div class="clear"></div>
		<div class="left">
			<code>&hellip; checksum.exe crim(movies) c:\downloads</code><br />
		</div>
		<div class="right">
			[ create individual checksums for all my movie files - note use of group name ]
		</div>
		<div class="clear"></div>
		<div class="left">
			<code>&hellip; checksum.exe vas c:\archives</code>
		</div>
		<div class="right">
			[ check all *.sha1 files in the path, not *.md5 files ]
		</div>
		<div class="clear"></div>
		<div class="left">
			<code>&hellip; checksum.exe c3rm(music) p:\audio</code>
		</div>
		<div class="right">
			[ recursive music file checksum creation, with automatic playlists ]
		</div>
		<div class="clear"></div>
		<div class="left">
			<code>&hellip; checksum.exe cr1m(*.zip) d:\</code>
		</div>
		<div class="right">
			[ create a "root" checksum for all zip files on drive D: ]
		</div>
		<div class="clear"></div>
		<div class="left">
			<code>&hellip; checksum.exe crq1d(@desktop)j(video-hashes) v:\</code>
		</div>
		<div class="right">
			[ quietly create a "root" checksum (named "<code><span title="assuming unified hashing is enabled, otherwise .md5, .sha1 or .blake2, depending on your current algorithm">video-hashes.hash</span></code>") for all files on drive V: and place it on the desktop ]
		</div>
		<div class="clear"></div>


	</div>


	<div class="clear-tiny"></div>
	<h3>notes:</h3>
	<ul class="blockquote">
		<li><p>The order of the switches isn't important, though the "<code>m</code>" switch must always be immediately followed by the file masks (in brackets), e.g. <code>m(*.avi)</code> (same with <code>d(dir)</code> and <code>j(name)</code> switches), and the "<code>a</code>" switch <em>must</em> &nbsp;be the first letter of a two letter combination, e.g. <code>am</code></li>

		<li><p>You don't need to specify the <code>m(music)</code> switch to create playlists, only the <code>3</code>. A command like <code>checksum.exe rc3 "P:\audio"</code> would create checksums recursively for <em>all</em> &nbsp;files in the path <code>p:\audio</code>, whilst creating playlists for <em>only</em> &nbsp;the music file types. Nifty, huh?</li>

		<li><p>Most of these switches also have a preference inside <a href="checksum-ini.php" title="Make the most of checksum's many many options.." id="link-to-section-checksum.ini"><code>checksum.ini</code></a>. If that preference is enabled, you can disable it temporarily by prepending the switch with a <code>-</code> (minus) character, e.g. to disable the Progress ToolTip, use <code>-t</code></li>

		<li><p>Any of these switches can be easily added permanently to your Explorer right-click (context) menus. For instance, you may like to <em>always</em> use the one-shot options, without having to hold the SHIFT key every time. So simply add an <code>o</code>, and it will be so. See <a href="#tip-custom-default-right-click-context-commands" title="alter checksum's default explorer context menu commands with setup.exe" id="pagelink-tip-custom-default-right-click-context-commands">here</a> for details of how to permanently alter checksum's Explorer context menu commands.</li>

	</ul>

	<p>And remember, if there's some specific behaviour that you want set <em>permanently</em>, you can do that, and a lot more, inside <code>checksum.ini</code>..<br />



	<div class="clear-tiny"></div>

	<h2 id="section-checksum.ini"><code>checksum.ini</code><br />
	<small>working with checksum's UNIX-style preference file..</small></h2>

	<p>checksum has a <em>lot</em> of available options. <a href="checksum-ini.php" title="Make the most of checksum's many many options.." id="link-to-section-checksum.ini-2">Here</a> is a page that will help you get the most out of them.
	<div class="clear-half"></div>


	<div class="centered">
		<a href="#" onclick="GoTop();return false;" title="Click here to jump back to the top of the page" id="link-img-jump-to-top"><img src="img/checksum_icon_256px.png" id="img-soft-logo-with-corz-logo-footer" alt="checksum icon/logo, in super-large 256 pixel size PNG!" /></a>
	</div>
	<h2 id="section-Requests">I do requests!</h2>

	<p>If there's something you would like to accomplish with checksum, but don't think think checksum <em>can</em>; feel free to request a feature, below..



	<div class="clear-quarter"></div>
	<div id="section-Comments" class="clear-small"></div>

</div>

<!-- that comment thing -->
<div class="clear"></div>
<div class="comments" id="comments">
	<div class="comments-intro">
		<h2>Request a feature!</h2><h3>If you think you have found a bug, click <a title="Mail Me, it could get long and messy!" href="/corz/mail-me.php?subject=checksum%20bug!" onclick="OpenWindow(this.href,900,640);return false;">here</a>. If you want to suggest a feature, leave a comment below. For anything else, click <a title="How do I...?" href="./#comments">here</a>.</h3>
	</div>
	<hr class="hr-regular" />
	<div class="comment-text">
		<a href="?page=2#comments" title="there's more! (currently showing ten per page)"><span class="big">previous comments</span> (five  pages)</a>&nbsp;&nbsp;&nbsp;<a href="?page=all#comments"
		title="the whole damn lot. all sixty three of 'em!">show all comments</a><br />
		<br />




<div id="Ricard1337877918">
<strong>Ricard</strong> - 24.05.12 5:45 pm<br />
<br />

<!--*g*-->Hi Cor,<br />
<br />
Just tested in Windows XP and it works normally. Any suggestion?<br />
<br />
Thanks in advance. Regards.<br />
<br />
<div class="corz-reply">There's no reason it shouldn't work perfectly on Windows 7, as well. No one else has reported any problems with this and my first instinct is to say, "Are you SURE?". You are holding the modifier keys down until you see checksum, right?<br />
<br />
As for the folder compare, checksum isn't really designed for this task, but creating a standard checksum file for the folders (standard right-click on folder, choose "Create checksums") is all you need. To compare with another folder simply copy over the <tt>.hash</tt> file and click it.<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Alex1337888846">
<strong>Alex</strong> - 24.05.12 8:47 pm<br />
<br />

<!--*g*-->I have been using checksum to verify files i archive to my LG NAS N1A1.  When i run verify on a local file on my computer, checksum works very fast like it is supposed to.  But when i run verify on a copy of the file over the local network which resides on my NAS box, it takes forever.  Why is this and is there anything that i can do about it?<br />
<br />
<div class="corz-reply">The limiting factor in checksum's speed is invariably file i/o. Even on a local file system, it's unlikely you will max out your CPU doing checksums, the disk read/write speed will slow things down. On a network, this is even more pronounced.<br />
<br />
Basically, anything you can do to speed up your network (and there is usually a lot you can do), will speed up checksum. It's waiting for data from your NAS. <a class="url" href="http://www.google.com/search?q=improve+LAN+speeds" title="so many scenarios, so much advice.." >Check your network settings<!--url--></a> thoroughly, and consider gigabit ethernet (compared to a modern hard disk read, even a super fast LAN is <em>DEAD SLOW</em>). checksum won't be the only program that will benefit from improved network speeds.<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Ricard1337940910">
<strong>Ricard</strong> - 25.05.12 11:15 am<br />
<br />

<!--*g*-->Hi Cor,<br />
<br />
Everything working fine now! Just that I did not press the key until the interface appears. You should emphasize that the the user must press the key <strong>until </strong>checksum appears. Otherwise, dummies like me will be doing the idiot around for a while <img alt="smiley for :D" title=":D" src="/blog/inc/smileys/grin.gif" /><br />
<br />
Thanks a lot. I will purchase a shirt, sure!<br />
<br />
<div class="corz-reply">Noted. I will make the instructions more clear. Thanks! ;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Ricard1337942373">
<strong>Ricard</strong> - 25.05.12 11:39 am<br />
<br />

<!--*g*-->Hi Cor, <br />
<br />
I have done several copies of DVDs to hard disc. Now, I want to compare each DVD with the correspondent folder. How should I proceed to compare both? For each folder I can generate a hash file but how do I proceed with the DVD as it is read-only. And, once generated the hash file for both, how do I compare them?<br />
<br />
Thanks in advance. Regards.<br />
<br />
P.S.: I am already a pride buyer of your shirt <img alt="smiley for :D" title=":D" src="/blog/inc/smileys/grin.gif" /> from Barcelona, Spain.<br />
<br />
<div class="corz-reply">You can simply run a normal <tt>Create checksums..</tt> Explorer context menu command on the folders on the DVD drive. Because it's read-only, checksum will create a folder on your <em>desktop</em> (or other chosen location) and create any <tt>.hash</tt> files in there. <br />
<br />
The <em>entire</em> structure will be recreated, so you can simply drag and drop the whole thing over to the copy, if need be. Verify normally with the <tt>Verify checksums..</tt> command.<br />
<br />
Remember, if you have <em>already</em> hashed the copy, you will need to rename one of the (sets of) <tt>.hash</tt> files or else copying over the directory structure will overwrite the copy's <tt>.hash</tt> files! <br />
<br />
So it's best to simply begin with hashing the DVD. If all goes to plan and there are no errors when you copy the <tt>.hash</tt> files over, your DVD <tt>.hash</tt> files can become your copy's <tt>.hash </tt>files! Job done!<br />
<br />
checksum has a number of configurable methods of dealing with read-only fallback conditions, as well as a myriad of configurations for <tt>.hash</tt> file naming, so if this is something you do a lot, you will probably want to drop <tt>checksum.ini</tt> into a decent text editor (one with syntax highlighting) and have a scroll. <br />
<br />
By the way, nice shirt! <img alt="smiley for ;)" title=";)" src="/blog/inc/smileys/wink.gif" /><br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Ricard1337956994">
<strong>Ricard</strong> - 25.05.12 3:43 pm<br />
<br />

<!--*g*-->Hi Cor,<br />
<br />
Thanks for your answer. By the way, I can't find the file checksum.ini. I have registered with the program itself but I have been looking in the corresponding folder but there is no checksum.ini (and I have done a search in all the PC of course). Your advice would be great. <br />
<br />
Thanks and regards.<br />
<br />
<div class="corz-reply">See <a class="url" href="checksum-prefs.php#finding_checksum-ini" title="I need more links to this page!" >here<!--url--></a> (recently updated).<br />
<br />
As well as the absolute best way to get to checkusm.ini, there's also a link there ( and right here! -&gt; ) to the brief <a class="url" href="checksum-ini.php" title="And here's another one!" ><tt>checksum.ini</tt><!--url--></a> page.<br />
<br />
Have fun with those prefs!<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Ricard1338485532">
<strong>Ricard</strong> - 31.05.12 6:32 pm<br />
<br />

<!--*g*-->Hi,<br />
<br />
I have copied several DVDs to corresponding folders in hard disc. Now I want to compare DVDs to folders. What I would like is to have a unique file hash for all the DVD or folder (not a hash file with a list of file hashes in it). This is because each DVD has about 17.000 files. Is there any way to do so?<br />
<br />
And another thing. Is there any way to make the process faster because to generate the hashes for a DVD it takes about an hour and a half. I have 78 DVDs, so it will take me about 14 days working 8 hours a day :-(<br />
<br />
Thanks in advance. Congratulations for the software and best regards.<br />
<br />
<div class="corz-reply">It would have been smart to hash the folders before they were burned to the DVD.<br />
<br />
As it is, simply hash the disk as normal, perhaps with a root hash file, and then copy that to the hard drive folder for verification. <br />
<br />
And what's wrong with having a .hash file with all the files in it? 17,000 files is no problem for checksum. I've got .hash files with hundreds of thousands, maybe millions of entries (I know for a fact my local archive drive .hash has over 750,000 entries).<br />
<br />
File hashing is a superior system fo disk (image) hashing -- if one <em>single</em> file is damaged, with a disk hash, you have total checksum failure and <em>no</em> way of knowing which file is damaged. Ouch! It's a <em>lot</em> easier to locate and renew one single file than 17,000 of them!<br />
<br />
As for making it faster, checksum will hash the disk as fast as your operating system can read it. My workstation is ancient and I can hash a DVD in a few minutes - it sounds like you need to upgrade your DVD reader - it will only cost a couple of man-hours or less for a decent fast model. Think of the savings!<br />
<br />
By the way, I recommend Pioneer for DVD drives.<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="FredMora1338488195">
<strong>FredMora</strong> - 31.05.12 7:16 pm<br />
<br />

<!--*g*-->I second Ricard's request.<br />
<br />
The "tip and tricks" page describe how to checksum a burnt CD or DVD by first dumping the media contents in an ISO file with ImgBurn, then using the corz checksum utility on the ISO file.<br />
<br />
One really cool feature would be to bypass the need for ImgBurn, and directly create or verify the checksum of the bytes on the burnt volume.<br />
<br />
Thoughts, Cor?<br />
<br />
<div class="corz-reply">Check out my response to the comment directly above this one. It's not a practice I would encourage - just hash the files!<br />
<br />
For those that really need this sort of functionality, ImgBurn is an excellent program, beautifully simple and intuitive to operate, but with all the advanced features a geek could need. If you have a DVD drive or ever handle disk images, it's an essential tool for your kit-bag.<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="FredMora1339010919">
<strong>FredMora</strong> - 06.06.12 8:28 pm<br />
<br />

<!--*g*-->Hi Cor,<br />
<br />
Thank you for your answer. You write:<br />
<br />
<blockquote><div class="blockquote">Check out my response to the comment directly above this one. It's not a practice I would encourage - just hash the files!</div></blockquote>
<br />
Actually, I sometimes use a Windows machine to handle ISOs that are not meant to be mounted on Windows, such a Linux-created ISOs. These ISOs often contain file paths that are too long to be read by the Win32 API, and thus, the file hashing is not reliable. However, the checksum of the full ISO is still possible and meaningful. Hence my request.<br />
<br />
Thank you,<br />
<br />
  --Fred<br />
<br />
<div class="corz-reply">In that scenario, hashing the ISO makes sense. I have many ISO <tt>.hash</tt> files myself. And of course, if you have access to a Linux system, you can mount the volume and use checksum for Linux. But wherever possible, hash files, not disk images. ;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Paskoe1339434374">
<strong>Paskoe</strong> - 11.06.12 6:06 pm<br />
<br />

<!--*g*-->Hi Cor,<br />
Great App!. So far I have been able to do nearly everything I want with it, only one thing is missing. The ability to make a single file hash with absolute path. Maybe I missed a switch or a combo of switches, I just cant make a single file hash with absolute path. I hope this is a "lack of reading on my end" type of post, if not then I guess it's a request type <img alt="smiley for ;)" title=";)" src="/blog/inc/smileys/wink.gif" /><br />
<br />
Paskoe<br />
<br />
<div class="corz-reply">Absolute paths is only available when creating a "root" hash file, i.e. a single <span class="teletype">.hash<!--tt--></span> file for an entire directory structure. It doesn't seem sensible to do this in any other context, though I'm open to suggestions to the contrary. ;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="Paskoe1340215402">
<strong>Paskoe</strong> - 20.06.12 7:03 pm<br />
<br />

<!--*g*-->Hi Cor,<br />
<br />
Here is my scenario.<br />
I hash files on my PC's internal hard-drive with a copy of the 4 level directory structure of my two archive drives (one is redundancy). Some hashes are complete directories, others are single files. I then transfer to the archive drives. I check the hashes to verify good transfer. All my hashes are put in the root of my archive drives for easy referencing of the files. I put a copy of the hashes in a backup folder for peace of mind (I use a little app that adds the drive letter to the hashes in just a few clicks). I also append all new hashes to a master hash file for the whole drive (I am aware of Checksum's synchronization feature, but that means rehashing the new files and that is extra work/time I can easily do without). I can thus check the whole drive, if I need to transfer the whole drive (or to verify drive health) or just check one single hash when I need to pull just that file from the archive, all the while having a functional backup of the hashes.<br />
<br />
Presently, I am adding the paths manually, until I find a better solution, quite tedious work.<br />
<br />
I fully understand that this doesn't seem sensible (my wife is always telling me that I am not sensible enough, go figure!). Adding paths to single file hashes is only good if you don't want your hash files in the directory your file is in. I am guessing most people are content with the hash file right next to the hashed file. Unfortunately, that is not my case. I hope this is enough to convince you, if not, the search goes on. I would really appreciate an all-in-one hash tool for my needs.<br />
<br />
Thanks for listening!<br />
<br />
Have a great day!<br />
Cheers,<br />
<br />
Paskoe<br />
<br />
<br />
<div class="corz-reply">Take a look at checksum's "Root" hashing. You can hash the entire drive and have the checksums in one single file in the root - that's how I hash my own archive drives. If you also use absolute paths, you can keep the <span class="teletype">.hash<!--tt--></span> file wherever you like.<br />
<br />
I guarantee you will save time compared to your current method, because you don't have to *do* anything, at least not manually. Let checksum do the leg-work!<br />
<br />
Also note, during synchronization, there is no "rehashing", only files that do not already exist inside the <span class="teletype">.hash<!--tt--></span> file will be hashed. Existing hashes are ignored.<br />
<br />
I can certainly look into adding absolute paths for all contexts, but I think if you try letting checksum take care of this you will save yourself a lot of hassle.<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>





<div id="flux30001342155421">
<strong>flux3000</strong> - 13.07.12 5:57 am<br />
<br />

<!--*g*-->Greetings - first of all, thank you so much for this wonderful tool!<br />
<br />
I am wondering - is it not possible to create files with .md5 extension rather than .hash extension when using the batch checksum generator on directories?  It seems you only have this option when creating checksums from the files themselves. I am guessing there may be a good reason for this limitation...<br />
<br />
Thank you sir!<br />
<br />
<br />
<div class="corz-reply">There is no such limitation! Simply set:<br />
<br />
<span class="teletype">unified_extension=false<!--tt--></span><br />
<br />
And ALL checksum files will have an <span class="teletype">.md5<!--tt--></span> or <span class="teletype">.sha1<!--tt--></span> extension, regardless of the context.<br />
<br />
;o) Cor<!--corz--></div><!--*g*--><br />
<br />
<hr class="hr-regular" />
</div>

		<a href="?page=0#comments" title="there's more!"><span class="big">next comments</span> (1 page)</a>
	<form id="verify"  method="post" action="/windows/software/checksum/checksum-tricks.php#verify">
		<input type="hidden" name="CommentThing" value="CommentThing" />

		<div style="text-align:center;">
			<h3 class="message">
				First, confirm that you are human by entering the code you see..
			</h3>
			<h3>
				<span style="font-size:x-small;">(if you find the code difficult to decipher, click it for a new one!)</span><br />
			</h3><br />
			<div class="text-verify" onclick="document.getElementById('verify').submit();" title="click me for fresh text!">
				<div class="verify-title">Enter the 5-digit code this text <em>sounds like</em> :</div><br />
			<div class="verify-text">lower-case why, Upper-Case Aitch, nein, lower-case jay, Upper-Case Dee</div>
			</div><br />
			<div class="ortext">
				<label for="text-verify">use text-based authentication
				<input type="checkbox" name="text-verify" id="text-verify" value="1" onclick="document.getElementById('verify').submit();" title="use text-based authentication" /></label>
			</div>
			<br />
			<input type="text" id="gd_string" name="gd_string" title="Enter Code Here" />&nbsp;
			<input type="submit" name="check-it" value="check it!" /><br />
			<div class="clear"></div>
			<!-- in case you are taking for ever and your session expires  -->
			<input type="hidden" name="preview" value="preview" />
			<input type="hidden" name="number" value="" />
			<textarea class="hidden" name="comment-text" style="width:0;" title="hidden data" ></textarea>
		<div class="clear-half"></div>
		</div>
	</form>
</div>
</div>
	
<aside id="corz-auto-section-menu">
	<h1>Automatic Section Menu</h1>
	<div class="auto-section">
		<div class="auto-section-title">
			<a href="#" onclick="GoTop();return false;" title="Click here to go up to the top (only really useful when toolbar is in a fixed position)" id="pagelink-totop">sections: </a>
		</div>
		<nav class="auto-section-links">
			<h1>Automatic Section Links</h1>
			<a href="#section-Beginners" title="Jump to Beginners">Beginners</a>
			<a href="#section-Common_Tasks" title="Jump to Common Tasks">Common Tasks</a>
			<a href="#section-Launch_Modifiers" title="Jump to Launch Modifiers">Launch Modifiers</a>
			<a href="#section-Batch_Processing" title="Jump to Batch Processing">Batch Processing</a>
			<a href="#section-Music_Playlists" title="Jump to Music Playlists">Music Playlists</a>
			<a href="#section-Custom_Context_Menus" title="Jump to Custom Context Menus">Custom Context Menus</a>
			<a href="#section-Quiet_Operation" title="Jump to Quiet Operation">Quiet Operation</a>
			<a href="#section-Cross-Platform_Hashing" title="Jump to Cross-Platform Hashing">Cross-Platform Hashing</a>
			<a href="#section-SendTo_Processing" title="Jump to SendTo Processing">SendTo Processing</a>
			<a href="#section-Compare_Two_Folders" title="Jump to Compare Two Folders">Compare Two Folders</a>
			<a href="#section-Compare_Two_CDs_or_DVDs" title="Jump to Compare Two CDs or DVDs">Compare Two CDs or DVDs</a>
			<a href="#section-Compare_Disk_with_ISO" title="Jump to Compare Disk with ISO">Compare Disk with ISO</a>
			<a href="#section-Installer_Watcher" title="Jump to Installer Watcher">Installer Watcher</a>
			<a href="#section-Command-Line_Switches" title="Jump to Command-Line Switches">Command-Line Switches</a>
			<a href="#section-checksum.ini" title="Jump to checksum.ini">checksum.ini</a>
			<a href="#section-Requests" title="Jump to Requests">Requests</a>
			<a href="#section-Comments" title="Jump to Comments">Comments</a>
		</nav>
	</div>
</aside>

<aside class="promotion"><div id="ad-banner"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- corz.org webmaster  banner -->
<ins class="adsbygoogle"
     style="display:inline-block;width:120px;height:240px;background-color:#fff7d1"
     data-ad-client="ca-pub-7123663696036963"
     data-ad-slot="8275005566"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<noscript><!-- google stuff --></noscript></div><div id="ad-skyscraper"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- corz.org webmaster wide skyscraper -->
<ins class="adsbygoogle"
     style="display:inline-block;width:160px;height:600px;background-color:#fff7d1"
     data-ad-client="ca-pub-7123663696036963"
     data-ad-slot="8517313669"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<noscript><!-- google stuff --></noscript></div>
</aside>
<aside id="my-promotion">
<div class="my-promo-plate">
	<a onclick="window.open(this.href); return false;" href="http://corz.org/windows/software/corzspazio/" title="A disk space monitor that works..">
		<img class="promo-img" width="64" id="res_image_CorzSpaZio" src="/windows/software/corzspazio/img/CorzSpaZio_icon-logo_256px.png" alt="image for windows" />
		<div class="my-ad-message">Disk Space, you can SEE!</div>
	</a>
</div>
<div class="my-promo-plate">
	<a onclick="window.open(this.href); return false;" href="http://corz.org/windows/software/loopdropz/" title="Intuitive, easy-to-use, seamless background audio looping..">
		<img class="promo-img" width="64" id="res_image_LoopDropZ" src="/windows/software/loopdropz/img/LoopDropZ_logo_256.png" alt="image for windows" />
		<div class="my-ad-message">No Clicks, just Loops!</div>
	</a>
</div>
<div class="my-promo-plate">
	<a onclick="window.open(this.href); return false;" href="http://corz.org/windows/software/color-pickin-chooser/" title="A Color Chooser for the Power User!">
		<img class="promo-img" width="64" id="res_image_Color-Pickin-Chooser" src="/windows/software/color-pickin-chooser/img/ColorPickinChooser_256px.png" alt="image for windows" />
		<div class="my-ad-message">Drag &amp; Drop Pickers!</div>
	</a>
</div>
</aside><div class="site-notice-bar" data-tab-text="welcome to corz.org!"><p class="bigger strong">Welcome to corz.org!
<p>If something isn't working, I'm probably <em>improving</em> it, try again in a minute.  If it's still not working, please <a title="Mail Me!" href="/corz/mail-me.php?subject=BUGS!" onclick="OpenWindow(this.href,900,640);return false;">mail me!</a>
</div>
<div class="clear-quarter"></div>
<noscript><div class="warning centered h3">Please enable JavaScript for corz.org.<br />
There are things I want to show you!</div></noscript>
<footer>
<div class="footer" id="footer">
	<div id="footer-middle">
		<span class="footer-middle">
		<a id="search" href="http://corz.org/search" title="Search Cor's Org...
[http://corz.org.. powered by biofuels.. one day]"></a>
		<br />
		&nbsp;&copy;&nbsp;&nbsp;2014&nbsp;&laquo;&nbsp;<a href="http://corz.org/links.php" title="all content and back-end code &copy; 2000 - 2014 cor &amp; corz.org..  comments &copy; their respective authors">corz.org</a>&nbsp;&raquo;&nbsp;22.7.14<br />
		<span class="timerstring">little timer computer say this page generated in 0.012 seconds</span>
		</span>
	</div>
	<div id="footer-left">&nbsp;&nbsp;random word from <a href="http://corz.org/blog/"
	title="forsooth! the blog words of randomness!" id="cor-random">corzblog</a>:&nbsp;<strong>more</strong></div>
	<div id="footer-right"><strong>erom</strong> :<span title="!ssenmodnar fo sdrow golb eht !thoosrof" id="modnar-roc">golbzroc</span> morf drow modnar&nbsp;&nbsp;&nbsp;</div>
</div>
<div id="underfoot" class="foot-gradient" title="Damn! This gradient looks FINE in Firefox!"></div>
<div class="underfoot">
	<div id="underfoot-buttons">

		<div class="undertitle undertitle-translate" title="NOTE: THIS WILL MANGLE TECHNICAL OUTPUT !!! (e.g. scripts)
I do apologize if your country isn't included! Try the 'World' output..">
			Machine Translations
		</div>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Czh-CN" title="Automatic Chinese (simplified) Translation"><img class="dim flag" src="/img/flags/flag-china-simplified.png" alt="Simplified Chinese translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cnl&amp;ie=UTF-8" title="Automatic Dutch Translation"><img class="dim flag" src="/img/flags/flag-netherlands.png" alt="Deutsch translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cfr&amp;ie=UTF-8" title="Automatic French Translation"><img class="dim flag" src="/img/flags/flag-france.png" alt="French translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cde&amp;ie=UTF-8" title="Automatic German Translation"><img class="dim flag" src="/img/flags/flag-germany.png" alt="German translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cit&amp;ie=UTF-8" title="Automatic Italian Translation"><img class="dim flag" src="/img/flags/flag-italy.png" alt="Italian translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cja" title="Automatic Japanese Translation"><img class="dim flag" src="/img/flags/flag-japan.png" alt="Japanese translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cko&amp;ie=UTF-8" title="Automatic Korean Translation"><img class="dim flag" src="/img/flags/flag-korea.png" alt="Korean translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cpt&amp;ie=UTF-8" title="Automatic Portuguese Translation"><img class="dim flag" src="/img/flags/flag-portugal.png" alt="Portuguese translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Cpl&amp;ie=UTF-8" title="Automatic Polish Translation"><img class="dim flag" src="/img/flags/flag-poland.png" alt="Polish translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1&amp;langpair=en%7Ces&amp;ie=UTF-8" title="Automatic Spanish Translation"><img class="dim flag" src="/img/flags/flag-spain.png" alt="Spanish translation of this page" /></a>
		<a href="http://translate.google.com/translate?u=http%3A%2F%2Fcorz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php%3Fpage%3D1" title="Automatic World Translation"><img class="dim flag" src="/img/flags/flag-world.png" alt="World translation of this page" /></a>
		<div class="clear-minute"></div>
		<div class="x-small trans-note" title="These are my biggest supporters, after English-speaking countries, in no particular order.">
			NOTE: This Will Mangle Technical Output (e.g. scripts).
		</div>

		<div class="clear"></div>
		<div class="undertitle undertitle-colors" title="Switch color schemes">
			scheme
			&thinsp;<a href="http://validator.w3.org/check?uri=referer&amp;ss=1" title="Standards-Compliant HTML5.. So if it looks wonky, blame your crap web browser!"><img
			src="/img/valid-html5.png" class="valid-button" id="valid-html" alt="HTML5 icon (meaning, validated HTML5)"/></a><a href="http://jigsaw.w3.org/css-validator/validator?uri=http://corz.org%2Fwindows%2Fsoftware%2Fchecksum%2Fchecksum-tricks.php&amp;ss=1"
			title="Run your validator all up and down my CSS!"><img src="/img/valid-css3.png"
			class="valid-button" id="valid-css" alt="CSS3 icon (meaning, validated CSS3)" /></a>

		</div>
		
	<div id="user-scheme-mini">
		<ul id="user-scheme-controls">
			<li><form method="post" action="/windows/software/checksum/checksum-tricks.php" class="user-submit-form">
				<input type="submit" class="user-scheme-submit" value="oranges" title="Switch to oranges"/>
				<input type="hidden" name="ajax" value="true"/>
				<input type="hidden" name="scheme" value="oranges"/>
				<input type="hidden" name="goblog" value=""/>
			</form></li>
			<li><form method="post" action="/windows/software/checksum/checksum-tricks.php" class="user-submit-form">
				<input type="submit" class="user-scheme-submit" value="blues" title="Switch to blues"/>
				<input type="hidden" name="ajax" value="true"/>
				<input type="hidden" name="scheme" value="blues"/>
				<input type="hidden" name="goblog" value=""/>
			</form></li>
			<li><form method="post" action="/windows/software/checksum/checksum-tricks.php" class="user-submit-form">
				<input type="submit" class="user-scheme-submit" value="dark" title="Switch to dark"/>
				<input type="hidden" name="ajax" value="true"/>
				<input type="hidden" name="scheme" value="dark"/>
				<input type="hidden" name="goblog" value=""/>
			</form></li>
			<li><form method="post" action="/windows/software/checksum/checksum-tricks.php" class="user-submit-form">
				<input type="submit" class="user-scheme-submit" value="browser" title="Switch to browser"/>
				<input type="hidden" name="ajax" value="true"/>
				<input type="hidden" name="scheme" value="browser"/>
				<input type="hidden" name="goblog" value=""/>
			</form></li>
			<li><form method="post" action="/windows/software/checksum/checksum-tricks.php" class="user-submit-form">
				<input type="submit" class="user-scheme-submit" value="reset" title="Switch to reset"/>
				<input type="hidden" name="ajax" value="true"/>
				<input type="hidden" name="scheme" value="reset"/>
				<input type="hidden" name="goblog" value=""/>
			</form></li>
		</ul>
	</div>
		<div class="clear"></div>
	</div>

	<nav id="underfoot-tools">
		<h1>Underfooter Tools</h1>
		<div class="undertitle undertitle-tools">Site Tools</div>
		<div id="underfoot-site-tools">
			<a href="http://corz.org/ip" onclick="window.open(this.href); return false;"
				title="Your external IP address, in plain text, with nothing else.." id="link-internal-site-tools-what_is_my_IP">What's MY IP</a><br />
			<a href="http://corz.org/user-agent" onclick="window.open(this.href); return false;"
				title="Your browser's USER AGENT String?" id="link-internal-site-tools-USER_AGENT">What's MY User Agent</a><br />
			<a href="http://corz.org/probe" onclick="window.open(this.href); return false;" title="Simple, effective P2P Port Probe.. Test your Ports!" id="link-internal-port-probe">P2P Port Probe</a><br />
<script>
//<![CDATA[
<!--
document.write("<a title=\"The Upload Facility.. You love it!\" href=\"/upload\" onclick=\"OpenWindow(this.href,620,480);return false;\">File Upload</a>")
//-->
//]]>
</script>
<noscript><a href="http://corz.org/upload" title="the corz.org upload facility" id="link-internal-site-upload">File Upload</a></noscript><br />
			<a href="http://corz.org/public/machine/source/php/tag-tools.php" onclick="window.open(this.href); return false;"
				title="HTML to php and php to HTML and more... It's the one and only.. Tag-Tools!" id="link-internal-site-tools-tag_tools">Tag-Tools!</a><br />
		</div>
	</nav>

	<nav>
		<h1>Quick Links</h1>
		<div id="underfoot-quicklinks">
			<div class="undertitle undertitle-quicklinks">Quick Links</div>
			<a href="http://corz.org/" title="Go Home!" id="link-internal-home">home</a>
			&bull;
			<a href="http://corz.org/search" title="Search Cor's Org!" id="link-internal-search">search</a>
			&bull;
			<a href="http://corz.org/blog" title="Cor's Blog!" id="link-internal-blog">corzblog</a>
			&bull;
			<a href="http://corz.org/devblog" title="Software updates, other dev-related stuff.."
			id="link-internal-dev_blog">devblog</a>
			&bull;
			<a href="http://corz.org/blogtest" title="Cor's TEST Blog.. You got admin!" id="link-internal-blogtest">test blog</a>
			&bull;
			<a href="http://corz.org/engine" title="Downloads!" id="link-internal-download-engine">downloads</a>
			&bull;
			<a href="http://corz.org/corz/contact.php" title="Contact Cor!" id="link-internal-Contact_Cor">contact</a>
			&bull;
			<a href="http://corz.org/corz/hire-cor.php" title="Hire Cor!" id="link-internal-Hire_Cor">hire cor</a>
			&bull;
			<a href="http://corz.org/corz/donate.php" title="Put YOUR money where MY mouth is!"
			id="link-internal-give_back_to_cor_and_family">give back</a>
			&bull;
<script>
//<![CDATA[
<!--
document.write("<a title=\"Mail Me!\" href=\"\/corz\/mail-me.php\" onclick=\"OpenWindow(this.href,900,640);return false;\">email<\/a>")
//-->
//]]>
</script><noscript><a href="/corz/mail-me.php" title="Mail Me!">email</a></noscript>
			&bull;
<script>
//<![CDATA[
<!--
document.write("<a title=\"Subscribe and Unsubscribe to the corz.org mailing list!\" href=\"/corz/mailing-list.php\" onclick=\"OpenWindow('/corz/mailing-list.php',900,640);return false;\">mailing list</a>")
//-->
//]]>
</script><noscript><a href="/corz/mailing-list.php" title="Subscribe and Unsubscribe to the corz.org mailing list!">mailing list</a></noscript>
			&bull;
			<a href="http://corz.org/bbtags" title="BBTags Reference!" id="link-internal-BBTags_Guide">bbtags guide</a>
			&bull;
			<a href="http://corz.org/fun/" title="Super-Big-Mega-Fun!" id="link-internal-fun_stuff">fun stuff</a>
			&bull;
			<a href="http://corz.org/fun/weegary.php" title="Wee Gary. Back in containment!" id="link-internal-fun_stuff-weegary">that bot</a>
			&bull;
<script>
//<![CDATA[
<!--
document.write("<a title=\"Site Chat.. (Needs JavaScript - and if corz.org is in your trusted sites, you get a better windoid!)\" href=\"\/chat\/\" onclick=\"OpenChatWindow(this.href,820,400,50,150);return false;\">site chat<\/a> &bull;")
//-->
//]]>
</script>
<noscript><!-- without javascript, you might as well forget about this chat --></noscript>
			<a href="http://corz.org/public/machine/source/php/corz%20function%20library/admin%20tools/session-view.php" onclick="window.open(this.href); return false;"
			title="View your current php session variables.." id="link-internal-session_viewer">session viewer</a>
			<div class="clear-tiny"></div>
			<a href="#" onclick="GoTop();return false;" title="corz.org is best viewed with a standards-compliant browser." id="link-internal-Top_of_page" class="larger">top of the page</a>
		</div>


	</nav>
	<div class="clear"></div>
</div>
</footer>
<script>
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<noscript><!-- google analytics - PLEASE enable JavaScript for corz.org - this stuff helps the site --></noscript>
<script>
//<![CDATA[
<!--

if (document.images) {
	// preload roll-over images..
	var PreImagesArray = [];
	var ImgLoadArray = [];

	PreImagesArray.push("/blog/inc/img/corzblog_hover.png")
	PreImagesArray.push("/blog/inc/themes/original/images/edit-corzblog-pencil-hover.png")
	PreImagesArray.push("/blog/inc/themes/original/images/permalink-icon-chain-links-hover.png")
	for (var i=0, iLen=PreImagesArray.length; i<iLen; i++) {
		ImgLoadArray[i]  = new Image();
		ImgLoadArray[i].src = PreImagesArray[i];
	}
}
// check scroll position.. see /inc/js/corz.js for the good stuff.
window.onscroll = function() {
	var ScrollPos = GetScrollPos();
	if ( ScrollPos > window.innerHeight ) {
		document.getElementById("top-of-page").style.display = "block";
		document.getElementById("ad-skyscraper").style.display = "block";
		document.getElementById("ad-banner").style.display = "none";
	} else {
		document.getElementById("top-of-page").style.display = "none";
		document.getElementById("ad-skyscraper").style.display = "none";
		document.getElementById("ad-banner").style.display = "block";
	}
}
function GetScrollPos() {
	return (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).ScrollPos;
}
document.getElementById("ad-banner").style.display = "block"; /* lol! */
document.getElementById("ad-skyscraper").style.display = "none";


// how mad is needing this?...
parent.document.body.style.webkitTextSizeAdjust = "auto";
parent.document.body.style.zoom = "100%";

//-->
//]]>
</script>
<noscript><!-- Please Enable JavaScript for corz.org --></noscript>
</body>
</html>
