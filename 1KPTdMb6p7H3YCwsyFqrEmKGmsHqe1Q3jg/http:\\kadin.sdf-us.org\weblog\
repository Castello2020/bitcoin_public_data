http://kadin.sdf-us.org/weblog/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 16:00:44 GMT
Server: Apache/2.2.27 (Unix)
Connection: close
Content-Type: text/html;charset=utf-8

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
	<head>
		<meta http-equiv="content-type" 
			content="text/html;charset=utf-8">
		<title> Kadin2048's Weblog</title>
		<link href="http://kadin.sdf-us.org/blog.css" 
			type="text/css" rel="stylesheet" media="all">
	</head>
<body>

<div id="blogtitle">Kadin2048's Weblog</div>

<div id="categories">

<ul class="category-list">
<li><a href="http://kadin.sdf-us.org/weblog/technology">Technology</a></li>
<li><a href="http://kadin.sdf-us.org/weblog/politics">Politics</a></li>
<li><a href="http://kadin.sdf-us.org/weblog/finance">Finance</a></li>
<li><a href="http://kadin.sdf-us.org/weblog/photography">Photography</a></li>
<li><a href="http://kadin.sdf-us.org/weblog/meta">Meta</a></li>
</ul>

<p>
<a href="http://kadin.sdf-us.org/weblog/?flav=rss" class="RSS">RSS</a>
</p>

</div> <!-- End categories -->

<div id="contentwrapper">
<div id="articlecolumn">
<h3>Mon, 14 Jul 2014</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="outlook-mac-cpu" href="http://kadin.sdf-us.org/weblog/technology/outlook-mac-cpu.html">Quick Tip: Fixing High CPU Usage by Outlook Mac 2011</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>An apparently common issue with Outlook for Mac 2011 is crazily high
CPU usage, enough to spin up the fans on a desktop machine or drain
the battery on a laptop, when Outlook really shouldn&#8217;t be doing
anything.</p>

<p>If you do some Googling, you&#8217;ll find a lot of people complaining and
almost as many recommended solutions.  Updating to a version after
14.2 is a typical suggestion, as is deleting and rebuilding your mail
accounts (ugh, no thanks).</p>

<p>Keeping Outlook up to date isn&#8217;t a bad idea, but the problem still
persisted with the latest version as of today (14.4.3).</p>

<p>In my case, the high CPU usage had <em>something</em> to do with my Gmail
IMAP account, which is accessed from Outlook alongside my Exchange
mailbox.  Disabling the Gmail account stopped the stupid CPU usage,
but that&#8217;s not really a solution.</p>

<p>What <em>did</em> work was using the Progress window to see what Outlook was up
to whenever the CPU pegged.  As it turned out, there was a particular
IMAP folder &#8212; the &#8216;Starred&#8217; folder, used by both Gmail and Outlook
for starred and flagged messages, respectively &#8212; which was being
constantly refreshed by Outlook.  It would upload all the messages in
the folder to Gmail, then quiesce for a second, then do it over
again.  Over and over.</p>

<p>Outlook&#8217;s IMAP implementation is just generally <em>bad</em>, and this seems
to happen occasionally without warning.  But the Outlook engineers
seem to have anticipated it, because if you right-click on an IMAP
folder, there&#8217;s a helpful option called &#8220;Repair Folder&#8221;.  If you use
it on the offending folder, it will replace the contents of the local
IMAP store with the server&#8217;s version, and break the infinite-refresh cycle.</p>

<p>So, long story short; if you have high-CPU issues with Outlook Mac,
try the following:</p>

<ol>
<li>Update Outlook using the built-in update functionality.  See if
that fixes the issue.</li>
<li>Use the Progress window to see what Outlook is doing at times when
the CPU usage is high.  Is it refreshing an IMAP folder?</li>
<li>If so, use the Repair Folder option on that IMAP folder, but be
aware that any local changes you&#8217;ve made will be lost.</li>
</ol>

<p>And, of course, lobby your friendly local IT department to use
something that sucks less than Exchange.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology">/technology</a>] <a href="http://kadin.sdf-us.org/weblog/technology/outlook-mac-cpu.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Sun, 08 Sep 2013</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="initial-thoughts-NSA" href="http://kadin.sdf-us.org/weblog/technology/initial-thoughts-NSA.html">Initial thoughts on the &#8220;BULLRUN&#8221; revelations</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>After reading through some &#8212; certainly not all, and admittedly not
thoroughly &#8212; of the documents and analysis of the NSA &#8220;BULLRUN&#8221;
crypto-subversion program, as well as various panicky speculation on
the usual discussion sites, I can&#8217;t resist the temptation to make a
few predictions/guesses.  At some point in the future I&#8217;ll revisit
them and we&#8217;ll all get to see whether things are actually better or
worse than I suspect they are.</p>

<p>I&#8217;m not claiming any special knowledge or expertise here; I&#8217;m just a
dog on the Internet.</p>

<p>Hypothesis 1:  <em>NSA hasn&#8217;t made any fundamental breakthroughs in cryptanalysis,
such as a method of rapidly factoring large numbers, which render
public-key cryptography suddenly useless.</em></p>

<p>None of the leaks seem to suggest any heretofore-unknown abilities
that undermine the mathematics that lie at the heart of PK crypto
(trapdoor functions).  E.g. a giant quantum computer that can simply
brute-force arbitrarily large keys in short amounts of time.  In fact,
the leaks suggest that this capability almost certainly <em>doesn&#8217;t</em>
exist, or else all the other messy stuff, like compromising various
implementations, wouldn&#8217;t be necessary.</p>

<p>Hypothesis 2: <em>There are a variety of strategies used by NSA/GHCQ for
getting access to encrypted communications, rather that a single
technique.</em></p>

<p>This is a pretty trivial observation.  There&#8217;s no single &#8220;BULLRUN&#8221;
vulnerability; instead there was an entire program aimed at
compromising various products to make them easier to break, and the
way this was done varied from case to case.  I point
this out only because I suspect that it may get glossed over in public
discussions of the issue in the future, particularly if there are
especially egregious vulnerabilities that were inserted (as seems
likely).</p>

<p>Hypothesis 3: <em>Certificate authorities are probably compromised (duh)</em></p>

<p>This is conjecture on my part, and not drawn directly from any primary
source material.  But the widely-accepted certificate authorities that
form the heart of SSL/TLS PKI are simply too big a target for anyone
wanting to monitor communications to ignore.  If you have root certs
and access to backbone switches with suitably fast equipment, there&#8217;s
no technical reason why you can&#8217;t MITM TLS connections all day long.</p>

<p>However, MITM attacks are still active rather than passive, and
probably unfeasible even for the NSA or its contemporaries on a
universal basis.  Since they&#8217;re detectable by a careful-enough user
(e.g. someone who actually verifies a certificate fingerprint over a
side channel), it&#8217;s likely the sort of capability that you keep in
reserve for when it counts.</p>

<p>This really shouldn&#8217;t be surprising; if anyone seriously thought,
pre-Snowden, that Verisign et al wouldn&#8217;t and hadn&#8217;t handed over the
secret keys to their root certs to the NSA, I&#8217;d say they were pretty naive.</p>

<p>Hypothesis 4: <em>Offline attacks are facilitated in large part by weak
PRNGs</em></p>

<p>Some documents allude to a program of recording large amounts of
encrypted Internet traffic for later decryption and analysis.  This
rules out conventional MITM attacks, and implies some other method of
breaking commonly-used Internet cryptography.</p>

<p>At least one NSA-related weakness seems to have been the <code>Dual_EC_DRBG</code>
pseudorandom number generator specified in NIST SP 800-90; it was a
bit hamhanded as these things go because it was discovered, but it&#8217;s
important because it shows an interest.</p>

<p>It is possible that certain &#8220;improvements&#8221; were made to hardware RNGs,
such as those used in VPN hardware and also in many PCs, but the jury
seems to be out right now.  But compromising
hardware makes somewhat more sense than software, since it&#8217;s much
harder to audit and detect, and it&#8217;s also harder to update.  </p>

<p>Engineered weaknesses inside [P]RNG hardware used in VPN appliances and other
enterprise gear might be the core of NSA&#8217;s offline intercept
capability, the crown jewel of the whole thing.  However, it&#8217;s
important to keep in mind Hypothesis 2, above.</p>

<p>Hypothesis 5: <em>GCC and other compilers are probably not compromised</em></p>

<p>It&#8217;s possible, both in theory and to some degree in practice, to
compromise software by building flaws into the compiler that&#8217;s used to
create it.  (The seminal paper on this topic is &#8220;Reflections on
Trusting Trust&#8221; by Ken Thompson.  It&#8217;s worth reading.)  </p>

<p>Some only-slightly-paranoids have suggested that the NSA and its
sister organizations may have attempted to subvert commonly-used
compilers in order to weaken all cryptographic software produced with
them.  I think this is pretty unlikely to have actually been carried
out; it just seems like the risk of discovery would be too high.
Despite the complexity of something like GCC, there are lots of people
looking at it from a variety of organizations, and it would be
difficult to subvert all of them while harder still to insert an
exploit that would have been completely undetected.  In comparison, it would be
relatively easy to convince a single company producing ASICs to modify
a proprietary design.  Just based on bang-for-buck, I think that&#8217;s where the
effort is likely to have been.</p>

<p>Hypothesis 6: <em>The situation is probably not hopeless, from a security
perspective.</em></p>

<p>There is a refrain in some circles that the situation is now hopeless,
and that PK-cryptography-based information security is irretrievably
broken and can never be trusted ever again.  I do not think that this
is the case.</p>

<p>My guess &#8212; and this is really a guess; it&#8217;s the thing that I&#8217;m hoping
will be true &#8212; is that there&#8217;s nothing <em>fundamentally</em> wrong with
public key crypto, or even in many carefully-built implementations.
It&#8217;s when you start optmizing for cost or speed that you open the door.</p>

<p>So: if you are very, very careful, you will still be
able to build up a reasonably-secure infrastructure using currently
available hardware and software.  (&#8216;Reasonably secure&#8217; meaning
resistant to untargeted mass surveillance, not necessarily to a
targeted attack that might include physical bugging: that&#8217;s a much
higher bar.)  However, some code may need to be changed in order to
eliminate any reliance on possibly-compromised components, such as
hardware RNGs / accelerators that by their nature are difficult to
audit.</p>

<p>Large companies that have significant investments in VPN or
TLS-acceleration hardware are probably screwed.  Even if the gear is
demonstrably flawed, look for most companies to downplay the risk in
order to avoid having to suddenly replace it.</p>

<p>Time will tell exactly what techniques are still safe and which
aren&#8217;t, but my WAG (just for the record, so that there&#8217;s something to
give a thumbs-up / thumbs-down on later) is that TLS in
FIPS-compliance mode, on commodity PC hardware but with hardware RNGs
disabled or not present at both ends of the connection, using
throwaway certificates (e.g. no use of conventional PKI like
certificate authorities) validated via a side-channel, will turn out
to be fairly good.  But a lot of work will have to be invested in
validating everything to be sure.</p>

<p>Also, my overall guess is that neither the open-source world or the
commercial, closed-source world will come out entirely unscathed, in
terms of reputation for quality.  However, the worst vulnerabilities
are likely to have been inserted where there were the least number of
eyes looking for them, which will probably be in hardware or tightly
integrated firmware/software developed by single companies and
distributed in &#8220;compiled&#8221; (literally compiled or in the form of an
ASIC) form only.  </p>

<p>As usual, simpler will turn out to be better, and
generic hardware running widely-available software will be better than
dedicated boxes filled with a lot of proprietary silicon or code.</p>

<p>So we&#8217;ll see how close I am to the mark.  Interesting times.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology">/technology</a>] <a href="http://kadin.sdf-us.org/weblog/technology/initial-thoughts-NSA.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Fri, 22 Feb 2013</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="bike-car-efficiency" href="http://kadin.sdf-us.org/weblog/technology/bike-car-efficiency.html">Efficiency</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>I&#8217;ve recently (re)taken up cycling in a fairly major way, and have
been surprised by how much I&#8217;ve enjoyed it.  One of the things that&#8217;s
making it more fun this time around, as compared to previous dabblings
in years past, is the various ways that you can measure and quantify
your progress &#8212; not to mention your suffering &#8212; and compare it with
others, etc.</p>

<p>For example, a recent ride taken with a few friends:</p>

<pre><code>Time: 01:54:50
Avg Speed: 13.5 mi/h
Distance: 25.8 mi
Energy Output: 826 kJ
Average Power: 120 W
</code></pre>

<p>Now, 120 W is really not especially great from a competitive cycling
perspective; better riders routinely output 500-ish watts.  But it
struck me as being pretty efficient: for all my effort, the ride
actually only required the same amount of power to propel me on my way
as would have been required by two household light bulbs.</p>

<p>So that got me thinking: just how efficient <em>is</em> cycling?</p>

<p>My 25.8 mi / 41.5 km roundtrip ride required 826 kJ, if we believe
Strava; that&#8217;s mechanical energy at the pedals.  (I unfortunately
don&#8217;t have a power meter on my bike, so this is a bit of an estimate
on Strava&#8217;s part, taking into account my weight, my bike&#8217;s weight, my
speed, the elevation changes on the route, etc.)</p>

<p>That&#8217;s about the same as the energy released by 1.7 grams of combusted
gasoline, per Wolfram Alpha.  If I ran on gasoline, I&#8217;d be able to
carry enough in my water bottle to ride across the U.S. more than 3
times (7,813 miles worth).</p>

<p>Of course, cars aren&#8217;t perfectly efficient in their use of gasoline,
and I&#8217;m not a perfectly efficient user of food calories.  Strava
helpfully estimates the food-calorie expenditure of my ride at 921
Calories, which is 3.85 MJ, leading to a somewhat disappointing figure
of only 21.4% overall efficiency.  (Disappointing only in the
engineering sense; from an exercise perspective I&#8217;d really rather it
be low.)</p>

<p>Though it&#8217;s about on par with a car, interestingly enough.  <a href="http://www.fueleconomy.gov/feg/atv.shtml">The
Feds</a> give anywhere between 14-26% as a typical &#8216;tank-to-tread&#8217;
efficiency figure for a passenger car, with most losses in the engine
itself.</p>

<p>So if I were able to drink gasoline and use it at least as efficiently
as a car, my water bottle would get me about a thousand miles.  (1,094
mi or 1,760 km, using the low-end 14% efficiency figure for a car.)
Still pretty good, considering that my own car would only get about 5
miles on the same amount of fuel (24 fl oz at 25 MPG).</p>

<p>Of course, a car isn&#8217;t an especially fair comparison &#8212; it has a lot
of overhead both in terms of mass, rolling resistance (more, lower-pressure
tires), and air resistance (higher cross-sectional area).  Some sort
of small motorbike would be a better comparison, and there I suspect
you&#8217;d start to see an even playing field.</p>

<p>Maybe that&#8217;s my argument for getting a motorcycle&#8230;</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology">/technology</a>] <a href="http://kadin.sdf-us.org/weblog/technology/bike-car-efficiency.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Wed, 26 Sep 2012</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="selinux-killed-everything" href="http://kadin.sdf-us.org/weblog/technology/selinux-killed-everything.html">&#8220;No Directory&#8221; error on login, after upgrading to Scientific Linux 6.3</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>I recently had a hardware failure, and decided to take the opportunity
to upgrade my aging home server from Ubuntu &#8216;Dapper Drake&#8217; to
<a href="https://www.scientificlinux.org/">Scientific Linux</a>.  The reasons for my move away from Ubuntu are
an article unto themselves, but it boils down to what I see as an
increasing contempt for existing users (and pointless pursuit of
hypothetical tablet users &#8212; everybody wants to try their hand at
being Apple these days, apparently unaware that the role has been
filled), combined with &#8212; and this is significantly more important &#8212;
the fact that I have been using RPM-based distros far more often at
work than Debian/APT-based ones, despite the many advantages of the
latter.  Anyway, so I decided to switch the server to SL.</p>

<p>The actual migration process wasn&#8217;t pretty and involved a close call
with a failing hard drive which I won&#8217;t bore you with.  The basic
process was to preserve the <code>/home</code> partition while tossing everything
else.  This wasn&#8217;t too hard, since SL uses the same Anaconda installer
as Fedora and many other distros.  I just told it to use my root
partition as <code>/</code>, my home partition as <code>/home</code>, etc.</p>

<p>And then I rebooted into my new machine.  And seemingly <em>everything</em>
broke.</p>

<p>The first hint was on login: I got a helpful message informing me that
my home directory (e.g. <code>/home/myusername</code>) didn&#8217;t exist.  Which was
interesting, because once logged in I could easily <code>cd</code> to that
directory, which plainly <em>did</em> exist on the filesystem.</p>

<p>The next issue was with <code>ssh</code>: although I could connect via ssh as my
normal user, it wasn&#8217;t possible to use public key auth, based on the
<code>authorized_keys</code> file in my home directory.  It was as though the ssh
process wasn&#8217;t able to access my home directory&#8230;</p>

<p>As it turned out, <strong>the culprit was SELinux.</strong>  Because the &#8220;source&#8221;
operating system that I was migrating from didn&#8217;t have SELinux
enabled, and the &#8220;destination&#8221; one did, there weren&#8217;t proper &#8216;security
contexts&#8217; (extended attributes) on the files stored on <code>/home</code>.</p>

<p>The solution was pretty trivial: I had to run <code># restorecon -R -v
/home</code> (note as root!), which took a few minutes, and then everything
worked as expected.  This was something I only discovered after much
searching, <a href="http://forums.fedoraforum.org/showthread.php?t=241832">on this forum posting regarding a Fedora 12
install</a>.  I&#8217;m noting it here in part so that perhaps other
people in the future can find it more easily.  And because,
unfortunately, there are forums filled with people experiencing the
same problem and receiving terrible advice that they need to reformat
<code>/home</code> (in effect, throw away all their data) in order to upgrade or
change distros.</p>

<p>Bottom line: if you are running into weird issues on login (console or
SSH) after an upgrade from a non-SELinux distro to a SELinux-enabled
one, try rebuilding the security context before taking any drastic
steps.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology">/technology</a>] <a href="http://kadin.sdf-us.org/weblog/technology/selinux-killed-everything.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Wed, 01 Aug 2012</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="drone-on" href="http://kadin.sdf-us.org/weblog/technology/drone-on.html">Droning About Drones: Flying Wings and Gyroscopes</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>Lockheed is apparently working on a next-generation carrier based
unmanned fighter aircraft, the &#8220;Sea Ghost.&#8221;  At least, they are
&#8220;working&#8221; on it in the sense that <a href="http://www.wired.com/dangerroom/2012/07/lockheed-sea-ghost/">they paid some graphic designer to
make some CGI glamour shots of something that might be a UAV</a>,
sitting on the deck of what is presumably an aircraft carrier.  As
press releases go it&#8217;s a little underwhelming, but whatever.</p>

<p>From the rendering, it appears that the Sea Ghost is a <a href="http://en.wikipedia.org/wiki/Flying_wing">flying
wing</a> design, which is interesting for a number of reasons.
Flying wings are almost as old as aviation in general, but have proved
&#8212; with <a href="http://en.wikipedia.org/wiki/List_of_flying_wing_aircraft">a few notable exceptions</a> &#8212; to be largely impractical,
despite having some nice advantages on paper over the traditional
fuselage-plus-wings monoplane design.  It&#8217;s one of those ideas that&#8217;s
just so good that, despite a sobering list of failures, it just won&#8217;t
die.</p>

<p>One of the big problems with flying wings is <em>yaw control</em>.  Since
they lack a tail and traditional rudder, getting the aircraft to
rotate on the horizontal plane is difficult.  Typically &#8212; in the case
of the B2, anyway &#8212; <a href="http://www.airliners.net/aviation-forums/military/read.main/140838/">this is accomplished</a> by careful manipulation of
the ailerons to create drag on one wing, while simultaneously
compensating on the other side in order to control roll.  This is, to
put it mildly, a neat trick, and it&#8217;s probably the only reason why the
B2 exists as a production aircraft (albeit a really expensive one).</p>

<p>I suspect that the Sea Ghost is built the same way, if only because
it&#8217;s been proven to work and the Lockheed rendering doesn&#8217;t show any
other vertical stabilizer surfaces that would do the job.</p>

<p>But a thought occured to me: if you can make a drone small and light
enough (actually, a small enough moment of inertia), you don&#8217;t need to
do the B2 aileron trick at all.  You could maneuver it <a href="http://www.nasa.gov/mission_pages/station/research/experiments/ZPM.html">like a
satellite</a>.  That is, by using a gyroscope not simply to <em>sense</em>
the aircraft&#8217;s change in attitude, but actually to make it <em>move</em>
about the gyroscope.  Simply: you spin up the gyro, and then use servos
to tilt the gimbal that the gyro sits in.  The result is a force on
the airframe opposite the direction in which the gyro&#8217;s axis is
moved.  With multiple gyros, you could potentially have roll, pitch,
and yaw control.</p>

<p>This isn&#8217;t practical for most aircraft &#8212; aside from helicopters which
do it naturally to a degree &#8212; because they have too much inertia, and
the external forces acting against them are too large; the gyroscope
you&#8217;d need to provide any sort of useful maneuvering ability would
either make the plane too heavy to fly, or take up space needed for
other things (e.g. bombs, in the case of most flying wing aircraft).
And that might still be the case with the Sea Ghost, but it&#8217;s not
necessarily the case with all drones.</p>

<p>The smaller, and more importantly lighter, the aircraft the easier it
would be to maneuver with a gyroscope rather than external aerodynamic
control surfaces.  Once you remove the requirement to carry a person,
aircraft can be quite small. </p>

<p>It wouldn&#8217;t surprise me if you could maneuver a small hobbyist
aircraft with a <a href="http://hackaday.com/2012/07/16/cracking-open-an-ancient-avionics-gyroscope/">surplus artificial horizon gyro</a>.  To my
knowledge, nobody has done this yet, but it seems like a pretty
straightforward merger of existing technology.  You&#8217;d need a bunch of
additional MEMS gyros, which are lightweight, to sense the change in
attitude and stop and start the manuevering gyro&#8217;s movement, but
there&#8217;s nothing that seems like an obvious deal-breaker.</p>

<p>The advantage of such a system would be that there&#8217;s no change to the
outside skin of the aircraft in order to make it maneuver (within the
limits of the force provided by the gyro).  That would mean a lower
radar cross section, and potentially less complexity and weight due to
fewer moving parts in the wings.</p>

<p>Just one of the many intriguing possibilities you come up with, when
you take 80 kilos of human meat out of the list of requirements.</p>

<p>Almost enough to get me back into model airplanes again.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology">/technology</a>] <a href="http://kadin.sdf-us.org/weblog/technology/drone-on.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Sun, 08 Apr 2012</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="vm370-linux" href="http://kadin.sdf-us.org/weblog/technology/software/vm370-linux.html">VM/370 on Linux with the Hercules Emulator</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>For no particularly good reason, I decided I wanted to play around
with <a href="http://en.wikipedia.org/wiki/VM_(operating_system)">IBM VM</a> earlier this weekend.  Although this would seem on its
face to be fairly difficult &#8212; VM/370 is a mainframe OS, after all &#8212;
thanks to the Hercules emulator, you can get it running on either
Windows or Linux fairly easily.</p>

<p>Unfortunately, many of the instructions I found online were either
geared towards people having trouble compiling Hercules from source
(which I avoided thanks to Ubuntu&#8217;s binaries), or assume a lot of
pre-existing VM/370 knowledge, or are woefully out of date.  So here 
are just a couple of notes should anyone else be interested in
playing around with a fake mainframe&#8230;</p>

<p>Some notes about my environment:</p>

<ul>
<li>Dual-core AMD Athlon64 2GHz</li>
<li>1 GB RAM  (yes, I know, it needs more memory)</li>
<li>Ubuntu 10.04 LTS, aka Lucid</li>
</ul>

<p>Ubuntu Lucid has a good binary version of Hercules in the
repositories.  So no compilation is required, at least not for any of
the basic features that I was initially interested in.  A quick
<code>apt-get hercules</code> and <code>apt-get x3270</code> were the only necessities.</p>

<p>In general, I followed the instructions at gunkies.org: <a href="http://gunkies.org/wiki/Installing_VM/370_on_Hercules">Installing
VM/370 on Hercules</a>.
However, there were a few differences.  The guide is geared towards
someone running Hercules on Windows, not Linux.  </p>

<ul>
<li><p>You <em>do not</em> need to set everything up in the same location as the
Hercules binaries, as the guide seems to indicate.  I created a
<code>vm370</code> directory in my user home, and it worked fine as a place to
set up the various archives and DASD files (virtual machine
drives).</p></li>
<li><p>The guide takes you through sequences where you boot the emulated
machine, load a &#8216;tape&#8217;, reboot, then load the other &#8216;tape&#8217;.  When I
did this, the second load didn&#8217;t work (indefinite hang until I quit
the virtual system from the Hercules console).  <s>But after examining
the DASD files, it seemed like the second tape had loaded anyway,
but the timestamp indicated that it had loaded at the same time as
the first tape.  I think that they both loaded one after the other
in the first boot cycle &#8212; hard to tell for sure at this point, but
don&#8217;t be too concerned if things don&#8217;t seem to work as described; I
got a working system anyway.</s>  <strong>Update:</strong> The instructions
work as described; I had a badly set-up DASD file that was causing
an error, which did not show itself until later when I logged in
and tried to start CMS.</p></li>
<li><p>To get a 3270 connection, I had to connect to 127.0.0.1 on port
3270; trying to connect to &#8220;localhost&#8221; didn&#8217;t work.  I assume this
is just a result of how Hercules is set up to listen, but it caused
me to waste some time.</p></li>
<li><p>The tutorial tells you to start Hercules, then connect your 3270
emulator to the virtual system, then run the <code>ipl</code> command; the
expected result is to see the loader on the 3270.  For me, this
didn&#8217;t work&#8230; the 3270 display just hung at the Hercules splash
screen.  To interact with the loader, I had to disconnect and
reconnect the 3270 emulator.  So, rather than starting Hercules,
connecting the 3270, then <code>ipl</code>-ing, it seems easier to start
Hercules, <code>ipl</code>, then connect and operate the loader.</p></li>
</ul>

<p>Of course, when you get through the whole procedure, what you&#8217;ll have
is a bare installation of VM/370&#8230; without documentation (or
extensive previous experience), you can&#8217;t do a whole lot.  That&#8217;s what
I&#8217;m figuring out now.  Perhaps it&#8217;ll be the subject of a future entry.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology/software">/technology/software</a>] <a href="http://kadin.sdf-us.org/weblog/technology/software/vm370-linux.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Fri, 16 Mar 2012</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="tmobile-sgs2-wifi-quicklook" href="http://kadin.sdf-us.org/weblog/technology/mobile/tmobile-sgs2-wifi-quicklook.html">Samsung Galaxy SII WiFi Calling: A Quick Look</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>After switching from my venerable Nexus One to a new Samsung Galaxy
SII (SGS2) from T-Mobile, I was intrigued to discover that it has a
fairly neat WiFi calling ability.  This feature lets the phone use a
wireless IP access point to place calls, in lieu of the normal
cellular data network.  On one hand it&#8217;s a bit of a ripoff &#8212; even
though you&#8217;re using your own Internet rather than T-Mobile&#8217;s valuable
spectrum, they still use up your minutes at the same rate; however,
it&#8217;s nice if you travel to a place with crummy cell service but decent
wireless Internet.</p>

<p>When the feature is enabled, the phone will switch preferentially to
WiFi for all calls, once it pairs to an access point.  (It can be
disabled if you&#8217;d prefer it to not do this.)  There are still some
<em>very</em> rough edges: the biggest issue is that there&#8217;s no handoff, so
if you place a call over WiFi and then walk out of range of the AP,
the call drops.  Whoops.</p>

<p>I was curious how the calls were actually handled on the wire, and in
particular how secure things were.  To this end, I decided to run a
quick Wireshark analysis on the phone, while it was connected to my
home WiFi AP.</p>

<p>The setup for this is pretty trivial, and out of scope of this entry;
basically you just need to find a way to get the packets going to and
coming from the phone to be copied to a machine where you can run
Wireshark or tcpdump.  You can do this with an Ethernet hub (the
old-school method), via the router&#8217;s configuration, or even via ARP
spoofing.</p>

<p>With Wireshark running and looking at the phone&#8217;s traffic, I performed
a few routine tasks to see what leaked.  The tl;dr version of all of
this?  <strong>In general, Android apps were very good about using TLS.</strong>
There wasn&#8217;t a ton of leakage to a would-be interceptor.</p>

<p>Just for background: Gmail and Twitter both kept almost everything (except for a few
generic logo images in Twitter&#8217;s case) wrapped in TLS.  </p>

<p>Facebook kept
pretty much everything encrypted, <em>except for other users&#8217; profile
images,</em> which it sent in the clear.  This isn&#8217;t a huge issue, but it
does represent minor leakage; the reason for this seems to be that
Facebook keeps the images cached on a CDN, and the CDN servers don&#8217;t
do SSL, apparently.  I&#8217;m not sure what sort of nastiness or attacks
this opens up, if any (perhaps social engineering stuff, if a
motivated attacker could recover your friends list), but it&#8217;s worth
noting and keeping in mind.</p>

<p>I next confirmed that text messages (SMSes) aren&#8217;t sent in the clear.
They are not, although I&#8217;m not 100% sure they&#8217;re even sent over the
data connection &#8212; it&#8217;s hard to tell, among the SIP keepalives,
whether a SMS went out via the WiFi connection, or if the phone used
the actual cell-data connection instead.  Sometime when I&#8217;m in a
location without any GSM coverage but with WiFi, I&#8217;ll have to test it
and confirm.</p>

<p>Last, I made a quick call.  This is what I was most interested in,
since encrypted SIP is surprisingly uncommon &#8212; most corporate
telephony systems don&#8217;t support it, at least not that I&#8217;ve seen or
worked with.  It wouldn&#8217;t have surprised me much at all if the SIP
connection itself was all in the clear.  However, that doesn&#8217;t seem to
be the case.  The call begins with a <code>sip-tls</code> handshake, and then there
are lots of UDP packets, all presumably encrypted with a session key
negotiated during the handshake.  At any rate, Wireshark&#8217;s built-in
analysis tools weren&#8217;t able to recover anything, so calls are not
script-kiddie vulnerable.  Still, I&#8217;m curious about what sort of
certificate validation is done on the client side, and how the phone
will react to forged SSL certs or attempts by a MITM to downgrade the
connection.</p>

<p>Certainly lots of room for further experiments, but overall I&#8217;m
relieved to see that the implementation isn&#8217;t obviously insecure or
vulnerable to trivial packet sniffing.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/technology/mobile">/technology/mobile</a>] <a href="http://kadin.sdf-us.org/weblog/technology/mobile/tmobile-sgs2-wifi-quicklook.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Mon, 20 Jun 2011</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="mtgox-hacking-sofar" href="http://kadin.sdf-us.org/weblog/finance/mtgox-hacking-sofar.html">Mt. Gox Breach Summary</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>I&#8217;ve been following the Mt. Gox security breach and subsequent
Bitcoin/USD price collapse for a little while.  This is a rough
summary of events as they seem to have happened, based on available
information at the current time (June 20, early morning UTC).</p>

<p>My assumption is that at least some of this timeline will turn out to
be wrong, which in itself might be interesting in retrospect.</p>

<p><strong>Sometime in early June</strong>:  Unspecified attackers gained access to a
machine, allegedly being used by an auditor, either containing or
with read-only access to, the Mt. Gox database or some portion of
it.  Whether the attackers had access to the entire database or &#8220;just&#8221;
the user table doesn&#8217;t seem known, but the important thing is that
they got a table containing, <a href="https://support.mtgox.com/entries/20208066-huge-bitcoin-sell-off-due-to-a-compromised-account-rollback">according to Mt. Gox</a>:</p>

<ul>
<li>Account number</li>
<li>Account login</li>
<li>Email address</li>
<li>Encrypted password </li>
</ul>

<p>For accounts not accessed in the last two months (viewed by Mt. Gox as
&#8220;inactive&#8221;), the password was stored as an MD5 hash.  For accounts
accessed in the last two months, the password was <a href="http://en.wikipedia.org/wiki/Salt_(cryptography)">salted</a>, then hashed
with MD5.  Nowhere in the database were there plaintext passwords.</p>

<p>Exactly who had access to the database, whether it was an individual
or group, isn&#8217;t known.  It seems that access to the database might
have gone through several stages: presumably from the person or group
who obtained it initially from the compromised machine, and then to
less-sophisticated people or groups.  We can say with some confidence
that it started to be distributed shortly before June 17th, because on
that date somebody <a href="http://forum.insidepro.com/viewtopic.php?p=65092&amp;sid=d23fbc6d37e592c825f5126e201747e7">posted a message to a forum</a> with some hashed
passwords that came from the database.  (N.B., this is hearsay from
the #Bitcoin IRC channel, and thus fairly speculative.  I haven&#8217;t
looked at a copy of the database to confirm it.)</p>

<p><strong>Monday, June 13</strong>:  The actual theft of Bitcoins from compromised
accounts began, according to various sources, on Monday morning.
Approximately 25k BTC were transferred from 478 accounts, <a href="http://www.dailytech.com/Inside+the+MegaHack+of+Bitcoin+the+Full+Story/article21942.htm">according
to DailyTech</a> (although elsewhere in the same article they claim
25,000 accounts).  The destination address was
&#8220;1KPTdMb6p7H3YCwsyFqrEmKGmsHqe1Q3jg&#8221;.</p>

<p>Presumably, the accounts were accessed by brute-forcing the hashed
passwords in the database.  It&#8217;s not clear to me whether the accounts
were all &#8220;inactive&#8221; (and thus had unsalted password hashes, vulnerable
to a pre-computation attack), or if they were active, had salted
hashes, but were just weak and fell to a dictionary attack.  It
probably would have been logical for the attackers to pursue both
routes at once: go after the old, unsalted hashes with Rainbow tables,
while at the same time performing dictionary attacks against the
salted hashes associated with accounts with significant BTC balances.
At any rate, using some combination of both routes, they eventually
found some vulnerable accounts.</p>

<p>The thefts seem to have gone on during the remainder of the week, with
Mt. Gox <a href="http://forum.bitcoin.org/index.php?topic=18858.0;all">seemingly misreading the increase in theft reports as
insecurity on users&#8217; PCs</a>, rather than a security problem on their end.</p>

<p><strong>Sunday, June 19</strong>: The Bitcoin &#8216;Flash Crash&#8217;.</p>

<p>At around 3AM Japan Standard Time, someone &#8212; my guess is not one of
the original attackers &#8212; began a massive sell-off from a single
compromised account.  (One open question is whether this account was a
receiver account for stolen BTC from other hacked accounts, or just
happened to be a &#8216;whale&#8217; that they managed to access.)  This is where
things start to get interesting, because it&#8217;s not immediately obvious
why someone who recently came into possession of a whole lot of
Bitcoins would want to crash the price.</p>

<p>One theory is that it wasn&#8217;t intentional; they were hurrying, perhaps
working against other attackers who had access to the same database,
and wanted to cash out quickly.  But another theory, one that I think
is more plausible, is that the sell-off was calculated to crash the
BTC price, in order to get around Mt. Gox&#8217;s $1,000 USD/day withdrawal
limit.</p>

<p>By dumping a large number of Bitcoins onto the market &#8212; not just once
but twice (the attacker repurchased and sold the lot of coins a second
time, supposedly) &#8212; the market price was driven down.  Basically all
open bids on the order book were filled, down to ridiculously low
prices.  At no point did any sort of &#8216;<a href="http://www.ft.com/cms/s/0/673b7bae-6e6b-11df-ad16-00144feabdc0.html#axzz1PnHQPgbd">safety switch</a>&#8217; kick in at
Mt. Gox to halt trading; it was full-bore Black Monday mode.</p>

<p>And here we start to run into my limit of knowledge.  If we assume
that the crash was engineered in order to get around the Mt. Gox
withdrawal limit, then when the price was very low, the attackers
should have made their move, and transferred whatever they could out
of Mt. Gox, to external Bitcoin accounts.</p>

<p>Mt. Gox seems to be claiming that this did not happen, and the
withdrawal limits successfully kept the total amount of BTC removed
from the exchange to some low number.  If true, this would allow them
to &#8216;reset&#8217; the exchange back to how it was before the flash crash,
with only limited losses &#8212; perhaps low enough that Mt. Gox could make
all users whole before resuming trading.</p>

<p>But if this isn&#8217;t the case, then it may not be possible for Mt. Gox to
shield all of its users from losses.  After all, one of the key
features of Bitcoins is that they can&#8217;t simply be magic-ed into
existence on demand by a central authority when convenient.  If the
Bitcoins have left the building, so to speak, Mt. Gox can&#8217;t just grab
them back or create new ones to replace them.</p>

<p>In the next few hours or days, I expect these issues to become more
clear.  Also, it will be interesting to see whether the BTC/USD rate
stays at the $17 mark that Mt. Gox plans to resume trading at, or
immediately falls to some lower level, in keeping with lowered
investor confidence.</p>

<p>Personally, I wouldn&#8217;t mind one bit if this marked the end of
Bitcoin&#8217;s first speculative bubble; most of my interest in Bitcoin is
as a currency, not as an instrument for speculative investment (and a
not-very-liquid one at that).  The question will be whether Bitcoin&#8217;s
reputation is irretrievably damaged as a result, or if the damage is
forgotten about or limited to Mt. Gox.</p>

<p>Certainly more interesting and higher stakes than the usual EVE Online
drama, though.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/finance">/finance</a>] <a href="http://kadin.sdf-us.org/weblog/finance/mtgox-hacking-sofar.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Wed, 01 Jun 2011</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="bitcoin-reservations" href="http://kadin.sdf-us.org/weblog/finance/bitcoin-reservations.html">Bitcoin: You Too Are Mortal</a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>As is perhaps evident from some of my other posts, I&#8217;m kind of a
sucker for alternative currencies.  A couple of years ago I watched
the trainwreck that was <a href="http://kadin.sdf-us.org/weblog/technology/strange-saga-1mdc.html">the demise of 1MDC</a>, a &#8216;currency&#8217; that
was backed by EGold (which was <a href="http://en.wikipedia.org/wiki/EGold">itself shut down in 2009</a>).
And then there&#8217;s the sad saga of the <a href="http://en.wikipedia.org/wiki/Liberty_Dollar">Liberty Dollar</a>, which
in retrospect probably would have avoided a lot of legal trouble if it
had been called the &#8216;Liberty Peso&#8217; or something a bit less <em>official</em>.</p>

<p>Liberty Dollars and EGold (and its spawn, e.g. 1MDC) were, until
recently, arguably the high-water marks for private currencies in the
U.S., in modern times anyway.  However, both of them suffered crucial
flaws: they were built around centralized institutions which created
single points of failure.  When they eventually aroused the attentions
of the authorities &#8212; as any private currency is likely to do &#8212; they
were pretty quickly taken down.</p>

<p>In the case of someone holding physical Liberty Dollars this wasn&#8217;t
really catastrophic, since they still had the coins.  (Even morons who
bought them at terribly inflated prices might have come out ahead, due
to the run-up in commodities prices in the last few years, if they
held out long enough.)  However, &#8220;holders&#8221; of EGold were right out;
they had to wait until mid-2010 to be able to get their money out, and
then only by identifying themselves.</p>

<p>One would not have been faulted for thinking that the idea of private
currencies, existing in parallel to government-backed ones, was
finished.</p>

<p>But it&#8217;s instructive to consider why EGold was designed the way it
was, with a centralized architecture.  If we give its developers any
benefit of the doubt at all, they must have realized this was a gaping
vulnerability.  But it was a necessity for two reasons:</p>

<ol>
<li><p>They wanted to back their currency with a physical commodity,
namely gold.</p></li>
<li><p>They wanted to be able to make money on it.</p></li>
</ol>

<p>The point I&#8217;m (rather laboriously) making my way around to, is that
neither of these are true for all private currencies, and Bitcoin in
particular seems to avoid them.</p>

<p>Bitcoins aren&#8217;t backed by anything.  Unlike EGold and Liberty Dollars,
both backed (either directly or indirectly) by gold, Bitcoins aren&#8217;t
backed by anything.  They have exactly zero intrinsic value.  While
that makes them rather volatile, it also means there&#8217;s no warehouse
full of metal to be inconveniently seized.</p>

<p>Second, there doesn&#8217;t seem to be much in the way of a profit motive
behind Bitcoin&#8217;s development.  Both Liberty Dollar and EGold seem, on
their face, to be money-making ventures for those behind them.
Liberty Dollars were sold, at a premium above their intrinsic value,
by NORFED; EGold charged management fees, presumably in excess of its
costs to have some gold bars stored in a vault.  PayPal, which is
admittedly not a private currency, makes money via transaction fees.
All of those models require a centralized architecture in order to
generate revenue.</p>

<p>Bitcoin&#8217;s architecture eliminates the potential for a Bitcoin,
Inc. IPO, but in doing so it is significantly more difficult to shut down.</p>

<p>One area where Bitcoin seems to remain vulnerable is in its
convertibility to traditional currencies, especially USD.  Although
it&#8217;s possible in theory to &#8216;bootstrap&#8217; a currency (particularly one
with a fixed number of tokens) that&#8217;s not convertible &#8212; someone would
need to jump in and start pricing goods in it, and in doing so imbue
the currency with real-world value &#8212; but it&#8217;s certainly a lot easier
if you can move value back and forth from other currencies.</p>

<p>Currently there are several public Bitcoin markets, including
<a href="https://mtgox.com/">Mt. Gox</a>, the largest, <a href="https://www.bitcoinexchange.com/">Bitcoin
Exchange</a>, which is a forum for
person-to-person transactions, and
<a href="http://www.bitcoinexchange.cc/transaction.html">BitcoinExchange.cc</a>,
which just strikes me as shady (maybe it&#8217;s the .cc TLD).</p>

<p>Even at Mt. Gox, buying Bitcoins is not a straightforward process.
You can&#8217;t just whip out your Visa and buy $100 worth of Bitcoins at
the going rate; instead, you have to go through one of several
intermediaries who handle the USD side of the transaction, moving
money into a Mt. Gox account, and then you can use the money to buy
Bitcoins.  It&#8217;s not that much worse than setting up an account with a
brokerage (and the fees and minimums are much lower!), but it&#8217;s not
like the Foreign Exchange desk at the airport.</p>

<p>This is where I&#8217;m a bit concerned that the whole Bitcoin concept could
get in trouble.  Right now, the value of Bitcoins &#8212; which are backed
by nothing, other than a mathematical guarantee that only a certain
number can be &#8216;minted&#8217; &#8212; has built into it an assumption about the
ease of converting them into USD and other currencies.  If the ability
to convert Bitcoins to USD or other currencies was suddenly suspended,
I suspect you would see a very sharp drop in the value of Bitcoins.
In doing so, it might erode confidence enough to render it useless or
insignificant as a currency.</p>

<p>Exactly how this plays out will be very interesting in the months and
years ahead.  The U.S. government took significant amounts of time to bring
the axe down on EGold and Liberty Dollars, so the lack of immediate
action shouldn&#8217;t be taken to indicate any change in attitude towards
private currencies.  If and when something does happen, my bet is that
it occurs at the BTC/USD/EUR/etc. exchange points.  We&#8217;ll see.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/finance">/finance</a>] <a href="http://kadin.sdf-us.org/weblog/finance/bitcoin-reservations.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<h3>Mon, 31 Jan 2011</h3>
<div class="entry">
<div class="entry-article">

<div align="left" class="articletitle">
	<a name="victorian-internet" href="http://kadin.sdf-us.org/weblog/other/books/victorian-internet.html">Book Recommendation: <i>The Victorian Internet</i></a>
</div> <!-- End articletitle -->

<div class="articlebody">

<!-- Begin body text -->
<p>I&#8217;ve been hearing about this book  literally for years now, and just got
around to reading it this month: <a href="http://www.amazon.com/Victorian-Internet-Remarkable-line-ebook/dp/B002STNBKM">The Victorian Internet</a>
(non-referral link) by Tom Standage.  I shouldn&#8217;t have waited so long.</p>

<p>Who or where I heard about the book from initially I can&#8217;t remember,
but I was reminded of it by a mention recently on MetaFilter, had the
&#8216;free sample&#8217; sent to my Kindle, and ended up buying it while waiting
in the departure area of IAD last week.</p>

<p>It&#8217;s not a long read, but it&#8217;s an interesting look at the history of
the telegraph, which I thought I had a fairly good understanding of
but in truth knew very little about.  If you want a companion book to
go with it (long flight?), I&#8217;d say that Erik Larson&#8217;s
<a href="http://www.amazon.com/Thunderstruck-Erik-Larson/dp/1400080673">Thunderstruck</a> is a good choice, although it&#8217;s a bit more
historical-fictiony, since it essentially picks up a few years after
the period that Standage examines in <em>The Victorian Internet</em>.
(<em>Thunderstruck</em> deals with the development and impact of radio,
mostly during the early spark-gap era.)</p>

<p>Anyway, Standage writes a nice little book and even if it does tend to
hit the reader over the head a bit hard with the
telegraph-network/Internet comparisons, they&#8217;re mostly apt.</p>

<p>Although Standage doesn&#8217;t come right out and say this, one of the
reasons I suspect that the parallels about workers in the early
telegraph industry and the pre-DotBomb tech industry (keep in mind,
Standage&#8217;s book was written in 1997) work so well was that both
involved skills that were so in-demand that employers were willing to
overlook a multitude of issues in potential employees, and workplaces
developed a colorful culture as a result. </p>

<p>But the real reason to read the book is as food for thought and as a
counterpoint to the frequently &#8220;chronocentric&#8221; (Standage&#8217;s term)
claims about the unique or unparalleled nature of current
technological developments.</p>

<p>About the only negative &#8212; and this is expressed in the Amazon reviews
&#8212; is that the Kindle edition is really pooly done.  It&#8217;s pretty
obviously just some sort of OCR dumped out there for purchase without
even the benefit of a single read-through by a human.  It&#8217;s full of
I&#8217;s standing in for 1&#8217;s, and the drop caps at the beginning of each
chapter seem to be a frequent source of problems.  It&#8217;s certainly
readable, but a bit embarrassing on Amazon&#8217;s part.</p>

<!-- End body text -->

</div> <!-- End articlebody -->

<p align="right">
0 Comments, 0 Trackbacks
</p>

<p align="right">
<i>[<a href="http://kadin.sdf-us.org/weblog/other/books">/other/books</a>] <a href="http://kadin.sdf-us.org/weblog/other/books/victorian-internet.html">permalink</a></i>
</p>

</div> <!-- End entry-article -->

<div class="comments"> <!-- From the 'feedback' comments -->

</div> <!-- End comments -->

</div> <!-- End entry -->
<div id="commentbox">


	
</div> <!-- End the commentbox -->

</div> <!-- End articlecolumn -->
</div> <!-- End contentwrapper -->

<div id="trackbackinfo">

</div> <!-- End trackbackinfo -->

<div id="footer">
Copyright 2009 Kadin2048 except where otherwise noted.<br>
Want <a title="RSS Version of this page"
href="http://kadin.sdf-us.org/weblog/?flav=rss">RSS</a> instead?
</div> <!-- End footer -->

</body> 

</html>

