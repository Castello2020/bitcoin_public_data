http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/
HTTP/1.1 200 OK
Server: nginx/1.4.4
Date: Wed, 23 Jul 2014 03:28:32 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Pingback: http://ottopress.com/xmlrpc.php
Link: <http://otto42.com/1x>; rel=shortlink

<!DOCTYPE html>
<html lang="en-US">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>WordPress Settings API Tutorial &raquo; Otto on WordPress</title>

<link rel="profile" href="http://www.w3.org/1999/xhtml/vocab" />
<link rel="me" type="text/html" href="https://plus.google.com/100201852715113506716" />

<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/style.css" type="text/css" media="screen" />
<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/print.css" type="text/css" media="print" />

<link rel="pingback" href="http://ottopress.com/xmlrpc.php" />

<meta property="og:email" content="otto@ottodestruct.com" />
<meta http-equiv="X-UA-Compatible" content="chrome=1">

<script type="text/javascript">var description = '';</script>
<!-- Jetpack Site Verification Tags -->
<meta name="google-site-verification" content="IvlRFnRHu9RIiAiOS-bo-8vU4ju4V6_b4U3M_-1jlXQ" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Feed" href="http://ottopress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Comments Feed" href="http://ottopress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; WordPress Settings API Tutorial Comments Feed" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/feed/" />
<link rel='stylesheet' id='yarppWidgetCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/widget.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-subscriptions-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/subscriptions/subscriptions.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='tiled-gallery-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.css?ver=2012-09-21' type='text/css' media='all' />
<link rel='stylesheet' id='mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/mediaelementplayer.min.css?ver=2.13.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery-migrate.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottodestruct.com/op/wp-content/plugins/gravatar-box/jquery.md5.js?ver=1.0'></script>
<script type='text/javascript' src='http://ottodestruct.com/op/wp-content/plugins/gravatar-box/gravbox.js?ver=1.0'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://ottopress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://ottopress.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='How to find a backdoor in a hacked WordPress' href='http://ottopress.com/2009/hacked-wordpress-backdoors/' />
<link rel='next' title='Don&#8217;t include wp-load, please.' href='http://ottopress.com/2010/dont-include-wp-load-please/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comments' />
<link rel='shortlink' href='http://otto42.com/1x' />
<meta name="pinterest" content="nopin" /><link rel="microsummary" type="text/plain" href="/2009/wordpress-settings-api-tutorial/comment-page-3/?microsummary=1" /><link rel="shortcut icon" href="http://ottopress.com/wp-content/wp-logo-vs.png" /><link rel="author" href="https://plus.google.com/+SamuelOttoWood" title="Samuel “Otto” Wood on Google+" /> 

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="WordPress Settings API Tutorial" />
<meta property="og:url" content="http://ottopress.com/2009/wordpress-settings-api-tutorial/" />
<meta property="og:description" content="Originally posted here: When writing the Simple Facebook Connect plugin, I investigated how the Settings API worked. It&#039;s relatively new to WordPress (introduced in version 2.7), and many things I ..." />
<meta property="article:published_time" content="2009-11-03T22:25:57+00:00" />
<meta property="article:modified_time" content="2009-11-03T22:25:57+00:00" />
<meta property="article:author" content="http://ottopress.com/author/otto/" />
<meta property="og:site_name" content="Otto on WordPress" />
<meta property="og:image" content="http://wordpress.com/i/blank.jpg" />
<meta name="twitter:site" content="@ottodestruct" />
<meta name="twitter:card" content="summary" />
<style type="text/css" id="syntaxhighlighteranchor"></style>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-27538437-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>

<body class="single single-post postid-39 single-format-standard">
<script type="text/javascript">
if (top.location != self.location) top.location.replace(self.location);
</script>
<div id="page">
<div id="header">
	<div id="headertitle">
		<h1><a href="http://ottopress.com" title="Otto on WordPress: You have to use an Ottopress to get fresh squeezed Otto.">Otto on WordPress</a></h1>
		<p>You have to use an Ottopress to get fresh squeezed Otto.</p>
	</div> 
	<!-- Search box (If you prefer having search form as a sidebar widget, remove this block) -->
	<div class="search">
		<form method="get" id="searchform" action="http://ottopress.com/">
<input type="search" size="20" results="5" name="s" id="s" placeholder="Search..." speech="speech" x-webkit-speech="x-webkit-speech" onwebkitspeechchange="this.form.submit();" />
</form>
	</div> 
	<!-- Search ends here-->
		
</div>
<div id="navbar">
<div id="nav">
<div class="menu"><ul><li ><a href="http://ottopress.com/">Home</a></li><li class="page_item page-item-5 page_item_has_children"><a href="http://ottopress.com/wordpress-plugins/">WordPress Plugins</a><ul class='children'><li class="page_item page-item-205"><a href="http://ottopress.com/wordpress-plugins/atd-for-comments/">After The Deadline For Comments</a></li><li class="page_item page-item-21"><a href="http://ottopress.com/wordpress-plugins/atom-default-feed/">Atom Default Feed</a></li><li class="page_item page-item-965"><a href="http://ottopress.com/wordpress-plugins/dropbox-photo-sideloader/">Dropbox Photo Sideloader</a></li><li class="page_item page-item-15"><a href="http://ottopress.com/wordpress-plugins/gravatar-box/">Gravatar Box</a></li><li class="page_item page-item-32"><a href="http://ottopress.com/wordpress-plugins/php-code-widget/">PHP Code Widget</a></li><li class="page_item page-item-7"><a href="http://ottopress.com/wordpress-plugins/simple-facebook-connect/">Simple Facebook Connect</a></li><li class="page_item page-item-10"><a href="http://ottopress.com/wordpress-plugins/simple-twitter-connect/">Simple Twitter Connect</a></li><li class="page_item page-item-81"><a href="http://ottopress.com/wordpress-plugins/unicornify/">Unicornify</a></li></ul></li><li class="page_item page-item-374"><a href="http://ottopress.com/contact/">Contact Otto</a></li><li><a href="http://ottodestruct.com" title="Nothing to See Here">Nothing to See Here</a></li><li><a href="http://buyottoabeer.com" title="Otto on Beer">Otto on Beer</a></li></ul></div>
	</div>
</div>
<div id="wrapper">
	<div id="content">

			
		<div class="navigation">
			<div class="alignleft">&laquo; <a href="http://ottopress.com/2009/hacked-wordpress-backdoors/" rel="prev">How to find a backdoor in a hacked WordPress</a></div>
			<div class="alignright"><a href="http://ottopress.com/2010/dont-include-wp-load-please/" rel="next">Don&#8217;t include wp-load, please.</a> &raquo;</div>
		</div>

		<div class="post" id="post-39">
			<h2 class="posttitle"><a href="http://ottopress.com/2009/wordpress-settings-api-tutorial/" rel="bookmark" title="Permanent Link to WordPress Settings API Tutorial" itemprop="url"><span itemprop="name">WordPress Settings API Tutorial</span></a></h2>
			<div style="clear:none" class="postmetadata">November 3, 2009, 4:25 pm <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
			<div class="postentry">
				<div itemprop="articleBody"><p>Originally posted here: <a href="http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/">http://ottodestruct.com/blog/2009/wordpress-settings-api-tutorial/</a></p>
<p>When writing the <a href="http://ottodestruct.com/blog/wordpress-plugins/simple-facebook-connect/">Simple Facebook Connect</a> plugin, I investigated how the <a href="http://codex.wordpress.org/Settings_API">Settings API</a> worked. It&#8217;s relatively new to WordPress (introduced in version 2.7), and many things I read said that it was much easier to use.</p>
<p>It is much easier to use in that it makes things nice and secure almost automatically for you. No confusion about nonces or anything along those lines. However, it&#8217;s slightly more difficult to use in that there&#8217;s very little good documentation for it. Especially for the most common case: Making your own settings page.</p>
<p>So, here is my little documentation attempt.</p>
<p><span id="more-39"></span></p>
<h3>Making your own settings page</h3>
<p>First, add yourself an options page. Code to do that:</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php // add the admin options page
add_action('admin_menu', 'plugin_admin_add_page');
function plugin_admin_add_page() {
add_options_page('Custom Plugin Page', 'Custom Plugin Menu', 'manage_options', 'plugin', 'plugin_options_page');
}
?&gt;
</pre>
<p>What this does is quite simple, really:</p>
<p>a. It adds a link under the settings menu called &#8220;Custom Plugin Menu&#8221;.<br />
b. When you click it, you go to a page with a title of &#8220;Custom Plugin Page&#8221;.<br />
c. You must have the &#8220;manage_options&#8221; capability to get there though (admins only).<br />
d. The link this will be will in fact be /wp-admin/options-general.php?page=plugin (so &#8220;plugin&#8221; needs to be something only you will use).<br />
e. And the content of the page itself will be generated by the &#8220;plugin_options_page&#8221; function.</p>
<p>Oh wait, we need that function! Let&#8217;s go ahead and create that, shall we?</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php // display the admin options page
function plugin_options_page() {
?&gt;
&lt;div&gt;
&lt;h2&gt;My custom plugin&lt;/h2&gt;
Options relating to the Custom Plugin.
&lt;form action=&quot;options.php&quot; method=&quot;post&quot;&gt;
&lt;?php settings_fields('plugin_options'); ?&gt;
&lt;?php do_settings_sections('plugin'); ?&gt;

&lt;input name=&quot;Submit&quot; type=&quot;submit&quot; value=&quot;&lt;?php esc_attr_e('Save Changes'); ?&gt;&quot; /&gt;
&lt;/form&gt;&lt;/div&gt;

&lt;?php
}?&gt;
</pre>
<p>Hang on a minute, where&#8217;s all the options? Well, here&#8217;s where the Settings API kicks in a bit. Up to now, this has been more or less the same as previous tutorials. Adding the options pages is really quite easy. But now, we&#8217;re going to use two new functions.</p>
<p>First, we call settings_fields(&#8216;plugin_options&#8217;). This outputs the hidden bits that we need to make our options page both do what we want and to make it secure with a nonce. The string &#8220;plugin-options&#8221; can be anything, as long as it&#8217;s unique. There is another call we&#8217;re going to have to make with this same string later.</p>
<p>Next, we call do_settings_sections(&#8216;plugin&#8217;). This is going to output all of our input fields. Text input boxes, radio fields, anything we like. Obviously though, we have to tell it what those fields are and look like somewhere. We do both of these things in the next section.</p>
<h3>Defining the settings</h3>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php // add the admin settings and such
add_action('admin_init', 'plugin_admin_init');
function plugin_admin_init(){
register_setting( 'plugin_options', 'plugin_options', 'plugin_options_validate' );
add_settings_section('plugin_main', 'Main Settings', 'plugin_section_text', 'plugin');
add_settings_field('plugin_text_string', 'Plugin Text Input', 'plugin_setting_string', 'plugin', 'plugin_main');
}?&gt;
</pre>
<p>Here we&#8217;ve done three things. Let&#8217;s break that down, shall we?</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php register_setting( 'plugin_options', 'plugin_options', 'plugin_options_validate' );?&gt;
</pre>
<p>First, we register the settings. In my case, I&#8217;m going to store all my settings in one options field, as an array. This is usually the recommended way. The first argument is a group, which needs to be the same as what you used in the settings_fields function call. The second argument is the name of the options. If we were doing more than one, we&#8217;d have to call this over and over for each separate setting. The final arguement is a function name that will validate your options. Basically perform checking on them, to make sure they make sense.</p>
<p>Ignoring the validation function for a moment, lets move on to the setting section. This one is actually quite simple.</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php add_settings_section('plugin_main', 'Main Settings', 'plugin_section_text', 'plugin'); ?&gt;
</pre>
<p>This creates a &#8220;section&#8221; of settings.<br />
The first argument is simply a unique id for the section.<br />
The second argument is the title or name of the section (to be output on the page).<br />
The third is a function callback to display the guts of the section itself.<br />
The fourth is a page name. This needs to match the text we gave to the do_settings_sections function call.</p>
<p>That function callback in the third argument should look a bit like this:</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php function plugin_section_text() {
echo '&lt;p&gt;Main description of this section here.&lt;/p&gt;';
} ?&gt;
</pre>
<p>Simple, really. You can put any HTML you like here.</p>
<p>Now that we&#8217;ve talked about the section itself, we need to talk about the fields in that section.</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php add_settings_field('plugin_text_string', 'Plugin Text Input', 'plugin_setting_string', 'plugin', 'plugin_main'); ?&gt;
</pre>
<p>The first argument is simply a unique id for the field.<br />
The second is a title for the field.<br />
The third is a function callback, to display the input box.<br />
The fourth is the page name that this is attached to (same as the do_settings_sections function call).<br />
The fifth is the id of the settings section that this goes into (same as the first argument to add_settings_section).</p>
<p>The only difficult one here is, again, the callback. Let&#8217;s look at that, shall we?</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php function plugin_setting_string() {
$options = get_option('plugin_options');
echo &quot;&lt;input id='plugin_text_string' name='plugin_options[text_string]' size='40' type='text' value='{$options['text_string']}' /&gt;&quot;;
} ?&gt;
</pre>
<p>Simple. It just gets the options then outputs the input HTML for it. Note the &#8220;name&#8221; is set to plugin_options[text_string]. This is not coincidence, the name *must* start with plugin_options in our case. Why? Because that is the second argument we passed to register_settings.</p>
<p>The settings pages use a whitelist system. Only valid options get read. Anything else gets tossed out, for security. Here, we&#8217;re using a php trick. PHP interprets an incoming GET or POST data of name[thing] as being an array called name with &#8216;thing&#8217; as one of the elements in it. So, all our options are going to take the form of plugin_options[some_thing], so that we get that single array back, and the array name itself is whitelisted.</p>
<p>Since this is designed with security in mind, we have one last callback to deal with: The validation callback that we skipped earlier:</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php // validate our options
function plugin_options_validate($input) {
$newinput['text_string'] = trim($input['text_string']);
if(!preg_match('/^[a-z0-9]{32}$/i', $newinput['text_string'])) {
$newinput['text_string'] = '';
}
return $newinput;
}
?&gt;
</pre>
<p>Here I&#8217;m taking a liberty with the code. I&#8217;m going to say that our text_string has to be exactly 32 alphanumerics long. You can actually validate any way you want in here. The point of this function is simply to let you check all the incoming options and make sure they are valid in some way. Invalid options need to be fixed or blanked out. Finally, you return the whole input array again, which will get automatically saved to the database.</p>
<p>Take special note of the fact that I don&#8217;t return the original array. One of the drawbacks of this sort of approach is that somebody could, in theory, send bad options back to the plugin. These would then be in the $input array. So by validating my options and *only* my options, then any extra data they send back which might make it here gets blocked. So the validation function not only makes sure that my options have valid values, but that no other options get through. In short, $input is untrusted data, but the returned $newinput should be trusted data.</p>
<p>Update: What if you have multiple options screens? Or just want to only be able to edit a few of your options? One downside of the validation method I detail above is that your single plugin_options field gets completely replaced by $newinput. If you only want to have it change a few of your options, then there&#8217;s an easy technique to do that:</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php // validate our options
function plugin_options_validate($input) {
$options = get_option('plugin_options');
$options['text_string'] = trim($input['text_string']);
if(!preg_match('/^[a-z0-9]{32}$/i', $options['text_string'])) {
$options['text_string'] = '';
}
return $options;
}
?&gt;
</pre>
<p>Basically I load the existing options, then update only the ones I want to change from the $input values. Then I return the whole thing. The options I don&#8217;t change thus remain the same.</p>
<h3>And we&#8217;re done. Wait, what?</h3>
<p>Yes, the whole point of this exercise is that the options are automatically saved for you. And everything else. You have an options page, you have fields on it, you are validating them&#8230; and that&#8217;s it. The actual *display* of the page is even done for you. Remember the input we made? It&#8217;ll get put into a table with the title on the left side before it, waiting for input.</p>
<p>Another nice thing is that this is easily expandable. For each option to add we:<br />
1. Do a new add_settings_field call.<br />
2. Make the function to display that particular input.<br />
3. Add code to validate it when it comes back to us from the user.</p>
<p>To add a new section, you:<br />
1. Do a new add_settings_section call.<br />
2. Make the function to display any descriptive text about it.<br />
3. Add settings fields to it as above.</p>
<h3>One last thing</h3>
<p>Sometimes we don&#8217;t need a whole page. Sometimes we only have one setting, and it would work well on some existing page. Maybe on the general page, or the discussion page. Well, we can add settings to those too!</p>
<p>If you look through the core code, you&#8217;ll find references like do_settings_sections(&#8216;general&#8217;) or do_settings_sections(&#8216;writing&#8217;), and so on. These you can add on to like any others, getting your settings on the main WordPress settings pages instead of having to make your own.</p>
<p>Just do this:<br />
1. Make an add_settings_section call. The last argument should be &#8220;general&#8221;, or wherever you want to add your new section.<br />
2. Add fields to your new section, using add_settings_field.<br />
3. You still need to make your own settings whitelisted. To do this, you&#8217;ll need to make a call to register_setting. The first argument should be the same as the page name, like &#8216;general&#8217;, or wherever you&#8217;re putting your settings. This will let that page recognize and allow your settings to come through.</p>
<p>All the callbacks will basically be the same for this method. You&#8217;re just skipping a step of making your own page. Easy.</p>
<p>And there you go. More reading: <a title="Settings API on WordPress Codex" href="http://codex.wordpress.org/Settings_API">http://codex.wordpress.org/Settings_API</a></p>
<div class="sharedaddy sd-block sd-social sd-gplus"><h3 class="sd-title">Google+</h3><div class="sd-content"><a href="https://plus.google.com/+SamuelOttoWood"><img src="https://lh5.googleusercontent.com/-sTIAD3oDYbs/AAAAAAAAAAI/AAAAAAAAGkQ/ZwW3H57HC8I/photo.jpg?sz=40" alt="Samuel “Otto” Wood" width="20" height="20" align="absmiddle" /> </a><a rel="author" href="https://plus.google.com/+SamuelOttoWood" class="gplus-profile">Samuel “Otto” Wood</a><span class="g-follow-wrapper"><span class="g-follow" data-href="https://plus.google.com/+SamuelOttoWood" data-rel="author" data-height="15"></span></span></div></div><div class='yarpp-related'>
<p class="yarpp">Related posts:</p><ol class="yarpp">
<li><a href="http://ottopress.com/2010/wordpress-3-0-multisite-domain-mapping-tutorial/" rel="bookmark" title="WordPress 3.0: Multisite Domain Mapping Tutorial">WordPress 3.0: Multisite Domain Mapping Tutorial </a></li>
<li><a href="http://ottopress.com/2011/tutorial-using-the-wp_filesystem/" rel="bookmark" title="Tutorial: Using the WP_Filesystem">Tutorial: Using the WP_Filesystem </a></li>
<li><a href="http://ottopress.com/2010/twitters-new-tweet-button-and-the-count-api/" rel="bookmark" title="Twitter&#8217;s New Tweet Button and the Count API">Twitter&#8217;s New Tweet Button and the Count API </a></li>
<li><a href="http://ottopress.com/2011/new-in-wordpress-3-3-more-useful-help-screens/" rel="bookmark" title="New in WordPress 3.3: More Useful Help Screens">New in WordPress 3.3: More Useful Help Screens </a></li>
<li><a href="http://ottopress.com/2010/wordpress-3-0-theme-tip-the-comment-form/" rel="bookmark" title="WordPress 3.0 Theme Tip: The Comment Form">WordPress 3.0 Theme Tip: The Comment Form </a></li>
</ol>
</div>
</div>
							</div>
<div><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/1x' onclick='this.focus(); this.select();' />
</span></div>

			<div class="postmetadata">
				<div class="postmetadata">
					Tags: <a href="http://ottopress.com/tag/api/" rel="tag">api</a>, <a href="http://ottopress.com/tag/codex/" rel="tag">codex</a>, <a href="http://ottopress.com/tag/php/" rel="tag">PHP</a>, <a href="http://ottopress.com/tag/settings/" rel="tag">settings</a>, <a href="http://ottopress.com/tag/tutorial/" rel="tag">tutorial</a><br />					Category: <a href="http://ottopress.com/category/code/" title="View all posts in Code" rel="category tag">Code</a>, <a href="http://ottopress.com/category/wordpress/" title="View all posts in WordPress" rel="category tag">WordPress</a>					&nbsp;|&nbsp;&nbsp;<a href="#respond">Comment</a> (<a href='http://ottopress.com/2009/wordpress-settings-api-tutorial/feed/'>RSS</a>)					&nbsp;|&nbsp;&nbsp;<a href="http://ottopress.com/2009/wordpress-settings-api-tutorial/trackback/ " rel="trackback">Trackback</a>									 </div>
			</div>
    
		</div>
	<div id="comments">
	<h3>167 Comments </h3>
	<div class="navigation" style="clear:both">
		<div class="alignleft"><a href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-2/#comments" >&laquo; Older Comments</a></div>
		<div class="alignright"></div>
	</div>
	<div style="clear:both"></div>
	<ol class="commentlist">
		<li class="pingback even thread-even depth-1" id="comment-12404" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12404" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://wordpressrelated.com/default-value-in-wordpress-plugins-option-page-field/' rel='external nofollow' class='url'>Default value in wordpress plugin&#039;s option page field</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12404">
		<time itemprop="dateCreated" datetime="2014-05-19T01:34:32+00:00">May 19, 2014 at 1:34 am</time></a>	</div>

	<div itemprop="text"><p>[&#8230;] am using Otto&#8217;s tutorial. to make a option page. I want to keep a default value for the input field. how can I do [&#8230;]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12404#respond' onclick='return addComment.moveForm("div-comment-12404", "12404", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-12424" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12424" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/01fa6855cf9b4c8caa6225e5bc440029?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.synagila.com' rel='external nofollow' class='url'>Nicolas Bernier</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12424">
		<time itemprop="dateCreated" datetime="2014-06-07T12:18:29+00:00">June 7, 2014 at 12:18 pm</time></a>	</div>

	<div itemprop="text"><p>Add the default value as second parameter in get_option.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12424#respond' onclick='return addComment.moveForm("div-comment-12424", "12424", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-12428" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12428" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/d07b2f2a0a5ff4936f20d8a909e4516e?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.xymalf.com' rel='external nofollow' class='url'>adrian bonnington</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12428">
		<time itemprop="dateCreated" datetime="2014-06-11T17:01:31+00:00">June 11, 2014 at 5:01 pm</time></a>	</div>

	<div itemprop="text"><p>I am really confused by the above do we need to create just one php file or several etc. If so what do we name them? A download link for the files would have been appreciated.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12428#respond' onclick='return addComment.moveForm("div-comment-12428", "12428", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-12430" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12430" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12430">
		<time itemprop="dateCreated" datetime="2014-06-12T10:35:35+00:00">June 12, 2014 at 10:35 am</time></a>	</div>

	<div itemprop="text"><p>There are no files to be downloaded. Whether you put it in one file or a dozen makes no difference. The tutorial above is there to help you understand the code and how it works, not the file structure. Put your files wherever you like.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12430#respond' onclick='return addComment.moveForm("div-comment-12430", "12430", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3 parent" id="comment-12431" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12431" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/d07b2f2a0a5ff4936f20d8a909e4516e?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.xymalf.com' rel='external nofollow' class='url'>adrian bonnington</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12431">
		<time itemprop="dateCreated" datetime="2014-06-12T11:30:47+00:00">June 12, 2014 at 11:30 am</time></a>	</div>

	<div itemprop="text"><p><em>plugin code removed</em></p>
<p>I created the above file but it just produced fatal errors when loading the plugin.<br />
All I want is to store values for Amazon Affiliate ID and two keys SECRET and ACCESS but then I also want to pass these to an Amazonapi.php program but I will also need one more variable the title I am searching for.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12431#respond' onclick='return addComment.moveForm("div-comment-12431", "12431", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-4" id="comment-12432" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12432" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12432">
		<time itemprop="dateCreated" datetime="2014-06-12T11:34:42+00:00">June 12, 2014 at 11:34 am</time></a>	</div>

	<div itemprop="text"><p>Well, that&#8217;s a real bummer, but posting a bunch of your plugin code in my comments section isn&#8217;t very nice. Try the support forums, or the WordPress Stackexchange if you have problems that need solutions. This is not a support forum.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12432#respond' onclick='return addComment.moveForm("div-comment-12432", "12432", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="comment-12434" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12434" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/9e78582c659380d5075f8dd5836012d9?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Mark</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12434">
		<time itemprop="dateCreated" datetime="2014-06-12T15:14:54+00:00">June 12, 2014 at 3:14 pm</time></a>	</div>

	<div itemprop="text"><p>I know this is a bit dated, but it&#8217;s still linked to on the documentation page.  Could I suggest rephrasing &#8220;simple a unique id&#8221; to clarify that this is an HTML id attribute you&#8217;re referring to?  This helps readers understand the context against which it must be unique.  Thank you for this write up!</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12434#respond' onclick='return addComment.moveForm("div-comment-12434", "12434", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="comment-12461" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12461" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/8bf70cec16628d33055252845afd627b?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://photos.timgolden.com' rel='external nofollow' class='url'>goldeneye</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/#comment-12461">
		<time itemprop="dateCreated" datetime="2014-07-09T13:41:46+00:00">July 9, 2014 at 1:41 pm</time></a>	</div>

	<div itemprop="text"><p>any way to make this multi site compatible (WPMU)?<br />
what i&#8217;m looking to do is find a way to add some additional fields when creating new sites in the network admin</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2009/wordpress-settings-api-tutorial/comment-page-3/?replytocom=12461#respond' onclick='return addComment.moveForm("div-comment-12461", "12461", "respond", "39")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	</ol>
	<div class="navigation" style="clear:both">
		<div class="alignleft"><a href="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-2/#comments" >&laquo; Older Comments</a></div>
		<div class="alignright"></div>
	</div>
	<div style="clear:both"></div> 								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2009/wordpress-settings-api-tutorial/comment-page-3/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://ottopress.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<div id="gravbox"></div><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input x-autocompletetype="name-full" id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input x-autocompletetype="email" id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p><p class="form-allowed-tags">Need to post PHP code? Wrap it in <code>[php]</code> and <code>[/php]</code> tags.						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='39' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="936b1fd06e" /></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts by email.</label></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="106"/></p>					</form>
							</div><!-- #respond -->
			</div>

	
	</div>

	<div id="sidebar">
		<ul>
			
			<li id="paypal-donate" class="widget widget_wpaypal"><h2 class="widgettitle">Buy Otto a Beer</h2>
<div style="margin-top:5px;margin-bottom:5px;text-align:left;">
		<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
		<p><input type="hidden" name="cmd" value="_xclick" />
		<input type="hidden" name="business" value="otto@ottodestruct.com" />
		<input type="hidden" name="item_name" value="Donation to Otto on WordPress" />
		<input type="hidden" name="item_number" value="0" />
		<input type="hidden" name="notify_url" value="" />
		<input type="hidden" name="no_shipping" value="1" /><input type="hidden" name="return" value="http://ottopress.com" />
		<input type="hidden" name="no_note" value="1" />
		<input type="hidden" name="tax" value="0" />
		<input type="hidden" name="bn" value="PP-DonationsBF" />
		<input type="hidden" name="on0" value="Website" />
		Currency: <br />
		<select id="currency_code" name="currency_code">
		<option value="USD">U.S. Dollars</option>
		<option value="AUD">Australian Dollars</option>
		<option value="CAD">Canadian Dollars</option>
		<option value="EUR">Euros</option>
		<option value="GBP">Pounds Sterling</option>
		<option value="JPY">Yen</option></select></p>
		<p>Amount: <br /><input type="text" name="amount" size="16" title="The amount you wish to donate" value="5.00" /></p>
		<p>Website(Optional): <br /><input type="text" size="16" title="Your website (will be displayed)" name="os0" value="" /></p><p><input class="ppimg" type="image" src="https://www.paypal.com/en_US/i/btn/x-click-but21.gif" name="submit" style="border:0;" alt="Make payments with PayPal - fast, free and secure" /></p></form></div></li>
<li id="text-7" class="widget widget_text">			<div class="textwidget">Hey, I also take Bitcoins! Send them to: </br>
<a href="bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg">
<img src="https://chart.googleapis.com/chart?chs=150x150&cht=qr&chl=bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg" /><br />
1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg</a></div>
		</li>
<li id="text-5" class="widget widget_text"><h2 class="widgettitle">Subscribe!</h2>
			<div class="textwidget"><!-- <a href="https://plus.google.com/111166992820603637934?prsrc=3" style="cursor:pointer;display:inline-block;text-decoration:none;color:#333;font:13px/16px arial,sans-serif;"><span style="display:inline-block;font-weight:bold;vertical-align:top;margin-right:5px;margin-top:8px;">Otto on WordPress</span><span style="display:inline-block;vertical-align:top;margin-right:15px;margin-top:8px;">on</span><img src="https://ssl.gstatic.com/images/icons/gplus-32.png" alt="" style="border:0;width:32px;height:32px;"/></a>
-->
<div class="g-plus" data-href="https://plus.google.com/111166992820603637934?rel=publisher" data-width="250" data-height="131" data-theme="light"></div>
</div>
		</li>
<li id="blog_subscription-3" class="widget jetpack_subscription_widget"><h2 class="widgettitle"><label for="subscribe-field"></label></h2>

		<form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-3">
			<p id="subscribe-text">Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p><p>Join 331 other subscribers</p>

			<p id="subscribe-email"><input type="text" name="email" value="Email Address" id="subscribe-field" onclick="if ( this.value == 'Email Address' ) { this.value = ''; }" onblur="if ( this.value == '' ) { this.value = 'Email Address'; }" /></p>

			<p id="subscribe-submit">
				<input type="hidden" name="action" value="subscribe" />
				<input type="hidden" name="source" value="http://ottopress.com/2009/wordpress-settings-api-tutorial/comment-page-3/" />
				<input type="hidden" name="sub-type" value="widget" />
				<input type="hidden" name="redirect_fragment" value="blog_subscription-3" />
								<input type="submit" value="Subscribe" name="jetpack_subscriptions_widget" />
			</p>
		</form>

		
</li>
<li id="text-3" class="widget widget_text"><h2 class="widgettitle">Email Me</h2>
			<div class="textwidget"><ul><li><span class="vcard microid-mailto+http:sha1:23e9670868f6d2b16fe1f6b3db80c8f0423a082a">
<span style="display:none;">
<span class="adr">
 <span class="locality">Memphis</span>,
 <span class="region">TN</span>
 <span class="postal-code">38103</span>
 <span class="country-name">U.S.A.</span>
</span>
<a class="url fn" href="http://ottodestruct.com">Otto</a>
<span class="uid">240cf86e-5cad-11dc-8314-0800200c9a66</span>
</span>
<a class="email" href="mailto:otto@ottodestruct.com">otto@ottodestruct.com</a></span></li></ul>
<a rel="author" href="https://plus.google.com/100201852715113506716?rel=author">
  <img src="https://ssl.gstatic.com/images/icons/gplus-16.png" width="16" height="16">
</a>
</a>
<!-- 

This rant is hidden in HTML comments. If I pointed you to it, then you probably emailed me about the fact that my email address is in plaintext directly above this comment. If you happened to run across it because you just like looking at HTML comments, well, easter egg! :)

YES, that is a bare mailto: href above. 
YES, that is my real email address. 
And YES, it's intentional.

Obfuscating your email address on the web is stupid. 

Firstly, hiding your email address doesn't prevent spam. Spammers get addresses in bulk from mailing lists and websites and other sources. Sure, some scrapers exist, but they are by far the minority of the sources for email lists.

Secondly, hiding your email address ruins the whole point of email. The purpose of publishing my email address is so that anybody, and I do mean *anybody*, can email me. Before the days of cell phones, your phone number and physical address used to be published in a big book that everybody received, for free, on a semi-annual basis. It had distinctive yellow pages in it. Your contact information is not, and never was supposed to be, private information. Treating it as such is stupid.

Thirdly, I have great spam protection. For one, I use GMail, which has frankly incredible filtering because of the volume of mail they deal with. For another, I use various sets of filters to categorize incoming mail into various categories of things. Hell, I can even run statistics on it, if I want. This is a much better solution than continually giving out fake email addresses, or using +stuff to figure out who sent what where... I'd prefer to simply let my filters deal with it instead. 

Finally, if you're one of those systems that scours the web and/or social networks for visible email addresses and then automatically emails that person to let them know that their address is visible, then by all means please just fuck off and die. You're part of the problem. On the other hand, if you're just a regular guy with good intentions, then this doesn't apply to you. :)

Just my 2 cents.

--></div>
		</li>
<li id="categories-2" class="widget widget_categories"><h2 class="widgettitle">Categories</h2>
		<ul>
	<li class="cat-item cat-item-573"><a href="http://ottopress.com/category/code/" title="View all posts filed under Code">Code</a>
</li>
	<li class="cat-item cat-item-574"><a href="http://ottopress.com/category/other/" title="View all posts filed under Other">Other</a>
</li>
	<li class="cat-item cat-item-575"><a href="http://ottopress.com/category/rants/" title="View all posts filed under Rants">Rants</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://ottopress.com/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
	<li class="cat-item cat-item-576"><a href="http://ottopress.com/category/wordpress/" title="View all posts filed under WordPress">WordPress</a>
</li>
		</ul>
</li>
<li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>
		<ul>
	<li><a href='http://ottopress.com/2014/02/'>February 2014</a></li>
	<li><a href='http://ottopress.com/2013/11/'>November 2013</a></li>
	<li><a href='http://ottopress.com/2013/10/'>October 2013</a></li>
	<li><a href='http://ottopress.com/2013/06/'>June 2013</a></li>
	<li><a href='http://ottopress.com/2013/03/'>March 2013</a></li>
	<li><a href='http://ottopress.com/2012/11/'>November 2012</a></li>
	<li><a href='http://ottopress.com/2012/09/'>September 2012</a></li>
	<li><a href='http://ottopress.com/2012/08/'>August 2012</a></li>
	<li><a href='http://ottopress.com/2012/07/'>July 2012</a></li>
	<li><a href='http://ottopress.com/2012/05/'>May 2012</a></li>
	<li><a href='http://ottopress.com/2012/02/'>February 2012</a></li>
	<li><a href='http://ottopress.com/2012/01/'>January 2012</a></li>
	<li><a href='http://ottopress.com/2011/12/'>December 2011</a></li>
	<li><a href='http://ottopress.com/2011/11/'>November 2011</a></li>
	<li><a href='http://ottopress.com/2011/10/'>October 2011</a></li>
	<li><a href='http://ottopress.com/2011/09/'>September 2011</a></li>
	<li><a href='http://ottopress.com/2011/08/'>August 2011</a></li>
	<li><a href='http://ottopress.com/2011/07/'>July 2011</a></li>
	<li><a href='http://ottopress.com/2011/06/'>June 2011</a></li>
	<li><a href='http://ottopress.com/2011/05/'>May 2011</a></li>
	<li><a href='http://ottopress.com/2011/04/'>April 2011</a></li>
	<li><a href='http://ottopress.com/2011/03/'>March 2011</a></li>
	<li><a href='http://ottopress.com/2011/02/'>February 2011</a></li>
	<li><a href='http://ottopress.com/2011/01/'>January 2011</a></li>
	<li><a href='http://ottopress.com/2010/12/'>December 2010</a></li>
	<li><a href='http://ottopress.com/2010/11/'>November 2010</a></li>
	<li><a href='http://ottopress.com/2010/10/'>October 2010</a></li>
	<li><a href='http://ottopress.com/2010/09/'>September 2010</a></li>
	<li><a href='http://ottopress.com/2010/08/'>August 2010</a></li>
	<li><a href='http://ottopress.com/2010/06/'>June 2010</a></li>
	<li><a href='http://ottopress.com/2010/05/'>May 2010</a></li>
	<li><a href='http://ottopress.com/2010/04/'>April 2010</a></li>
	<li><a href='http://ottopress.com/2010/03/'>March 2010</a></li>
	<li><a href='http://ottopress.com/2010/02/'>February 2010</a></li>
	<li><a href='http://ottopress.com/2009/11/'>November 2009</a></li>
	<li><a href='http://ottopress.com/2009/09/'>September 2009</a></li>
	<li><a href='http://ottopress.com/2008/09/'>September 2008</a></li>
		</ul>
</li>
		<li id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widgettitle">Recent Posts</h2>
		<ul>
					<li>
				<a href="http://ottopress.com/2014/better-know-a-vulnerability-cross-site-request-forgery-csrf/">Better Know a Vulnerability: Cross Site Request Forgery (CSRF)</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/better-know-a-vulnerability-sql-injection/">Better Know a Vulnerability: SQL Injection</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/language-packs-101-prepwork/">Language Packs 101 &#8211; Prepwork</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/slides-a-presentation-theme/">Slides: A Presentation Theme</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/im-not-a-fan-of-orange/">I&#8217;m not a fan of orange&#8230;</a>
						</li>
				</ul>
		</li>
<li id="text-6" class="widget widget_text"><h2 class="widgettitle">WP Core Contributions</h2>
			<div class="textwidget"><p>
<a href='http://core.trac.wordpress.org/changeset/28072'>[28072]</a> - <a href='http://core.trac.wordpress.org/ticket/19393'>#19393</a><br />
<a href='http://core.trac.wordpress.org/changeset/27522'>[27522]</a> - <a href='http://core.trac.wordpress.org/ticket/19889'>#19889</a><br />
<a href='http://core.trac.wordpress.org/changeset/27399'>[27399]</a> - <a href='http://core.trac.wordpress.org/ticket/25665'>#25665</a><br />
<a href='http://core.trac.wordpress.org/changeset/26978'>[26978]</a> - <a href='http://core.trac.wordpress.org/ticket/23149'>#23149</a><br />
<a href='http://core.trac.wordpress.org/changeset/26711'>[26711]</a> - <a href='http://core.trac.wordpress.org/ticket/21442'>#21442</a><br />
<a href='http://core.trac.wordpress.org/changeset/26072'>[26072]</a> - <a href='http://core.trac.wordpress.org/ticket/25858'>#25858</a><br />
<a href='http://core.trac.wordpress.org/changeset/22152'>[22152]</a> - <a href='http://core.trac.wordpress.org/ticket/21914'>#21914</a><br />
<a href='http://core.trac.wordpress.org/changeset/22026'>[22026]</a> - <a href='http://core.trac.wordpress.org/ticket/22002'>#22002</a><br />
<a href='http://core.trac.wordpress.org/changeset/21839'>[21839]</a> - <a href='http://core.trac.wordpress.org/ticket/16996'>#16996</a><br />
<a href='http://core.trac.wordpress.org/changeset/21802'>[21802]</a> - <a href='http://core.trac.wordpress.org/ticket/18674'>#18674</a><br />
<a href='http://core.trac.wordpress.org/changeset/21776'>[21776]</a> - <a href='http://core.trac.wordpress.org/ticket/13729'>#13729</a><br />
<a href='http://core.trac.wordpress.org/changeset/21609'>[21609]</a> - <a href='http://core.trac.wordpress.org/ticket/19324'>#19324</a><br />
<a href='http://core.trac.wordpress.org/changeset/20916'>[20916]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20784'>[20784]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20783'>[20783]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20267'>[20267]</a> - <a href='http://core.trac.wordpress.org/ticket/13774'>#13774</a><br />
<a href='http://core.trac.wordpress.org/changeset/19721'>[19721]</a> - <a href='http://core.trac.wordpress.org/ticket/19626'>#19626</a><br />
<a href='http://core.trac.wordpress.org/changeset/19003'>[19003]</a> - <a href="http://core.trac.wordpress.org/ticket/17406">#17406</a><br />
<a href='http://core.trac.wordpress.org/changeset/18741'>[18741]</a> - <a href="http://core.trac.wordpress.org/ticket/15473">#15473</a><br />
<a href='http://core.trac.wordpress.org/changeset/18602'>[18602]</a> - <a href="http://core.trac.wordpress.org/ticket/18230">#18230</a><br />
<a href='http://core.trac.wordpress.org/changeset/18541'>[18541]</a> - <a href="http://core.trac.wordpress.org/ticket/16687">#16687</a><br />
<a href='http://core.trac.wordpress.org/changeset/18205'>[18205]</a> - <a href="http://core.trac.wordpress.org/ticket/17148">#17148</a><br />
<a href='http://core.trac.wordpress.org/changeset/17254'>[17254]</a> - <a href="http://core.trac.wordpress.org/ticket/16192">#16192</a><br />
<a href='http://core.trac.wordpress.org/changeset/16555'>[16555]</a> - <a href="http://core.trac.wordpress.org/ticket/12891">#12891</a><br />
<a href='http://core.trac.wordpress.org/changeset/16284'>[16284]</a> - <a href="http://core.trac.wordpress.org/ticket/13324">#13324</a><br />
<a href='http://core.trac.wordpress.org/changeset/13420'>[13420]</a> - <a href="http://core.trac.wordpress.org/ticket/12291">#12291</a><br />
<a href='http://core.trac.wordpress.org/changeset/12581'>[12581]</a> - <a href="http://core.trac.wordpress.org/ticket/7225">#7225</a><br />
<a href='http://core.trac.wordpress.org/changeset/11738'>[11738]</a> - <a href="http://core.trac.wordpress.org/ticket/10145">#10145</a><br />
<a href='http://core.trac.wordpress.org/changeset/11329'>[11329]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10962'>[10962]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10757'>[10757]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10753'>[10753]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10252'>[10252]</a> - <a href="http://core.trac.wordpress.org/ticket/6791">#6791</a><br />
<a href='http://core.trac.wordpress.org/changeset/9276'>[9276]</a> - <a href="http://core.trac.wordpress.org/ticket/7124">#7124</a><br />
<a href='http://core.trac.wordpress.org/changeset/9209'>[9209]</a> - <a href="http://core.trac.wordpress.org/ticket/7901">#7901</a><br />
<a href='http://core.trac.wordpress.org/changeset/9207'>[9207]</a> - <a href="http://core.trac.wordpress.org/ticket/7635">#7635</a><br />
<a href='http://core.trac.wordpress.org/changeset/9139'>[9139]</a> - <a href="http://core.trac.wordpress.org/ticket/7847">#7847</a><br />
<a href='http://core.trac.wordpress.org/changeset/9089'>[9089]</a> - <a href="http://core.trac.wordpress.org/ticket/7772">#7772</a><br />
<a href='http://core.trac.wordpress.org/changeset/8968'>[8968]</a> - <a href="http://core.trac.wordpress.org/ticket/7761">#7761</a><br />
<a href='http://core.trac.wordpress.org/changeset/8285'>[8285]</a> - <a href="http://core.trac.wordpress.org/ticket/6879">#6879</a><br />
<a href='http://core.trac.wordpress.org/changeset/8208'>[8208]</a> - <a href="http://core.trac.wordpress.org/ticket/4448">#4448</a><br />
<a href='http://core.trac.wordpress.org/changeset/8132'>[8132]</a> - <a href="http://core.trac.wordpress.org/ticket/4954">#4954</a><br />
<a href='http://core.trac.wordpress.org/changeset/8131'>[8131]</a> - <a href="http://core.trac.wordpress.org/ticket/6590">#6590</a><br />
<a href='http://core.trac.wordpress.org/changeset/7869'>[7869]</a> - <a href="http://core.trac.wordpress.org/ticket/6513">#6513</a><br />
<a href='http://core.trac.wordpress.org/changeset/7647'>[7647]</a> - <a href="http://core.trac.wordpress.org/ticket/6608">#6608</a><br />
<a href='http://core.trac.wordpress.org/changeset/7461'>[7461]</a> - <a href="http://core.trac.wordpress.org/ticket/6339">#6339</a><br />
<a href='http://core.trac.wordpress.org/changeset/6873'>[6873]</a> - <a href="http://core.trac.wordpress.org/ticket/4986">#4986</a><br />
<a href='http://core.trac.wordpress.org/changeset/6760'>[6760]</a> - <a href="http://core.trac.wordpress.org/ticket/4617">#4617</a><br />
<a href='http://core.trac.wordpress.org/changeset/6616'>[6616]</a> - <a href="http://core.trac.wordpress.org/ticket/5155">#5155</a><br />
<a href='http://core.trac.wordpress.org/changeset/6439'>[6439]</a> - <a href="http://core.trac.wordpress.org/ticket/2805">#2805</a><br />
<a href='http://core.trac.wordpress.org/changeset/6091'>[6091]</a> - <a href="http://core.trac.wordpress.org/ticket/4182">#4182</a><br />
<a href='http://core.trac.wordpress.org/changeset/6086'>[6086]</a> - <a href="http://core.trac.wordpress.org/ticket/4946">#4946</a><br />
<a href='http://core.trac.wordpress.org/changeset/5986'>[5986]</a> - <a href="http://core.trac.wordpress.org/ticket/4873">#4873</a><br />
<a href='http://core.trac.wordpress.org/changeset/5982'>[5982]</a> - <a href="http://core.trac.wordpress.org/ticket/4800">#4800</a><br />
<a href='http://core.trac.wordpress.org/changeset/5958'>[5958]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5920'>[5920]</a> - <a href="http://core.trac.wordpress.org/ticket/4703">#4703</a><br />
<a href='http://core.trac.wordpress.org/changeset/5910'>[5910]</a> - <a href="http://core.trac.wordpress.org/ticket/4654">#4654</a><br />
<a href='http://core.trac.wordpress.org/changeset/5881'>[5881]</a> - <a href="http://core.trac.wordpress.org/ticket/4704">#4704</a><br />
<a href='http://core.trac.wordpress.org/changeset/5857'>[5857]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5848'>[5848]</a> - <a href="http://core.trac.wordpress.org/ticket/4499">#4499</a><br />
<a href='http://core.trac.wordpress.org/changeset/5845'>[5845]</a> - <a href="http://core.trac.wordpress.org/ticket/4547">#4547</a><br />
<a href='http://core.trac.wordpress.org/changeset/5317'>[5317]</a> - <a href="http://core.trac.wordpress.org/ticket/4169">#4169</a><br />
<a href='http://core.trac.wordpress.org/changeset/5154'>[5154]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5151'>[5151]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5104'>[5104]</a> - <a href="http://core.trac.wordpress.org/ticket/3790">#3790</a><br />
<a href='http://core.trac.wordpress.org/changeset/4964'>[4964]</a> - <a href="http://core.trac.wordpress.org/ticket/3898">#3898</a><br />
</p></div>
		</li>
		</ul>
	</div>

</div>
<div id="footer">
<div style="float:left;"><a href="http://internetdefenseleague.org"><img src="http://internetdefenseleague.org/images/badges/final/footer_badge.png" alt="Member of The Internet Defense League" /></a></div>
<a href="http://ottopress.com/feed/">Entries (RSS)</a> and <a href="http://ottopress.com/comments/feed/">Comments (RSS)</a>.<br />
<span about="http://ottodestruct.com/" xmlns:cc="http://creativecommons.org/ns#">
This page, by <a property="cc:attributionName" rel="cc:attributionURL" href="http://ottodestruct.com/">Otto</a>, is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-ShareAlike License</a>.</span><br />
Powered by <a href="http://wordpress.org/" title="Powered by WordPress.">WordPress</a>.<br />
<img alt='css.php' src="http://ottopress.com/wp-content/plugins/cookies-for-comments/css.php?k=c6a73cb029f035cdaa9e9e8336d25169&amp;o=i&amp;t=708456661" width='1' height='1' />	<div style="display:none">
	<div class="grofile-hash-map-01fa6855cf9b4c8caa6225e5bc440029">
	</div>
	<div class="grofile-hash-map-d07b2f2a0a5ff4936f20d8a909e4516e">
	</div>
	<div class="grofile-hash-map-0994d5e2e158a24ba8017c2525d78263">
	</div>
	<div class="grofile-hash-map-c9acf1010b63b8676d9bcbbac6e8160c">
	</div>
	<div class="grofile-hash-map-8bf70cec16628d33055252845afd627b">
	</div>
	</div>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<link rel='stylesheet' id='gplus-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/gplus-authorship/style.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='yarppRelatedCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/related.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/comment-reply.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/photon/photon.js?ver=20130122'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var mejsL10n = {"language":"en-US","strings":{"Close":"Close","Fullscreen":"Fullscreen","Download File":"Download File","Download Video":"Download Video","Play\/Pause":"Play\/Pause","Mute Toggle":"Mute Toggle","None":"None","Turn off Fullscreen":"Turn off Fullscreen","Go Fullscreen":"Go Fullscreen","Unmute":"Unmute","Mute":"Mute","Captions\/Subtitles":"Captions\/Subtitles"}};
var _wpmejsSettings = {"pluginPath":"\/wp-includes\/js\/mediaelement\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/mediaelement-and-player.min.js?ver=2.14.2'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=3.9.1'></script>
<script type='text/javascript' src='//apis.google.com/js/plusone.js?ver=3.9.1'></script>

	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:3.0.2',blog:'12342457',post:'39',tz:'-5'});
	var load_cmc = function(){linktracker_init(12342457,39,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script></div></div>

<script type="text/javascript">
    window._idl = {};
    _idl.variant = "modal";
    (function() {
        var idl = document.createElement('script');
        idl.type = 'text/javascript';
        idl.async = true;
        idl.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'members.internetdefenseleague.org/include/?url=' + (_idl.url || '') + '&campaign=' + (_idl.campaign || '') + '&variant=' + (_idl.variant || 'banner');
        document.getElementsByTagName('body')[0].appendChild(idl);
    })();
</script>

</body>
</html>
	
