http://ottopress.com/2010/dont-include-wp-load-please/
HTTP/1.1 200 OK
Server: nginx/1.4.4
Date: Tue, 22 Jul 2014 19:07:35 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Pingback: http://ottopress.com/xmlrpc.php
Link: <http://otto42.com/1u>; rel=shortlink

<!DOCTYPE html>
<html lang="en-US">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>Don&#8217;t include wp-load, please. &raquo; Otto on WordPress</title>

<link rel="profile" href="http://www.w3.org/1999/xhtml/vocab" />
<link rel="me" type="text/html" href="https://plus.google.com/100201852715113506716" />

<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/style.css" type="text/css" media="screen" />
<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/print.css" type="text/css" media="print" />

<link rel="pingback" href="http://ottopress.com/xmlrpc.php" />

<meta property="og:email" content="otto@ottodestruct.com" />
<meta http-equiv="X-UA-Compatible" content="chrome=1">

<script type="text/javascript">var description = '';</script>
<!-- Jetpack Site Verification Tags -->
<meta name="google-site-verification" content="IvlRFnRHu9RIiAiOS-bo-8vU4ju4V6_b4U3M_-1jlXQ" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Feed" href="http://ottopress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Comments Feed" href="http://ottopress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Don&#8217;t include wp-load, please. Comments Feed" href="http://ottopress.com/2010/dont-include-wp-load-please/feed/" />
<link rel='stylesheet' id='yarppWidgetCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/widget.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-subscriptions-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/subscriptions/subscriptions.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='tiled-gallery-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.css?ver=2012-09-21' type='text/css' media='all' />
<link rel='stylesheet' id='mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/mediaelementplayer.min.css?ver=2.13.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery-migrate.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottodestruct.com/op/wp-content/plugins/gravatar-box/jquery.md5.js?ver=1.0'></script>
<script type='text/javascript' src='http://ottodestruct.com/op/wp-content/plugins/gravatar-box/gravbox.js?ver=1.0'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://ottopress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://ottopress.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='WordPress Settings API Tutorial' href='http://ottopress.com/2009/wordpress-settings-api-tutorial/' />
<link rel='next' title='First Post' href='http://ottopress.com/2010/first-post/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://ottopress.com/2010/dont-include-wp-load-please/' />
<link rel='shortlink' href='http://otto42.com/1u' />
<meta name="pinterest" content="nopin" /><link rel="microsummary" type="text/plain" href="/2010/dont-include-wp-load-please/?microsummary=1" /><link rel="shortcut icon" href="http://ottopress.com/wp-content/wp-logo-vs.png" /><link rel="author" href="https://plus.google.com/+SamuelOttoWood" title="Samuel “Otto” Wood on Google+" /> 

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Don&#039;t include wp-load, please." />
<meta property="og:url" content="http://ottopress.com/2010/dont-include-wp-load-please/" />
<meta property="og:description" content="Originally published here: Note: There is a followup post to this one, which details an even better way than the two given below: Time for Otto&#039;s general griping: WordPress plugin programming editi..." />
<meta property="article:published_time" content="2010-02-09T22:22:16+00:00" />
<meta property="article:modified_time" content="2010-09-07T20:57:32+00:00" />
<meta property="article:author" content="http://ottopress.com/author/otto/" />
<meta property="og:site_name" content="Otto on WordPress" />
<meta property="og:image" content="http://wordpress.com/i/blank.jpg" />
<meta name="twitter:site" content="@ottodestruct" />
<meta name="twitter:card" content="summary" />
<style type="text/css" id="syntaxhighlighteranchor"></style>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-27538437-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>

<body class="single single-post postid-35 single-format-standard">
<script type="text/javascript">
if (top.location != self.location) top.location.replace(self.location);
</script>
<div id="page">
<div id="header">
	<div id="headertitle">
		<h1><a href="http://ottopress.com" title="Otto on WordPress: You have to use an Ottopress to get fresh squeezed Otto.">Otto on WordPress</a></h1>
		<p>You have to use an Ottopress to get fresh squeezed Otto.</p>
	</div> 
	<!-- Search box (If you prefer having search form as a sidebar widget, remove this block) -->
	<div class="search">
		<form method="get" id="searchform" action="http://ottopress.com/">
<input type="search" size="20" results="5" name="s" id="s" placeholder="Search..." speech="speech" x-webkit-speech="x-webkit-speech" onwebkitspeechchange="this.form.submit();" />
</form>
	</div> 
	<!-- Search ends here-->
		
</div>
<div id="navbar">
<div id="nav">
<div class="menu"><ul><li ><a href="http://ottopress.com/">Home</a></li><li class="page_item page-item-5 page_item_has_children"><a href="http://ottopress.com/wordpress-plugins/">WordPress Plugins</a><ul class='children'><li class="page_item page-item-205"><a href="http://ottopress.com/wordpress-plugins/atd-for-comments/">After The Deadline For Comments</a></li><li class="page_item page-item-21"><a href="http://ottopress.com/wordpress-plugins/atom-default-feed/">Atom Default Feed</a></li><li class="page_item page-item-965"><a href="http://ottopress.com/wordpress-plugins/dropbox-photo-sideloader/">Dropbox Photo Sideloader</a></li><li class="page_item page-item-15"><a href="http://ottopress.com/wordpress-plugins/gravatar-box/">Gravatar Box</a></li><li class="page_item page-item-32"><a href="http://ottopress.com/wordpress-plugins/php-code-widget/">PHP Code Widget</a></li><li class="page_item page-item-7"><a href="http://ottopress.com/wordpress-plugins/simple-facebook-connect/">Simple Facebook Connect</a></li><li class="page_item page-item-10"><a href="http://ottopress.com/wordpress-plugins/simple-twitter-connect/">Simple Twitter Connect</a></li><li class="page_item page-item-81"><a href="http://ottopress.com/wordpress-plugins/unicornify/">Unicornify</a></li></ul></li><li class="page_item page-item-374"><a href="http://ottopress.com/contact/">Contact Otto</a></li><li><a href="http://ottodestruct.com" title="Nothing to See Here">Nothing to See Here</a></li><li><a href="http://buyottoabeer.com" title="Otto on Beer">Otto on Beer</a></li></ul></div>
	</div>
</div>
<div id="wrapper">
	<div id="content">

			
		<div class="navigation">
			<div class="alignleft">&laquo; <a href="http://ottopress.com/2009/wordpress-settings-api-tutorial/" rel="prev">WordPress Settings API Tutorial</a></div>
			<div class="alignright"><a href="http://ottopress.com/2010/first-post/" rel="next">First Post</a> &raquo;</div>
		</div>

		<div class="post" id="post-35">
			<h2 class="posttitle"><a href="http://ottopress.com/2010/dont-include-wp-load-please/" rel="bookmark" title="Permanent Link to Don&#8217;t include wp-load, please." itemprop="url"><span itemprop="name">Don&#8217;t include wp-load, please.</span></a></h2>
			<div style="clear:none" class="postmetadata">February 9, 2010, 4:22 pm <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
			<div class="postentry">
				<div itemprop="articleBody"><p>Originally published here: <a href="http://ottodestruct.com/blog/2010/dont-include-wp-load-please/">http://ottodestruct.com/blog/2010/dont-include-wp-load-please/</a></p>
<p>Note: There is a followup post to this one, which details an even better way than the two given below: <a href="http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/">http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/</a></p>
<p>Time for Otto&#8217;s general griping: WordPress plugin programming edition.</p>
<p>Here&#8217;s a practice I see in plugins far too often:</p>
<ol>
<li>Plugin.php file adds something like this to the wp_head:
<pre class="brush: xml; title: ; notranslate" title="">&lt;script src='http://example.com/wp-content/plugins/my-plugin/script.js.php'&gt;</pre>
</li>
<li>Script.js.php has code like the following:
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php
include &quot;../../../wp-load.php&quot;;
?&gt;
... javascript code ...
</pre>
</li>
</ol>
<p>The reason for this sort of thing is that there&#8217;s some option or code or something that the javascript needs from the database or from WordPress or whatever. This PHP file is, basically, generating the javascript on the fly.</p>
<p>Usually, the case for this turns out to be something minor. The code needs the value from an option, or some flag to turn it on or off. Or whatever.</p>
<p>Problem is that finding wp-load.php can be a bit of a chore. I&#8217;ve seen extreme efforts to find and load that file in plugins before, including searching for it, examining the directory structure to make decent guesses, etc. This sort of thing has existed even before wp-load.php came around, with people trying to load wp-config.php themselves and such.</p>
<p>But the real problem is simpler: <em>This is always the wrong way to do it.</em><br />
<span id="more-35"></span></p>
<h3>Why this is wrong</h3>
<ol>
<li>You don&#8217;t have the first clue where wp-load.php actually is. Both the plugin directory and the wp-content directory can be moved around in the installation. ALL the WordPress files could be moved about in this manner, are you going to search around for them?</li>
<li>You&#8217;ve instantly doubled the load on that server. WordPress and the PHP processing of it all now have to get loaded twice for every page load. Once to produce the page, and then again to produce your generated javascript.</li>
<li>You&#8217;re generating javascript on the fly. That&#8217;s simply crap for caching and speed and such.</li>
</ol>
<p>The right way? Well, there&#8217;s two options.</p>
<h3>Right Way the First</h3>
<p>Generate your options separately, put them in using wp_print_scripts.</p>
<p>Examine this pseudo-code:</p>
<pre class="brush: php; title: ; notranslate" title="">
add_action('wp_print_scripts','myscript');
function myscript() {
?&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
  var plugin_option= &lt;?php echo json_encode(get_option('plugin_option')); ?&gt;;
&lt;/script&gt;
&lt;?php
}
wp_enqueue_script('myscript','...myscript.js',...);
</pre>
<p>Basically, the plugin option value is inserted directly into the page. The myscript.js file that loads shortly afterwards can use this value however it likes.</p>
<p>Why this is better:</p>
<ol>
<li>No searching for wp-load.php.</li>
<li>The javascript is static, only your options are variable. No added load on the site.</li>
<li>Static scripts mean you get great speed from caching.</li>
</ol>
<p>Sidenote: Note the use of json_encode? You should always use this when producing javascript variables from PHP variables. It handles quoting and escaping and everything for you. It can even turn PHP arrays into javascript arrays nicely! Handy for storing all your options in one place.</p>
<p>What if you have a ton of plugin options though? What if you really WANT to generate that javascript on-the-fly?</p>
<h3>Right Way the Second</h3>
<p>Generate the javascript from a call to WordPress itself, not to a separate file.</p>
<p>Examine this pseudo-code:</p>
<pre class="brush: php; title: ; notranslate" title="">
add_filter('query_vars','plugin_add_trigger');
function plugin_add_trigger($vars) {
    $vars[] = 'plugin_trigger';
    return $vars;
}

add_action('template_redirect', 'plugin_trigger_check');
function plugin_trigger_check() {
	if(intval(get_query_var('plugin_trigger')) == 1) {
	?&gt;
function javascript_code() {
...
}
&lt;?php
	exit;
	}
}
</pre>
<p>That code does something a little clever. Basically it&#8217;s adding a new query variable to be used as the &#8220;trigger&#8221;. When the trigger gets pulled, a bunch of javascript is generated, then the code *exits*, stopping WordPress from proceeding any further.</p>
<p>So, with that code in a plugin, a call to http://example.com/?plugin_trigger=1 will now produce your javascript code. This is running entirely within the content of a WordPress call, so you get all the WP functions and database access with which you can generate your code as well.</p>
<p>Thus, you can happily put your</p>
<pre class="brush: xml; title: ; notranslate" title="">&lt;script src=&quot;http://example.com/?plugin_trigger=1&quot;&gt;</pre>
<p>code into the page and it&#8217;ll load up that &#8220;file&#8221; just fine.</p>
<p>Why this is better:</p>
<ol>
<li>No searching for load.php</li>
<li>&#8230; Well, okay, there is no other reason. The load problem still exists, and your caching issues still exist. You&#8217;re programmatically generating code here, after all. It&#8217;s not a particularly good practice to do. Still, sometimes this is easier and faster to develop, even if it&#8217;s never actually &#8220;necessary&#8221;.</li>
</ol>
<p>Also see that while I&#8217;m using the number 1 there as the value I&#8217;m checking for, that value can be anything you like. If you want to be a smartass about it and have all sorts of different things that could be generated, you can do them all with that one trigger. It&#8217;s still a generally bad idea because of the added load, but hey, maybe you have a legitimate reason. I&#8217;ve seen one or two valid reasons to do this before.</p>
<h3>Wrap up</h3>
<p>Also note all of the above also applies to &#8220;generating&#8221; CSS code. It&#8217;s just as unnecessary. Usually more so.</p>
<p>So please, stop including wp-load. It&#8217;s just wrong. Let WordPress load itself, and make your plugin do the output it needs to produce in the right places.</p>
<div class="sharedaddy sd-block sd-social sd-gplus"><h3 class="sd-title">Google+</h3><div class="sd-content"><a href="https://plus.google.com/+SamuelOttoWood"><img src="https://lh5.googleusercontent.com/-sTIAD3oDYbs/AAAAAAAAAAI/AAAAAAAAGkQ/ZwW3H57HC8I/photo.jpg?sz=40" alt="Samuel “Otto” Wood" width="20" height="20" align="absmiddle" /> </a><a rel="author" href="https://plus.google.com/+SamuelOttoWood" class="gplus-profile">Samuel “Otto” Wood</a><span class="g-follow-wrapper"><span class="g-follow" data-href="https://plus.google.com/+SamuelOttoWood" data-rel="author" data-height="15"></span></span></div></div><div class='yarpp-related yarpp-related-none'>
</div>
</div>
							</div>
<div><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/1u' onclick='this.focus(); this.select();' />
</span></div>

			<div class="postmetadata">
				<div class="postmetadata">
					Tags: <a href="http://ottopress.com/tag/php/" rel="tag">PHP</a>, <a href="http://ottopress.com/tag/plugin/" rel="tag">plugin</a>, <a href="http://ottopress.com/tag/wp-config/" rel="tag">wp-config</a>, <a href="http://ottopress.com/tag/wp-load/" rel="tag">wp-load</a><br />					Category: <a href="http://ottopress.com/category/code/" title="View all posts in Code" rel="category tag">Code</a>, <a href="http://ottopress.com/category/rants/" title="View all posts in Rants" rel="category tag">Rants</a>, <a href="http://ottopress.com/category/wordpress/" title="View all posts in WordPress" rel="category tag">WordPress</a>					&nbsp;|&nbsp;&nbsp;<a href="#respond">Comment</a> (<a href='http://ottopress.com/2010/dont-include-wp-load-please/feed/'>RSS</a>)					&nbsp;|&nbsp;&nbsp;<a href="http://ottopress.com/2010/dont-include-wp-load-please/trackback/ " rel="trackback">Trackback</a>									 </div>
			</div>
    
		</div>
	<div id="comments">
	<h3>42 Comments </h3>
	<div class="navigation" style="clear:both">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>
	<div style="clear:both"></div>
	<ol class="commentlist">
		<li class="pingback even thread-even depth-1" id="comment-6" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-6" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com/blog/2010/dont-include-wp-load-please/' rel='external nofollow' class='url'>Don&#8217;t include wp-load, please.</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-6">
		<time itemprop="dateCreated" datetime="2010-03-24T10:23:12+00:00">March 24, 2010 at 10:23 am</time></a>	</div>

	<div itemprop="text"><p>[...] include wp-load, please.      Edit: This post has moved to here: <a href="http://ottopress.com/2010/dont-include-wp-load-please/" rel="nofollow">http://ottopress.com/2010/dont-include-wp-load-please/</a>. Take your comments [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=6#respond' onclick='return addComment.moveForm("div-comment-6", "6", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-869" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-869" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/e486dddd09146eb1b00db415869843d3?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://wordpress.Hikari.ws' rel='external nofollow' class='url'>Hikari</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-869">
		<time itemprop="dateCreated" datetime="2010-04-30T02:32:31+00:00">April 30, 2010 at 2:32 am</time></a>	</div>

	<div itemprop="text"><p>Hey Otto, I&#8217;ve come with a idea that may help in a lot of cases.</p>
<p>It&#8217;s for when we wanna build a dynamic CSS or JS, and during the page building we already know the data we wanna use. Generally that happens when the CSS/JS just needs to use a get_option() to load some data from database, which we can access in page-loading time, or when in page-loading time we generate something we wanna pass to it.</p>
<p>Anyway, if before we add the  or potentially print the whole code in HTML document, we already know the info that code will need, we can pass it as GET parameters to the file. In the href attribute, after the file URL, we add a &#8216;?&#8217; and just pass our data as key=value, as we normally do when we manually build a GET parameters string, using urlencode () and so forth.</p>
<p>Then, when the dynamic CSS/JS is loaded, we just use $_GET[] to get those data back and deal with default values when a parameter is not present. I&#8217;ve tested it with CSS for a plugin I&#8217;m developing and it worked beautifully, in admin page I allow user to set config parameters and when the file must me used I pass them as GET parameters.</p>
<p>For values that are arrays, what I&#8217;ve thought is use serialize() and unserialize(), but didn&#8217;t use in practice.</p>
<p>And there&#8217;s another issue, if we use wp_enqueue_style(), we can pass our prepared string to it as if it was the file version, and WordPress appends our string, but before it appends a &#8220;?ver=&#8221;, which would turn our first parameter key to the &#8220;ver&#8221; parameter value, and break this first parameter. In this case, I just start the string with &#8220;0=dunny&#8221;, which results in &#8220;ver=0=dummy&#038;firstparameter=&#8230;&#8221;, works great!</p>
<p>I believe this solution can solve most cases where wp-load is required only to read data, any idea on how to enhance it would be very appretiated <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_biggrin.gif" alt=":D" class="wp-smiley" /> </p>
<p>In a few weeks I&#8217;m gonna publish my plugin, then you can see it working in practice.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=869#respond' onclick='return addComment.moveForm("div-comment-869", "869", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-2 parent" id="comment-872" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-872" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-872">
		<time itemprop="dateCreated" datetime="2010-04-30T08:26:20+00:00">April 30, 2010 at 8:26 am</time></a>	</div>

	<div itemprop="text"><p>Your solution still requires a second, and wholly unnecessary, round trip to the server just to produce your code.</p>
<p>It&#8217;s really a lot better to insert the code into the page directly. It&#8217;s faster and it requires less server hits.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=872#respond' onclick='return addComment.moveForm("div-comment-872", "872", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-3" id="comment-899" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-899" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/e486dddd09146eb1b00db415869843d3?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://wordpress.Hikari.ws' rel='external nofollow' class='url'>Hikari</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-899">
		<time itemprop="dateCreated" datetime="2010-04-30T23:20:01+00:00">April 30, 2010 at 11:20 pm</time></a>	</div>

	<div itemprop="text"><p>Yeah, as any js and css does <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_razz.gif" alt=":P" class="wp-smiley" /> </p>
<p>Beyond all advantages of separating HTML, JavaScript and CSS, all this is to &#8220;access&#8221; WordPress when dynamically generating these files. And it doesn&#8217;t require the use of wp-load, which is much faster already.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=899#respond' onclick='return addComment.moveForm("div-comment-899", "899", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-1056" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-1056" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/ba546bf447a6ae200f0e93968e7eada8?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://bueltge.de/' rel='external nofollow' class='url'>Frank</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-1056">
		<time itemprop="dateCreated" datetime="2010-05-07T03:51:09+00:00">May 7, 2010 at 3:51 am</time></a>	</div>

	<div itemprop="text"><p>Hello Otto,<br />
nice post &#8211;  a ask, do you have an example on a sorce-file for real work example. I dont understand your tutorial not perfectly. Thanks for reply.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=1056#respond' onclick='return addComment.moveForm("div-comment-1056", "1056", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-1064" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-1064" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-1064">
		<time itemprop="dateCreated" datetime="2010-05-07T12:08:58+00:00">May 7, 2010 at 12:08 pm</time></a>	</div>

	<div itemprop="text"><p>It&#8217;s hard to give an example without knowing exactly what it is that you&#8217;re trying to accomplish, basically. There&#8217;s a lot of ways to do it, but including wp-load from a plugin is always the wrong way.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=1064#respond' onclick='return addComment.moveForm("div-comment-1064", "1064", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1067" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-1067" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/ba546bf447a6ae200f0e93968e7eada8?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://bueltge.de/' rel='external nofollow' class='url'>Frank</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-1067">
		<time itemprop="dateCreated" datetime="2010-05-07T13:34:43+00:00">May 7, 2010 at 1:34 pm</time></a>	</div>

	<div itemprop="text"><p>Thanks for you reply!<br />
I will include a own javascript-file. In this js-file it is important to use the path of WP, get_options(&#8216;wpurl&#8217;) as example and i will not use the wp-load.php in this js.file, as php-file and send header as javascript. YOu has examples of code hier, but this are foo examples and i will read this on a plugin or script for WP, on a real example. Maybe i understand your solution better. Thanks for read my bad english and also thanks for your time.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=1067#respond' onclick='return addComment.moveForm("div-comment-1067", "1067", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-1068" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-1068" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-1068">
		<time itemprop="dateCreated" datetime="2010-05-07T13:42:29+00:00">May 7, 2010 at 1:42 pm</time></a>	</div>

	<div itemprop="text"><p>Okay, so if there&#8217;s only some small piece of information you need, then really, what you should do is to include that information onto the main HTML of the page itself as a javascript variable, then have your script use that variable when it gets included.</p>
<p>&#8220;Right Way the First&#8221; above basically demonstrates exactly how to do this in a plugin.</p>
<p>In other words, you&#8217;re basically saying that you want to make a PHP file which generates javascript code. That&#8217;s a BAD way to do things. Instead, make the javascript code static, such that it doesn&#8217;t have to be generated but can merely be loaded directly. The pieces that you would have needed to generate before, rewrite them to use variable names. Then have code in your plugin that sets those variables on your main site itself. </p>
<p>Does that help?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=1068#respond' onclick='return addComment.moveForm("div-comment-1068", "1068", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3" id="comment-1069" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-1069" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/ba546bf447a6ae200f0e93968e7eada8?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://bueltge.de/' rel='external nofollow' class='url'>Frank</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-1069">
		<time itemprop="dateCreated" datetime="2010-05-07T13:50:33+00:00">May 7, 2010 at 1:50 pm</time></a>	</div>

	<div itemprop="text"><p>Yes, i think so and i have an idea for my work.<br />
I will give the the path on a variable for the javascript and use this on my js. The js i will include with wp_enqueue_script().<br />
Many thanks, i will test this and the change all my sources with wp-load.php.</p>
<p>I have read in so much plugins and all go the way via hook wp_head or wirte the source via echo in the pages. Small one of plugins use wp_enqueue_script() &#8211; i think the right way, and i hove no find a plugin without wp-load.php for values from WP, example the path. I think, it is important, that more people write plugins and posts for dont use wp-load.php.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=1069#respond' onclick='return addComment.moveForm("div-comment-1069", "1069", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="pingback odd alt thread-even depth-1" id="comment-4498" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4498" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://www.simonwheatley.co.uk/2010/08/14/including-javascript-data-from-plugins/' rel='external nofollow' class='url'>Including JavaScript data from plugins &laquo; simonwheatley.co.uk</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4498">
		<time itemprop="dateCreated" datetime="2010-08-14T08:24:08+00:00">August 14, 2010 at 8:24 am</time></a>	</div>

	<div itemprop="text"><p>[...] over to Otto&#8217;s blog and read his post entitled don&#8217;t include wp-load, please which I&#8217;m in complete and total agreement with. I&#8217;d like to add to the solutions with [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4498#respond' onclick='return addComment.moveForm("div-comment-4498", "4498", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-4524" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4524" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/81df87e0d3e269d6fa6a17c6914fd656?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://mikeschinkel.com' rel='external nofollow' class='url'>Mike Schinkel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4524">
		<time itemprop="dateCreated" datetime="2010-08-14T18:00:44+00:00">August 14, 2010 at 6:00 pm</time></a>	</div>

	<div itemprop="text"><p>Hi Otto,</p>
<p>(here is it reformatted) </p>
<p>Nice post, thanks.</p>
<p>Question though: <a href="http://ottodestruct.com/blog/2010/dont-include-wp-load-please/#comment-1904" rel="nofollow">@Ozh mentioned in comments on your other site</a> to use URL parameters to which you said &#8220;this still causes caching problems.&#8221; In looking at it it doesn&#8217;t seem to be the case so I&#8217;m asking to see what I am missing. (I&#8217;m assuming that the generated Javascript is a function of the URL parameters and nothing more.) Let me give a simply example to allow us something to discuss:</p>
<p>script.js.php?foo=1&amp;bar=2</p>
<p>if script.js.php contains the following (which is mindlessly simplistic on purpose to allow us to discuss):</p>
<p>&lt;?php<br />
// script.js.php<br />
var test = json_encode(array(<br />
  &#8216;foo&#8217; =&gt; $_GET['foo'],<br />
  &#8216;bar&#8217; =&gt; $_GET['bar'],<br />
 ));<br />
?&gt;</p>
<p>Doesn&#8217;t every permutation of &#8216;foo&#8217; and &#8216;bar&#8217; cache correctly; i.e. for any given URL you will always get exactly the same Javascript, no?</p>
<p>Or were you referring to the fact that is we have 10 different &#8216;foo&#8217;s and 10 different &#8216;bar&#8217;s we could end up with 100 different URLs each of which would need to be downloaded and cached separately?</p>
<p>If I am not missing something it would seem then that using URL parameters would not be so much a &#8220;caching problem&#8221; but instead a working solution that is poorly optimized for HTTP caching, correct? (Note the following script would cause a what I would term to be a &#8220;caching problem.&#8221;) </p>
<p>&lt;?php<br />
// script.js.php<br />
var test = time();<br />
?&gt;</p>
<p>Again, I&#8217;m just trying to see if I am missing anything.  Thanks in advance.</p>
<p>-Mike</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4524#respond' onclick='return addComment.moveForm("div-comment-4524", "4524", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-4526" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4526" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4526">
		<time itemprop="dateCreated" datetime="2010-08-14T18:26:18+00:00">August 14, 2010 at 6:26 pm</time></a>	</div>

	<div itemprop="text"><p>There&#8217;s a few problems with it.<br />
1. Sometimes browsers don&#8217;t like to cache things with ?foo=bar and such in them. Not every browser is Firefox or Chrome.<br />
2. As you stated, if you have a lot of possible inputs, then you&#8217;ll have a lot of possible resulting scripts. This is a problem considering that we&#8217;re talking about caching by individual browsers here.</p>
<p>Basically, creating GET parameters like that make things not work as well or as beautifully and they should be avoided. Sometimes they&#8217;re acceptable when you&#8217;re in a hurry or just don&#8217;t really care, but ideally I prefer my code to be more elegant.</p>
<p>BTW, if you&#8217;re using wp_enqueue_script for this sort of thing, WordPress has a function designed to do this the right way called wp_localize_script. It was originally designed for extending I18N translations into javascript files, but it works equally well for parameter passing to static JS files. It&#8217;s definitely the preferred way to go when the alternative is having PHP code that dynamically builds Javascript code&#8230;</p>
<p>To use it, you just enqueue your STATIC javascript as per normal:</p>
<p>wp_enqueue_script(&#8216;whatever&#8217;,&#8217;/path/to/whatever.js&#8217;,&#8230;);</p>
<p>Then you call localize script with an array of your parameters:</p>
<p>$myparams = array(&#8216;foo&#8217;=&gt;&#8217;bar&#8217;, &#8216;setting&#8217;=&gt;123);<br />
wp_localize_script(&#8216;whatever&#8217;,&#8217;ParamName&#8217;, $myparams);</p>
<p>What this will do is make WordPress output an inline script with your parameters (properly json encoded) just before the output of the script tag to load your javascript. Then those parameters will be available to your javascript as an instance of an object with &#8220;ParamName&#8221; (from my example). So your static script can reference them as &#8220;ParamName.foo&#8221; and &#8220;ParamName.setting&#8221; and so forth.</p>
<p>Much cleaner. One static and unchanging JS file to cache. Parameters get put into your HTML itself as a one-liner. You can deal with the parameters using a normal PHP array before passing them over&#8230; Perfect, basically.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4526#respond' onclick='return addComment.moveForm("div-comment-4526", "4526", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3" id="comment-4533" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4533" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/81df87e0d3e269d6fa6a17c6914fd656?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://mikeschinkel.com' rel='external nofollow' class='url'>Mike Schinkel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4533">
		<time itemprop="dateCreated" datetime="2010-08-14T19:18:38+00:00">August 14, 2010 at 7:18 pm</time></a>	</div>

	<div itemprop="text"><p>Thanks for the follow up.  I do agree that using the approach #1 you describe in the post and in this comment are far more elegant and preferred approaches. OTOH are you sure that there are browsers that have more than 0.1% market share that don&#8217;t cache correctly? That&#8217;s a pretty fundamental and low-level aspect of a reasonable HTTP implementation.</p>
<p>And thanks for the <code>wp_localize_script()</code>; although actually I learned of this post because of @Frank&#8217;s reference to your post on the (currently private and pre-beta) WordPress Answers at StackExchange (it&#8217;ll be public by August 19th, 2010.) <a href="http://wordpress.stackexchange.com/questions/351/modifying-a-js-file-with-data-from-plugin-settings/357#357" rel="nofollow">@Frank was answering a question on the subject of this post and gave the use of <code>wp_localize_script()</code> as his answer. I have been wondering if there was a better solution than what I had been doing (i.e. your #1 in this post) and was very happy to see Frank&#8217;s answer.</a></p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4533#respond' onclick='return addComment.moveForm("div-comment-4533", "4533", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="pingback odd alt thread-even depth-1" id="comment-4528" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4528" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/' rel='external nofollow' class='url'>Passing parameters from PHP to Javascripts in plugins &raquo; Otto on WordPress</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4528">
		<time itemprop="dateCreated" datetime="2010-08-14T18:48:10+00:00">August 14, 2010 at 6:48 pm</time></a>	</div>

	<div itemprop="text"><p>[...] while back, I wrote a post detailing why it was a bad idea to generate Javascripts using PHP in WordPress plugins. In that post, I [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4528#respond' onclick='return addComment.moveForm("div-comment-4528", "4528", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="comment-4813" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4813" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/6e9fbe9dba3817afb757d89072dbf288?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://rgdesign.org' rel='external nofollow' class='url'>robert</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4813">
		<time itemprop="dateCreated" datetime="2010-09-04T16:39:17+00:00">September 4, 2010 at 4:39 pm</time></a>	</div>

	<div itemprop="text"><p>Otto, you rock it!!! i thoght same about wp_head and i came here searching for a solution with a plugin that uses this and once you use a child theme it break code&#8230;. solved and thanks!</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4813#respond' onclick='return addComment.moveForm("div-comment-4813", "4813", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1 parent" id="comment-4916" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4916" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/527bb1d6aefe3df295fa02f5ddced5f0?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.cyberhobo.net/' rel='external nofollow' class='url'>cyberhobo</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4916">
		<time itemprop="dateCreated" datetime="2010-09-14T16:21:33+00:00">September 14, 2010 at 4:21 pm</time></a>	</div>

	<div itemprop="text"><p>I&#8217;ve been using the Right Way the Second for quite awhile to build replies to front end AJAX requests. (Thanks!) I build my version of <a href="http://example.com/?plugin_trigger=1" rel="nofollow">http://example.com/?plugin_trigger=1</a> like this:</p>
<p><code>$ajax_url = bloginfo( 'url' ) . '?plugin_trigger=1';</code></p>
<p>That&#8217;s been working for nearly everyone, but I have one report from someone with a server configuration that requires PATHINFO permalinks reporting that it won&#8217;t work without adding index.php before the querystring. Is there a more generic &#8220;template redirect URL&#8221; I should be using?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4916#respond' onclick='return addComment.moveForm("div-comment-4916", "4916", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-2 parent" id="comment-4928" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4928" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4928">
		<time itemprop="dateCreated" datetime="2010-09-16T00:31:21+00:00">September 16, 2010 at 12:31 am</time></a>	</div>

	<div itemprop="text"><p>There&#8217;s easier ways to do javascript requests back to the server. Relevant codex article: <a href="http://codex.wordpress.org/AJAX_in_Plugins#Ajax_on_the_Viewer-Facing_Side" rel="nofollow">http://codex.wordpress.org/AJAX_in_Plugins#Ajax_on_the_Viewer-Facing_Side</a></p>
<p>I&#8217;ll give you an example of how I recently did this to get a random image from image galleries (this is actually implemented on <a href="http://ma.tt" rel="nofollow">http://ma.tt</a>, it&#8217;s the random photo in the sidebar).</p>
<p>In the theme&#8217;s functions.php file, I used code similar to this:</p>
<p><code><br />
add_action('wp_ajax_nopriv_randimage', 'themename_random_image');<br />
function themename_random_image() {<br />
	// does some SQL trickery to get a random photo<br />
	$id = themename_get_random_photo_id(); </p>
<p>	// get the photo's custom sized thumbnail<br />
	$image = wp_get_attachment_image_src($id, 'themename-random-thumbnail', false);<br />
	list($src, $width, $height) = $image;</p>
<p>	// get the link to the full photo<br />
	$url = get_permalink( $id );</p>
<p>	// build the return array<br />
	$ret['url'] = $url;<br />
	$ret['src'] = $src;</p>
<p>	// sanitize the callback function name<br />
	$callback = preg_replace('/[^a-zA-Z0-9]/', '', $_GET['callback']);</p>
<p>	// set the header<br />
	header( 'Content-Type: application/javascript' );</p>
<p>	// return the json data and exit<br />
	echo $callback.'('.json_encode($ret).')';<br />
	exit;<br />
}<br />
</code></p>
<p>That code basically gets a random photo and returns a JSONP style object with the URL of a thumbnail and the URL of the link to the photo.</p>
<p>Then, in the actual sidebar code, I have something similar to this:<br />
<code><br />
&lt;div style="width:187px; height: 124px;" class="randsidebar"><br />
&lt;a href=""><br />
&lt;img src="< ?php bloginfo('template_url'); ?>/images/frame1.png" width="196" height="141" /><br />
&lt;/a><br />
&lt;/div><br />
&lt;script type="text/javascript"><br />
var data = {<br />
	action: 'randimage'<br />
};<br />
jQuery.getJSON('&lt;?php echo admin_url('admin-ajax.php'); ?>?callback=?', data, function(response) {<br />
	jQuery('.randsidebar').css("background-image", "url("+response.src+")");<br />
	jQuery('.randsidebar a').attr("href", response.url);<br />
});<br />
&lt;/script><br />
</code></p>
<p>That uses jQuery to go and retrieve a random image from the page. The result comes back as a JSONP callback, which gets passed into that function as the &#8220;response&#8221;. The jQuery code there then takes that response and changes that DIV to have the image as the background, and changes the link on top of it to link to the image. The &#8220;frame1.png&#8221; is a transparent png file that makes the nice frame around the image. The frame sits inside the div, and since the div gets the image as the background, the frame overlays the background image, thus producing the framed effect.</p>
<p>The key to all this is the &#8220;admin-ajax.php&#8221; file. That filter I defined before called &#8220;wp_ajax_nopriv_randimage&#8221; gets called because my &#8220;action&#8221; is &#8220;randimage&#8221;. Thus the handler for the randimage action is automatically called, without having to check variables or anything else.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4928#respond' onclick='return addComment.moveForm("div-comment-4928", "4928", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-3 parent" id="comment-4933" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4933" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/527bb1d6aefe3df295fa02f5ddced5f0?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.cyberhobo.net/' rel='external nofollow' class='url'>cyberhobo</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4933">
		<time itemprop="dateCreated" datetime="2010-09-16T05:40:28+00:00">September 16, 2010 at 5:40 am</time></a>	</div>

	<div itemprop="text"><p>That&#8217;s a generous reply, thanks again! It&#8217;s nice to see what you chose to put in a real life implementation. </p>
<p>I implemented my AJAX handler in WP 2.8, and still had 2.7 installs, but you&#8217;ve convinced me to start using wp_ajax_nopriv now. </p>
<p>It&#8217;s interesting to me that you chose to use JSONP, even though you could have done straight JSON in this scenario, right?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4933#respond' onclick='return addComment.moveForm("div-comment-4933", "4933", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-4" id="comment-4934" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-4934" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-4934">
		<time itemprop="dateCreated" datetime="2010-09-16T11:19:44+00:00">September 16, 2010 at 11:19 am</time></a>	</div>

	<div itemprop="text"><p>I always use JSONP. Never know when I might need to make a call across domains.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=4934#respond' onclick='return addComment.moveForm("div-comment-4934", "4934", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-5059" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-5059" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://backports.wordpress.com/2010/09/16/error-404-requesting-php-sylehseet-wordpress-wp-3-0-1/' rel='external nofollow' class='url'>error 404 when requesting a .php as a styleheet in wp 3.0.1 &laquo; backports</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-5059">
		<time itemprop="dateCreated" datetime="2010-09-27T00:21:41+00:00">September 27, 2010 at 12:21 am</time></a>	</div>

	<div itemprop="text"><p>[...] B ] : &#8220;Right way the second&#8221; as defined here : <a href="http://ottopress.com/2010/dont-include-wp-load-please/" rel="nofollow">http://ottopress.com/2010/dont-include-wp-load-please/</a>. This is not a great alternative, but it will work if you&#8217;re a stickler for using separated [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=5059#respond' onclick='return addComment.moveForm("div-comment-5059", "5059", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-5870" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-5870" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/ed33891ef54d14d71cee542af5c64aa3?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://p51labs.com' rel='external nofollow' class='url'>Kevin Miller</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-5870">
		<time itemprop="dateCreated" datetime="2010-11-29T13:27:36+00:00">November 29, 2010 at 1:27 pm</time></a>	</div>

	<div itemprop="text"><p>Hi Otto-</p>
<p>Nice write-up, and you are correct that the way you outline is much nicer and cleaner than loading the whole system.   However this doesn&#8217;t take into account more robust situations&#8230;</p>
<p>What if when I generate a js/css file I need to pull 10 different things, query the database, etc?   Is this the case where loading in wp-load is &#8216;acceptable&#8217; or is there another method that is preferable?</p>
<p>Thanks,</p>
<p>Kevin</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=5870#respond' onclick='return addComment.moveForm("div-comment-5870", "5870", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-5871" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-5871" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-5871">
		<time itemprop="dateCreated" datetime="2010-11-29T15:37:04+00:00">November 29, 2010 at 3:37 pm</time></a>	</div>

	<div itemprop="text"><p>Well, mainly, there&#8217;s almost never a good reason to actually do that. </p>
<p>Javascript can use variables in the main page and have the actual code itself be static and unchanging (See <a href="http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/" rel="nofollow">http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/</a> for an example). </p>
<p>CSS is additive. The few variable items (and they should be few) can be put into a separate file or call. If you really want to allow CSS input, you can use the second method given in the post above, or you can just hook to the init action and notice a custom $_POST variable to make it output the CSS. This isn&#8217;t the best way as it still requires another hit to the site, but it does mean that you don&#8217;t have to find and try to load WordPress manually, since you can just load WordPress normally then change the output to what you want it to be. It&#8217;s lighter-weight to do that than to include wp-load.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=5871#respond' onclick='return addComment.moveForm("div-comment-5871", "5871", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-7995" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-7995" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/300e69fe9008d28e3db9085e67bfcc7f?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.aegishestia.com' rel='external nofollow' class='url'>Loni Huff</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-7995">
		<time itemprop="dateCreated" datetime="2011-04-06T10:21:01+00:00">April 6, 2011 at 10:21 am</time></a>	</div>

	<div itemprop="text"><p>I apologize for posting on an older thread, but I am facing a dilemma and would welcome your thoughts on best approach. I need to generate a couple of JavaScript arrays from my database as well as a set of functions that are based on the contents of those arrays. The total script length is such that I don&#8217;t want to incur this overhead on every page. Is it possible to dynamically generate a then-static *.js file when the plugin is first activated and subsequently regenerate the file when the user changes the plugin options? I have Googled for information on this approach without success, so perhaps such a thing is not possible or is regarded as bad practice for some reason. What are your thoughts?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=7995#respond' onclick='return addComment.moveForm("div-comment-7995", "7995", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-8004" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-8004" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-8004">
		<time itemprop="dateCreated" datetime="2011-04-06T17:42:10+00:00">April 6, 2011 at 5:42 pm</time></a>	</div>

	<div itemprop="text"><p>Don&#8217;t bother generating a script, just generate the variables you need to pass to a static script, then use wp_localize_script to pass those variables to it via the page.</p>
<p>See <a href="http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/" rel="nofollow">http://ottopress.com/2010/passing-parameters-from-php-to-javascripts-in-plugins/</a> for more information.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=8004#respond' onclick='return addComment.moveForm("div-comment-8004", "8004", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-10432" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10432" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://wphoneybadger.com/?p=40' rel='external nofollow' class='url'>wp-load.php | WP Honey Badger</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-10432">
		<time itemprop="dateCreated" datetime="2012-01-19T18:05:10+00:00">January 19, 2012 at 6:05 pm</time></a>	</div>

	<div itemprop="text"><p>[...] watch out!&#8221; says that core dev. The WP Honey Badger is just cuh-razy, including wp-load.php all over the place. It has no regard for how heavy the page is getting from loading WordPress over and over again. [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=10432#respond' onclick='return addComment.moveForm("div-comment-10432", "10432", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-10674" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10674" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://maniacvardhan.wordpress.com/2010/11/16/error-404-when-requesting-a-php-as-a-styleheet-in-wp-3-0-1-2/' rel='external nofollow' class='url'>error 404 when requesting a .php as a styleheet in wp 3.0.1 &laquo; maniac.vardhan</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-10674">
		<time itemprop="dateCreated" datetime="2012-03-17T23:34:12+00:00">March 17, 2012 at 11:34 pm</time></a>	</div>

	<div itemprop="text"><p>[...] B ] : &#8220;Right way the second&#8221; as defined here : <a href="http://ottopress.com/2010/dont-include-wp-load-please/" rel="nofollow">http://ottopress.com/2010/dont-include-wp-load-please/</a>. This is not a great alternative, but it will work if you&#8217;re a stickler for using separated [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=10674#respond' onclick='return addComment.moveForm("div-comment-10674", "10674", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-10840" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10840" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://wbcomdesigns.com/2012/05/17/wordpress-options-passed-to-javascript-1/' rel='external nofollow' class='url'>WordPress Options Passed To JavaScript #1 | Wbcom Designs | WordPress, WPMU, Buddypress &amp; WP Performance Optimization Expert - Programmer / Developer</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-10840">
		<time itemprop="dateCreated" datetime="2012-05-16T16:47:38+00:00">May 16, 2012 at 4:47 pm</time></a>	</div>

	<div itemprop="text"><p>[...] solutions in loading the wp-load.php and therefore access to all features of WordPress. Long ago Otto (Samuel Wood) already referred to this fact and this articles shows solutions. Questions still there and still [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=10840#respond' onclick='return addComment.moveForm("div-comment-10840", "10840", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-10841" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10841" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://wphub.biz/wordpress-options-passed-to-javascript-1/' rel='external nofollow' class='url'>WordPress Options Passed To JavaScript #1 | WPhub.biz</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-10841">
		<time itemprop="dateCreated" datetime="2012-05-17T03:12:36+00:00">May 17, 2012 at 3:12 am</time></a>	</div>

	<div itemprop="text"><p>[...] solutions in loading the wp-load.php and therefore access to all features of WordPress. Long ago Otto (Samuel Wood) already referred to this fact and this articles shows solutions. Questions still there and still [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=10841#respond' onclick='return addComment.moveForm("div-comment-10841", "10841", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-10846" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10846" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://softwarecity.netau.net/wordpress-options-passed-to-javascript-1/' rel='external nofollow' class='url'>WordPress Options Passed To JavaScript #1 | Software City</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-10846">
		<time itemprop="dateCreated" datetime="2012-05-20T04:29:45+00:00">May 20, 2012 at 4:29 am</time></a>	</div>

	<div itemprop="text"><p>[...] solutions in loading the wp-load.php and therefore access to all features of WordPress. Long ago Otto (Samuel Wood) already referred to this fact and this articles shows solutions. Questions still there and still [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=10846#respond' onclick='return addComment.moveForm("div-comment-10846", "10846", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-11133" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11133" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/462378384358ce7c78a50e8eb901f0a4?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.wpformarketers.com' rel='external nofollow' class='url'>Matt</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-11133">
		<time itemprop="dateCreated" datetime="2012-08-08T15:22:42+00:00">August 8, 2012 at 3:22 pm</time></a>	</div>

	<div itemprop="text"><p>Hi, 2 years later&#8230;<br />
Just wanted to say thanks for posting this, and point out that method #2 can be used for more than just generating javascript or css.<br />
Say you are building a plugin that accepts POST requests from an outside source (i.e. PayPal IPN listener) and you want to use plugin options or $wpdb in manipulating the POST data. Instead of putting your data processing functions in a separate file and using wp-load.php, you can build them into the plugin file using method #2 and set the listener URL to http:www.example.com/?ipn_trigger=1<br />
Less files to worry about, no wp-load.php tomfoolery, and no &#8220;double-loading&#8221; of wordpress.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=11133#respond' onclick='return addComment.moveForm("div-comment-11133", "11133", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-11948" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11948" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://promethyst.wordpress.com/2013/08/02/custom-php-file-in-wordpress-theme/' rel='external nofollow' class='url'>Custom PHP file in WordPress Theme | Promethyst</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-11948">
		<time itemprop="dateCreated" datetime="2013-08-01T21:40:37+00:00">August 1, 2013 at 9:40 pm</time></a>	</div>

	<div itemprop="text"><p>[&#8230;] <a href="http://ottopress.com/2010/dont-include-wp-load-please/" rel="nofollow">http://ottopress.com/2010/dont-include-wp-load-please/</a> [&#8230;]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=11948#respond' onclick='return addComment.moveForm("div-comment-11948", "11948", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-12074" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12074" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/00047c82bfd9406a86a60c5ead6f8eff?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">littleguy</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12074">
		<time itemprop="dateCreated" datetime="2013-10-22T19:59:47+00:00">October 22, 2013 at 7:59 pm</time></a>	</div>

	<div itemprop="text"><p>Right Way the Second hook is done so late in execution&#8230; including wp-load.php is <b>much faster</b></p>
<p>But is there a hook that gets executed earlier??</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12074#respond' onclick='return addComment.moveForm("div-comment-12074", "12074", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-2" id="comment-12075" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12075" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12075">
		<time itemprop="dateCreated" datetime="2013-10-22T20:06:28+00:00">October 22, 2013 at 8:06 pm</time></a>	</div>

	<div itemprop="text"><p>Using *any* hook is always faster than including wp-load directly, because if you include wp-load directly, then your code doesn&#8217;t execute until after it&#8217;s finished loading up everything. Hooks happen during the load process.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12075#respond' onclick='return addComment.moveForm("div-comment-12075", "12075", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="comment-12197" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12197" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/991a5941fec6c779880d757dac1ff437?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://jorge.orpinel.com' rel='external nofollow' class='url'>Jorge Orpinel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12197">
		<time itemprop="dateCreated" datetime="2013-12-16T15:54:43+00:00">December 16, 2013 at 3:54 pm</time></a>	</div>

	<div itemprop="text"><p>wp_localize_script is definitely the best way to go! Although the name doesn&#8217;t intuitively indicate it&#8217;s &#8220;made&#8221; for passing values to a script.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12197#respond' onclick='return addComment.moveForm("div-comment-12197", "12197", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-12284" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12284" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0ada65ceddb0ad2d39678ee2d3109c21?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.kiwiadv.net' rel='external nofollow' class='url'>Davide</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12284">
		<time itemprop="dateCreated" datetime="2014-02-22T13:12:10+00:00">February 22, 2014 at 1:12 pm</time></a>	</div>

	<div itemprop="text"><p>Hi Otto,<br />
I found this snippet:</p>
<p>from <a href="http://css-tricks.com/css-variables-with-php/" rel="nofollow">http://css-tricks.com/css-variables-with-php/</a> for fetch the var from smof theme option and I inserto in the head of style.php file.</p>
<p>I load the dynamic css in the head of theme with this function:<br />
function kiwi_enqueue_css() {<br />
wp_register_style(&#8216;options&#8217;, get_template_directory_uri() . &#8216;/css/styles.css.php&#8217;, false, null);<br />
wp_enqueue_style( &#8216;options&#8217;);<br />
}<br />
add_action(&#8216;wp_print_styles&#8217;, &#8216;kiwi_enqueue_css&#8217;);</p>
<p>It work fine, but after reading your article, I had a doubt, this charging wp_load.php right? So I can not use it? Right?<br />
the results: <a href="http://www.sitiweboristano.it/kiwiadv/" rel="nofollow">http://www.sitiweboristano.it/kiwiadv/</a></p>
<p>Thanks a lot in advance, Davide</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12284#respond' onclick='return addComment.moveForm("div-comment-12284", "12284", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-12285" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12285" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12285">
		<time itemprop="dateCreated" datetime="2014-02-22T13:32:55+00:00">February 22, 2014 at 1:32 pm</time></a>	</div>

	<div itemprop="text"><p>Umm, no, that has nothing to do with wp-load. It doesn&#8217;t have &#8220;wp-load&#8221; anywhere in it.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12285#respond' onclick='return addComment.moveForm("div-comment-12285", "12285", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3 parent" id="comment-12291" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12291" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0ada65ceddb0ad2d39678ee2d3109c21?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.kiwiadv.net' rel='external nofollow' class='url'>Davide</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12291">
		<time itemprop="dateCreated" datetime="2014-02-25T09:48:52+00:00">February 25, 2014 at 9:48 am</time></a>	</div>

	<div itemprop="text"><p>Sorry, I have not explained, the snippet is:</p>
<p>I insert this in the head of styles.php, this snippet load wp-load another twice?<br />
Thanks</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12291#respond' onclick='return addComment.moveForm("div-comment-12291", "12291", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-4 parent" id="comment-12292" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12292" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0ada65ceddb0ad2d39678ee2d3109c21?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.kiwiadv.net' rel='external nofollow' class='url'>Davide</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12292">
		<time itemprop="dateCreated" datetime="2014-02-25T09:50:15+00:00">February 25, 2014 at 9:50 am</time></a>	</div>

	<div itemprop="text"><p>the snippet sorry:</p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php
 $absolute_path = explode('wp-content', $_SERVER['SCRIPT_FILENAME']);
 $wp_load = $absolute_path[0] . 'wp-load.php';
 require_once($wp_load);

  /**
  Do stuff like connect to WP database and grab user set values
  */

  header('Content-type: text/css');
  header('Cache-control: must-revalidate');
?&gt;
</pre>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12292#respond' onclick='return addComment.moveForm("div-comment-12292", "12292", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-5 parent" id="comment-12295" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12295" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12295">
		<time itemprop="dateCreated" datetime="2014-02-26T08:22:20+00:00">February 26, 2014 at 8:22 am</time></a>	</div>

	<div itemprop="text"><p>That won&#8217;t work on a lot of sites, because the content directory does not have to be named &#8220;wp-content&#8221;. Nor does it need to be located in the WordPress folder.</p>
<p>It is not possible to determine the location of the wp-load.php file accurately from a theme or plugin. WordPress loads plugins/themes, not the other way around.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12295#respond' onclick='return addComment.moveForm("div-comment-12295", "12295", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-6" id="comment-12296" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12296" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0ada65ceddb0ad2d39678ee2d3109c21?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.kiwiadv.net' rel='external nofollow' class='url'>Davide</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12296">
		<time itemprop="dateCreated" datetime="2014-02-26T08:51:12+00:00">February 26, 2014 at 8:51 am</time></a>	</div>

	<div itemprop="text"><p>I understand, thanks a lot for your explanation <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif" alt=":-)" class="wp-smiley" /> </p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12296#respond' onclick='return addComment.moveForm("div-comment-12296", "12296", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-12352" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12352" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/46506fb7988f7372aa3c2d2c2fc05a1e?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.gopiplus.com' rel='external nofollow' class='url'>Gopi</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12352">
		<time itemprop="dateCreated" datetime="2014-04-04T02:23:52+00:00">April 4, 2014 at 2:23 am</time></a>	</div>

	<div itemprop="text"><p>Hi Otto,</p>
<p>I have file in the plugin, when someone browse the file, i want to do some DB action (like update some filed in the plugin table). Below is my code. its working perfectly. but am including wp-config.php on file header. is there way to do this with out adding wp-config.php in header. any option to get the DB login details in this file.??</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
$abspath = dirname(__FILE__);<br />
$abspath_1 = str_replace(&#8216;wp-content/plugins/email-posts-to-subscribers/job&#8217;, &#8221;, $abspath);<br />
require_once($abspath_2 .&#8217;wp-config.php&#8217;);</p>
<p>$noerror = true;<br />
$form['delvid'] = isset($_GET['delvid']) ? $_GET['delvid'] : 0;</p>
<p>if(is_numeric($form['delvid']))<br />
{<br />
	global $wpdb;<br />
	$sSql = &#8220;Call some SQL query to update the status&#8221;;<br />
	$wpdb-&gt;query($sSql);<br />
}<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12352#respond' onclick='return addComment.moveForm("div-comment-12352", "12352", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-12353" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12353" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/46506fb7988f7372aa3c2d2c2fc05a1e?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.gopiplus.com/work' rel='external nofollow' class='url'>Gopi</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2010/dont-include-wp-load-please/comment-page-1/#comment-12353">
		<time itemprop="dateCreated" datetime="2014-04-04T09:16:34+00:00">April 4, 2014 at 9:16 am</time></a>	</div>

	<div itemprop="text"><p>I found the solution. thanks&#8230;</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2010/dont-include-wp-load-please/?replytocom=12353#respond' onclick='return addComment.moveForm("div-comment-12353", "12353", "respond", "35")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	</ol>
	<div class="navigation" style="clear:both">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>
	<div style="clear:both"></div> 								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2010/dont-include-wp-load-please/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://ottopress.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<div id="gravbox"></div><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input x-autocompletetype="name-full" id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input x-autocompletetype="email" id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p><p class="form-allowed-tags">Need to post PHP code? Wrap it in <code>[php]</code> and <code>[/php]</code> tags.						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='35' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="871c1f45e2" /></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts by email.</label></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="179"/></p>					</form>
							</div><!-- #respond -->
			</div>

	
	</div>

	<div id="sidebar">
		<ul>
			
			<li id="paypal-donate" class="widget widget_wpaypal"><h2 class="widgettitle">Buy Otto a Beer</h2>
<div style="margin-top:5px;margin-bottom:5px;text-align:left;">
		<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
		<p><input type="hidden" name="cmd" value="_xclick" />
		<input type="hidden" name="business" value="otto@ottodestruct.com" />
		<input type="hidden" name="item_name" value="Donation to Otto on WordPress" />
		<input type="hidden" name="item_number" value="0" />
		<input type="hidden" name="notify_url" value="" />
		<input type="hidden" name="no_shipping" value="1" /><input type="hidden" name="return" value="http://ottopress.com" />
		<input type="hidden" name="no_note" value="1" />
		<input type="hidden" name="tax" value="0" />
		<input type="hidden" name="bn" value="PP-DonationsBF" />
		<input type="hidden" name="on0" value="Website" />
		Currency: <br />
		<select id="currency_code" name="currency_code">
		<option value="USD">U.S. Dollars</option>
		<option value="AUD">Australian Dollars</option>
		<option value="CAD">Canadian Dollars</option>
		<option value="EUR">Euros</option>
		<option value="GBP">Pounds Sterling</option>
		<option value="JPY">Yen</option></select></p>
		<p>Amount: <br /><input type="text" name="amount" size="16" title="The amount you wish to donate" value="5.00" /></p>
		<p>Website(Optional): <br /><input type="text" size="16" title="Your website (will be displayed)" name="os0" value="" /></p><p><input class="ppimg" type="image" src="https://www.paypal.com/en_US/i/btn/x-click-but21.gif" name="submit" style="border:0;" alt="Make payments with PayPal - fast, free and secure" /></p></form></div></li>
<li id="text-7" class="widget widget_text">			<div class="textwidget">Hey, I also take Bitcoins! Send them to: </br>
<a href="bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg">
<img src="https://chart.googleapis.com/chart?chs=150x150&cht=qr&chl=bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg" /><br />
1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg</a></div>
		</li>
<li id="text-5" class="widget widget_text"><h2 class="widgettitle">Subscribe!</h2>
			<div class="textwidget"><!-- <a href="https://plus.google.com/111166992820603637934?prsrc=3" style="cursor:pointer;display:inline-block;text-decoration:none;color:#333;font:13px/16px arial,sans-serif;"><span style="display:inline-block;font-weight:bold;vertical-align:top;margin-right:5px;margin-top:8px;">Otto on WordPress</span><span style="display:inline-block;vertical-align:top;margin-right:15px;margin-top:8px;">on</span><img src="https://ssl.gstatic.com/images/icons/gplus-32.png" alt="" style="border:0;width:32px;height:32px;"/></a>
-->
<div class="g-plus" data-href="https://plus.google.com/111166992820603637934?rel=publisher" data-width="250" data-height="131" data-theme="light"></div>
</div>
		</li>
<li id="blog_subscription-3" class="widget jetpack_subscription_widget"><h2 class="widgettitle"><label for="subscribe-field"></label></h2>

		<form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-3">
			<p id="subscribe-text">Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p><p>Join 328 other subscribers</p>

			<p id="subscribe-email"><input type="text" name="email" value="Email Address" id="subscribe-field" onclick="if ( this.value == 'Email Address' ) { this.value = ''; }" onblur="if ( this.value == '' ) { this.value = 'Email Address'; }" /></p>

			<p id="subscribe-submit">
				<input type="hidden" name="action" value="subscribe" />
				<input type="hidden" name="source" value="http://ottopress.com/2010/dont-include-wp-load-please/" />
				<input type="hidden" name="sub-type" value="widget" />
				<input type="hidden" name="redirect_fragment" value="blog_subscription-3" />
								<input type="submit" value="Subscribe" name="jetpack_subscriptions_widget" />
			</p>
		</form>

		
</li>
<li id="text-3" class="widget widget_text"><h2 class="widgettitle">Email Me</h2>
			<div class="textwidget"><ul><li><span class="vcard microid-mailto+http:sha1:23e9670868f6d2b16fe1f6b3db80c8f0423a082a">
<span style="display:none;">
<span class="adr">
 <span class="locality">Memphis</span>,
 <span class="region">TN</span>
 <span class="postal-code">38103</span>
 <span class="country-name">U.S.A.</span>
</span>
<a class="url fn" href="http://ottodestruct.com">Otto</a>
<span class="uid">240cf86e-5cad-11dc-8314-0800200c9a66</span>
</span>
<a class="email" href="mailto:otto@ottodestruct.com">otto@ottodestruct.com</a></span></li></ul>
<a rel="author" href="https://plus.google.com/100201852715113506716?rel=author">
  <img src="https://ssl.gstatic.com/images/icons/gplus-16.png" width="16" height="16">
</a>
</a>
<!-- 

This rant is hidden in HTML comments. If I pointed you to it, then you probably emailed me about the fact that my email address is in plaintext directly above this comment. If you happened to run across it because you just like looking at HTML comments, well, easter egg! :)

YES, that is a bare mailto: href above. 
YES, that is my real email address. 
And YES, it's intentional.

Obfuscating your email address on the web is stupid. 

Firstly, hiding your email address doesn't prevent spam. Spammers get addresses in bulk from mailing lists and websites and other sources. Sure, some scrapers exist, but they are by far the minority of the sources for email lists.

Secondly, hiding your email address ruins the whole point of email. The purpose of publishing my email address is so that anybody, and I do mean *anybody*, can email me. Before the days of cell phones, your phone number and physical address used to be published in a big book that everybody received, for free, on a semi-annual basis. It had distinctive yellow pages in it. Your contact information is not, and never was supposed to be, private information. Treating it as such is stupid.

Thirdly, I have great spam protection. For one, I use GMail, which has frankly incredible filtering because of the volume of mail they deal with. For another, I use various sets of filters to categorize incoming mail into various categories of things. Hell, I can even run statistics on it, if I want. This is a much better solution than continually giving out fake email addresses, or using +stuff to figure out who sent what where... I'd prefer to simply let my filters deal with it instead. 

Finally, if you're one of those systems that scours the web and/or social networks for visible email addresses and then automatically emails that person to let them know that their address is visible, then by all means please just fuck off and die. You're part of the problem. On the other hand, if you're just a regular guy with good intentions, then this doesn't apply to you. :)

Just my 2 cents.

--></div>
		</li>
<li id="categories-2" class="widget widget_categories"><h2 class="widgettitle">Categories</h2>
		<ul>
	<li class="cat-item cat-item-573"><a href="http://ottopress.com/category/code/" title="View all posts filed under Code">Code</a>
</li>
	<li class="cat-item cat-item-574"><a href="http://ottopress.com/category/other/" title="View all posts filed under Other">Other</a>
</li>
	<li class="cat-item cat-item-575"><a href="http://ottopress.com/category/rants/" title="View all posts filed under Rants">Rants</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://ottopress.com/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
	<li class="cat-item cat-item-576"><a href="http://ottopress.com/category/wordpress/" title="View all posts filed under WordPress">WordPress</a>
</li>
		</ul>
</li>
<li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>
		<ul>
	<li><a href='http://ottopress.com/2014/02/'>February 2014</a></li>
	<li><a href='http://ottopress.com/2013/11/'>November 2013</a></li>
	<li><a href='http://ottopress.com/2013/10/'>October 2013</a></li>
	<li><a href='http://ottopress.com/2013/06/'>June 2013</a></li>
	<li><a href='http://ottopress.com/2013/03/'>March 2013</a></li>
	<li><a href='http://ottopress.com/2012/11/'>November 2012</a></li>
	<li><a href='http://ottopress.com/2012/09/'>September 2012</a></li>
	<li><a href='http://ottopress.com/2012/08/'>August 2012</a></li>
	<li><a href='http://ottopress.com/2012/07/'>July 2012</a></li>
	<li><a href='http://ottopress.com/2012/05/'>May 2012</a></li>
	<li><a href='http://ottopress.com/2012/02/'>February 2012</a></li>
	<li><a href='http://ottopress.com/2012/01/'>January 2012</a></li>
	<li><a href='http://ottopress.com/2011/12/'>December 2011</a></li>
	<li><a href='http://ottopress.com/2011/11/'>November 2011</a></li>
	<li><a href='http://ottopress.com/2011/10/'>October 2011</a></li>
	<li><a href='http://ottopress.com/2011/09/'>September 2011</a></li>
	<li><a href='http://ottopress.com/2011/08/'>August 2011</a></li>
	<li><a href='http://ottopress.com/2011/07/'>July 2011</a></li>
	<li><a href='http://ottopress.com/2011/06/'>June 2011</a></li>
	<li><a href='http://ottopress.com/2011/05/'>May 2011</a></li>
	<li><a href='http://ottopress.com/2011/04/'>April 2011</a></li>
	<li><a href='http://ottopress.com/2011/03/'>March 2011</a></li>
	<li><a href='http://ottopress.com/2011/02/'>February 2011</a></li>
	<li><a href='http://ottopress.com/2011/01/'>January 2011</a></li>
	<li><a href='http://ottopress.com/2010/12/'>December 2010</a></li>
	<li><a href='http://ottopress.com/2010/11/'>November 2010</a></li>
	<li><a href='http://ottopress.com/2010/10/'>October 2010</a></li>
	<li><a href='http://ottopress.com/2010/09/'>September 2010</a></li>
	<li><a href='http://ottopress.com/2010/08/'>August 2010</a></li>
	<li><a href='http://ottopress.com/2010/06/'>June 2010</a></li>
	<li><a href='http://ottopress.com/2010/05/'>May 2010</a></li>
	<li><a href='http://ottopress.com/2010/04/'>April 2010</a></li>
	<li><a href='http://ottopress.com/2010/03/'>March 2010</a></li>
	<li><a href='http://ottopress.com/2010/02/'>February 2010</a></li>
	<li><a href='http://ottopress.com/2009/11/'>November 2009</a></li>
	<li><a href='http://ottopress.com/2009/09/'>September 2009</a></li>
	<li><a href='http://ottopress.com/2008/09/'>September 2008</a></li>
		</ul>
</li>
		<li id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widgettitle">Recent Posts</h2>
		<ul>
					<li>
				<a href="http://ottopress.com/2014/better-know-a-vulnerability-cross-site-request-forgery-csrf/">Better Know a Vulnerability: Cross Site Request Forgery (CSRF)</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/better-know-a-vulnerability-sql-injection/">Better Know a Vulnerability: SQL Injection</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/language-packs-101-prepwork/">Language Packs 101 &#8211; Prepwork</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/slides-a-presentation-theme/">Slides: A Presentation Theme</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/im-not-a-fan-of-orange/">I&#8217;m not a fan of orange&#8230;</a>
						</li>
				</ul>
		</li>
<li id="text-6" class="widget widget_text"><h2 class="widgettitle">WP Core Contributions</h2>
			<div class="textwidget"><p>
<a href='http://core.trac.wordpress.org/changeset/28072'>[28072]</a> - <a href='http://core.trac.wordpress.org/ticket/19393'>#19393</a><br />
<a href='http://core.trac.wordpress.org/changeset/27522'>[27522]</a> - <a href='http://core.trac.wordpress.org/ticket/19889'>#19889</a><br />
<a href='http://core.trac.wordpress.org/changeset/27399'>[27399]</a> - <a href='http://core.trac.wordpress.org/ticket/25665'>#25665</a><br />
<a href='http://core.trac.wordpress.org/changeset/26978'>[26978]</a> - <a href='http://core.trac.wordpress.org/ticket/23149'>#23149</a><br />
<a href='http://core.trac.wordpress.org/changeset/26711'>[26711]</a> - <a href='http://core.trac.wordpress.org/ticket/21442'>#21442</a><br />
<a href='http://core.trac.wordpress.org/changeset/26072'>[26072]</a> - <a href='http://core.trac.wordpress.org/ticket/25858'>#25858</a><br />
<a href='http://core.trac.wordpress.org/changeset/22152'>[22152]</a> - <a href='http://core.trac.wordpress.org/ticket/21914'>#21914</a><br />
<a href='http://core.trac.wordpress.org/changeset/22026'>[22026]</a> - <a href='http://core.trac.wordpress.org/ticket/22002'>#22002</a><br />
<a href='http://core.trac.wordpress.org/changeset/21839'>[21839]</a> - <a href='http://core.trac.wordpress.org/ticket/16996'>#16996</a><br />
<a href='http://core.trac.wordpress.org/changeset/21802'>[21802]</a> - <a href='http://core.trac.wordpress.org/ticket/18674'>#18674</a><br />
<a href='http://core.trac.wordpress.org/changeset/21776'>[21776]</a> - <a href='http://core.trac.wordpress.org/ticket/13729'>#13729</a><br />
<a href='http://core.trac.wordpress.org/changeset/21609'>[21609]</a> - <a href='http://core.trac.wordpress.org/ticket/19324'>#19324</a><br />
<a href='http://core.trac.wordpress.org/changeset/20916'>[20916]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20784'>[20784]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20783'>[20783]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20267'>[20267]</a> - <a href='http://core.trac.wordpress.org/ticket/13774'>#13774</a><br />
<a href='http://core.trac.wordpress.org/changeset/19721'>[19721]</a> - <a href='http://core.trac.wordpress.org/ticket/19626'>#19626</a><br />
<a href='http://core.trac.wordpress.org/changeset/19003'>[19003]</a> - <a href="http://core.trac.wordpress.org/ticket/17406">#17406</a><br />
<a href='http://core.trac.wordpress.org/changeset/18741'>[18741]</a> - <a href="http://core.trac.wordpress.org/ticket/15473">#15473</a><br />
<a href='http://core.trac.wordpress.org/changeset/18602'>[18602]</a> - <a href="http://core.trac.wordpress.org/ticket/18230">#18230</a><br />
<a href='http://core.trac.wordpress.org/changeset/18541'>[18541]</a> - <a href="http://core.trac.wordpress.org/ticket/16687">#16687</a><br />
<a href='http://core.trac.wordpress.org/changeset/18205'>[18205]</a> - <a href="http://core.trac.wordpress.org/ticket/17148">#17148</a><br />
<a href='http://core.trac.wordpress.org/changeset/17254'>[17254]</a> - <a href="http://core.trac.wordpress.org/ticket/16192">#16192</a><br />
<a href='http://core.trac.wordpress.org/changeset/16555'>[16555]</a> - <a href="http://core.trac.wordpress.org/ticket/12891">#12891</a><br />
<a href='http://core.trac.wordpress.org/changeset/16284'>[16284]</a> - <a href="http://core.trac.wordpress.org/ticket/13324">#13324</a><br />
<a href='http://core.trac.wordpress.org/changeset/13420'>[13420]</a> - <a href="http://core.trac.wordpress.org/ticket/12291">#12291</a><br />
<a href='http://core.trac.wordpress.org/changeset/12581'>[12581]</a> - <a href="http://core.trac.wordpress.org/ticket/7225">#7225</a><br />
<a href='http://core.trac.wordpress.org/changeset/11738'>[11738]</a> - <a href="http://core.trac.wordpress.org/ticket/10145">#10145</a><br />
<a href='http://core.trac.wordpress.org/changeset/11329'>[11329]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10962'>[10962]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10757'>[10757]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10753'>[10753]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10252'>[10252]</a> - <a href="http://core.trac.wordpress.org/ticket/6791">#6791</a><br />
<a href='http://core.trac.wordpress.org/changeset/9276'>[9276]</a> - <a href="http://core.trac.wordpress.org/ticket/7124">#7124</a><br />
<a href='http://core.trac.wordpress.org/changeset/9209'>[9209]</a> - <a href="http://core.trac.wordpress.org/ticket/7901">#7901</a><br />
<a href='http://core.trac.wordpress.org/changeset/9207'>[9207]</a> - <a href="http://core.trac.wordpress.org/ticket/7635">#7635</a><br />
<a href='http://core.trac.wordpress.org/changeset/9139'>[9139]</a> - <a href="http://core.trac.wordpress.org/ticket/7847">#7847</a><br />
<a href='http://core.trac.wordpress.org/changeset/9089'>[9089]</a> - <a href="http://core.trac.wordpress.org/ticket/7772">#7772</a><br />
<a href='http://core.trac.wordpress.org/changeset/8968'>[8968]</a> - <a href="http://core.trac.wordpress.org/ticket/7761">#7761</a><br />
<a href='http://core.trac.wordpress.org/changeset/8285'>[8285]</a> - <a href="http://core.trac.wordpress.org/ticket/6879">#6879</a><br />
<a href='http://core.trac.wordpress.org/changeset/8208'>[8208]</a> - <a href="http://core.trac.wordpress.org/ticket/4448">#4448</a><br />
<a href='http://core.trac.wordpress.org/changeset/8132'>[8132]</a> - <a href="http://core.trac.wordpress.org/ticket/4954">#4954</a><br />
<a href='http://core.trac.wordpress.org/changeset/8131'>[8131]</a> - <a href="http://core.trac.wordpress.org/ticket/6590">#6590</a><br />
<a href='http://core.trac.wordpress.org/changeset/7869'>[7869]</a> - <a href="http://core.trac.wordpress.org/ticket/6513">#6513</a><br />
<a href='http://core.trac.wordpress.org/changeset/7647'>[7647]</a> - <a href="http://core.trac.wordpress.org/ticket/6608">#6608</a><br />
<a href='http://core.trac.wordpress.org/changeset/7461'>[7461]</a> - <a href="http://core.trac.wordpress.org/ticket/6339">#6339</a><br />
<a href='http://core.trac.wordpress.org/changeset/6873'>[6873]</a> - <a href="http://core.trac.wordpress.org/ticket/4986">#4986</a><br />
<a href='http://core.trac.wordpress.org/changeset/6760'>[6760]</a> - <a href="http://core.trac.wordpress.org/ticket/4617">#4617</a><br />
<a href='http://core.trac.wordpress.org/changeset/6616'>[6616]</a> - <a href="http://core.trac.wordpress.org/ticket/5155">#5155</a><br />
<a href='http://core.trac.wordpress.org/changeset/6439'>[6439]</a> - <a href="http://core.trac.wordpress.org/ticket/2805">#2805</a><br />
<a href='http://core.trac.wordpress.org/changeset/6091'>[6091]</a> - <a href="http://core.trac.wordpress.org/ticket/4182">#4182</a><br />
<a href='http://core.trac.wordpress.org/changeset/6086'>[6086]</a> - <a href="http://core.trac.wordpress.org/ticket/4946">#4946</a><br />
<a href='http://core.trac.wordpress.org/changeset/5986'>[5986]</a> - <a href="http://core.trac.wordpress.org/ticket/4873">#4873</a><br />
<a href='http://core.trac.wordpress.org/changeset/5982'>[5982]</a> - <a href="http://core.trac.wordpress.org/ticket/4800">#4800</a><br />
<a href='http://core.trac.wordpress.org/changeset/5958'>[5958]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5920'>[5920]</a> - <a href="http://core.trac.wordpress.org/ticket/4703">#4703</a><br />
<a href='http://core.trac.wordpress.org/changeset/5910'>[5910]</a> - <a href="http://core.trac.wordpress.org/ticket/4654">#4654</a><br />
<a href='http://core.trac.wordpress.org/changeset/5881'>[5881]</a> - <a href="http://core.trac.wordpress.org/ticket/4704">#4704</a><br />
<a href='http://core.trac.wordpress.org/changeset/5857'>[5857]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5848'>[5848]</a> - <a href="http://core.trac.wordpress.org/ticket/4499">#4499</a><br />
<a href='http://core.trac.wordpress.org/changeset/5845'>[5845]</a> - <a href="http://core.trac.wordpress.org/ticket/4547">#4547</a><br />
<a href='http://core.trac.wordpress.org/changeset/5317'>[5317]</a> - <a href="http://core.trac.wordpress.org/ticket/4169">#4169</a><br />
<a href='http://core.trac.wordpress.org/changeset/5154'>[5154]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5151'>[5151]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5104'>[5104]</a> - <a href="http://core.trac.wordpress.org/ticket/3790">#3790</a><br />
<a href='http://core.trac.wordpress.org/changeset/4964'>[4964]</a> - <a href="http://core.trac.wordpress.org/ticket/3898">#3898</a><br />
</p></div>
		</li>
		</ul>
	</div>

</div>
<div id="footer">
<div style="float:left;"><a href="http://internetdefenseleague.org"><img src="http://internetdefenseleague.org/images/badges/final/footer_badge.png" alt="Member of The Internet Defense League" /></a></div>
<a href="http://ottopress.com/feed/">Entries (RSS)</a> and <a href="http://ottopress.com/comments/feed/">Comments (RSS)</a>.<br />
<span about="http://ottodestruct.com/" xmlns:cc="http://creativecommons.org/ns#">
This page, by <a property="cc:attributionName" rel="cc:attributionURL" href="http://ottodestruct.com/">Otto</a>, is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-ShareAlike License</a>.</span><br />
Powered by <a href="http://wordpress.org/" title="Powered by WordPress.">WordPress</a>.<br />
<img alt='css.php' src="http://ottopress.com/wp-content/plugins/cookies-for-comments/css.php?k=c6a73cb029f035cdaa9e9e8336d25169&amp;o=i&amp;t=242750063" width='1' height='1' />	<div style="display:none">
	<div class="grofile-hash-map-e486dddd09146eb1b00db415869843d3">
	</div>
	<div class="grofile-hash-map-0994d5e2e158a24ba8017c2525d78263">
	</div>
	<div class="grofile-hash-map-ba546bf447a6ae200f0e93968e7eada8">
	</div>
	<div class="grofile-hash-map-81df87e0d3e269d6fa6a17c6914fd656">
	</div>
	<div class="grofile-hash-map-6e9fbe9dba3817afb757d89072dbf288">
	</div>
	<div class="grofile-hash-map-527bb1d6aefe3df295fa02f5ddced5f0">
	</div>
	<div class="grofile-hash-map-ed33891ef54d14d71cee542af5c64aa3">
	</div>
	<div class="grofile-hash-map-300e69fe9008d28e3db9085e67bfcc7f">
	</div>
	<div class="grofile-hash-map-462378384358ce7c78a50e8eb901f0a4">
	</div>
	<div class="grofile-hash-map-00047c82bfd9406a86a60c5ead6f8eff">
	</div>
	<div class="grofile-hash-map-991a5941fec6c779880d757dac1ff437">
	</div>
	<div class="grofile-hash-map-0ada65ceddb0ad2d39678ee2d3109c21">
	</div>
	<div class="grofile-hash-map-46506fb7988f7372aa3c2d2c2fc05a1e">
	</div>
	</div>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<link rel='stylesheet' id='gplus-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/gplus-authorship/style.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='yarppRelatedCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/related.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/comment-reply.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/photon/photon.js?ver=20130122'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var mejsL10n = {"language":"en-US","strings":{"Close":"Close","Fullscreen":"Fullscreen","Download File":"Download File","Download Video":"Download Video","Play\/Pause":"Play\/Pause","Mute Toggle":"Mute Toggle","None":"None","Turn off Fullscreen":"Turn off Fullscreen","Go Fullscreen":"Go Fullscreen","Unmute":"Unmute","Mute":"Mute","Captions\/Subtitles":"Captions\/Subtitles"}};
var _wpmejsSettings = {"pluginPath":"\/wp-includes\/js\/mediaelement\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/mediaelement-and-player.min.js?ver=2.14.2'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=3.9.1'></script>
<script type='text/javascript' src='//apis.google.com/js/plusone.js?ver=3.9.1'></script>

	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:3.0.2',blog:'12342457',post:'35',tz:'-5'});
	var load_cmc = function(){linktracker_init(12342457,35,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script></div></div>

<script type="text/javascript">
    window._idl = {};
    _idl.variant = "modal";
    (function() {
        var idl = document.createElement('script');
        idl.type = 'text/javascript';
        idl.async = true;
        idl.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'members.internetdefenseleague.org/include/?url=' + (_idl.url || '') + '&campaign=' + (_idl.campaign || '') + '&variant=' + (_idl.variant || 'banner');
        document.getElementsByTagName('body')[0].appendChild(idl);
    })();
</script>

</body>
</html>
	
