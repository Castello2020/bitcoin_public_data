http://ottopress.com/2010/11/
HTTP/1.1 200 OK
Server: nginx/1.4.4
Date: Wed, 23 Jul 2014 03:40:41 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Pingback: http://ottopress.com/xmlrpc.php

<!DOCTYPE html>
<html lang="en-US">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>November &raquo; 2010 &raquo; Otto on WordPress</title>

<link rel="profile" href="http://www.w3.org/1999/xhtml/vocab" />
<link rel="me" type="text/html" href="https://plus.google.com/100201852715113506716" />

<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/style.css" type="text/css" media="screen" />
<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/print.css" type="text/css" media="print" />

<link rel="pingback" href="http://ottopress.com/xmlrpc.php" />

<meta property="og:email" content="otto@ottodestruct.com" />
<meta http-equiv="X-UA-Compatible" content="chrome=1">

<script type="text/javascript">var description = '';</script>
<!-- Jetpack Site Verification Tags -->
<meta name="google-site-verification" content="IvlRFnRHu9RIiAiOS-bo-8vU4ju4V6_b4U3M_-1jlXQ" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Feed" href="http://ottopress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Comments Feed" href="http://ottopress.com/comments/feed/" />
<link rel='stylesheet' id='yarppWidgetCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/widget.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-subscriptions-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/subscriptions/subscriptions.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='the-neverending-homepage-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/infinite-scroll/infinity.css?ver=20140422' type='text/css' media='all' />
<link rel='stylesheet' id='tiled-gallery-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.css?ver=2012-09-21' type='text/css' media='all' />
<link rel='stylesheet' id='mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/mediaelementplayer.min.css?ver=2.13.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery-migrate.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/_inc/spin.js?ver=1.3'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/_inc/jquery.spin.js?ver=1.3'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://ottopress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://ottopress.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<meta name="pinterest" content="nopin" /><link rel="microsummary" type="text/plain" href="/2010/11/?microsummary=1" /><link rel="shortcut icon" href="http://ottopress.com/wp-content/wp-logo-vs.png" /><style type="text/css" id="syntaxhighlighteranchor"></style>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-27538437-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>

<body class="archive date infinite-scroll neverending">
<script type="text/javascript">
if (top.location != self.location) top.location.replace(self.location);
</script>
<div id="page">
<div id="header">
	<div id="headertitle">
		<h1><a href="http://ottopress.com" title="Otto on WordPress: You have to use an Ottopress to get fresh squeezed Otto.">Otto on WordPress</a></h1>
		<p>You have to use an Ottopress to get fresh squeezed Otto.</p>
	</div> 
	<!-- Search box (If you prefer having search form as a sidebar widget, remove this block) -->
	<div class="search">
		<form method="get" id="searchform" action="http://ottopress.com/">
<input type="search" size="20" results="5" name="s" id="s" placeholder="Search..." speech="speech" x-webkit-speech="x-webkit-speech" onwebkitspeechchange="this.form.submit();" />
</form>
	</div> 
	<!-- Search ends here-->
		
</div>
<div id="navbar">
<div id="nav">
<div class="menu"><ul><li ><a href="http://ottopress.com/">Home</a></li><li class="page_item page-item-5 page_item_has_children"><a href="http://ottopress.com/wordpress-plugins/">WordPress Plugins</a><ul class='children'><li class="page_item page-item-205"><a href="http://ottopress.com/wordpress-plugins/atd-for-comments/">After The Deadline For Comments</a></li><li class="page_item page-item-21"><a href="http://ottopress.com/wordpress-plugins/atom-default-feed/">Atom Default Feed</a></li><li class="page_item page-item-965"><a href="http://ottopress.com/wordpress-plugins/dropbox-photo-sideloader/">Dropbox Photo Sideloader</a></li><li class="page_item page-item-15"><a href="http://ottopress.com/wordpress-plugins/gravatar-box/">Gravatar Box</a></li><li class="page_item page-item-32"><a href="http://ottopress.com/wordpress-plugins/php-code-widget/">PHP Code Widget</a></li><li class="page_item page-item-7"><a href="http://ottopress.com/wordpress-plugins/simple-facebook-connect/">Simple Facebook Connect</a></li><li class="page_item page-item-10"><a href="http://ottopress.com/wordpress-plugins/simple-twitter-connect/">Simple Twitter Connect</a></li><li class="page_item page-item-81"><a href="http://ottopress.com/wordpress-plugins/unicornify/">Unicornify</a></li></ul></li><li class="page_item page-item-374"><a href="http://ottopress.com/contact/">Contact Otto</a></li><li><a href="http://ottodestruct.com" title="Nothing to See Here">Nothing to See Here</a></li><li><a href="http://buyottoabeer.com" title="Otto on Beer">Otto on Beer</a></li></ul></div>
	</div>
</div>
<div id="wrapper">
	<div id="content">

	
			<p>Archive for November 2010</p>

				
		<div class="navigation">
			<div class="alignleft"></div>
			<div class="alignright"></div>
		</div>

					<div id="post-338" class="post-338 post type-post status-publish format-standard hentry category-rants" itemprop="blogPosts" itemscope itemtype="http://schema.org/BlogPosting">
				<h2 class="posttitle"><a href="http://ottopress.com/2010/own-your-dns-because-it-really-does-matter/" rel="bookmark" title="Permanent Link to Own Your DNS, Because It Really Does Matter" itemprop="url"><span itemprop="name">Own Your DNS, Because It Really Does Matter</span></a></h2>
				<div class="postmetadata">November 30, 2010, 11:34 pm <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
				<div class="postentry" itemprop="description">
					<p>I have been trading email with several people recently, talking them through some webhosting stuff, and I just discovered how prevalent this practice was. I should have guessed it when I wrote <a href="http://ottopress.com/2010/how-not-to-let-dns-bite-you-in-the-ass/">a post about it</a> earlier, but I didn&#8217;t know <em>everybody</em> was doing it this way. Most people I talked to didn&#8217;t realize there was any other way.</p>
<p>So it&#8217;s worth another look, I think.</p>
<p>Note that this post covers some basic fundamentals to start with. If you already grok DNS, you can skip ahead to the &#8220;How to Point a Domain at a Webhost&#8221; bit. For now, I&#8217;m going to use the word &#8220;server&#8221; a lot.</p>
<p><img class="alignright size-full wp-image-339" title="servers" src="http://i2.wp.com/ottopress.com/files/2010/11/servers.jpg?resize=463%2C343" alt="" data-recalc-dims="1" /></p>
<h3>Why DNS is Important</h3>
<p>So you bought a domain name for a few bucks. That&#8217;s great. What nobody told you: A domain name by itself is useless.</p>
<p>Really. Computers cannot connect to domain names. Computers on the internet can only connect to IP addresses. So you have to have a way to convert that domain name into an IP address. The way that happens is through DNS.</p>
<h3>DNS? How does it work?</h3>
<p>DNS works as a decentralized system. There&#8217;s thousands (millions?) of DNS servers in the world, all talking to each other all the time. One way to think of it is as a big tree, with connections coming from the root servers all the way up through to other servers. This is the traditional approach. But a better way to think of it is as a cloud, with connections branching every which way. DNS servers talk to other DNS servers and they don&#8217;t much care where they are on the &#8220;tree&#8221;, generally speaking.</p>
<p>When I make a request for my site, <a href="http://ottopress.com">ottopress.com</a>, then a few things happen.</p>
<p>First, my computer checks its memory to see if I&#8217;ve done this recently. I probably have, in my case, so it just uses that information if it&#8217;s pretty recent. This is known as <a href="http://www.google.com/search?q=DNS+Caching">DNS Caching</a>, and all modern systems do it.</p>
<p>Next, if I don&#8217;t know the address, then I know who to ask. I ask my own DNS server. Pop open a command prompt and type <code>ipconfig /all</code> (or <code>ifconfig -a</code>) . You&#8217;ll get a big listing of your IP configuration info, and some of those are your DNS servers. Those are provided by whatever gave your computer an IP address. It might be your home router, or it might be your ISP, or maybe you entered them manually. The point is that that DNS IP is where the computer connects to in order to ask it &#8220;hey, where is ottopress.com?&#8221;.</p>
<p>Now, my DNS server may already know the answer because it has it in memory (DNS cache again). If not, then it knows how to find out.</p>
<p>Firstly, it looks at the name itself. In this case, the name ends in &#8220;.com&#8221;. That&#8217;s important. This is the &#8220;<a href="http://en.wikipedia.org/wiki/Top-level_domain">Top Level Domain</a>&#8221; (TLD), and every TLD has its own set of servers dedicated to it. Actually, there&#8217;s a set of servers called the &#8220;<a href="http://en.wikipedia.org/wiki/Root_nameserver">root nameservers</a>&#8220;. They live at root-servers.net. They are a set of 13 servers world wide which distribute the TLD information. (Actually, there&#8217;s a lot more computers than &#8220;servers&#8221;, since each server is separated geographically. The J server, for example, lives in 70 different places. You can see all about them at <a href="http://root-servers.org">root-servers.org</a>.)</p>
<p>They deliver a file called the &#8220;root zone&#8221; file. In fact, this file is rather small (it will even fit on an old-school single sided 5.25&#8243; floppy!), but it contains some critical information that describes the functioning of the DNS system. Specifically, it specifies where things like .com and .org and all the other TLDs can be serviced from. Every DNS server on the planet needs this information, and usually has it cached for a long, long, <em>long</em> time. The thing rarely changes.</p>
<p>So, my DNS server looks at the root zone file and discovers that &#8220;.com&#8221; domains are handled by some other set of servers, so it goes to those and asks it &#8220;where can I get the info for ottopress.com?&#8221;</p>
<p>This is an opportune moment to talk about authority.</p>
<h3>Authoritative Responses and What They Mean</h3>
<p>Every domain name on the internet has to have somebody in control of it. This person is considered to be the &#8220;authority&#8221; on that domain. He in turn delegates that authority to some DNS server. That server is the only one on the whole internet who knows, for a <em>fact</em>, what IP addresses are connected to his names.</p>
<p>When I get something out of the cache of any server, the result is &#8220;non-authoritative&#8221;. That is, the DNS server gave me an answer, but it cannot guarantee that the answer is the right one. A non-authoritative answer is the fast one.</p>
<p>Those root servers I talked about are the authorities for the TLDs. They give out the root zone file, which says, among other things, who is the authority for all &#8220;com&#8221; domains. That server, in turn, doesn&#8217;t have the faintest clue what IP address connects to ottopress.com, but it does have information on what nameserver is the authority for ottopress.com.</p>
<p>So my DNS server goes and talks to this new server which the .com servers have told it is the authority. And finally, THAT server says &#8220;yes, I know for a fact that ottopress.com lives at 64.202.163.10&#8243;.</p>
<p>So, now that it has an answer, my DNS server relays this back to me. It also caches the information, because I&#8217;m probably going to ask it again soon, and it&#8217;s quicker if it doesn&#8217;t have to go through all that again.</p>
<h3>How to Point a Domain at a Webhost</h3>
<p>So, when you signed up for your webhost, if you got the domain somewhere else, then they very likely told you to &#8220;point your domain&#8217;s nameservers to X and Y&#8221;.  What does this mean, exactly?</p>
<p>Previously, I explained how my DNS lookup went to the .com authoritative nameservers to get the nameserver information. Well, when I change my domain&#8217;s nameservers, then what I&#8217;m actually doing is changing the information on those .com servers. I&#8217;m telling them that these new nameservers are the authorities for all DNS lookups involving ottopress.com. I&#8217;m <em>delegating my authority</em> to those nameservers. When I do that, what I&#8217;m saying is that those nameservers are now in control over all requests on the internet that involve my domain.</p>
<p>Now, this normally isn&#8217;t a bad thing. Running nameservers is difficult and tricky. The syntax is arcane and strange (albeit well worth learning for your toolbox). Plus, you&#8217;re probably not in possession of all the information. After all, you hired this web hosting company to host your website for you, and they might change IPs around and such. Better for them to manage it, yes?</p>
<p><strong>No.</strong></p>
<p>There&#8217;s a lot of good reasons to manage your DNS yourself. For one thing, you have total control. If you want to do some tricky DNS stuff, or set up email to the domain with MX records, or things like that, then you can do so yourself. Just the ability to edit your own CNAMEs and TXT records easily is well worth it. Heck, maybe you want to get Jabber working on your domain. Who knows?</p>
<p>On the other hand, you have total control, and that includes total freedom to screw it up. And anyway, most web hosts have some kind of easy interface to let you add and remove specific entries yourself, so you still have <em>some</em> control over it.</p>
<p>But now we get back to the main problem, which I was talking about in <a href="http://ottopress.com/2010/how-not-to-let-dns-bite-you-in-the-ass/">that previous post</a>. Vendor lock-in.</p>
<h3>DNS Propagation Delay and TTL</h3>
<p>Remember what I mentioned earlier, when your webhost said to &#8220;point your domain&#8217;s nameservers to X and Y&#8221;? That&#8217;s the root of the problem.</p>
<p>DNS lives and dies by a setting called &#8220;Time-To-Live&#8221; (TTL). The time-to-live is the caching factor I mentioned several times before. When a DNS server gets some new information and stores it in its memory, it also stores the TTL, which it also receives from the other server. The TTL is a time limit on how long it can cache that information. Most DNS servers obey this value extremely well. If the TTL says to cache it for 2 hours, then it caches it for 2 hours and not a second longer.</p>
<p>Well, that nameserver lookup from the .com servers has a TTL too, only it&#8217;s a very LONG one. See, those second-level servers are way overloaded. Think about it, every lookup of every .com domain name goes through one server (which is actually a whole bunch of computers geographically spread out too). There&#8217;s millions, probably billions, of these lookups a day. So they offload a lot of the information. Where to? Why into everybody else&#8217;s caches, of course. The nameserver results tend to have a very long TTL, on the order of a day to a week or so (mean time is about 48 hours). Even then, many DNS servers are configured, by default, to hold these results even longer. Sometimes weeks.</p>
<p>This is because while the IP address corresponding to a domain name might change a lot, the nameservers for one actually rarely change. You don&#8217;t switch hosts every week, for example. But your IP might change a lot, if you&#8217;re using dynamic addressing or something along those lines.</p>
<p>So what happens when I change that information? Well, basically, all the other servers on the internet that have my information cached will be wrong for some period of time. That period of time is call the propagation delay, because it takes that long for my change to propagate out to the rest of the world. Those caches have to expire and all the DNS systems out there then have to ask me for the new information, assuming somebody asks them for it.</p>
<p>So if I change my IP, it takes a couple of hours for it to get out there, because my TTL is 2 hours. The downside to this is that when your nameserver changes, it takes a friggin&#8217; long time to take effect.</p>
<h3>Solving the Problem</h3>
<p>The solution is simple: Never change your nameservers.</p>
<p>By that, I mean to keep your nameserver in the same place for as long as you possibly can. And this means, if at all possible, don&#8217;t delegate your authority to your web host. Instead, a better option is delegate it to your domain name provider.</p>
<p>I use <a href="http://godaddy.com">GoDaddy</a> for my domain names. With purchase of domain, they offer free DNS. It&#8217;s not the best interface in the world (actually it&#8217;s downright clumsy), but it works well enough. I can point my A record (that&#8217;s an &#8220;address&#8221; record, which connects names to IP addresses) to anywhere I want with relative ease. I can set my own TTL on that lookup (currently it&#8217;s 2 hours). If I were to change web hosts, my outage time would be 2 hours instead of 2 days. Why? Because all I have to do is to point my domain name at my new host, after they told me what IP address to point it to. If I instead tried to change my nameservers to theirs, then my outage would be 2 days, at least, because it usually takes at least that long for a change to the .com servers to take effect everywhere. And in some parts of the internet, that outage would be a week, at least. Minimum.</p>
<p>There&#8217;s also other options for owning your DNS. <a href="http://www.zoneedit.com/">ZoneEdit</a> offers both free and paid services for DNS, allowing you to point your domain to them and then controlling it all you like. This allows you to take your domain with you from one registrar to another, without having to worry about your registrar not providing DNS anymore.</p>
<p>Or you can even run your own DNS. That&#8217;s a super advanced topic though. Even I wouldn&#8217;t attempt that without some serious resources.</p>
<h3>Summing up</h3>
<p>But the point is that you want your DNS to be somewhere that it&#8217;s <em>never</em> going to move. Or, at least, that it&#8217;s going to move so rarely that you never have to worry about it. If I changed web hosts, it&#8217;s complex, but a simple enough matter that I could do it myself. But seriously, when am I going to move my domain names between registrars? How often does that really happen? Most people pick their registrar and stick with them forever. Unless they seriously raised the rates or something, it&#8217;s unlikely I&#8217;d ever switch them off GoDaddy.</p>
<p>Also, you want your DNS somewhere that you have a reasonable assurance that nobody&#8217;s going to screw with it. You own your domain, but the DNS controls where your domain goes. He who controls the DNS controls the domain, and that&#8217;s what ownership is, really. Control. Owning your DNS is the ability to control your own domains. It takes some learning, but seriously, it&#8217;s way easier than you think. More interesting too.</p>
				</div>

<div style="clear:both;"><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/82' onclick='this.focus(); this.select();' />
</span></div>

				<div class="postmetadata">
										Category: <a href="http://ottopress.com/category/rants/" title="View all posts in Rants" rel="category tag">Rants</a>&nbsp;&nbsp;|&nbsp;
					<a href="http://ottopress.com/2010/own-your-dns-because-it-really-does-matter/#comments" title="Comment on Own Your DNS, Because It Really Does Matter">19 Comments</a>									 </div>
			</div>			<div id="post-331" class="post-331 post type-post status-publish format-standard hentry category-code category-wordpress tag-advanced tag-posts tag-query tag-taxonomy" itemprop="blogPosts" itemscope itemtype="http://schema.org/BlogPosting">
				<h2 class="posttitle"><a href="http://ottopress.com/2010/wordpress-3-1-advanced-taxonomy-queries/" rel="bookmark" title="Permanent Link to WordPress 3.1: Advanced Taxonomy Queries" itemprop="url"><span itemprop="name">WordPress 3.1: Advanced Taxonomy Queries</span></a></h2>
				<div class="postmetadata">November 23, 2010, 3:23 pm <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
				<div class="postentry" itemprop="description">
					<p>One of the new things in 3.1 that hasn&#8217;t got a lot of discussion yet is the new <a href="http://core.trac.wordpress.org/changeset/16555">Advanced Taxonomy Queries</a> mechanism. At the moment, this is still being actively developed, but the basic structure is finalized enough to give at least a semi-coherent explanation on how to use it. Since 3.1 is now going into beta, it&#8217;s unlikely to change much.</p>
<p><img class="alignright size-full wp-image-332" title="query" src="http://i1.wp.com/ottopress.com/files/2010/11/query.jpg?resize=317%2C421" alt="" data-recalc-dims="1" /></p>
<h3>What&#8217;s a Query?</h3>
<p>In WordPress land, a &#8220;query&#8221; is anything that gets Posts. There&#8217;s a lot of ways to do this.</p>
<ul>
<li>You can use <a href="http://codex.wordpress.org/Function_Reference/query_posts">query_posts</a> to modify the main query of the page being displayed.</li>
<li>You can create a new <a href="http://codex.wordpress.org/Function_Reference/WP_Query">WP_Query</a>, to get some set of posts to display in its own custom Loop.</li>
<li>You can do a <a href="http://codex.wordpress.org/Template_Tags/get_posts">get_posts</a> to get some limited set of posts for display in some special way.</li>
</ul>
<p>Regardless of the method, you have to pass parameters to it in order to specify which posts you want. If you&#8217;ve used this at all before, then you&#8217;ve used parameters like cat=123, or tag=example, or category_name=bob and so forth. When custom taxonomies were developed, you were eventually able to specify things like taxonomy=foo and term=bar and so on.</p>
<h3>Querying for Posts</h3>
<p>The problem with these is that people sometimes want to specify more than one of these parameters, and not all parameters worked well together. Things like cat=a and tag=b, or cat=a and tag is not b, and so forth. This is because cat and tag are both forms of taxonomies, and the code didn&#8217;t handle that well. Sure, some of it worked, for specific cases, but those were mostly there by accident rather than by design. In other words, those cases worked because the system just happened to get it right for that particular instance.</p>
<p>Well, all these old methods still work, but they have been made into a more comprehensive system of generically specifying arbitrary taxonomies to match against. When you specify cat=123, it&#8217;ll actually be converting it to this new method internally.</p>
<h3>Query Strings are for Suckers</h3>
<p>One side effect of this new system is that it doesn&#8217;t really work with query strings very well. It can be done, but it&#8217;s a lot easier and more sensible if you just start getting into the array method of doing things instead. What&#8217;s the array method? I&#8217;ll explain:</p>
<p>Imagine you used to have a query that looked like this:</p>
<pre class="brush: php; title: ; notranslate" title="">
query_posts('cat=123&amp;author=456');
</pre>
<p>A simple query, really. The problem with it is that WordPress has to parse that query before it can use it. But there is another way to write that query as well:</p>
<pre class="brush: php; title: ; notranslate" title="">
query_posts(array(
  'cat' =&gt; 123,
  'author' =&gt; 456,
) );
</pre>
<p>Essentially, you separate out each individual item into its own element in an array. This actually saves you some time in the query because it doesn&#8217;t have to parse it (there&#8217;s very little savings though).</p>
<p>The advantage of this is that you can build your arrays using any method of array handling you like. Here&#8217;s another way to do it:</p>
<pre class="brush: php; title: ; notranslate" title="">
$myquery['cat'] = 123;
$myquery['author'] = 456;
query_posts($myquery);
</pre>
<p>Simple, no? But what if you have to deal with the $query_string? The <a href="http://codex.wordpress.org/Function_Reference/query_posts#Usage_Note">$query_string</a> is that old variable that is built by WordPress. It comes from the &#8220;default&#8221; query for whatever page you happen to be on. One of the main uses for it was to deal with &#8220;paging&#8221;. A common method of doing it was like this:</p>
<pre class="brush: php; title: ; notranslate" title="">
query_posts($query_string . '&amp;cat=123&amp;author=456');
</pre>
<p>If you use arrays, you have to deal with that yourself a bit. There&#8217;s a couple of possible ways to do it. The easiest is probably to just parse the query string yourself, then modify the result as you see fit. For example:</p>
<pre class="brush: php; title: ; notranslate" title="">
$myquery = wp_parse_args($query_string);
$myquery['cat'] = 123;
$myquery['author'] = 456;
query_posts($myquery);
</pre>
<p>I started out with the $query_string, used wp_parse_args to turn it into an array, then overwrote the bits I wanted to change and performed the query. This is a handy technique I&#8217;m sure a lot of people will end up using.</p>
<h3>On to Advanced Taxonomies</h3>
<p>Advanced Taxonomy queries use a new parameter to the query functions called &#8220;tax_query&#8221;. The tax_query is an array of arrays, with each array describing what you want it to match on.</p>
<p>Let&#8217;s lead by example. We want to get everything in the category of &#8220;foo&#8221; AND a tag of &#8220;bar&#8221;. Here&#8217;s our query:</p>
<pre class="brush: php; title: ; notranslate" title="">
$myquery['tax_query'] = array(
	array(
		'taxonomy' =&gt; 'category',
		'terms' =&gt; array('foo'),
		'field' =&gt; 'slug',
	),
	array(
		'taxonomy' =&gt; 'post_tag',
		'terms' =&gt; array('bar'),
		'field' =&gt; 'slug',
	),
);
query_posts($myquery);
</pre>
<p>Here we&#8217;ve specified two arrays, each of which describes the taxonomy and terms we want to match it against. It&#8217;ll match against both of them, and only return the results where both are true.</p>
<p>There&#8217;s two things of note here:</p>
<p>First is that the &#8220;field&#8221; is the particular field we want to match. In this case, we have the slugs we want, so we used &#8220;slug&#8221;. You could also use &#8220;term_id&#8221; if you had the ID numbers of the terms you wanted.</p>
<p>Second is that the &#8220;terms&#8221; is an array in itself. It doesn&#8217;t actually have to be, for this case, as we only have one term in each, but I did it this way to illustrate that we can match against multiple terms for each taxonomy. If I used array(&#8216;bar1&#8242;,&#8217;bar2&#8242;) for the post_tag taxonomy, then I&#8217;d get anything with a category of foo AND a tag of bar1 OR bar2.</p>
<p>And that second item illustrates an important point as well. The matches here are actually done using the &#8220;IN&#8221; operator. So the result is always equivalent to an &#8220;include&#8221; when using multiple terms in a single taxonomy. We can actually change that to an &#8220;exclude&#8221;, however, using the &#8220;operator&#8221; parameter:</p>
<pre class="brush: php; title: ; notranslate" title="">
$myquery['tax_query'] = array(
	array(
		'taxonomy' =&gt; 'category',
		'terms' =&gt; array('foo', 'bar'),
		'field' =&gt; 'slug',
		'operator' =&gt; 'NOT IN',
	),
);
query_posts($myquery);
</pre>
<p>The above query will get any post that is NOT in either the &#8220;foo&#8221; or &#8220;bar&#8221; category.</p>
<p>But what about terms across multiple taxonomies? So far we&#8217;ve only seen those being AND&#8217;d together. Well, the &#8220;relation&#8221; parameter takes care of that:</p>
<pre class="brush: php; title: ; notranslate" title="">
$myquery['tax_query'] = array(
	'relation' =&gt; 'OR',
	array(
		'taxonomy' =&gt; 'category',
		'terms' =&gt; array('foo'),
		'field' =&gt; 'slug',
	),
	array(
		'taxonomy' =&gt; 'post_tag',
		'terms' =&gt; array('bar'),
		'field' =&gt; 'slug',
	),
);
query_posts($myquery);
</pre>
<p>This gets us anything with a category of foo OR a tag of bar. Note that the relation is global to the query, so it appears outside the arrays in the tax_query, but still in the tax_query array itself. For clarity, I recommend always putting it first.</p>
<h3>Useful Gallery Example</h3>
<p>By combining these in different ways, you can make complex queries. What&#8217;s more, you can use it with any taxonomy you like. Here&#8217;s one I recently used:</p>
<pre class="brush: php; title: ; notranslate" title="">
$galleryquery = wp_parse_args($query_string);
$galleryquery['tax_query'] = array(
	'relation' =&gt; 'OR',
	array(
		'taxonomy' =&gt; 'post_format',
		'terms' =&gt; array('post-format-gallery'),
		'field' =&gt; 'slug',
	),
	array(
		'taxonomy' =&gt; 'category',
		'terms' =&gt; array('gallery'),
		'field' =&gt; 'slug',
	),
);
query_posts($galleryquery);
</pre>
<p>This gets any posts in either the gallery category OR that have a gallery post-format. Handy for making a gallery page template. I used the wp_parse_args($query_string) trick to make it able to handle paging properly, among other things.</p>
<h3>Speed Concerns</h3>
<p>Advanced taxonomy queries are cool, but be aware that complex queries are going to be slower. Not much slower, since the code does attempt to do things smartly, but each taxonomy you add is the equivalent of adding a JOIN. While the relevant tables are indexed, joins are still slower than non-joins. So it won&#8217;t always be a good idea to build out highly complex queries.</p>
<p>Still, it&#8217;s better than rolling your own complicated code to get a lot of things you don&#8217;t need and then parsing them out yourself. A whole lot easier too.</p>
				</div>

<div style="clear:both;"><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/81' onclick='this.focus(); this.select();' />
</span></div>

				<div class="postmetadata">
					Tags: <a href="http://ottopress.com/tag/advanced/" rel="tag">advanced</a>, <a href="http://ottopress.com/tag/posts/" rel="tag">posts</a>, <a href="http://ottopress.com/tag/query/" rel="tag">query</a>, <a href="http://ottopress.com/tag/taxonomy/" rel="tag">taxonomy</a><br />					Category: <a href="http://ottopress.com/category/code/" title="View all posts in Code" rel="category tag">Code</a>, <a href="http://ottopress.com/category/wordpress/" title="View all posts in WordPress" rel="category tag">WordPress</a>&nbsp;&nbsp;|&nbsp;
					<a href="http://ottopress.com/2010/wordpress-3-1-advanced-taxonomy-queries/#comments" title="Comment on WordPress 3.1: Advanced Taxonomy Queries">182 Comments</a>									 </div>
			</div>			<div id="post-323" class="post-323 post type-post status-publish format-standard hentry category-code category-wordpress tag-audio tag-flash tag-google tag-mp3 tag-player tag-wordpress-2" itemprop="blogPosts" itemscope itemtype="http://schema.org/BlogPosting">
				<h2 class="posttitle"><a href="http://ottopress.com/2010/how-to-add-audio-to-wordpress-posts/" rel="bookmark" title="Permanent Link to How to Add Audio to WordPress Posts" itemprop="url"><span itemprop="name">How to Add Audio to WordPress Posts</span></a></h2>
				<div class="postmetadata">November 18, 2010, 11:58 am <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
				<div class="postentry" itemprop="description">
					<p>Saw a few tweets by @lastraw today, asking Matt and others if they could make the Add Audio function in the WordPress editor work.</p>
<p>Well, @lastraw, the audio function does actually work, it just doesn&#8217;t do what you expect it to do.</p>
<p>Basically, the WordPress uploader does provide a few different kinds of uploader buttons: image, video, audio, and media. All of these buttons behave in different ways. The Audio button in particular lets you upload an audio file, and then insert a link to that file in your post.</p>
<div id="attachment_326" style="width: 279px" class="wp-caption alignnone"><a href="http://i0.wp.com/ottopress.com/files/2010/11/uploadbuttons.png"><img class="size-full wp-image-326" title="uploadbuttons" src="http://i0.wp.com/ottopress.com/files/2010/11/uploadbuttons.png?resize=269%2C53" alt="" data-recalc-dims="1" /></a><p class="wp-caption-text">WordPress upload buttons in the post editor</p></div>
<p>However, the link it inserts is just a bare link. This is because WordPress doesn&#8217;t come with a flash audio player, and HTML 5 hasn&#8217;t gotten standard enough to allow sane use of the &lt;audio&gt; tags.</p>
<p>Still, plugins can modify things to make audio files embed. I just wrote a quick plugin to take those bare audio links and turn them into embedded audio players using Google&#8217;s flash audio player. This is the same player they use on Google Voice and in several other locations in the Google-o-sphere.</p>
<p>Example:</p>
<p><a href="http://ottopress.com/files/2010/11/audiotest.mp3">Example Audio File</a></p>
<p>How did I do that? Easy, I activated my plugin, then used the Add Audio button to just insert the plain link to my audio file (which I uploaded). Naturally, this audio player will only show up on your site. People reading through an RSS reader or some other method won&#8217;t see it, they&#8217;ll just see the plain audio link and can download the file.</p>
<p>Couple limitations on this: It only handles MP3 formats. You could conceivably use a player that could handle more formats, I only made this as an example. MP3 is the most common format in use anyway, and I didn&#8217;t want to go searching for a more complicated player to use. Also, I made it only handle links on lines by themselves. If you put an audio link inline into a paragraph or something, it won&#8217;t convert it.</p>
<p>Here&#8217;s the plugin code if you want to use it or modify it or whatever. It&#8217;s not the best code in the world, but then it only took 5 minutes to create, so what do you expect? <img src="http://i0.wp.com/ottopress.com/wp-content/plugins/classic-smilies/img/icon_wink.gif?w=700" alt=";)" class="wp-smiley" data-recalc-dims="1" /> </p>
<pre class="brush: php; title: ; notranslate" title="">
&lt;?php
/*
Plugin Name: Google MP3 Player
Plugin URI: http://ottodestruct.com/
Description: Turn MP3 links into an embedded audio player
Author: Otto
Version: 1.0
Author URI: http://ottodestruct.com
*/

add_filter ( 'the_content', 'googlemp3_embed' );
function googlemp3_embed($text) {
	// change links created by the add audio link system
	$text = preg_replace_callback ('#^(&lt;p&gt;)?&lt;a.*href=[\'&quot;](http://.*/.*\.mp3)[\'&quot;].*&gt;.*&lt;/a&gt;(&lt;/p&gt;|&lt;br /&gt;)?#im', 'googlemp3_callback', $text);

	return $text;
}

function googlemp3_callback($match) {
	// edit width and height here
	$width = 400;
	$height = 27;
	return &quot;{$match[1]}
&lt;embed src='http://www.google.com/reader/ui/3523697345-audio-player.swf' flashvars='audioUrl={$match[2]}' width='{$width}' height='{$height}' pluginspage='http://www.macromedia.com/go/getflashplayer'&gt;&lt;/embed&gt;&lt;br /&gt;
&lt;a href='{$match[2]}'&gt;Download MP3 file&lt;/a&gt;
{$match[3]}&quot;;
}
</pre>
<p>This is mainly intended as a demo. There&#8217;s more full featured plugins for this sort of thing in the <a title="WordPress Plugins Directory" href="http://wordpress.org/extend/plugins/">plugins directory</a>. If you need to embed audio, using one of them might be a better way to go.</p>
				</div>

<div style="clear:both;"><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/80' onclick='this.focus(); this.select();' />
</span></div>

				<div class="postmetadata">
					Tags: <a href="http://ottopress.com/tag/audio/" rel="tag">audio</a>, <a href="http://ottopress.com/tag/flash/" rel="tag">flash</a>, <a href="http://ottopress.com/tag/google/" rel="tag">google</a>, <a href="http://ottopress.com/tag/mp3/" rel="tag">mp3</a>, <a href="http://ottopress.com/tag/player/" rel="tag">player</a>, <a href="http://ottopress.com/tag/wordpress-2/" rel="tag">WordPress</a><br />					Category: <a href="http://ottopress.com/category/code/" title="View all posts in Code" rel="category tag">Code</a>, <a href="http://ottopress.com/category/wordpress/" title="View all posts in WordPress" rel="category tag">WordPress</a>&nbsp;&nbsp;|&nbsp;
					<a href="http://ottopress.com/2010/how-to-add-audio-to-wordpress-posts/#comments" title="Comment on How to Add Audio to WordPress Posts">20 Comments</a>									 </div>
			</div>			<div id="post-306" class="post-306 post type-post status-publish format-standard hentry category-wordpress tag-authors tag-categories tag-post-formats tag-tags tag-taxonomies tag-theme" itemprop="blogPosts" itemscope itemtype="http://schema.org/BlogPosting">
				<h2 class="posttitle"><a href="http://ottopress.com/2010/post-types-and-formats-and-taxonomies-oh-my/" rel="bookmark" title="Permanent Link to Post types and formats and taxonomies, oh my!" itemprop="url"><span itemprop="name">Post types and formats and taxonomies, oh my!</span></a></h2>
				<div class="postmetadata">November 12, 2010, 11:00 am <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
				<div class="postentry" itemprop="description">
					<p>A lot of people have been debating back and forth lately about post formats and custom post formats. This discussion also gets all confused with post types, and custom taxonomies, and categories, and tags&#8230; It&#8217;s time for some clarity. Mark had a <a href="http://markjaquith.wordpress.com/2010/11/12/post-formats-vs-custom-post-types/">really good post</a> on the topic, but I think this needs to be explored in more detail.</p>
<p>Also, can&#8217;t have a good explanation without a bad analogy. I mean, this is the <em>internet</em>, right? So I should probably try to relate it to cars somehow.</p>
<h3>A Post Type as a Car</h3>
<p>Okay, so let&#8217;s say we have a post type. It&#8217;s called &#8220;car&#8221;. Anything that even vaguely resembles a car (including trucks, SUVs, jeeps, fire engines) gets lumped together in this post type.</p>
<p>We can categorize cars by type: Truck. Van. Hummer. Ford. Whatever.</p>
<p>We can add tags to cars: Four-door. Premium-sound. 6-disc-changer. Etc.</p>
<p>We can come up with custom taxonomies for them: A Color taxonomy could contain red, blue, black, silver, white, brown, etc.</p>
<p>The point here is that the post type is the thing itself, the various taxonomies are merely descriptions of it. You wouldn&#8217;t have both a &#8220;car&#8221; and a &#8220;truck&#8221; post type, because those are the same type of thing. If you prefer to be generic, you could make your post_type into &#8220;automobile&#8221;, which sorta fits both. That&#8217;s just a matter of naming choice.</p>
<p>Post types are <strong>NOUNS</strong>. Taxonomy terms are <strong>ADJECTIVES</strong>. Taxonomies themselves are <strong>related groups of adjectives</strong>.</p>
<p>This is why people using post types for things like Podcasts or Comic Strips or Video or something else are just fundamentally wrong. They&#8217;re using different nouns to describe the same thing, when they should be using the adjectives to sort out what those things are.</p>
<h3>Displaying Different Things Differently</h3>
<p>Historically with WordPress, categories have been used for more than just ways to classify posts. They&#8217;ve often been used to define different ways of displaying something.</p>
<p>The classic example is an &#8220;aside&#8221;. An aside has been traditionally defined as, basically, a short form post. <a href="http://ma.tt">Matt</a> loves asides and he uses them far more often than long format posts:</p>
<div id="attachment_307" style="width: 780px" class="wp-caption alignnone"><a href="http://i1.wp.com/ottopress.com/files/2010/11/mattaside.png"><img class="size-full wp-image-307" title="mattaside" src="http://i1.wp.com/ottopress.com/files/2010/11/mattaside.png?resize=700%2C371" alt="A couple of aside posts on ma.tt" data-recalc-dims="1" /></a><p class="wp-caption-text">A couple of aside posts on ma.tt</p></div>
<p>Matt also uses a special format for his gallery posts:</p>
<div id="attachment_309" style="width: 784px" class="wp-caption alignnone"><a href="http://i0.wp.com/ottopress.com/files/2010/11/mattgallery.png"><img class="size-full wp-image-309" title="mattgallery" src="http://i1.wp.com/ottopress.com/files/2010/11/mattgallery.png?resize=700%2C338" alt="One of ma.tt's gallery posts" data-recalc-dims="1" /></a><p class="wp-caption-text">One of ma.tt&#39;s gallery posts</p></div>
<p>Compare these to his normal long format posts:</p>
<div id="attachment_308" style="width: 782px" class="wp-caption alignnone"><a href="http://i1.wp.com/ottopress.com/files/2010/11/mattessay.png"><img class="size-full wp-image-308" title="mattessay" src="http://i1.wp.com/ottopress.com/files/2010/11/mattessay.png?resize=700%2C221" alt="A normal long format post on ma.tt" data-recalc-dims="1" /></a><p class="wp-caption-text">A normal long format post on ma.tt</p></div>
<p>You can easily see some of the differences. Asides don&#8217;t display a title. Galleries display a photo on the left hand side and the title is shortened and to the right. Long format posts have that double line underneath them, and also show the categories (essays in the above case).</p>
<p>The way he does these, and the way they have traditionally been done in WordPress in the past, is to co-opt categories. So he has an &#8220;Asides&#8221; category, and a &#8220;Gallery&#8221; category. In the code for his theme, he then has code that looks kinda like this:</p>
<pre class="brush: php; title: ; notranslate" title="">
if (in_category('asides')) {
   // stuff to display the aside format post here
} else if (in_category('gallery')) {
   // stuff to display the gallery format post here
} else {
   // code to display the normal format post here
}
</pre>
<p>Then, when he makes a post, he just picks the right category for it and that changes how it shows up on the site.</p>
<p>The problem is that this is a bit lame. Categories should be adjectives describing the post, not sorting them into functionally different buckets for use by the theme. Sure, you can use them that way, but that&#8217;s confusing to some users. You could use tags in the exact same way with the has_tag() function, but that doesn&#8217;t make it a good idea.</p>
<h3>Post Formats (coming soon to a WordPress 3.1 near you)</h3>
<p>Enter <a href="http://codex.wordpress.org/Post_Formats">Post Formats</a>. Tumblr has had these for a long time:</p>
<div id="attachment_310" style="width: 510px" class="wp-caption alignnone"><a href="http://i1.wp.com/ottopress.com/files/2010/11/tumblrpostformats.jpg"><img class="size-full wp-image-310" title="tumblrpostformats" src="http://i1.wp.com/ottopress.com/files/2010/11/tumblrpostformats.jpg?resize=500%2C120" alt="Tumblr's post formats" data-recalc-dims="1" /></a><p class="wp-caption-text">Tumblr&#39;s post formats</p></div>
<p>Basically they just define a format for a post to fit into at display time. So the theme could say &#8220;asides won&#8217;t have a title displayed for them&#8221;, and voila. A theme can do something like this to define what formats it supports:</p>
<pre class="brush: php; title: ; notranslate" title="">
add_theme_support( 'post-formats', array( 'aside', 'gallery' ) );
</pre>
<p>And it can do something like this when displaying things differently:</p>
<pre class="brush: php; title: ; notranslate" title="">
if ( has_post_format( 'aside' ) ) {
   // display the aside format
}
</pre>
<p>So there we go. Theme authors can define what formats they support, and they can style those formats appropriately. And we didn&#8217;t use categories at all.</p>
<p>Additional: For those people trying to implement this in themes, post formats also add new styles to the post_class() call. You can use .format-XXX to style based on post formats on a post.</p>
<h3>Custom Post Formats and why you don&#8217;t need them</h3>
<p>As soon as this was announced, naturally theme authors got up in arms, because theme authors are a rowdy bunch of folks. They like to do things their own way. So there was instantly the question of &#8220;how do I add my own format&#8221;? The answer is: you don&#8217;t, nor should you even think about it.</p>
<p>Why? Why prevent customization? Think of it from the perspective of the user:</p>
<ul>
<li>They&#8217;ve got an existing set of posts.</li>
<li>Those posts have formats.</li>
<li>They switch to your theme, which uses some custom formats.</li>
<li>Now their own posts don&#8217;t display properly with the new theme, because it&#8217;s using a whole different set of formats.</li>
<li>Bad user experience, that is.</li>
</ul>
<p>Now, from the perspective of a theme author, I understand the reasoning here. You want to be able to display things differently.</p>
<p>The problem is that <em>you were already able to do that before</em>.</p>
<p>Custom taxonomies have been around a long time. All you had to do was to a) create a custom taxonomy (call it &#8220;mytheme_formats&#8221;), b) allow users to sort posts into your taxonomy, and c) display things differently in the theme based on the terms in that taxonomy.</p>
<p>Post Formats is just a taxonomy. It&#8217;s a set of adjectives, describing the nouns that are the posts. So now we have &#8220;aside posts&#8221; and &#8220;gallery posts&#8221; and &#8220;chat posts&#8221; and &#8220;video posts&#8221; and so on. If you want to make your own formats, then you&#8217;ve had that ability forever. Why have you not already used it?</p>
<p>The answer to why you didn&#8217;t do it before is because <em>there was no standard set of formats</em>.</p>
<p>Without a standard set to work with, users won&#8217;t have any idea what your formats mean. You have to write documentation. You have to educate the user. You have to explain what this weirdness in your theme is.</p>
<p>Post formats changes that. Now you have a standard set of formats, and the user, having used other themes that support those formats too, will have some idea of what they mean already. But in order for this to work, themes must all use the same basic formats. There has to be a standard set of adjectives to describe the posts.</p>
<p>If you want to create your own set, then create your own taxonomy and box to have your set in it. But don&#8217;t complain when users don&#8217;t understand why your theme&#8217;s formats don&#8217;t mesh with the formats of every other theme that does support them.</p>
<p>The point of standards is to be standard. You don&#8217;t have to support the standard, but you also will have to deal with the consequences of being non-standard.</p>
<h3>Summing up</h3>
<p>In the end, you want to present things to your users in a method that causes the least confusion. If your user wants to display things in a single stream, then those things need to be Posts. If the user wants different things in that stream to display in different ways, then you should use a taxonomy to do that, and the post format taxonomy provides a nice and easy way to standardize that and be compatible with other themes.</p>
<p>If you want to go it alone with custom things, feel free, but be aware of the risk.</p>
				</div>

<div style="clear:both;"><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/7z' onclick='this.focus(); this.select();' />
</span></div>

				<div class="postmetadata">
					Tags: <a href="http://ottopress.com/tag/authors/" rel="tag">authors</a>, <a href="http://ottopress.com/tag/categories/" rel="tag">categories</a>, <a href="http://ottopress.com/tag/post-formats/" rel="tag">post-formats</a>, <a href="http://ottopress.com/tag/tags/" rel="tag">tags</a>, <a href="http://ottopress.com/tag/taxonomies/" rel="tag">taxonomies</a>, <a href="http://ottopress.com/tag/theme/" rel="tag">theme</a><br />					Category: <a href="http://ottopress.com/category/wordpress/" title="View all posts in WordPress" rel="category tag">WordPress</a>&nbsp;&nbsp;|&nbsp;
					<a href="http://ottopress.com/2010/post-types-and-formats-and-taxonomies-oh-my/#comments" title="Comment on Post types and formats and taxonomies, oh my!">94 Comments</a>									 </div>
			</div>
		<div class="navigation">
			<div class="alignleft"></div>
			<div class="alignright"></div>
		</div>
		
	
	</div>
	<div id="sidebar">
		<ul>
			
			<li id="paypal-donate" class="widget widget_wpaypal"><h2 class="widgettitle">Buy Otto a Beer</h2>
<div style="margin-top:5px;margin-bottom:5px;text-align:left;">
		<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
		<p><input type="hidden" name="cmd" value="_xclick" />
		<input type="hidden" name="business" value="otto@ottodestruct.com" />
		<input type="hidden" name="item_name" value="Donation to Otto on WordPress" />
		<input type="hidden" name="item_number" value="0" />
		<input type="hidden" name="notify_url" value="" />
		<input type="hidden" name="no_shipping" value="1" /><input type="hidden" name="return" value="http://ottopress.com" />
		<input type="hidden" name="no_note" value="1" />
		<input type="hidden" name="tax" value="0" />
		<input type="hidden" name="bn" value="PP-DonationsBF" />
		<input type="hidden" name="on0" value="Website" />
		Currency: <br />
		<select id="currency_code" name="currency_code">
		<option value="USD">U.S. Dollars</option>
		<option value="AUD">Australian Dollars</option>
		<option value="CAD">Canadian Dollars</option>
		<option value="EUR">Euros</option>
		<option value="GBP">Pounds Sterling</option>
		<option value="JPY">Yen</option></select></p>
		<p>Amount: <br /><input type="text" name="amount" size="16" title="The amount you wish to donate" value="5.00" /></p>
		<p>Website(Optional): <br /><input type="text" size="16" title="Your website (will be displayed)" name="os0" value="" /></p><p><input class="ppimg" type="image" src="https://www.paypal.com/en_US/i/btn/x-click-but21.gif" name="submit" style="border:0;" alt="Make payments with PayPal - fast, free and secure" /></p></form></div></li>
<li id="text-7" class="widget widget_text">			<div class="textwidget">Hey, I also take Bitcoins! Send them to: </br>
<a href="bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg">
<img src="https://chart.googleapis.com/chart?chs=150x150&cht=qr&chl=bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg" /><br />
1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg</a></div>
		</li>
<li id="text-5" class="widget widget_text"><h2 class="widgettitle">Subscribe!</h2>
			<div class="textwidget"><!-- <a href="https://plus.google.com/111166992820603637934?prsrc=3" style="cursor:pointer;display:inline-block;text-decoration:none;color:#333;font:13px/16px arial,sans-serif;"><span style="display:inline-block;font-weight:bold;vertical-align:top;margin-right:5px;margin-top:8px;">Otto on WordPress</span><span style="display:inline-block;vertical-align:top;margin-right:15px;margin-top:8px;">on</span><img src="https://ssl.gstatic.com/images/icons/gplus-32.png" alt="" style="border:0;width:32px;height:32px;"/></a>
-->
<div class="g-plus" data-href="https://plus.google.com/111166992820603637934?rel=publisher" data-width="250" data-height="131" data-theme="light"></div>
</div>
		</li>
<li id="blog_subscription-3" class="widget jetpack_subscription_widget"><h2 class="widgettitle"><label for="subscribe-field"></label></h2>

		<form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-3">
			<p id="subscribe-text">Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p><p>Join 331 other subscribers</p>

			<p id="subscribe-email"><input type="text" name="email" value="Email Address" id="subscribe-field" onclick="if ( this.value == 'Email Address' ) { this.value = ''; }" onblur="if ( this.value == '' ) { this.value = 'Email Address'; }" /></p>

			<p id="subscribe-submit">
				<input type="hidden" name="action" value="subscribe" />
				<input type="hidden" name="source" value="http://ottopress.com/2010/11/" />
				<input type="hidden" name="sub-type" value="widget" />
				<input type="hidden" name="redirect_fragment" value="blog_subscription-3" />
								<input type="submit" value="Subscribe" name="jetpack_subscriptions_widget" />
			</p>
		</form>

		
</li>
<li id="text-3" class="widget widget_text"><h2 class="widgettitle">Email Me</h2>
			<div class="textwidget"><ul><li><span class="vcard microid-mailto+http:sha1:23e9670868f6d2b16fe1f6b3db80c8f0423a082a">
<span style="display:none;">
<span class="adr">
 <span class="locality">Memphis</span>,
 <span class="region">TN</span>
 <span class="postal-code">38103</span>
 <span class="country-name">U.S.A.</span>
</span>
<a class="url fn" href="http://ottodestruct.com">Otto</a>
<span class="uid">240cf86e-5cad-11dc-8314-0800200c9a66</span>
</span>
<a class="email" href="mailto:otto@ottodestruct.com">otto@ottodestruct.com</a></span></li></ul>
<a rel="author" href="https://plus.google.com/100201852715113506716?rel=author">
  <img src="https://ssl.gstatic.com/images/icons/gplus-16.png" width="16" height="16">
</a>
</a>
<!-- 

This rant is hidden in HTML comments. If I pointed you to it, then you probably emailed me about the fact that my email address is in plaintext directly above this comment. If you happened to run across it because you just like looking at HTML comments, well, easter egg! :)

YES, that is a bare mailto: href above. 
YES, that is my real email address. 
And YES, it's intentional.

Obfuscating your email address on the web is stupid. 

Firstly, hiding your email address doesn't prevent spam. Spammers get addresses in bulk from mailing lists and websites and other sources. Sure, some scrapers exist, but they are by far the minority of the sources for email lists.

Secondly, hiding your email address ruins the whole point of email. The purpose of publishing my email address is so that anybody, and I do mean *anybody*, can email me. Before the days of cell phones, your phone number and physical address used to be published in a big book that everybody received, for free, on a semi-annual basis. It had distinctive yellow pages in it. Your contact information is not, and never was supposed to be, private information. Treating it as such is stupid.

Thirdly, I have great spam protection. For one, I use GMail, which has frankly incredible filtering because of the volume of mail they deal with. For another, I use various sets of filters to categorize incoming mail into various categories of things. Hell, I can even run statistics on it, if I want. This is a much better solution than continually giving out fake email addresses, or using +stuff to figure out who sent what where... I'd prefer to simply let my filters deal with it instead. 

Finally, if you're one of those systems that scours the web and/or social networks for visible email addresses and then automatically emails that person to let them know that their address is visible, then by all means please just fuck off and die. You're part of the problem. On the other hand, if you're just a regular guy with good intentions, then this doesn't apply to you. :)

Just my 2 cents.

--></div>
		</li>
<li id="categories-2" class="widget widget_categories"><h2 class="widgettitle">Categories</h2>
		<ul>
	<li class="cat-item cat-item-573"><a href="http://ottopress.com/category/code/" title="View all posts filed under Code">Code</a>
</li>
	<li class="cat-item cat-item-574"><a href="http://ottopress.com/category/other/" title="View all posts filed under Other">Other</a>
</li>
	<li class="cat-item cat-item-575"><a href="http://ottopress.com/category/rants/" title="View all posts filed under Rants">Rants</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://ottopress.com/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
	<li class="cat-item cat-item-576"><a href="http://ottopress.com/category/wordpress/" title="View all posts filed under WordPress">WordPress</a>
</li>
		</ul>
</li>
<li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>
		<ul>
	<li><a href='http://ottopress.com/2014/02/'>February 2014</a></li>
	<li><a href='http://ottopress.com/2013/11/'>November 2013</a></li>
	<li><a href='http://ottopress.com/2013/10/'>October 2013</a></li>
	<li><a href='http://ottopress.com/2013/06/'>June 2013</a></li>
	<li><a href='http://ottopress.com/2013/03/'>March 2013</a></li>
	<li><a href='http://ottopress.com/2012/11/'>November 2012</a></li>
	<li><a href='http://ottopress.com/2012/09/'>September 2012</a></li>
	<li><a href='http://ottopress.com/2012/08/'>August 2012</a></li>
	<li><a href='http://ottopress.com/2012/07/'>July 2012</a></li>
	<li><a href='http://ottopress.com/2012/05/'>May 2012</a></li>
	<li><a href='http://ottopress.com/2012/02/'>February 2012</a></li>
	<li><a href='http://ottopress.com/2012/01/'>January 2012</a></li>
	<li><a href='http://ottopress.com/2011/12/'>December 2011</a></li>
	<li><a href='http://ottopress.com/2011/11/'>November 2011</a></li>
	<li><a href='http://ottopress.com/2011/10/'>October 2011</a></li>
	<li><a href='http://ottopress.com/2011/09/'>September 2011</a></li>
	<li><a href='http://ottopress.com/2011/08/'>August 2011</a></li>
	<li><a href='http://ottopress.com/2011/07/'>July 2011</a></li>
	<li><a href='http://ottopress.com/2011/06/'>June 2011</a></li>
	<li><a href='http://ottopress.com/2011/05/'>May 2011</a></li>
	<li><a href='http://ottopress.com/2011/04/'>April 2011</a></li>
	<li><a href='http://ottopress.com/2011/03/'>March 2011</a></li>
	<li><a href='http://ottopress.com/2011/02/'>February 2011</a></li>
	<li><a href='http://ottopress.com/2011/01/'>January 2011</a></li>
	<li><a href='http://ottopress.com/2010/12/'>December 2010</a></li>
	<li><a href='http://ottopress.com/2010/11/'>November 2010</a></li>
	<li><a href='http://ottopress.com/2010/10/'>October 2010</a></li>
	<li><a href='http://ottopress.com/2010/09/'>September 2010</a></li>
	<li><a href='http://ottopress.com/2010/08/'>August 2010</a></li>
	<li><a href='http://ottopress.com/2010/06/'>June 2010</a></li>
	<li><a href='http://ottopress.com/2010/05/'>May 2010</a></li>
	<li><a href='http://ottopress.com/2010/04/'>April 2010</a></li>
	<li><a href='http://ottopress.com/2010/03/'>March 2010</a></li>
	<li><a href='http://ottopress.com/2010/02/'>February 2010</a></li>
	<li><a href='http://ottopress.com/2009/11/'>November 2009</a></li>
	<li><a href='http://ottopress.com/2009/09/'>September 2009</a></li>
	<li><a href='http://ottopress.com/2008/09/'>September 2008</a></li>
		</ul>
</li>
		<li id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widgettitle">Recent Posts</h2>
		<ul>
					<li>
				<a href="http://ottopress.com/2014/better-know-a-vulnerability-cross-site-request-forgery-csrf/">Better Know a Vulnerability: Cross Site Request Forgery (CSRF)</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/better-know-a-vulnerability-sql-injection/">Better Know a Vulnerability: SQL Injection</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/language-packs-101-prepwork/">Language Packs 101 &#8211; Prepwork</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/slides-a-presentation-theme/">Slides: A Presentation Theme</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/im-not-a-fan-of-orange/">I&#8217;m not a fan of orange&#8230;</a>
						</li>
				</ul>
		</li>
<li id="text-6" class="widget widget_text"><h2 class="widgettitle">WP Core Contributions</h2>
			<div class="textwidget"><p>
<a href='http://core.trac.wordpress.org/changeset/28072'>[28072]</a> - <a href='http://core.trac.wordpress.org/ticket/19393'>#19393</a><br />
<a href='http://core.trac.wordpress.org/changeset/27522'>[27522]</a> - <a href='http://core.trac.wordpress.org/ticket/19889'>#19889</a><br />
<a href='http://core.trac.wordpress.org/changeset/27399'>[27399]</a> - <a href='http://core.trac.wordpress.org/ticket/25665'>#25665</a><br />
<a href='http://core.trac.wordpress.org/changeset/26978'>[26978]</a> - <a href='http://core.trac.wordpress.org/ticket/23149'>#23149</a><br />
<a href='http://core.trac.wordpress.org/changeset/26711'>[26711]</a> - <a href='http://core.trac.wordpress.org/ticket/21442'>#21442</a><br />
<a href='http://core.trac.wordpress.org/changeset/26072'>[26072]</a> - <a href='http://core.trac.wordpress.org/ticket/25858'>#25858</a><br />
<a href='http://core.trac.wordpress.org/changeset/22152'>[22152]</a> - <a href='http://core.trac.wordpress.org/ticket/21914'>#21914</a><br />
<a href='http://core.trac.wordpress.org/changeset/22026'>[22026]</a> - <a href='http://core.trac.wordpress.org/ticket/22002'>#22002</a><br />
<a href='http://core.trac.wordpress.org/changeset/21839'>[21839]</a> - <a href='http://core.trac.wordpress.org/ticket/16996'>#16996</a><br />
<a href='http://core.trac.wordpress.org/changeset/21802'>[21802]</a> - <a href='http://core.trac.wordpress.org/ticket/18674'>#18674</a><br />
<a href='http://core.trac.wordpress.org/changeset/21776'>[21776]</a> - <a href='http://core.trac.wordpress.org/ticket/13729'>#13729</a><br />
<a href='http://core.trac.wordpress.org/changeset/21609'>[21609]</a> - <a href='http://core.trac.wordpress.org/ticket/19324'>#19324</a><br />
<a href='http://core.trac.wordpress.org/changeset/20916'>[20916]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20784'>[20784]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20783'>[20783]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20267'>[20267]</a> - <a href='http://core.trac.wordpress.org/ticket/13774'>#13774</a><br />
<a href='http://core.trac.wordpress.org/changeset/19721'>[19721]</a> - <a href='http://core.trac.wordpress.org/ticket/19626'>#19626</a><br />
<a href='http://core.trac.wordpress.org/changeset/19003'>[19003]</a> - <a href="http://core.trac.wordpress.org/ticket/17406">#17406</a><br />
<a href='http://core.trac.wordpress.org/changeset/18741'>[18741]</a> - <a href="http://core.trac.wordpress.org/ticket/15473">#15473</a><br />
<a href='http://core.trac.wordpress.org/changeset/18602'>[18602]</a> - <a href="http://core.trac.wordpress.org/ticket/18230">#18230</a><br />
<a href='http://core.trac.wordpress.org/changeset/18541'>[18541]</a> - <a href="http://core.trac.wordpress.org/ticket/16687">#16687</a><br />
<a href='http://core.trac.wordpress.org/changeset/18205'>[18205]</a> - <a href="http://core.trac.wordpress.org/ticket/17148">#17148</a><br />
<a href='http://core.trac.wordpress.org/changeset/17254'>[17254]</a> - <a href="http://core.trac.wordpress.org/ticket/16192">#16192</a><br />
<a href='http://core.trac.wordpress.org/changeset/16555'>[16555]</a> - <a href="http://core.trac.wordpress.org/ticket/12891">#12891</a><br />
<a href='http://core.trac.wordpress.org/changeset/16284'>[16284]</a> - <a href="http://core.trac.wordpress.org/ticket/13324">#13324</a><br />
<a href='http://core.trac.wordpress.org/changeset/13420'>[13420]</a> - <a href="http://core.trac.wordpress.org/ticket/12291">#12291</a><br />
<a href='http://core.trac.wordpress.org/changeset/12581'>[12581]</a> - <a href="http://core.trac.wordpress.org/ticket/7225">#7225</a><br />
<a href='http://core.trac.wordpress.org/changeset/11738'>[11738]</a> - <a href="http://core.trac.wordpress.org/ticket/10145">#10145</a><br />
<a href='http://core.trac.wordpress.org/changeset/11329'>[11329]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10962'>[10962]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10757'>[10757]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10753'>[10753]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10252'>[10252]</a> - <a href="http://core.trac.wordpress.org/ticket/6791">#6791</a><br />
<a href='http://core.trac.wordpress.org/changeset/9276'>[9276]</a> - <a href="http://core.trac.wordpress.org/ticket/7124">#7124</a><br />
<a href='http://core.trac.wordpress.org/changeset/9209'>[9209]</a> - <a href="http://core.trac.wordpress.org/ticket/7901">#7901</a><br />
<a href='http://core.trac.wordpress.org/changeset/9207'>[9207]</a> - <a href="http://core.trac.wordpress.org/ticket/7635">#7635</a><br />
<a href='http://core.trac.wordpress.org/changeset/9139'>[9139]</a> - <a href="http://core.trac.wordpress.org/ticket/7847">#7847</a><br />
<a href='http://core.trac.wordpress.org/changeset/9089'>[9089]</a> - <a href="http://core.trac.wordpress.org/ticket/7772">#7772</a><br />
<a href='http://core.trac.wordpress.org/changeset/8968'>[8968]</a> - <a href="http://core.trac.wordpress.org/ticket/7761">#7761</a><br />
<a href='http://core.trac.wordpress.org/changeset/8285'>[8285]</a> - <a href="http://core.trac.wordpress.org/ticket/6879">#6879</a><br />
<a href='http://core.trac.wordpress.org/changeset/8208'>[8208]</a> - <a href="http://core.trac.wordpress.org/ticket/4448">#4448</a><br />
<a href='http://core.trac.wordpress.org/changeset/8132'>[8132]</a> - <a href="http://core.trac.wordpress.org/ticket/4954">#4954</a><br />
<a href='http://core.trac.wordpress.org/changeset/8131'>[8131]</a> - <a href="http://core.trac.wordpress.org/ticket/6590">#6590</a><br />
<a href='http://core.trac.wordpress.org/changeset/7869'>[7869]</a> - <a href="http://core.trac.wordpress.org/ticket/6513">#6513</a><br />
<a href='http://core.trac.wordpress.org/changeset/7647'>[7647]</a> - <a href="http://core.trac.wordpress.org/ticket/6608">#6608</a><br />
<a href='http://core.trac.wordpress.org/changeset/7461'>[7461]</a> - <a href="http://core.trac.wordpress.org/ticket/6339">#6339</a><br />
<a href='http://core.trac.wordpress.org/changeset/6873'>[6873]</a> - <a href="http://core.trac.wordpress.org/ticket/4986">#4986</a><br />
<a href='http://core.trac.wordpress.org/changeset/6760'>[6760]</a> - <a href="http://core.trac.wordpress.org/ticket/4617">#4617</a><br />
<a href='http://core.trac.wordpress.org/changeset/6616'>[6616]</a> - <a href="http://core.trac.wordpress.org/ticket/5155">#5155</a><br />
<a href='http://core.trac.wordpress.org/changeset/6439'>[6439]</a> - <a href="http://core.trac.wordpress.org/ticket/2805">#2805</a><br />
<a href='http://core.trac.wordpress.org/changeset/6091'>[6091]</a> - <a href="http://core.trac.wordpress.org/ticket/4182">#4182</a><br />
<a href='http://core.trac.wordpress.org/changeset/6086'>[6086]</a> - <a href="http://core.trac.wordpress.org/ticket/4946">#4946</a><br />
<a href='http://core.trac.wordpress.org/changeset/5986'>[5986]</a> - <a href="http://core.trac.wordpress.org/ticket/4873">#4873</a><br />
<a href='http://core.trac.wordpress.org/changeset/5982'>[5982]</a> - <a href="http://core.trac.wordpress.org/ticket/4800">#4800</a><br />
<a href='http://core.trac.wordpress.org/changeset/5958'>[5958]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5920'>[5920]</a> - <a href="http://core.trac.wordpress.org/ticket/4703">#4703</a><br />
<a href='http://core.trac.wordpress.org/changeset/5910'>[5910]</a> - <a href="http://core.trac.wordpress.org/ticket/4654">#4654</a><br />
<a href='http://core.trac.wordpress.org/changeset/5881'>[5881]</a> - <a href="http://core.trac.wordpress.org/ticket/4704">#4704</a><br />
<a href='http://core.trac.wordpress.org/changeset/5857'>[5857]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5848'>[5848]</a> - <a href="http://core.trac.wordpress.org/ticket/4499">#4499</a><br />
<a href='http://core.trac.wordpress.org/changeset/5845'>[5845]</a> - <a href="http://core.trac.wordpress.org/ticket/4547">#4547</a><br />
<a href='http://core.trac.wordpress.org/changeset/5317'>[5317]</a> - <a href="http://core.trac.wordpress.org/ticket/4169">#4169</a><br />
<a href='http://core.trac.wordpress.org/changeset/5154'>[5154]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5151'>[5151]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5104'>[5104]</a> - <a href="http://core.trac.wordpress.org/ticket/3790">#3790</a><br />
<a href='http://core.trac.wordpress.org/changeset/4964'>[4964]</a> - <a href="http://core.trac.wordpress.org/ticket/3898">#3898</a><br />
</p></div>
		</li>
		</ul>
	</div>

</div>
<div id="footer">
<div style="float:left;"><a href="http://internetdefenseleague.org"><img src="http://internetdefenseleague.org/images/badges/final/footer_badge.png" alt="Member of The Internet Defense League" /></a></div>
<a href="http://ottopress.com/feed/">Entries (RSS)</a> and <a href="http://ottopress.com/comments/feed/">Comments (RSS)</a>.<br />
<span about="http://ottodestruct.com/" xmlns:cc="http://creativecommons.org/ns#">
This page, by <a property="cc:attributionName" rel="cc:attributionURL" href="http://ottodestruct.com/">Otto</a>, is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-ShareAlike License</a>.</span><br />
Powered by <a href="http://wordpress.org/" title="Powered by WordPress.">WordPress</a>.<br />
		<script type="text/javascript">
		//<![CDATA[
		var infiniteScroll = {"settings":{"id":"content","ajaxurl":"http:\/\/ottopress.com\/?infinity=scrolling","type":"scroll","wrapper":false,"wrapper_class":"infinite-wrap","footer":false,"click_handle":"1","text":"Older posts","totop":"Scroll back to top","currentday":"30.11.10","order":"DESC","scripts":[],"styles":[],"google_analytics":false,"offset":0,"history":{"host":"ottopress.com","path":"\/2010\/11\/page\/%d\/","use_trailing_slashes":true,"parameters":""},"query_args":{"year":2010,"monthnum":11,"error":"","m":"","p":0,"post_parent":"","subpost":"","subpost_id":"","attachment":"","attachment_id":0,"name":"","static":"","pagename":"","page_id":0,"second":"","minute":"","hour":"","day":0,"w":0,"category_name":"","tag":"","cat":"","tag_id":"","author":"","author_name":"","feed":"","tb":"","paged":0,"comments_popup":"","meta_key":"","meta_value":"","preview":"","s":"","sentence":"","fields":"","menu_order":"","category__in":[],"category__not_in":[],"category__and":[],"post__in":[],"post__not_in":[],"tag__in":[],"tag__not_in":[],"tag__and":[],"tag_slug__in":[],"tag_slug__and":[],"post_parent__in":[],"post_parent__not_in":[],"author__in":[],"author__not_in":[],"posts_per_page":7,"ignore_sticky_posts":false,"suppress_filters":false,"cache_results":true,"update_post_term_cache":true,"update_post_meta_cache":true,"post_type":"","nopaging":false,"comments_per_page":"50","no_found_rows":false,"order":"DESC"},"last_post_date":"2010-11-12 11:00:12","stats":"blog=12342457&host=ottopress.com&v=ext&j=1:3.0.2&x_pagetype=infinite-jetpack"}};
		//]]>
		</script>
		<img alt='css.php' src="http://ottopress.com/wp-content/plugins/cookies-for-comments/css.php?k=c6a73cb029f035cdaa9e9e8336d25169&amp;o=i&amp;t=1162553174" width='1' height='1' />	<div style="display:none">
	</div>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/infinite-scroll/infinity.js?ver=20140514'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/photon/photon.js?ver=20130122'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var mejsL10n = {"language":"en-US","strings":{"Close":"Close","Fullscreen":"Fullscreen","Download File":"Download File","Download Video":"Download Video","Play\/Pause":"Play\/Pause","Mute Toggle":"Mute Toggle","None":"None","Turn off Fullscreen":"Turn off Fullscreen","Go Fullscreen":"Go Fullscreen","Unmute":"Unmute","Mute":"Mute","Captions\/Subtitles":"Captions\/Subtitles"}};
var _wpmejsSettings = {"pluginPath":"\/wp-includes\/js\/mediaelement\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/mediaelement-and-player.min.js?ver=2.14.2'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=3.9.1'></script>
<script type="text/javascript">
			jQuery.extend( infiniteScroll.settings.scripts, ["jquery-core","jquery-migrate","jquery","tiled-gallery","spin","jquery.spin","syntaxhighlighter-core","syntaxhighlighter-brush-php","the-neverending-homepage","jetpack-photon","devicepx","mediaelement","wp-mediaelement","grofiles-cards","wpgroho"] );
			jQuery.extend( infiniteScroll.settings.styles, ["yarppWidgetCss","jetpack-subscriptions","the-neverending-homepage","tiled-gallery","mediaelement","wp-mediaelement"] );
		</script>
	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:3.0.2',blog:'12342457',post:'0',tz:'-5'});
	var load_cmc = function(){linktracker_init(12342457,0,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script></div></div>

<script type="text/javascript">
    window._idl = {};
    _idl.variant = "modal";
    (function() {
        var idl = document.createElement('script');
        idl.type = 'text/javascript';
        idl.async = true;
        idl.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'members.internetdefenseleague.org/include/?url=' + (_idl.url || '') + '&campaign=' + (_idl.campaign || '') + '&variant=' + (_idl.variant || 'banner');
        document.getElementsByTagName('body')[0].appendChild(idl);
    })();
</script>

</body>
</html>

