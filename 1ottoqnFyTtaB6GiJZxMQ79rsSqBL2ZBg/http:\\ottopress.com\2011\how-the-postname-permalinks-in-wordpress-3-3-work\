http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/
HTTP/1.1 200 OK
Server: nginx/1.4.4
Date: Wed, 23 Jul 2014 15:43:52 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Pingback: http://ottopress.com/xmlrpc.php
Link: <http://otto42.com/b2>; rel=shortlink

<!DOCTYPE html>
<html lang="en-US">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>How the Postname Permalinks in WordPress 3.3 Work &raquo; Otto on WordPress</title>

<link rel="profile" href="http://www.w3.org/1999/xhtml/vocab" />
<link rel="me" type="text/html" href="https://plus.google.com/100201852715113506716" />

<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/style.css" type="text/css" media="screen" />
<link rel="stylesheet" href="http://ottopress.com/wp-content/themes/fluid-blue/print.css" type="text/css" media="print" />

<link rel="pingback" href="http://ottopress.com/xmlrpc.php" />

<meta property="og:email" content="otto@ottodestruct.com" />
<meta http-equiv="X-UA-Compatible" content="chrome=1">

<script type="text/javascript">var description = '';</script>
<!-- Jetpack Site Verification Tags -->
<meta name="google-site-verification" content="IvlRFnRHu9RIiAiOS-bo-8vU4ju4V6_b4U3M_-1jlXQ" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Feed" href="http://ottopress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; Comments Feed" href="http://ottopress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Otto on WordPress &raquo; How the Postname Permalinks in WordPress 3.3 Work Comments Feed" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/feed/" />
<link rel='stylesheet' id='yarppWidgetCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/widget.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-subscriptions-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/subscriptions/subscriptions.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='tiled-gallery-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.css?ver=2012-09-21' type='text/css' media='all' />
<link rel='stylesheet' id='mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/mediaelementplayer.min.css?ver=2.13.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-mediaelement-css'  href='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/jquery/jquery-migrate.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/tiled-gallery/tiled-gallery/tiled-gallery.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottodestruct.com/op/wp-content/plugins/gravatar-box/jquery.md5.js?ver=1.0'></script>
<script type='text/javascript' src='http://ottodestruct.com/op/wp-content/plugins/gravatar-box/gravbox.js?ver=1.0'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://ottopress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://ottopress.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Twitter adds oEmbed &#8211; Adding it to WordPress with a snippet' href='http://ottopress.com/2011/twitter-adds-oembed-adding-it-to-wordpress-with-a-snippet/' />
<link rel='next' title='SFC and New Facebook Changes' href='http://ottopress.com/2011/sfc-and-new-facebook-changes/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/' />
<link rel='shortlink' href='http://otto42.com/b2' />
<meta name="pinterest" content="nopin" /><link rel="microsummary" type="text/plain" href="/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?microsummary=1" /><link rel="shortcut icon" href="http://ottopress.com/wp-content/wp-logo-vs.png" /><link rel="author" href="https://plus.google.com/+SamuelOttoWood" title="Samuel “Otto” Wood on Google+" /> 

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="How the Postname Permalinks in WordPress 3.3 Work" />
<meta property="og:url" content="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/" />
<meta property="og:description" content="So, I first wrote about this topic on the wp-hackers list back in January 2009, explaining some of the scaling issues involved with having ambiguous rewrite rules and loads of static Pages in WordP..." />
<meta property="article:published_time" content="2011-12-22T22:49:41+00:00" />
<meta property="article:modified_time" content="2011-12-22T23:02:21+00:00" />
<meta property="article:author" content="http://ottopress.com/author/otto/" />
<meta property="og:site_name" content="Otto on WordPress" />
<meta property="og:image" content="http://ottopress.com/files/2011/12/regex.jpg" />
<meta name="twitter:site" content="@ottodestruct" />
<meta name="twitter:image" content="http://ottopress.com/files/2011/12/regex.jpg?w=240" />
<meta name="twitter:card" content="summary" />
<style type="text/css" id="syntaxhighlighteranchor"></style>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-27538437-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>

<body class="single single-post postid-731 single-format-standard">
<script type="text/javascript">
if (top.location != self.location) top.location.replace(self.location);
</script>
<div id="page">
<div id="header">
	<div id="headertitle">
		<h1><a href="http://ottopress.com" title="Otto on WordPress: You have to use an Ottopress to get fresh squeezed Otto.">Otto on WordPress</a></h1>
		<p>You have to use an Ottopress to get fresh squeezed Otto.</p>
	</div> 
	<!-- Search box (If you prefer having search form as a sidebar widget, remove this block) -->
	<div class="search">
		<form method="get" id="searchform" action="http://ottopress.com/">
<input type="search" size="20" results="5" name="s" id="s" placeholder="Search..." speech="speech" x-webkit-speech="x-webkit-speech" onwebkitspeechchange="this.form.submit();" />
</form>
	</div> 
	<!-- Search ends here-->
		
</div>
<div id="navbar">
<div id="nav">
<div class="menu"><ul><li ><a href="http://ottopress.com/">Home</a></li><li class="page_item page-item-5 page_item_has_children"><a href="http://ottopress.com/wordpress-plugins/">WordPress Plugins</a><ul class='children'><li class="page_item page-item-205"><a href="http://ottopress.com/wordpress-plugins/atd-for-comments/">After The Deadline For Comments</a></li><li class="page_item page-item-21"><a href="http://ottopress.com/wordpress-plugins/atom-default-feed/">Atom Default Feed</a></li><li class="page_item page-item-965"><a href="http://ottopress.com/wordpress-plugins/dropbox-photo-sideloader/">Dropbox Photo Sideloader</a></li><li class="page_item page-item-15"><a href="http://ottopress.com/wordpress-plugins/gravatar-box/">Gravatar Box</a></li><li class="page_item page-item-32"><a href="http://ottopress.com/wordpress-plugins/php-code-widget/">PHP Code Widget</a></li><li class="page_item page-item-7"><a href="http://ottopress.com/wordpress-plugins/simple-facebook-connect/">Simple Facebook Connect</a></li><li class="page_item page-item-10"><a href="http://ottopress.com/wordpress-plugins/simple-twitter-connect/">Simple Twitter Connect</a></li><li class="page_item page-item-81"><a href="http://ottopress.com/wordpress-plugins/unicornify/">Unicornify</a></li></ul></li><li class="page_item page-item-374"><a href="http://ottopress.com/contact/">Contact Otto</a></li><li><a href="http://ottodestruct.com" title="Nothing to See Here">Nothing to See Here</a></li><li><a href="http://buyottoabeer.com" title="Otto on Beer">Otto on Beer</a></li></ul></div>
	</div>
</div>
<div id="wrapper">
	<div id="content">

			
		<div class="navigation">
			<div class="alignleft">&laquo; <a href="http://ottopress.com/2011/twitter-adds-oembed-adding-it-to-wordpress-with-a-snippet/" rel="prev">Twitter adds oEmbed &#8211; Adding it to WordPress with a snippet</a></div>
			<div class="alignright"><a href="http://ottopress.com/2011/sfc-and-new-facebook-changes/" rel="next">SFC and New Facebook Changes</a> &raquo;</div>
		</div>

		<div class="post" id="post-731">
			<h2 class="posttitle"><a href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/" rel="bookmark" title="Permanent Link to How the Postname Permalinks in WordPress 3.3 Work" itemprop="url"><span itemprop="name">How the Postname Permalinks in WordPress 3.3 Work</span></a></h2>
			<div style="clear:none" class="postmetadata">December 22, 2011, 4:49 pm <!-- by <span rel="author">Samuel “Otto” Wood</span> --></div>
			<div class="postentry">
				<div itemprop="articleBody"><p>So, I first wrote about this topic on the wp-hackers list <a href="http://lists.automattic.com/pipermail/wp-testers/2009-January/thread.html#11097">back in January 2009</a>, explaining some of the scaling issues involved with having ambiguous rewrite rules and loads of static Pages in WordPress. A year later the same topic came up again in the <a href="http://www.wptavern.com/forum/troubleshooting/1470-permalink-problem.html#post14268">WPTavern Forums</a>, and later I wrote <a href="http://ottopress.com/2010/category-in-permalinks-considered-harmful/">a blog post</a> about the issue in more detail. That post generated lots of questions and responses.</p>
<p>In August 2011, thanks to highly valuable input from Andy Skelton which gave me a critical insight needed to make it work, and with Jon Cave and Mark Jaquith doing testing (read: breaking my patches over and over again), I was able to <a href="http://core.trac.wordpress.org/changeset/18541">create a patch</a> which fixed the problem (note: my final patch was slightly over-complicated, Jon Cave later patched it again to simplify some of the handling). This patch is now in WordPress 3.3.</p>
<p>So I figured I&#8217;d write up a quick post explaining the patch, how it works, and the subsequent consequences of it.</p>
<h3><a href="http://www.nerdsnook.com/apparel/216-regex-t-shirt.html"><img class="alignright size-full wp-image-732" title="Now you have two problems." src="http://i2.wp.com/ottopress.com/files/2011/12/regex.jpg?resize=489%2C291" alt="Now you have two problems." data-recalc-dims="1" /></a>Quick Summary of the Problem</h3>
<p>The original underlying problem is that WordPress relies on a set of rules to determine what type of page you&#8217;re looking for, and it uses only the URL itself to do this. Basically, given /some/url/like/this, WordPress has to figure out a) what you&#8217;re trying to see and b) how to query for that data from the database. The only information it has to help it do this is called the &#8220;rewrite rules&#8221;, which is basically a big list of regular expressions that turn the &#8220;pretty&#8221; URL into variables used for the main WP_Query system.</p>
<p>The user of the WordPress system has direct access to exactly one of these rewrite rules, which is the &#8220;Custom Structure&#8221; on the Settings-&gt;Permalink page. This custom string can be used to change what the &#8220;single post&#8221; URLs look like.</p>
<p>The problem is that certain custom structures will interfere with existing structures. If you make a custom structure that doesn&#8217;t start with something easily identifiable, like a number, then the default rewrite rules wouldn&#8217;t be able to cope with it.</p>
<p>To work around this problem, WordPress detected it and uses a flag called &#8220;verbose_rewrite_rules&#8221;, which triggers everything into changing the list of rules into more verbose ones, making the ambiguous rules into unambiguous ones. It did this by the simple method of making all Pages into static rules.</p>
<p>This works fine, but it doesn&#8217;t scale to large numbers of Pages. Once you have about 50-100 static Pages or so, and you&#8217;re using an ambiguous custom structure, then the system tends to fall apart. Most of the time, the ruleset grows too large to fit into a single mySQL query, meaning that the rules can no longer be properly saved in the database and must be rebuilt each time. The most obvious effect when this happens is that the number of queries on every page load rises from the below 50 range to 2000+ queries, and the site slows down to snail speed.</p>
<h3>The &#8220;Fix&#8221;</h3>
<p>The solution to this problem is deeper than simple optimizations. Remember that I said &#8220;WordPress relies on a set of rules to determine what type of page you&#8217;re looking for, and it uses only the URL itself to do this&#8221;. Well, to fix the problem, we have to give WordPress more input than just the URL. Specifically, we make it able to find out what Pages exist in the database.</p>
<p>When you use an ambiguous custom structure, WordPress 3.3 still detects that, and it still sets the verbose_page_rules flag. However, the flag now doesn&#8217;t cause the Pages to be made unambiguous in the rules. Instead, it changes the way the rules work. Specifically, it causes the following to happen:</p>
<ol>
<li>The Page rules now get put in front of the Post rules, and</li>
<li>The actual matching process can do database queries to determine if the Page exists.</li>
</ol>
<p>So now what happens is that the Page matching rules are run first, and for an ambiguous case, they&#8217;ll indeed match the Page rule. However, for all Page matches, a call to the get_page_by_path function is made, to see if that Page actually exists. If the Page doesn&#8217;t exist in the database, then the rule gets skipped even though it matched, and then the Post&#8217;s custom structure rules take over and will match the URL.</p>
<h3>The Insight</h3>
<p>The first patch I made while at WordCamp Montreal used this same approach of calling get_page_by_path, but the problem with it was that get_page_by_path was a rather expensive function to call at the time, especially for long page URLs. It was still better than what existed already, so I submitted the patch anyway, but it was less than ideal.</p>
<p>When I was at WordCamp San Francisco in August, hanging around all these awesome core developers, Andy Skelton commented on it and suggested a different kind of query. His suggestion didn&#8217;t actually work out directly, but it did give me the final idea which I implemented in get_page_by_path. Basically, Andy suggested splitting the URL path up into components and then querying for each one. I realized that you could split the path up by components, <strong>query for all of them at once</strong>, and then do a loop through the URL components in reverse order to determine if the URL referred to a Page that existed in the database or not.</p>
<p>So basically, given a URL like /aaa/bbb/ccc/ddd, get_page_by_path now does this:</p>
<pre class="brush: sql; title: ; notranslate" title="">
SELECT ID, post_name, post_parent FROM $wpdb-&gt;posts WHERE post_name IN ('aaa','bbb','ccc','ddd') AND (post_type = 'page' OR post_type = 'attachment')
</pre>
<p>The results of this are stored in an array of objects using the ID as the array keys (a clever trick Andrew Nacin pointed out to me at the time).</p>
<p>By then looping through that array only once with a foreach, and comparing to the reversed form of the URL (ddd, ccc, bbb, aaa) you can make an algorithm that basically works like this:</p>
<pre class="brush: plain; title: ; notranslate" title="">
foreach(results as res) {
  if (res-&gt;post_name = 'ddd') {
    get the parent of res from the results array
     (if it's not in the array, then it can't be the parent of ddd, which is ccc and should be in the array)
    check to make sure parent is 'ccc',
    loop back to get the parent of ccc and repeat the process until you run out of parents
  }
}
</pre>
<p>This works because all the Pages in our /aaa/bbb/ccc/ddd hierarchy must be in the resulting array from that one query, if /aaa/bbb/ccc/ddd is a valid page. So you can quickly check, using that indexed ID key, to see if they are all there by working backwards. If they are all there, then you&#8217;ll eventually get to parent = zero (which is the root) and the post_name = &#8216;aaa&#8217;. If they&#8217;re not there, then the loop exits and you didn&#8217;t find the Page because it doesn&#8217;t actually exist.</p>
<p>So using this one query, you can check for the existence of a Page any number of levels deep fairly quickly and without lots of expensive database operations.</p>
<h3>Consequences</h3>
<p>There are still some drawbacks though.</p>
<p>In theory, you could break this by making lots and lots of Pages, if you also made their hierarchy go hundreds of levels deep and thus make the loop operation take a long time. This seems unlikely to me, or at least way more unlikely than somebody making a mere couple hundreds of Pages. Also, WordPress won&#8217;t let you use the same Page name twice <em>on the same level</em>, so you&#8217;d really have to try for it to make this take too long.</p>
<p>If you try to make a URL longer than around 900K or so, the query will break. Pretty sure it&#8217;d break before that though, and anyway most people can&#8217;t remember URLs with the contents of a whole book in them. <img src="http://i1.wp.com/ottopress.com/wp-content/plugins/classic-smilies/img/icon_wink.gif?w=700" alt=";)" class="wp-smiley" data-recalc-dims="1" /> </p>
<p>This also adds one SQL operation to every single Post page lookup. However, this is still better than having it break and try to run a few thousand queries every time in order to build rewrite rules which it can&#8217;t ultimately save. And the SQL being used is relatively fast, since post_name and post_type are both indexed fields.</p>
<p>Basically, for the very few and specific cases that had the problem, the speedup is dramatic and immediate. For the cases that use unambiguous rules, nothing has changed at all.</p>
<p>There&#8217;s still some bits that need to be fixed. Some of the code is duplicated in a couple of places and that needs to be merged. The pagename rewrite rule is a bit of a hack to avoid clashing, but it works everywhere even if it does make the regexp purist groan with dismay (<em>for critics of this, please know that I did indeed try to do this using a regexp comment to make the difference instead of the strange and silly expression, but it doesn&#8217;t work because the regexp needs to be in a PHP array key</em>).</p>
<p>Anyway, there you have it. I wrote the patch, but at least 5 other core developers contributed ideas and put in the grunt work in testing the result. A lot of brain power from these guys went into what is such a small little thing, really. A bit obscure, but I figured some people might like to read about it. <img src="http://i2.wp.com/ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif?w=700" alt=":)" class="wp-smiley" data-recalc-dims="1" /> </p>
<p>&nbsp;</p>
<div class="sharedaddy sd-block sd-social sd-gplus"><h3 class="sd-title">Google+</h3><div class="sd-content"><a href="https://plus.google.com/+SamuelOttoWood"><img src="https://lh5.googleusercontent.com/-sTIAD3oDYbs/AAAAAAAAAAI/AAAAAAAAGkQ/ZwW3H57HC8I/photo.jpg?sz=40" alt="Samuel “Otto” Wood" width="20" height="20" align="absmiddle" /> </a><a rel="author" href="https://plus.google.com/+SamuelOttoWood" class="gplus-profile">Samuel “Otto” Wood</a><span class="g-follow-wrapper"><span class="g-follow" data-href="https://plus.google.com/+SamuelOttoWood" data-rel="author" data-height="15"></span></span></div></div><div class='yarpp-related'>
<p class="yarpp">Related posts:</p><ol class="yarpp">
<li><a href="http://ottopress.com/2010/category-in-permalinks-considered-harmful/" rel="bookmark" title="Category in Permalinks Considered Harmful">Category in Permalinks Considered Harmful </a></li>
<li><a href="http://ottopress.com/2010/wordpress-3-0-and-custom-post-types/" rel="bookmark" title="WordPress 3.0 and Custom Post Types">WordPress 3.0 and Custom Post Types </a></li>
<li><a href="http://ottopress.com/2010/wordpress-protip-child-themes/" rel="bookmark" title="WordPress PROTIP: Child Themes">WordPress PROTIP: Child Themes </a></li>
<li><a href="http://ottopress.com/2011/creating-a-wordpress-site-using-svn/" rel="bookmark" title="Creating a WordPress site using SVN">Creating a WordPress site using SVN </a></li>
<li><a href="http://ottopress.com/2011/wordpress-3-2-beta-admin-tweak/" rel="bookmark" title="WordPress 3.2 Beta Admin Tweak">WordPress 3.2 Beta Admin Tweak </a></li>
</ol>
</div>
</div>
							</div>
<div><span class="post-shortlink">Shortlink: 
<input type='text' value='http://otto42.com/b2' onclick='this.focus(); this.select();' />
</span></div>

			<div class="postmetadata">
				<div class="postmetadata">
										Category: <a href="http://ottopress.com/category/code/" title="View all posts in Code" rel="category tag">Code</a>, <a href="http://ottopress.com/category/other/" title="View all posts in Other" rel="category tag">Other</a>, <a href="http://ottopress.com/category/wordpress/" title="View all posts in WordPress" rel="category tag">WordPress</a>					&nbsp;|&nbsp;&nbsp;<a href="#respond">Comment</a> (<a href='http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/feed/'>RSS</a>)					&nbsp;|&nbsp;&nbsp;<a href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/trackback/ " rel="trackback">Trackback</a>									 </div>
			</div>
    
		</div>
	<div id="comments">
	<h3>63 Comments </h3>
	<div class="navigation" style="clear:both">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>
	<div style="clear:both"></div>
	<ol class="commentlist">
		<li class="comment even thread-even depth-1 parent" id="comment-10308" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10308" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/c5cd629b9bad96fb402d908830faedf8?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Daniel</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10308">
		<time itemprop="dateCreated" datetime="2011-12-22T17:35:45+00:00">December 22, 2011 at 5:35 pm</time></a>	</div>

	<div itemprop="text"><p>So does this means that I can get rid of the post id from the url and it will still run fast? Or is this for pages only?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10308#respond' onclick='return addComment.moveForm("div-comment-10308", "10308", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-10312" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10312" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10312">
		<time itemprop="dateCreated" datetime="2011-12-22T20:16:08+00:00">December 22, 2011 at 8:16 pm</time></a>	</div>

	<div itemprop="text"><p>Yes. To the first question.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10312#respond' onclick='return addComment.moveForm("div-comment-10312", "10312", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-10309" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10309" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/d43bb4e348b0d3e41503731eb5072bb1?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://penibelst.de/' rel='external nofollow' class='url'>Anatol Broder</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10309">
		<time itemprop="dateCreated" datetime="2011-12-22T17:46:42+00:00">December 22, 2011 at 5:46 pm</time></a>	</div>

	<div itemprop="text"><p>You should more frequently meet your colleagues. A real life talk can be a huge inspiration.</p>
<p>What is about the speed of <code>%year%/%postname%</code>? This rule still untouched in 3.3, right?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10309#respond' onclick='return addComment.moveForm("div-comment-10309", "10309", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-10311" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10311" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10311">
		<time itemprop="dateCreated" datetime="2011-12-22T20:15:35+00:00">December 22, 2011 at 8:15 pm</time></a>	</div>

	<div itemprop="text"><p>I just got back from that sort of a meetup, actually. </p>
<p>And yes, the normal methods are unchanged.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10311#respond' onclick='return addComment.moveForm("div-comment-10311", "10311", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-10313" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10313" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/9f1574e8b6432f3d0135eb5a7481809e?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://jacobgsp.com' rel='external nofollow' class='url'>Jacob</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10313">
		<time itemprop="dateCreated" datetime="2011-12-23T01:50:05+00:00">December 23, 2011 at 1:50 am</time></a>	</div>

	<div itemprop="text"><p>I love the &#8220;if (res-&gt;post_name = &#8216;ddd&#8217;)&#8221; part <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_wink.gif" alt=";)" class="wp-smiley" /> </p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10313#respond' onclick='return addComment.moveForm("div-comment-10313", "10313", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-10315" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10315" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/ce2571c524eb0ecf60e07298838d8133?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://twitter.com/nathanbriggs' rel='external nofollow' class='url'>Nathan Briggs</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10315">
		<time itemprop="dateCreated" datetime="2011-12-23T08:14:22+00:00">December 23, 2011 at 8:14 am</time></a>	</div>

	<div itemprop="text"><p>Thank you, Otto &amp; gang for all your hard work</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10315#respond' onclick='return addComment.moveForm("div-comment-10315", "10315", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-10317" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10317" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/a57b423c87dc2ee04fa896fc3c957c30?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Matthijs</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10317">
		<time itemprop="dateCreated" datetime="2011-12-23T12:38:23+00:00">December 23, 2011 at 12:38 pm</time></a>	</div>

	<div itemprop="text"><p>Thanks a lot for the hard work on this. I dealt with this issue back then. Was happy with all the help back then, even more happy now that it&#8217;s fixed.</p>
<p>And great you wrote this down. Gives everybody some insight in the problem, its history, the solution and last but not least the process and work involved in fixing such an issue.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10317#respond' onclick='return addComment.moveForm("div-comment-10317", "10317", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-10329" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10329" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/383d4245458cb90f0501c14b8fbed01f?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='https://plus.google.com/104513554079959499905' rel='external nofollow' class='url'>Barrett Golding</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10329">
		<time itemprop="dateCreated" datetime="2011-12-24T09:23:42+00:00">December 24, 2011 at 9:23 am</time></a>	</div>

	<div itemprop="text"><p>Otto, 1st: thanks for this excellent work.</p>
<p>2nd, you mentioned &#8220;WordPress won’t let you use the same Page name twice on the same level&#8221;. i&#8217;ve often wondered what logic uses re: when to allow identical slugs and when to force-add a &#8220;-2&#8243; to the slug.</p>
<p>are you saying, this is allowed?:<br />
/example.com/page-parent-name/example-slug-name<br />
/example.com/cpt-name/cpt-child-pg-name/example-slug-name</p>
<p>but if on &#8220;same level&#8221;, it&#8217;ll result as?:<br />
/example.com/page-parent-name/example-slug-name<br />
/example.com/cpt-name/example-slug-name-2</p>
<p>and does that unique-slug-per-level rule apply only to pages, or would it apply to both posts &amp; pages on same level, eg, with a permalink structure like <code>%category%/%postname%&lt;/code? i should probably just read thru core to find these answers, but if time permits, thanks for any insight you can provide.</code></p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10329#respond' onclick='return addComment.moveForm("div-comment-10329", "10329", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-2 parent" id="comment-10330" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10330" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10330">
		<time itemprop="dateCreated" datetime="2011-12-24T09:36:43+00:00">December 24, 2011 at 9:36 am</time></a>	</div>

	<div itemprop="text"><p>The rules are varied.</p>
<p>- Attachment slugs must be unique across all attachments.<br />
- Page slugs, or the slugs for any hierarchical post_type, must be unique within their particular tree.<br />
- Post slugs, or the slugs for any non-hierarchical post_type, must be unique among all posts.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10330#respond' onclick='return addComment.moveForm("div-comment-10330", "10330", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-3" id="comment-10333" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10333" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/383d4245458cb90f0501c14b8fbed01f?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='https://plus.google.com/104513554079959499905' rel='external nofollow' class='url'>Barrett Golding</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10333">
		<time itemprop="dateCreated" datetime="2011-12-26T10:01:34+00:00">December 26, 2011 at 10:01 am</time></a>	</div>

	<div itemprop="text"><p>thanks, Otto, and looks like the function that does this is <code>wp_unique_post_slug()</code> in <code>/wp-includes/post.php</code>.</p>
<p>(also slug-related: <code>wp_term_post_slug()</code> in <code>/wp-includes/taxonomy.php</code>)</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10333#respond' onclick='return addComment.moveForm("div-comment-10333", "10333", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-10340" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10340" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/ec86df45f5b0198003c14a2ffcfeedde?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://www.pluginxpress.com' rel='external nofollow' class='url'>Suzette</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10340">
		<time itemprop="dateCreated" datetime="2011-12-27T18:56:00+00:00">December 27, 2011 at 6:56 pm</time></a>	</div>

	<div itemprop="text"><p>I did have the problem that this upgrade fixes. I run over 200+ WordPress websites, and one of them has over 900 pages without a blog. I am so glad this is fixed, because it caused us a lot of grief until we figured out the problem with the postname permalink.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10340#respond' onclick='return addComment.moveForm("div-comment-10340", "10340", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-10348" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10348" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://mondaybynoon.com/20111229/how-the-postname-permalinks-in-wordpress-3-3-work/' rel='external nofollow' class='url'>How the Postname Permalinks in WordPress 3.3 Work - Monday By Noon - Monday By Noon</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10348">
		<time itemprop="dateCreated" datetime="2011-12-29T07:20:40+00:00">December 29, 2011 at 7:20 am</time></a>	</div>

	<div itemprop="text"><p>[...] How the Postname Permalinks in WordPress 3.3 Work » Otto on WordPress. [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10348#respond' onclick='return addComment.moveForm("div-comment-10348", "10348", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-10351" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10351" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/5b20dd89f4cecd3c831f60c3ad5a4366?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Mark</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10351">
		<time itemprop="dateCreated" datetime="2011-12-30T11:35:35+00:00">December 30, 2011 at 11:35 am</time></a>	</div>

	<div itemprop="text"><p>Just so I fully grasp what you&#8217;re saying (sorry newbie here)&#8230;so if I create 2000+ pages on my site and keep hierarchy between 1 to 3 levels deep, I shouldn&#8217;t run into any major issues?</p>
<p>Based on your explanation, it seems like the only way it would break is if my hierarchy started getting out of control (hundreds of levels deep) and not necessarily the number of pages on my site.</p>
<p>Thanks for your explanation!</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10351#respond' onclick='return addComment.moveForm("div-comment-10351", "10351", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-10352" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10352" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10352">
		<time itemprop="dateCreated" datetime="2011-12-30T11:38:24+00:00">December 30, 2011 at 11:38 am</time></a>	</div>

	<div itemprop="text"><p>Right. The bottleneck is no longer on the number of pages, but on the depth of the hierarchy, and on the number of pages sharing the same slugs but in different trees. It should scale to a lot more pages, basically. We tested the original patch with a test site containing 4000 pages and had no troubles with the patch applied.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10352#respond' onclick='return addComment.moveForm("div-comment-10352", "10352", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3 parent" id="comment-10355" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10355" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/5b20dd89f4cecd3c831f60c3ad5a4366?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Mark</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10355">
		<time itemprop="dateCreated" datetime="2011-12-31T11:06:08+00:00">December 31, 2011 at 11:06 am</time></a>	</div>

	<div itemprop="text"><p>Thanks for the reply. So if I have a hierarchy of pages that uses the same slugs in different trees, that could cause a problem?</p>
<p>Example&#8230;<br />
example.com/blue/green/red<br />
example.com/purple/green/red<br />
example.com/yellow/green/red<br />
example.com/pink/green/red</p>
<p>So in the example above, the last two levels (slugs) are the same across the different trees. If I&#8217;m understanding correctly, this could potentially cause an issue?</p>
<p>Thanks for your help! <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10355#respond' onclick='return addComment.moveForm("div-comment-10355", "10355", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-4 parent" id="comment-10356" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10356" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10356">
		<time itemprop="dateCreated" datetime="2011-12-31T11:11:40+00:00">December 31, 2011 at 11:11 am</time></a>	</div>

	<div itemprop="text"><p>Not unless you had hundreds (or thousands) of them, no.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10356#respond' onclick='return addComment.moveForm("div-comment-10356", "10356", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-5" id="comment-10360" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10360" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/5b20dd89f4cecd3c831f60c3ad5a4366?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Mark</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10360">
		<time itemprop="dateCreated" datetime="2012-01-01T19:56:39+00:00">January 1, 2012 at 7:56 pm</time></a>	</div>

	<div itemprop="text"><p>And by hundreds or thousands, are we talking about the slugs themselves or the number of trees? Thanks for all your help! <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10360#respond' onclick='return addComment.moveForm("div-comment-10360", "10360", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt depth-5 parent" id="comment-12231" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12231" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/47fba210f8005647b8a126eb516bdf86?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Julian Weisz</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12231">
		<time itemprop="dateCreated" datetime="2014-01-12T15:39:30+00:00">January 12, 2014 at 3:39 pm</time></a>	</div>

	<div itemprop="text"><p>Hello there, but if i use different custom post types with same slug and /%postname%/, it&#8217;s interfering. So that does not work in my case observed on 3.8</p>
<p>Is that not working for CPT?</p>
<p>Julian</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12231#respond' onclick='return addComment.moveForm("div-comment-12231", "12231", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-6 parent" id="comment-12232" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12232" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12232">
		<time itemprop="dateCreated" datetime="2014-01-12T15:41:59+00:00">January 12, 2014 at 3:41 pm</time></a>	</div>

	<div itemprop="text"><p>Custom Post Types have a higher priority than Pages. You can&#8217;t have the same slug for a Page and a CPT.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12232#respond' onclick='return addComment.moveForm("div-comment-12232", "12232", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-7" id="comment-12235" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12235" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/47fba210f8005647b8a126eb516bdf86?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Julian Weisz</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12235">
		<time itemprop="dateCreated" datetime="2014-01-12T16:00:50+00:00">January 12, 2014 at 4:00 pm</time></a>	</div>

	<div itemprop="text"><p>Ok thank you, didn&#8217;t recognize that you already answered. But that&#8217;s not the issue. I actually didn&#8217;t setup a page. There are two different custom post types. But when i use the same name in the post of each then one permalink is not going to be solved.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12235#respond' onclick='return addComment.moveForm("div-comment-12235", "12235", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even depth-6 parent" id="comment-12233" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12233" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/47fba210f8005647b8a126eb516bdf86?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Julian Weisz</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12233">
		<time itemprop="dateCreated" datetime="2014-01-12T15:49:20+00:00">January 12, 2014 at 3:49 pm</time></a>	</div>

	<div itemprop="text"><p>Example:<br />
I use CPT &#8216;Building&#8217; and CPT &#8216;Room&#8217; and set a first post to &#8216;Green&#8217; of type Building and a second post to &#8216;Green&#8217; of type Room i will get two permalinks</p>
<p>example.com/building/green and example.com/room/green but both points two one url</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12233#respond' onclick='return addComment.moveForm("div-comment-12233", "12233", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-7 parent" id="comment-12234" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12234" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12234">
		<time itemprop="dateCreated" datetime="2014-01-12T15:51:36+00:00">January 12, 2014 at 3:51 pm</time></a>	</div>

	<div itemprop="text"><p>No, that works fine for me. You must have registered the post types incorrectly somehow.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12234#respond' onclick='return addComment.moveForm("div-comment-12234", "12234", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-8" id="comment-12236" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12236" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/47fba210f8005647b8a126eb516bdf86?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Julian Weisz</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12236">
		<time itemprop="dateCreated" datetime="2014-01-12T16:02:15+00:00">January 12, 2014 at 4:02 pm</time></a>	</div>

	<div itemprop="text"><p>I used the Easy Custom Conten Types plugin from Pippin Williams. Ok, will raise this issue there. Thank you though!</p>
</div>

	<div class="reply">
		</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt depth-8" id="comment-12237" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12237" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/47fba210f8005647b8a126eb516bdf86?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Julian Weisz</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12237">
		<time itemprop="dateCreated" datetime="2014-01-12T17:08:05+00:00">January 12, 2014 at 5:08 pm</time></a>	</div>

	<div itemprop="text"><p>Hello Sir, figured it out it seems not to be plugin related. It is dependend on the way you use &#8216;with_front&#8217;.</p>
<p>First i registered post types with &#8216;with_front&#8217; =&gt; true. After a while i registered post types with &#8216;with_front&#8217; =&gt; false. Then that issue appeared. After flushing rules everything worked well. So i didn&#8217;t knew that you have to flush when you have to register new CPT inbetween work with different &#8216;with_front&#8217; config.</p>
<p>Julian</p>
</div>

	<div class="reply">
		</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-otto bypostauthor even depth-7" id="comment-12238" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12238" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12238">
		<time itemprop="dateCreated" datetime="2014-01-12T17:20:05+00:00">January 12, 2014 at 5:20 pm</time></a>	</div>

	<div itemprop="text"><p>You have to flush whenever the rewrite rules change in any way. Building the rewrite rules is an expensive operation which takes a lot of time and queries. So they are saved in the database. Flushing dumps them and forces it to rebuild them. They can also be rebuilt just by visiting the Settings->Permalink page (without saving anything).</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12238#respond' onclick='return addComment.moveForm("div-comment-12238", "12238", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-10357" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10357" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://biz.leoraw.com/link-picks-tweepi-seo-social-media-and-wordpress-permalinks/' rel='external nofollow' class='url'>Link Picks: Tweepi, SEO, Social Media and WordPress Permalinks</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10357">
		<time itemprop="dateCreated" datetime="2012-01-01T05:33:21+00:00">January 1, 2012 at 5:33 am</time></a>	</div>

	<div itemprop="text"><p>[...] there was an issue of a performance problem with sites that have large numbers of pages. This Postname Permalinks issue was solved with WordPress 3.3, and Yoast explains in his post How to change your WordPress Permalinks. He has a button on that [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10357#respond' onclick='return addComment.moveForm("div-comment-10357", "10357", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-10362" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10362" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/1fb5a81997dc8347fa1b6b0acd76aeea?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://nyc.locationscout.us' rel='external nofollow' class='url'>R. Richard Hobbs</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10362">
		<time itemprop="dateCreated" datetime="2012-01-02T11:24:22+00:00">January 2, 2012 at 11:24 am</time></a>	</div>

	<div itemprop="text"><p>Thank you for the informative article and valuable work on WordPress. </p>
<p>I hope my question is not off-topic: My permalinks are currently defined as postname per your article &#8211; /category/ and /tag/ are currently 404 not found altho */tag/whatever/ or */category/whatever/ both work just fine. That said, is it safe to create some sort of archive pages using these permalinks? &#8230;or other suggestions? many thanks.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10362#respond' onclick='return addComment.moveForm("div-comment-10362", "10362", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-10368" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10368" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/9ed893450be36105536d81ad622678fc?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://forceonlinemarketing.com' rel='external nofollow' class='url'>Monte Martin</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10368">
		<time itemprop="dateCreated" datetime="2012-01-02T21:37:37+00:00">January 2, 2012 at 9:37 pm</time></a>	</div>

	<div itemprop="text"><p>I just read your original article on why <a href="http://ottopress.com/2010/category-in-permalinks-considered-harmful/" rel="nofollow">pretty permalinks</a> could be harmful. I was shocked to find out that my default /%postname%/ structure wasn&#8217;t the perfect SEO tool I thought. </p>
<p>I am having mixed emotions now. Obviously, I am very glad to see the issue has been fixed, but did it really have to wait until right before I FINALLY figured out why I have speed issues with larger sites?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10368#respond' onclick='return addComment.moveForm("div-comment-10368", "10368", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-10373" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10373" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://www.wptavern.com/otto-explains-permalinks-in-wordpress-3-3' rel='external nofollow' class='url'>Otto Explains Permalinks In WordPress 3.3</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10373">
		<time itemprop="dateCreated" datetime="2012-01-03T12:01:33+00:00">January 3, 2012 at 12:01 pm</time></a>	</div>

	<div itemprop="text"><p>[...] the ability to use %postname% as the permalink setting without taking a hit in performance. Otto goes into in-depth detail with regards to the patch he wrote to fix the problem which involved lots of help from [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10373#respond' onclick='return addComment.moveForm("div-comment-10373", "10373", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-10374" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10374" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0dac889d2029369f2a346bcbc00194a8?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Paul</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10374">
		<time itemprop="dateCreated" datetime="2012-01-03T14:33:07+00:00">January 3, 2012 at 2:33 pm</time></a>	</div>

	<div itemprop="text"><p>Hi Otto</p>
<p>How about the page&#8217;s slug begins with number, now fixed too ?</p>
<p>mysite.blah/book01/chapter-1/007</p>
<p>Is this a yes or no ?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10374#respond' onclick='return addComment.moveForm("div-comment-10374", "10374", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-2 parent" id="comment-10376" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10376" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10376">
		<time itemprop="dateCreated" datetime="2012-01-03T15:05:40+00:00">January 3, 2012 at 3:05 pm</time></a>	</div>

	<div itemprop="text"><p>No, slugs cannot be all numeric. This causes interference with many, many of the built in rules. Date segments are recognized by being numbers, as are page numbers. Changing that would mean making a much more fundamental change in the way the whole thing works.</p>
<p>Best to just not use all-numeric slugs.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10376#respond' onclick='return addComment.moveForm("div-comment-10376", "10376", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-3" id="comment-10378" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10378" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0dac889d2029369f2a346bcbc00194a8?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Paul</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10378">
		<time itemprop="dateCreated" datetime="2012-01-03T22:45:04+00:00">January 3, 2012 at 10:45 pm</time></a>	</div>

	<div itemprop="text"><p>Your answer seems to imply that there are 2 cases.</p>
<p>All numberic slug.<br />
mysite.blah/001</p>
<p>and</p>
<p>Slug begins with numbers.<br />
mysite.blah/001-chapter</p>
<p>You are saying NO to the first one, but YES to the second one</p>
<p>am I correct ?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10378#respond' onclick='return addComment.moveForm("div-comment-10378", "10378", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-10377" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10377" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/29c9306fe6701ad04933625135a45418?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://wp.envato.com/' rel='external nofollow' class='url'>Japh</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10377">
		<time itemprop="dateCreated" datetime="2012-01-03T17:34:28+00:00">January 3, 2012 at 5:34 pm</time></a>	</div>

	<div itemprop="text"><p>Thanks for the run through of the process, Otto. The problem is something I came across by accident and later on mentioned at WordCamp Melbourne 2011. So glad to it&#8217;s fixed, and even happier to know how <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10377#respond' onclick='return addComment.moveForm("div-comment-10377", "10377", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-10379" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10379" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/81df87e0d3e269d6fa6a17c6914fd656?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://about.me/mikeschinkel' rel='external nofollow' class='url'>Mike Schinkel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10379">
		<time itemprop="dateCreated" datetime="2012-01-03T23:47:40+00:00">January 3, 2012 at 11:47 pm</time></a>	</div>

	<div itemprop="text"><p>@Otto: You didn&#8217;t happen to ask Andy where he got <a href="http://core.trac.wordpress.org/ticket/18276" rel="nofollow">the insight</a> about <em>&#8220;splitting the URL path up into components and then querying for each one,&#8221;</em> per chance? I only ask because of how vocal somebody was about doing it this way in WordCamp San Fran&#8230;</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10379#respond' onclick='return addComment.moveForm("div-comment-10379", "10379", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-2 parent" id="comment-10381" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10381" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10381">
		<time itemprop="dateCreated" datetime="2012-01-04T05:40:48+00:00">January 4, 2012 at 5:40 am</time></a>	</div>

	<div itemprop="text"><p>Pretty sure it&#8217;s unrelated to your URL routing ideas. Frankly, I think such a system is complete overkill, along with being ultimately confusing and unnecessary. </p>
<p>Of course, this may be related solely to the way you are presenting the idea. That ticket, for example, is confusing as hell. Arrays within arrays within arrays, tons of magic variables using undefined methodologies, several layers of objects and classes.. It&#8217;s craziness.</p>
<p>A large scale change of this nature is highly unlikely to get anybody interested. Iteration of the existing system, on the other hand, is more likely to get taken seriously. </p>
<p>The patch I made was simply improvements to what was already there. What you&#8217;re proposing is a wholesale redesign and reworking, along with all the breakage and testing and pain that that implies. This probably won&#8217;t fly when people don&#8217;t see what we have as broken in some way. Heck, I don&#8217;t think it&#8217;s broken enough to use your ideas.</p>
<p>If you want something like your ticket implies, then you should sell it as enhancements and/or improvements to existing code. Small steps, not giant leaps.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10381#respond' onclick='return addComment.moveForm("div-comment-10381", "10381", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-3 parent" id="comment-10382" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10382" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/81df87e0d3e269d6fa6a17c6914fd656?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://about.me/mikeschinkel' rel='external nofollow' class='url'>Mike Schinkel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10382">
		<time itemprop="dateCreated" datetime="2012-01-04T08:00:34+00:00">January 4, 2012 at 8:00 am</time></a>	</div>

	<div itemprop="text"><p>I&#8217;m pretty sure it was my presentation of my ideas in those tickets that has confused you. Admittedly it was less than coherent. I blame my lack of understanding the exact architecture needed for a backward compatible solution; when I don&#8217;t fully understand something I write about it in order to gain insight. And yes, my writing in those cases can be very hard to follow.</p>
<p>My key and original insight <a href="http://core.trac.wordpress.org/ticket/12935" rel="nofollow">21 months ago</a> was to analyze URLs not as a whole like WordPress&#8217; rewrite currently does with a linear list of regular expressions but instead that we should look at each path segment, and that&#8217;s exactly what you mentioned above when you said <em>&quot;splitting the URL path up into components&quot;</em>. Two secondary insights I had at the time were to 1.) leverage semantic context generically in addition to syntax, which is exactly what you did with Pages albeit not generically, and to allow for many and extensible methods for matching, i.e. by hook, by MySQL lookup, by caching, by transient lookup, by option lookup, by testing array keys for existence, and finally by RegEx. <em>Everything</em> else about my tickets was merely attempts at implementation. So by now please seperate those insights from the rest which understandably confused.</p>
<p>So I&#8217;m pretty sure it was my URL routing work that got Andy thinking about looking at each page segment because he unexpectedly-to-me referenced my ticket in his <a href="http://2011.sf.wordcamp.org/session/deep-voodoo-how-the-innermost-innards-of-wordpress-work/" rel="nofollow">2011 SF WordCamp talk</a> after which he was gracious enough to sit down with me and discuss my URL routing ideas and then he posted <a href="http://core.trac.wordpress.org/ticket/16692#comment:18" rel="nofollow">this comment</a> in support of the foundational ticket I&#8217;ll discuss next.</p>
<p>Ultimately with my comments on this post I&#8217;m trying to get you to reconsider something you were against when we spoke face-to-face at the pre-WordCamp SF 2011 hackfest. We discussed <a href="http://core.trac.wordpress.org/ticket/16692" rel="nofollow">this ticket of mine</a> which only seeks to get a single <code>'wp_parse_request'</code> hook added. I&#8217;m not sure if you remember but you objected to the ticket, and I quote from memory: <em>&quot;Because people might use it.&quot;</em>But let me be clear I not looking for credit on my insight;  as I know you are highly influencial among the core developers I just want your to support in 3.4 for adding capabilites that currently don&#8217;t exist in WordPress to allow us to extend WordPress&#8217; URL routing system. Allowing <code>$wp-&gt;parse_request()</code> to be extended would let many people  experiment with better ways of URL routing, ways that could take the insight you applied specifically to Pages and instead apply it generically.</p>
<p>So ironically given your <em>&quot;Small steps, not giant leaps&quot;</em> comment that&#8217;s exactly what I have plans to do with my own efforts. I had pushed forward with using the code I posted <a href="http://core.trac.wordpress.org/ticket/18276" rel="nofollow">on ticket #18726</a> and found that the specific implementation had signficant downsides and so I closed my own ticket as <em>&quot;won&#8217;t fix&quot;</em>. My new goal in my code is to continue subclassing <code>WP</code> to support a replaceable <code>parse_request()</code> and then implement much simpler code in the replacement <code>parse_request()</code> that I posted in the ticket. I also realized while implementing my code that the URL needs to be matched starting with the right-most path segment not starting from the root and that was the same as your insight.</p>
<p>One additional insight I&#8217;ve had is we could create a URL caching plugin to cache the resultant <code>$wp-&gt;query_var</code> array that is normally processed by <code>parse_request()</code>. By implementing routing cache for the top <em>&quot;N&quot;</em> most visited web pages then most page loads could omit the need for any additional MySQLs lookup. Why force the re-evaluation of the URL for each page load for popular URLs? Using your example the following array could be cached and then if matched bypass <code>$wp-&gt;parse_request()</code>:</p>
<pre class="brush: php; title: ; notranslate" title="">
array( 
    'aaa/bbb/ccc/ddd' =&amp;gt; array( 'pagename' =&amp;gt; 'aaa/bbb/ccc/ddd' ),
    ...
 )
</pre>
<p>Of course it would be so much better if we didn&#8217;t have to subclass <code>WP</code> in order to bypass <code>parse_request()</code> since two plugins that subclass  <code>WP</code> can&#8217;t both run on the same site. If we had the hook I&#8217;ve requested then others could explore similar ideas giving us a much better chance that we&#8217;d be able to evolve to a robust and flexible URL routing system from the efforts of many developers before, say WordPress 4.0. And that&#8217;s exactly what happened with you and Andy at the hackfest. Why not make empower the rest of us to collaborate on this instead of just you and Andy? <br />
Pretty please&#8230;? <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif" alt=":-)" class="wp-smiley" /> </p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10382#respond' onclick='return addComment.moveForm("div-comment-10382", "10382", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor even depth-4 parent" id="comment-10384" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10384" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10384">
		<time itemprop="dateCreated" datetime="2012-01-04T08:21:55+00:00">January 4, 2012 at 8:21 am</time></a>	</div>

	<div itemprop="text"><p>I&#8217;m not sure what the benefit would be of splitting the path into components specifically for the case of routing. I used it in this case not for routing, but for determining whether or not a given page exists with a faster SQL query.</p>
<p>Whenever I read your posts on the topic, it seems like you think that the URL path should determine what is displayed, and I disagree with that. See, I think that the URL should determine what is <em>queried for</em>, and then display should be based on the content that results from that query.</p>
<p>In other words, URL path becomes query variables. The means by which you want to get from A to B is thus far unclear to me. I prefer simpler solutions over complex ones, and an array of regexp&#8217;s (with the occasional special case) seems pretty darned simple to me.</p>
<p>What is it that you want to do which cannot be accomplished with this method? See, you&#8217;ve presented a lot of code in various tickets, but the problem is that all that code is dense and obscure. I don&#8217;t know what it is that you&#8217;re trying to accomplish. Often you seem to be trying to make things abstract and generalized, and you end up writing dozens of wrapper functions making things simpler and simpler to the point of obscurity. If I can&#8217;t tell what it&#8217;s doing and why, then I can&#8217;t really argue for it.</p>
<p>And no, I still reject the idea of a hook to pre-empt the rewrite rules, because such a thing doesn&#8217;t lead to improvement. If you want rewrites to be better, tell us a) in what way they don&#8217;t work now and b) what you want them to do. Don&#8217;t lead with the chin here, try to explain why they don&#8217;t work and how they could work better without scrapping the whole thing or bypassing the system completely. Incremental improvements, not world-changers.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10384#respond' onclick='return addComment.moveForm("div-comment-10384", "10384", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-5" id="comment-10386" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10386" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/81df87e0d3e269d6fa6a17c6914fd656?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://about.me/mikeschinkel' rel='external nofollow' class='url'>Mike Schinkel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10386">
		<time itemprop="dateCreated" datetime="2012-01-04T09:07:42+00:00">January 4, 2012 at 9:07 am</time></a>	</div>

	<div itemprop="text"><p>If you break the URL by path segments, one benefit it to reduce the number of preg_match()s that need to be attempted as the current approach causes an explosion of match patterns the more post types and end point you have to match. Even better you can use other matching methods for each segment which opens up the ability to have different items at the same level in the site, i.e.</p>
<p>[pre]<br />
/about/           post_type=&#8221;page&#8221;<br />
/mike-schinkel/   post_type=&#8221;person&#8221;<br />
/public-finance/  post_type=&#8221;practice-area&#8221;<br />
/news/            taxonomy=&#8221;category&#8221;<br />
/featured/				taxonomy=&#8221;post_tag&#8221;<br />
[/pre]</p>
<p>If you think I&#8217;m saying that the URL path should determine what is displayed vs. what is queried for then either I&#8217;ve done a horrible job or explaining or you really have never read/contemplated what I have been writing <em>(you did answer the above comment really fast&#8230; Thanks for formatting it, btw. <img src="http://ottopress.com/wp-content/plugins/classic-smilies/img/icon_smile.gif" alt=":-)" class="wp-smiley" /> </em></p>
<p><strong>&#8220;In other words, URL path becomes query variables.&#8221;</strong></p>
<p>That&#8217;s EXACTLY what my stuff does. The ; how about we instead focus on this fact? </p>
<p>[pre]<br />
$wp-&gt;parse_request() -&gt; $wp-&gt;query_vars<br />
[/pre]</p>
<p>When you boil it down, everything I&#8217;m working on is premised on that individual fact; everything else including your array of regexps are all just implementation details.</p>
<p>But even so, that doesn&#8217;t matter. All we need is that <code>'wp_parse_request'</code> hook and then each of us can try out ways to make it better, including URL caching where the results of a cache hit is a value to be assigned to <code>$wp-&gt;query_vars</code>.</p>
<p>What I want to do that we can&#8217;t already do is be able to bypass execution of <code>$wp-&gt;wp_parse_request()</code>.  Ignore all the code you think is dense and obsure; just focus on the hook needed to bypass <code>$wp-&gt;query_vars</code>. </p>
<p>At the point I don&#8217;t want to bypass the rewrite system, I learned that would be too hard, I simply want to front end it for special use-cases and fall back to it if the special use-cases don&#8217;t match; after all, isn&#8217;t that what hooks are generally for?. Two use cases, one that I&#8217;ve already explained:</p>
<p>1.) Caching of frequently used URLs<br />
2.) Abilility to control URL routing for special sections of the site without first having to fail on all existing URLs. </p>
<p>For an example of #2 here is a set of URLs that we needed for a project; %person%, %practice-area% and %news-item% are slugs for 3 different post types, and I&#8217;m only showing a small subset of the URLs we needed to route:</p>
<p>[pre]<br />
/%person%/<br />
/%person%/news/<br />
/%person%/news/%news-item%/<br />
/%practice-area%/<br />
/%practice-area%/news/<br />
/%practice-area%/news/%news-item%/<br />
[/pre]</p>
<p>My code needed to match those URLs did lookups to see if it was a person or a practice area or a news-item, and if it was a news item verify it associated with the person or practice area, and if a <code>/%..%/news/</code> URL looked for post type of <code>'microsite_page'</code> that had as it&#8217;s parent a post with a slug of person or practice-area post type, and if just a <code>/%..%/</code> then it verified it was indeed a valid person or practice area. And if none of those matched, then just delegate to WordPress&#8217; standard <code>$wp-&gt;parse_request()</code>. </p>
<p>But don&#8217;t first force me to run all the standard match attempts before I get to see if my match attempts work.</p>
<p>And you can&#8217;t do the above without bypassing the current WordPress URL routing system.</p>
<p>I&#8217;m AM asking . I always here <em>&#8220;Do it in the plugin first then we can look at it.&#8221;</em> <em>ALL</em> I&#8217;m asking for here is incremental improvement in the ability to do it in a plugin first. How you could view that as a bad thing is completely foreign to me?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10386#respond' onclick='return addComment.moveForm("div-comment-10386", "10386", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-otto bypostauthor even depth-4 parent" id="comment-10385" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10385" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10385">
		<time itemprop="dateCreated" datetime="2012-01-04T08:27:16+00:00">January 4, 2012 at 8:27 am</time></a>	</div>

	<div itemprop="text"><p>BTW, have you considered using the after_setup_theme action to replace the $GLOBALS['wp_rewrite'] with your own version, subclassed from the WP_Rewrite class? Using that, you could implement whatever rewrite system you want, in a plugin. Your caching notion could be implemented in that manner.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10385#respond' onclick='return addComment.moveForm("div-comment-10385", "10385", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment odd alt depth-5" id="comment-10390" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10390" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/81df87e0d3e269d6fa6a17c6914fd656?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://about.me/mikeschinkel' rel='external nofollow' class='url'>Mike Schinkel</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10390">
		<time itemprop="dateCreated" datetime="2012-01-04T09:19:56+00:00">January 4, 2012 at 9:19 am</time></a>	</div>

	<div itemprop="text"><p>I considered it early on and the issue was it still ran code I was trying to bypass.  I could look at it again, but my subclassing is currently working so I don&#8217;t need to, and if you propose that why not just support a <code>'wp_parse_request'</code> hook?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10390#respond' onclick='return addComment.moveForm("div-comment-10390", "10390", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="comment-10391" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10391" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/d03ff21191264a58c34845a5b672ca0d?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://themespotter.com' rel='external nofollow' class='url'>Dustin</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10391">
		<time itemprop="dateCreated" datetime="2012-01-04T09:26:37+00:00">January 4, 2012 at 9:26 am</time></a>	</div>

	<div itemprop="text"><p>Thanks for the update Otto. Quick couple questions:</p>
<p>-Did the changes in WP 3.3 resolve performance issues with other structures such as /%category%/%postname%/ or did it just improve /%postname%/?</p>
<p>-Also, which do you think is a better option (with 3.3) for performance and SEO between /%postname%/ and /%category%/%postname%/? I currently use /category/postname, but am considering switching to just postname, mainly because I routinely assign posts to multiple categories, which can result in some confusing permalinks. Could switching to postname still improve my site speed? I am a bit worried about the effect on SEO though (but who knows..maybe just postname would be better for SEO).</p>
<p>Thanks!</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10391#respond' onclick='return addComment.moveForm("div-comment-10391", "10391", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-10393" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10393" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/dd09899d257f16503bc4b23526ca46c1?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://highfxmedia.com' rel='external nofollow' class='url'>Kurt</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10393">
		<time itemprop="dateCreated" datetime="2012-01-04T10:31:02+00:00">January 4, 2012 at 10:31 am</time></a>	</div>

	<div itemprop="text"><p>Thanks for all the work you put into this update!</p>
<p>Thanks for the explanation too.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10393#respond' onclick='return addComment.moveForm("div-comment-10393", "10393", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-10758" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10758" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/7240f882bac7aea7b70ecc66bdedea87?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">roswel</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10758">
		<time itemprop="dateCreated" datetime="2012-05-03T17:00:23+00:00">May 3, 2012 at 5:00 pm</time></a>	</div>

	<div itemprop="text"><p>There seem to be a bug with Permalinks in 3.3. When we use postname the top level pages throw 404 error because the script does not know whether it is a page or a post. </p>
<p>The query string sets the name instead of pagename for the top level pages causing the is_page to set as false. Not sure if rewrite.php needs some fixing but my fix was to add and extra in parse_query function below</p>
<p>if( &#8221; == $qv['pagename']  ) $qv['pagename'] = $qv['name'] ;</p>
<p>Also set $this-&gt;is_page as below</p>
<p>$this-&gt;queried_object =&amp; get_page_by_path($qv['pagename']);</p>
<p>if ( !empty($this-&gt;queried_object) ) {<br />
      $this-&gt;queried_object_id = (int) $this-&gt;queried_object-&gt;ID;<br />
      $this-&gt;is_page = true;<br />
}</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10758#respond' onclick='return addComment.moveForm("div-comment-10758", "10758", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-10759" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10759" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10759">
		<time itemprop="dateCreated" datetime="2012-05-03T17:16:05+00:00">May 3, 2012 at 5:16 pm</time></a>	</div>

	<div itemprop="text"><p>I can&#8217;t reproduce this. If you only use the %postname% as the custom slug, then the code we added into 3.3 takes care of this. See, the page_rewrite rules are in front of the post_rewrite rules. So it will first match as a Page because the URL pattern matches.</p>
<p>So any URL with just the top-level will first match against Pages and have pagename set. The code in rewrite.php then uses the get_page_by_path function to actually check to see if that is a real Page. If the Page exists, then pagename is set and the query happens as normal. If the Page does not exist, then the rewrite match is thrown away and it continues on with the normal Post rewrite rules.</p>
<p>Your change to parse_query wouldn&#8217;t have any effect, because parse_query doesn&#8217;t happen until *after* the rewrites have already taken place. So if it makes it to the parse query and name is set instead of pagename, then get_page_by_path doesn&#8217;t think the page exists, in which case you have other underlying problems.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10759#respond' onclick='return addComment.moveForm("div-comment-10759", "10759", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-10859" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10859" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/3e9169a165e2277dbc36278f15af9658?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://cuztomatic.com' rel='external nofollow' class='url'>Arie Putranto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10859">
		<time itemprop="dateCreated" datetime="2012-05-23T16:21:46+00:00">May 23, 2012 at 4:21 pm</time></a>	</div>

	<div itemprop="text"><p>The simplest and fastest implementation for better performance is to add a field on *_posts table of WordPress db to save COMPLETE permalink being used rather than only saving page name slugs. So for each requests WP should look on this field to find the exact matched post before crawling around using regex. Then, make a function where anytime user update their permalink structure, the data will also being updated.</p>
<p>That way, things will be easier &#8230;</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10859#respond' onclick='return addComment.moveForm("div-comment-10859", "10859", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-10860" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-10860" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-10860">
		<time itemprop="dateCreated" datetime="2012-05-23T16:29:37+00:00">May 23, 2012 at 4:29 pm</time></a>	</div>

	<div itemprop="text"><p>Most permalinks don&#8217;t point to &#8220;posts&#8221; at all, actually. There&#8217;s things like tag and category links, custom post types have their own modifiable link structures, author links, custom taxonomies, etc. Storing the permalink list as an add-on to the posts table wouldn&#8217;t really save you any lookup time for anything except a very narrow use-case, and even if you stored the permalinks in their own table, the additional queries to rebuild this table and restructure it as new things were added would be a big performance killer. The dynamic system being used with PHP and regular expressions is a lot more complex, but definitely faster and more flexible, especially when you want to restructure things.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=10860#respond' onclick='return addComment.moveForm("div-comment-10860", "10860", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-11094" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11094" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/9bfd188afa683b9e91d4e9e787136da1?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">CY</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11094">
		<time itemprop="dateCreated" datetime="2012-07-27T07:35:19+00:00">July 27, 2012 at 7:35 am</time></a>	</div>

	<div itemprop="text"><p>Hi there</p>
<p>I am not a technical person. I am just setting up my new WP blog today. I&#8217;m looking at the permalink settings and don&#8217;t know what to do. I read all the analysis above and I am LOST. </p>
<p>Otto, could you please let me know what permalink structure to use that is best for performance? I really just want to dive into the site and populate my content quickly. </p>
<p>Btw, I have installed WP version 3.4.1. Not sure if it helps with your assessment. Thank you in advance. I hope to hear from you soon. </p>
<p>Thank you again.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11094#respond' onclick='return addComment.moveForm("div-comment-11094", "11094", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-11095" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11095" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11095">
		<time itemprop="dateCreated" datetime="2012-07-27T07:40:40+00:00">July 27, 2012 at 7:40 am</time></a>	</div>

	<div itemprop="text"><p>The point of all of the above is that it no longer matters which setup you use, they&#8217;re all pretty much the same now from a performance standpoint.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11095#respond' onclick='return addComment.moveForm("div-comment-11095", "11095", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3" id="comment-11096" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11096" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/9bfd188afa683b9e91d4e9e787136da1?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">CY</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11096">
		<time itemprop="dateCreated" datetime="2012-07-27T07:48:59+00:00">July 27, 2012 at 7:48 am</time></a>	</div>

	<div itemprop="text"><p>Thanks very much for your prompt reply Otto. If its no longer about performance, then could you please advise what permanlink structure should I used for SEO purposes?</p>
<p>My initial thoughts were on performance after all the hooha in the discussion. Now that performance is no longer a hindrance, then SEO is next in my priority. </p>
<p>Thanks again Otto.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11096#respond' onclick='return addComment.moveForm("div-comment-11096", "11096", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment odd alt depth-3" id="comment-11518" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11518" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/7e7b0bcfc40856c220a14e309144af86?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">gaurav kaushik</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11518">
		<time itemprop="dateCreated" datetime="2012-12-31T07:02:27+00:00">December 31, 2012 at 7:02 am</time></a>	</div>

	<div itemprop="text"><p>hiii<br />
can anybody explain what should be the permalink of the custon post type because i think it make the wordpress complete cms and on the web custom post type becoming very popular but unfortunately about their permalink there is not any detailed information by the wordpress team and &#8230;otto can you explain something about the performance for permalink of custom post type..if i have more than one post type and there is thousands of post in each post type &#8230;what should be the best structure for performance?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11518#respond' onclick='return addComment.moveForm("div-comment-11518", "11518", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even depth-3" id="comment-12039" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12039" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/fac346456015713bfabbe6c0ceaba9ef?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">santiago</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12039">
		<time itemprop="dateCreated" datetime="2013-09-30T21:42:24+00:00">September 30, 2013 at 9:42 pm</time></a>	</div>

	<div itemprop="text"><p>Is completely the same for all of the structures in performance? ??? Even for very large sites with any number of posts specifically? ?? </p>
<p>Thanks for this great content!</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12039#respond' onclick='return addComment.moveForm("div-comment-12039", "12039", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-11098" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11098" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/7b27a1079f60fe70944bfb8849ff0ab7?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://resultspedia.com' rel='external nofollow' class='url'>Navneet</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11098">
		<time itemprop="dateCreated" datetime="2012-07-28T01:31:17+00:00">July 28, 2012 at 1:31 am</time></a>	</div>

	<div itemprop="text"><p>I am looking for a best permalink structure for my new blog. I am much intended to use category slug and then postname slug. But if that would slow down the wordpress then if i use postid in last of permalink tree would it be beneficial or will it affect my permalink seo?? Waiting for qucik reply!</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11098#respond' onclick='return addComment.moveForm("div-comment-11098", "11098", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1 parent" id="comment-11109" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11109" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/d72bf65b4c1f01885b85114b1267e6dc?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Mike</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11109">
		<time itemprop="dateCreated" datetime="2012-07-31T09:58:21+00:00">July 31, 2012 at 9:58 am</time></a>	</div>

	<div itemprop="text"><p>Can anyone clarify; is this patch now included in a default WP install or do we have to download it and apply?</p>
<p>thanks</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11109#respond' onclick='return addComment.moveForm("div-comment-11109", "11109", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2" id="comment-11218" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11218" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11218">
		<time itemprop="dateCreated" datetime="2012-09-11T08:30:27+00:00">September 11, 2012 at 8:30 am</time></a>	</div>

	<div itemprop="text"><p>The patch is already in core and has been since WordPress 3.3.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11218#respond' onclick='return addComment.moveForm("div-comment-11218", "11218", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-11221" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11221" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/8b499592dde59e46e9ab802fd8c651ca?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Martin</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11221">
		<time itemprop="dateCreated" datetime="2012-09-11T10:36:39+00:00">September 11, 2012 at 10:36 am</time></a>	</div>

	<div itemprop="text"><p>Hi Ptto,<br />
thanks to your diligent report. Surely many WP-users are a bit happier now. One thing still confuses me, maybe you can clear it up. On the one hand you say &#8220;The point of all of the above is that it no longer matters which setup you use, they’re ALL (!!!) pretty much the same now from a performance standpoint.&#8221;<br />
On the other hand you answer to Anatol &#8220;And yes, the normal methods are unchanged.&#8221; </p>
<p>Let&#8217;s assume, I choose the custom structure with &#8220;postname&#8221; and when creating a new page I EDIT the permalink, for example replacing the last two words by a keyword. What influence have those edits, does it still profit from your 3.3-improvement?</p>
<p>Thanks,</p>
<p>Martin</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11221#respond' onclick='return addComment.moveForm("div-comment-11221", "11221", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-2 parent" id="comment-11222" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11222" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11222">
		<time itemprop="dateCreated" datetime="2012-09-11T10:39:16+00:00">September 11, 2012 at 10:39 am</time></a>	</div>

	<div itemprop="text"><p>I don&#8217;t understand your question. This doesn&#8217;t have anything to do with editing the permalink (post-slug). That wouldn&#8217;t make any difference from any angle, and there never was any performance problem associated with it.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11222#respond' onclick='return addComment.moveForm("div-comment-11222", "11222", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-3 parent" id="comment-11223" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11223" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/8b499592dde59e46e9ab802fd8c651ca?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Martin</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11223">
		<time itemprop="dateCreated" datetime="2012-09-11T11:38:24+00:00">September 11, 2012 at 11:38 am</time></a>	</div>

	<div itemprop="text"><p>Thanks for the fast response.<br />
So whatever I change by editing, it still remains a &#8220;postname-permalink&#8221; in the eyes of WP, profiting from the performance improvements. O.k., fine. </p>
<p>What permalink-structures STILL can cause slow speed with a lot of pages? All permalinks using textbased structure tags (i.e. category), except &#8220;postname&#8221;?</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11223#respond' onclick='return addComment.moveForm("div-comment-11223", "11223", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment byuser comment-author-otto bypostauthor odd alt depth-4 parent" id="comment-11224" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11224" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/0994d5e2e158a24ba8017c2525d78263?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name"><a itemprop='url' href='http://ottodestruct.com' rel='external nofollow' class='url'>Otto</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11224">
		<time itemprop="dateCreated" datetime="2012-09-11T11:40:21+00:00">September 11, 2012 at 11:40 am</time></a>	</div>

	<div itemprop="text"><p>Umm.. None of them. That&#8217;s pretty much what this post explains. </p>
<p>Using an ambiguous custom permalink structure for the single-post URLs will now only result in 1 extra query. No slowdowns of any kind.</p>
<p>In other words, this is now considered a fixed problem. This post details the technical behavior behind the &#8220;fix&#8221;.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11224#respond' onclick='return addComment.moveForm("div-comment-11224", "11224", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	<ul class="children">
	<li class="comment even depth-5" id="comment-12040" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12040" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://1.gravatar.com/avatar/fac346456015713bfabbe6c0ceaba9ef?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">santiago</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12040">
		<time itemprop="dateCreated" datetime="2013-09-30T21:54:21+00:00">September 30, 2013 at 9:54 pm</time></a>	</div>

	<div itemprop="text"><p>You use the year and then the postname. Is this only your postslug like or there any advantaje in performance with your structure? ??</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12040#respond' onclick='return addComment.moveForm("div-comment-12040", "12040", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="comment-11227" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11227" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
	<img alt='' src='http://0.gravatar.com/avatar/8b499592dde59e46e9ab802fd8c651ca?s=48&amp;d=retro&amp;r=X' class='avatar avatar-48 photo' height='48' width='48' />	<cite itemprop="name">Martin</cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11227">
		<time itemprop="dateCreated" datetime="2012-09-11T15:28:04+00:00">September 11, 2012 at 3:28 pm</time></a>	</div>

	<div itemprop="text"><p>Everywhere (also in the codex) the fix is referred to &#8220;postname&#8221;, so people like me might not understand, why ALL formerly slow structure tags are faster now (as you say in the last comment).</p>
<p>Sorry if it is just due to my lack of knowledge.</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11227#respond' onclick='return addComment.moveForm("div-comment-11227", "11227", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback even thread-odd thread-alt depth-1" id="comment-11303" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11303" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://www.makemoneyonlinetipsandtricks.com/best-wordpress-permalink-setting/' rel='external nofollow' class='url'>What is the Best WordPress Permalink Settings for Your Website?</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11303">
		<time itemprop="dateCreated" datetime="2012-10-12T15:34:48+00:00">October 12, 2012 at 3:34 pm</time></a>	</div>

	<div itemprop="text"><p>[...] One of the WordPress developers blogged about the performance improvement in WordPress 3.3. [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11303#respond' onclick='return addComment.moveForm("div-comment-11303", "11303", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-even depth-1" id="comment-11553" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-11553" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://buildwebsitetips.com/480/the-best-wordpress-permalink-settings-for-seo' rel='external nofollow' class='url'>The Best Wordpress Permalink Settings For SEO | Build Website TipsBuild Website Tips</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-11553">
		<time itemprop="dateCreated" datetime="2013-01-17T04:19:58+00:00">January 17, 2013 at 4:19 am</time></a>	</div>

	<div itemprop="text"><p>[...] it is not a case anymore. Otto himself already update this problem about a year later in his post How the Postname Permalinks in WordPress 3.3 Work. But if you still cautious about this then you can follow the /%post_id%/%category%/%postname%/ [...]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=11553#respond' onclick='return addComment.moveForm("div-comment-11553", "11553", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	<li class="pingback even thread-odd thread-alt depth-1" id="comment-12300" itemprop="comment" itemscope itemtype="http://schema.org/Comment">
		<div id="div-comment-12300" class="comment-body">
		<div class="comment-author" itemprop="author" itemscope itemtype="http://schema.org/Person">
		<cite itemprop="name"><a itemprop='url' href='http://www.crosseyedesign.com/2014/02/27/removing-the-slug-in-a-custom-post-type-permalink/' rel='external nofollow' class='url'>Removing the Slug in a Custom Post Type Permalink / Cross Eye Coder</a></cite> <span class="says">says:</span>	</div>

	<div class="comment-meta commentmetadata"><a itemprop="url" href="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/comment-page-1/#comment-12300">
		<time itemprop="dateCreated" datetime="2014-02-26T21:25:42+00:00">February 26, 2014 at 9:25 pm</time></a>	</div>

	<div itemprop="text"><p>[&#8230;] in WordPress shared. Though the performance issues that plagued using the postname permalink was resolved with WordPress 3.3, it was still sort of tricky to implement it. I found a few tutorials online but I decided to find [&#8230;]</p>
</div>

	<div class="reply">
	<a class='comment-reply-link' href='/2011/how-the-postname-permalinks-in-wordpress-3-3-work/?replytocom=12300#respond' onclick='return addComment.moveForm("div-comment-12300", "12300", "respond", "731")'>Reply to this comment</a>	</div>
		</div>
	</li><!-- #comment-## -->
	</ol>
	<div class="navigation" style="clear:both">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>
	<div style="clear:both"></div> 								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2011/how-the-postname-permalinks-in-wordpress-3-3-work/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://ottopress.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<div id="gravbox"></div><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input x-autocompletetype="name-full" id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input x-autocompletetype="email" id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p><p class="form-allowed-tags">Need to post PHP code? Wrap it in <code>[php]</code> and <code>[/php]</code> tags.						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='731' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="788c2388a3" /></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts by email.</label></p><p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="200"/></p>					</form>
							</div><!-- #respond -->
			</div>

	
	</div>

	<div id="sidebar">
		<ul>
			
			<li id="paypal-donate" class="widget widget_wpaypal"><h2 class="widgettitle">Buy Otto a Beer</h2>
<div style="margin-top:5px;margin-bottom:5px;text-align:left;">
		<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
		<p><input type="hidden" name="cmd" value="_xclick" />
		<input type="hidden" name="business" value="otto@ottodestruct.com" />
		<input type="hidden" name="item_name" value="Donation to Otto on WordPress" />
		<input type="hidden" name="item_number" value="0" />
		<input type="hidden" name="notify_url" value="" />
		<input type="hidden" name="no_shipping" value="1" /><input type="hidden" name="return" value="http://ottopress.com" />
		<input type="hidden" name="no_note" value="1" />
		<input type="hidden" name="tax" value="0" />
		<input type="hidden" name="bn" value="PP-DonationsBF" />
		<input type="hidden" name="on0" value="Website" />
		Currency: <br />
		<select id="currency_code" name="currency_code">
		<option value="USD">U.S. Dollars</option>
		<option value="AUD">Australian Dollars</option>
		<option value="CAD">Canadian Dollars</option>
		<option value="EUR">Euros</option>
		<option value="GBP">Pounds Sterling</option>
		<option value="JPY">Yen</option></select></p>
		<p>Amount: <br /><input type="text" name="amount" size="16" title="The amount you wish to donate" value="5.00" /></p>
		<p>Website(Optional): <br /><input type="text" size="16" title="Your website (will be displayed)" name="os0" value="" /></p><p><input class="ppimg" type="image" src="https://www.paypal.com/en_US/i/btn/x-click-but21.gif" name="submit" style="border:0;" alt="Make payments with PayPal - fast, free and secure" /></p></form></div></li>
<li id="text-7" class="widget widget_text">			<div class="textwidget">Hey, I also take Bitcoins! Send them to: </br>
<a href="bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg">
<img src="https://chart.googleapis.com/chart?chs=150x150&cht=qr&chl=bitcoin:1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg" /><br />
1ottoqnFyTtaB6GiJZxMQ79rsSqBL2ZBg</a></div>
		</li>
<li id="text-5" class="widget widget_text"><h2 class="widgettitle">Subscribe!</h2>
			<div class="textwidget"><!-- <a href="https://plus.google.com/111166992820603637934?prsrc=3" style="cursor:pointer;display:inline-block;text-decoration:none;color:#333;font:13px/16px arial,sans-serif;"><span style="display:inline-block;font-weight:bold;vertical-align:top;margin-right:5px;margin-top:8px;">Otto on WordPress</span><span style="display:inline-block;vertical-align:top;margin-right:15px;margin-top:8px;">on</span><img src="https://ssl.gstatic.com/images/icons/gplus-32.png" alt="" style="border:0;width:32px;height:32px;"/></a>
-->
<div class="g-plus" data-href="https://plus.google.com/111166992820603637934?rel=publisher" data-width="250" data-height="131" data-theme="light"></div>
</div>
		</li>
<li id="blog_subscription-3" class="widget jetpack_subscription_widget"><h2 class="widgettitle"><label for="subscribe-field"></label></h2>

		<form action="#" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-3">
			<p id="subscribe-text">Enter your email address to subscribe to this blog and receive notifications of new posts by email.</p><p>Join 331 other subscribers</p>

			<p id="subscribe-email"><input type="text" name="email" value="Email Address" id="subscribe-field" onclick="if ( this.value == 'Email Address' ) { this.value = ''; }" onblur="if ( this.value == '' ) { this.value = 'Email Address'; }" /></p>

			<p id="subscribe-submit">
				<input type="hidden" name="action" value="subscribe" />
				<input type="hidden" name="source" value="http://ottopress.com/2011/how-the-postname-permalinks-in-wordpress-3-3-work/" />
				<input type="hidden" name="sub-type" value="widget" />
				<input type="hidden" name="redirect_fragment" value="blog_subscription-3" />
								<input type="submit" value="Subscribe" name="jetpack_subscriptions_widget" />
			</p>
		</form>

		
</li>
<li id="text-3" class="widget widget_text"><h2 class="widgettitle">Email Me</h2>
			<div class="textwidget"><ul><li><span class="vcard microid-mailto+http:sha1:23e9670868f6d2b16fe1f6b3db80c8f0423a082a">
<span style="display:none;">
<span class="adr">
 <span class="locality">Memphis</span>,
 <span class="region">TN</span>
 <span class="postal-code">38103</span>
 <span class="country-name">U.S.A.</span>
</span>
<a class="url fn" href="http://ottodestruct.com">Otto</a>
<span class="uid">240cf86e-5cad-11dc-8314-0800200c9a66</span>
</span>
<a class="email" href="mailto:otto@ottodestruct.com">otto@ottodestruct.com</a></span></li></ul>
<a rel="author" href="https://plus.google.com/100201852715113506716?rel=author">
  <img src="https://ssl.gstatic.com/images/icons/gplus-16.png" width="16" height="16">
</a>
</a>
<!-- 

This rant is hidden in HTML comments. If I pointed you to it, then you probably emailed me about the fact that my email address is in plaintext directly above this comment. If you happened to run across it because you just like looking at HTML comments, well, easter egg! :)

YES, that is a bare mailto: href above. 
YES, that is my real email address. 
And YES, it's intentional.

Obfuscating your email address on the web is stupid. 

Firstly, hiding your email address doesn't prevent spam. Spammers get addresses in bulk from mailing lists and websites and other sources. Sure, some scrapers exist, but they are by far the minority of the sources for email lists.

Secondly, hiding your email address ruins the whole point of email. The purpose of publishing my email address is so that anybody, and I do mean *anybody*, can email me. Before the days of cell phones, your phone number and physical address used to be published in a big book that everybody received, for free, on a semi-annual basis. It had distinctive yellow pages in it. Your contact information is not, and never was supposed to be, private information. Treating it as such is stupid.

Thirdly, I have great spam protection. For one, I use GMail, which has frankly incredible filtering because of the volume of mail they deal with. For another, I use various sets of filters to categorize incoming mail into various categories of things. Hell, I can even run statistics on it, if I want. This is a much better solution than continually giving out fake email addresses, or using +stuff to figure out who sent what where... I'd prefer to simply let my filters deal with it instead. 

Finally, if you're one of those systems that scours the web and/or social networks for visible email addresses and then automatically emails that person to let them know that their address is visible, then by all means please just fuck off and die. You're part of the problem. On the other hand, if you're just a regular guy with good intentions, then this doesn't apply to you. :)

Just my 2 cents.

--></div>
		</li>
<li id="categories-2" class="widget widget_categories"><h2 class="widgettitle">Categories</h2>
		<ul>
	<li class="cat-item cat-item-573"><a href="http://ottopress.com/category/code/" title="View all posts filed under Code">Code</a>
</li>
	<li class="cat-item cat-item-574"><a href="http://ottopress.com/category/other/" title="View all posts filed under Other">Other</a>
</li>
	<li class="cat-item cat-item-575"><a href="http://ottopress.com/category/rants/" title="View all posts filed under Rants">Rants</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://ottopress.com/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
	<li class="cat-item cat-item-576"><a href="http://ottopress.com/category/wordpress/" title="View all posts filed under WordPress">WordPress</a>
</li>
		</ul>
</li>
<li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>
		<ul>
	<li><a href='http://ottopress.com/2014/02/'>February 2014</a></li>
	<li><a href='http://ottopress.com/2013/11/'>November 2013</a></li>
	<li><a href='http://ottopress.com/2013/10/'>October 2013</a></li>
	<li><a href='http://ottopress.com/2013/06/'>June 2013</a></li>
	<li><a href='http://ottopress.com/2013/03/'>March 2013</a></li>
	<li><a href='http://ottopress.com/2012/11/'>November 2012</a></li>
	<li><a href='http://ottopress.com/2012/09/'>September 2012</a></li>
	<li><a href='http://ottopress.com/2012/08/'>August 2012</a></li>
	<li><a href='http://ottopress.com/2012/07/'>July 2012</a></li>
	<li><a href='http://ottopress.com/2012/05/'>May 2012</a></li>
	<li><a href='http://ottopress.com/2012/02/'>February 2012</a></li>
	<li><a href='http://ottopress.com/2012/01/'>January 2012</a></li>
	<li><a href='http://ottopress.com/2011/12/'>December 2011</a></li>
	<li><a href='http://ottopress.com/2011/11/'>November 2011</a></li>
	<li><a href='http://ottopress.com/2011/10/'>October 2011</a></li>
	<li><a href='http://ottopress.com/2011/09/'>September 2011</a></li>
	<li><a href='http://ottopress.com/2011/08/'>August 2011</a></li>
	<li><a href='http://ottopress.com/2011/07/'>July 2011</a></li>
	<li><a href='http://ottopress.com/2011/06/'>June 2011</a></li>
	<li><a href='http://ottopress.com/2011/05/'>May 2011</a></li>
	<li><a href='http://ottopress.com/2011/04/'>April 2011</a></li>
	<li><a href='http://ottopress.com/2011/03/'>March 2011</a></li>
	<li><a href='http://ottopress.com/2011/02/'>February 2011</a></li>
	<li><a href='http://ottopress.com/2011/01/'>January 2011</a></li>
	<li><a href='http://ottopress.com/2010/12/'>December 2010</a></li>
	<li><a href='http://ottopress.com/2010/11/'>November 2010</a></li>
	<li><a href='http://ottopress.com/2010/10/'>October 2010</a></li>
	<li><a href='http://ottopress.com/2010/09/'>September 2010</a></li>
	<li><a href='http://ottopress.com/2010/08/'>August 2010</a></li>
	<li><a href='http://ottopress.com/2010/06/'>June 2010</a></li>
	<li><a href='http://ottopress.com/2010/05/'>May 2010</a></li>
	<li><a href='http://ottopress.com/2010/04/'>April 2010</a></li>
	<li><a href='http://ottopress.com/2010/03/'>March 2010</a></li>
	<li><a href='http://ottopress.com/2010/02/'>February 2010</a></li>
	<li><a href='http://ottopress.com/2009/11/'>November 2009</a></li>
	<li><a href='http://ottopress.com/2009/09/'>September 2009</a></li>
	<li><a href='http://ottopress.com/2008/09/'>September 2008</a></li>
		</ul>
</li>
		<li id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widgettitle">Recent Posts</h2>
		<ul>
					<li>
				<a href="http://ottopress.com/2014/better-know-a-vulnerability-cross-site-request-forgery-csrf/">Better Know a Vulnerability: Cross Site Request Forgery (CSRF)</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/better-know-a-vulnerability-sql-injection/">Better Know a Vulnerability: SQL Injection</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/language-packs-101-prepwork/">Language Packs 101 &#8211; Prepwork</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/slides-a-presentation-theme/">Slides: A Presentation Theme</a>
						</li>
					<li>
				<a href="http://ottopress.com/2013/im-not-a-fan-of-orange/">I&#8217;m not a fan of orange&#8230;</a>
						</li>
				</ul>
		</li>
<li id="text-6" class="widget widget_text"><h2 class="widgettitle">WP Core Contributions</h2>
			<div class="textwidget"><p>
<a href='http://core.trac.wordpress.org/changeset/28072'>[28072]</a> - <a href='http://core.trac.wordpress.org/ticket/19393'>#19393</a><br />
<a href='http://core.trac.wordpress.org/changeset/27522'>[27522]</a> - <a href='http://core.trac.wordpress.org/ticket/19889'>#19889</a><br />
<a href='http://core.trac.wordpress.org/changeset/27399'>[27399]</a> - <a href='http://core.trac.wordpress.org/ticket/25665'>#25665</a><br />
<a href='http://core.trac.wordpress.org/changeset/26978'>[26978]</a> - <a href='http://core.trac.wordpress.org/ticket/23149'>#23149</a><br />
<a href='http://core.trac.wordpress.org/changeset/26711'>[26711]</a> - <a href='http://core.trac.wordpress.org/ticket/21442'>#21442</a><br />
<a href='http://core.trac.wordpress.org/changeset/26072'>[26072]</a> - <a href='http://core.trac.wordpress.org/ticket/25858'>#25858</a><br />
<a href='http://core.trac.wordpress.org/changeset/22152'>[22152]</a> - <a href='http://core.trac.wordpress.org/ticket/21914'>#21914</a><br />
<a href='http://core.trac.wordpress.org/changeset/22026'>[22026]</a> - <a href='http://core.trac.wordpress.org/ticket/22002'>#22002</a><br />
<a href='http://core.trac.wordpress.org/changeset/21839'>[21839]</a> - <a href='http://core.trac.wordpress.org/ticket/16996'>#16996</a><br />
<a href='http://core.trac.wordpress.org/changeset/21802'>[21802]</a> - <a href='http://core.trac.wordpress.org/ticket/18674'>#18674</a><br />
<a href='http://core.trac.wordpress.org/changeset/21776'>[21776]</a> - <a href='http://core.trac.wordpress.org/ticket/13729'>#13729</a><br />
<a href='http://core.trac.wordpress.org/changeset/21609'>[21609]</a> - <a href='http://core.trac.wordpress.org/ticket/19324'>#19324</a><br />
<a href='http://core.trac.wordpress.org/changeset/20916'>[20916]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20784'>[20784]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20783'>[20783]</a> - <a href='http://core.trac.wordpress.org/ticket/20448'>#20448</a><br />
<a href='http://core.trac.wordpress.org/changeset/20267'>[20267]</a> - <a href='http://core.trac.wordpress.org/ticket/13774'>#13774</a><br />
<a href='http://core.trac.wordpress.org/changeset/19721'>[19721]</a> - <a href='http://core.trac.wordpress.org/ticket/19626'>#19626</a><br />
<a href='http://core.trac.wordpress.org/changeset/19003'>[19003]</a> - <a href="http://core.trac.wordpress.org/ticket/17406">#17406</a><br />
<a href='http://core.trac.wordpress.org/changeset/18741'>[18741]</a> - <a href="http://core.trac.wordpress.org/ticket/15473">#15473</a><br />
<a href='http://core.trac.wordpress.org/changeset/18602'>[18602]</a> - <a href="http://core.trac.wordpress.org/ticket/18230">#18230</a><br />
<a href='http://core.trac.wordpress.org/changeset/18541'>[18541]</a> - <a href="http://core.trac.wordpress.org/ticket/16687">#16687</a><br />
<a href='http://core.trac.wordpress.org/changeset/18205'>[18205]</a> - <a href="http://core.trac.wordpress.org/ticket/17148">#17148</a><br />
<a href='http://core.trac.wordpress.org/changeset/17254'>[17254]</a> - <a href="http://core.trac.wordpress.org/ticket/16192">#16192</a><br />
<a href='http://core.trac.wordpress.org/changeset/16555'>[16555]</a> - <a href="http://core.trac.wordpress.org/ticket/12891">#12891</a><br />
<a href='http://core.trac.wordpress.org/changeset/16284'>[16284]</a> - <a href="http://core.trac.wordpress.org/ticket/13324">#13324</a><br />
<a href='http://core.trac.wordpress.org/changeset/13420'>[13420]</a> - <a href="http://core.trac.wordpress.org/ticket/12291">#12291</a><br />
<a href='http://core.trac.wordpress.org/changeset/12581'>[12581]</a> - <a href="http://core.trac.wordpress.org/ticket/7225">#7225</a><br />
<a href='http://core.trac.wordpress.org/changeset/11738'>[11738]</a> - <a href="http://core.trac.wordpress.org/ticket/10145">#10145</a><br />
<a href='http://core.trac.wordpress.org/changeset/11329'>[11329]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10962'>[10962]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10757'>[10757]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10753'>[10753]</a> - <a href="http://core.trac.wordpress.org/ticket/3962">#3962</a><br />
<a href='http://core.trac.wordpress.org/changeset/10252'>[10252]</a> - <a href="http://core.trac.wordpress.org/ticket/6791">#6791</a><br />
<a href='http://core.trac.wordpress.org/changeset/9276'>[9276]</a> - <a href="http://core.trac.wordpress.org/ticket/7124">#7124</a><br />
<a href='http://core.trac.wordpress.org/changeset/9209'>[9209]</a> - <a href="http://core.trac.wordpress.org/ticket/7901">#7901</a><br />
<a href='http://core.trac.wordpress.org/changeset/9207'>[9207]</a> - <a href="http://core.trac.wordpress.org/ticket/7635">#7635</a><br />
<a href='http://core.trac.wordpress.org/changeset/9139'>[9139]</a> - <a href="http://core.trac.wordpress.org/ticket/7847">#7847</a><br />
<a href='http://core.trac.wordpress.org/changeset/9089'>[9089]</a> - <a href="http://core.trac.wordpress.org/ticket/7772">#7772</a><br />
<a href='http://core.trac.wordpress.org/changeset/8968'>[8968]</a> - <a href="http://core.trac.wordpress.org/ticket/7761">#7761</a><br />
<a href='http://core.trac.wordpress.org/changeset/8285'>[8285]</a> - <a href="http://core.trac.wordpress.org/ticket/6879">#6879</a><br />
<a href='http://core.trac.wordpress.org/changeset/8208'>[8208]</a> - <a href="http://core.trac.wordpress.org/ticket/4448">#4448</a><br />
<a href='http://core.trac.wordpress.org/changeset/8132'>[8132]</a> - <a href="http://core.trac.wordpress.org/ticket/4954">#4954</a><br />
<a href='http://core.trac.wordpress.org/changeset/8131'>[8131]</a> - <a href="http://core.trac.wordpress.org/ticket/6590">#6590</a><br />
<a href='http://core.trac.wordpress.org/changeset/7869'>[7869]</a> - <a href="http://core.trac.wordpress.org/ticket/6513">#6513</a><br />
<a href='http://core.trac.wordpress.org/changeset/7647'>[7647]</a> - <a href="http://core.trac.wordpress.org/ticket/6608">#6608</a><br />
<a href='http://core.trac.wordpress.org/changeset/7461'>[7461]</a> - <a href="http://core.trac.wordpress.org/ticket/6339">#6339</a><br />
<a href='http://core.trac.wordpress.org/changeset/6873'>[6873]</a> - <a href="http://core.trac.wordpress.org/ticket/4986">#4986</a><br />
<a href='http://core.trac.wordpress.org/changeset/6760'>[6760]</a> - <a href="http://core.trac.wordpress.org/ticket/4617">#4617</a><br />
<a href='http://core.trac.wordpress.org/changeset/6616'>[6616]</a> - <a href="http://core.trac.wordpress.org/ticket/5155">#5155</a><br />
<a href='http://core.trac.wordpress.org/changeset/6439'>[6439]</a> - <a href="http://core.trac.wordpress.org/ticket/2805">#2805</a><br />
<a href='http://core.trac.wordpress.org/changeset/6091'>[6091]</a> - <a href="http://core.trac.wordpress.org/ticket/4182">#4182</a><br />
<a href='http://core.trac.wordpress.org/changeset/6086'>[6086]</a> - <a href="http://core.trac.wordpress.org/ticket/4946">#4946</a><br />
<a href='http://core.trac.wordpress.org/changeset/5986'>[5986]</a> - <a href="http://core.trac.wordpress.org/ticket/4873">#4873</a><br />
<a href='http://core.trac.wordpress.org/changeset/5982'>[5982]</a> - <a href="http://core.trac.wordpress.org/ticket/4800">#4800</a><br />
<a href='http://core.trac.wordpress.org/changeset/5958'>[5958]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5920'>[5920]</a> - <a href="http://core.trac.wordpress.org/ticket/4703">#4703</a><br />
<a href='http://core.trac.wordpress.org/changeset/5910'>[5910]</a> - <a href="http://core.trac.wordpress.org/ticket/4654">#4654</a><br />
<a href='http://core.trac.wordpress.org/changeset/5881'>[5881]</a> - <a href="http://core.trac.wordpress.org/ticket/4704">#4704</a><br />
<a href='http://core.trac.wordpress.org/changeset/5857'>[5857]</a> - <a href="http://core.trac.wordpress.org/ticket/4625">#4625</a><br />
<a href='http://core.trac.wordpress.org/changeset/5848'>[5848]</a> - <a href="http://core.trac.wordpress.org/ticket/4499">#4499</a><br />
<a href='http://core.trac.wordpress.org/changeset/5845'>[5845]</a> - <a href="http://core.trac.wordpress.org/ticket/4547">#4547</a><br />
<a href='http://core.trac.wordpress.org/changeset/5317'>[5317]</a> - <a href="http://core.trac.wordpress.org/ticket/4169">#4169</a><br />
<a href='http://core.trac.wordpress.org/changeset/5154'>[5154]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5151'>[5151]</a> - <a href="http://core.trac.wordpress.org/ticket/4057">#4057</a><br />
<a href='http://core.trac.wordpress.org/changeset/5104'>[5104]</a> - <a href="http://core.trac.wordpress.org/ticket/3790">#3790</a><br />
<a href='http://core.trac.wordpress.org/changeset/4964'>[4964]</a> - <a href="http://core.trac.wordpress.org/ticket/3898">#3898</a><br />
</p></div>
		</li>
		</ul>
	</div>

</div>
<div id="footer">
<div style="float:left;"><a href="http://internetdefenseleague.org"><img src="http://internetdefenseleague.org/images/badges/final/footer_badge.png" alt="Member of The Internet Defense League" /></a></div>
<a href="http://ottopress.com/feed/">Entries (RSS)</a> and <a href="http://ottopress.com/comments/feed/">Comments (RSS)</a>.<br />
<span about="http://ottodestruct.com/" xmlns:cc="http://creativecommons.org/ns#">
This page, by <a property="cc:attributionName" rel="cc:attributionURL" href="http://ottodestruct.com/">Otto</a>, is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-ShareAlike License</a>.</span><br />
Powered by <a href="http://wordpress.org/" title="Powered by WordPress.">WordPress</a>.<br />
<img alt='css.php' src="http://ottopress.com/wp-content/plugins/cookies-for-comments/css.php?k=c6a73cb029f035cdaa9e9e8336d25169&amp;o=i&amp;t=890546872" width='1' height='1' />	<div style="display:none">
	<div class="grofile-hash-map-c5cd629b9bad96fb402d908830faedf8">
	</div>
	<div class="grofile-hash-map-0994d5e2e158a24ba8017c2525d78263">
	</div>
	<div class="grofile-hash-map-d43bb4e348b0d3e41503731eb5072bb1">
	</div>
	<div class="grofile-hash-map-9f1574e8b6432f3d0135eb5a7481809e">
	</div>
	<div class="grofile-hash-map-ce2571c524eb0ecf60e07298838d8133">
	</div>
	<div class="grofile-hash-map-a57b423c87dc2ee04fa896fc3c957c30">
	</div>
	<div class="grofile-hash-map-383d4245458cb90f0501c14b8fbed01f">
	</div>
	<div class="grofile-hash-map-ec86df45f5b0198003c14a2ffcfeedde">
	</div>
	<div class="grofile-hash-map-5b20dd89f4cecd3c831f60c3ad5a4366">
	</div>
	<div class="grofile-hash-map-47fba210f8005647b8a126eb516bdf86">
	</div>
	<div class="grofile-hash-map-1fb5a81997dc8347fa1b6b0acd76aeea">
	</div>
	<div class="grofile-hash-map-9ed893450be36105536d81ad622678fc">
	</div>
	<div class="grofile-hash-map-0dac889d2029369f2a346bcbc00194a8">
	</div>
	<div class="grofile-hash-map-29c9306fe6701ad04933625135a45418">
	</div>
	<div class="grofile-hash-map-81df87e0d3e269d6fa6a17c6914fd656">
	</div>
	<div class="grofile-hash-map-d03ff21191264a58c34845a5b672ca0d">
	</div>
	<div class="grofile-hash-map-dd09899d257f16503bc4b23526ca46c1">
	</div>
	<div class="grofile-hash-map-7240f882bac7aea7b70ecc66bdedea87">
	</div>
	<div class="grofile-hash-map-3e9169a165e2277dbc36278f15af9658">
	</div>
	<div class="grofile-hash-map-9bfd188afa683b9e91d4e9e787136da1">
	</div>
	<div class="grofile-hash-map-7e7b0bcfc40856c220a14e309144af86">
	</div>
	<div class="grofile-hash-map-fac346456015713bfabbe6c0ceaba9ef">
	</div>
	<div class="grofile-hash-map-7b27a1079f60fe70944bfb8849ff0ab7">
	</div>
	<div class="grofile-hash-map-d72bf65b4c1f01885b85114b1267e6dc">
	</div>
	<div class="grofile-hash-map-8b499592dde59e46e9ab802fd8c651ca">
	</div>
	</div>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushSql.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPlain.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://ottopress.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<link rel='stylesheet' id='gplus-css'  href='http://ottopress.com/wp-content/plugins/jetpack/modules/gplus-authorship/style.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='yarppRelatedCss-css'  href='http://ottopress.com/wp-content/plugins/yet-another-related-posts-plugin/style/related.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/comment-reply.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/photon/photon.js?ver=20130122'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var mejsL10n = {"language":"en-US","strings":{"Close":"Close","Fullscreen":"Fullscreen","Download File":"Download File","Download Video":"Download Video","Play\/Pause":"Play\/Pause","Mute Toggle":"Mute Toggle","None":"None","Turn off Fullscreen":"Turn off Fullscreen","Go Fullscreen":"Go Fullscreen","Unmute":"Unmute","Mute":"Mute","Captions\/Subtitles":"Captions\/Subtitles"}};
var _wpmejsSettings = {"pluginPath":"\/wp-includes\/js\/mediaelement\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/mediaelement-and-player.min.js?ver=2.14.2'></script>
<script type='text/javascript' src='http://ottopress.com/wp-includes/js/mediaelement/wp-mediaelement.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://ottopress.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=3.9.1'></script>
<script type='text/javascript' src='//apis.google.com/js/plusone.js?ver=3.9.1'></script>

	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:3.0.2',blog:'12342457',post:'731',tz:'-5'});
	var load_cmc = function(){linktracker_init(12342457,731,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script></div></div>

<script type="text/javascript">
    window._idl = {};
    _idl.variant = "modal";
    (function() {
        var idl = document.createElement('script');
        idl.type = 'text/javascript';
        idl.async = true;
        idl.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'members.internetdefenseleague.org/include/?url=' + (_idl.url || '') + '&campaign=' + (_idl.campaign || '') + '&variant=' + (_idl.variant || 'banner');
        document.getElementsByTagName('body')[0].appendChild(idl);
    })();
</script>

</body>
</html>
	
