http://www.codercorner.com/blog/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 16:01:47 GMT
Content-Type: text/html; charset=UTF-8
Content-Length: 55890
Connection: close
Server: Apache/2
X-Powered-By: PHP/5.2.17
X-Pingback: http://www.codercorner.com/blog/xmlrpc.php
Accept-Ranges: bytes
Age: 0

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head profile="http://gmpg.org/xfn/11">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

	<title>Coder Corner  </title>
	
	<meta name="generator" content="WordPress 2.6" /> <!-- leave this for stats -->

	<link rel="stylesheet" href="http://www.codercorner.com/blog/wp-content/themes/falling-10/style.css" type="text/css" media="screen" />
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.codercorner.com/blog/?feed=rss2" />
	<link rel="alternate" type="text/xml" title="RSS .92" href="http://www.codercorner.com/blog/?feed=rss" />
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://www.codercorner.com/blog/?feed=atom" />
	<link rel="pingback" href="http://www.codercorner.com/blog/xmlrpc.php" />

	<link href="style.css" rel="stylesheet" type="text/css"/>
	
		<link rel='archives' title='June 2014' href='http://www.codercorner.com/blog/?m=201406' />
	<link rel='archives' title='March 2014' href='http://www.codercorner.com/blog/?m=201403' />
	<link rel='archives' title='December 2013' href='http://www.codercorner.com/blog/?m=201312' />
	<link rel='archives' title='June 2013' href='http://www.codercorner.com/blog/?m=201306' />
	<link rel='archives' title='May 2013' href='http://www.codercorner.com/blog/?m=201305' />
	<link rel='archives' title='March 2013' href='http://www.codercorner.com/blog/?m=201303' />
	<link rel='archives' title='January 2013' href='http://www.codercorner.com/blog/?m=201301' />
	<link rel='archives' title='November 2012' href='http://www.codercorner.com/blog/?m=201211' />
	<link rel='archives' title='July 2012' href='http://www.codercorner.com/blog/?m=201207' />
	<link rel='archives' title='June 2012' href='http://www.codercorner.com/blog/?m=201206' />
	<link rel='archives' title='May 2012' href='http://www.codercorner.com/blog/?m=201205' />
	<link rel='archives' title='April 2012' href='http://www.codercorner.com/blog/?m=201204' />
	<link rel='archives' title='March 2012' href='http://www.codercorner.com/blog/?m=201203' />
	<link rel='archives' title='December 2011' href='http://www.codercorner.com/blog/?m=201112' />
	<link rel='archives' title='October 2011' href='http://www.codercorner.com/blog/?m=201110' />
	<link rel='archives' title='September 2011' href='http://www.codercorner.com/blog/?m=201109' />
	<link rel='archives' title='August 2011' href='http://www.codercorner.com/blog/?m=201108' />
	<link rel='archives' title='June 2011' href='http://www.codercorner.com/blog/?m=201106' />
	<link rel='archives' title='April 2011' href='http://www.codercorner.com/blog/?m=201104' />
	<link rel='archives' title='March 2011' href='http://www.codercorner.com/blog/?m=201103' />
	<link rel='archives' title='February 2011' href='http://www.codercorner.com/blog/?m=201102' />
	<link rel='archives' title='January 2011' href='http://www.codercorner.com/blog/?m=201101' />
	<link rel='archives' title='November 2010' href='http://www.codercorner.com/blog/?m=201011' />
	<link rel='archives' title='October 2010' href='http://www.codercorner.com/blog/?m=201010' />
	<link rel='archives' title='September 2010' href='http://www.codercorner.com/blog/?m=201009' />
	<link rel='archives' title='July 2010' href='http://www.codercorner.com/blog/?m=201007' />
	<link rel='archives' title='June 2010' href='http://www.codercorner.com/blog/?m=201006' />
	<link rel='archives' title='April 2010' href='http://www.codercorner.com/blog/?m=201004' />
	<link rel='archives' title='March 2010' href='http://www.codercorner.com/blog/?m=201003' />
	<link rel='archives' title='December 2009' href='http://www.codercorner.com/blog/?m=200912' />
	<link rel='archives' title='October 2009' href='http://www.codercorner.com/blog/?m=200910' />
	<link rel='archives' title='August 2009' href='http://www.codercorner.com/blog/?m=200908' />
	<link rel='archives' title='July 2009' href='http://www.codercorner.com/blog/?m=200907' />
	<link rel='archives' title='June 2009' href='http://www.codercorner.com/blog/?m=200906' />
	<link rel='archives' title='May 2009' href='http://www.codercorner.com/blog/?m=200905' />
	<link rel='archives' title='April 2009' href='http://www.codercorner.com/blog/?m=200904' />
	<link rel='archives' title='March 2009' href='http://www.codercorner.com/blog/?m=200903' />
	<link rel='archives' title='January 2009' href='http://www.codercorner.com/blog/?m=200901' />
	<link rel='archives' title='November 2008' href='http://www.codercorner.com/blog/?m=200811' />
	<link rel='archives' title='October 2008' href='http://www.codercorner.com/blog/?m=200810' />
	<link rel='archives' title='September 2008' href='http://www.codercorner.com/blog/?m=200809' />
	<link rel='archives' title='August 2008' href='http://www.codercorner.com/blog/?m=200808' />
	<link rel='archives' title='July 2008' href='http://www.codercorner.com/blog/?m=200807' />
	<link rel='archives' title='June 2008' href='http://www.codercorner.com/blog/?m=200806' />
	<link rel='archives' title='May 2008' href='http://www.codercorner.com/blog/?m=200805' />
	<link rel='archives' title='April 2008' href='http://www.codercorner.com/blog/?m=200804' />
	<link rel='archives' title='March 2008' href='http://www.codercorner.com/blog/?m=200803' />
	<link rel='archives' title='February 2008' href='http://www.codercorner.com/blog/?m=200802' />

	<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.codercorner.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.codercorner.com/blog/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 2.6" />

<link rel="stylesheet" type="text/css" href="http://www.codercorner.com/blog/wp-content/plugins/wp-recaptcha/recaptcha.css" /></head>
<body style="text-align: center;">

<div id="page">


<div id="header">
	<div id="title">
		<h1><a href="http://www.codercorner.com/blog">Coder Corner</a></h1>
		<div class="description">Home of Pierre Terdiman</div>
	</div>
</div>

<div id="wrapper">
	<div id="content" class="narrowcolumn">

			
						
			<div class="post" id="post-1125">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=1125" rel="bookmark" title="Permanent Link to Website down">Website down</a></p>
				<p class="date">June 5th, 2014 <!-- by admin --></p>
				
				<div class="entry">
					<p>The website has been down for a month. I was busy and didn&#8217;t notice. Reason is explained below.</p>
<p>I have no time for this crap so I just removed the file.</p>
<p>No comments.</p>
<blockquote><p>&#8220;Hello,</p>
<p>I am sorry to inform you that your account has been suspended for creating excessive server load that has affected other customers. The file causing the issue is:</p>
<p>/KonokoPayne_WIP_November_2010.rar</p>
<p>You will either need to remove these files, limit access to them or block some of the IP addresses that are repeatedly accessing these files. Your access logs are located in your stats directory and you can use these to analyse the traffic to your site.</p>
<p>If you find that the traffic is genuine, we recommend moving your website to a Virtual Private Server (VPS).</p>
<p>If the traffic appears to be suspicious, we suggest blocking those suspicious IP&#8217;s through an .htaccess file; the &#8216;.htaccess editor&#8217; tools will allow you do to so. This will allow you to control how much, and what kind of traffic gets to the files in question.</p>
<p>Please let us know the exact steps you have taken to address this issue so that we can then reevaluate the suspension of your account.</p>
<p>Kurt B.<br />
Technical Support&#8221;</p></blockquote>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=13" title="View all posts in Globat sucks" rel="category">Globat sucks</a>,  <a href="http://www.codercorner.com/blog/?cat=4" title="View all posts in Oni / Konoko Payne" rel="category">Oni / Konoko Payne</a> |   <span>Comments Off</span></p>
			</div>
	
						
			<div class="post" id="post-1118">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=1118" rel="bookmark" title="Permanent Link to SIMD box-triangle overlap function">SIMD box-triangle overlap function</a></p>
				<p class="date">March 20th, 2014 <!-- by admin --></p>
				
				<div class="entry">
					<p>A long time ago (around 2001), I helped Tomas MÃ¶ller optimize a <a href="http://fileadmin.cs.lth.se/cs/Personal/Tomas_Akenine-Moller/code/">triangle-vs-box, SAT-based overlap test</a>. At that time I was working on the <em><a href="http://www.codercorner.com/Opcode.htm">Opcode </a></em>library, and such a function was needed to achieve my goals.</p>
<p>When working on <em>Opcode 2.0</em>, I wrote a SIMD version of that same function. Since then I have found several other SIMD implementations of that code, and while benchmarking them I found that most of them were surprisingly slow - sometimes slower than the original code! I cannot really explain why, but it seems to indicate that writing the SIMD version is not as straightforward as one could have imagined. And thus, I am now releasing my implementation, in the hope somebody will find it useful.</p>
<p>There are two versions of the original code, labelled &#8220;old code&#8221; and &#8220;new, faster code&#8221; <a href="http://fileadmin.cs.lth.se/cs/Personal/Tomas_Akenine-Moller/code/">online</a>. Despite the claims, on my Windows-based machine the &#8220;faster code&#8221; is significantly slower. It seems correct and expected that doing the &#8220;class III&#8221; tests last is the best, but I suppose this depends on both the architecture and the test scenario. In any case both versions (more or less verbatim, not quite) are included in the test benchmark.</p>
<p>The original code contains a lot of early exits, and thus the time it takes depends a lot on what codepath is taken. The best case is when you reach the first early exit. The worst case is when you reach the end of the function, i.e. the triangle and the box overlap. I believe one of the biggest mistakes made in the slow SIMD implementations was to get rid of branches and early exits at all costs (&#8221;Hey look! Zero branches! It must be super fast!&#8221;). Well of course that is a very naive view, things are way more subtle and complex than that. The fastest code is the one that is never executed, and thus, you should embrace early exits, not avoid them. In fact, my implementation contains one more early exit than the original code, for when the box fully contains the triangle (this was an important case for me in some application).</p>
<p>I have 4 different test scenarios:<br />
- best case<br />
- worst case<br />
- no hit<br />
- mixed</p>
<p>&#8220;Best case&#8221; is the aforementioned new early exit, for when the box fully contains the triangle. This is basically a point-in-AABB test, it is the first early exit in the code, and thus the &#8220;best case&#8221; is when we reach that codepath.</p>
<p>&#8220;Worst case&#8221; is when the box touches the triangle, but the triangle is not fully inside. In that case we reach the end of the overlap function without taking any early exits. This should be the slowest codepath.</p>
<p>&#8220;No hit&#8221; is when the triangle does not touch the box, and we reach one of the &#8220;regular&#8221; early exits (i.e. the ones that also existed in the non-SIMD code). Time depends on what codepath is reached.</p>
<p>&#8220;Mixed&#8221; is just a mix of the above cases.</p>
<p>Here are typical results on my test PC:</p>
<p>Version1 (MÃ¶ller&#8217;s &#8220;old code&#8221;):</p>
<blockquote><p>Time (default): 5072<br />
Time (default): 3773<br />
Time (default): 953<br />
Time (default): 5088<br />
Time (optimized): 246<br />
Time (optimized): 1898<br />
Time (optimized): 329<br />
Time (optimized): 1544<br />
Hits0/Hits1: 16384/16384<br />
Hits0/Hits1: 16384/16384<br />
Hits0/Hits1: 0/0<br />
Hits0/Hits1: 12420/12420<br />
Best case:Â  Speedup: 20.617886<br />
Worst case: Speedup: 1.987882<br />
No hit:Â Â Â Â  Speedup: 2.896657<br />
Mixed:Â Â Â Â Â  Speedup: 3.295337</p></blockquote>
<p>Version2 (MÃ¶ller&#8217;s &#8220;new, faster code&#8221;):</p>
<blockquote><p>Time (default): 6209<br />
Time (default): 4714<br />
Time (default): 1304<br />
Time (default): 5199<br />
Time (optimized): 237<br />
Time (optimized): 1822<br />
Time (optimized): 316<br />
Time (optimized): 1540<br />
Hits0/Hits1: 16384/16384<br />
Hits0/Hits1: 16384/16384<br />
Hits0/Hits1: 0/0<br />
Hits0/Hits1: 12420/12420<br />
Best case:Â  Speedup: 26.198313<br />
Worst case: Speedup: 2.587267<br />
No hit:Â Â Â Â  Speedup: 4.126582<br />
Mixed:Â Â Â Â Â  Speedup: 3.375974</p></blockquote>
<p>So what we see here:</p>
<p>- the &#8220;new, faster code&#8221; is in fact slower. Thus, ignore &#8220;Version2&#8243; from now on.</p>
<p>- the non-SIMD and SIMD version all find the same numbers of hits (as they should). I could have better tests for this but I&#8217;ve been using the SIMD version for a while now and it should be quite solid.</p>
<p>- the new, additional early exit gives me a 20X speedup. Not bad for a SIMD version whose theoretical maximum speedup is 4X. In the SIMD code, this is taken care of by this snippet:</p>
<p>if(1)<br />
{<br />
const unsigned int MaskI = 0&#215;7fFFffFF;<br />
__m128 cV = _mm_and_ps(v0V, _mm_load1_ps((const float*)&amp;MaskI));<br />
const unsigned int test = _mm_movemask_ps(_mm_sub_ps(cV, extentsV));<br />
if((test&amp;7)==7)<br />
return 1;<br />
}</p>
<p>That is well worth it if you ask me. Helped enormously in some past projects of mine.</p>
<p>- Speedups otherwise vary between 2X and 3X, which is what you usually expect from a good SIMD implementation.</p>
<p>And that&#8217;s about it. This is straightforward but apparently it is easy to write a bad SIMD version, that ends up slower than the original. I suppose some people just write the code, assume it&#8217;s good, and do not run benchmarks? I don&#8217;t know.</p>
<p>Bitcoin tip jar is <a href="http://www.codercorner.com/blog/?p=1107">here </a>if you end up using that code. Project files are <a href="http://www.codercorner.com/Code/SIMD_TriangleAABB.rar">here</a>.</p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=3" title="View all posts in Programming" rel="category">Programming</a> |   <a href="http://www.codercorner.com/blog/?p=1118#comments" title="Comment on SIMD box-triangle overlap function">6 Comments &#187;</a></p>
			</div>
	
						
			<div class="post" id="post-1107">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=1107" rel="bookmark" title="Permanent Link to Bitcoin tip jar">Bitcoin tip jar</a></p>
				<p class="date">December 13th, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p>Inspired by my friend <a href="http://codesuppository.blogspot.ch/2013/07/bitcoin-code-snippets.html">John Ratcliff</a>, I just created a bitcoin tip jar for myself. Let&#8217;s see what the fuss is all about!</p>
<p>If you used my radix sort code in one of your project&#8230;</p>
<p>Or my triangle stripper&#8230;</p>
<p>Or Flexporter&#8230;</p>
<p>Or Opcode&#8230;</p>
<p>If you enjoyed my posts about optimizing convex-convex SAT tests&#8230;</p>
<p>Or the one about precomputed node sorting&#8230;</p>
<p>Or the one about restricting &#8220;this&#8221;&#8230;</p>
<p>If you enjoyed playing Konoko Payne&#8230;</p>
<p>Or if you enjoyed my posts on the GD-Algorithms list&#8230;</p>
<p>Or if you enjoyed some of my demos on ST even&#8230;</p>
<p>Or any of the things I did until now&#8230;</p>
<p>Then feel free to donate some bitcoins! <img src='http://www.codercorner.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
<p>The address is:</p>
<p><strong><span class="null">1CPhg4bPZvNTdcp4vMXS1mzeGBq7KZx9NL</span></strong></p>
<p><img class="alignnone" title="QR code" src="https://blockchain.info/qr?data=1CPhg4bPZvNTdcp4vMXS1mzeGBq7KZx9NL&amp;size=200" alt="" width="200" height="200" /></p>
<p><a href="https://blockchain.info/address/1CPhg4bPZvNTdcp4vMXS1mzeGBq7KZx9NL">https://blockchain.info/address/1CPhg4bPZvNTdcp4vMXS1mzeGBq7KZx9NL</a></p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=1" title="View all posts in Uncategorized" rel="category">Uncategorized</a> |   <span>Comments Off</span></p>
			</div>
	
						
			<div class="post" id="post-1090">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=1090" rel="bookmark" title="Permanent Link to Closed comments">Closed comments</a></p>
				<p class="date">June 20th, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p>Sigh.</p>
<p>Yes I&#8217;ve closed the comments after a recent spam attack that left me with 750+ comments to moderate in just one day. Sorry, I have no time for this.</p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=5" title="View all posts in Rant" rel="category">Rant</a> |   <span>Comments Off</span></p>
			</div>
	
						
			<div class="post" id="post-922">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=922" rel="bookmark" title="Permanent Link to Mega stacks">Mega stacks</a></p>
				<p class="date">May 23rd, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p>In my previous posts I mentioned some R&amp;D code I wrote for large stable stacks. I can&#8217;t talk much about the algorithms involved, for obvious reasons, but I can share a small proof of concept demo.</p>
<p><a href="http://www.codercorner.com/BoxStacksPublicDemo.rar">Click here to download.</a></p>
<p>(Note: don&#8217;t let the &#8220;CUDA Test&#8221; title fool you, it&#8217;s all CPU)</p>
<p style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/megastack.png"><img class="size-medium wp-image-923 aligncenter" title="megastack" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/megastack-292x300.png" alt="" width="292" height="300" /></a></p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=9" title="View all posts in Physics" rel="category">Physics</a> |   <a href="http://www.codercorner.com/blog/?p=922#comments" title="Comment on Mega stacks">1 Comment &#187;</a></p>
			</div>
	
						
			<div class="post" id="post-920">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=920" rel="bookmark" title="Permanent Link to Firefox">Firefox</a></p>
				<p class="date">May 23rd, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p>Looks like this blog doesn&#8217;t render properly in Internet Explorer. Oh well, no idea why. Use Firefox.</p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=5" title="View all posts in Rant" rel="category">Rant</a> |   <a href="http://www.codercorner.com/blog/?p=920#comments" title="Comment on Firefox">3 Comments &#187;</a></p>
			</div>
	
						
			<div class="post" id="post-917">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=917" rel="bookmark" title="Permanent Link to The evolution of PhysX - Addendum">The evolution of PhysX - Addendum</a></p>
				<p class="date">May 13th, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p>I got a bunch of questions about my last series of blog posts so I thought I&#8217;d add a quick note here - at the risk of confusing people even more.</p>
<p>The figures I posted are for the CPU part of PhysX only. This does not concern or affect the GPU parts of PhysX in any way. Those things are orthogonal. If we optimize the CPU parts and get a 10X speedup, it does not mean your GPU will suddenly provide 10X less value, because it is running others parts of PhysX anyway - neither the rigid bodies, nor the raycasts/sweeps.</p>
<p>Only a few features are GPU-accelerated, e.g. cloth or particles, mainly because they are the ones that map well to GPUs, and they are the ones for which the GPUs provide real X factors.</p>
<p>Now as shown in the recent &#8220;destruction video&#8221; I posted, people here are also working on GPU-optimized rigid bodies. This new module is called &#8220;GRB&#8221;, and it is currently <em>not </em>part of PhysX. But it does provide a speedup compared to our current CPU solution. In other words, it is still faster than PhysX 3.3 on CPU. You might have a hard time believing it, but people are trying to be fair and honest here. One of our tasks is to optimize the CPU rigid bodies as much as we possibly can, just to make sure that the GPU rigid bodies do provide some actual benefit and speedups. If you don&#8217;t do that, you release your GPU solution, it&#8217;s slower than a CPU solution, and you look like a fool. Like AGEIA. We are not making that mistake again. The CPU solution is here as a reality check for ourselves. I suppose we could just use Bullet or Havok for this, but&#8230; well&#8230; we think we can do better <img src='http://www.codercorner.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
<p>Meanwhile, it is correct that the features that do work on GPU are currently only working on NVIDIA cards, simply because they are implemented using CUDA. There are both obvious political and technical reasons for this. It should be pretty clear that at the end of the day, NVIDIA would like you to choose one of their GPUs. If you are actually complaining about <em>that</em>, then there is little discussion left to have. Of course they want to sell their products, like every other company in the world. And of course they are going to use their own technology, CUDA, to do so. To me this is pretty much the same as what we had in the past with D3D caps. Some cards supported cubemaps, or PN-triangles, or whatever, and some didn&#8217;t. GPU PhysX is the same. It&#8217;s just an extra cap supported by some cards, and not by other. Complaining about this is silly to me. It would be like complaining that ATI didn&#8217;t make any effort to make PN-triangles work on NVIDIA cards. Seriously, what?</p>
<p>The deal is simple. NVIDIA gives you a free, efficient, robust physics engine. In exchange, if possible, add some extra GPU effects to give people an incentive to buy NVIDIA cards. Fair enough, right? I don&#8217;t see what the fuss is all about.</p>
<p style="text-align: center;">&#8212;-</p>
<p>Anyway, the usual disclaimer applies here: I&#8217;m not a spokesperson for NVIDIA, what I write are my own thoughts about it, and for all I know I may be completely wrong about their intentions. What I know for a fact though, is that most of the stuff I read online about PhysX is just <span style="text-decoration: line-through;">completely insane</span> wrong.</p>
<p>I&#8217;ve been optimizing rigid body simulation in NovodeX/PhysX for a long time now, and there&#8217;s no big conspiracy behind it. Again, all those engines are free and publicly available so I invite you to run your own experiments, do your own benchmarks, and see for yourselves. We really have nothing to hide.</p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=9" title="View all posts in Physics" rel="category">Physics</a>,  <a href="http://www.codercorner.com/blog/?cat=5" title="View all posts in Rant" rel="category">Rant</a> |   <a href="http://www.codercorner.com/blog/?p=917#comments" title="Comment on The evolution of PhysX - Addendum">1 Comment &#187;</a></p>
			</div>
	
						
			<div class="post" id="post-914">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=914" rel="bookmark" title="Permanent Link to The evolution of PhysX - Index">The evolution of PhysX - Index</a></p>
				<p class="date">May 11th, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p>Part1: <a href="http://www.codercorner.com/blog/?p=748">PEEL</a></p>
<p>Part2: <a href="http://www.codercorner.com/blog/?p=761">Rigid bodies (box stacks)</a></p>
<p>Part3: <a href="http://www.codercorner.com/blog/?p=767">Rigid bodies (convex stacks)</a></p>
<p>Part4: <a href="http://www.codercorner.com/blog/?p=773">Rigid bodies (piles)</a></p>
<p>Part5: <a href="http://www.codercorner.com/blog/?p=781">Rigid bodies (compounds)</a></p>
<p>Part6: <a href="http://www.codercorner.com/blog/?p=787">Rigid bodies (meshes)</a></p>
<p>Part7: <a href="http://www.codercorner.com/blog/?p=797">Joints</a></p>
<p>Part8: <a href="http://www.codercorner.com/blog/?p=809">Raycasts vs simple shapes</a></p>
<p>Part9: <a href="http://www.codercorner.com/blog/?p=819">Raycasts vs meshes</a></p>
<p>Part10: <a href="http://www.codercorner.com/blog/?p=833">Sweep tests</a></p>
<p>Part11: <a href="http://www.codercorner.com/blog/?p=845">More sweep tests</a></p>
<p>Part12: <a href="http://www.codercorner.com/blog/?p=864">Final test and conclusion</a></p>
<p><a href="http://www.codercorner.com/blog/?p=917">Addendum</a></p>
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=9" title="View all posts in Physics" rel="category">Physics</a> |   <a href="http://www.codercorner.com/blog/?p=914#comments" title="Comment on The evolution of PhysX - Index">3 Comments &#187;</a></p>
			</div>
	
						
			<div class="post" id="post-864">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=864" rel="bookmark" title="Permanent Link to The evolution of PhysX (12/12) - Final test and conclusion">The evolution of PhysX (12/12) - Final test and conclusion</a></p>
				<p class="date">May 11th, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p><!--[if gte mso 9]><xml> <w:WordDocument> <w:View>Normal</w:View> <w:Zoom>0</w:Zoom> <w:Compatibility> <w:BreakWrappedTables /> <w:SnapToGridInCell /> <w:WrapTextWithPunct /> <w:UseAsianBreakRules /> </w:Compatibility> </w:WordDocument> </xml><![endif]--><!--[if gte mso 10]> <mce:style><!   /* Style Definitions */  table.MsoNormalTable 	{mso-style-name:"Table Normal"; 	mso-tstyle-rowband-size:0; 	mso-tstyle-colband-size:0; 	mso-style-noshow:yes; 	mso-style-parent:""; 	mso-padding-alt:0cm 5.4pt 0cm 5.4pt; 	mso-para-margin:0cm; 	mso-para-margin-bottom:.0001pt; 	mso-pagination:widow-orphan; 	font-size:10.0pt; 	font-family:"Times New Roman";} --> <!--[endif] --></p>
<p class="MsoNormal">This last test (âSeaOfStaticBoxes3â) didnât fit in any category, so I kept it for the end. It does not actually do anything, it only creates a massive amount of static boxes (255*255). There is otherwise no dynamic objects in the scene, nothing to simulate at all.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/seaofstaticboxes3.png"><img class="size-medium wp-image-865 aligncenter" title="seaofstaticboxes3" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/seaofstaticboxes3-292x300.png" alt="" width="292" height="300" /></a></p>
<p>There are 2 things to notice here. The first one is memory usage. We went from 94Mb to 54Mb to 39Mb, from one PhysX version to another. Thatâs the right direction here!</p>
<p class="MsoNormal">The other thing is the time it takes to simulate an empty scene. As you can see, it doesnât take much time with PhysX â as it should. Bullet however, for some reason, takes a massive amount of time here. On my home PC, Bullet takes about <strong>34ms</strong> (!?) to simulate this empty scene. I double-checked everything, looking for something I did wrong, but it turns out <a href="http://bulletphysics.org/Bullet/phpBB3/viewtopic.php?f=9&amp;t=8636">the problem has already been reported on the Bullet forums</a>. I think this should be fixed and work out-of-the-box.</p>
<p class="MsoNormal">In any case, I am not here to fix Bullet issues. The point is simply, again, that contrary to what people may still believe, PhysX is actually very optimized and a perfectly fine <em>CPU </em>physics engine. In fact, if some competitors would not prevent me from publishing the results, I would happily show you that it often beats everybody else. I invite curious readers to create their own benchmarks and see for themselves.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p class="MsoNormal">This report is currently incomplete: it did not talk about CCD, or multithreaded simulations, or overlap tests. It also barely scratched the surface of what these physics engines have to offer: I did not talk about character controllers, vehicles, the performance of binary deserialization, or any of those more advanced topics.</p>
<p class="MsoNormal">As you can easily imagine, I&#8217;d need to write a book to cover all this, not just some blog posts.</p>
<p class="MsoNormal">However I think these posts may reach their limited goal, which is simply to show with very basic tests that:</p>
<ul>
<li>PhysX is getting faster all the time</li>
<li>PhysX is very well optimized, thank you very much</li>
</ul>
<p class="MsoNormal">
<p class="MsoNormal">
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=9" title="View all posts in Physics" rel="category">Physics</a> |   <a href="http://www.codercorner.com/blog/?p=864#comments" title="Comment on The evolution of PhysX (12/12) - Final test and conclusion">7 Comments &#187;</a></p>
			</div>
	
						
			<div class="post" id="post-845">
				<p class="title_post"><a href="http://www.codercorner.com/blog/?p=845" rel="bookmark" title="Permanent Link to The evolution of PhysX (11/12) - More sweep tests">The evolution of PhysX (11/12) - More sweep tests</a></p>
				<p class="date">May 11th, 2013 <!-- by admin --></p>
				
				<div class="entry">
					<p class="MsoNormal">Now that weâre done with the simple stuff, letâs jump to the next level: meshes.</p>
<p class="MsoNormal">The first mesh scene (âSceneBoxSweepVsStaticMeshes_Archipelagoâ) performs 1K vertical box sweeps against the mesh level we previously used.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_archipelago.png"><img class="size-medium wp-image-846  aligncenter" title="sceneboxsweepvsstaticmeshes_archipelago" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_archipelago-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">There are no terribly big surprises here. All engines report the same number of hits. Each PhysX version is faster than the one before. They all perform adequately.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_archipelago_graph.png"><img class="size-medium wp-image-847  aligncenter" title="sceneboxsweepvsstaticmeshes_archipelago_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_archipelago_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">PhysX 3.3 is only about 2X faster than PhysX 2.8.4, so things were generally ok there.</p>
<p class="MsoNormal">Bullet suffers a bit, being a bit more than 6X slower than PhysX 3.3 on average.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p class="MsoNormal">For the next tests we switch back to the Konoko Payne level, which is much more complex and thus, maybe, closer to what a modern game would have to deal with. We start with sphere-sweeps against it (âSceneSphereSweepVsStaticMeshes_KPâ).</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_kp.png"><img class="size-medium wp-image-848  aligncenter" title="scenespheresweepvsstaticmeshes_kp" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_kp-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">Results are quite similar to what we got for the Archipelago scene: PhysX gets faster with each new version, 3.3 is a bit more than 2X faster compared to 2.8.4.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_kp_graph.png"><img class="size-medium wp-image-849  aligncenter" title="scenespheresweepvsstaticmeshes_kp_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_kp_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">Bullet suffers again, being now a bit more than 8X slower than PhysX 3.3 on average.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p>The same test using box-sweeps (âSceneBoxSweepVsStaticMeshes_KPâ) reveals the same kind of results again.</p>
<p style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_kp.png"><img class="size-medium wp-image-850  aligncenter" title="sceneboxsweepvsstaticmeshes_kp" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_kp-292x300.png" alt="" width="292" height="300" /></a></p>
<p>This time PhysX 3.3 is about 3.3X faster than 2.8.4.</p>
<p style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_kp_graph.png"><img class="size-medium wp-image-851  aligncenter" title="sceneboxsweepvsstaticmeshes_kp_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_kp_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">Remarkably, PhysX 3.3 is more than an order of magnitude faster than Bullet here (about <strong style="mso-bidi-font-weight: normal;">11.6X</strong>)!</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p class="MsoNormal">Finally, the same test using capsule-sweeps (âSceneCapsuleSweepVsStaticMeshes_KPâ) confirms this trend.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_kp.png"><img class="size-medium wp-image-852   aligncenter" title="scenecapsulesweepvsstaticmeshes_kp" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_kp-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">PhysX 3.3 is a bit more than 2X faster than 2.8.4, once again.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_kp_graph.png"><img class="size-medium wp-image-853  aligncenter" title="scenecapsulesweepvsstaticmeshes_kp_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_kp_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">As for Bullet, it is now about <strong style="mso-bidi-font-weight: normal;">15X</strong> slower than PhysX 3.3. I feel a bit sorry for Bullet but I think this proves my point: people who claim PhysX is not optimized for CPU should pay attention here.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p>Now the KP scene, as you may remember from the raycasts section, has a lot of meshes in the scene but each mesh is kind of small. We will now test the opposite, the Bunny scene, which was a scene with just one highly-tessellated mesh.</p>
<p class="MsoNormal">And since we are here to stress test the engines, we are going to run several long radial sweeps against it.</p>
<p class="MsoNormal">And using large shapes to boot.</p>
<p class="MsoNormal">This is not supposed to be friendly. This is actually designed to break your engines.</p>
<p class="MsoNormal">So, what do we get?</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p class="MsoNormal">Letâs start with the spheres (âSceneSphereSweepVsStaticMeshes_TessBunnyâ).</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_tessbunny.png"><img class="size-medium wp-image-854  aligncenter" title="scenespheresweepvsstaticmeshes_tessbunny" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_tessbunny-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">Note that we only use 64 sweeps here, but it takes about the same time (or more) than performing 16K radial raycasts against the same meshâ¦ Yup, such is the evil nature of this stress test.</p>
<p class="MsoNormal">It is so evil that for the first time, there really isnât much of a difference between each PhysX versions. We didnât progress much here.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_tessbunny_graph.png"><img class="size-medium wp-image-855  aligncenter" title="scenespheresweepvsstaticmeshes_tessbunny_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenespheresweepvsstaticmeshes_tessbunny_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">Nonetheless, PhysX is an order of magnitude faster than Bullet here. Again, contrary to what naysayers may say, the CPU version of PhysX is actually very fast.</p>
<p class="MsoNormal">In fact, stay tuned.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p class="MsoNormal">Switch to capsule sweeps (âSceneCapsuleSweepVsStaticMeshes_TessBunnyâ). Again, only 64 sweeps here.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_tessbunny.png"><img class="size-medium wp-image-856  aligncenter" title="scenecapsulesweepvsstaticmeshes_tessbunny" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_tessbunny-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">There is virtually no difference between PhysX 3.2 and 3.3, but they are both measurably faster than 2.8.4. Not by much, but itâs better than no gain at all, as in the previous test.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_tessbunny_graph.png"><img class="size-medium wp-image-857   aligncenter" title="scenecapsulesweepvsstaticmeshes_tessbunny_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenecapsulesweepvsstaticmeshes_tessbunny_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">Now the interesting figure, of course, is the performance ratio compared to Bullet. Yep, PhysX is about <strong style="mso-bidi-font-weight: normal;">25X</strong> faster here. I canât explain it, and itâs not my job. Iâm only providing a reality check for a few people here.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;-</p>
<p class="MsoNormal">Ok, this is starting to be embarrassing for Bullet so letâs be fair and show that we also blew it in the past. Kind of.</p>
<p class="MsoNormal">Switch to box sweeps (âSceneBoxSweepVsStaticMeshes_TessBunny_Test1â). And use fairly large boxes because itâs more fun. Again, we only need 64 innocent sweep tests to produce this massacre.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_tessbunny_test1.png"><img class="size-medium wp-image-858  aligncenter" title="sceneboxsweepvsstaticmeshes_tessbunny_test1" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_tessbunny_test1-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">Look at that! Woah.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_tessbunny_test1_graph.png"><img class="size-medium wp-image-859  aligncenter" title="sceneboxsweepvsstaticmeshes_tessbunny_test1_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/sceneboxsweepvsstaticmeshes_tessbunny_test1_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">âEach PhysX version is faster than the one beforeâ, hell yeah! PhysX 3.3 is about 4X faster than PhysX 3.2, and about <strong style="mso-bidi-font-weight: normal;">31X</strong> faster (!) than PhysX 2.8.4. Again, if you are still using 2.8.4, do yourself a favor and upgrade.</p>
<p class="MsoNormal">As for Bullet&#8230; what can I say? PhysX 3.3 is <strong style="mso-bidi-font-weight: normal;">123X</strong> faster than Bullet in this test. There. Thatâs 2 orders of magnitude. This is dedicated to all people still thinking that PhysX is ânot optimized for the CPUâ, or âcrippledâ, or any other nonsense.</p>
<p class="MsoNormal" style="text-align: center;">&#8212;</p>
<p class="MsoNormal">The final test (âSceneLongBoxSweepVsSeaOfStaticsâ) has a pretty explicit name. Itâs just one box sweep. The sweep is very large, going from one side of the world to the other, in diagonal. The world is massive, made of thousands of statics. So thatâs pretty much the worst case you can get.</p>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenelongboxsweepvsseaofstatics.png"><img class="size-medium wp-image-860  aligncenter" title="scenelongboxsweepvsseaofstatics" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenelongboxsweepvsseaofstatics-292x300.png" alt="" width="292" height="300" /></a></p>
<p class="MsoNormal">The results are quite revealing. And yes, the numbers are correct.</p>
<p class="MsoNormal">For this single sweep test, PhysX 3.3 is:</p>
<ul>
<li><strong style="mso-bidi-font-weight: normal;">60X</strong> faster than PhysX 3.2</li>
<li><strong style="mso-bidi-font-weight: normal;">270X</strong> faster than PhysX 2.8.4</li>
<li><strong style="mso-bidi-font-weight: normal;">317X</strong> faster than Bullet</li>
</ul>
<p class="MsoNormal" style="text-align: center;"><a href="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenelongboxsweepvsseaofstatics_graph.png"><img class="size-medium wp-image-861  aligncenter" title="scenelongboxsweepvsseaofstatics_graph" src="http://www.codercorner.com/blog/wp-content/uploads/2013/05/scenelongboxsweepvsseaofstatics_graph-300x180.png" alt="" width="300" height="180" /></a></p>
<p class="MsoNormal">Spectacular, isnât it?</p>
<p class="MsoNormal">
				</div>
		
				<p class="postmetadata">Posted in <a href="http://www.codercorner.com/blog/?cat=9" title="View all posts in Physics" rel="category">Physics</a> |   <span>Comments Off</span></p>
			</div>
	
		
		<div class="navigation">
			<div class="alignleft"><a href="http://www.codercorner.com/blog/?paged=2">&laquo; Previous Entries</a></div>
			<div class="alignright"></div>
		</div>
		
	
	</div>

	<div id="sidebar">
		<ul>
      
		  	<li>
						</li>
			
						
      <li><h2>Search</h2>
				<form method="get" id="searchform" action="/blog/index.php">
<div><input type="text" value="" name="s" id="s" />
<input type="submit" id="searchsubmit" value="Search" />
</div>
</form>			</li>

			<!-- Author information is disabled per default. Uncomment and fill in your details if you want to use it.
			<li><h2>Author</h2>
			<p>A little something about you, the author. Nothing lengthy, just an overview.</p>
			</li>
			-->

			<li class="pagenav"><h2>Pages</h2><ul><li class="page_item page-item-2"><a href="http://www.codercorner.com/blog/?page_id=2" title="About">About</a></li>
</ul></li> 

			<li><h2>Archives</h2>
				<ul>
					<li><a href='http://www.codercorner.com/blog/?m=201406' title='June 2014'>June 2014</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201403' title='March 2014'>March 2014</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201312' title='December 2013'>December 2013</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201306' title='June 2013'>June 2013</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201305' title='May 2013'>May 2013</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201303' title='March 2013'>March 2013</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201301' title='January 2013'>January 2013</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201211' title='November 2012'>November 2012</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201207' title='July 2012'>July 2012</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201206' title='June 2012'>June 2012</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201205' title='May 2012'>May 2012</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201204' title='April 2012'>April 2012</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201203' title='March 2012'>March 2012</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201112' title='December 2011'>December 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201110' title='October 2011'>October 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201109' title='September 2011'>September 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201108' title='August 2011'>August 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201106' title='June 2011'>June 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201104' title='April 2011'>April 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201103' title='March 2011'>March 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201102' title='February 2011'>February 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201101' title='January 2011'>January 2011</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201011' title='November 2010'>November 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201010' title='October 2010'>October 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201009' title='September 2010'>September 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201007' title='July 2010'>July 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201006' title='June 2010'>June 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201004' title='April 2010'>April 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=201003' title='March 2010'>March 2010</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200912' title='December 2009'>December 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200910' title='October 2009'>October 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200908' title='August 2009'>August 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200907' title='July 2009'>July 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200906' title='June 2009'>June 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200905' title='May 2009'>May 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200904' title='April 2009'>April 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200903' title='March 2009'>March 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200901' title='January 2009'>January 2009</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200811' title='November 2008'>November 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200810' title='October 2008'>October 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200809' title='September 2008'>September 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200808' title='August 2008'>August 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200807' title='July 2008'>July 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200806' title='June 2008'>June 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200805' title='May 2008'>May 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200804' title='April 2008'>April 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200803' title='March 2008'>March 2008</a></li>
	<li><a href='http://www.codercorner.com/blog/?m=200802' title='February 2008'>February 2008</a></li>
				</ul>
			</li>

			<li><h2>Categories</h2>
				<ul>
					<li class="cat-item cat-item-8"><a href="http://www.codercorner.com/blog/?cat=8" title="View all posts filed under Atari ST">Atari ST</a> (13)
</li>
	<li class="cat-item cat-item-13"><a href="http://www.codercorner.com/blog/?cat=13" title="View all posts filed under Globat sucks">Globat sucks</a> (4)
</li>
	<li class="cat-item cat-item-15"><a href="http://www.codercorner.com/blog/?cat=15" title="View all posts filed under Iceland">Iceland</a> (10)
</li>
	<li class="cat-item cat-item-6"><a href="http://www.codercorner.com/blog/?cat=6" title="View all posts filed under Ideas to try">Ideas to try</a> (4)
</li>
	<li class="cat-item cat-item-10"><a href="http://www.codercorner.com/blog/?cat=10" title="View all posts filed under Life">Life</a> (46)
</li>
	<li class="cat-item cat-item-4"><a href="http://www.codercorner.com/blog/?cat=4" title="View all posts filed under Oni / Konoko Payne">Oni / Konoko Payne</a> (34)
</li>
	<li class="cat-item cat-item-9"><a href="http://www.codercorner.com/blog/?cat=9" title="View all posts filed under Physics">Physics</a> (35)
</li>
	<li class="cat-item cat-item-3"><a href="http://www.codercorner.com/blog/?cat=3" title="View all posts filed under Programming">Programming</a> (79)
</li>
	<li class="cat-item cat-item-5"><a href="http://www.codercorner.com/blog/?cat=5" title="View all posts filed under Rant">Rant</a> (37)
</li>
	<li class="cat-item cat-item-12"><a href="http://www.codercorner.com/blog/?cat=12" title="View all posts filed under Resource needed">Resource needed</a> (1)
</li>
	<li class="cat-item cat-item-1"><a href="http://www.codercorner.com/blog/?cat=1" title="View all posts filed under Uncategorized">Uncategorized</a> (5)
</li>
	<li class="cat-item cat-item-14"><a href="http://www.codercorner.com/blog/?cat=14" title="View all posts filed under Wanted - Weapons of Fate">Wanted - Weapons of Fate</a> (6)
</li>
				</ul>
			</li>

      
			<li> 
			   <ul>
					
				  <li id="linkcat-2" class="linkcat"><h2>Blogroll</h2>
	<ul>
<li><a href="http://www.moravanszky.com/">Adam Moravanszky</a></li>
<li><a href="http://altdevblogaday.com/">altdevblogaday</a></li>
<li><a href="http://blog.jesuisunterdi.fr/">Antoine Terdiman</a></li>
<li><a href="http://www.atari-forum.com/">Atari forums</a></li>
<li><a href="http://www.bulletphysics.com/Bullet/phpBB3/">Bullet Physics forums</a></li>
<li><a href="http://www.bungie.net/Inside/publications.aspx">Bungie Publications</a></li>
<li><a href="http://www.cbloom.com/">Charles Bloom</a></li>
<li><a href="http://realtimecollisiondetection.net/blog/">Christer Ericson</a></li>
<li><a href="http://tuxedolabs.blogspot.com/" title="Physics blog from Dennis">Dennis Gustafsson</a></li>
<li><a href="http://www.devbump.com/">Devbump</a></li>
<li><a href="http://digestingduck.blogspot.com/" title="Home of Recast library">Digesting Duck</a></li>
<li><a href="http://www.iquilezles.org/blog/" title="iq">El Trastero</a></li>
<li><a href="http://www.humus.name/index.php?page=News">Humus</a></li>
<li><a href="http://castano.ludicon.com/blog/">Ignacio Castano</a></li>
<li><a href="http://www.insomniacgames.com/tech/techpage.php">Insomniac Games R&#38;D</a></li>
<li><a href="http://www.iguanademos.com/Jare/jblog_main.php" title="Jare / Iguana">Jare</a></li>
<li><a href="http://jratcliffscarab.blogspot.com/">John Ratcliff</a></li>
<li><a href="http://msinilo.pl/blog/">Maciej Sinilo</a></li>
<li><a href="https://mollyrocket.com/forums/index.php?sid=8a25506e2e63ebc6dbba67402cddb996">Molly Rocket</a></li>
<li><a href="http://www.naughtydog.com/corporate/press-events.html">Naughty Dog Publications</a></li>
<li><a href="http://oni.bungie.org/community/forum/index.php">Oni forums</a></li>
<li><a href="http://randomascii.wordpress.com/" title="Bruce Dawson">Random Ascii</a></li>
<li><a href="http://timmoss.blogspot.com/">Tim Moss</a></li>
<li><a href="http://home.comcast.net/~tom_forsyth/blog.wiki.html">Tom Forsyth</a></li>
<li><a href="http://www.valvesoftware.com/publications.html">Valve Publications</a></li>
<li><a href="http://blog.wolfire.com/" title="Home of Lugaru &amp; Overgrowth">Wolfire blog</a></li>

	</ul>
</li>
				</ul>
		  </li>
				
			<li><h2>Calendar</h2>
		     <table id="wp-calendar" summary="Calendar">
	<caption>July 2014</caption>
	<thead>
	<tr>
		<th abbr="Monday" scope="col" title="Monday">M</th>
		<th abbr="Tuesday" scope="col" title="Tuesday">T</th>
		<th abbr="Wednesday" scope="col" title="Wednesday">W</th>
		<th abbr="Thursday" scope="col" title="Thursday">T</th>
		<th abbr="Friday" scope="col" title="Friday">F</th>
		<th abbr="Saturday" scope="col" title="Saturday">S</th>
		<th abbr="Sunday" scope="col" title="Sunday">S</th>
	</tr>
	</thead>

	<tfoot>
	<tr>
		<td abbr="June" colspan="3" id="prev"><a href="http://www.codercorner.com/blog/?m=201406" title="View posts for June 2014">&laquo; Jun</a></td>
		<td class="pad">&nbsp;</td>
		<td colspan="3" id="next" class="pad">&nbsp;</td>
	</tr>
	</tfoot>

	<tbody>
	<tr>
		<td colspan="1" class="pad">&nbsp;</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td>
	</tr>
	<tr>
		<td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td>
	</tr>
	<tr>
		<td>14</td><td>15</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td>
	</tr>
	<tr>
		<td>21</td><td>22</td><td id="today">23</td><td>24</td><td>25</td><td>26</td><td>27</td>
	</tr>
	<tr>
		<td>28</td><td>29</td><td>30</td><td>31</td>
		<td class="pad" colspan="3">&nbsp;</td>
	</tr>
	</tbody>
	</table>		  </li>	
				
			<li><h2>Meta</h2>
				<ul>
										<li><a href="http://www.codercorner.com/blog/wp-login.php">Log in</a></li>
					<li><a href="http://validator.w3.org/check/referer" title="This page validates as XHTML 1.0 Transitional">Valid <abbr title="eXtensible HyperText Markup Language">XHTML</abbr></a></li>
					<li><a href="http://gmpg.org/xfn/"><abbr title="XHTML Friends Network">XFN</abbr></a></li>
					<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress</a></li>
									</ul>
				</li>
		
			
		</ul>
	</div>

</div>
<p>&nbsp;</p>



<div id="footer">
	<div class="credit">
		Coder Corner is powered by <a href="http://wordpress.org" target="_blank">WordPress</a> 
    <br/>Theme by <a href="http://wordpress.graphic-dreams.it" target="_blank">Graphic Dreams</a>, based on the default theme <br/> 
    Image: blend with Royalty Free Images by Computer Arts
		<br /><a href="http://www.codercorner.com/blog/?feed=rss2">Entries (RSS)</a>
		e <a href="http://www.codercorner.com/blog/?feed=comments-rss2">Comments (RSS)</a>.
		<!-- 22 queries. 0.269 seconds. -->
	</div>
</div>
</div>

		<span style="display:none"><a href="http://shopfr.org/achat/cialis">shopfr.org cialis</a></span>
		
</body>
</html>

