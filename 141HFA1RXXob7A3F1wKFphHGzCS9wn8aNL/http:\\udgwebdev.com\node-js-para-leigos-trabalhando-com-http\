http://udgwebdev.com/node-js-para-leigos-trabalhando-com-http/
HTTP/1.1 200 OK
Server: cloudflare-nginx
Date: Thu, 24 Jul 2014 14:44:49 GMT
Content-Type: text/html; charset=utf-8
Connection: close
Set-Cookie: __cfduid=dd7cf348e770418fe0f8bc620e05456f21406213089325; expires=Mon, 23-Dec-2019 23:50:00 GMT; path=/; domain=.udgwebdev.com; HttpOnly
Last-Modified: Sat, 05 Jul 2014 12:57:44 GMT
Expires: Thu, 24 Jul 2014 14:54:49 GMT
Cache-Control: max-age=600
Vary: Accept-Encoding
Vary: Accept-Encoding
CF-RAY: 14f0e5e045a60850-IAD
Content-Encoding: gzip

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#">
<head>
<title>Node.js para leigos - Trabalhando com HTTP | Underground WebDev</title>
<meta charset="utf-8">
<meta name="google-site-verification" content="xqC7DkHqceqa-iRl0l-e5RI5rqxsJ3_8wFJPctG9t2E">
<meta name="viewport" content="width=device-width,initial-scale=1">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="author" content="Caio Ribeiro Pereira">
<meta name="description" content="Node.js é uma plataforma multiprotocolo, ou seja, com ele será possível trabalhar com HTTP, DNS, TCP, WebSockets e muito mais.">
<meta name="keywords" content="Curso de Node.js, Node.js, Node.js para leigos, Trabalhando com HTTP">
<meta property="og:title" content="Node.js para leigos - Trabalhando com HTTP | Underground WebDev">
<meta property="og:description" content="Node.js é uma plataforma multiprotocolo, ou seja, com ele será possível trabalhar com HTTP, DNS, TCP, WebSockets e muito mais.">
<meta property="og:url" content="http://udgwebdev.com/node-js-para-leigos-trabalhando-com-http">
<meta property="og:site_name" content="Underground WebDev">
<meta property="og:type" content="website">
<link rel="author" href="https://plus.google.com/106082169903180828657">
<!--[if lt IE 9]>
      <script src="http://udgwebdev.com/javascripts/html5.min.js" type="text/javascript"></script>
    <![endif]-->
<link rel="icon" type="image/x-icon" href="http://udgwebdev.com/favicon.ico">
<link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://udgwebdev.com/images/udgwebdev-logo-144.png">
<link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://udgwebdev.com/images/udgwebdev-logo-114.png">
<link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://udgwebdev.com/images/udgwebdev-logo-72.png">
<link rel="apple-touch-icon-precomposed" sizes="57x57" href="http://udgwebdev.com/images/udgwebdev-logo-57.png">
<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Droid+Sans:normal,bold">
<link href="http://udgwebdev.com/stylesheets/udgwebdev.css" type="text/css" rel="stylesheet">
</head>
<body>
<header class="navbar">
<div class="navbar-inner">
<div class="container-fluid">
<div class="logo">
<a href="http://udgwebdev.com" title="Um blog PDD (Passion-Driven Development) - Underground WebDev" rel="author">
<img src="http://udgwebdev.com/images/udgwebdev-logo-114.png" alt="Um blog PDD (Passion-Driven Development) - Underground WebDev">
</a>
<br>
<h1>Underground WebDev</h1>
<p>Um blog PDD (Passion-Driven Development)</p>
</div>
</div>
</div>
</header>
<nav class="container-fluid">
<ul class="menu nav nav-pills">
<li><a href="http://udgwebdev.com" rel="me" title="Home">Home</a></li>
<li><a href="http://udgwebdev.com/nodejs" rel="me" title="Node.js para iniciante"><i class="icon-angle-circled-right"></i>Node.js</a></li>
<li><a href="http://udgwebdev.com/meteor" rel="me" title="Tudo sobre Meteor"><i class="icon-angle-circled-right"></i>Meteor</a></li>
<li><a href="http://udgwebdev.com/dicas-de-terminal" rel="me" title="Dicas de terminal"><i class="icon-angle-circled-right"></i>Terminal</a></li>
</ul>
</nav>
<hr>
<main class="container-fluid">
<section class="row-fluid">
<section class="span9">
<article class="article">
<h1><a href="http://udgwebdev.com/node-js-para-leigos-trabalhando-com-http" rel="me">Node.js para leigos - Trabalhando com HTTP</a></h1>
<p class="pub-date">
Escrito em <time datetime="15/07/2012" pubdate>15/07/2012</time>
por <a href="http://twitter.com/crp_underground" target="_blank" rel="nofollow">Caio Ribeiro Pereira</a>.
</p>
<figure class="post-image">
<img src="http://udgwebdev.com/images/nodejs-para-leigos.jpg" width="250" height="137" alt="Curso de Node.js" title="Curso de Node.js">
<figcaption>Curso de Node.js</figcaption>
</figure>
<div class="post-content">
<p>Node.js é uma plataforma multiprotocolo, ou seja, com ele será possível trabalhar com HTTP, DNS, TCP, WebSockets e muito mais. Porém um dos protocolos mais usados para desenvolver sistemas web é o protocolo HTTP, de fato é o protocolo com a maior quantidade de módulos disponíveis para trabalhar no Node.js.</p>
<p>Hoje apresentarei um pouco sobre como desenvolver uma aplicação HTTP, na prática desenvolveremos um simples sistema web utilizando o módulo nativo HTTP e também apresentando alguns módulos mais estruturados para desenvolver aplicações complexas.</p>
<p>Toda aplicação web necessita de um servidor web em execução para disponibilizar todos os seus recursos, na prática você irá desenvolver uma <strong>aplicação servidora</strong>, ou seja, além de programar todas funcionalidades da sua aplicação você também terá que configurar na própria aplicação aspectos sobre como <strong>ela servirar seus recursos para o cliente</strong> quando for executá-la. Essas <strong>configurações são conhecidas como middleware</strong>, é claro que é um trabalho dobrado no começo, mas isso traz a liberdade de configurar cada mínimo detalhe do sistema, ou seja, permite desenvolver algo mais performático e controlado pelo programador. Caso performance não seja prioridade no desenvolvimento do seu sistema, recomendo que utilize alguns módulos famosos que já vem com o mínimo necessário de configurações prontas para não perder tempo trabalhando sobre esse aspecto, alguns módulos conhecidos são: <a href="http://www.senchalabs.org/connect/" title="Connect" target="_blank">Connect</a>, <a href="http://expressjs.com/" title="ExpressJS" target="_blank">Express</a>, <a href="http://geddyjs.org/" title="Geddy" target="_blank">Geddy</a> <a href="https://github.com/joyent/node/wiki/Modules#wiki-web-frameworks" title="Node.js Web Frameworks" target="_blank">e muito mais aqui</a>. Esses módulos já são preparados para trabalhar desde uma <strong>infraestrutura mínima e básica (Microframeworks)</strong> até uma <strong>infraestrutura mais enxuta com padrões do tipo MVC (Model-View-Controller) e outros padrões de projetos (MVC Frameworks).</strong></p>
<p>De ínicio usaremos apenas o <strong><a href="http://nodejs.org/api/http.html" title="Documentação da API HTTP" target="_blank">módulo nativo HTTP</a></strong>, pois precisamos entender todo conceito do mesmo, visto que todos os frameworks citados acima utilizam ele como estrutura inicial em seus projetos.</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">){</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;Content-Type&quot;</span><span class="o">:</span> <span class="s2">&quot;text/html&quot;</span><span class="p">});</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Olá Node.js!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
<span class="p">});</span>

<span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Executando Servidor HTTP&#39;</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div>
<p>Esse é um exemplo clássico e simples de um servidor web sendo executado na <strong>porta 3000</strong>, respondendo por padrão na <strong>rota raíz "/"</strong> um resultado em <strong>formato html</strong> com a mensagem <strong>Olá Node.js!</strong>.</p>
<p>Agora complicando mais, vamos adicionar duas rotas nesse sistema, uma rota para página de erro e também um link em cada página html para intergir uma com a outra:</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">){</span>

  <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;Content-Type&quot;</span><span class="o">:</span> <span class="s2">&quot;text/html&quot;</span><span class="p">});</span>

  <span class="k">if</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">url</span> <span class="o">==</span> <span class="s2">&quot;/&quot;</span><span class="p">){</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Olá Node.js!&lt;/h1&gt;&quot;</span><span class="p">);</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;a href=&#39;/bemvindo&#39;&gt;Bem vindo&lt;/a&gt;&quot;</span><span class="p">);</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span>
  <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">url</span> <span class="o">==</span> <span class="s2">&quot;/bemvindo&quot;</span><span class="p">){</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Bem-vindo ao Node.js!&lt;/h1&gt;&quot;</span><span class="p">);</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;a href=&#39;/&#39;&gt;Olá Node.js&lt;/a&gt;&quot;</span><span class="p">);</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span>
  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;Página não encontrada!&lt;/h1&gt;&quot;</span><span class="p">);</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;a href=&#39;/&#39;&gt;Voltar para o início&lt;/a&gt;&quot;</span><span class="p">);</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
<span class="p">});</span>

<span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Executando Servidor HTTP&#39;</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div>
<p>Todo leitura de url é obtida através do método <strong>request.url</strong> que retorna uma string sobre o que foi digitado no endereço url do seu browser. Endereços urls do protocolo http possui alguns padrões como <strong>query strings (?nome=joao)</strong> e <strong>pathnames (/admin)</strong> e sinceramente tratar toda string url seria trabalhoso demais, sendo que já existem diversos exemplos prontos para isso. No Node.js existe o <strong><a href="http://nodejs.org/api/url.html" title="Documentação da API URL" target="_blank">módulo chamado url</a></strong> responsável por realizar um <strong>parser e formatação de strings url</strong>, veja como um exemplo abaixo:</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">){</span>

  <span class="c1">// Faz um parse da string url digitada.</span>
  <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
	
  <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;Content-Type&quot;</span><span class="o">:</span> <span class="s2">&quot;text/html&quot;</span><span class="p">});</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;html&gt;&lt;body&gt;&quot;</span><span class="p">);</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;h1&gt;Dados da query string&lt;/h1&gt;&quot;</span><span class="p">);</span>
  <span class="c1">// Itera o resultado de parâmetros passados via query string.</span>
  <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">result</span><span class="p">.</span><span class="nx">query</span><span class="p">){</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;h2&gt;&quot;</span><span class="o">+</span><span class="nx">key</span><span class="o">+</span><span class="s2">&quot; : &quot;</span><span class="o">+</span><span class="nx">result</span><span class="p">.</span><span class="nx">query</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&lt;/h2&gt;&quot;</span><span class="p">);</span>
  <span class="p">}</span>	
  <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s2">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span>
  <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
<span class="p">});</span>

<span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Executando Servidor HTTP&#39;</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div>
<p>Digite no seu browser a url: <strong>http://localhost:3000/?nome=joao&idade=22&email=<a class="__cf_email__" href="http://www.cloudflare.com/email-protection" data-cfemail="e68c898789a68b878f8ac8888392">[email&nbsp;protected]</a><script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();
/* ]]> */
</script></strong> para ver os resultados tratados pelo <strong>parse de url</strong>. Agora vamos separar o código HTML do código Node.js em arquivos distintos, para isso utilizaremos o <strong><a href="http://nodejs.org/api/fs.html" title="Documentação da API FS" target="_blank">módulo nativo FS (File System)</a></strong> que faz tratamento de arquivos, que no nosso caso será leitura de arquivo HTML.</p>
<div class="highlight"><pre><code class="javascript"><span class="c1">// app.js</span>
<span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">){</span>
  <span class="nx">fs</span><span class="p">.</span><span class="nx">readFile</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">&#39;/index.html&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">html</span><span class="p">){</span>		
    <span class="nx">response</span><span class="p">.</span><span class="nx">writeHeader</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/html&#39;</span><span class="p">});</span>
    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">html</span><span class="p">);</span> 
    <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>		
  <span class="p">});</span>
<span class="p">});</span>

<span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Executando Servidor HTTP&#39;</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div>
<div class="highlight"><pre><code class="html"><span class="c">&lt;!-- index.html --&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Hello World<span class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Hello World<span class="nt">&lt;/h1&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div>
<p>Neste código temos dois detalhes interessantes a citar, primeiro é a constante global chamada <strong>__dirname</strong> que retona uma string referente ao endereço raíz da aplicação, é uma variável muito útil, pois através dela podemos referenciar pastas e arquivos internos. </p>
<p>Outro detalhe é o método <strong>fs.readFile()</strong>, repare que o resultado da leitura do <strong>arquivo index.html</strong> é enviado via <strong>função de callback</strong>, ou seja através da <strong>function(erro, html) que é um parâmetro da função fs.readFile()</strong>, na prática diversos módulos trabalham dessa forma no Node.js, pois o retorno de resultados através de funções callbacks são tratados de forma assíncrona <strong>(característica principal do Javascript)</strong> e isso é algo muito interessante pois permite tratar a execução das rotinas da aplicação de forma paralela, e isso você usará frequentemente no Node.js. Alguns módulos apresentam em suas documentações duas alternativas de trabalhar com uma mesma função, são elas conhecidas como <strong>execução síncrona e assíncrona.</strong> Sempre que puder <strong>utilize as versões assíncronas</strong> em seus projetos, pois as <strong>execuções assíncronas são mais perfomáticas</strong> e normalmente <strong>não bloqueiam</strong> a execução de outras <strong>rotinas síncronas</strong> do seu sistema, mesmo quando ocorrem problemas durante suas execuções.</p>
<div class="align-center">
<figure class="hidden-phone post-ads">
<script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
 
<ins class="adsbygoogle" style="display:inline-block;width:250px;height:250px" data-ad-client="ca-pub-2455578542304422" data-ad-slot="6141463857"></ins>
<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
		</script>
</figure>
</div>
<p>Por hoje é só galera, passei o básico e essencial guia de sobrevivência Node.js com protocolo HTTP, espero que tenham gostado, se surgir dúvidas, problemas ou sugestões, comentem abaixo ou entrem em contato comigo, ok? Até a próxima!</p>
</div>
<div class="share-box">
Compartilhe:&nbsp;
<a target="_blank" rel="nofollow" title="Compartilhe este post em seu Facebook!" href="https://www.facebook.com/sharer.php?u=http%3A%2F%2Fudgwebdev.com%2Fnode-js-para-leigos-trabalhando-com-http&t=Node.js+para+leigos+-+Trabalhando+com+HTTP">
<i class="icon-facebook"></i>&nbsp;Facebook
</a>
&nbsp;
<a target="_blank" rel="nofollow" title="Compartilhe este post em seu Twitter!" href="https://twitter.com/intent/tweet?text=Node.js+para+leigos+-+Trabalhando+com+HTTP%20-%20http%3A%2F%2Fudgwebdev.com%2Fnode-js-para-leigos-trabalhando-com-http&via=crp_underground">
<i class="icon-twitter"></i>&nbsp;Twitter
</a>
&nbsp;
<a target="_blank" rel="nofollow" title="Compartilhe este post em seu LinkedIn!" href="http://www.linkedin.com/shareArticle?mini=true&url=http%3A%2F%2Fudgwebdev.com%2Fnode-js-para-leigos-trabalhando-com-http&title=Node.js+para+leigos+-+Trabalhando+com+HTTP&summary=Node.js+%C3%A9+uma+plataforma+multiprotocolo%2C+ou+seja%2C+com+ele+ser%C3%A1+poss%C3%ADvel+trabalhar+com+HTTP%2C+DNS%2C+TCP%2C+WebSockets+e+muito+mais.&source=Underground+WebDev">
<i class="icon-linkedin"></i>&nbsp;LinkedIn
</a>
&nbsp;
<a target="_blank" rel="nofollow" title="Compartilhe este post em seu Google+!" href="https://plus.google.com/share?url=http%3A%2F%2Fudgwebdev.com%2Fnode-js-para-leigos-trabalhando-com-http">
<i class="icon-googleplus"></i>&nbsp;Google+
</a>
</div>
<hr>
<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'udgwebdev';
    (function() {var dsq = document.createElement('script'); dsq.type = 'text/javascript';dsq.async = true;dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);})();
  </script>
</article>
</section>
<aside class="span3">
<section class="aside-section">
<div class="menu-box">
<p>
<a href="http://weekly.udgwebdev.com" target="_blank" title="Inscrever-se na UDGWebDev Weekly">
<img src="http://udgwebdev.com/images/udgwebdev_weekly-small.png" width="200" height="56" alt="UDGWebDev Weekly" title="UDGWebDev Weekly">
</a>
</p>
<p><a href="http://weekly.udgwebdev.com" title="Sobre a newsletter">UDGWebDev Weekly</a> é a nova newsletter que visa compartilhar novidades sobre o mundo do desenvolvimento web e recomendar frameworks open-source. A newsletter é semanal, com conteúdo de qualidade.</p>
<p><a href="http://weekly.udgwebdev.com" class="btn btn-danger btn-large" target="_blank" title="Assinar UDGWebDev Weekly">Assinar</a></p>
</div>
</section>
<section class="aside-section">
<ul class="nav nav-list">
<li class="nav-header"><h1>Network</h1></li>
<li>
<a href="https://www.facebook.com/udgwebdev" target="_blank" title="Curtir fanpage do blog" rel="nofollow">
<i class="icon-facebook"></i>&nbsp;Facebook
</a>
</li>
<li>
<a href="http://twitter.com/crp_underground" target="_blank" title="Seguir twitter do autor" rel="nofollow">
<i class="icon-twitter"></i>&nbsp;Twitter
</a>
</li>
<li>
<a href="http://www.linkedin.com/pub/caio-ribeiro-pereira/25/7ba/465" target="_blank" title="LinkedIn do autor" rel="nofollow">
<i class="icon-linkedin"></i>&nbsp;LinkedIn
</a>
</li>
<li>
<a href="https://plus.google.com/106082169903180828657" target="_blank" title="+1 no perfil do autor" rel="nofollow">
<i class="icon-googleplus"></i>&nbsp;Google+
</a>
</li>
<li>
<a href="https://github.com/caio-ribeiro-pereira" target="_blank" title="Projetos open-source do autor" rel="nofollow">
<i class="icon-github"></i>&nbsp;Github
</a>
</li>
<li>
<a href="http://www.slideshare.net/caioribeiropereira/" target="_blank" title="Slides do autor" rel="nofollow">
<i class="icon-slideshare"></i>&nbsp;Slideshare
</a>
</li>
<li>
<a href="http://feeds.feedburner.com/UndergroundWebDev" target="_blank" title="RSS do Blog" rel="nofollow">
<i class="icon-rss"></i>&nbsp;RSS
</a>
</li>
<li>
<a href="http://www.cloudflare.com/email-protection#2241434b4d0c504b40474b504d0c524750474b504362454f434b4e0c414d4f" target="_blank" title="E-mail do autor" rel="nofollow">
<i class="icon-email"></i>&nbsp;E-mail
</a>
</li>
<li>
<a href="http://udgwebdev.com/sobre" rel="me" title="Sobre o autor">
<i class="icon-emo-happy"></i>&nbsp;Sobre o autor</a>
</li>
</ul>
</section>
<section class="aside-section">
<ul class="nav nav-list">
<li class="nav-header"><h1>Menu</h1></li>
<li>
<a href="http://udgwebdev.com/menu#dicas-de-terminal">
<i class="icon-angle-circled-right"></i>&nbsp;Dicas de terminal&nbsp;(16)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#sistemas-operacionais">
<i class="icon-angle-circled-right"></i>&nbsp;Sistemas operacionais&nbsp;(13)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#ruby">
<i class="icon-angle-circled-right"></i>&nbsp;Ruby&nbsp;(4)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#javascript">
<i class="icon-angle-circled-right"></i>&nbsp;Javascript&nbsp;(5)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#git">
<i class="icon-angle-circled-right"></i>&nbsp;Git&nbsp;(2)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#ide">
<i class="icon-angle-circled-right"></i>&nbsp;IDE&nbsp;(3)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#java">
<i class="icon-angle-circled-right"></i>&nbsp;Java&nbsp;(2)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#node.js">
<i class="icon-angle-circled-right"></i>&nbsp;Node.js&nbsp;(42)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#slides">
<i class="icon-angle-circled-right"></i>&nbsp;Slides&nbsp;(4)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#nosql">
<i class="icon-angle-circled-right"></i>&nbsp;NoSQL&nbsp;(3)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#soudev">
<i class="icon-angle-circled-right"></i>&nbsp;SouDev&nbsp;(6)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#seo">
<i class="icon-angle-circled-right"></i>&nbsp;SEO&nbsp;(1)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#paas">
<i class="icon-angle-circled-right"></i>&nbsp;PaaS&nbsp;(2)
</a>
</li>
<li>
<a href="http://udgwebdev.com/menu#meteor">
<i class="icon-angle-circled-right"></i>&nbsp;Meteor&nbsp;(10)
</a>
</li>
</ul>
</section>
<section class="aside-section">
<ul class="nav nav-list">
<li class="nav-header"><h1>Comunidades</h1></li>
<li><a href="http://nodebr.com" title="Blog da comunidade brasileira de Node.js" target="_blank" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;NodeBr Blog</a></li>
<li><a href="https://groups.google.com/forum/#!forum/nodebr" title="Fórum da comunidade brasileira de Node.js" target="_blank" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;NodeBr Google Groups</a></li>
<li><a href="https://www.facebook.com/groups/nodejsbrasil" title="Node.js Brasil Facebook Groups" target="_blank" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;NodeBr Facebook Groups</a></li>
<li><a href="https://groups.google.com/forum/#!forum/meteor-brasil" title="Meteor Brasil Google Groups" target="_blank" rel="me"><i class="icon-emo-happy"></i>&nbsp;Meteor Brasil Google Groups</a></li>
<li><a href="https://www.facebook.com/groups/meteorbrasil" title="Meteor Brasil Facebook Groups" target="_blank" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;Meteor Brasil Facebook Groups</a></li>
<li><a href="http://br.meteor.com" title="Fórum Meteor Br" target="_blank" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;Fórum Meteor Br</a></li>
<li><a href="http://www.devinsantos.com.br" target="_blank" title="DevInSantos" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;DevInSantos</a></li>
<li><a href="https://groups.google.com/forum/#!forum/devinsantos" title="DevInSantos Google Groups" target="_blank" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;DevInSantos Google Groups</a></li>
<li><a href="https://groups.google.com/forum/#!forum/guru-baixada" target="_blank" title="Fórum dos desenvolvedores do Guru-Baixada" rel="co-worker"><i class="icon-emo-happy"></i>&nbsp;Guru-Baixada</a></li>
</ul>
</section>
<section class="aside-section">
<ul class="nav nav-list">
<li class="nav-header"><h1>Conheça também</h1></li>
<li><a href="http://udglinux.com" target="_blank" title="Tudo sobre tecnologia, web, open-source, linux e mais linux - Underground Linux" rel="author"><i class="icon-group"></i>&nbsp;Underground Linux</a></li>
<li><a href="http://crpunderground.wordpress.com" target="_blank" title="Compartilhando idéias e opiniões - CRP Underground" rel="author"><i class="icon-group"></i>&nbsp;CRP Underground</a></li>
<li><a href="http://crpwebdev.com" target="_blank" title="CRP WebDev" rel="author"><i class="icon-group"></i>&nbsp;CRP WebDev</a></li>
<li><a href="http://frontendparaleigos.cc" target="_blank" title="Front-end para leigos" rel="colleague"><i class="icon-group"></i>&nbsp;Front-end para leigos</a></li>
<li><a href="http://alexandregama.wordpress.com" target="_blank" title="Sobre desenvolvimento, boas práticas e discussões" rel="colleague"><i class="icon-group"></i>&nbsp;Alexandre Gama</a></li>
<li><a href="http://www.clipartlogo.com/language?locale=pt_BR" target="_blank" rel="colleague"><i class="icon-group"></i>&nbsp;Clipartlogo</a></li>
<li><a href="http://tutoriaisweb.com" target="_blank" title="Tutoriais Web"><i class="icon-group"></i>&nbsp;Tutoriais Web</a></li>
<li><a href="http://veiadigital.com.br" target="_blank" title="Blog Veia Digital"><i class="icon-group"></i>&nbsp;Veia Digital</a></li>
<li><a href="http://datacode.com.br" target="_blank" title="Criação e Otimização de Sites"><i class="icon-group"></i>&nbsp;Data Code</a></li>
<li><a href="http://www.vidageek.net" target="_blank" title="VidaGeek"><i class="icon-group"></i>&nbsp;VidaGeek</a></li>
<li><a href="http://devtroll.blogspot.com.br" target="_blank" title="Troll Development - Programação sem enrolação!" rel="colleague"><i class="icon-group"></i>&nbsp;Troll Development</a></li>
<li>
<a href="http://www.cloudflare.com/email-protection#1271737b7d3c607b70777b607d3c627760777b607352757f737b7e3c717d7f2d616770787771662f4273607177607b7332507e7d7532477c76776075607d677c7632XWebDev&body=Blog: %0A%0aAutor: %0A%0AURL:%0A%0A" title="A regra para parceria é simples, ao clicar neste link informe seus dados e por último adicione o link deste blog (http://udgwebdev.com) em seu site para confirmar nossa parceria. :)" rel="nofollow" target="_blank">
<i class="icon-emo-sunglasses"></i>&nbsp;Parceria de links
</a>
</li>
</ul>
</section>
<section class="aside-section">
<h1 class="menu-title">Livros</h1>
<div data-cdc data-highlight="meteor,nodejs" data-limit="50" data-book-meteor="https://casadocodigo.refersion.com/l/d88.3525" data-book-nodejs="https://casadocodigo.refersion.com/l/630.1389" data-book-arquiteturajava="https://casadocodigo.refersion.com/l/5bd.1531" data-book-programacao="https://casadocodigo.refersion.com/l/20e.1530" data-book-startupguia="https://casadocodigo.refersion.com/l/98b.1529" data-book-webdesignresponsivo="https://casadocodigo.refersion.com/l/79c.1528" data-book-tdd="https://casadocodigo.refersion.com/l/bbf.1527" data-book-tdddotnet="https://casadocodigo.refersion.com/l/77c.1526" data-book-javafx="https://casadocodigo.refersion.com/l/d05.1525" data-book-rest="https://casadocodigo.refersion.com/l/7f4.1524" data-book-ruby="https://casadocodigo.refersion.com/l/3e2.1523" data-book-android="https://casadocodigo.refersion.com/l/39f.1522" data-book-jsfeficaz="https://casadocodigo.refersion.com/l/6c1.1521" data-book-springframework="https://casadocodigo.refersion.com/l/aa0.1520" data-book-rubyonrails="https://casadocodigo.refersion.com/l/bc3.1519" data-book-iphoneipadios="https://casadocodigo.refersion.com/l/02f.1518" data-book-vraptor="https://casadocodigo.refersion.com/l/05f.1517" data-book-htmlcss="https://casadocodigo.refersion.com/l/86f.1516" data-book-designpatterns="https://casadocodigo.refersion.com/l/40f.1515" data-book-javascriptjquery="https://casadocodigo.refersion.com/l/13d.1514" data-book-webmobile="https://casadocodigo.refersion.com/l/08a.1513" data-book-cucumberrspectddbdd="https://casadocodigo.refersion.com/l/5c9.1512" data-book-kinect="https://casadocodigo.refersion.com/l/def.1511" data-book-jogosios="https://casadocodigo.refersion.com/l/7b7.1510" data-book-devops="https://casadocodigo.refersion.com/l/06c.1509" data-book-jogosandroid="https://casadocodigo.refersion.com/l/285.1508" data-book-cdi="https://casadocodigo.refersion.com/l/a1b.1507" data-book-agile="https://casadocodigo.refersion.com/l/a66.1506" data-book-scrum="https://casadocodigo.refersion.com/l/3c1.1505" data-book-jsfjpa="https://casadocodigo.refersion.com/l/335.1504" data-book-linux="https://casadocodigo.refersion.com/l/a93.1503" data-book-soawebservices="https://casadocodigo.refersion.com/l/02d.1502" data-book-phpmysql="https://casadocodigo.refersion.com/l/d2e.1501" data-book-adobelightroom="https://casadocodigo.refersion.com/l/386.1500" data-book-jpaeficaz="https://casadocodigo.refersion.com/l/222.1499" data-book-aspnetmvc="https://casadocodigo.refersion.com/l/71d.1498" data-book-photoshop="https://casadocodigo.refersion.com/l/7c7.1497" data-book-programador-apaixonado="https://casadocodigo.refersion.com/l/720.2296" data-book-reflexao-anotacoes="https://casadocodigo.refersion.com/l/992.2297"></div>
<script type="text/javascript">
    (function() {
      var t = document.createElement('script');
      t.type = 'text/javascript';
      t.async = true;
      t.src = 'http://widget.casadocodigo.com.br/cdc.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(t, s);
    })();
  </script>
</section>
<section class="aside-section">
<h1 class="menu-title">Seja camarada!&nbsp;<i class="icon-emo-coffee"></i></h1>
<div class="menu-box">
<p>O blog esta aceitando doações. Ajude-nos a manter o blog no ar, pagando com qualquer valor, o nosso cafézinho de cada dia!</p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top">
<input type="hidden" name="cmd" value="_s-xclick">
<input type="hidden" name="hosted_button_id" value="4LGVPB3J8URBN">
<button type="submit" name="submit" alt="PayPal - A maneira mais fácil e segura de efetuar pagamentos online!" class="btn btn-danger btn-large">
<i class="icon-dollar"></i>&nbsp;Doar via PayPal
</button>
<img border="0" src="https://www.paypalobjects.com/pt_BR/i/scr/pixel.gif" width="1" height="1">
</form>
<p>
<a href="bitcoin:141HFA1RXXob7A3F1wKFphHGzCS9wn8aNL?label=UDGWebDev%20Bitcoins&message=Aceitamos%20qualquer%20quantia%20e%20obrigado%20por%20doar%20bitcoins%20para%20o%20blog" class="btn btn-danger btn-large" title="Aceitamos qualquer quantia em bitcoins como doação!">
<i class="icon-dollar"></i>&nbsp;Doar via BitCoin
</a>
</p>
</div>
</section>
</aside>
</section>
</main>
<hr>
<footer class="container">
<p class="text-center">
<a href="https://casadocodigo.refersion.com/l/630.1389" target="_blank" rel="coworker">
<img src="http://udgwebdev.com/images/banner-livro-nodejs.png" alt="Aplicações web real-time com Node.js" width="251" height="77">
</a>
<br>
Powered by <a href="http://pages.github.com" target="_blank">Github Pages</a>, <a href="http://jekyllrb.com" target="_blank">Jekyll</a>, <a href="http://fontello.com" target="_blank">Fontello</a> and <a href="http://flatstrap.org" target="_blank">FlatStrap</a>.
</p>
</footer>
<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-25728091-2']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
<script type="text/javascript">
/* <![CDATA[ */
(function(){try{var s,a,i,j,r,c,l=document.getElementsByTagName("a"),t=document.createElement("textarea");for(i=0;l.length-i;i++){try{a=l[i].getAttribute("href");if(a&&"www.cloudflare.com/email-protection"==a.substr(7 ,35)){s='';j=43;r=parseInt(a.substr(j,2),16);for(j+=2;a.length-j&&a.substr(j,1)!='X';j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}j+=1;s+=a.substr(j,a.length-j);t.innerHTML=s.replace(/</g,"&lt;").replace(/>/g,"&gt;");l[i].setAttribute("href","mailto:"+t.value);}}catch(e){}}}catch(e){}})();
/* ]]> */
</script>
</body>
</html>
