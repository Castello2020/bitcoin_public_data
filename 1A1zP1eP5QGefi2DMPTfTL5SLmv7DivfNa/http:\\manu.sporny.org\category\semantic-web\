http://manu.sporny.org/category/semantic-web/
HTTP/1.0 200 OK
Date: Thu, 24 Jul 2014 06:25:59 GMT
Server: Apache/2.2.22 (Debian)
X-Powered-By: PHP/5.3.8-1+b1
X-Pingback: http://manu.sporny.org/xmlrpc.php
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>

<!-- BEGIN html -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<!-- An Orman Clark design (http://www.premiumpixels.com) - Proudly powered by WordPress (http://wordpress.org) -->

<!-- BEGIN head -->
<head>

	<!-- Meta Tags -->
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	
	<!-- Title -->
	<title>Semantic Web | The Beautiful, Tormented Machine</title>
	
	<!-- Stylesheets -->
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Droid+Serif:regular,italic,bold,bolditalic" type="text/css" />
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Droid+Sans:regular,bold" type="text/css" />
	<link rel="stylesheet" href="http://manu.sporny.org/wp-content/themes/classica/style.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="http://manu.sporny.org/wp-content/themes/classica/css/colours.php" type="text/css" media="screen" />
    
    	
	<!-- RSS & Pingbacks -->
	<link rel="alternate" type="application/rss+xml" title="The Beautiful, Tormented Machine RSS Feed" href="http://manu.sporny.org/feed/" />
	<link rel="pingback" href="http://manu.sporny.org/xmlrpc.php" />
    
    <!-- Theme Hook -->
					
	<script type="text/javascript">//<![CDATA[
	// Google Analytics for WordPress by Yoast v4.1 | http://yoast.com/wordpress/google-analytics/
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount','UA-23751544-1']);
	_gaq.push(['_trackPageview'],['_trackPageLoadTime']);
	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
	//]]></script>
<link rel="alternate" type="application/rss+xml" title="The Beautiful, Tormented Machine &raquo; Semantic Web Category Feed" href="http://manu.sporny.org/category/semantic-web/feed/" />
<link rel='stylesheet' id='payswarm-style-css'  href='http://manu.sporny.org/wp-content/plugins/payswarm/payswarm.css?ver=3.5.1' type='text/css' media='all' />
<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js?ver=3.5.1'></script>
<script type='text/javascript' src='http://manu.sporny.org/wp-content/themes/classica/js/superfish.js?ver=3.5.1'></script>
<script type='text/javascript' src='http://manu.sporny.org/wp-content/plugins/payswarm/payswarm.js?ver=3.5.1'></script>
<script type='text/javascript' src='http://manu.sporny.org/wp-content/themes/classica/js/jquery.prettyPhoto.js?ver=3.5.1'></script>
<script type='text/javascript' src='http://ajax.microsoft.com/ajax/jquery.validate/1.7/jquery.validate.min.js?ver=3.5.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://manu.sporny.org/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://manu.sporny.org/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.5.1" />
	<link rel="shortcut icon" href="http://manu.sporny.org/wp-content/themes/classica/admin/images/favicon.ico" />
	    
	<!--[if lte IE 7]>
    <link rel="stylesheet" href="http://manu.sporny.org/wp-content/themes/classica/css/ie7.css" type="text/css" media="screen" />
    <script type="text/javascript" src="http://manu.sporny.org/wp-content/themes/classica/js/DD_belatedPNG_0.0.8a-min.js"></script>
    <script type="text/javascript">
      DD_belatedPNG.fix('.slides-nav a');
    </script>
    <![endif]-->
	

<!-- END head -->
</head>

<!-- BEGIN body -->
<body class="archive category category-semantic-web category-4 unknown layout-2cr">

	<!-- BEGIN #container -->
	<div id="container">
	
		<!-- BEGIN #header -->
		<div id="header" class="clearfix">
        
        	<!-- BEGIN #upper-wrap -->
			<div id="upper-wrap" class="clearfix">
			
                <!-- BEGIN #logo -->
                <div id="logo">
                                        <a href="http://manu.sporny.org">The Beautiful, Tormented Machine</a>
                    <p id="tagline">Art, technology and leaving the world better off than we found it.</p>
                                    <!-- END #logo -->
                </div>
                
                <!-- BEGIN #primary-nav -->
                <div id="primary-nav">
                                        <ul>
                        <li class="page_item page-item-2"><a href="http://manu.sporny.org/about/">About</a></li>
                    </ul>
                                    <!-- END #primary-nav -->
                </div>
                
            <!--END #upper-wrap-->
			</div>
			
		<!--END #header-->
		</div>

		<!--BEGIN #content -->
		<div id="content" class="clearfix">
					
						
	
	 	  		 	  					<h1 class="page-title">All posts in Semantic Web</h1>
	 	  	            
			<!--BEGIN #primary .hfeed-->
			<div id="primary" class="hfeed">
            		
							
				<!--BEGIN .hentry -->
				<div class="post-8210 post type-post status-publish format-standard hentry category-json-ld category-semantic-web category-standards" id="post-8210">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2014/credential-based-login/" rel="bookmark" title="Permanent Link to A Proposal for Credential-based Login"> A Proposal for Credential-based Login</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>March 15, 2014</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2014/credential-based-login/#comments" title="Comment on A Proposal for Credential-based Login">7 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to A Proposal for Credential-based Login" /><a title="Permanent Link to A Proposal for Credential-based Login" href="http://manu.sporny.org/2014/credential-based-login/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>Mozilla <a href="http://www.mozilla.org/en-US/persona/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.mozilla.org']);">Persona</a> allows you to sign in to web sites using any of your existing email addresses without needing to create a new username and password on each website. It was a really promising solution for the password-based security nightmare that is login on the Web today.</p>
<p>Unfortunately, all the paid engineers for Mozilla Persona have been <a href="http://identity.mozilla.com/post/78873831485/transitioning-persona-to-community-ownership" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','identity.mozilla.com']);">transitioned off of the project</a>. While Mozilla is going to continue to support Persona into the foreseeable future, it isn&#8217;t going to directly put any more resources into improving Persona. Mozilla had <a href="https://news.ycombinator.com/item?id=7362613" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','news.ycombinator.com']);">very good reasons</a> for doing this. That doesn&#8217;t mean that the recent events aren&#8217;t frustrating or sad. The Persona developers made a heroic effort. If you find yourself in the presence of Lloyd, Ben, Dan, Jed, Shane, Austin, or Jared (sorry if I missed someone!) be sure to thank them for their part in moving the Web forward.</p>
<h2>If Not Persona, Then What?</h2>
<p>At the moment, the Web&#8217;s future with respect to a better login experience is unclear. The current leader seems to be OpenID Connect which, while implemented across millions of sites, is still not seeing the sort of adoption that you&#8217;d need for a general Web-based login solution. It&#8217;s also <a href="http://hueniverse.com/2012/07/on-leaving-oauth/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','hueniverse.com']);">really complex</a>, so complex that the lead editor of the foundation OpenID is built on left the work a long time ago in frustration. It also doesn&#8217;t pro-actively protect your privacy, meaning that your identity provider can track where you go on the Web. OpenID also gives an undue amount of power to email providers, like Gmail and Yahoo as your email provider would typically end up becoming most people&#8217;s identity provider as well.</p>
<p>WebID+TLS should also be mentioned as this proposal embraces and extends a number of good features from that specification. Concepts such as an identity document, which is a place where you store facts about yourself, and the ability to express that information as Linked Data are solid concepts. WebID+TLS, unfortunately, relies on the client-certificate technology built into most browsers which is confusing to non-technologists and puts too much of a burden, such as requiring the use of an RDF TURTLE processor as well as the ability to hook into the TLS stream, onto websites adopting the technology. WebID+TLS also doesn&#8217;t do much to protect against pervasive monitoring and tracking of your behavior online by companies that would like to sell that behavior to the highest bidder.</p>
<p>Somewhere else on the Internet, the <a href="https://web-payments.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','web-payments.org']);">Web Payments Community Group</a> is working on technology to build payments into the core architecture of the Web. Login and identity are a big part of payments. We need a solution that allows someone to login to a website and transmit their payment preferences at the same time. A single authorized click by you would provide your email address, shipping address, and preferred payment provider. Another authorized click by you would buy an item and have it shipped to your preferred address. There will be no need to fill out credit card information, shipping, or billing addresses and no need to create an email address and password for every site to which you want to send money. Persona was going to be this login solution for us, but that doesn&#8217;t seem achievable at this point.</p>
<h2 id="persona">What Persona Got Right</h2>
<p>The <a href="https://wiki.mozilla.org/Identity/Persona_AAR" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','wiki.mozilla.org']);">Persona after-action review</a> that Mozilla put together is useful. If you care about identity and login, you should read it. Persona did four groundbreaking things:</p>
<ol>
<li>It was intended to be fully decentralized, being integrated into the browser eventually.</li>
<li>It focused on privacy, ensuring that your identity provider couldn&#8217;t track the sites that you were logging in to.</li>
<li>It used an email address as your login ID, which is a proven approach to login on the Web.</li>
<li>It was simple.</li>
</ol>
<p>It failed for at least three important reasons that were not specific to Mozilla:</p>
<ol>
<li>It required email providers to buy into the protocol.</li>
<li>It had a temporary, centralized solution that required a costly engineering team to keep it up and running.</li>
<li>If your identity provider goes down, you can&#8217;t login to any website.</li>
</ol>
<p>Finally, the Persona solution did one thing well. It provided a verified email credential, but is that enough for the Web?</p>
<h2 id="credentials">The Need for Verifiable Credentials</h2>
<p>There is a growing need for digitally verifiable credentials on the Web. Being able to prove that you are who you say you are is important when paying or receiving payment. It&#8217;s also important when trying to prove that you are a citizen of a particular country, of a particular age, licensed to perform a specific task (like designing a house), or have achieved a particular goal (like completing a training course). In all of these cases, it requires the ability for you to collect digitally signed credentials from a third party, like a university, and store it somewhere on the Web in an interoperable way. </p>
<p>The Web Payments group is working on just such a technology. It&#8217;s called the <a href="https://web-payments.org/specs/source/identity-credentials/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','web-payments.org']);">Identity Credentials</a> specification.</p>
<p>We had somewhat of an epiphany a few weeks ago when it became clear that Persona was in trouble. An email address is just another type of credential. The process for transmitting a verified email address to a website should be the same as transmitting address information or your payment provider preference. Could we apply this concept and solve the login on the web problem as well as the transmission of verified credentials problem? It turns out that the answer is: most likely, yes.</p>
<h2>Verified Credential-based Web Login</h2>
<p>The process for credential-based login on the Web would more or less work like this:</p>
<ol>
<li>You get an account with an identity provider, or run one yourself. Not everyone wants to run one themselves, but it&#8217;s the Web, you should be able to easily do so if you want to.</li>
<li>You show up at a website, it asks you to login by typing in your email address. No password is requested.</li>
<li>The website then kick-starts a login process via navigator.id.login() that will be driven by a Javascript polyfill in the beginning, but will be integrated into the browser in time.</li>
<li>A dialog is presented to you (that the website has no control over or visibility into) that asks you to login to your identity provider. <strong><em>Your identity provider doesn&#8217;t have to be your email provider</em></strong>. This step is skipped if you&#8217;ve logged in previously and your session with your identity provider is still active.</li>
<li>A digitally signed assertion that you control your email address is given by your identity provider to the browser, which is then relayed on to the website you&#8217;re logging in to.</li>
</ol>
<p>Details of how this process works can be found in the section titled <a href="https://web-payments.org/specs/source/identity-credentials/#web-credential-based-login" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','web-payments.org']);">Credential-based Login</a> in the Identity Credentials specification. The important thing to note about this approach is that it takes all the best parts of Persona while overcoming key things that caused its demise. Namely:</p>
<ul>
<li>Using an innovative new technology called <a href="http://telehash.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','telehash.org']);">Telehash</a>, it is fully decentralized from day one.</li>
<li>It doesn&#8217;t require browser buy-in, but is implemented in such a way that allows it to be integrated into the browser eventually.</li>
<li>It is focused on privacy, ensuring that your identity provider can&#8217;t track the sites that you are logging into.</li>
<li>It uses an email address as your login ID, which is a proven approach to login on the Web.</li>
<li>It is simple, requiring far fewer web developer gymnastics than OpenID to implement. It&#8217;s just one Javascript library and one navigator.id.login() call.</li>
<li>It doesn&#8217;t require email providers to buy into the protocol like Persona did. Any party that the relying party website trusts can digitally sign a verified email credential.</li>
<li>If your identity provider goes down, there is still hope that you can login by storing your email credentials in a password-protected decentralized hash table on the Internet.</li>
</ul>
<h2>Why Telehash?</h2>
<p>There is a part of this protocol that requires the system to map your email address to an identity provider. The way Persona did it was to query to see if your email provider was a Persona Identity Provider (decentralized), and if not, the system would fall back to Mozilla&#8217;s email-based verification system (centralized). Unfortunately, if Persona&#8217;s verification system was down, you couldn&#8217;t log into a website at all. This rarely happened, but that was more because Mozilla&#8217;s team was excellent at keeping the site up and there weren&#8217;t any serious attempts to attack the site. It was still a centralized solution.</p>
<p>The Identity Credentials specification takes a different approach to the problem. It allows any identity provider to claim an email address. This means that you no longer need buy-in from email providers. You just need buy-in from identity providers, and there are a ton of them out there that would be happy to claim and verify addresses like john.doe@gmail.com, or alice.smith@ymail.com. Unfortunately, this approach means that either you need browser support, or you need some sort of mapping mechanism that maps email addresses to identity providers. Enter <a href="http://telehash.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','telehash.org']);">Telehash</a>.</p>
<p>Telehash is an Internet-wide distributed hashtable (DHT) based on the proven <a href="http://en.wikipedia.org/wiki/Kademlia" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Kademlia</a> protocol used by BitTorrent and Gnutella. All communication is fully encrypted. It allows you to store-and-replicate things like the following JSON document:</p>
<pre><code>{
  "email": "john.doe@gmail.com",
  "identityService": "https://identity.example.com/identities"
}</code></pre>
<p>If you want to find out who john.doe@gmail.com&#8217;s identity provider is, you just query the Telehash network. The more astute readers among you see the obvious problem in this solution, though. There are massive trust, privacy, and distributed denial of service attack concerns here.</p>
<h2>Attacks on the Distributed Mapping Protocol</h2>
<p>There are four problems with the system described in the previous section. </p>
<p>The first is that you can find out which email addresses are associated with which identity providers; that leaks information. Finding out that john.doe@gmail.com is associated with the https://identity.example.com/ identity provider is a problem. Finding out that they&#8217;re also associated with the https://public.cyberwarfare.usairforce.mil/ identity provider outs them as military personnel, which turns a regular privacy problem into a national security issue.</p>
<p>The second is that anyone on the network can claim to be an identity provider for that email address, which means that there is a big phishing risk. A nefarious identity provider need only put an entry for john.doe@gmail.com in the DHT pointing to their corrupt identity provider service and watch the personal data start pouring in.</p>
<p>The third is that a website wouldn&#8217;t know which digital signature on a email to trust. Which verified credential is trustworthy and which one isn&#8217;t?</p>
<p>The fourth is that you can easily harvest all of the email addresses on the network and spam them.</p>
<h2>Attack Mitigation on the Distributed Mapping Protocol</h2>
<p>There are ways to mitigate the problems raised in the previous section. For example, replacing the email field with a hash of the email address and passphrase would prevent attackers from both spamming an email address and figuring out how it maps to an identity provider. It would also lower the desire for attackers to put fake data into the DHT because only the proper email + passphrase would end up returning a useful result to a query. The identity service would also need to be encrypted with the passphrase to ensure that injecting bogus data into the network wouldn&#8217;t result in an entry collision. </p>
<p>In addition to these three mitigations, the network would employ a high CPU/memory <a href="http://en.wikipedia.org/wiki/Proof_of_work" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">proof-of-work</a> to put a mapping into the DHT so the network couldn&#8217;t get flooded by bogus mappings. Keep in mind that the proof-of-work doesn&#8217;t stop bad data from getting into the DHT, it just slows its injection into the network. </p>
<p>Finally, figuring out which verified email credential is valid is tricky. One could easily anoint 10 non-profit email verification services that the network would trust, or something like the certificate-authority framework, but that could be argued as over-centralization. In the end, this is more of a policy decision because you would want to make sure email verification services are legally bound to do the proper steps to verify an email while ensuring that people aren&#8217;t gouged for the service. We don&#8217;t have a good solution to this problem yet, but we&#8217;re working on it.</p>
<p>With the modifications above, the actual data uploaded to the DHT will probably look more like this:</p>
<pre><code>{
  "id": "c8e52c34a306fe1d487a0c15bc3f9bbd11776f30d6b60b10d452bcbe268d37b0",  <-- SHA256 hash of john.doe@gmail.com + >15 character passphrase
  "proofOfWork": "000000000000f7322e6add42",                                 <-- Proof of work for email to identity service mapping
  "identityService": "GZtJR2B5uyH79QXCJ...s8N2B5utJR2B54m0Lt"                <-- Passphrase-encrypted identity provider service URL
}</code></pre>
<p>To query the network, the customer must provide both an email address and a passphrase which are hashed together. If the hash doesn't exist on the network, then nothing is returned by Telehash.</p>
<p>Also note that this entire Telehash-based mapping mechanism goes away once the technology is built into the browser. The telehash solution is merely a stop-gap measure until the identity credential solution is built into browsers.</p>
<h2>The Far Future</h2>
<p>In the far future, browsers would communicate with your identity providers to retrieve data that are requested by websites. When you attempt to login to a website, the website would request a set of credentials. Your browser would either provide the credentials directly if it has cached them, or it would fetch them from your identity provider. This system has all of the advantages of Persona and provides realistic solutions to a number of the scalability issues that Persona suffers from.</p>
<p>The greatest challenges ahead will entail getting a number of things right. Some of them include: </p>
<ul>
<li>Mitigate the attack vectors for the Telehash + Javascript-based login solution. Even though the Telehash-based solution is temporary, it must be solid until browser implementations become the norm.</li>
<li>Ensure that there is buy-in from large companies wanting to provide credentials for people on the Web. We have a few major players in the pipeline at the moment, but we need more to achieve success.</li>
<li>Clearly communicate the benefits of this approach over OpenID and Persona.</li>
<li>Make sure that setting up your own credential-based identity provider is as simple as dropping a PHP file into your website.</li>
<li>Make it clear that this is intended to be a W3C standard by <a href="https://web-payments.org/specs/source/identity-credentials/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','web-payments.org']);">creating a specification</a> that could be taken standards-track within a year.</li>
<li>Get buy-in from web developers and websites, which is going to be the hardest part.</li>
</ul>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-8119 post type-post status-publish format-standard hentry category-json-ld category-semantic-web category-standards" id="post-8119">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2014/json-ld-origins-2/" rel="bookmark" title="Permanent Link to JSON-LD and Why I Hate the Semantic Web"> JSON-LD and Why I Hate the Semantic Web</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>January 21, 2014</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2014/json-ld-origins-2/#comments" title="Comment on JSON-LD and Why I Hate the Semantic Web">39 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to JSON-LD and Why I Hate the Semantic Web" /><a title="Permanent Link to JSON-LD and Why I Hate the Semantic Web" href="http://manu.sporny.org/2014/json-ld-origins-2/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full Disclosure: I am one of the primary creators of JSON-LD, lead editor on the JSON-LD 1.0 specification, and chair of the JSON-LD Community Group. This is an opinionated piece about JSON-LD. A number of people in this space don&#8217;t agree with my viewpoints. My statements should not be construed as official statements from the JSON-LD Community Group, W3C, or Digital Bazaar (my company) in any way, shape, or form. I&#8217;m pretty harsh about the technologies covered in this article and want to be very clear that I&#8217;m attacking the technologies, not the people that created them. I think most of the people that created and promote them are swell and I like them a lot, save for a few misguided souls, who are loveable and consistently wrong.</em></p>
<p>JSON-LD <a href="http://www.w3.org/TR/json-ld/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">became an official Web Standard</a> last week. This is after exactly <a href="http://json-ld.org/minutes/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">100 teleconferences</a> typically lasting an hour and a half, fully transparent with text minutes and recorded audio for every call. There were <a href="https://github.com/json-ld/json-ld.org/issues?sort=created&#038;state=closed" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">218+ issues</a> addressed, <a href="https://github.com/json-ld/json-ld.org/commits/master" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">2,000+ source code commits</a>, and <a href="http://lists.w3.org/Archives/Public/public-linked-json/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">3,102+ emails</a> that went through the JSON-LD Community Group. The journey was a fairly smooth one with only a few jarring bumps along the road. The specification is already deployed in production by companies like Google, the BBC, HealthData.gov, Yandex, Yahoo!, and Microsoft. There is a <a href="https://github.com/json-ld/json-ld.org/wiki/Users-of-JSON-LD" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">quickly growing list</a> of other companies that are incorporating JSON-LD. We&#8217;re off to a good start. </p>
<p>In the <a href="http://manu.sporny.org/2014/json-ld-origins/" >previous blog post</a>, I detailed the key people that brought JSON-LD to where it is today and gave a rough timeline of the creation of JSON-LD. In this post I&#8217;m going to outline the key decisions we made that made JSON-LD stand out from the rest of the technologies in this space.</p>
<p>I&#8217;ve heard many people say that JSON-LD is primarily about the Semantic Web, but I disagree, it&#8217;s not about that at all. JSON-LD was created for Web Developers that are working with data that is important to other people and must interoperate across the Web. The Semantic Web was near the bottom of my list of &#8220;things to care about&#8221; when working on JSON-LD, and anyone that tells you otherwise is wrong. <img src='http://manu.sporny.org/wp-includes/images/smilies/icon_razz.gif' alt=':P' class='wp-smiley' /> </p>
<p><strong>TL;DR: The desire for better Web APIs is what motivated the creation of JSON-LD, not the Semantic Web. If you want to make the Semantic Web a reality, stop making the case for it and spend your time doing something more useful, like actually making machines smarter or helping people publish data in a way that&#8217;s useful to them.</strong></p>
<h2>Why JSON-LD?</h2>
<p>If you don&#8217;t know what JSON-LD is and you want to find out why it is useful, check out this video on <a href="http://www.youtube.com/watch?v=4x_xzT5eF5Q" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">Linked Data</a> and this one on an <a href="http://www.youtube.com/watch?v=vioCbTo3C-4" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">Introduction to JSON-LD</a>. The rest of this post outlines the things that make JSON-LD different from the traditional Semantic Web / Linked Data stack of technologies and why we decided to design it the way that we did.</p>
<h2>Decision 1: Decrypt the Cryptic</h2>
<p>Many W3C specifications are so cryptic that they require the sacrifice of your sanity and a secret W3C decoder ring to read. I never understood why these documents were so difficult to read, and after years of study on the matter, I think I found the answer. It turns out that most specification editors are just crap at writing. </p>
<p>It&#8217;s not like many of the things that are in most W3C specifications are complicated, it&#8217;s just that the editor is bad at explaining them to non-implementers, which are most of the web developers that end up reading these specification documents. This approach is often defended by raising the point that readability of the specification by non-implementers is viewed as secondary to its technical accuracy for implementers. The audience is the implementer, and you are expected to cater to them. To counter that point, though, we all know that technical accuracy is a bad excuse for crap writing. You can write something that is easy to understand and technically accurate, it just takes more effort to do that. Knowing your audience helps.</p>
<p>We tried our best to eliminate complex techno-babble from the JSON-LD specification. I made it a point to not mention RDF at all in the JSON-LD 1.0 specification because you didn&#8217;t need to go off and read about it to understand what was going on in JSON-LD. There was tremendous push back on this point, which I&#8217;ll go into later, but the point is that we wanted to communicate at a more conversational level than typical Internet and Web specifications because being pedantic too early in the spec sets the wrong tone.</p>
<p>It didn&#8217;t always work, but it certainly did set the tone we wanted for the community, which was that this Linked Data stuff didn&#8217;t have to seem so damn complicated. The JSON-LD 1.0 specification starts out by primarily using examples to introduce key concepts. It starts at basics, assuming that the audience is a web developer with modest training, and builds its way up slowly into more advanced topics. The first 70% of the specification contains barely any normative/conformance language, but after reading it, you know what JSON-LD can do. You can look at the <a href="http://www.w3.org/TR/json-ld/#the-context" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">section on the JSON-LD Context</a> to get an idea of what this looks like in practice.</p>
<p>This approach wasn&#8217;t a wild success. Reading sections of the specification that have undergone feedback from more nitpicky readers still make me cringe because ease of understanding has been sacrificed at the alter of pedantic technical accuracy. However, I don&#8217;t feel embarrassed to point web developers to a section of the specification when they ask for an introduction to a particular feature of JSON-LD. There are not many specifications where you can do that.</p>
<h2>Decision 2: Radical Transparency</h2>
<p>One of the things that has always bothered me about W3C Working Groups is that you have to either be an expert to participate, or you have to be a member of the W3C, which can cost a non-trivial amount of money. This results in your typical web developer being able to comment on a specification, but not really having the ability to influence a Working Group decision with a vote. It also hobbles the standards-making community because the barrier to entry is perceived as impossibly high. Don&#8217;t get me wrong, the W3C staff does as much as they can to drive inclusion and they do a damn good job at it, but that doesn&#8217;t stop some of their member companies from being total dicks behind closed door sessions.</p>
<p>The W3C is a consortium of mostly for-profit companies and they have things they care about like market share, quarterly profits, and drowning goats (kidding!)&#8230; except for GoatCoats.com, anyone can join as long as you pay the membership dues! My point is that because there is a lack of transparency at times, it makes even the best Working Group less responsive to the general public, and that harms the public good. These closed door rules are there so that large companies can say certain things without triggering a lawsuit, which is sometimes used for good but typically results in companies being jerks and nobody finding out about it.</p>
<p>So, in 2010 we kicked off the JSON-LD work by making it radically open and we fought for that openness every step of the way. Anyone can join the group, anyone can vote on decisions, anyone can join the teleconferences, there are no closed door sessions, and we record the audio of every meeting. We successfully kept the technical work on the specification this open from the beginning to the release of JSON-LD 1.0 web standard a week ago. People came and went from the group over the years, but anyone could participate at any level and that was probably the thing I&#8217;m most proud of regarding the process that was used to create JSON-LD. Had we not have been this open, Markus Lanthaler may have never gone from being a gifted student in Italy to editor of the JSON-LD API specification and now leader of the <a href="http://www.markus-lanthaler.com/hydra/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.markus-lanthaler.com']);">Hypermedia Driven Web APIs community</a>. We also may never have had the community backing to do some of the things we did in JSON-LD, like kicking RDF in the nuts.</p>
<h2 id="decision-3">Decision 3: Kick RDF in the Nuts</h2>
<p>RDF is a shitty data model. It doesn&#8217;t have native support for lists. LISTS for fuck&#8217;s sake! The key data structure that&#8217;s used by almost every programmer on this planet and RDF starts out by giving developers a big fat middle finger in that area. Blank nodes are an abomination that we need, but they are applied inconsistently in the RDF data model (you can use them in some places, but not others). When we started with JSON-LD, RDF didn&#8217;t have native graph support either. For all the &#8220;RDF data model is elegant&#8221; arguments we&#8217;ve seen over the past decade, there are just as many reasons to kick it to the curb. This is exactly what we did when we created JSON-LD, and that really pissed off a number of people that had been working on RDF for over a decade.</p>
<p>I personally wanted JSON-LD to be compatible with RDF, but that&#8217;s about it. You could convert JSON-LD to and from RDF and get something useful, but JSON-LD had a more sane data model where lists were a first-class construct, you had generalized graphs, and you could use JSON-LD using a simple library and standard JSON tooling. To put that in perspective, to work with RDF you typically needed a quad store, a SPARQL engine, and some hefty libraries. Your standard web developer has no interest in that toolchain because it adds more complexity to the solution than is necessary.</p>
<p>So screw it, we thought, let&#8217;s create a graph data model that looks and feels like JSON, RDF and the Semantic Web be damned. That&#8217;s exactly what we did and it was working out pretty well until&#8230;</p>
<h2>Decision 4: Work with the RDF Working Group. Whut?!</h2>
<p>Around mid-2012, the JSON-LD stuff was going pretty well and the newly chartered RDF Working Group was going to start work on RDF 1.1. One of the work items was a serialization of RDF for JSON. The lead solutions for RDF in JSON were things like the aptly named <a href="http://www.w3.org/TR/rdf-json/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDF/JSON</a> and <a href="http://www.w3.org/wiki/JTriples" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">JTriples</a>, both of which would look incredibly foreign to web developers and continue the narrative that the Semantic Web community creates esoteric solutions to non-problems. The biggest problem being that many of the participants in the RDF Working Group at the time didn&#8217;t understand JSON. </p>
<p>The JSON-LD group decided to weigh in on the topic by pointing the RDF WG to JSON-LD as an example of what was needed to convince people that this whole Linked Data thing could be useful to web developers. I remember the discussions getting very heated over multiple months, and at times, thinking that the worst thing we could do to JSON-LD was to hand it over to the RDF Working Group for standardization.</p>
<p>It is at that point that David Wood, one of the chairs of the RDF Working Group, phoned me up to try and convince me that it would be a good idea to standardize the work through the RDF WG. I was very skeptical because there were people in the RDF Working Group who drove some of thinking that I had grown to see as toxic to the whole Linked Data / Semantic Web movement. I trusted Dave Wood, though. I had never seen him get religiously zealous about RDF like some of the others in the group and he seemed to be convinced that we could get JSON-LD through without ruining it. To Dave&#8217;s credit, he was mostly right. <img src='http://manu.sporny.org/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
<h2>Decision 5: Hate the Semantic Web</h2>
<p>It&#8217;s not that the RDF Working Group was populated by people that are incompetent, or that I didn&#8217;t personally like. I&#8217;ve worked with many of them for years, and most of them are very intelligent, capable, gifted people. The problem with getting a room full of smart people together is that the group&#8217;s world view gets skewed. There are many reasons that a working group filled with experts don&#8217;t consistently produce great results. For example, many of the participants can be humble about their knowledge so they tend to think that a good chunk of the people that will be using their technology will be just as enlightened. Bad feature ideas can be argued for months and rationalized because smart people, lacking any sort of compelling real world data, are great at debating and rationalizing bad decisions. </p>
<p>I don&#8217;t want people to get the impression that there was or is any sort of animosity in the Linked Data / Semantic Web community because, as far as I can tell, there isn&#8217;t. Everyone wants to see this stuff succeed and we all have our reasons and approaches. </p>
<p>That said, after 7+ years of being involved with Semantic Web / Linked Data, our company has never had a need for a quad store, RDF/XML, N3, NTriples, TURTLE, or SPARQL. When you chair standards groups that kick out &#8220;Semantic Web&#8221; standards, but even your company can&#8217;t stomach the technologies involved, something is wrong. That&#8217;s why my personal approach with JSON-LD just happened to be burning most of the Semantic Web technology stack (TURTLE/SPARQL/Quad Stores) to the ground and starting over. It&#8217;s not a strategy that works for everyone, but it&#8217;s the only one that worked for us, and the only way we could think of jarring the more traditional Semantic Web community out of its complacency.</p>
<p>I hate the narrative of the Semantic Web because the focus has been on the wrong set of things for a long time. That community, who I have been consciously distancing myself from for a few years now, is schizophrenic in its direction. Precious time is spent in groups discussing how we can query all this Big Data that is sure to be published via RDF instead of figuring out a way of making it easy to publish that data on the Web by leveraging common practices in use today. Too much time is spent assuming a future that&#8217;s not going to unfold in the way that we expect it to. That&#8217;s not to say that TURTLE, SPARQL, and Quad stores don&#8217;t have their place, but I always struggle to point to a typical startup that has decided to base their product line on that technology (versus ones that choose MongoDB and JSON on a regular basis).</p>
<p>I like JSON-LD because it&#8217;s based on technology that most web developers use today. It helps people solve interesting distributed problems without buying into any grand vision. It helps you get to the &#8220;<a href="http://www.microsoft.com/en-gb/enterprise/business-reimagined/articles/where-good-ideas-come-from-the-adjacent-possible.aspx" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.microsoft.com']);">adjacent possible</a>&#8221; instead of having to wait for a mirage to solidify.</p>
<h2>Decision 6: Believe in Consensus</h2>
<p>All this said, you can&#8217;t hope to achieve anything by standing on idealism alone and I do admit that some of what I say above is idealistic. At some point you have to deal with reality, and that reality is that there are just as many things that the RDF and Semantic Web initiative got right as it got wrong. The RDF data model is shitty, but because of the gauntlet thrown down by JSON-LD and a number of like-minded proponents in the RDF Working Group, the RDF Data Model was extended in a way that made it compatible with JSON-LD. As a result, the gap between the RDF model and the JSON-LD model narrowed to the point that it became acceptable to more-or-less base JSON-LD off of the RDF model. It took months to do the alignment, but it was consensus at its best. Nobody was happy with the result, but we could all live with it. </p>
<p>To this day I assert that we could rip the data model section out of the JSON-LD specification and it wouldn&#8217;t really affect the people using JSON-LD in any significant way. That&#8217;s consensus for you. The section is in there because other people wanted it in there and because the people that didn&#8217;t want it in there could very well have turned out to be wrong. That&#8217;s really the beauty of the W3C and IETF process. It allows people that have seemingly opposite world views to create specifications that are capable of supporting both world views in awkward but acceptable ways.</p>
<p>JSON-LD is a product of consensus. Nobody agrees on everything in there, but it all sticks together pretty well. There being a consensus on consensus is what makes the W3C, IETF, and thus the Web and the Internet work. Through all of the fits and starts, permathreads, pedantry, idealism, and deadlock, the way it brings people together to build this thing we call the Web is beautiful thing.</p>
<h2><em>Postscript</em></h2>
<p>I&#8217;d like to thank the W3C staff that were involved in getting JSON-LD to offical Web standard status (and the staff, in general, for being really fantastic people). Specifically, Ivan Herman for simultaneously pointing out all of the problems that lay in the road ahead while also providing ways to deal with each one as we came upon them. Sandro Hawke for pushing back against JSON-LD, but always offering suggestions about how we could move forward. I actually think he may have ended up liking JSON-LD in the end <img src='http://manu.sporny.org/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> . Doug Schepers and Ian Jacobs for fighting for W3C Community Groups, without which JSON-LD would not have been able to plead the case for Web developers. The systems team and publishing team who are unknown to most of you, but work tirelessly to ensure that everything continues to operate, be published, and improve at W3C.</p>
<p>From the RDF Working group, the chairs (David Wood and Guus Schreiber), for giving JSON-LD a chance and ensuring that it got a fair shake. Richard Cyganiak for pushing us to get rid of microsyntaxes and working with us to try and align JSON-LD with RDF. Kingsley Idehen for being the first external implementer of JSON-LD after we had just finished scribbling the first design down on paper and tirelessly dogfooding what he preaches. Nobody does it better. The rest of the RDF Working Group members without which JSON-LD would have escaped unscathed from your influence, making my life a hell of a lot easier, but leaving JSON-LD and the people that use it in a worse situation had you not been involved.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-8121 post type-post status-publish format-standard hentry category-json-ld category-rdfa category-semantic-web category-standards" id="post-8121">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2014/json-ld-origins/" rel="bookmark" title="Permanent Link to The Origins of JSON-LD"> The Origins of JSON-LD</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>January 19, 2014</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2014/json-ld-origins/#comments" title="Comment on The Origins of JSON-LD">1 Comment</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to The Origins of JSON-LD" /><a title="Permanent Link to The Origins of JSON-LD" href="http://manu.sporny.org/2014/json-ld-origins/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full Disclosure: I am one of the primary creators of JSON-LD, lead editor on the JSON-LD 1.0 specification, and chair of the JSON-LD Community Group. These are my personal opinions and not the opinions of the W3C, JSON-LD Community Group, or my company.</em></p>
<p>JSON-LD <a href="http://www.w3.org/TR/json-ld/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">became an official Web Standard</a> last week. This is after exactly <a href="http://json-ld.org/minutes/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">100 teleconferences</a> typically lasting an hour and a half, fully transparent with text minutes and recorded audio for every call. There were <a href="https://github.com/json-ld/json-ld.org/issues?sort=created&#038;state=closed" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">218+ issues</a> addressed, <a href="https://github.com/json-ld/json-ld.org/commits/master" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">2,071+ source code commits</a>, and <a href="http://lists.w3.org/Archives/Public/public-linked-json/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">3,102+ emails</a> that went through the JSON-LD Community Group. The journey was a fairly smooth one with only a few jarring bumps along the road. The specification is already deployed in production by companies like Google, the BBC, HealthData.gov, Yandex, Yahoo!, and Microsoft. There is a <a href="https://github.com/json-ld/json-ld.org/wiki/Users-of-JSON-LD" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">quickly growing list</a> of other companies that are incorporating JSON-LD, but that&#8217;s the future. This blog post is more about the past, namely where did JSON-LD come from? Who created it and why?</p>
<p>I love origin stories. When I was in my teens and early twenties, the only origin stories I liked to read about were of the comic and anime variety. <a href="http://en.wikipedia.org/wiki/Spiderman" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Spiderman</a>, great origin story. <a href="http://en.wikipedia.org/wiki/Superman" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Superman</a>, less so, but entertaining. <a href="http://en.wikipedia.org/wiki/Nausica%C3%A4_of_the_Valley_of_the_Wind_(manga)" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Nausicaä</a>, brilliant. <a href="http://en.wikipedia.org/wiki/Major_Motoko_Kusanagi" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Major Motoko Kusanagi</a>, nuanced. <a href="http://en.wikipedia.org/wiki/Spawn_(comics)" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Spawn</a>, dark. Those connections with characters fade over time as you understand that this world has more interesting ones. Interesting because they touch the lives of billions of people, and since I&#8217;m a technologist, some of my favorite origin stories today consist of finding out the personal stories behind how a particular technology came to be. The Web has a particularly riveting origin story. These stories are hard to find because they&#8217;re rarely written about, so this is my attempt at documenting how JSON-LD came to be and the handful of people that got it to where it is today.</p>
<h2>The Origins of JSON-LD</h2>
<p>When you&#8217;re asked to draft the press pieces on the launch of new world standards, you have two lists of people in your head. The first is the &#8220;all inclusive list&#8221;, which is every person that uttered so much as a word that resulted in a change to the specification. That list is typically very long, so you end up saying something like &#8220;We&#8217;d like to thank all of the people that provided input to the JSON-LD specification, including the JSON-LD Community, RDF Working Group, and individuals who took the time to send in comments and improve the specification.&#8221; With that statement, you are sincere and cover all of your bases, but feel like you&#8217;re doing an injustice to the people without which the work would never have survived. </p>
<p>The all inclusive list is very important, they helped refine the technology to the point that everyone could achieve consensus on it being something that is world class. However, 90% of the back breaking work to get the specification to the point that everyone else could comment on it is typically undertaken by a 4-5 people. It&#8217;s a thankless and largely unpaid job, and this is how the Web is built. It&#8217;s those people that I&#8217;d like to thank while exploring the origins of JSON-LD.</p>
<h2>Inception</h2>
<p>JSON-LD started around late 2008 as the work on RDFa 1.0 was wrapping up. We were under pressure from Microformats and Microdata, which we were also heavily involved in, to come up with a good way of programming against RDFa data. At around the same time, my company was struggling with the representation of data for the <a href="https://web-payments.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','web-payments.org']);">Web Payments</a> work. We had already made the switch to JSON a few years previous and were storing that data in MySQL, mostly because MongoDB didn&#8217;t exist yet. We were having a hard time translating the RDFa we were ingesting (products for sale, pricing information, etc.) into something that worked well in JSON. At around the same time, <a href="http://markbirbeck.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','markbirbeck.com']);">Mark Birbeck</a>, one of the creators of RDFa, and I were thinking about making something RDFa-like for JSON. Mark had proposed a syntax for something called <a href="http://code.google.com/p/backplanejs/wiki/Rdfj" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','code.google.com']);">RDFj</a>, which I thought had legs, but Mark didn&#8217;t necessarily have the time to pursue. </p>
<h2>The Hard Grind</h2>
<p>After exchanging a few emails with Mark about the topic over the course of 2009, and letting the idea stew for a while, I wrote up a quick proposal for a specification and passed it by <a href="https://github.com/dlongley" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">Dave Longley</a>, Digital Bazaar&#8217;s CTO. We kicked the idea around a bit more and in May of 2010, published the <a href="http://json-ld.org/spec/ED/json-ld-syntax/20100529/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">first working draft of JSON-LD</a>. While Mark was instrumental in injecting the first set of basis ideas into JSON-LD, Dave Longley would become the most important key technical mind behind how to make JSON-LD work for web programmers. </p>
<p>At that time, JSON-LD had a pretty big problem. You can represent data in JSON-LD in a myriad of different ways, making it hard to tell if two JSON-LD documents are the same or not. This was an important problem to Digital Bazaar because we were trying to figure out how to create product listings, digital receipts, and contracts using JSON-LD. We had to be able to tell if two product listings were the same, and we had to figure out a way to serialize the data so that products and their associated prices could be listed on the Web in a decentralized way. This meant digital signatures, and you have to be able to create a canonical/normalized form for your data if you want to be able to digitally sign it. </p>
<p>Dave Longley invented the JSON-LD API, JSON-LD Framing, and JSON-LD Graph Normalization to tackle these canonicalization/normalization issues and did the first four implementations of the specification in C++, JavaScript, PHP, and Python. The JSON-LD Graph Normalization problem itself took roughly 3 months of concentrated 70+ hour work weeks and dozens of iterations by Dave Longley to produce an algorithm that would work. To this day, I remain convinced that there are only a handful of people on this planet with a mind that is capable of solving those problems. He was the first and only one that cracked those problems. It requires a sort of raw intelligence, persistence, and ability to constantly re-evaluate the problem solving approach you&#8217;re undertaking in a way that is exceedingly rare. </p>
<p>Dave and I continued to refine JSON-LD, with him working on the API and me working on the syntax for the better part of 2010 and early 2011. When MongoDB started really taking off in 2010, the final piece just clicked into place. We had the makings of a Linked Data technology stack that would work for web developers.</p>
<h2>Toward Stability</h2>
<p>Around April 2011, we launched the JSON-LD Community Group and started our public push to try and put the specification on a standards track at the World Wide Web Consortium (W3C). It is at this point that <a href="http://greggkellogg.net/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','greggkellogg.net']);">Gregg Kellogg</a> joined us to help refine the rough edges of the specification and provide his input. For those of you that don&#8217;t know Gregg, I know of no other person that has done complete implementations of the entire stack of Semantic Web technologies. He has Ruby implementations of quad stores, TURTLE, N3, NQuads, SPARQL engines, RDFa, JSON-LD, etc. If it&#8217;s associated with the Semantic Web in any way, he&#8217;s probably implemented it. His depth of knowledge of RDF-based technologies is unmatched and he focused that knowledge on JSON-LD to help us hone it to what it is today. Gregg helped us with key concepts, specification editing, implementations, tests, and a variety of input that left its mark on JSON-LD.</p>
<p><a href="http://www.linkedin.com/in/markuslanthaler" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.linkedin.com']);">Markus Lanthaler</a> also joined us around the same time (2011) that Gregg did. The story of how Markus got involved with the work is probably my favorite way of explaining how the standards process should work. Markus started giving us input while a masters student at Technische Universität Graz. He didn&#8217;t have a background in standards, he didn&#8217;t know anything about the W3C process or specification editing, he was as green as one can be with respect to standards creation. We all start where he did, but I don&#8217;t know of many people that became as influential as quickly as Markus did. </p>
<p>Markus started by commenting on the specification on the mailing list, then quickly started joining calls. He&#8217;d raise issues and track them, he started on his PHP implementation, then started making minor edits to the specifications, then major edits until earning our trust to become lead specification editor for the JSON-LD API specification and one of the editors for the JSON-LD Syntax specification. There was no deliberate process we used to make him lead editor, it just sort of happened based on all the hard work he was putting in, which is the way it should be. He went through a growth curve that normally takes most people 5 years in about a year and a half, and it happened exactly how it should happen in a meritocracy. He earned it and impressed us all in the process.</p>
<h2>The Final Stretch</h2>
<p>Of special mention as well is <a href="https://github.com/niklasl" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">Niklas Lindström</a>, who joined us starting in 2012 on almost every JSON-LD teleconference and provided key input to the specifications. Aside from being incredibly smart and talented, Niklas is particularly gifted in his ability to find a balanced technical solution that moved the group forward when we found ourselves deadlocked on a particular decision. Paul Kuykendall joined us toward the very end of the JSON-LD work  in early 2013 and provided fresh eyes on what we were working on. Aside from being very level-headed, Paul helped us understand what was important to web developers and what wasn&#8217;t toward the end of the process. It&#8217;s hard to find perspective as work wraps up on a standard, and luckily Paul joined us at exactly the right moment to provide that insight.</p>
<p>There were literally hundreds of people that provided input on the specification throughout the years, and I&#8217;m very appreciative of that input. However, without this core of 4-6 people, JSON-LD would have never had a chance. I will never be able to find the words to express how deeply appreciative I am to Dave, Markus, Gregg, Niklas and Paul, who did the work on a primarily volunteer basis. At this moment in time, the Web is at the core of the way human kind communicates and the most ardent protectors of this public good create standards to ensure that the Web continues to serve all of us. It boils my blood to then know that they will go largely unrewarded by society for creating something that will benefit hundreds of millions of people, but that&#8217;s another post for another time.</p>
<p>The <a href="http://manu.sporny.org/2014/json-ld-origins-2/" >next post in this series</a> tells the story of how JSON-LD was nearly eliminated on several occasions by its critics and proponents while on its journey toward a web standard.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-8058 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-8058">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/microdata-downward-spiral/" rel="bookmark" title="Permanent Link to The Downward Spiral of Microdata"> The Downward Spiral of Microdata</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>August 15, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/microdata-downward-spiral/#comments" title="Comment on The Downward Spiral of Microdata">21 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to The Downward Spiral of Microdata" /><a title="Permanent Link to The Downward Spiral of Microdata" href="http://manu.sporny.org/2013/microdata-downward-spiral/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I&#8217;m the chair of the RDFa Working Group and have been heavily involved during the RDFa and Microdata standardization initiatives. I am biased, but also understand all of the nuanced decisions that were made during the creation of both specifications.</em></p>
<p>Support for the Microdata API has just been <a href="http://trac.webkit.org/changeset/153772" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','trac.webkit.org']);">removed from Webkit</a> (Apple Safari). Support for the Microdata API was also <a href="https://groups.google.com/a/chromium.org/d/msg/blink-dev/b54nW_mGSVU/87CLF5jmPdoJ" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','groups.google.com']);">removed from Blink</a> (Google Chrome) a few months ago. This means that Apple Safari and Google Chrome will no longer support the Microdata API. Removal of the feature from a browser also shows us a likely future for Microdata, which is less and less support.</p>
<p>In addition, <a href="https://groups.google.com/a/chromium.org/d/msg/blink-dev/b54nW_mGSVU/yZkGJYqa-loJ" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','groups.google.com']);">this discussion on the Blink developer list demonstrates</a> that there isn&#8217;t anyone to pick up the work of maintaining the Microdata implementation. Microdata has also been <a href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=22783#c0" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">ripped out</a> of the main HTML5 specification at the W3C, with the caveat that the Microdata specification will only continue &#8220;if editorial resources can be found&#8221;. Translation: if an editor doesn&#8217;t step up to edit the Microdata specification, <a href="http://lists.w3.org/Archives/Public/public-html-admin/2013Jul/0019.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">Microdata is dead at W3C</a>. It just takes someone to raise their hand to volunteer, so why is it that out of a group of hundreds of people, no one has stepped up to maintain, create a test suite for, and push the Microdata specification forward?</p>
<p>A number of observers have been <a href="https://twitter.com/stilkov/status/367237073117671424" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">surprised by these events</a>, but for those that have been involved in the month-to-month conversation around Microdata, it makes complete sense. <em><strong>Microdata doesn&#8217;t have an active community supporting it. It never really did</strong></em>. For a Web specification to be successful, it needs an active community around it that is willing to do the hard work of building and maintaining the technology. RDFa has that in spades, Microdata does not.</p>
<p>Microdata was, primarily, a shot across the bow at RDFa. The warning worked because the RDFa community reacted by creating RDFa Lite, which <a href="http://manu.sporny.org/2012/mythical-differences/" >matches Microdata feature-for-feature</a>, while also supporting things that Microdata is incapable of doing. The existence of RDFa Lite left the HTML Working Group in an awkward position. Publishing two specifications that did the exact same thing in almost the exact same way is a position that no standards organization wants to be in. At that point, it became a race to see which community could create the developer tools and support web developers that were marking up pages.</p>
<p>Microdata, to this day, still doesn&#8217;t have a specification editor, an active community, a solid test suite, or any of the other things that are necessary to become a world class technology. To be clear, I&#8217;m not saying Microdata is dying (4 million out of 329 million domains use it), just that not having these basic things in place will be very problematic for the future of Microdata.</p>
<p>To put that in perspective, HTML5+RDFa 1.1 will become an official W3C Recommendation (world standard) next Thursday. There was overwhelming support from the W3C member companies to publish it as a world standard. There have been multiple specification editors for RDFa throughout the years, there are hundreds of active people in the community integrating RDFa into pages across the Web, there are 7 implementations of RDFa in a variety of programming languages, there is a <a href="http://lists.w3.org/Archives/Public/public-rdfa/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">mailing list</a>, <a href="http://rdfa.info/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','rdfa.info']);">website</a> and an <a href="irc://irc.w3.org:6665/#rdfa" >IRC channel</a> dedicated to answering questions for people learning RDFa, and there is a test suite with 800 tests covering RDFa in 6 markup languages (HTML4, HTML5, XML, SVG, XHTML1 and XHTML5). If you want to build a solution on a solid technology, with a solid community and solid implementations; RDFa is that solution.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-8011 post type-post status-publish format-standard hentry category-json-ld category-rdfa category-semantic-web category-standards" id="post-8011">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/json-ld-is-the-bees-knees/" rel="bookmark" title="Permanent Link to JSON-LD is the Bee&#8217;s Knees"> JSON-LD is the Bee&#8217;s Knees</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>August 10, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/json-ld-is-the-bees-knees/#comments" title="Comment on JSON-LD is the Bee&#8217;s Knees">14 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to JSON-LD is the Bee&#8217;s Knees" /><a title="Permanent Link to JSON-LD is the Bee&#8217;s Knees" href="http://manu.sporny.org/2013/json-ld-is-the-bees-knees/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I&#8217;m one of the primary authors and editors of the <a href="http://json-ld.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">JSON-LD</a> specification. I am also the chair of the group that created JSON-LD and have been an active participant in a number of Linked Data initiatives: <a href="http://rdfa.info/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','rdfa.info']);">RDFa</a> (chair, author, editor), <a href="http://json-ld.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">JSON-LD</a> (chair, co-creator), Microdata (primary opponent), and Microformats (member, haudio and hvideo microformat editor). I&#8217;m biased, but also well informed.</em></p>
<p>JSON-LD has been getting a great deal of good press lately. It was <a href="http://blog.schema.org/2013/06/schemaorg-and-json-ld.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">adopted by Google, Yahoo, Yandex, and Microsoft </a>for use in schema.org. The <a href="https://payswarm.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PaySwarm</a> universal payment protocol is based on it. It was also <a href="https://developers.google.com/gmail/schemas/reference/formats/json-ld" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','developers.google.com']);">integrated with Google&#8217;s Gmail</a> service and the open social networking folks have also started <a href="http://www.chmod777self.com/2013/05/time-for-updated-activity-streams.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.chmod777self.com']);">integrating it into the Activity Streams 2.0</a> work. </p>
<p>That all of these positive adoption stories exist was precisely the reason why Shane Becker&#8217;s post on why <a href="http://iamshane.com/articles/2013/8/8/1/json-ld-is-an-uneeded-spec" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','iamshane.com']);">JSON-LD is an Unneeded Spec</a> was so surprising. If you haven&#8217;t read it yet, you may want to as the rest of this post will dissect the arguments he makes in his post (it&#8217;s a pretty quick 5 minute read). The post is a broad brush opinion piece based on a number of factual errors and misinformed opinion. I&#8217;d like to clear up these errors in this blog post and underscore some of the reasons JSON-LD exists and how it has been developed.</p>
<figure style="display:block; margin-left: auto; margin-right: auto;" >
  <img style="display:block; margin-left: auto; margin-right: auto;" src="http://rack.2.mshcdn.com/media/ZgkyMDEyLzAzLzMwLzEzXzUxXzMwXzU2Nl9maWxlCnAJdGh1bWIJODUweDU5MD4KZQlqcGc/2e355427.jpg"></p>
<figcaption style="text-align: center;"><em>A theatrical interpretation of the &#8220;JSON-LD is Unneeded&#8221; blog post</em></figcaption>
</figure>
<p>Shane starts with this claim:</p>
<blockquote><p>Today I learned about a proposed spec called JSON-LD. The &#8220;LD&#8221; is for linked data (Linked Data™ in the Uppercase “S” Semantic Web sense).</p></blockquote>
<p>When I started writing the original JSON-LD specification, one of the goals was to try and merge lessons learned in the Microformats community with lessons learned during the development of RDFa and Microdata. This meant figuring out a way to marry the <a href="http://programmers.stackexchange.com/questions/166612/schema-org-vs-microformats#answer-166669" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','programmers.stackexchange.com']);">lowercase semantic web</a> with the <a href="http://programmers.stackexchange.com/questions/166612/schema-org-vs-microformats#answer-166669" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','programmers.stackexchange.com']);">uppercase Semantic Web</a> in a way that was friendly to developers. For developers that didn&#8217;t care about the uppercase Semantic Web, JSON-LD would still provide a very useful data structure to program against. In fact, Microformats, which are the poster-child for the lowercase semantic web, were supported by JSON-LD from day one.</p>
<p>Shane&#8217;s article is misinformed with respect to the assertion that JSON-LD is solely for the uppercase Semantic Web. JSON-LD is mostly for the lowercase semantic web, the one that developers can use to make their applications exchange and merge data with other applications more easily. JSON-LD is also for the uppercase Semantic Web, the one that researchers and large enterprises are using to build systems like <a href="http://en.wikipedia.org/wiki/Watson_(computer)" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">IBM&#8217;s Watson supercomputer</a>, <a href="http://blog.schema.org/2013/06/schemaorg-and-json-ld.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">search crawlers</a>, <a href="https://developers.google.com/gmail/schemas/reference/formats/json-ld" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','developers.google.com']);">Gmail</a>, and <a href="http://www.chmod777self.com/2013/05/time-for-updated-activity-streams.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.chmod777self.com']);">open social networking systems</a>.</p>
<blockquote><p>Linked data. Web sites. Standards. Machine readable.<br />
Cool. All of those sound good to me. But they all sound familiar, like we&#8217;ve already done this before. In fact, we have.</p></blockquote>
<figure style="display:block; margin-left: auto; margin-right: auto;" >
  <img style="display:block; margin-left: auto; margin-right: auto;" src="http://img.gawkerassets.com/img/18hittm8j3qb4gif/original.gif"><br />
</figure>
<p>We haven&#8217;t done something like JSON-LD before. I wish we had because we wouldn&#8217;t have had to spend all that time doing research and development to create the technology. When writing about technology, it is important to understand the basics of a technology stack before claiming that we&#8217;ve &#8220;done this before&#8221;. An astute reader will notice that at no point in Shane&#8217;s article is any text from the JSON-LD specification quoted, just the very basic introductory material on the landing page of the website. More on this below.</p>
<blockquote><p>Linked data<br />That&#8217;s just the web, right? I mean, we&#8217;ve had the &lt;a href> tag since literally the beginning of HTML / The Web. It&#8217;s for linking documents. Documents are a representation of data.</p></blockquote>
<p>Speaking as someone that has been very involved in the Microformats and RDFa communities, yes, it&#8217;s true that the document-based Web can be used to publish Linked Data. The problem is that standard way of expressing a link to another piece of data that can be followed did not carry over to the data-based Web. That is, most JSON-based APIs don&#8217;t have a standard way of encoding a hyperlink.</p>
<p>The other implied assertion with the statement above is that the document-based Web is all we need. If this were true, sending HTML documents to Web applications would be all we needed. Web developers know that this isn&#8217;t the case today for a number of obvious reasons. We send JSON data back and forth on the Web when we need to program against things like Facebook, Google, or Twitter&#8217;s services. JSON is a very useful data format for machine-to-machine data exchange. The problem is that JSON data has no standard way of doing a variety of things we do on the document-based Web, like expressing links, expressing the types of data (like times and dates), and a variety of other very useful features for the data-based Web. This is one of the problems that JSON-LD addresses.</p>
<blockquote><p>Web sites<br />If it&#8217;s not wrapped in HTML and viewable in a browser it, is it really a website? JSON isn&#8217;t very useful in the browser by itself. It&#8217;s not style-able. It&#8217;s not very human-readable. And worst of all, it&#8217;s not clickable.</p></blockquote>
<p>Websites are composed of many parts. It&#8217;s a weak argument to say that if a site is mainly composed of data that isn&#8217;t in HTML, and isn&#8217;t viewable in a browser, that it&#8217;s not a real website. The vast majority of websites like Twitter and Facebook are composed of data and API calls with a relatively thin varnish of HTML on top. JSON is the primary way that applications interact with these and other data-driven websites. It&#8217;s almost guaranteed these days that any company that has a popular API uses JSON in their Web service protocol.</p>
<p>Shane&#8217;s argument here is pretty confused. It assumes that the primary use of JSON-LD is to express data in an HTML page. Sure, JSON-LD can do that, but focusing on that brush stroke is missing the big picture. The big picture is that JSON-LD allows applications that use it to share data and interoperate in a way that is not possible with regular JSON, and it&#8217;s especially useful when used in conjunction with a Web service or a document-based database like MongoDB or CouchDB.</p>
<blockquote><p>Standards based<br />To their credit, JSON-LD did license their website content Creative Commons CC0 Public Domain. But, the spec itself isn&#8217;t. It&#8217;s using (what seems to be) a W3C boilerplate copyright / license. Copyright © 2010-2013 W3C® (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C liability, trademark and document use rules apply.</p></blockquote>
<figure style="display:block; margin-left: auto; margin-right: auto;" >
  <img style="display:block; margin-left: auto; margin-right: auto;" src="http://img.gawkerassets.com/img/18j2hbj1t0cuogif/ku-medium.gif"><br />
</figure>
<p>Nope. The JSON-LD specification has been released under a Creative Commons Attribution 3.0 license multiple times in the past, and it will be released under a Creative Commons license again, most probably CC0. The JSON-LD specification was developed in a W3C Community Group using a Creative Commons license and then released to be published as a Web standard via W3C using their W3C Community Final Specification Agreement (FSA), which allows the community to fork the specification at any point in time and publish it under a different license.</p>
<p>When you publish a document through the W3C, they have their own copyright, license, and patent policy associated with the document being published. There is a legal process in place at W3C that asserts that companies can implement W3C published standards in a patent and royalty-free way. You don&#8217;t get that with CC0, in fact, you don&#8217;t get any such vetting of the technology or any level of patent and royalty protection.</p>
<p>What we have with JSON-LD is better than what is proposed in Shane&#8217;s blog post. You get all of the benefits of having W3C member companies vet the technology for technical and patent issues while also being able to fork the specification at any point in the future and publish it under a license of your choosing as long as you state where the spec came from.</p>
<blockquote><p>Machine readable<br />Ah&#8230; &#8220;machine readable&#8221;. Every couple of years the current trend of what machine readable data should look like changes (XML/JSON, RSS/Atom, xml-rpc/SOAP, rest/WS-*). Every time, there are the same promises. This will solve our problems. It won&#8217;t change. It&#8217;ll be supported forever. Interoperability. And every time, they break their promises. Today&#8217;s empires, tomorrow&#8217;s ashes.</p></blockquote>
<figure style="display:block; margin-left: auto; margin-right: auto;" >
  <img style="display:block; margin-left: auto; margin-right: auto;" src="http://imageshack.us/a/img4/1281/barneystinsonhowimetyou.gif"><br />
</figure>
<p>At no point has any core designer of JSON-LD claimed 1) that JSON-LD will &#8220;solve our problems&#8221; (or even your particular problem), 2) that it won&#8217;t change, and 3) that it will be supported forever. These are straw-man arguments. The current consensus of the group is that JSON-LD is best suited to a particular class of problems and that some developers will have no need for it. JSON-LD is guaranteed to change in the future to keep pace with what we learn in the field, and we will strive for backward compatibility for features that are widely used. Without modification, standardized technologies have a shelf life of around 10 years, 20-30 if they&#8217;re great. The designers of JSON-LD understand that, like the Web, JSON-LD is just another grand experiment. If it&#8217;s useful, it&#8217;ll stick around for a while, if it isn&#8217;t, it&#8217;ll fade into history. I know of no great software developer or systems designer that has ever made these three claims and been serious about it.</p>
<p>We do think that JSON-LD will help Web applications interoperate better than they do with plain &#8216;ol JSON. For an explanation of how, there is a <a href="http://www.youtube.com/watch?v=vioCbTo3C-4" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">nice video introducing JSON-LD</a>.</p>
<p>With respect to the &#8220;Today&#8217;s empires, tomorrow&#8217;s ashes&#8221; cynicism, we&#8217;ve already seen a preview of the sort of advances that Web-based machine-readable data can unleash. Google, Yahoo!, Microsoft, Yandex, and Facebook all use a variety of machine-readable data technologies that have only recently been standardized. These technologies allow for faster, more accurate, and richer search results. They are also the driving technology for software systems like Watson. These systems exist because there are people plugging away at the hard problem of machine readable data in spite of cynicism directed at past failures. Those failures aren&#8217;t ashes, they&#8217;re the bedrock of tomorrow&#8217;s breakthroughs.</p>
<blockquote><p>Instead of reinventing the everything (over and over again), let&#8217;s use what&#8217;s already there and what already works. In the case of linked data on the web, that&#8217;s html web pages with clickable links between them.</p></blockquote>
<p>Microformats, Microdata, and RDFa do not work well for data-based Web services. Using Linked Data with data-based Web services is one of the primary reasons that JSON-LD was created.</p>
<blockquote><p>For open standards, open license are a deal breaker. No license is more open than Creative Commons CC0 Public Domain + OWFa. (See also the Mozilla wiki about standards/license, for more.) There&#8217;s a growing list of standards that are already using CC0+OWFa.</p></blockquote>
<p>I think there might be a typo here, but if not, I don&#8217;t understand why open licenses are a deal breaker for open standards. Especially things like the <a href="http://www.w3.org/community/about/agreements/final/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">W3C FSA</a> or the Creative Commons licenses we&#8217;ve published the JSON-LD spec under. Additionally, <a href="http://creativecommons.org/choose/zero/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','creativecommons.org']);">CC0</a> + <a href="http://www.openwebfoundation.org/legal/the-owf-1-0-agreements/owfa-1-0" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.openwebfoundation.org']);">OWFa</a> might be neat. Shane&#8217;s article was the first time that I had heard of OWFa and I&#8217;d be a proponent for pushing it in the group if it granted more freedom to the people using and developing JSON-LD than the current set of agreements we have in place. After glossing over the legal text of the OWFa, I can&#8217;t see what CC0 + OWFa buys us over CC0 + W3C patent attribution. If someone would like to make these benefits clear, I could take a proposal to switch to CC0 + OWFa to the JSON-LD Community Group and see if there is interest in using that license in the future.</p>
<blockquote><p>No process is more open than a publicly editable wiki.</p></blockquote>
<figure style="display:block; margin-left: auto; margin-right: auto;" >
  <img style="display:block; margin-left: auto; margin-right: auto;" src="https://i.chzbgr.com/maxW500/4802856704/h59FDBE5C/"></p>
<figcaption style="text-align: center;"><em>A counter-point to publicly accessible forums</em></figcaption>
</figure>
<p>Publicly editable wikis are notorious for edit wars, they are not a panacea. Just because you have a wiki, does not mean you have an open community. For example, the Microformats community was notorious for having a different class of unelected admins that would meet in San Francisco and make decisions about the operation of the community. This seemingly innocuous practice would creep its way into the culture and technical discussion on a regular basis leading to community members being banned from time to time. Similarly, Wikipedia has had <a href="http://www.bbc.co.uk/news/technology-23354613" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.bbc.co.uk']);">numerous issues</a> with publicly editable wikis and the behavior of their admins.</p>
<p>Depending on how you define &#8220;open&#8221;, there are a number of processes that are far more open than a publicly editable wiki. For example, the JSON-LD specification development process is completely open to the public, based on meritocracy, and is consensus-driven. The mailing list is open. The bug tracker is open. We have weekly design teleconferences where all the <a href="http://json-ld.org/minutes/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">audio is recorded and minuted</a>. We have these teleconferences to this day and will continue to have them into the future because we make transparency a priority. JSON-LD, as far as I know, is the first such specification in the world developed where all the previously described operating guidelines are standard practice.</p>
<blockquote><p>(Mailing lists are toxic.)</p></blockquote>
<p>A community is as toxic as its organizational structure enables it to be. The JSON-LD community is based on meritocracy, consensus, and has operated in a very transparent manner since the beginning (open meetings, all calls are recorded and minuted, anyone can contribute to the spec, etc.). This has, unsurprisingly, resulted in a very pleasant and supportive community. That said, there is no perfect communication medium. They&#8217;re all lossy and they all have their benefits and drawbacks. Sometimes, when you combine multiple communication channels as a part of how your community operates, you get better outcomes.</p>
<blockquote><p>Finally, for machine readable data, nothing has been more widely adopted by publishers and consumers than microformats. As of June 2012, microformats represents about 70% of all of the structured data on the web. And of that ~70%, the vast majority was h-card and xfn. (All RDFa is about 25% and microdata is a distant third.)</p></blockquote>
<p>Microformats are good if all you need to do is publish your basic contact and social information on the Web. If you want to publish detailed product information, financial data, medical data, or address other more complex scenarios, Microformats won&#8217;t help you. There have been no new Microformats released in the last 5 years and the <a href="http://microformats.org/discuss/mail/microformats-dev/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">mailing list traffic has been almost non-existent for around 5 years</a>. From what I can tell, most everyone has moved on to RDFa, Microdata, or JSON-LD.</p>
<p>There are a few that are working on Microformats 2, but I haven&#8217;t seen anything that it provides that is not already provided by existing solutions that also have the added benefit of being W3C standards or backed by major companies like Google, Facebook, Yahoo!, Microsoft, and Yandex.</p>
<blockquote><p>Maybe it&#8217;s because of the ease of publishing microformats. Maybe it&#8217;s the open process for developing the standards. Maybe it&#8217;s because microformats don&#8217;t require any additions to HTML. (Both RDFa and microdata required the use of additional attributes or XML namespaces.) Whatever the reason, microformats has the most uptake. So, why do people keep trying to reinvent what microformats is already doing well?</p></blockquote>
<p>People aren&#8217;t reinventing what Microformats are already doing well, they&#8217;re attempting to address problems that Microformats do not solve.</p>
<p>For example, one of the reasons that Google adopted JSON-LD is because <a href="https://twitter.com/danbri/status/366262676319502336" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">markup was much easier in JSON-LD than it was in Microformats</a>, as evidenced by the example below:</p>
<blockquote><p>Back to JSON-LD. The &#8220;Simple Example&#8221; listed on the homepage is a person object representing John Lennon. His birthday and wife are also listed on the object.</p>
<pre>
        {
          "@context": "http://json-ld.org/contexts/person.jsonld",
          "@id": "http://dbpedia.org/resource/John_Lennon",
          "name": "John Lennon",
          "born": "1940-10-09",
          "spouse": "http://dbpedia.org/resource/Cynthia_Lennon"
        }
</pre>
<p>I look at this and see what should have been HTML with microformats (h-card and xfn). This is actually a perfect use case for h-card and xfn: a person and their relationship to another person. Here&#8217;s how it could&#8217;ve been marked up instead.</p>
<pre>
        &lt;div class="h-card">
          &lt;a href="http://dbpedia.org/resource/John_Lennon" class="u-url u-uid p-name">John Lennon&lt;/a>
          &lt;time class="dt-bday" datetime="1940-10-09">October 9&lt;sup>th&lt;/sup>, 1940&lt;/time>
          &lt;a rel="spouse" href="http://dbpedia.org/resource/Cynthia_Lennon">Cynthia Lennon&lt;/a>.
        &lt;/div>
</pre>
</blockquote>
<p>I&#8217;m willing to bet that most people familiar with JSON will find the JSON-LD markup far easier to understand and get right than the Microformats-based equivalent. In addition, sending the Microformats markup to a REST-based Web service would be very strange. Alternatively, sending the JSON-LD markup to a REST-based Web service would be far more natural for a modern day Web developer.</p>
<blockquote><p>This HTML can be easily understood by machine parsers and humans parsers. Microformats 2 parsers already exists for: JavaScript (in the browser), Node.js, PHP and Ruby. HTML + microformats2 means that machines can read your linked data from your website and so can humans. It means that you don&#8217;t need an &#8220;API&#8221; that is something other than your website.</p></blockquote>
<p>You have been able to do the same thing, and much more, using RDFa and Microdata for far longer (since 2006) than you have been able to do it in Microformats 2. Let&#8217;s be clear, there is no significant advantage to using Microformats 2 over RDFa or Microdata. In fact, there are a number of disadvantages for using Microformats 2 at this point, like little to no support from the search companies, very little software tooling, and an anemic community (of which I am a member) for starters. Additionally, HTML + Microformats 2 does not address the Web service API issue at all.</p>
<blockquote><p>Please don&#8217;t waste time and energy reinventing all of the wheels. Instead, please use what already works and what works the webby way.</p></blockquote>
<figure style="display:block; margin-left: auto; margin-right: auto;" >
  <img style="display:block; margin-left: auto; margin-right: auto;" src="http://24.media.tumblr.com/tumblr_lvvadaeRM71r8058ko1_500.gif"><br />
</figure>
<p>Do not miss the irony of this statement. RDFa has been doing what Microformats 2 does today since 2006, and it&#8217;s a Web standard. Even if you don&#8217;t like RDFa 1.0, RDFa 1.1, RDFa Lite 1.1, and Microdata all came before Microformats 2. To assert that wheels should not be reinvented and then claim that Microformats 2, which was created far after there were already a number of well-established solutions, is quite a strange position to take.</p>
<h2>Conclusion</h2>
<p>JSON-LD was created by people that have been directly involved in the Linked Data, lowercase semantic web, uppercase Semantic Web, Microformats, Microdata, and RDFa work. It has proven to be useful to them. There are a number of very large technology companies that have adopted JSON-LD, further underscoring its utility. Expect more big announcements in the next six months. The JSON-LD specifications have been developed in a radically open and transparent way, the document copyright and licensing provisions are equally open. I hope that this blog post has helped clarify most of the misinformed opinion in Shane Becker&#8217;s blog post.</p>
<p>Most importantly, cynicism will not solve the problems that we face on the Web today. Hard work will, and there are very few communities that I know of that work harder and more harmoniously than the excellent volunteers in the JSON-LD community.</p>
<p>If you would like to <a href="http://www.youtube.com/watch?v=4x_xzT5eF5Q" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">learn more about Linked Data</a>, a good video introduction exists. If you want to <a href="http://www.youtube.com/watch?v=vioCbTo3C-4" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">learn more about JSON-LD</a>, there is a good video introduction to that as well.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7999 post type-post status-publish format-standard hentry category-json-ld category-payswarm category-semantic-web category-standards" id="post-7999">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/sm-vs-jose/" rel="bookmark" title="Permanent Link to Secure Messaging vs. Javascript Object Signing and Encryption"> Secure Messaging vs. Javascript Object Signing and Encryption</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>August 3, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/payswarm/" title="View all posts in PaySwarm" rel="category tag">PaySwarm</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/sm-vs-jose/#comments" title="Comment on Secure Messaging vs. Javascript Object Signing and Encryption">9 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Secure Messaging vs. Javascript Object Signing and Encryption" /><a title="Permanent Link to Secure Messaging vs. Javascript Object Signing and Encryption" href="http://manu.sporny.org/2013/sm-vs-jose/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>The <a href="http://www.w3.org/community/webpayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">Web Payments group</a> at the World Wide Web Consortium (W3C) is currently performing a thorough analysis on the <a href="https://wiki.mozilla.org/WebAPI/WebPayment" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','wiki.mozilla.org']);">MozPay API</a>. The <a href="http://manu.sporny.org/2013/mozpay-analysis/" >first part of the analysis</a> examined the contents of the payment messages . This is the second part of the analysis, which will focus on whether the use of the <a href="http://tools.ietf.org/wg/jose/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">Javascript Object Signing and Encryption</a> (JOSE) group&#8217;s solutions to achieve message security is adequate, or if the Web Payment group&#8217;s solutions should be used instead.</p>
<h3>The Contenders</h3>
<p>The IETF JOSE Working Group is actively standardizing the following specifications for the purposes of adding message security to JSON:</p>
<dl>
<dt><a href="http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Web Algorithms</a> (JWA)</dt>
<dd>
Details the cryptographic algorithms and identifiers that are meant to be used with the JSON Web Signature (JWS), JSON Web Encryption (JWE), JSON Web Token (JWT), and JSON Web Key (JWK) specifications. For example, when specifying an encryption algorithm, a JSON key/value pair that has <code>alg</code> as the key may have <code>HS256</code> as the value, which means <em>HMAC using the SHA-256 hash algorithm</em>.
  </dd>
<dt><a href="http://tools.ietf.org/wg/jose/draft-ietf-jose-json-web-key/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Web Key</a> (JWK)</dt>
<dd>
Details a data structure that represents one or more cryptographic keys. If you need to express one of the many types of cryptographic key types in use today, this specification details how you do that in a standard way.
  </dd>
<dt><a href="http://tools.ietf.org/html/draft-ietf-oauth-json-web-token" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Web Token</a> (JWT)</dt>
<dd>
Defines a way of representing claims such as &#8220;Bob was born on November 15th, 1984&#8243;. These claims are digitally signed and/or encrypted using either the JSON Web Signature (JWS) or JSON Web Encryption (JWE) specifications.
  </dd>
<dt><a href="http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Web Encryption</a> (JWE)</dt>
<dd>
Defines a way to express encrypted content using JSON-based data structures. Basically, if you want to encrypt JSON data so that only the intended receiver can read the data, this specification tells you how to do it in an interoperable way.
  </dd>
<dt><a href="http://tools.ietf.org/wg/jose/draft-ietf-jose-json-web-signature/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Web Signature</a> (JWS)</dt>
<dd>
Defines a way to digitally sign JSON data structures. If your application needs to be able to verify the creator of a JSON data structure, you can use this specification to do so.
  </dd>
</dl>
<p>The W3C Web Payments group is actively standardizing a similar specification for the purpose of adding message security to JSON messages:</p>
<dl>
<dt><a href="https://payswarm.com/specs/source/http-keys/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">Secure Messaging</a> (code named: HTTP Keys)</dt>
<dd>
Describes a simple, decentralized security infrastructure for the Web based on JSON, Linked Data, and public key cryptography. This system enables Web applications to establish identities for agents on the Web, associate security credentials with those identities, and then use those security credentials to send and receive messages that are both encrypted and verifiable via digital signatures.
  </dd>
</dl>
<p>Both groups are relying on technology that has existed and been used for over a decade to achieve secure communications on the Internet (symmetric and asymmetric cryptography, public key infrastructure, X509 certificates, etc.). The key differences between the two have to do more with flexibility, implementation complexity, and how the data is published on the Web and used between systems.</p>
<h3>Basic Differences</h3>
<p>In general, the JOSE group is attempting to create a flexible/generalized way of expressing cryptography parameters in JSON. They are then using that information and encrypting or signing specific data (called <em>claims</em> in the specifications).</p>
<p>The Web Payments group&#8217;s specification achieves the same thing, but while not trying to be as generalized as the JOSE group. Flexibility and generalization tends to 1) make the ecosystem more complex than it needs to be for 95% of the use cases, 2) make implementations harder to security audit, and 3) make it more difficult to achieve interoperability between all implementations. The Secure Messaging specification attempts to outline a single best practice that will work for 95% of the applications out there. The 5% of Web applications that need to do more than the Secure Messaging spec can use the JOSE specifications. The Secure Messaging specification is also more Web-y. The more Web-y nature of the spec gives us a number of benefits, such as giving us a Web-scale public key infrastructure as a pleasant side-effect, that we will get into below.</p>
<h3>JSON-LD Advantages over JSON</h3>
<p>Fundamentally, the Secure Messaging specification relies on the Web and <a href="http://www.youtube.com/watch?v=4x_xzT5eF5Q" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">Linked Data</a> to remove some of the complexity that exists in the JOSE specs while also achieving greater flexibility from a data model perspective. Specifically, the Secure Messaging specification utilizes Linked Data via a new standards-track technology called <a href="http://www.youtube.com/watch?v=vioCbTo3C-4" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">JSON-LD</a> to allow anyone to build on top of the core protocol in a decentralized way. JSON-LD data is fundamentally more Web-y than JSON data. Here are the benefits of using JSON-LD over regular JSON:</p>
<ul>
<li>
A universal identifier mechanism for JSON objects via the use of URLs.
  </li>
<li>
A way to disambiguate JSON keys shared among different JSON documents by mapping them to URLs via a <a href="http://json-ld.org/spec/latest/json-ld/#the-context" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">context</a>.
  </li>
<li>
A standard mechanism in which a value in a JSON object may refer to a JSON object on a different document or site on the Web.
  </li>
<li>
A way to associate datatypes with values such as dates and times.
  </li>
<li>
The ability to annotate strings with their language. For example, the word &#8216;chat&#8217; means something different in English and French and it helps to know which language was used when expressing the text.
  </li>
<li>
A facility to express one or more directed graphs, such as a social network, in a single document. Graphs are the native data structure of the Web.
  </li>
<li>
A standard way to map external JSON application data to your application data domain.
  </li>
<li>
A deterministic way to generate a hash on JSON data, which is helpful when attempting to figure out if two data sources are expressing the same information.
  </li>
<li>
A standard way to digitally sign JSON data.
  </li>
<li>
A deterministic way to merge JSON data from multiple data sources.
  </li>
</ul>
<p>Plain old JSON, while incredibly useful, does not allow you to do the things mentioned above in a standard way. There is a valid argument that applications may not need this amount of flexibility, and for those applications, JSON-LD does not require any of the features above to be used and does not require the JSON data to be modified in any way. So people that want to remain in the plain &#8216;ol JSON bucket can do so without the need to jump into the JSON-LD bucket with both feet.</p>
<h3>JSON Web Algorithms vs. Secure Messaging</h3>
<p>The JSON Web Algorithms specification details the cryptographic algorithms and identifiers that are meant to be used with the JSON Web Signature (JWS), JSON Web Encryption (JWE), JSON Web Token (JWT), and JSON Web Key (JWK) specifications. For example, when specifying an encryption algorithm, a JSON key/value pair that has <code>alg</code> as the key may have <code>HS256</code> as the value, which means <em>HMAC using the SHA-256 hash algorithm</em>. The specification is 70 pages long and is effectively just a collection of what values are allowed for each key used in JOSE-based JSON documents. The design approach taken for the JOSE specifications requires that such a document exists.</p>
<p>The Secure Messaging specification takes a different approach. Rather than declare all of the popular algorithms and cryptography schemes in use today, it defines just one digital signature scheme (<a href="https://payswarm.com/specs/source/vocabs/security#GraphSignature2012" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">RSA encryption with a SHA-256 hashing scheme</a>), one encryption scheme (<a href="https://payswarm.com/specs/source/vocabs/security#EncryptedMessage" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">128-bit AES with cyclic block chaining</a>), and one way of expressing keys (as <a href="https://payswarm.com/specs/source/vocabs/security#privateKeyPem" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PEM-formatted data</a>). If placed into a single specification, like the JWA spec, it would be just a few pages long (really, just 1 page of actual content).</p>
<p><a id="algorithm-agility"></a></p>
<p>The most common argument against the Secure Messaging spec, with respect to the JWA specification, is that it lacks the same amount of <a href="http://msdn.microsoft.com/en-us/magazine/ee321570.aspx" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','msdn.microsoft.com']);">cryptographic algorithm agility</a> that the JWA specification provides. While this may seem like a valid argument on the surface, keep in mind that the core algorithms used by the Secure Messaging specification can be changed at any point to any other set of algorithms. So, the specification achieves algorithm agility while greatly reducing the need for a large 70-page specification detailing the allowable values for the various cryptographic algorithms. The other benefit is that since the cryptography parameters are outlined in a Linked Data vocabulary, instead of a process-heavy specification, that they can be added to at any point as long as there is community consensus. Note that while the vocabulary can be added to, thus providing algorithm agility if a particular cryptography scheme is weakened or broken, already defined cryptography schemes in the vocabulary must not be changed once the cryptography vocabulary terms become widely used to ensure that production deployments that use the older mechanism aren&#8217;t broken.</p>
<p>Providing just one way, the best practice at the time, to do digital signatures, encryption, and key publishing reduces implementation complexity. Reducing implementation complexity makes it easier to perform security audits on implementations. Reducing implementation complexity also helps ensure better interoperability and more software library implementations, as the barrier to creating a fully conforming implementation is greatly reduced.</p>
<p>The Web Payments group believes that new digital signature and encryption schemes will have to be updated every 5-7 years. It is better to delay the decision to switch to another primary algorithm as long as as possible (and as long as it is safe to do so). Delaying the cryptographic algorithm decision ensures that the group will be able to make a more educated decision than attempting to predict which cryptographic algorithms may be the successors to currently deployed algorithms.</p>
<p><strong><em>Bottom line: The Secure Messaging specification utilizes a much simpler approach than the JWA specification while supporting the same level of algorithm agility.</em></strong></p>
<h3>JSON Web Key vs. Secure Messaging</h3>
<p>The JSON Web Key (JWK) specification details a data structure that is capable of representing one or more cryptographic keys. If you need to express one of the many types of cryptographic key types in use today, JWK details how you do that in an standard way. A typical RSA public key looks like the following using the JWK specification:</p>
<pre>
{
  "keys": [{
    "kty":"RSA",
    "n": "0vx7agoe ... DKgw",
    "e":"AQAB",
    "alg":"RS256",
    "kid":"2011-04-29"
  }]
}
</pre>
<p>A similar RSA public key looks like the following using the Secure Messaging specification:</p>
<pre>
{
  "@context": "https://w3id.org/security/v1",
  "@id": "https://example.com/i/bob/keys/1",
  "@type": "Key",
  "owner": "https://example.com/i/bob",
  "publicKeyPem": "-----BEGIN PUBLIC KEY-----\nMIIBG0BA...OClDQAB\n-----END PUBLIC KEY-----\n"
}
</pre>
<p>There are a number of differences between the two key formats. Specifically:</p>
<ol>
<li>
The JWK format expresses key information by specifying the key parameters directly. The Secure Messaging format places all of the key parameters into a PEM-encoded blob. This approach was taken because it is easier for developers to use the PEM data without introducing errors. Since most Web developers do not understand what variables like <code>dq</code> (the second factor Chinese Remainder Theorem exponent parameter) or <code>d</code> (the Elliptic Curve private key parameter) are, the likelihood of transporting and publishing that sort of data without error is lower than placing all parameters in an opaque blob of information that has a clear beginning and end (<code>-----BEGIN PUBLIC KEY-----</code>, and <code>--- END PUBLIC KEY ---</code>)
  </li>
<li>
In the general case, the Secure Messaging key format assigns URL identifiers to keys and publishes them on the Web as JSON-LD, and optionally as RDFa. This means that public key information is discoverable and human and machine-readable by default, which means that all of the key parameters can be read from the Web. The JWK mechanism does assign a key ID to keys, but does not require that they are published to the Web if they are to be used in message exchanges. The JWK specification could be extended to enable this, but by default, doesn&#8217;t provide this functionality.
  </li>
<li>
The Secure Messaging format is also capable of specifying an identity that owns the key, which allows a key to be tied to an identity and that identity to be used for thinks like Access Control to Web resources and REST APIs. The JWK format has no such mechanism outlined in the specification.
  </li>
</ol>
<p><strong><em>Bottom line: The Secure Messaging specification provides four major advantages over the JWK format: 1) the key information is expressed at a higher level, which makes it easier to work with for Web developers, 2) it allows key information to be discovered by deferencing the key ID, 3) the key information can be published (and extended) in a variety of Linked Data formats, and 4) it provides the ability to assign ownership information to keys.</em></strong></p>
<h3>JSON Web Tokens vs. Secure Messaging</h3>
<p>The JSON Web Tokens (JWT) specification defines a way of representing claims such as &#8220;Bob was born on November 15th, 1984&#8243;. These claims are digitally signed and/or encrypted using either the JSON Web Signature (JWS) or JSON Web Encryption (JWE) specifications. Here is an example of a JWT document:</p>
<pre>
{
  "iss": "joe",
  "exp": 1300819380,
  "http://example.com/is_root": true
}
</pre>
<p>JWT documents contain keys that are public, such as <code>iss</code> and <code>exp</code> above, and keys that are private (which could conflict with keys from the JWT specification). The data format is fairly free-form, meaning that any data can be placed inside a JWT Claims Set like the one above.</p>
<p>Since the Secure Messaging specification utilizes JSON-LD for its data expression mechanism, it takes a fundamentally different approach. There are no headers or claims sets in the Secure Messaging specification, just data. For example, the data below is effectively a JWT claims set expressed in JSON-LD:</p>
<pre>
{
  "@context": "http://json-ld.org/contexts/person",
  "@type": "Person",
  "name": "Manu Sporny",
  "gender": "male",
  "homepage": "http://manu.sporny.org/"
}
</pre>
<p>Note that there are no keywords specific to the Secure Messaging specification, just keys that are mapped to URLs (to prevent collisions) and data. In JSON-LD, these keys and data are machine-interpretable in a standards-compliant manner (unlike JWT data), and can be merged with other data sources without the danger of data being overwritten or colliding with other application data.</p>
<p><strong><em>Bottom line: The Secure Messaging specifications use of a native Linked Data format removes the requirement for a specification like JWT. As far as the Secure Messaging specification is concerned, there is just data, which you can then digitally sign and encrypt. This makes the data easier to work with for Web developers as they can continue to use their application data as-is instead of attempting to restructure it into a JWT.</em></strong></p>
<h3>JSON Web Encryption vs. Secure Messaging</h3>
<p>The JSON Web Encryption (JWE) specification defines a way to express encrypted content using JSON-based data structures. Basically, if you want to encrypt JSON data so that only the intended receiver can read the data, this specification tells you how to do it in an interoperable way. A JWE-encrypted message looks like this:</p>
<pre>
{
  "protected": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0",
  "unprotected": {"jku": "https://server.example.com/keys.jwks"},
  "recipients": [{
    "header": {
      "alg":"RSA1_5"
        "kid":"2011-04-29",
        "enc":"A128CBC-HS256",
        "jku":"https://server.example.com/keys.jwks"
      },
      "encrypted_key": "UGhIOgu ... MR4gp_A"
    }]
  }],
  "iv": "AxY8DCtDaGlsbGljb3RoZQ",
  "ciphertext": "KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY",
  "tag": "Mz-VPPyU4RlcuYv1IwIvzw"
}
</pre>
<p>To decrypt this information, an application would retrieve the private key associated with the recipients[0].header, and then decrypt the <code>encrypted_key</code>. Using the decrypted <code>encrypted_key</code> value, it would then use the <code>iv</code> to decrypt the <code>protected</code> header. Using the algorithm provided in the protected header, it would then use the decrypted <code>encrypted_key</code>, <code>iv</code>, the algorithm specified in the protected header, and the <code>ciphertext</code> to retrieve the original message as a result.</p>
<p>For comparison purposes, a Secure Messaging encrypted message looks like this:</p>
<pre>
{
  "@context": "https://w3id.org/security/v1",
  "@type": "EncryptedMessage2012",
  "data": "VTJGc2RH ... Fb009Cg==",
  "encryptionKey": "uATte ... HExjXQE=",
  "iv": "vcDU1eWTy8vVGhNOszREhSblFVqVnGpBUm0zMTRmcWtMrRX==",
  "publicKey": "https://example.com/people/john/keys/23"
}   
</pre>
<p>To decrypt this information, an application would use the private key associated with the <code>publicKey</code> to decrypt the <code>encryptionKey</code> and <code>iv</code>. It would then use the decrypted <code>encryptionKey</code> and <code>iv</code> to decrypt the value in <code>data</code>, retrieving the original message as a result.</p>
<p>The Secure Messaging encryption protocol is simpler than the JWE protocol for three major reasons:</p>
<ol>
<li>The <code>@type</code> of the message, <code>EncryptedMessage2012</code>, encapsulates all of the cryptographic algorithm information in a machine-readable way (that can also be hard-coded in implementations). The JWE specification utilizes the <code>protected</code> field to express the same sort of information, which is allowed to get far more complicated than the Secure Messaging equivalent, leading to more complexity.</li>
<li>Key information is expressed in one entry, the <code>publicKey</code> entry, which is a link to a machine-readable document that can express not only the public key information, but who owns the key, the name of the key, creation and revocation dates for the key, as well as a number of other Linked Data values that result in a full-fledged Web-based PKI system. Not only is Secure Messaging encryption simpler than JWE, but it also enables many more types of extensibility.</li>
<li>The key data is expressed in a PEM-encoded format, which is expressed as a base-64 encoded blob of information. This approach was taken because it is easier for developers to use the data without introducing errors. Since most Web developers do not understand what variables like <code>dq</code> (the second factor Chinese Remainder Theorem exponent parameter) or <code>d</code> (the Elliptic Curve private key parameter) are, the likelihood of transporting and publishing that sort of data without error is lower than placing all parameters in an opaque blob of information that has a clear beginning and end (<code>-----BEGIN PUBLIC KEY-----</code>, and <code>--- END PUBLIC KEY ---</code>).
</ol>
<p>The rest of the entries in the JSON are typically required for the encryption method selected to secure the message. There is not a great deal of difference between the two specifications when it comes to the parameters that are needed for the encryption algorithm. </p>
<p><strong><em>Bottom line: The major difference between the Secure Messaging and JWE specification has to do with how the encryption parameters are specified as well as how many of them there can be. The Secure Messaging specification expresses only one encryption mechanism and outlines the algorithms and keys external to the message, which leads to a reduction in complexity. The JWE specification allows many more types of encryption schemes to be used, at the expense of added complexity.</em></strong></p>
<h3>JSON Web Signatures vs. Secure Messaging</h3>
<p>The JSON Web Signatures (JWS) specification defines a way to digitally sign JSON data structures. If your application needs to be able to verify the creator of a JSON data structure, you can use this specification to do so. A JWS digital signature looks like the following:</p>
<pre>
{
  "payload": "eyJpc ... VlfQ",
  "signatures":[{
    "protected":"eyJhbGciOiJSUzI1NiJ9",
    "header": {
      "kid":"2010-12-29"
    },
    "signature": "cC4hi ... 77Rw"
  }]
}
</pre>
<p>For the purposes of comparison, a Secure Messaging message and signature looks like the following:</p>
<pre>
{
  "@context": ["https://w3id.org/security/v1", "http://json-ld.org/contexts/person"]
  "@type": "Person",
  "name": "Manu Sporny",
  "homepage": "http://manu.sporny.org/",
  "signature":
  {
    "@type": "GraphSignature2012",
    "creator": "http://example.org/manu/keys/5",
    "created": "2013-08-04T17:39:53Z",
    "signatureValue": "OGQzN ... IyZTk="
  }
}
</pre>
<p>There are a number of stark differences between the two specifications when it comes to digital signatures:</p>
<ol>
<li>
The Secure Messaging specification does not need to base-64 encode the payload being signed. This makes it easier for a developer to see (and work with) the data that was digitally signed. Debugging signed messages is also simplified as special tools to decode the payload are unnecessary.
  </li>
<li>
The Secure Messaging specification does not require any header parameters for the payload, which reduces the number of things that can go wrong when verifying digitally signed messages. One could argue that this also reduces flexibility. The counter-argument is that different signature schemes can always be switched in by just changing the <code>@type</code> of the signature.
  </li>
<li>
The signer&#8217;s public key is available via a URL. This means that, in general, all Secure Messaging signatures can be verified by dereferencing the <code>creator</code> URL and utilizing the published key data to verify the signature.
  </li>
<li>
The Secure Messaging specification depends on a normalization algorithm that is applied to the message. This algorithm is non-trivial, typically implemented behind a JSON-LD library .normalize() method call. JWS does not require data normalization. The trade-off is simplicity at the expense of requiring your data to always be encapsulated in the message. For example, the Secure Messaging specification is capable of pointing to a digital signature expressed in RDFa on a website using a URL. An application can then dereference that URL, convert the data to JSON-LD, and verify the digital signature. This mechanism is useful, for example, when you want to publish items for sale along with their prices on a Web page in a machine-readable way. This sort of use case is not achievable with the JWS specification. All data is required to be in the message. In other words, Secure Messaging performs a signature on information that could exist on the Web where the JWS specification performs a signature on a string of text in a message.
  </li>
<li>
The JWS mechanism enables HMAC-based signatures while the Secure Messaging mechanism avoids the use of HMAC altogether, taking the position that shared secrets are typically a bad practice.
  </li>
</ol>
<p><strong><em>Bottom line: The Secure Messaging specification does not need to encode its payloads, but does require a rather complex normalization algorithm. It supports discovery of signature key data so that signatures can be verified using standard Web protocols. The JWS specification is more flexible from an algorithmic standpoint and simpler from a signature verification standpoint. The downside is that the only data input format must be from the message itself and can&#8217;t be from an external Linked Data source, like an HTML+RDFa web page listing items for sale.</em></strong></p>
<h3>Conclusion</h3>
<p>The Secure Messaging and JOSE designs, while attempting to achieve the same basic goals, deviate in the approaches taken to accomplish those goals. The Secure Messaging specification leverages more of the Web with its use of a Linked Data format and URLs for identifying and verifying identity and keys. It also attempts to encapsulate a single best practice that will work for the vast majority of Web applications in use today. The JOSE specifications are more flexible in the type of cryptographic algorithms that can be used which results in more low-level primitives used in the protocol, increasing complexity for developers that must create interoperable JOSE-based applications. </p>
<p>From a specification size standpoint, the JOSE specs weigh in at 225 pages, the Secure Messaging specification weighs in at around 20 pages. This is rarely a good way to compare specifications, and doesn&#8217;t always result in an apples to apples comparison. It does, however, give a general idea of the amount of text required to explain the details of each approach, and thus a ballpark idea of the complexity associated with each specification. Like all specifications, picking one depends on the use cases that an application is attempting to support. The goal with the Secure Messaging specification is that it will be good enough for 95% of Web developers out there, and for the remaining 5%, there is the JOSE stack.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7987 post type-post status-publish format-standard hentry category-json-ld category-payswarm category-rdfa category-semantic-web category-standards" id="post-7987">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/mozpay-analysis/" rel="bookmark" title="Permanent Link to Technical Analysis of 2012 MozPay API Message Format"> Technical Analysis of 2012 MozPay API Message Format</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>July 22, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/payswarm/" title="View all posts in PaySwarm" rel="category tag">PaySwarm</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/mozpay-analysis/#comments" title="Comment on Technical Analysis of 2012 MozPay API Message Format">2 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Technical Analysis of 2012 MozPay API Message Format" /><a title="Permanent Link to Technical Analysis of 2012 MozPay API Message Format" href="http://manu.sporny.org/2013/mozpay-analysis/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>The W3C <a href="http://www.w3.org/community/webpayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">Web Payments</a> group is currently analyzing a new API for performing payments via web browsers and other devices connected to the web. This blog post is a technical analysis of the <a href="https://wiki.mozilla.org/WebAPI/WebPayment" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','wiki.mozilla.org']);">MozPay API</a> with a specific focus on the payment protocol and its use of JOSE (<a href="http://tools.ietf.org/wg/jose/charters" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Object Signing and Encryption</a>). The first part of the analysis takes the approach of examining the data structures used today in the MozPay API and compares them against what is possible via <a href="https://payswarm.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PaySwarm</a>. The second part of the analysis examines the use of JOSE to achieve the use case and security requirements of the MozPay API and compares the solution to JSON-LD, which is the mechanism used to achieve the use case and security requirements of the PaySwarm specification.</p>
<p>Before we start, it&#8217;s useful to have an example of what the current MozPay payment initiation message looks like. This message is generated by a MozPay Payment Provider and given to the browser to initiate a native purchase process:</p>
<pre>
jwt.encode({
  "iss": APPLICATION_KEY,
  "aud": "marketplace.firefox.com",
  "typ": "mozilla/payments/pay/v1",
  "iat": 1337357297,
  "exp": 1337360897,
  "request": {
    "id": "915c07fc-87df-46e5-9513-45cb6e504e39",
    "pricePoint": 1,
    "name": "Magical Unicorn",
    "description": "Adventure Game item",
    "icons": {
      "64": "https://yourapp.com/img/icon-64.png",
      "128": "https://yourapp.com/img/icon-128.png"
    },
    "productData": "user_id=1234&#038;my_session_id=XYZ",
    "postbackURL": "https://yourapp.com/payments/postback",
    "chargebackURL": "https://yourapp.com/payments/chargeback"
  }
}, APPLICATION_SECRET)
</pre>
<p>The message is effectively a <a href="http://tools.ietf.org/html/draft-jones-json-web-token-10" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">JSON Web Token</a>. I say effectively because it seems like it breaks the JWT spec in subtle ways, but it may be that I&#8217;m misreading the JWT spec.</p>
<p>There are a number of issues with the message that we&#8217;ve had to deal with when creating the set of PaySwarm specifications. It&#8217;s important that we call those issues out first to get an understanding of the basic concerns with the MozPay API as it stands today. The comments below use the JWT code above as a reference point.</p>
<h3>Unnecessarily Cryptic JSON Keys</h3>
<pre>
...
  "iss": APPLICATION_KEY,
  "aud": "marketplace.firefox.com",
  "typ": "mozilla/payments/pay/v1",
  "iat": 1337357297,
  "exp": 1337360897,
...
</pre>
<p>This is more of an issue with the JOSE specs than it is the MozPay API. I can&#8217;t think of a good line of argumentation to shorten things like &#8216;issuer&#8217; to &#8216;iss&#8217; and &#8216;type&#8217; to &#8216;typ&#8217; (seriously <img src='http://manu.sporny.org/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> , the &#8216;e&#8217; was too much?). It comes off as 1980s protocol design, trying to save bits on the wire. Making code less readable by trying to save characters in a human-readable message format works against the notion that the format should be readable by a human. I had to look up what <code>iss</code>, <code>aud</code>, <code>iat</code>, and <code>exp</code> meant.  The only reason that I could come up with for using such terse entries was that the JOSE designers were attempting to avoid conflicts with existing data in JWT claims objects. If this was the case, they should have used a prefix like &#8220;@&#8221; or &#8220;$&#8221;, or placed the data in a container value associated with a key like &#8216;claims&#8217;.</p>
<p>PaySwarm always attempts to use terminology that doesn&#8217;t require you to go and look at the specification to figure out basic things. For example, it uses <code>creator</code> for <code>iss</code> (issuer), <code>validFrom</code> for <code>iat</code> (issued at), and <code>validUntil</code> for <code>exp</code> (expire time).</p>
<h3>iss and APPLICATION_KEY</h3>
<pre>
...
  "iss": APPLICATION_KEY,
...
</pre>
<p>The MozPay API specification does not require the APPLICATION_KEY to be a URL. Since it&#8217;s not a URL, it&#8217;s not discoverable. The application key is also specific to each Marketplace, which means that one Marketplace could use a UUID, another could use a URL, and so on. If the system is intended to be decentralized and interoperable, the APPLICATION_KEY should either be dereferenceable on the public Web without coordination with any particular entity, or a format for the key should be outlined in the specification.</p>
<p>All identities and keys used in digital signatures in PaySwarm use URLs for the identifiers that must contain key information in some sort of machine-readable format (RDFa and JSON-LD, for now). This means that 1) they&#8217;re Web-native, 2) they can be dereferenced, and 3) when they&#8217;re dereferenced, a client can extract useful data from the document retrieved.</p>
<h3>Audience</h3>
<pre>
...
  "aud": "marketplace.firefox.com",
...
</pre>
<p>It&#8217;s not clear what the <code>aud</code> parameter is used for in the MozPay API, other than to identify the marketplace.</p>
<h3>Issued At and Expiration Time</h3>
<pre>
...
  "iat": 1337357297,
  "exp": 1337360897,
...
</pre>
<p>The <code>iat</code> (issued at) and <code>exp</code> (expiration time) values are encoded in the number of seconds since January 1st, 1970. These are not very human readable and make debugging issues with purchases more difficult than they need to be.</p>
<p>PaySwarm uses the W3C Date/Time format, which are human-readable strings that are also easy for machines to process. For example, November 5th, 2013 at 1:15:30 AM (Zulu / Universal Time) is encoded as: 2013-11-05T13:15:30Z.</p>
<h3>The Request</h3>
<pre>
...
  "request": {
    "id": "915c07fc-87df-46e5-9513-45cb6e504e39",
    "pricePoint": 1,
    "name": "Magical Unicorn",
...
</pre>
<p>This object in the MozPay API is a description of the thing that is to be sold. Technically, it&#8217;s not really a request. The outer object is the request. There is a big of a conflation of terminology here that should probably be fixed at some point.</p>
<p>In PaySwarm, the contents of the MozPay <code>request</code> value is called an Asset. An asset is a description of the thing that is to be sold.</p>
<h3>Request ID</h3>
<pre>
...
{
  "request": {
    "id": "915c07fc-87df-46e5-9513-45cb6e504e39",
...
</pre>
<p>The MozPay API encodes the request ID as a universally unique identifier (UUID). The major downside to this approach is that other applications can&#8217;t find the information on the Web to 1) discover more about the item being sold, 2) discuss the item being sold by referring to it by a universal ID, 3) feed it to a system that can read data published at the identifier address, and 4) index it for the purposes of searching. </p>
<p>The PaySwarm specifications use a URL for the identifier for assets and publish machine-readable data at the asset location so that other systems can discover more information about the item being sold, refer to the item being sold in discussions (like reviews of the item), start a purchase by referencing the URL, index the item being sold such that it may be utilized in price-comparison/search engines.</p>
<h3>Price Point</h3>
<pre>
...
  "request": {
...
    "pricePoint": 1,
...
</pre>
<p>The pricePoint for the item being sold is currently a whole number. This is problematic because prices are usually decimal numbers including a fraction and a currency.</p>
<p>PaySwarm publishes its pricing information in a currency agnostic way that is compatible with all known monetary systems. Some of these systems include USD, EUR, JYP, RMB, Bitcoin, Brixton Pound, Bernal Bucks, Ven, and a variety of other alternative currencies. The amount is specified as a decimal with fraction and a currency URL. A URL is utilized for the currency because PaySwarm supports arbitrary currencies to be created and managed external to the PaySwarm system.</p>
<h3>Icons</h3>
<pre>
...
  "request": {
...
    "icons": {
      "64": "https://yourapp.com/img/icon-64.png",
      "128": "https://yourapp.com/img/icon-128.png"
    },
...
</pre>
<p>Icon data is currently modeled in a way that is useful to developers by indexing the information as a square pixel size for the icon. This allows developers to access the data like so: icons.64 or icons.128. Values are image URLs, which is the right choice.</p>
<p>PaySwarm uses JSON-LD and can support this sort of data layout through a feature called <em>data indexing</em>. Another approach is to just have an array of objects for <code>icons</code>, which would allow us to include extended information about the icons. For example:</p>
<pre>
...
  "request": {
...
  "icon": [{size: 64, id: "https://yourapp.com/img/icon-64.png", label: "Magical Unicorn"}, ...]
...
</pre>
<h3>Product Data</h3>
<pre>
...
  "request": {
...
    "productData": "user_id=1234&#038;my_session_id=XYZ",
...
</pre>
<p>If the payment technology we&#8217;re working on is going to be useful to society at large, we have to allow richer descriptions of products. For example, model numbers,  rich markup descriptions, pictures, ratings, colors, and licensing terms are all important parts of a product description. The value needs to be larger than a 256 byte string and needs to support decentralized extensibility. For example, Home Depot should be able to list UPC numbers and internal reference numbers in the asset description and the payment protocol should preserve that extra information, placing it into digital receipts.</p>
<p>PaySwarm uses JSON-LD and thus supports decentralized extensibility for product data. This means that any vendor may express information about the asset in JSON-LD and it will be preserved in all digital contracts and digital receipts. This allows the asset and digital receipt format to be used as a platform that can be built on top of by innovative retailers. It also increases data fidelity by allowing far more detailed markup of asset information than what is currently allowed via the MozPay API.</p>
<h3>Postback URL</h3>
<pre>
...
  "request": {
...
    "postbackURL": "https://yourapp.com/payments/postback",
...
</pre>
<p>The postback URL is a pretty universal concept among Web-based payment systems. The payment processor needs a URL endpoint that the result of the purchase can be sent to. The postback URL serves this purpose.</p>
<p>PaySwarm has a similar concept, but just lists it in the request URL as &#8216;callback&#8217;.</p>
<h3>Chargeback URL</h3>
<pre>
...
  "request": {
...
    "chargebackURL": "https://yourapp.com/payments/chargeback"
...
</pre>
<p>The chargeback URL is a URL endpoint that is called whenever a refund is issued for a purchased item. It&#8217;s not clear if the vendor has a say in whether or not this should be allowed for a particular item. For example, what happens when a purchase is performed for a physical good? Should chargebacks be easy to do for those sorts of items?</p>
<p>PaySwarm does not build chargebacks into the core protocol. It lets the merchant request the digital receipt of the sale to figure out if the sale has been invalidated. It seems like a good idea to have a notification mechanism build into the core protocol. We&#8217;ll need more discussion on this to figure out how to correctly handle vendor-approved refunds and customer-requested chargebacks.</p>
<h3>Conclusion</h3>
<p>There are a number of improvements that could be made to the basic MozPay API that would enable more use cases to be supported in the future while keeping the level of complexity close to what it currently is. The second part of this analysis will examine the JavaScript Object Signature and Encryption (JOSE) technology stack and determine if there is a simpler solution that could be leveraged to simplify the digital signature requirements set forth by the MozPay API.</p>
<p>[UPDATE: <a href="http://manu.sporny.org/2013/sm-vs-jose/" >The second part of this analysis is now available</a>]</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7978 post type-post status-publish format-standard hentry category-payswarm category-semantic-web category-standards" id="post-7978">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/http-signatures/" rel="bookmark" title="Permanent Link to Verifiable Messaging over HTTP"> Verifiable Messaging over HTTP</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>June 12, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/payswarm/" title="View all posts in PaySwarm" rel="category tag">PaySwarm</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/http-signatures/#comments" title="Comment on Verifiable Messaging over HTTP">3 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Verifiable Messaging over HTTP" /><a title="Permanent Link to Verifiable Messaging over HTTP" href="http://manu.sporny.org/2013/http-signatures/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>Problem: Figure out a simple way to enable a Web client or server to authenticate and authorize itself to do a REST API call. Do this in one HTTP round-trip.</p>
<p>There is a new specification that is making the rounds called <a href="http://tools.ietf.org/html/draft-cavage-http-signatures-00" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">HTTP Signatures</a>. It enables a Web client or server to authenticate and authorize itself when doing a REST API call and only requires one HTTP round-trip to accomplish the feat. The meat of the spec is 5 pages long, and the technology is simple and awesome.</p>
<p>We&#8217;re working on this spec in the Web Payments group at the World Wide Web Consortium because it&#8217;s going to be a fundamental part of the payment architecture we&#8217;re building into the core of the Web. When you send money to or receive money from someone, you want to make sure that the transaction is secure. HTTP Signatures help to secure that financial transaction.</p>
<p>However, the really great thing about HTTP Signatures is that it can be applied anywhere password or OAuth-based authentication and authorization is used today. Passwords, and shared secrets in general, are increasingly becoming a <a href="http://arstechnica.com/security/2013/05/how-crackers-make-minced-meat-out-of-your-passwords/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','arstechnica.com']);">problem on the Web</a>. <a href="http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','hueniverse.com']);">OAuth 2 sucks</a> for a number of reasons. It&#8217;s time for something simpler and more powerful.</p>
<p>HTTP Signatures:</p>
<ol>
<li>Work over both HTTP and HTTPS. You don&#8217;t need to spend money on expensive SSL/TLS security certificates to use it.</li>
<li>Protect messages sent over HTTP or HTTPS by digitally signing the contents, ensuring that the data cannot be tampered with in transit. In the case that HTTPS security is <a href="https://www.eff.org/deeplinks/2011/10/how-secure-https-today" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.eff.org']);">breached</a>, it provides an additional layer of protection.</li>
<li>Identify the signer and establish a certain level of authorization to perform actions over a REST API. It&#8217;s like OAuth, only way simpler.</li>
</ol>
<p>When coupled with the <a href="https://payswarm.com/specs/source/web-keys/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">Web Keys</a> specification, HTTP Signatures:</p>
<ol>
<li>Provide a mechanism where the digital signature key does not need to be registered in advance with the server. The server can automatically discover the key from the message and determine what level of access the client should have.</li>
<li>Enable a fully distributed Public Key Infrastructure for the Web. This opens up new ways to more securely communicate over the Web, which is timely considering the recent news concerning the <a href="http://en.wikipedia.org/wiki/PRISM_(surveillance_program)" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">PRISM</a> surveillance program.</li>
</ol>
<p>If you&#8217;re interested in learning more about HTTP Signatures, the meat of the <a href="http://tools.ietf.org/html/draft-cavage-http-signatures-00" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tools.ietf.org']);">spec is 5 pages long</a> and is a pretty quick read. You can also read (or listen to) the meeting notes where we discuss the HTTP Signatures spec <a href="https://payswarm.com/minutes/2013-06-05/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">a week ago</a>, or <a href="https://payswarm.com/minutes/2013-06-12/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">today</a>. If you want to keep up with how the spec is progressing, <a href="http://lists.w3.org/Archives/Public/public-webpayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">join the Web Payments mailing list</a>.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7969 post type-post status-publish format-standard hentry category-json-ld category-semantic-web category-standards" id="post-7969">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/json-ld-google-search/" rel="bookmark" title="Permanent Link to Google adds JSON-LD support to Search and Google Now"> Google adds JSON-LD support to Search and Google Now</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>May 20, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/json-ld-google-search/#comments" title="Comment on Google adds JSON-LD support to Search and Google Now">2 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Google adds JSON-LD support to Search and Google Now" /><a title="Permanent Link to Google adds JSON-LD support to Search and Google Now" href="http://manu.sporny.org/2013/json-ld-google-search/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I&#8217;m one of the primary designers of JSON-LD and the Chair of the JSON-LD group at the World Wide Web Consortium.</em></p>
<p>Last week, Google announced support for <a href="http://manu.sporny.org/2013/gmail-json-ld/" >JSON-LD markup in Gmail</a>. Putting JSON-LD in front of 425 million people is a big validation of the technology.</p>
<p>Hot on the heels of last weeks announcement, Google has just announced additional JSON-LD support for two more of their core products! The first is their flagship product, Google Search. The second is their new intelligent personal assistant service called Google Now.</p>
<p>The addition of JSON-LD support to Google Search now allows you to do incredibly accurate personalized searches. For example, here&#8217;s an example search for &#8220;my flights&#8221;:</p>
<p><img style"display: block; margin-left: auto; margin-right: auto;" src="https://developers.google.com/gmail/schemas/images/answercardsexample2.png" /></p>
<p>and here&#8217;s an example for &#8220;my hotel reservation for next week&#8221;:</p>
<p><img style"display: block; margin-left: auto; margin-right: auto;" src="https://developers.google.com/gmail/schemas/images/answercardsexample1.png" /></p>
<p>Web developers that mark certain types of sort of information up as JSON-LD in the e-mails that they send to you can now enable new functionality in these core Google services. For example, using JSON-LD will make it really easy for you to manage flights, hotel bookings, reservations at restaurants, and events like concerts and movies from within Google&#8217;s ecosystem. It also makes it easy for services like Google Now to push a notification to your phone when your flight has been delayed:</p>
<p><img style"display: block; margin-left: auto; margin-right: auto;" src="https://developers.google.com/gmail/schemas/images/now_flightconfirmation.png" /></p>
<p>Or, show your boarding pass on your mobile phone when you&#8217;ve arrived at the airport:</p>
<p><img style"display: block; margin-left: auto; margin-right: auto;" src="https://developers.google.com/gmail/schemas/images/now_boardingpass.png" /></p>
<p>Or, let you know when you need to leave to make your reservation for a restaurant:</p>
<p><img style"display: block; margin-left: auto; margin-right: auto;" src="https://developers.google.com/gmail/schemas/images/now_restaurantreservation.png" /></p>
<p>Google Search and Google Now can make these recommendations to you because the information that you received about these flights, boarding passes, hotels, reservations, and other events were marked up in JSON-LD format when they hit your Gmail inbox. The most exciting thing about all of this is that it&#8217;s just the beginning of what Linked Data can do to for all of us. Over the next decade, Linked Data will be at the center of getting computing and the monotonous details of our everyday grind out of the way so that we can focus more on enjoying our lives.</p>
<p>If you want to dive deeper into this technology, Google&#8217;s page on schemas is a <a href="https://developers.google.com/gmail/schemas/overview" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','developers.google.com']);">good place to start</a>.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7954 post type-post status-publish format-standard hentry category-json-ld category-semantic-web category-standards" id="post-7954">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/gmail-json-ld/" rel="bookmark" title="Permanent Link to Google adds JSON-LD support to Gmail"> Google adds JSON-LD support to Gmail</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>May 16, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/gmail-json-ld/#comments" title="Comment on Google adds JSON-LD support to Gmail">4 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Google adds JSON-LD support to Gmail" /><a title="Permanent Link to Google adds JSON-LD support to Gmail" href="http://manu.sporny.org/2013/gmail-json-ld/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>Google announced support for <a href="https://developers.google.com/gmail/schemas/embedding-schemas-in-emails" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','developers.google.com']);">JSON-LD markup in Gmail</a> at Google I/O 2013. The design team behind JSON-LD is delighted by this announcement and applaud the Google engineers that integrated JSON-LD with Gmail. This blog post examines what this announcement means for Gmail customers as well as providing some suggestions to the Google Gmail engineers on how they could improve their JSON-LD markup.</p>
<p><a href="http://www.youtube.com/watch?v=vioCbTo3C-4" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">JSON-LD</a> enables the representation of <a href="http://www.youtube.com/watch?v=4x_xzT5eF5Q" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">Linked Data</a> in JSON by describing a common JSON representation format for expressing graphs of information (see <a href="http://www.google.com/insidesearch/features/search/knowledge.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.google.com']);">Google&#8217;s Knowledge Graph</a>). It allows you to mix regular JSON data with Linked Data in a single JSON document. The format has already been adopted by large companies such as Google in their <a href="https://developers.google.com/gmail/schemas/embedding-schemas-in-emails" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','developers.google.com']);">Gmail product</a> and is now available to over 425 million people via currently live software products around the world.</p>
<p>The syntax is designed to not disturb already deployed systems running on JSON, but provide a smooth upgrade path from JSON to JSON-LD. It is primarily intended to be a way to use Linked Data in Web-based programming environments, to build inter-operable Linked Data Web services, and to store Linked Data in JSON-based storage engines.</p>
<p>For Google&#8217;s Gmail customers, this means that Gmail will now be able to recognize people, places, events and a variety of other Linked Data objects. You can then take actions on the Linked Data objects embedded in an e-mail. For example, if someone sends you an invitation to a party, you can do a single-click response on whether or not you&#8217;ll attend a party right from your inbox. Doing so will also create a reminder for the party in your calendar. There are other actions that you can perform on Linked Data objects as well, like approving an expense report, reviewing a restaurant, saving a coupon for a free online movie, making a flight, hotel, or restaurant reservation, and many other really cool things that you couldn&#8217;t do before from the inside of your inbox.</p>
<h2>What Google Got Right and Wrong</h2>
<p>Google followed the JSON-LD standard pretty closely, so the vast majority of the markup looks really great. However, there are four issues that the Google engineers will probably want to fix before pushing the technology out to developers.</p>
<h3>Invalid Context URL</h3>
<p>The first issue is a fairly major one. Google isn&#8217;t using the JSON-LD <code>@context</code> parameter correctly in any of their markup examples. It&#8217;s supposed to be a URL, but they&#8217;re using a text string instead. This means that their JSON-LD documents are unreadable by all of the conforming JSON-LD processors today. For example, Google does the following when declaring a context in JSON-LD:</p>
<pre>
  "@context": "schema.org"
</pre>
<p>When they should be doing this:</p>
<pre>
  "@context": "http://schema.org/"
</pre>
<p>It&#8217;s a fairly simple change; just add &#8220;http://&#8221; to the beginning of the &#8220;schema.org&#8221; value. If Google doesn&#8217;t make this change, it&#8217;ll mean that JSON-LD processors will have to include a special hack to translate &#8220;schema.org&#8221; to &#8220;http://schema.org/&#8221; just for this use case. I hope that this was just a simple oversight by the Google engineers that implemented these features and not something that was intentional.</p>
<h3>Context isn&#8217;t Online</h3>
<p>The second issue has to do with the <a href="http://www.w3.org/TR/json-ld/#the-context" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">JSON-LD Context</a> for schema.org. There doesn&#8217;t seem to be a downloadable context for schema.org at the moment. Not having a Web-accessible JSON-LD context is bad because the context is at the heart and soul of a JSON-LD document. If you don&#8217;t publish a JSON-LD context on the Web somewhere, applications won&#8217;t be able to resolve any of the Linked Data objects in the document.</p>
<p>The Google engineers could fix this fairly easily by providing a JSON-LD Context document when a web client requests a document of type &#8220;application/ld+json&#8221; from the <code>http://schema.org/</code> URL. The JSON-LD community would be happy to help the Google engineers create such a document.</p>
<h3>Keyword Aliasing, FTW</h3>
<p>The third issue is a minor usability issue with the markup. The Google help pages on the JSON-LD functionality use the <code>@type</code> keyword in JSON-LD to express the type of Linked Data object that is being expressed. The Google engineers that wrote this feature may not have been aware of the <a href="http://www.w3.org/TR/json-ld/#aliasing-keywords" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">Keyword Aliasing</a> feature in JSON-LD. That is, they could have just aliased <code>@type</code> to <code>type</code>. Doing so would mean that the Gmail developer documentation  wouldn&#8217;t have to mention the &#8220;specialness&#8221; of the <code>@type</code> keyword.</p>
<h3>Use RDFa Lite</h3>
<p>The fourth issue concerns the use of Microdata. JSON-LD was designed to work seamlessly with RDFa Lite 1.1; you can easily and losslessly convert data between the two markup formats. JSON-LD is compatible with Microdata, but pairing the two is a sub-optimal design choice. When JSON-LD data is converted to Microdata, information is lost due to data fidelity issues in Microdata. For example, there is no mechanism to specify that a value is a URL in Microdata. </p>
<p>RDFa Lite 1.1 does not suffer from these issues and has been <a href="http://manu.sporny.org/2012/mythical-differences/" >proven to be a drop-in replacement for Microdata</a> without any of the downsides that Microdata has. The designers of JSON-LD are the same designers behind RDFa Lite 1.1 and have extensive experience with Microdata. We specifically did not choose to pair JSON-LD with Microdata because it was a bad design choice for a number of reasons. I hope that the Google engineers will seek out advice from the JSON-LD and RDFa communities before finalizing the decision to use Microdata, as there are numerous downsides associated with that decision.</p>
<h2>Closing</h2>
<p>All in all, the Google engineers did a good job of implementing JSON-LD in Gmail. With a few small fixes to the Gmail documentation and code examples, they will be fully compliant with the JSON-LD specifications. The JSON-LD community is excited about this development and looks forward to working with Google to improve the recent release of JSON-LD for Gmail.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7936 post type-post status-publish format-standard hentry category-semantic-web category-standards" id="post-7936">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/perma-id/" rel="bookmark" title="Permanent Link to Permanent Identifiers for the Web"> Permanent Identifiers for the Web</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>May 8, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/perma-id/#comments" title="Comment on Permanent Identifiers for the Web">10 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Permanent Identifiers for the Web" /><a title="Permanent Link to Permanent Identifiers for the Web" href="http://manu.sporny.org/2013/perma-id/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>Web applications that deal with <a href="http://en.wikipedia.org/wiki/Linked_data" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">data on the web</a> often need to specify and use URLs that are very stable. They utilize services such as <a href="http://purl.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">purl.org</a> to ensure that applications using their URLs will always be re-directed to a working website. These &#8220;permanent URL&#8221; redirection services operate kind of like a <a href="http://en.wikipedia.org/wiki/Telephone_switchboard" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">switchboard</a>, connecting requests for information with the true location of the information on the Web. These switchboards can be reconfigured to point to a new location if the old location stops working.</p>
<h2>How Does it Work?</h2>
<p>If the concept sounds a bit vague, perhaps an example will help. A web author could use the following link (<a href="https://w3id.org/payswarm/v1" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','w3id.org']);">https://w3id.org/payswarm/v1</a>) to refer to an important document. That link is hosted on a permanent identifier service. When a Web browser attempts to retrieve that link, it will be re-directed to the true location of the document on the Web. Currently, that location is <a href="https://payswarm.com/contexts/payswarm-v1.jsonld" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">https://payswarm.com/contexts/payswarm-v1.jsonld</a>. If the location of the payswarm-v1.jsonld document changes at any point in the future, the only thing that needs to be updated is the re-direction entry on w3id.org. That is, all Web applications that use the <a href="https://w3id.org/payswarm/v1" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','w3id.org']);">https://w3id.org/payswarm/v1</a> URL will be transparently re-directed to the new location of the document and will continue to &#8220;Just Work&trade;&#8221;.</p>
<h2>w3id.org Launches</h2>
<p>Permanent identifiers on the Web are an important thing to support, but until today there was no organization that would back a service for the Web to keep these sorts of permanent identifiers operating over the course of multiple decades. A number of us saw that this is a real problem and so we launched <a href="https://w3id.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','w3id.org']);">w3id.org</a>, which is a permanent identifier service for the Web. The purpose of w3id.org is to provide a secure, permanent  <a href="http://en.wikipedia.org/wiki/URL" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">URL</a> re-direction service for Web applications. This service will be run and operated by the <a href="http://www.w3.org/community/perma-id/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">W3C Permanent Identifier Community Group</a>.</p>
<p>Specifically, the following organizations that have pledged responsibility to ensure the operation of this service for the decades to come: <a href="http://digitalbazaar.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','digitalbazaar.com']);">Digital Bazaar</a>, <a href="http://3roundstones.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','3roundstones.com']);">3 Round Stones</a>, <a href="http://www.openlinksw.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.openlinksw.com']);">OpenLink Software</a>, <a href="http://www.aptest.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.aptest.com']);">Applied Testing and Technology</a>, and <a href="http://openspring.net/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','openspring.net']);">Openspring</a>. Many more organizations will join in time.</p>
<p>These organizations are responsible for all administrative tasks associated with operating the service. The social contract between these organizations gives each of them full access to all information required to maintain and operate the website. The agreement is setup such that a number of these companies could fail, lose interest, or become unavailable for long periods of time without negatively affecting the operation of the site.</p>
<h2>Why not purl.org</h2>
<p>While many web authors and data publishers currently use purl.org, there are a number of issues or concerns that we have about the website:</p>
<ol>
<li>The site was designed for the library community and was never intended to be used by the general Web.</li>
<li>Requests for information or changes to the service frequently go unanswered.</li>
<li>The site does not support HTTPS connections, which means it cannot be used to serve documents for security-sensitive industries such as medicine and finance. Requests to migrate the site to HTTPs have gone unanswered.</li>
<li>There is no published backup or fail-over plan for the website.</li>
<li>The site is run by a single organization, with a single part-time administrator, on a single machine. It suffers from multiple single points of failure.</li>
</ol>
<h2>w3id.org Features</h2>
<p>The launch of the w3id.org website mitigates all of the issues outlined above with purl.org:</p>
<ol>
<li>The site is specifically designed for web developers, authors, and data publishers on the general Web. It is not tailored for any specific community.</li>
<li>Requests for information can be sent to a public mailing list that contains multiple administrators that are accountable for answering questions publicly. All administrators have been actively involved in world standards for many years and know how to run a service at this scale.</li>
<li>The site supports HTTPS security, which means it can be used to securely serve data for industries such as medicine and finance.</li>
<li>Multiple organizations, with multiple administrators per organization have full access to administer all aspects of the site and recover it from any potential failure. All important site data is <a href="https://github.com/perma-id/w3id.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">in version control</a> and is mirrored across the world on a regular basis.</li>
<li>The site is run by a consortium of organizations that have each pledged to maintain the site for as long as possible. If a member organization fails, a new one will be found to replace the failing organization while the rest of the members ensure the smooth operation of the site.</li>
</ol>
<p>All identifiers associated with the w3id.org website are intended to be around for as long as the Web is around. This means decades, if not centuries. If the final destination for popular identifiers used by this service fail in such a way as to be a major inconvenience or danger to the Web, the community will mirror the information for the popular identifier and setup a working redirect to restore service to the rest of the Web.</p>
<h2>Adding a Permanent Identifier</h2>
<p>Anyone with a github account and knowledge of simple Apache redirect rules can add a permanent identifier to w3id.org by performing the following steps:</p>
<ol>
<li><a href="https://github.com/perma-id/w3id.org/fork" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">Fork w3id.org</a> on Github.</li>
<li><a href="https://github.com/perma-id/w3id.org/blob/master/security/.htaccess" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">Add a new redirect entry</a> and commit your changes.</li>
<li><a href="https://help.github.com/articles/using-pull-requests" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','help.github.com']);">Submit a pull request</a> for your changes.</li>
</ol>
<p>If you wish to engage the community in discussion about this service for your Web application, please send an e-mail to the <a href="http://lists.w3.org/Archives/Public/public-perma-id/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">public-perma-id@w3.org</a> mailing list. If you are interested in helping to maintain this service for the Web, please join the <a href="http://www.w3.org/community/perma-id/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">W3C Permanent Identifier Community Group</a>.</p>
<hr/>
<p><em>Note: The letters &#8216;w3&#8242; in the w3id.org domain name stand for &#8220;World Wide Web&#8221;. Other than hosting the software for the Permanent Identifier Community Group, the &#8220;World Wide Web Consortium&#8221; (W3C) is not involved in the support or  management of w3id.org in any way.</em></p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7832 post type-post status-publish format-standard hentry category-json-ld category-rdfa category-semantic-web category-standards" id="post-7832">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2013/rdf-identifiers/" rel="bookmark" title="Permanent Link to Identifiers in JSON-LD and RDF"> Identifiers in JSON-LD and RDF</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>February 23, 2013</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2013/rdf-identifiers/#comments" title="Comment on Identifiers in JSON-LD and RDF">5 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Identifiers in JSON-LD and RDF" /><a title="Permanent Link to Identifiers in JSON-LD and RDF" href="http://manu.sporny.org/2013/rdf-identifiers/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><strong>TL;DR: This blog post argues that the extension of blank node identifiers in <a href="http://json-ld.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">JSON-LD</a> and <a href="http://en.wikipedia.org/wiki/Resource_Description_Framework" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">RDF</a> for the purposes of identifying predicates and naming graphs is important. It is important because it simplifies the usage of both technologies for developers. The post also provides a less-optimal solution if the <a href="http://www.w3.org/2011/01/rdf-wg-charter" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDF Working Group</a> does not allow <a href="http://www.w3.org/TR/rdf11-concepts/#section-blank-nodes" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">blank node identifiers</a> for <a href="http://www.w3.org/TR/rdf11-concepts/#section-triples" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">predicates</a> and <a href="http://www.w3.org/TR/rdf11-concepts/#dfn-named-graph" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">graph names</a> in <a href="http://www.w3.org/TR/rdf11-concepts/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDF 1.1</a>.</strong></p>
<p>We need identifiers as humans to convey complex messages. Identifiers let us refer to a certain thing by naming it in a particular way. Not only do humans need identifiers, but our computers need identifiers to refer to data in order to perform computations. It is no exaggeration to say that our very civilization depends on identifiers to manage the complexity of our daily lives, so it is no surprise that people spend a great deal of time thinking about how to identify things. This is especially true when we talk about the people that are building the software infrastructure for the Web.</p>
<p>The Web has a very special identifier called the <a href="http://en.wikipedia.org/wiki/URL" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Uniform Resource Locator</a> (URL). It is probably one of the best known identifiers in the world, mostly because everybody that has been on the Web has used one. URLs are great identifiers because they are very specific. When I give you a URL to put into your Web browser, such as the link to this blog post, I can be assured that when you put the URL into your browser that you will see what I see. URLs are globally scoped, they&#8217;re supposed to always take you to the same place.</p>
<p>There is another class of identifier on the Web that is not globally scoped and is only used within a document on the Web. In English, these identifiers are used when we refer to something as &#8220;that thing&#8221;, or &#8220;this widget&#8221;. We can really only use this sort of identifier within a particular context where the people participating in the conversation understand the context. Linguists call this concept <a href="http://en.wikipedia.org/wiki/Deixis" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">deixis</a>. &#8220;Thing&#8221; doesn&#8217;t always refer to the same subject, but based on the proper context, we can usually understand what is being identified. Our consciousness tags the &#8220;thing&#8221; that is being talked about with a tag of sorts and then refers to that thing using this pseudo-identifier. Most of this happens unconsciously (notice how your mind unconsciously tied the use of &#8216;this&#8217; in this sentence to the correct concept?).</p>
<p>The take-away is that there are globally-scoped identifiers like URLs, and there are also locally-scoped identifiers, that require a context in order to understand what they refer to.</p>
<h2>JSON and JSON-LD</h2>
<p>In <a href="http://en.wikipedia.org/wiki/Json" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">JSON</a>, developers typically express data like this:
<pre>{
  "name": "Joe"
}
</pre>
<p>Note how that JSON object doesn&#8217;t have an identifier associated with it. <a href="http://json-ld.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">JSON-LD</a> creates a straight-forward way of giving that object an identifier:</p>
<pre>
{
  "@context": ...,
  "@id": "http://example.com/people/joe",
  "name": "Joe"
}
</pre>
<p>Both you and I can refer to that object using <code>http://example.com/people/joe</code> and be sure that we&#8217;re talking about the same thing. There are times that assigning a global identifier to every piece of data that we create is not desired. For example, it doesn&#8217;t make much sense to assign an identifier to a transient message that is a request to get a sensor reading. This is especially true if there are millions of these types or requests and we never want to refer to the request once it has been transmitted. This is why JSON-LD doesn&#8217;t force developers to assign an identifier to the objects that they express. The people that created the technology understand that not everything needs a global identifier.</p>
<p>Computers are less forgiving, they need identifiers for most everything, but a great deal of that complexity can be hidden from developers. When an identifier becomes necessary in order to perform computations upon the data, the computer can usually auto-generate an identifier for the data.</p>
<h2>RDF, Graphs, and Blank Node Identifiers</h2>
<p>The <a href="http://en.wikipedia.org/wiki/Resource_Description_Framework" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Resource Description Framework</a> (RDF) primarily uses an identifier called the <a href="http://en.wikipedia.org/wiki/Internationalized_Resource_Identifier" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Internationalized Resource Identifier</a> (IRI). Where URLs can typically only express links in Western languages, an IRI can express links in almost every language in use today including Japanese, Tamil, Russian and Mandarin. RDF also defines a special type of identifier called a <a href="http://www.w3.org/TR/rdf11-concepts/#section-blank-nodes" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">blank node identifier</a>. This identifier is auto-generated and is locally scoped to the document. It&#8217;s an advanced concept, but is one that is pretty useful when you start dealing with transient data, where creating a global identifier goes beyond the intended usage of the data. An RDF-compatible program will step in and create blank node identifiers on your behalf, but only when necessary.</p>
<p>Both JSON-LD and RDF have the concept of a Statement, Graph, and a Dataset. A Statement consists of a subject, predicate, and an object (for example: &#8220;Dave likes cookies&#8221;). A Graph is a collection of Statements (for example: Graph A contains all the things that Dave said and Graph B contains all the things that Mary said). A Dataset is a collection of Graphs (for example: Dataset Z contains all of the things Dave and Mary said yesterday).</p>
<p>In JSON-LD, at present, you can use a blank node identifier for subjects, predicates, objects, and graphs. In RDF, you can only use blank node identifiers for subjects and objects. There are people, such as myself, in the RDF WG that think this is a mistake. There are people that think it&#8217;s fine. There are people that think it&#8217;s the best compromise that can be made at the moment. There is a wide field of varying opinions strewn between the various extremes.</p>
<p>The end result is that the current state of affairs have put us into a position where we may have to remove blank node identifier support for predicates and graphs from JSON-LD, which comes across as a fairly arbitrary limitation to those not familiar with the inner guts of RDF. Don&#8217;t get me wrong, I feel it&#8217;s a fairly arbitrary limitation. There are those in the RDF WG that don&#8217;t think it is and that may prevent JSON-LD from being able to use what I believe is a very useful construct.</p>
<h2>Document-local Identifiers for Predicates</h2>
<p>Why do we need blank node identifiers for predicates in JSON-LD? Let&#8217;s go back to the first example in JSON to see why:</p>
<pre>
{
  "name": "Joe"
}
</pre>
<p>The JSON above is expressing the following Statement: &#8220;There exists a thing whose name is Joe.&#8221;</p>
<p>The subject is &#8220;thing&#8221; (aka: a blank node) which is legal in both JSON-LD and RDF. The predicate is &#8220;name&#8221;, which doesn&#8217;t map to an IRI. This is fine as far as the JSON-LD data model is concerned because &#8220;name&#8221;, which is local to the document, can be mapped to a blank node. RDF cannot model &#8220;name&#8221; because it has no way of stating that the predicate is local to the document since it doesn&#8217;t support blank nodes for predicates. Since the predicate doesn&#8217;t map to an IRI, it can&#8217;t be modeled in RDF. Finally, &#8220;Joe&#8221; is a string used to express the object and that works in both JSON-LD and RDF.</p>
<p>JSON-LD supports the use of blank nodes for predicates because there are some predicates, like every key used in JSON, that are local to the document. RDF does not support the use of blank nodes for predicates and therefore cannot properly model JSON.</p>
<h2>Document-local Identifiers for Graphs</h2>
<p>Why do we need blank node identifiers for graphs in JSON-LD? Let&#8217;s go back again to the first example in JSON:</p>
<pre>
{
  "name": "Joe"
}
</pre>
<p>The container of this statement is a Graph. Another way of writing this in JSON-LD is this:</p>
<pre>
{
  "@context": ...,
  "@graph": {
    "name": "Joe"
  }
}
</pre>
<p>However, what happens when you have two graphs in JSON-LD, and neither one of them is the RDF <a href="http://www.w3.org/TR/rdf11-concepts/#dfn-default-graph" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">default graph</a>?</p>
<pre>
{
  "@context": ...,
  "@graph": [
    {
      "@graph": {
        "name": "Joe"
      }
    }, 
    {
      "@graph": {
        "name": "Susan"
      }
    }
  ]
}
</pre>
<p>In JSON-LD, at present, it is assumed that a blank node identifier may be used to name each graph above. Unfortunately, in RDF, the only thing that can be used to name a graph is an IRI, and a blank node identifier is not an IRI. This puts JSON-LD in an awkward position, either JSON-LD can:</p>
<ol>
<li>Require that developers name every graph with an IRI, which seems like a strange demand because developers don&#8217;t have to name all subjects and objects with an IRI, or</li>
<li>JSON-LD can auto-generate a <em>regular</em> IRI for each predicate and graph name, which seems strange because blank node identifiers exist for this very purpose (not to mention this solution won&#8217;t work in all cases, more below), or </li>
<li>JSON-LD can auto-generate a <em>special</em> IRI for each predicate and graph name, which would basically re-invent blank node identifiers.</li>
</ol>
<h2>The Problem</h2>
<p>The problem surfaces itself when you try to convert a JSON-LD document to RDF. If the RDF Working Group doesn&#8217;t allow blank node identifiers for predicates and graphs, then what do you use to identify predicates and graphs that have blank node identifiers associated with them in the JSON-LD data model? This is a feature we do want to support because there are a number of important use cases that it enables. The use cases include: </p>
<ol>
<li>Blank node predicates allow JSON to be mapped directly to the JSON-LD and RDF data models.</li>
<li>Blank node graph names allow developers to use graphs without explicitly naming them.</li>
<li>Blank node graph names make the RDF Dataset Normalization algorithm simpler.</li>
<li>Blank node graph names prevent the creation of a parallel mechanism to generate and manage blank node-like identifiers.</li>
</ol>
<p>It&#8217;s easy to see the problem exposed when performing RDF Dataset Normalization, which we need to do in order to digitally sign information expressed in JSON-LD and RDF. The rest of this post will focus on this area, as it exposes the problems with not supporting blank node identifiers for predicates and graph names. In JSON-LD, the two-graph document above could be normalized to this NQuads (subject, predicate, object, graph) representation:</p>
<pre>
_:bnode0 _:name "Joe" _:graph1 .
_:bnode1 _:name "Susan" _:graph2 .
</pre>
<p>This is illegal in RDF since you can&#8217;t have a blank node identifier in the predicate or graph position. Even if we were to use an IRI in the predicate position, the problem (of not being able to normalize &#8220;un-labeled&#8221; JSON-LD graphs like the ones in the previous section) remains.</p>
<h2>The Solutions</h2>
<p>This section will cover the proposed solutions to the problem in order least desirable to most desirable.</p>
<h3>Don&#8217;t allow blank node identifiers for predicates and graph names</h3>
<p>Doing this in JSON-LD ignores the point of contention. The same line of argumentation can be applied to RDF. The point is that by forcing developers to name graphs using IRIs, we&#8217;re forcing them to do something that they don&#8217;t have to do with subjects and objects. There is no technical reason that has been presented where the use of a blank node identifier in the predicate or graph position is unworkable. Telling developers that they must name graphs using IRIs will be surprising to them, because there is no reason that the software couldn&#8217;t just handle that case for them. Requiring developers to do things that a computer can handle for them automatically is anti-developer and will harm adoption in the long run.</p>
<h3>Generate fragment identifiers for graph names</h3>
<p>One solution is to generate fragment identifiers for graph names. This, coupled with the base IRI would allow the data to be expressed legally in NQuads:</p>
<pre>
_:bnode0 &lt;http://example.com/base#name> "Joe" &lt;http://example.com/base#graph1> .
_:bnode1 &lt;http://example.com/base#name> "Susan" &lt;http://example.com/base#graph2> .
</pre>
<p>The above is legal RDF. The approach is problematic when you don&#8217;t have a base IRI, such as when JSON-LD is used as a messaging protocol between two systems. In that use case, you end up with something like this:</p>
<pre>
_:bnode0 &lt;#name> "Joe" &lt;#graph1> .
_:bnode1 &lt;#name> "Susan" &lt;#graph2> .
</pre>
<p>RDF requires absolute IRIs and so the document above is illegal from an RDF perspective. The other down-side is that you have to keep track of all fragment identifiers in the output and make sure that you don&#8217;t pick fragment identifiers that are used elsewhere in the document. This is fairly easy to do, but now you&#8217;re in the position of tracking and renaming both blank node identifiers and fragment IDs. Even if this approach worked, you&#8217;d be re-inventing the blank node identifier. This approach is unworkable for systems like PaySwarm that use transient JSON-LD messages across a REST API; there is no base IRI in this use case.</p>
<h3>Skolemize to create identifiers for graph names</h3>
<p>Another approach is <a href="http://www.w3.org/TR/rdf11-concepts/#section-skolemization" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">skolemization</a>, which is just a fancy way of saying: generate a unique IRI for the blank node when expressing it as RDF. The output would look something like this:</p>
<pre>
_:bnode0 &lt;http://blue.example.com/.well-known/genid/2938570348579834> "Joe" &lt;http://blue.example.com/.well-known/genid/348570293572375> .
_:bnode1 &lt;http://blue.example.com/.well-known/genid/2938570348579834> "Susan" &lt;http://blue.example.com/.well-known/genid/49057394572309457> .
</pre>
<p>This would be just fine if there was only one application reading and consuming data. However, when we are talking about RDF Dataset Normalization, there are cases where two applications must read and independently verify the representation of a particular IRI. One scenario that illustrates the example fairly nicely is the blind verification scenario. In this scenario, two applications de-reference an IRI to fetch a JSON-LD document. Each application must perform RDF Dataset Normalization and generate a hash of that normalization to see if they retrieved the same data. Based on a strict reading of the skolemization rules, Application A would generate this:</p>
<pre>
_:bnode0 &lt;http://blue.example.com/.well-known/genid/2938570348579834> "Joe" &lt;http://blue.example.com/.well-known/genid/348570293572375> .
_:bnode1 &lt;http://blue.example.com/.well-known/genid/2938570348579834> "Susan" &lt;http://blue.example.com/.well-known/genid/49057394572309457> .
</pre>
<p>and Application B would generate this:</p>
<pre>
_:bnode0 &lt;http://red.example.com/.well-known/genid/J8Sfei8f792Fd3> "Joe" &lt;http://red.example.com/.well-known/genid/j28cY82Pa88> .
_:bnode1 &lt;http://red.example.com/.well-known/genid/J8Sfei8f792Fd3> "Susan" &lt;http://red.example.com/.well-known/genid/k83FyUuwo89DF> .
</pre>
<p>Note how the two graphs would never hash to the same value because the Skolem IRIs are completely different. The RDF Dataset Normalization algorithm would have no way of knowing which IRIs are blank node stand-ins and which ones are legitimate IRIs. You could say that publishers are required to assign the skolemized IRIs to the data they publish, but that ignores the point of contention, which is that you don&#8217;t want to force developers to create identifiers for things that they don&#8217;t care to identify. You could argue that the publishing system could generate these IRIs, but then you&#8217;re still creating a global identifier for something that is specifically meant to be a document-scoped identifier.</p>
<p>A more lax reading of the Skolemization language might allow one to create a special type of Skolem IRI that could be detected by the RDF Dataset Normalization algorithm. For example, let&#8217;s say that since JSON-LD is the one that is creating these IRIs before they go out to the RDF Dataset Normalization Algorithm, we use the <code>tag</code> IRI scheme. The output would look like this for Application A:</p>
<pre>
_:bnode0 &lt;tag:w3.org,2013:dsid:345> "Joe" &lt;tag:w3.org,2013:dsid:254> .
_:bnode1 &lt;tag:w3.org,2013:dsid:345> "Susan" &lt;tag:w3.org,2013:dsid:363> .
</pre>
<p>and this for Application B:</p>
<pre>
_:bnode0 &lt;tag:w3.org,2013:dsid:a> "Joe" &lt;tag:w3.org,2013:dsid:b> .
_:bnode1 &lt;tag:w3.org,2013:dsid:a> "Susan" &lt;tag:w3.org,2013:dsid:c> .
</pre>
<p>The solution still doesn&#8217;t work, but we could add another step to the RDF Dataset Normalization algorithm that would allow it to rename any IRI starting with <code>tag:w3.org,2013:</code>. Keep in mind that this is exactly the same thing that we do with blank nodes, and it&#8217;s effectively duplicating that functionality. The algorithm would allow us to generate something like this for both applications doing a blind verification.</p>
<pre>
_:bnode0 &lt;tag:w3.org,2013:dsid:predicate-1> "Joe" &lt;tag:w3.org,2013:dsid:graph-1> .
_:bnode1 &lt;tag:w3.org,2013:dsid:predicate-1> "Susan" &lt;tag:w3.org,2013:dsid:graph-2> .
</pre>
<p>This solution does violate one strong suggestion in the Skolemization section:</p>
<blockquote><p>Systems wishing to do this should mint a new, globally unique IRI (a Skolem IRI) for each blank node so replaced.</p></blockquote>
<p>The IRI generated is definitely not globally unique, as there will be many <code>tag:w3.org,2013:dsid:graph-1</code>s in the world, each associated with data that is completely different. This approach also goes against something else in Skolemization that states:</p>
<blockquote><p>This transformation does not appreciably change the meaning of an RDF graph.</p></blockquote>
<p>It&#8217;s true that using tag IRIs doesn&#8217;t change the meaning of the graph when you assume that the document will never find its way into a database. However, once you place the document in a database, it certainly creates the possibility of collisions in applications that are not aware of the special-ness of IRIs starting with <code>tag:w3.org,2013:dsid:</code>. The data is fine taken by itself, but a disaster when merged with other data. We would have to put a warning in some specification for systems to make sure to rename the incoming <code>tag:w3.org,2013:dsid:</code> IRIs to something that is unique to the storage subsystem. Keep in mind that this is exactly what is done when importing blank node identifiers into a storage subsystem. So, we&#8217;ve more-or-less re-invented blank node identifiers at this point.</p>
<h3>Allow blank node identifiers for graph names</h3>
<p>This leads us to the question of why not just extend RDF to allow blank node identifiers for predicates and graph names? Ideally, that&#8217;s what I would like to see happen in the future as it places the least burden on developers, and allows RDF to easily model JSON. The responses from the RDF WG are varied. These are all of the current arguments against that I have heard:</p>
<blockquote><p>There are other ways to solve the problem, like fragment identifiers and skolemization, than introducing blank nodes for predicates and graph names.</p></blockquote>
<p>Fragment identifiers don&#8217;t work, as demonstrated above. There is really only one workable solution based on a very lax reading of skolemization, and as demonstrated above, even the best skolemization solution re-invents the concept of a blank node.</p>
<blockquote><p>There are other use cases that are blocked by the introduction of blank node identifiers into the predicate and graph name position.</p></blockquote>
<p>While this has been asserted, it is still unclear exactly what those use cases are.</p>
<blockquote><p>Adding blank node identifiers for predicates and graph names will break legacy applications.</p></blockquote>
<p>If blank nodes for predicates and graph names were illegal before, wouldn&#8217;t legacy applications reject that sort of input? The argument that there are bugs in legacy applications that make them not robust against this type of input is valid, but should that prevent the right solution from being adopted? There has been no technical reason put forward for why blank nodes for predicates or graph names cannot work, other than software bugs prevent it.</p>
<blockquote><p>The PaySwarm work has chosen to model the data in a very strange way.</p></blockquote>
<p>The people that have been working on RDFa, JSON-LD, and the Web Payments specifications for the past 5 years have spent a great deal of time attempting to model the data in the simplest way possible, and in a way that is accessible to developers that aren&#8217;t familiar with RDF. Whether or not it may seem strange is arguable since this response is usually levied by people not familiar with the Web Payments work. This blog post outlines a variety of use cases where the use of a blank node for predicates and graph naming is necessary. Stating that the use cases are invalid ignores the point of contention.</p>
<blockquote><p>If we allow blank nodes to be used when naming graphs, then those blank nodes should denote the graph.</p></blockquote>
<p>At present, RDF states that a graph named using an IRI may denote the graph or it may not denote the graph. This is a fancy way of saying that the IRI that is used for the graph name may be an identifier for something completely different (like a person), but de-referencing the IRI over the Web results in a graph about cars. I personally think that is a very dangerous concept to formalize in RDF, but there are others that have strong opinions to the contrary. The chances of this being changed in RDF 1.1 is next to none.</p>
<p>Others have argued that while that may be the case for IRIs, it doesn&#8217;t have to be the case for blank nodes that are used to name graphs. In this case, we can just state that the blank node denotes the graph because it couldn&#8217;t possibly be used for anything else since the identifier is local to the document. This makes a great deal of sense, but it is different from how an IRI is used to name a graph and that difference is concerning to a number of people in the RDF Working Group.</p>
<p>However, that is not an argument to disallow blank nodes from being used for predicates and graph names. The group could still allow blank nodes to be used for this purpose while stating that they may or may not be used to denote the graph.</p>
<blockquote><p>The RDF Working Group does not have enough time left in its charter to make a change this big.</p></blockquote>
<p>While this may be true, not making a decision on this is causing more work for the people working on JSON-LD and RDF Dataset Normalization. Having the <code>tag:w3.org,2013:dsid:</code> identifier scheme is also going to make many RDF-based applications more complex in the long run, resulting in a great deal more work than just allowing blank nodes for predicates and graph names.</p>
<h2>Conclusion</h2>
<p>I have a feeling that the RDF Working Group is not going to do the right thing on this one due to the time pressure of completing the work that they&#8217;ve taken on. The group has already requested, and has been granted, a charter extension. Another extension is highly unlikely, so the group wants to get everything wrapped up. This discussion could take several weeks to settle. That said, the solution that will most likely be adopted (a special tag-based skolem IRI) will cause months of work for people living in the JSON-LD and RDF ecosystem. The best solution in the long run would be to solve this problem now.</p>
<p>If blank node identifiers for predicates and graphs are rejected, here is the proposal that I think will move us forward while causing an acceptable amount of damage down the road:</p>
<ol>
<li>JSON-LD continues to support blank node identifiers for use as predicates and graph names.</li>
<li>When converting JSON-LD to RDF, a special, relabelable IRI prefix will be used for blank nodes in the predicate and graph name position of the form <code>tag:w3.org,2013:dsid:</code></li>
</ol>
<p><em>Thanks to Dave Longley for proofing this blog post and providing various corrections.</em></p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7744 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-7744">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/microdata-cr/" rel="bookmark" title="Permanent Link to Objection to Microdata Candidate Recommendation"> Objection to Microdata Candidate Recommendation</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>November 25, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/microdata-cr/#comments" title="Comment on Objection to Microdata Candidate Recommendation">16 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Objection to Microdata Candidate Recommendation" /><a title="Permanent Link to Objection to Microdata Candidate Recommendation" href="http://manu.sporny.org/2012/microdata-cr/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I&#8217;m the current chair of the standards group at the World Wide Web Consortium that created the newest version of RDFa, editor of the HTML5+RDFa 1.1 and RDFa Lite 1.1 specifications, and I&#8217;m also a member of the HTML Working Group.</em></p>
<p><em>Edit: 2012-12-01 &#8211; Updated the article to rephrase some things, and include rationale and counter-arguments at the bottom in preparation for the HTML WG poll on the matter.</em></p>
<p>The HTML Working Group at the W3C is currently trying to decide if they should transition the Microdata specification to the next stage in the standardization process. There has been a <a href="http://lists.w3.org/Archives/Public/public-html/2012Nov/0128.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">call for consensus</a> to transition the spec to the Candidate Recommendation stage. The problem is that we already have a set of specifications that are official W3C recommendations that do what Microdata does and more. RDFa 1.1 became an official W3C Recommendation last summer. From a standards perspective, this is a mistake and sends a confused signal to Web developers. Officially supporting two specification that do almost exactly the same thing in almost exactly the same way is, ultimately, a failure to standardize.</p>
<p>The fact that RDFa already does what Microdata does has been elaborated upon before:</p>
<p><a href="http://manu.sporny.org/2012/mythical-differences/" >Mythical Differences: RDFa Lite vs. Microdata</a><br />
<a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/" >An Uber-comparison of RDFa, Microdata, and Microformats</a></p>
<p>Here&#8217;s the problem in a nutshell: The W3C is thinking of ratifying two completely different specifications that <a href="http://xkcd.com/927/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','xkcd.com']);">accomplish the same thing in basically the same way</a>. The functionality of RDFa, which is already a W3C Recommendation, overlaps Microdata by a large margin. In fact, RDFa Lite 1.1 was developed as a plug-in replacement for Microdata. The full version of RDFa can also do a number of things that Microdata cannot, such as datatyping, associating more than one type per object, embed-ability in languages other than HTML, ability to easily publish and mix vocabularies, etc.</p>
<p>Microdata would have easily been dead in the water had it not been for two simple facts: 1) The editor of the specification works at Google, and 2) Google pushed Microdata as the markup language for schema.org before also accepting RDFa markup. The first enabled Google and the editor to work on schema.org without signalling to the public that it was creating a competitor to Facebook&#8217;s Open Graph Protocol. The second gave Microdata enough of a jump start to establish a foothold for schema.org markup. There have been a number of studies that <a href="http://webdatacommons.org/vocabulary-usage-analysis/index.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','webdatacommons.org']);">show that Microdata&#8217;s sole use case</a> (99% of Microdata markup) is for the markup of schema.org terms. Microdata is not widely used outside of that context, we now have data to back up what we had predicted would happen when schema.org made their initial announcement for Microdata-only support. Note that schema.org now supports both RDFa and Microdata.</p>
<p>It is typically a bad idea to have two formats published by the same organization that do the same thing. It leads to Web developer confusion surrounding which format to use. One of the goals of Web standards is to reduce, or preferably eliminate, the confusion surrounding the correct technology decision to make. The HTML Working Group and the W3C is failing miserably on this front. There is more confusion today about picking Microdata or RDFa because they accomplish the same thing in effectively the same way. The only reason both exist is due to political reasons.</p>
<p>If we step back and look at the technical arguments, there is no compelling reason that Microdata should be a W3C Recommendation. There is no compelling reason to have two specifications that do the same thing in basically the same way. Therefore, as a member of the HTML Working Group (not as a chair or editor of RDFa) <strong><em>I object to the publication of Microdata as a Candidate Recommendation</em></strong>.</p>
<p>Note that this is not a <em>W3C formal objection</em>. This is an informal objection to publish Microdata along the Recommendation track. This objection <em>will not</em> become an official <em>W3C formal objection</em> if the HTML Working Group holds a poll to gather consensus around whether Microdata should proceed along the Recommendation publication track. I believe the publication of a W3C Note will continue to allow Google to support Microdata in schema.org, but will hopefully correct the confused message that the W3C has been sending to Web developers regarding RDFa and Microdata. <em>We don&#8217;t need two specifications that do almost exactly the same thing.</em></p>
<p>The message sent by the W3C needs to be very clear: There is one recommendation for doing structured data markup in HTML. That recommendation is RDFa. It addresses all of the use cases that have been put forth by the general Web community, and it&#8217;s ready for broad adoption and implementation today.</p>
<p>If you agree with this blog post, make sure to <a href="mailto:public-html-comments@w3.org">let the HTML Working Group know</a> that you do not think that the W3C should ratify two specifications that do almost exactly the same thing in almost exactly the same way. Now is the time to speak up!</p>
<h2>Summary of Facts and Arguments</h2>
<p>Below is a summary of arguments presented as a basis for publishing Microdata along the W3C Note track:</p>
<ol>
<li>RDFa 1.1 is already a <a href="http://www.w3.org/TR/rdfa-core/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">ratified Web standard</a> as of June 7th 2012 and absorbed almost every Microdata feature before it became official. If the majority of the differences between RDFa and Microdata boil down to different attribute names (property vs. itemprop), then the two solutions have effectively converged on syntax and W3C should not ratify two solutions that do effectively the same thing in almost exactly the same way.</li>
<li>RDFa is <a href="http://blog.schema.org/2012/06/semtech-rdfa-microdata-and-more.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">supported by all of the major search crawlers</a>, including Google (and schema.org), Microsoft, Yahoo!, Yandex, and Facebook. Microdata is not supported by Facebook.</li>
<li>RDFa Lite 1.1 is <a href="">feature-equivalent to Microdata</a>. Over 99% of Microdata markup can be expressed easily in RDFa Lite 1.1. Converting from Microdata to RDFa Lite is as simple as a search and replace of the Microdata attributes with RDFa Lite attributes. Conversely, Microdata does not support a number of the more advanced RDFa features, like being able to tell the difference between feet and meters.</li>
<li>You can <a href="http://www.w3.org/TR/rdfa-primer/#using-multiple-vocabularies" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">mix vocabularies</a> with RDFa Lite 1.1, supporting both schema.org and Facebook&#8217;s Open Graph Protocol (OGP) using a single markup language. You don&#8217;t have to learn Microdata for schema.org and RDFa for Facebook &#8211; just use RDFa for both.</li>
<li>The <a href="http://krijnhoetmer.nl/irc-logs/whatwg/20121128#l-1122" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','krijnhoetmer.nl']);">creator of the Microdata specification doesn&#8217;t like Microdata</a>. When people are not passionate about the solutions that they create, the desire to work on those solutions and continue improve upon them is muted. The RDFa community is passionate about the technology that they have created together and have strived to make it better since the standardization of RDFa 1.0 back in 2008.</li>
<li>RDFa Lite 1.1 is <a href="http://www.w3.org/TR/rdfa-lite/#the-attributes" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">fully upward-compatible</a> with RDFa 1.1, allowing you to seamlessly migrate to a more feature-rich language as your Linked Data needs grow. Microdata does not support any of the more advanced features provided by RDFa 1.1.</li>
<li>RDFa <a href="http://events.linkeddata.org/ldow2012/papers/ldow2012-inv-paper-1.pdf" onclick="javascript:_gaq.push(['_trackEvent','download','events.linkeddata.org/ldow2012/papers/ldow2012-inv-paper-1.pdf']);">deployment is broader</a> than Microdata. RDFa deployment continues to grow at a rapid pace.</li>
<li>The economic damage generated by publishing both RDFa and Microdata along the Recommendation track should not be underestimated. W3C should try to provide clear direction in an attempt to reduce the economic waste that a &#8220;let the market sort it out among two nearly identical solutions&#8221; strategy will generate. At some point, the market will figure out that both solutions are nearly identical, but only after publishing and building massive amounts of content and tooling for both.</li>
<li>The W3C Technical Architecture Group (TAG), which is responsible for ensuring that the core architecture of the Web is sound, has <a href="http://lists.w3.org/Archives/Public/public-html-comments/2011Jun/0038.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">raised their concern</a> about the publication of both Microdata and RDFa as recommendations. After the W3C TAG raised their concerns, the RDFa Working Group created RDFa Lite 1.1 to be a near feature-equivalent replacement for Microdata that was also backwards-compatible with RDFa 1.0.</li>
<li>Publishing a standard that does almost exactly the same thing as an existing standard in almost exactly the same way is a <a href="http://lists.w3.org/Archives/Public/public-html/2012Nov/0180.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">failure to standardize</a>.</li>
</ol>
<h2>Counter-arguments and Rebuttals</h2>
<blockquote><p>[This is a] <a href="http://lists.w3.org/Archives/Public/public-html/2012Nov/0178.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">classic case of monopolistic anti-competitive protectionism</a>.</p></blockquote>
<p>No, this is an objection to publishing two specifications that do almost exactly the same thing in almost exactly the same way along the W3C Recommendation publication track. Protectionism would have asked that all work on Microdata be stopped and the work scuttled. The proposed resolution does not block anybody from using Microdata, nor does it try to stop or block the Microdata work from happening in the HTML WG. The objection asks that the W3C decide what the best path forward for Web developers is based on a fairly complicated set of predicted outcomes. This is not an easy decision. The objection is intended to ensure that the HTML Working Group has this discussion before we proceed to Candidate Recommendation with Microdata.</p>
<blockquote><pre>
&lt;manu1> I'd like the W3C to work as well, and I think publishing two specs that accomplish basically 
        the same thing in basically the same way shows breakage.
&lt;annevk> Bit late for that. XDM vs DOM, XPath vs Selectors, XSL-FO vs CSS, XSLT vs XQuery, 
         XQuery vs XQueryX, RDF/XML vs Turtle, XForms vs Web Forms 2.0, 
         XHTML 1.0 vs HTML 4.01, XML 1.0 4th Edition vs XML 1.0 5th Edition, 
         XML 1.0 vs XML 1.1, etc.</pre>
<p> [<a href="http://krijnhoetmer.nl/irc-logs/whatwg/20121128#l-789" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','krijnhoetmer.nl']);">link to full conversation</a>]</p></blockquote>
<p>While W3C does have a history of publishing competing specifications, there have been features in each competing specification that were compelling enough to warrant the publication of both standards. For example, XHTML 1.0 provided a standard set of rules for validating documents that was aligned with XML and a decentralized extension mechanism that HTML4.01 did not. Those two major features were viewed as compelling enough to publish both specifications as Recommendations via W3C. </p>
<p>For authors, the differences between RDFa and Microdata are so small that, for 99% of documents in the wild, you can convert a Microdata document to an RDFa Lite 1.1 document with a simple search and replace of attribute names. That demonstrates that the syntaxes for both languages are different only in the names of the HTML attributes, and that does not seem like a very compelling reason to publish both specifications as Recommendations.</p>
<blockquote><p><a href="http://lists.w3.org/Archives/Public/public-html/2012Nov/0243.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">Microdata&#8217;s processing algorithm is vastly simpler</a>, which makes the data<br />
extracted more reliable and, when something does go wrong, makes it easier for 1) users to debug their own data, and 2) easier for me to debug it if they can&#8217;t figure it out on their own.</p></blockquote>
<p>Microdata&#8217;s processing algorithm is simpler for two major reasons:</p>
<ul>
<li><a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/" >Microdata does not support as many features and use cases as RDFa</a> does.</li>
<li>RDFa 1.1 is backwards-compatible with RDFa 1.0, which complicates the processing rules. The same is true for HTML5.</li>
</ul>
<p>The complexity of implementing a processor has little bearing on how easy it is for developers to author documents. For example, XHTML 1.0 had a simpler processing model which made the data that was extracted more reliable and when something went wrong, it was easier to debug. However, HTML5 supported more use cases and recovers from errors in cases where it can, which made it more popular with Web developers in the long-run.</p>
<p>Additionally, authors of Microdata and RDFa <a href="http://rdfa.info/play/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','rdfa.info']);">should be using tools like RDFa Play to debug their markup</a>. This is true for any Web technology. We debug our HTML, JavaScript, and CSS by loading it into a browser and bringing up the debugging tools. This is no different for Microdata and RDFa. If you want to make sure your markup does what you want, make sure to verify it by using a tool and not by trying to memorize the processing rules and running them through your head.</p>
<blockquote><p>For what it is worth, I personally think <a href="http://lists.w3.org/Archives/Public/public-html/2012Nov/0179.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">RDFa is generally a technically better solution</a>. But as Marcos says, &#8220;so what&#8221;? Our job at W3C is to make standards for the technology the market decides to use.</p></blockquote>
<p>If we think one of these technologies is a technically better solution than the other one, we should signal that realization at some level. The most basic thing we could do is to make one an official Recommendation, and the other a Note. I also agree that our job at W3C is to make standards that the technology market decides to use, but clearly this particular case isn&#8217;t that cut-and-dried. Schema.org&#8217;s only option in the beginning was to use Microdata, and since authors didn&#8217;t want to risk not showing up in the search engines, they used Microdata. This forced the market to go in one direction. </p>
<p>This discussion would be in a different place had Google kept the playing field level. That is not to say that Google didn&#8217;t have good reasons for making the decisions that they did at the time, but those reasons influenced the development of RDFa, and RDFa Lite 1.1 was the result. The differences between Microdata and RDFa have been removed and a new question is in front of us: given two almost identical technologies, should the W3C publish two specifications that do almost exactly the same thing in almost exactly the same way?</p>
<blockquote><p>&#8230; the [HTML] Working Group explicitly <a href="http://lists.w3.org/Archives/Public/public-html/2012Nov/0186.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">decided not to pick a winner</a> between HTML Microdata and HTML+RDFa</p></blockquote>
<p>The question before the HTML WG at the time was whether or not to split Microdata out of the HTML5 specification. The HTML Working Group did not discuss whether the publishing track for the Microdata document should be the W3C Note track or the W3C Recommendation track. At the time the decision was made, RDFa Lite 1.1 did not exist, RDFa Lite 1.1 was not a W3C Recommendation, nor did the RDFa and Microdata functionality so greatly overlap as they do now. Additionally, the HTML WG decision at that time states the following under the &#8220;Revisiting the issue&#8221; section:</p>
<p>&#8220;If Microdata and RDFa converge in syntax&#8230;&#8221;</p>
<p>Microdata and RDFa have effectively converged in syntax. Since Microdata can be interpreted as RDFa based on a simple search-and-replace of attributes that the languages have effectively converged on syntax except for the attribute names. The proposal is not to have work on Microdata stopped. Let work on Microdata proceed in this group, but let it proceed on the W3C Note publication track.</p>
<h2>Closing Statements</h2>
<p>I felt uneasy raising this issue because it&#8217;s a touchy and painful subject for everyone involved. Even if the discussion is painful, it is a healthy one for a standardization body to have from time to time. What I wanted was for the HTML Working Group to have this discussion. If the upcoming poll finds that the consensus of the HTML Working Group is to continue with the Microdata specification along the Recommendation track, I will not pursue a W3C Formal Objection. I will respect whatever decision the HTML Working Group makes as I trust the Chairs of that group, the process that they&#8217;ve put in place, and the aggregate opinion of the members in that group. After all, that is how the standardization process is supposed to work and I&#8217;m thankful to be a part of it.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7724 post type-post status-publish format-standard hentry category-json-ld category-rdfa category-semantic-web category-standards" id="post-7724">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/nuclear-rdf/" rel="bookmark" title="Permanent Link to The Problem with RDF and Nuclear Power"> The Problem with RDF and Nuclear Power</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>September 29, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/nuclear-rdf/#comments" title="Comment on The Problem with RDF and Nuclear Power">5 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to The Problem with RDF and Nuclear Power" /><a title="Permanent Link to The Problem with RDF and Nuclear Power" href="http://manu.sporny.org/2012/nuclear-rdf/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I am the chair of the RDFa Working Group, the JSON-LD Community Group, a member of the RDF Working Group, as well as other Semantic Web initiatives. I believe in this stuff, but am critical about the path we&#8217;ve been taking for a while now.</em></p>
<p>The <a href="http://en.wikipedia.org/wiki/Resource_Description_Framework" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Resource Description Framework</a> (a model for publishing data on the Web) has this horrible public perception akin to how many people in the USA view nuclear power. The coal industry campaigned quite aggressively to implant the notion that nuclear power was not as safe as coal. Couple this public misinformation campaign with a few nuclear-power-related catastrophes and it is no surprise that the current public perception toward nuclear power can be summarized as: &#8220;Not in my back yard&#8221;. Nevermind that, per tera-watt, nuclear power generation has <a href="http://nextbigfuture.com/2011/03/deaths-per-twh-by-energy-source.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','nextbigfuture.com']);">killed far fewer people since its inception than coal</a>. Nevermind that it is one of the more viable power sources if we gaze hundreds of years into Earth&#8217;s future, especially with the recent renewed interest in <a href="http://www.youtube.com/watch?v=P9M__yYbsZ4" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">Liquid Flouride Thorium Reactors</a>. When we look toward the future, the path is clear, but public perception is preventing us from proceeding down that path at the rate that we need to in order to prevent more damage to the Earth.</p>
<p>RDF shares a number of these similarities with nuclear power. RDF is one of the best data modeling mechanisms that humanity has created. Looking into the future, there is no equally-powerful, viable alternative. So, why has progress been slow on this very exciting technology? There was no public mis-information campaign, so where did this negative view of RDF come from?</p>
<p>In short, RDF/XML was the Semantic Web&#8217;s <a href="http://en.wikipedia.org/wiki/Three_Mile_Island_accident" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">3 Mile Island incident</a>. When it was released, developers confused RDF/XML (bad) with the RDF data model (good). There weren&#8217;t enough people and time to counter-act the negative press that RDF was receiving as a result of RDF/XML and thus, we are where we are today because of this negative perception of RDF. Even Wikipedia&#8217;s page on the matter seems to imply that RDF/XML <em>is</em> RDF. Some purveyors of RDF think that the public perception problem isn&#8217;t that bad. I think that when developers hear RDF, they think: &#8220;Not in my back yard&#8221;.</p>
<p>The solution to this predicament: <strong>Stop mentioning RDF and the Semantic Web. Focus on tools for developers. Do more <a href="http://en.wikipedia.org/wiki/Dogfooding" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">dogfooding</a>.</strong></p>
<p>To explain why we should adopt this strategy, we can look to Tesla for inspiration. Elon Musk, founder of PayPal and now the CEO of Tesla Motors, recently announced the <a href="http://www.youtube.com/watch?v=wgk5-eB9oTY" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.youtube.com']);">Tesla Supercharger</a> project. At a high-level, the project accomplishes the following jaw-dropping things:</p>
<ol>
<li>It creates a network of charging stations for electric cars that are capable of charging a Tesla in less than 30 minutes.</li>
<li>The charging stations are solar powered and generate more electricity than the cars use, feeding the excess power into the local power grid.</li>
<li>The charging stations are free to use for any person that owns a Tesla vehicle.</li>
<li>The charging stations are operational and available <em>today</em>.</li>
</ol>
<p>This means that, in 4-5 years, <strong>any owner of a Tesla vehicle be able to drive anywhere in the USA, for free, powered by the sun</strong>. No person in their right mind (with the money) would pass up that offer. No fossil fuel-based company will ever be able to provide &#8220;free&#8221;, clean energy. This is the sort of proposition we, the RDF/Linked Data/Semantic Web community, need to make; I think we can re-position ourselves to do just that.</p>
<p>Here is what the RDF and Linked Data community can learn from Tesla:</p>
<ol>
<li>The message shouldn&#8217;t be about the technology. It should be about the problems we have today and a concrete solution on how to address those problems.</li>
<li>Demonstrate real value. Stop talking about the beauty of RDF, theoretical value, or design. Deliver production-ready, open-source software tools.</li>
<li>Build a network of believers by spending more of your time working with Web developers and open-source projects to convince them to publish Linked Data. Dogfood our work.</li>
</ol>
<p>Here is how we&#8217;ve applied these lessons to the JSON-LD work:</p>
<ol>
<li>We don&#8217;t mention RDF in the specification, unless absolutely necessary, and in many cases it isn&#8217;t necessary. RDF is plumbing, it&#8217;s in the background, and developers don&#8217;t need to know about it to use JSON-LD.</li>
<li>We purposefully built production-ready tools for JSON-LD from day one; a <a href="http://json-ld.org/playground/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">playground</a>, <a href="http://json-ld.org/#impl" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">multiple production-ready implementations</a>, and a <a href="https://github.com/digitalbazaar/jsonld.js" onclick="javascript:_gaq.push(['_trackEvent','download','github.com/digitalbazaar/jsonld.js']);">JavaScript implementation of the browser-based API</a>.</li>
<li>We are working with Wikidata, Wikimedia, Drupal, the Web Payments and Read Write Web groups at W3C, and a number of other private clients to ensure that we&#8217;re providing real value <em>and</em> dogfooding our work.</li>
</ol>
<p>Ultimately, RDF and the Semantic Web are of no interest to Web developers. They also have a really negative public perception problem. We should stop talking about them. Let&#8217;s shift the focus to be on Linked Data, explaining the problems that Web developers face today, and concrete, demonstrable solutions to those problems.</p>
<p><em>Note: This post isn&#8217;t meant as a slight against any one person or group. I was just working on the JSON-LD spec, aggressively removing prose discussing RDF, and the analogy popped into my head. This blog post was an exercise in organizing my thoughts on the matter.</em></p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7710 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-7710">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/html5-and-rdfa/" rel="bookmark" title="Permanent Link to HTML5 and RDFa 1.1"> HTML5 and RDFa 1.1</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>September 11, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/html5-and-rdfa/#comments" title="Comment on HTML5 and RDFa 1.1">1 Comment</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to HTML5 and RDFa 1.1" /><a title="Permanent Link to HTML5 and RDFa 1.1" href="http://manu.sporny.org/2012/html5-and-rdfa/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I&#8217;m the chair of the newly re-chartered RDFa Working Group at the W3C as well as a member of the HTML WG.</em></p>
<p>The newly re-chartered <a href="http://www.w3.org/2010/02/rdfa/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa Working Group</a> at the W3C published a <em>First Public Working Draft</em> of <a href="http://www.w3.org/TR/2012/WD-rdfa-in-html-20120911/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">HTML5+RDFa 1.1</a> today. This might be confusing to those of you that have been following the RDFa specifications. Keep in mind that HTML5+RDFa 1.1 is different from XHTML+RDFa 1.1, RDFa Core 1.1, and RDFa Lite 1.1 (which are official specs at this point). This is specifically about HTML5 and RDFa 1.1. The HTML5+RDFa 1.1 spec reached <em>Last Call</em> (aka: almost done) status at W3C via the HTML Working Group last year. So, why are we doing this now and what does it mean for the future of RDFa in HTML5? </p>
<p>Here&#8217;s the issue: the document was being unnecessarily held up by the HTML5 specification. In the most favorable scenario, HTML5 is expected to become an official standard in 2014. RDFa Core 1.1 became an official standard in June 2012. Per the W3C process, HTML5+RDFa 1.1 would have had to wait until 2014 to become an official W3C specification, even though it would be ready to go in a few months from now. W3C policy states that all specs that your spec depends on must reach the official spec status before your spec becomes official. Since HTML5+RDFa 1.1 is a language profile for RDFa 1.1 that is layered on top of HTML5, it had no choice but to wait for HTML5 to become official. <em>Boo.</em></p>
<p>Thankfully the chairs of the HTML WG, RDFa WG, and W3C staff found an alternate path forward for HTML5+RDFa 1.1. Since the specification doesn&#8217;t depend on any &#8220;at risk&#8221; features in HTML5, and since all of the features that RDFa 1.1 uses in HTML5 have been implemented in all of the Web browsers, there is very little chance that those features will be removed in the future. This means that HTML5+RDFa 1.1 could become an official W3C specification before HTML5 reaches that status. So, that&#8217;s what we&#8217;re going to try to do. Here&#8217;s the plan:</p>
<ol>
<li>Get approval from W3C member companies to re-charter the RDFa WG to take over publishing responsibility of HTML5+RDFa 1.1. <strong>[Done]</strong></li>
<li>Publish the HTML5+RDFa 1.1 specification under the newly re-chartered RDFa WG. <strong>[Done]</strong></li>
<li>Start the clock on a new patent exclusion period and resolve issues. Wait a minimum of 6 months to go to W3C Candidate Recommendation (feature freeze) status, due to patent policy requirements.</li>
<li>Fast-track to an official W3C specification (test suite is already done, inter-operable implementations are already done).</li>
</ol>
<p>There are a <a href="http://www.w3.org/2010/02/rdfa/track/issues/open" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">few minor issues</a> that still need to be ironed out, but the RDFa WG is on the job and those issues will get resolved in the next month or two. If everything goes according to plan, we should be able to publish HTML5+RDFa 1.1 as an official W3C standard in 7-9 months. That&#8217;s good for RDFa, good for Web Developers, and good for the Web.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-7477 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-7477">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/mythical-differences/" rel="bookmark" title="Permanent Link to Mythical Differences: RDFa Lite vs. Microdata"> Mythical Differences: RDFa Lite vs. Microdata</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>July 3, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/mythical-differences/#comments" title="Comment on Mythical Differences: RDFa Lite vs. Microdata">41 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Mythical Differences: RDFa Lite vs. Microdata" /><a title="Permanent Link to Mythical Differences: RDFa Lite vs. Microdata" href="http://manu.sporny.org/2012/mythical-differences/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I&#8217;m the current chair of the standards group at the World Wide Web Consortium that created the newest version of RDFa.</em></p>
<p><img style="float: left;" src="/wp-content/uploads/2012/07/dragon1.png" /></p>
<p>RDFa 1.1 became an official Web specification <a href="http://www.w3.org/QA/2012/06/the_long_journey_to_rdfa_11.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">last month</a>. Google started supporting RDFa in Google Rich Snippets some time ago and has <a href="http://blog.schema.org/2012/06/semtech-rdfa-microdata-and-more.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">recently announced</a> that they will support RDFa Lite for schema.org as well. These announcements have led to a weekly increase in the number of times the following question is asked by Web developers on Twitter and Google+:</p>
<p><em>&#8220;What should I implement on my website? Microdata or RDFa?&#8221;</em></p>
<p>This blog post attempts to answer the question once and for all. It dispels some of the myths around the Microdata vs. RDFa debate and outlines how the two languages evolved to solve the same problem in almost exactly the same way.</p>
<p>&nbsp;</p>
<p>Here&#8217;s the short answer for those of you that don&#8217;t have the time to read this entire blog post: <strong>Use RDFa Lite &#8211; it does everything important that Microdata does, it&#8217;s an official standard, and has the strongest deployment of the two.</strong></p>
<h2>Functionally Equivalent</h2>
<p>Microdata was initially designed as a simple subset of RDFa and Microformats, primarily focusing on the core features of RDFa. Unfortunately, when this was done, the choice was made to break compatibility with RDFa and effectively fork the specification. Conversely, RDFa Lite highlights the subset of RDFa that Microdata did, but does it in a way that does not break backwards compatibility with RDFa. This was done on purpose, so that Web developers wouldn&#8217;t have a hard decision in front of them. </p>
<p>RDFa Lite contains all of the simplicity of Microdata coupled with the extensibility of and compatibility with RDFa. This is an important point that is often lost in the debate &#8211; <em>there is no solid technical reason for choosing Microdata over RDFa Lite anymore</em>. There may have been a year ago, but RDFa Lite made a few tweaks in such a way as to achieve feature-parity with Microdata today while being able to do much more than Microdata if you ever need the flexibility. If you don&#8217;t want to code yourself into a corner &#8211; use RDFa Lite.</p>
<p>To examine why RDFa Lite is a better choice, let&#8217;s take a look at the markup attributes for Microdata and the functionally equivalent ones provided by RDFa Lite:</p>
<table style="text-align: left;">
<thead>
<tr>
<th style="white-space: nowrap;">Microdata 1.0</th>
<th style="white-space: nowrap;">RDFa Lite 1.1</th>
<th style="white-space: nowrap;">Purpose</th>
</tr>
</thead>
<tbody>
<tr>
<td>itemid</td>
<td>resource</td>
<td style="text-align: left;">Used to identify the exact thing that is being described using a URL, such as a specific person, event, or place.</td>
</tr>
<tr>
<td>itemprop</td>
<td>property</td>
<td style="text-align: left;">Used to identify a property of the thing being described, such as a name, date, or location.</td>
</tr>
<tr>
<td>itemscope</td>
<td>not needed</td>
<td style="text-align: left;">Used to signal that a new thing is being described.</td>
</tr>
<tr>
<td>itemtype</td>
<td>typeof</td>
<td style="text-align: left;">Used to identify the type of thing being described, such as a person, event, or place.</td>
</tr>
<tr>
<td>itemref</td>
<td>not needed</td>
<td style="text-align: left;">Used to copy-paste a piece of data and associate it with multiple things.</td>
</tr>
<tr>
<td>not supported</td>
<td>vocab</td>
<td style="text-align: left;">Used to specify a default vocabulary that contains terms that are used by markup.</td>
</tr>
<tr>
<td>not supported</td>
<td>prefix</td>
<td style="text-align: left;">Used to mix different vocabularies in the same document, like ones provided by Facebook, Google, and open source projects.</td>
</tr>
</tbody>
</table>
<p><img style="float:right;" src="/wp-content/uploads/2012/07/lizard.png" /></p>
<p>As you can see above, both languages have exactly the same number of attributes. There are nuanced differences on what each attribute allows one to do, but Web developers only need to remember one thing from this blog post: Over 99% of all Microdata markup in the wild can be expressed in RDFa Lite just as easily. This is a provable fact &#8211; replace all Microdata attributes with the equivalent RDFa Lite attributes, add <code>vocab="http://schema.org/"</code> to the markup block, and you&#8217;re done.</p>
<p>At this point, you may be asking yourself why the two languages are so similar. There is almost 8 years of history here, but to summarize: RDFa was created around the 2004 time frame, Microdata came much later and used RDFa as a design template. Microdata chose a subset of the original RDFa design to support, but did so in an incompatible way. RDFa Lite then highlighted the subset of the functionality that Microdata did, but in a way that is backwards compatible with RDFa. RDFa Lite did this while keeping the flexibility of the original RDFa intact. </p>
<p>That leaves us where we are today &#8211; with two languages, Microdata and RDFa Lite, that accomplish the same things using the same markup patterns. The reason both exist is a very long story involving politics, egos, and a fair amount of disfunctionality between various standards groups &#8211; all of which doesn&#8217;t have any impact on the actual functionality of either language. The bottom line is that we now have two languages that do almost exactly the same thing. One of them, RDFa Lite 1.1, is currently an official standard. The other one, Microdata, probably won&#8217;t become a standard until 2014.</p>
<h2>Markup Similarity</h2>
<p>The biggest deployment of Microdata on the Web is for implementing the schema.org vocabulary by Google. Recently, with the release of RDFa Lite 1.1, Google has <a href="http://blog.schema.org/2012/06/semtech-rdfa-microdata-and-more.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">announced their intent to &#8220;officially&#8221; support RDFa</a> as well. To see what this means for Web developers, let&#8217;s take a look at some markup. Here is a side-by-side comparison of two markup examples &#8211; one in Microdata and another in RDFa Lite 1.1:</p>
<table>
<thead>
<tr>
<th>Microdata 1.0</th>
<th>RDFa Lite 1.1</th>
</tr>
</thead>
<tbody>
<tr>
<td>
<pre style="text-align:left";>
&lt;div itemscope itemtype="http://schema.org/Product">
  &lt;img itemprop="image" src="dell-30in-lcd.jpg" />
  &lt;span itemprop="name">Dell UltraSharp 30" LCD Monitor&lt;/span>
&lt;/div>
</pre>
</td>
<td>
<pre style="text-align:left";>
&lt;div vocab="http://schema.org/" typeof="Product">
  &lt;img property="image" src="dell-30in-lcd.jpg" />
  &lt;span property="name">Dell UltraSharp 30" LCD Monitor&lt;/span>
&lt;/div>
</pre>
</td>
</tr>
</tbody>
</table>
<p>If the markup above looks similar to you, that was no accident. RDFa Lite 1.1 is designed to function as a drop-in replacement for Microdata.</p>
<h2>The Bits that Don&#8217;t Matter</h2>
<p>Only two features of Microdata aren&#8217;t supported by RDFa Lite; <code>itemref</code> and <code>itemscope</code>. Regarding <code>itemref</code>, the RDFa Working Group discussed the addition of that property and, upon reviewing Microdata markup in the wild, saw almost no use of <code>itemref</code> in production code. The schema.org examples steer clear of using <code>itemref</code> as well, so it was fairly clear that <code>itemref</code> is, and will continue to be, an unused feature of Microdata. The <code>itemscope</code> property is redundant in RDFa Lite and is thus unnecessary.</p>
<h2>5 Reasons</h2>
<p>For those of you that still are not convinced, here are the top five reasons that you should pick RDFa Lite 1.1 over Microdata:</p>
<p><img style="float:right;" src="/wp-content/uploads/2012/07/dragon-celtic.png" /></p>
<ol>
<li>RDFa is <a href="http://blog.schema.org/2012/06/semtech-rdfa-microdata-and-more.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">supported by all of the major search crawlers</a>, including Google (and schema.org), Microsoft, Yahoo!, Yandex, and Facebook. Microdata is not supported by Facebook.</li>
<li>RDFa Lite 1.1 is <a href="">feature-equivalent to Microdata</a>. Over 99% of Microdata markup can be expressed easily in RDFa Lite 1.1. Converting from Microdata to RDFa Lite is as simple as a search and replace of the Microdata attributes with RDFa Lite attributes. Conversely, Microdata does not support a number of the more advanced RDFa features, like being able to tell the difference between feet and meters.</li>
<li>You can <a href="http://www.w3.org/TR/rdfa-primer/#using-multiple-vocabularies" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">mix vocabularies</a> with RDFa Lite 1.1, supporting both schema.org and Facebook&#8217;s Open Graph Protocol (OGP) using a single markup language. You don&#8217;t have to learn Microdata for schema.org and RDFa for Facebook &#8211; just use RDFa for both.</li>
<li>RDFa Lite 1.1 is <a href="http://www.w3.org/TR/rdfa-lite/#the-attributes" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">fully upward-compatible</a> with RDFa 1.1, allowing you to seamlessly migrate to a more feature-rich language as your Linked Data needs grow. Microdata does not support any of the more advanced features provided by RDFa 1.1.</li>
<li>RDFa <a href="http://events.linkeddata.org/ldow2012/papers/ldow2012-inv-paper-1.pdf" onclick="javascript:_gaq.push(['_trackEvent','download','events.linkeddata.org/ldow2012/papers/ldow2012-inv-paper-1.pdf']);">deployment is greater</a> than Microdata. RDFa deployment continues to grow at a rapid pace.</li>
</ol>
<p>Hopefully the reasons above are enough to convince most Web developers that RDFa Lite is the best bet for expressing Linked Data in web pages, boosting your Search Engine Page rank, and ensuring that you&#8217;re future-proofing your website as your data markup needs grow over the next several years. If it&#8217;s not, please leave a comment below explaining why you&#8217;re still not convinced. </p>
<p>If you&#8217;d like to learn more about RDFa, try the <a href="http://rdfa.info/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','rdfa.info']);">rdfa.info</a> website. If you&#8217;d like to see more RDFa Lite examples and play around with the live RDFa editor, check out <a href="http://rdfa.info/play/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','rdfa.info']);">RDFa Play</a>.</p>
<p><span style="font-size: 0.5em;">Thanks to <a href="http://tattootabatha.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tattootabatha.com']);">Tattoo Tabatha</a> for the artwork in this blog piece.</span></p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-6693 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-6693">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/librdfa-1-1-released/" rel="bookmark" title="Permanent Link to Blindingly Fast RDFa 1.1 Processing"> Blindingly Fast RDFa 1.1 Processing</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>May 7, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/librdfa-1-1-released/#respond" title="Comment on Blindingly Fast RDFa 1.1 Processing">No Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Blindingly Fast RDFa 1.1 Processing" /><a title="Permanent Link to Blindingly Fast RDFa 1.1 Processing" href="http://manu.sporny.org/2012/librdfa-1-1-released/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>The fastest RDFa processor in the world just got a big update &#8211; librdfa 1.1 has just been released! <a href="https://github.com/rdfa/librdfa" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">librdfa</a> is a SAX-based RDFa processor, written in pure C &#8211; which makes it very portable to a variety of different software and hardware architectures. It&#8217;s also tiny and fast &#8211; the binary is smaller than this web page (around 47KB), and it&#8217;s capable of extracting roughly 5,000 triples per second per CPU core from an HTML or XML document. If you use Raptor or the Redland libraries, you use librdfa.</p>
<p>The timing for this release coincides with the push for a full standard at W3C for RDFa 1.1. The <a href="http://www.w3.org/TR/2012/CR-rdfa-core-20120313/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa 1.1 specification</a> has been in feature-freeze for over a month and is proceeding to W3C vote to finalize it as an officially recognized standard. There are now 5 fully conforming implementations for RDFa in a variety of languages &#8211; librdfa in C, PyRDFa in Python, RDF::RDFa in Ruby, Green Turtle in JavaScript, and clj-rdfa in Clojure.</p>
<p>It took about a month of spare-time hacking on librdfa to update it to support RDFa 1.1. It has also been given a new back-end document processor. A migration from libexpat to libxml2 was performed in order to better support processing of badly authored HTML documents as well as well formed XML documents. Support for all of the new features in RDFa 1.1 have been added, including the @vocab attribute, @prefix, and @inlist. Full support for <a href="http://www.w3.org/TR/2012/CR-rdfa-lite-20120313/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa Lite 1.1</a> has also been included. A great deal of time was also put into making sure that there were absolutely no memory leaks or pointer issues across all 700+ tests in the <a href="http://rdfa.info/test-suite/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','rdfa.info']);">RDFa 1.1 Test Suite</a>. There is still some work that needs to be done to add HTML5 @datetime attribute support and fix xml:base processing in SVG files, but that&#8217;s fairly small stuff that will be implemented over the next month or two.</p>
<p>Many thanks to Daniel Richard G., who updated the build system to be more cross-platform and pure C compliant on a variety of different architectures. Also thanks to Dave Longley who fixed the very last memory leak, which turned out to be a massive pain to find and resolve. This version of librdfa is ready for production use for processing all XML+RDFa and XHTML+RDFa documents. This version also supports both RDFa 1.0 and RDFa 1.1, as well as RDFa Lite 1.1. While support for HTML5+RDFa is 95% of the way there, I expect that it will be 100% in the next month or two.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-6368 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-6368">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/google-indexing-schema-rdfa/" rel="bookmark" title="Permanent Link to Google Indexing RDFa 1.0 + schema.org Markup"> Google Indexing RDFa 1.0 + schema.org Markup</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>February 14, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/google-indexing-schema-rdfa/#comments" title="Comment on Google Indexing RDFa 1.0 + schema.org Markup">10 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Google Indexing RDFa 1.0 + schema.org Markup" /><a title="Permanent Link to Google Indexing RDFa 1.0 + schema.org Markup" href="http://manu.sporny.org/2012/google-indexing-schema-rdfa/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I am the chair of the RDF Web Applications Working Group at the World Wide Web Consortium &#8211; RDFa is one of the technologies that we&#8217;re working on.</em></p>
<p>Google is <a href="http://mashable.com/2012/02/13/google-knowledge-graph-change-search/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','mashable.com']);">building a gigantic Knowledge Graph that will change search forever</a>. The purpose of the graph is to understand the conceptual &#8220;things&#8221; on a web page and produce better search results for the world. Clearly, the people and companies that end up in this Knowledge Graph first will have a huge competitive advantage over those that do not. So, what can you do today to increase your organization&#8217;s chances of ending up in this Knowledge Graph, and thus ending up higher in the Search Engine Result Pages (SERPs)?</p>
<p>One possible approach is to mark your pages up with RDFa and schema.org. &#8220;But wait&#8221;, you might ask, &#8220;schema.org doesn&#8217;t support RDFa, does it?&#8221;. While schema.org launched with only Microdata support, Google has said that <a href="http://blog.schema.org/2011/11/using-rdfa-11-lite-with-schemaorg.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">they will support RDFa 1.1 Lite</a>, which is <a href="http://lists.w3.org/Archives/Public/public-rdfa-wg/2012Jan/0003.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">slated to become an official specification</a> in the next couple of months.</p>
<p>However, that doesn&#8217;t mean that the Google engineers are sitting still while the RDFa 1.1 spec moves toward official standard status. RDFa 1.0 became an official specification in October 2008. Many people have been wondering if Google would start indexing RDFa 1.0 + schema.org markup while we wait for RDFa 1.1 to become official. <strong>We have just discovered that Google is not only indexing schema.org expressed as RDFa 1.0, but they&#8217;re enhancing search result listings based on data gleaned from schema.org markup expressed as RDFa 1.0!</strong> </p>
<p>Here&#8217;s what it looks like in the live Google search results:</p>
<p><img style="display: block; margin-left: auto; margin-right: auto; box-shadow: 5px 5px 5px #bbb; border: 2px solid #333;" src="/images/2012/rdfa-schema-1.png" alt="Enhanced Google search result showing event information" /><br />
<em>The image above shows a live, enhanced Google search result with event information extracted from the RDFa 1.0 + schema.org data, including date and location of the event.</em></p>
<p><img style="display: block; margin-left: auto; margin-right: auto; box-shadow: 5px 5px 5px #bbb; border: 2px solid #333;" src="/images/2012/rdfa-schema-2.png" alt="Enhanced Google search result showing recipe preparation time information" /><br />
<em style="display: block; margin-left: auto; margin-right: auto;">The image above shows a live, enhanced Google search result with recipe preparation time information, also extracted from the RDFa 1.0 + schema.org data that was on the page.</em></p>
<p><img style="display: block; margin-left: auto; margin-right: auto; box-shadow: 5px 5px 5px #bbb; border: 2px solid #333;" src="/images/2012/rdfa-schema-3.png" alt="Enhanced Google search result showing detailed event information with click-able links" /><br />
<em>The image above shows a live, enhanced Google search result with very detailed event information gleaned from the RDFa 1.0 + schema.org data, including date, location and links to the individual event pages.</em></p>
<p>Looking at the source code for the pages above, a few things become apparent:</p>
<ol>
<li>All of the pages contain a mixture of RDFa 1.0 + schema.org markup. There is no Microformats or Microdata markup used to express the data shown in the live search listings. The RDFa 1.0 + schema.org data is definitely being used in live search listing displays.</li>
<li>The <a href="http://drupal.org/project/schemaorg" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','drupal.org']);">Drupal schema.org module</a> seems to be used for all of the pages, so if you use Drupal, you will probably want to install that module if you want the benefit of enhanced Google search listings.</li>
<li>The search and social companies are serious about indexing RDFa content, which means that you may want to get serious about adding it into your pages before your competitors do.</li>
</ol>
<p>Google isn&#8217;t the only company that is building a giant global graph of knowledge. Last year, Facebook launched a similar initiative called the <a href="http://ogp.me/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','ogp.me']);">Open Graph</a>, which is also built on RDFa. The end-result of all of this work are better search listings, more relevant social interactions, and a more unified way of expressing &#8220;things&#8221; in Web pages using RDFa.</p>
<p>Does your website talk about any of the following things: Applications, Authors, Events, Movies, Music, People, Products, Recipes, Reviews, and/or TV Episodes? If so, you should probably be expressing that structured data as RDFa so that both Facebook and Google can give you better visibility over those that don&#8217;t in the coming years. You can get started by viewing the <a href="http://linter.structured-data.org/examples/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','linter.structured-data.org']);">RDFa schema.org examples</a> or reading more about Facebook&#8217;s <a href="http://ogp.me/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','ogp.me']);">Open Graph</a> markup. If you don&#8217;t know anything about RDFa, you may want to start with the <a href="http://www.w3.org/TR/rdfa-lite/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa Lite</a> document, or the <a href="http://www.w3.org/TR/rdfa-primer/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa Primer</a>.</p>
<p><em>Many thanks to <a href="https://twitter.com/#!/scorlosquet/status/169442446370025473" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">Stéphane Corlosquet</a> for spotting this and creating the <a href="http://drupal.org/project/schemaorg" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','drupal.org']);">Drupal 7 schema.org module</a>. Also thanks to <a href="https://twitter.com/#!/krisolafson/status/169236362371923968" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">Chris Olafson</a> for spotting that RDFa 1.0 + schema.org markup is now consistently being displayed in live Google search results.</em></p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-6344 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-6344">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/structured-data-searching/" rel="bookmark" title="Permanent Link to Searching for Microformats, RDFa, and Microdata Usage in the Wild"> Searching for Microformats, RDFa, and Microdata Usage in the Wild</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>February 4, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/structured-data-searching/#comments" title="Comment on Searching for Microformats, RDFa, and Microdata Usage in the Wild">1 Comment</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Searching for Microformats, RDFa, and Microdata Usage in the Wild" /><a title="Permanent Link to Searching for Microformats, RDFa, and Microdata Usage in the Wild" href="http://manu.sporny.org/2012/structured-data-searching/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>A few weeks ago, we announced the launch of the <a href="http://www.w3.org/community/data-driven-standards/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">Data Driven Standards Community Group</a> at the World Wide Web Consortium (W3C). The focus is on researching, analyzing and publicly documenting current usage patterns on the Internet. Inspired by the Microformats Process, the goal of this group is to enlighten standards development with real-world data. This group will collect and report data from large Web crawls, produce detailed reports on protocol usage across the Internet, document yearly changes in usage patterns and promote findings that demonstrate that the current direction of a particular specification should be changed based on publicly available data. All data, research, and analysis will be made publicly available to ensure the scientific rigor of the findings. The group will be a collection of search engine companies, academic researchers, hobbyists, protocol designers and specification editors in search of data that will guide the Internet toward a brighter future.</p>
<p>We had launched the group with the intent of regularly analyzing the <a href="http://www.commoncrawl.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.commoncrawl.org']);">Common Crawl</a> data set. The goal of Common Crawl is to build and maintain an open crawl of the web that can be used by researchers, educators and innovators. The crawl currently contains roughly 40TB of compressed data, around 5 billion web pages, and is hosted on Amazon&#8217;s <a href="http://aws.amazon.com/s3" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','aws.amazon.com']);">S3</a> service. To analyze the data, you have to write a small piece of analysis software that is then applied to all of the data using Amazon&#8217;s <a href="http://aws.amazon.com/elasticmapreduce/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','aws.amazon.com']);">Elastic Map Reduce</a> service.</p>
<p>I spent a few hours a couple of nights ago and wrote the analysis software, which is <a href="https://github.com/digitalbazaar/cc-structured-data" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">available as open source on github</a>. This blog post won&#8217;t go into how the software was written, but rather the methodology and data that resulted from the analysis. There were three goals that I had in mind when performing this trial run:</p>
<ul>
<li>Quickly hack something together to see if Microformats, RDFa and Microdata analysis was feasible.</li>
<li>Estimate the cost of performing a full analysis.</li>
<li>See if the data correlates with the <a href="http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tripletalk.wordpress.com']);">Yahoo! study</a> or the <a href="http://page.mi.fu-berlin.de/muehleis/ccrdf/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','page.mi.fu-berlin.de']);">Web Data Commons</a> project.</li>
</ul>
<h2>Methodology</h2>
<p>The analysis software was executed against a very small subset of the Common Crawl data set. The directory that was analyzed (<code>/commoncrawl-crawl-002/2010/01/07/18/</code>) contained 1,273 ARC files, each weighing in at 100MBs each for around 124GBs of data processed. It took 8 EC2 machines a total of 14 hours and 23 minutes to process the data, for a grand total of 120 CPU hours utilized.</p>
<p>The analysis software streams each file from disk, decompresses it and breaks each file into the data that was retrieved from a particular URL. The file is checked to ensure that it is an HTML or XHTML file, if it isn&#8217;t, it is skipped. If the file is an XHTML or HTML file, an HTML4 DOM is constructed from the file using a very forgiving tag soup parser. At that point, CSS selectors are executed on the resulting DOM to search for HTML elements that contain attributes for each language. For example, the CSS selector &#8220;<code>[property]</code>&#8221; is executed to retrieve a count of all RDFa <code>property</code> attributes on the page. The same was performed for Microdata and Microformats. You can see the exact CSS queries used in the <a href="https://github.com/digitalbazaar/cc-structured-data/blob/master/src/com/digitalbazaar/analyzer/FeatureCountMapper.java#L42" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','github.com']);">source file for the markup language detector</a>.</p>
<h2>Findings</h2>
<p>Here are the types of documents that we found in the sample set:</p>
<table style="margin-left: auto; margin-right: auto;">
<tr>
<th>Document Type</th>
<th>Count</th>
<th>Percentage</th>
</tr>
<tr>
<td>HTML or XHTML</td>
<td>10,598,873</td>
<td>100%</td>
</tr>
<tr>
<td>Microformats</td>
<td>14,881</td>
<td>0.14%</td>
</tr>
<tr>
<td>RDFa</td>
<td>4726</td>
<td>0.045%</td>
</tr>
<tr>
<td>Microdata*</td>
<td>0</td>
<td>0%</td>
</tr>
</table>
<div style="margin-left: auto; margin-right: auto; text-align: center;">
* <em><small>The sample size was clearly too small since there were reports of Microdata out in the wild before this point in time in 2010.</small></em>
</div>
<p>The numbers above clearly deviate from both the <a href="http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tripletalk.wordpress.com']);">Yahoo! study</a> and the <a href="http://page.mi.fu-berlin.de/muehleis/ccrdf/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','page.mi.fu-berlin.de']);">Web Data Commons project</a>. The problem with our data set was that it was probably too small to really tell us anything useful, so please don&#8217;t use the numbers in this blog post for anything of importance.</p>
<p>The analysis software also counted the RDFa 1.1 attributes:</p>
<table style="margin-left: auto; margin-right: auto;">
<tr>
<th>RDFa Attribute</th>
<th>Count</th>
</tr>
<tr>
<td>property</td>
<td>3746</td>
</tr>
<tr>
<td>about</td>
<td>3671</td>
</tr>
<tr>
<td>resource</td>
<td>833</td>
</tr>
<tr>
<td>typeof</td>
<td>302</td>
</tr>
<tr>
<td>datatype</td>
<td>44</td>
</tr>
<tr>
<td>prefix</td>
<td>31</td>
</tr>
<tr>
<td>vocab</td>
<td>1</td>
</tr>
</table>
<p>The <code>property</code>, <code>about</code>, <code>resource</code>, <code>typeof</code>, and <code>datatype</code> attributes have a usage pattern that is not very surprising. I didn&#8217;t check for combinations of attributes like <code>property</code> and <code>content</code> on the same element due to time constraints. I only had one night to figure out how to write the software, write it and run it. This sort of co-attribute detection should be included in future analysis of the data. What was surprising was that the <code>prefix</code> and <code>vocab</code> attributes were used somewhere out there before the features were introduced into RDFa 1.1, but not to the degree that it would be of concern to the people designing the RDFa 1.1 language.</p>
<h2>The Good and the Bad</h2>
<p>The good news is that it does not take a great deal of effort to write a data analysis tool and run it against the Common Crawl data set. I&#8217;ve published both our methodology and findings such that anybody could re-create them if they so desired. So, this is good for open Web Science initiatives everywhere.</p>
<p>However, there is bad news. It cost around $12.46 USD to run the test using Amazon&#8217;s Elastic Map Reduce system. The Common Crawl site states that they believe that it would cost roughly $150 to process the entire data set, but my calculations show a very different picture when you start doing non-trivial analysis. Keep in mind that 124GBs was processed of a total 40TB of data. That is, only about 0.31% of the data set was processed for $12.46. To process the entire Common Crawl corpus, it would cost around $4,020 USD. Clearly far more than what any individual would want to spend, but still very much within the reach of small companies and research groups.</p>
<p>Funding a full analysis of the entire Common Crawl dataset seemed within reach, but after discoverng what the price would be, I&#8217;m having second thoughts about performing the full analysis without a few other companies or individuals pitching in to cover the costs. </p>
<h2>Potential Ways Forward</h2>
<p>We may have run the analysis in a way that caused the price to far exceed what was predicted by the Common Crawl folks. I will be following up with them to see if there is a trick to reducing the cost of the EC2 instances. </p>
<p>One option would be to bid a very low price for Amazon EC2 Spot Instances. The down-side is that processing would happen only when nobody else was willing to bid the price we would and therefore, the processing job could take weeks. Another approach would have us use regular expressions to process the document instead of building an in-memory HTML DOM for the document. Regular expressions would be able to detect RDFa/Microdata and Microformats using far less CPU than the DOM-based approach. Yet another approach would have an individual or company with $4K to spend on this research project fund the analysis of the full data set.</p>
<p>Overall, I&#8217;m excited that doing this sort of analysis is becoming available to those of us without access to Google or Facebook-like resources. It is only a matter of time before we will be able to do a full analysis on the Common Crawl data set. If you are reading this and think you can help fund this work, please leave a comment on this blog, or e-mail me directly at: <a href="mailto:msporny@digitalbazaar.com">msporny@digitalbazaar.com</a>.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-6327 post type-post status-publish format-standard hentry category-rdfa category-semantic-web category-standards" id="post-6327">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2012/web-data-commons-launches/" rel="bookmark" title="Permanent Link to Web Data Commons Launches"> Web Data Commons Launches</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>January 20, 2012</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a>, <a href="http://manu.sporny.org/category/standards/" title="View all posts in Standards" rel="category tag">Standards</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2012/web-data-commons-launches/#comments" title="Comment on Web Data Commons Launches">2 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Web Data Commons Launches" /><a title="Permanent Link to Web Data Commons Launches" href="http://manu.sporny.org/2012/web-data-commons-launches/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>Some interesting numbers were just published regarding Microformats, RDFa and Microdata adoption as of October 2010 (fifteen months ago). The source of the data is the new CommonCrawl dataset, which is being analyzed by the <a href="http://page.mi.fu-berlin.de/muehleis/ccrdf/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','page.mi.fu-berlin.de']);">Web Data Commons project</a>. They sampled 1% of the 40 Terabyte data set (1.3 million pages) and came up with the following number of total statements (triples) made by pages in the sample set:</p>
<table style="margin-left: auto; margin-right: auto;">
<tr>
<th>Markup Format</th>
<th>Statements</th>
</tr>
<tr>
<td>Microformats</td>
<td>30,706,071</td>
</tr>
<tr>
<td>RDFa</td>
<td>1,047,250</td>
</tr>
<tr>
<td>Microdata</td>
<td>17,890</td>
</tr>
<tr>
<td><strong>Total</strong></td>
<td>31,771,211</td>
</tr>
</table>
<p>Based on this preliminary data, of the structured data on the Web: 96.6% of it was Microformats, 3.2% of it was RDFa, and 0.05% of it was Microdata. Microformats is the clear winner in October 2010, with the vast majority of the data consisting of markup of people (hCard) and their relationships with one another (xfn). I also did a quick calculation on percentage of the 1.3 million URLs that contain Microformats, RDFa and Microdata markup:</p>
<table style="margin-left: auto; margin-right: auto;">
<tr>
<th>Format</th>
<th>Percentage of Pages</th>
</tr>
<tr>
<td>Microformats</td>
<td>88.9%</td>
</tr>
<tr>
<td>RDFa</td>
<td>12.1%</td>
</tr>
<tr>
<td>Microdata</td>
<td>0.09%</td>
</tr>
</table>
<p>These findings <strong>deviate wildly</strong> from the <a href="http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tripletalk.wordpress.com']);">findings by Yahoo</a> around the same time. Additionally, the claim that 88.9% of all pages on the Web contain Microformats markup, even though I&#8217;d love to see that happen, is wishful thinking. </p>
<p>There are a few things that could have caused these numbers to be off. The first is that the Web Data Commons&#8217; parsers are generating false positives or negatives, resulting in bad statement counts. A quick check of the data, which they released in full, will reveal if this is true. The other cause could be that the Yahoo study was flawed in the same way, but we may never know if that is true because they will probably never release their data set or parsers for public viewing. By looking at the RDFa usage numbers (3.2% for the Yahoo study vs. 12.1% for Web Data Commons) and the Microformats usage numbers (roughly 5% for the Yahoo study vs. 88.9% for Web Data Commons), the Web Data Commons numbers seem far more suspect. Data publishing in HTML is taking off, but it&#8217;s not <em>that</em> popular yet.</p>
<p>I would be wary of doing anything with these preliminary findings until the Web Data Commons folks release something more final. Nevertheless, it is interesting as a data point and I&#8217;m looking forward toward the full analysis that these researchers do in the coming months.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-4989 post type-post status-publish format-standard hentry category-rdfa category-semantic-web" id="post-4989">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/rdfa-lite/" rel="bookmark" title="Permanent Link to RDFa 1.1 Lite"> RDFa 1.1 Lite</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>October 21, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/rdfa-lite/#comments" title="Comment on RDFa 1.1 Lite">7 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to RDFa 1.1 Lite" /><a title="Permanent Link to RDFa 1.1 Lite" href="http://manu.sporny.org/2011/rdfa-lite/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><strong>Summary: RDFa 1.1 Lite is a simple subset of RDFa consisting of the following attributes: vocab, typeof, property, rel, about and prefix.</strong></p>
<p>During the <a href="http://blog.schema.org/2011/09/schemaorg-workshop-wrap-up.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.schema.org']);">schema.org workshop</a>, a <a href="http://ben.adida.net/presentations/rdfa-2011-09-21/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','ben.adida.net']);">proposal</a> was put forth by RDFa&#8217;s resident hero, <a href="http://ben.adida.net/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','ben.adida.net']);">Ben Adida</a>, for a stripped down version of RDFa 1.1, called RDFa 1.1 Lite. The RDFa syntax is often criticized as having too much functionality, leaving first-time authors confused about the more advanced features. This lighter version of RDFa will help authors easily jump into the Linked Data world. The goal was to create a very minimal subset that will work for 80% of the folks out there doing simple markup for things like search engines.</p>
<h2>vocab, typeof and property</h2>
<p>RDFa, like Microformats and Microdata, allow us to talk about <em>things</em> on the Web. Typically when we talk about a thing, we use a particular <strong>vocabulary</strong> to talk about it. So, if you wanted to talk about People, the vocabulary that you would use would specify terms like <em>name</em> and <em>telephone number</em>. When we want to mark up things on the Web, we need to do something very similar, which is specify which Web Vocabulary that we are going to be using. Here is a simple example that specifies a vocabulary that we intend to use to markup things in the paragraph:</p>
<pre>
&lt;p <span style="color: #5b5; font-weight: bold;">vocab="http://schema.org/"</span>>
   My name is Manu Sporny and you can give me a ring via 1-800-555-0155.
&lt;/p>
</pre>
<p>As you will note above, we have specified that we&#8217;re going to be using the <strong>vocabulary</strong> that can be found at the <code>http://schema.org/</code> Web address. This is a vocabulary that has been released by Google, Microsoft and Yahoo! to talk about common things on the Web that Search Engines care about &#8211; things like People, Places, Reviews, Recipes, and Events. Once we have specified the vocabulary, we need to specify the <strong>type of</strong> the thing that we&#8217;re talking about. In this particular case, we&#8217;re talking about a Person.</p>
<pre>
&lt;p vocab="http://schema.org/" <span style="color: #5b5; font-weight: bold;">typeof="Person"</span>>
   My name is Manu Sporny and you can give me a ring via 1-800-555-0155.
&lt;/p>
</pre>
<p>Now all we need to do is specify which <strong>properties</strong> of that person we want to point out to the search engine. In the following example, we mark up the person&#8217;s name and phone number:</p>
<pre>
&lt;p vocab="http://schema.org/" typeof="Person">
   My name is 
   &lt;span <span style="color: #5b5; font-weight: bold;">property="name"</span>>Manu Sporny&lt;/span> 
   and you can give me a ring via
   &lt;span <span style="color: #5b5; font-weight: bold;">property="telephone"</span>>1-800-555-0155&lt;/span>.
&lt;/p>
</pre>
<p>Now, when somebody types in &#8220;phone number for Manu Sporny&#8221; into a search engine, the search engine can more reliably answer the question directly, or point the person searching to a more relevant Web page.</p>
<h2>rel</h2>
<p>At times, two things on the Web may be <strong>related</strong> to one another in a specific way. For example, the current page may describe a thing that has a picture of it somewhere else on the Web.</p>
<pre>
&lt;p vocab="http://schema.org/" typeof="Person">
   My name is 
   &lt;span property="name">Manu Sporny&lt;/span> 
   and you can give me a ring via
   &lt;span property="telephone">1-800-555-0155&lt;/span>.
   &lt;img <span style="color: #5b5; font-weight: bold;">rel="image"</span> src="http://manu.sporny.org/images/manu.png" />
&lt;/p>
</pre>
<p>The example above links the Person on the page to the image elsewhere on the Web using the &#8220;image&#8221; relationship. A search engine will now be able to divine that the Person on the page is depicted by the image that is linked to in the page.</p>
<h2>about</h2>
<p>If you want people to link to things on your page, you can identify the thing using a hash and a name. For example:</p>
<pre>
&lt;p vocab="http://schema.org/" <span style="color: #5b5; font-weight: bold;">about="#manu"</span> typeof="Person">
   My name is 
   &lt;span property="name">Manu Sporny&lt;/span> 
   and you can give me a ring via
   &lt;span property="telephone">1-800-555-0155&lt;/span>.
   &lt;img rel="image" src="http://manu.sporny.org/images/manu.png" />
&lt;/p>
</pre>
<p>So, if we assume that the markup above can be found at <code>http://example.org/people</code>, then the identifier for the thing is the address, plus the value in the <code>about</code> attribute. Therefore, the identifier for the thing on the page would be: <code>http://example.org/people#manu</code>. This feature is similar to, but not exactly like, the <em>id</em> attribute in HTML.</p>
<h2>prefix</h2>
<p>In some cases, a vocabulary may not have all of the terms an author needs when describing their <em>thing</em>. The last feature in RDFa 1.1 Lite that some authors might need is the ability to specify more than one vocabulary. For example, if we are describing a Person and we need to specify that they have a blog, we could do something like the following:</p>
<pre>
&lt;p vocab="http://schema.org/" <span style="color: #5b5; font-weight: bold;">prefix="foaf: http://xmlns.com/foaf/0.1/"</span> about="#manu" typeof="Person">
   My name is 
   &lt;span property="name">Manu Sporny&lt;/span> 
   and you can give me a ring via
   &lt;span property="telephone">1-800-555-0155&lt;/span>.
   &lt;img rel="image" src="http://manu.sporny.org/images/manu.png" />
   I have a &lt;a <span style="color: #5b5; font-weight: bold;">rel="foaf:weblog"</span> href="http://manu.sporny.org/">blog&lt;/a>.
&lt;/p>
</pre>
<p>The example assigns a short-hand prefix to the Friend-of-a-Friend vocabulary, <code>foaf</code>, and uses that prefix to specify the <code>weblog</code> vocabulary term. Since schema.org doesn&#8217;t have a clear way of expressing a person&#8217;s blog location, we can depend on FOAF to get the job done.</p>
<p>One of the other nice things about RDFa 1.1 (and RDFa 1.1 Lite) is that a number of <a href="http://www.w3.org/profile/rdfa-1.1" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">useful and popular prefixes</a> are pre-defined, so you can skip declaring them altogether and just use the prefixes.</p>
<h2>Simplicity</h2>
<p>That&#8217;s it &#8211; that is RDFa 1.1 Lite. It consists of six simple attributes; <strong>vocab</strong>, <strong>typeof</strong>, <strong>property</strong>, <strong>rel</strong>, <strong>about</strong>, and <strong>prefix</strong>. RDFa 1.1 Lite is completely upwards compatible with the full set of RDFa 1.1 attributes.</p>
<h2>The Others</h2>
<p>The RDFa 1.1 attributes that have been left out of RDFa 1.1 Lite are: <strong>content</strong>, <strong>datatype</strong>, <strong>resource</strong>, and <strong>rev</strong>. The great thing about RDFa 1.1 Lite and RDFa 1.1 is that you can always choose to use one or more of those advanced attributes and a conformant RDFa 1.1 processor will always pick up on the advanced attributes. That means that you don&#8217;t have to do anything to switch back and forth between RDFa 1.1 Lite and the full version of RDFa 1.1</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-4955 post type-post status-publish format-standard hentry category-payswarm category-rdfa category-semantic-web" id="post-4955">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/payment-links/" rel="bookmark" title="Permanent Link to Standardizing Payment Links"> Standardizing Payment Links</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>September 23, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/payswarm/" title="View all posts in PaySwarm" rel="category tag">PaySwarm</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/payment-links/#comments" title="Comment on Standardizing Payment Links">4 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Standardizing Payment Links" /><a title="Permanent Link to Standardizing Payment Links" href="http://manu.sporny.org/2011/payment-links/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Why online tipping has failed.</em></p>
<p><strong>TL;DR &#8211; Standardizing Payment Links for the Web is not enough &#8211; we must also focus on listing and transacting assets that provide value to people.</strong></p>
<p>Today was a busy day for PaySwarm/Bitcoin integration. We had a very productive <a href="http://payswarm.com/minutes/2011-09-23/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">discussion about the PaySwarm use cases</a>, which includes supporting Bitcoin as an alternative currency to government-backed currencies. I also had a very interesting discussion with <a href="http://en.wikipedia.org/wiki/Amir_Taaki" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">Amir Taaki</a>, who is one of the primary developers behind Bitcoin, about <a href="http://payswarm.com/minutes/2011-09-23-bitcoin/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">standardization of a Bitcoin IRI scheme for the Internet</a>. Between those two meetings, <a href="http://danbri.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','danbri.org']);">Dan Brickley</a> asked an interesting question:</p>
<blockquote><p><a href="https://twitter.com/#!/danbri" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">danbri</a> <a href="https://twitter.com/#!/danbri/status/117276176724140032" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">Sept 23rd 2011 12:36pm</a>: @manusporny any thoughts re bitcoin/foaf, vs general ways of describing online payability? @graingert @melvincarvalho</p></blockquote>
<p>This question comes up often during the PaySwarm work &#8211; we&#8217;ve been grappling with it for a number of years.</p>
<h2>Payment Links Solutions</h2>
<p>Payment links have quite a history on the Internet. People have been trying to address payment via the Web for <a href="http://www.w3.org/ECommerce/Micropayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">over a decade</a> now with many failures and lessons learned. The answer to the question really boils down to what you&#8217;re trying to do with the payment. I&#8217;ll first answer what I think Dan was asking: &#8220;Do you think we should add a bitcoin term to the Friend of a Friend Vocabulary? Should we think about generalizing this to all types of payment online?&#8221;</p>
<p>First, I think that adding a bitcoin term to the FOAF Vocabulary would be helpful for Bitcoin, but a bit short-sighted. This is typically what people wanting to be paid by Bitcoin addresses do today:</p>
<pre>
Support more articles like this by donating via Bitcoin: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa
</pre>
<p>If you wanted to donate, you would copy/paste the crazy gobbledey-gook text starting with 1A1z and dump that into your Bitcoin client. One could easily make something like this machine-readable via HTML+RDFa to say that they can be paid at a particular Bitcoin address. To make the HTML above machine-readable, one could do the following:</p>
<pre>
&lt;div about="#dan-brickley">
Support more articles like this by donating via Bitcoin: 
   &lt;span property="foaf:bitcoin">1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa&lt;/span>
&lt;div/>
</pre>
<p>However, that wouldn&#8217;t trigger a Bitcoin client to be launched when clicked. The browser would have to know to do something with that data and we&#8217;re many years away from that happening. So, using some sort of new Bitcoin IRI scheme that was discussed today might be a better short-term solution:</p>
<pre>
&lt;div about="#me">
Support more articles like this by 
   &lt;a rel="foaf:tipjar" href="bitcoin:1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa?amount=0.25">donating via Bitcoin&lt;/a>.
&lt;div/>
</pre>
<p>This is a pretty typical approach to an online donation system or tipjar. You see PayPal buttons like this on a number of websites today. There are a few problems with it:</p>
<ul>
<li>What happens when there are multiple Bitcoin addresses? How does a Web Browser automatically choose which one to use? It would be nice if we could integrate payment directly into the browser, but if we do that, we need more information associated with the Bitcoin address.</li>
<li>What if we want to use other payment systems? The second approach is better because it&#8217;s not specific to Bitcoin &#8211; it uses an IRI &#8211; but can we be more generalized than that? Requiring the creation of a new IRI scheme for every new payment protocol seems like overkill.</li>
<li>How should this be used to actually transact a digital good? Is it only good for tipjars? How does this work in a social setting &#8211; that is, do most people tip online?</li>
</ul>
<p>The answer to the first question can be straight forward. A browser can&#8217;t automatically choose which Bitcoin address to use unless there is more machine-readable information in the page about each Bitcoin address or unless you can <a href="http://www.w3.org/wiki/FollowYourNose" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">follow-your-nose</a> to the Bitcoin address. You can&#8217;t do the latter yet with Bitcoin, so the former is the only option. For example, if the reason for payment were outlined for each Bitcoin address in the page, an informative UI could be displayed for the person browsing the page. </p>
<p>Luckily, this is pretty easy to do with HTML+RDFa, but it does require slightly more markup to associate descriptions with Bitcoin addresses. However, what if we want to move beyond tips? Just describing a payment endpoint is often confusing to people that want to pay for some specific good. Browsers or Bitcoin software may need to know more about the transaction to produce a reasonable summary or receipt to the person browsing, and that can&#8217;t be done with the markup of a single link.</p>
<p>The second question is a bit more difficult to answer. It would be short-sighted to just have a vocabulary term for Bitcoin. What happens if Bitcoin fails for some reason in the future? Should FOAF also add a term for Ven payments? What about PaySwarm payments? The FOAF vocabulary already has a term for a tipjar, so why not just use that coupled with a special IRI for the payment method? What may be better is a new term for &#8220;preferred payment IRI&#8221; &#8211; maybe &#8220;foaf:financialAccount&#8221; could work? Or maybe we should add a new term to the <a href="http://purl.org/commerce#Account" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">Commerce Vocabulary</a>? </p>
<p>Depending on a payment protocol-specific IRI would require every payment method on the Web to register a new Internet protocol scheme. This makes the barrier to entry for new payment protocols pretty high. There is no reason why many of these payment mechanisms cannot be built on top of HTTP or other existing Internet standards, like SIP. However, If we have multiple payment protocols that run over HTTP, how can we differentiate one from another? Perhaps each payment mechanism needs it&#8217;s own vocabulary term, for example this for Bitcoin:</p>
<pre>
&lt;a rel="bitcoin:payment" href="bitcoin:1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa?amount=0.25">tip me&lt;/a>.
</pre>
<p>and this for Ven:</p>
<pre>
&lt;a rel="ven:payment" href="https://www.vencurrency.com/confirm/transfer/?request_key=8df6e4c0240365e425d6cf4839e5266e">tip me&lt;/a>.
</pre>
<p>and this for PaySwarm:</p>
<pre>
&lt;a rel="ps:payment" href="https://dev.payswarm.com/i/manu/accounts/tips">tip me&lt;/a>.
</pre>
<p>The key thing to remember with all of these payment protocols is that what you do with the given IRI is different in each case. That is, the payment protocol matters and thus we may not want to generalize using the first two, but we do want a generalized solution. PaySwarm is a little different, in that it is currency agnostic. The standard aims to enable payments in Bitcoin, Ven, Bernal Bucks, or any current or future currency. So, one could just specify a person to pay via PaySwarm, like so:</p>
<pre>
&lt;a rel="ps:payment" href="https://dev.payswarm.com/i/manu">tip me&lt;/a>.
</pre>
<p>The financial account could be selected automatically based on the type of payment currency. If the person is transmitting Bitcoins, a selection of target Bitcoin accounts could be automatically discovered by retrieving the contents of the URL above and extracting all accounts with a currency type of &#8220;Bitcoin&#8221;. So, that may be a good technical solution, but that doesn&#8217;t mean it is a good social solution. The hard problem remains &#8211; <strong>most people don&#8217;t tip online</strong>. </p>
<h2>Tipping is a Niche Solution</h2>
<p>Sure, there are solutions like <a href="http://flattr.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','flattr.com']);">Flattr</a> and PayPal donations. These solutions will always be niche transactions because they&#8217;re socially awkward financial transactions. People like paying for refined goods &#8211; they only give on very rare occasions, usually when the payment is for a specific good. Even tipping wait staff at a restaurant isn&#8217;t the same as a tip on a website. When you tip wait staff, you are reimbursing them for the time and courtesy that they provided you. You are paying them for something that is scarce, for something that has value to you.</p>
<p>Now, think of how often you tip online vs. how often do you actually buy things online? A good summary of why people rarely tip online can be found on Gregory Rader&#8217;s blog &#8211; first in why <a href="http://onthespiral.com/navigating-four-economies" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','onthespiral.com']);">people have a hard time paying for unrefined goods</a> and <a href="http://onthespiral.com/abundance-scarcity-four-quadrant-value-universe" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','onthespiral.com']);">why tips and donations rarely work for small websites</a>. The core of what I took away from Greg&#8217;s articles is that, generally speaking, asking for tips on a small website is easily dismiss-able if done correctly and incredibly awkward if done incorrectly. You&#8217;re not getting the same sort of individual attention from a website than you are when you tip at a restaurant. You are far less likely to tip online than you are during a face-to-face encounter at a restaurant. Anonymity protects you from feeling bad about not tipping online.</p>
<p>People have a much easier time making a payment for something of perceived value online, even if it is virtual. These goods include songs, shares in a for-profit project, a pre-release for a short film, an item in a game, or even remotely buying someone a coffee in exchange for a future article that one may write. In order to do this, however, we must be able to express the payment in a less abstract form than just a simple Payment Link. It helps to be able to describe an asset that is being transacted so that there is less confusion about why the transaction is happening. Describing a transaction in detail also helps make the browser UIs more compelling, which results in a greater degree of trust that you&#8217;re not being scammed when you decide to enter into a transaction with a website.</p>
<h2>Refined Payments</h2>
<p>So, if we have a solution for Payment Links on the Web, we need to make sure that they:</p>
<ol>
<li>Are capable of expressing that they are for something of refined value, even if virtual.</li>
<li>Are machine-readable and can be described in great detail.</li>
</ol>
<p>The Web has a fairly dismal track record of tipping for content &#8211; people expect most unrefined content to be free. So, applying plain old Payment Links to that problem will probably not have the effect that most people expect it will have. The problem isn&#8217;t with ease of payment &#8211; the problem is a deeper social issue of paying for unrefined content. The solution is to be able to describe what is being transacted in far more detail, marked up in a form that is machine-readable and currency agnostic. </p>
<p>Expressing a PaySwarm <a href="http://purl.org/payswarm#Asset" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">Asset</a> and <a href="http://purl.org/payswarm#Listing" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">Listing</a> in a page, with Bitcoin or Ven or US Dollars as the transaction currency is one such approach that meets this criteria. The major draw-back being that expressing this information on a page is far more complicated than just expressing a Payment Link. So, perhaps we need both PaySwarm and Payment Links, but we should know that the problem space for Payment Links are much more socially complex than they may seem at first.</p>
<p>To answer Dan Brickley&#8217;s question more directly: I don&#8217;t think FOAF should add a &#8220;bitcoin&#8221; vocabulary term. Perhaps it should add something like &#8220;financialAccount&#8221;. However, once that term has been added, exactly what problem do you hope to solve with that addition?</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-4793 post type-post status-publish format-standard hentry category-payswarm category-semantic-web" id="post-4793">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/better-world/" rel="bookmark" title="Permanent Link to Building a Better World with Web Payments"> Building a Better World with Web Payments</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>August 16, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/payswarm/" title="View all posts in PaySwarm" rel="category tag">PaySwarm</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/better-world/#respond" title="Comment on Building a Better World with Web Payments">No Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Building a Better World with Web Payments" /><a title="Permanent Link to Building a Better World with Web Payments" href="http://manu.sporny.org/2011/better-world/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>TL;DR</em> &#8211; <strong>Web Payments will enable a new era of people-powered finance on the Web.</strong></p>
<p>The World Wide Web Consortium (W3C) <a href="http://www.w3.org/2011/08/cg-pr.html.en" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">just announced</a> their Community Group standardization process, which is basically an incubator for technology projects that could eventually become world standards. One of those groups is called the <a href="http://www.w3.org/community/webpayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">Web Payments Community Group</a> and is something that I&#8217;m really excited to see <a href="http://www.w3.org/community/webpayments/2011/08/16/launch/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">moving forward</a> at W3C. This blog post outlines what we&#8217;re hoping to accomplish in that group and what it will mean for the world.</p>
<p>One of the first reactions that I usually get when I tell people about Web Payments and <a href="http://payswarm.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PaySwarm</a> is this sort of wide-eyed look that usually translates into one of two things: either they get the long-term implications of having a universal payment mechanism for the world, or they&#8217;re having a very hard time figuring out how PaySwarm is any different from credit cards, ACH, Google Checkout, Amazon Payments, Square, PayPal, Flattr and the myriad of other payment solutions on the Web.</p>
<p>We have a ton of ways to get money from point A to point B, but all of them fail at least one of these two principles:</p>
<ul>
<li><strong>Open</strong> &#8211; Is how the technology works publicly documented and available for implementation under patent and royalty-free terms?</li>
<li><strong>Decentralized</strong> &#8211; Does the technology work with the architecture of the Web &#8211; is it decentralized?</li>
</ul>
<p>If you go down the list of payment technologies above, you will find that all of them fail both tests &#8211; but who cares!? Why are those two principles above important?</p>
<h2>The Foundation of the Internet and the Web</h2>
<p>Centralized systems work quite well most of the time, but when things go wrong, they really go off of the rails. Having a single point of failure in any system that is meant to be the foundation on which humanity builds is a terrible idea. This concept of decentralization is at the core of how the Internet and the Web was developed. All systems that are meant to become a core part of the infrastructure for the Internet and the Web must meet the two requirements above. In fact, every major technology that is baked into your Web browser meets the two requirements above. TCP/IP, HTTP, HTML, CSS, JavaScript, XML, JSON &#8211; each of them &#8211; are decentralized in design and are open Web standards. That is how technology becomes ubiquitous. That is how technology gets into the browser.</p>
<p>It is the year 2011, and we still don&#8217;t have anything like that on the Web for transferring the fundamental unit of value exchange used by the human race &#8211; money. There are great inefficiencies that will be resolved if we can do that and more importantly, <strong>many lives will be made better with a solution to this problem</strong>.</p>
<h2>Exchanging Value</h2>
<p>Today&#8217;s systems are built on technology developed during the 1980s that was based on thinking from the 1940s that arose from the same antiquated monetary guidelines that banks have operated upon for hundreds of years. In the past 20 years, you could count the number of companies that have fundamentally changed the way that an individual distributes and collects capital online using one hand. People-powered finance has not been a priority for a variety of reasons. One could say that PayPal was really the first to break ground in this area and be successful &#8211; but it is still a closed, proprietary and centralized solution. PayPal, in its current form, will never be a part of the Web like HTTP, HTML and JavaScript are today. That&#8217;s not to say that PayPal is a bad thing &#8211; it just doesn&#8217;t address the issue that we&#8217;re interested in addressing.</p>
<p><strong>The world needs an open payment platform that they can innovate upon.</strong> We need the freedom to innovate upon a financial system that is open, transparent and built by people that truly understand how the Web works.</p>
<h2>What the Future Holds</h2>
<p>We are not attempting to create another PayPal, or Flattr, or Google Checkout. We are attempting to change the way we fundamentally collect and distribute capital online. There is already a <a href="http://payswarm.com/wiki/WordPress_Recipes_Demo" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">demo</a> of how this technology works, so I won&#8217;t go into that here. I am also not attempting to state that PayPal, Flattr or any of the other services are inherently bad. The currently popular payment services online are all very good at what they do &#8211; they work for their intended purpose. However, I&#8217;d like to focus on what is possible to do with a payment platform like the one being worked on at the World Wide Web Consortium.</p>
<p>Wouldn&#8217;t it be great if you could receive money from anyone or send money to anyone on the Web with just one click in a browser? Wouldn&#8217;t it be great if this mechanism was open and universal? That is, it worked in the same way across every single blog, Web App, news site, Web-based game, tablet, and mobile phone? What could you accomplish with such a universal payment system? Today, exchanging cash is really the only analogue. Not everybody takes credit cards, not everybody takes PayPal &#8211; but everyone does take a set of bills and coins &#8211; you can buy any product or service with those economic instruments. Wouldn&#8217;t it be great if you could do the same via the Web?</p>
<p>If there were a universal payment mechanism, most anyone that creates digital content could make a living on the Web. Creating an app and launching it through a website would be simple, as the payment solution would just be a part of the Web&#8217;s infrastructure just like delivering an HTML page from a server to a client is a part of the Web&#8217;s infrastructure. Hardly anyone has to think about how HTTP and the Internet gets a document from one side of the world to the other. It just works. <strong>Our goal is to make payments on the Web as ubiquitous as HTTP.</strong></p>
<h2>Automatic Micro-donations to Eradicate Malaria</h2>
<p>Let&#8217;s assume that you believe that the Bill and Melinda Gates foundation is changing the world for the better and that you would like to help out. The W3C Web Payments work would allow you to fund local or regional change by automatically transferring $0.25/month into a few initiatives that you believe in. You could set aside a budget for the year, say $25, and trickle your money toward the groups that you believe are making a difference. There is no long-term commitment like there is today. This would not only be a way of helping those non-profits achieve their goals, but it would also be a vote of confidence &#8211; &#8220;I still believe in what you are doing and the direction you&#8217;re taking.&#8221; If a better non-profit comes along, or you feel that they are no longer being effective with your money, you can always re-allocate the monthly donations somewhere else. <strong>With a universal payment infrastructure and micropayments, funding world-changing initiatives doesn&#8217;t have to be an involved process.</strong> Just allocate the payments at the beginning of the year and forget about it until you decide to change them at your leisure.</p>
<h2>People-powered Politics</h2>
<p>If you are politically inclined and participate in the election of your government, wouldn&#8217;t it be nice to be able to fund the candidates that best represent you on a monthly basis during the election cycle? What about live donations during a televised national debate over the Web? Many of the donations during the last presidential election were very small dollar amounts. How would allowing people to automatically donate $1 here and there change the way we elect officials? How would crowd-financing a lobbyist to work on your behalf for Net Neutrality or Technology Education change the way our nations operate? It is currently very difficult to give money through the Web &#8211; far more difficult than just sending somebody an e-mail. <strong>There must be a reduction in friction to remove the large separation that exists between the people and their representatives.</strong></p>
<h2>Micro-funding for Start-ups</h2>
<p>What about funding people, non-profits and start-ups? <a href="http://kickstarter.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','kickstarter.com']);">Kickstarter</a> is a fantastic service that supports an all-or-nothing funding model that has been very successful at funding artists, writers, directors and software developers. Innovators ask investors to cover their start-up costs and investors get something in return for supporting the innovator. <a href="http://www.kiva.org/about" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.kiva.org']);">Kiva</a> is another great example of people-powered finance &#8211; where hundreds of thousands of lenders around the world loan small amounts to people in developing countries that build or grow something and re-pay the loan after they sell their goods. Kiva has a loan re-payment rate of 98.83% &#8211; which is impressive. This model could be applied to a variety of areas that depend on more traditional funding these days; blockbuster films, farming, construction, small business loans, and open-source software development, to name a few. Having to create a new account and enter your credit card information across 10-20 sites is too much to ask of most people browsing the Web. Eventually, with the Web Payments work at W3C, a single click is all it will take to fund these types of endeavors.</p>
<h2>The Big Picture</h2>
<p>So, hopefully the long-term goal is more visible now. <strong>The Web Payments work at W3C is not just about making payments easier on the Web, it is about empowering people to affect positive change in the world.</strong></p>
<p>There are a number of ways that you can participate. The easiest is to follow this feed on <a href="http://twitter.com/manusporny" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">Twitter (@manusporny)</a> or on <a href="https://plus.google.com/102122664946994504971/about" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','plus.google.com']);">Google+</a>, I&#8217;ll be updating folks about this stuff over the next couple of years through the standardization process. If you want to keep tabs on the technical progress of the Web Payments standardization work &#8211; join the <a href="http://lists.w3.org/Archives/Public/public-webpayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">Web Payments mailing list</a>. If you would like to contribute to the technical work or make sure that your use case is supported, join the <a href="http://www.w3.org/community/webpayments/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">Web Payments Community Group</a>.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-4159 post type-post status-publish format-standard hentry category-rdfa category-semantic-web" id="post-4159">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/" rel="bookmark" title="Permanent Link to An Uber-comparison of RDFa, Microdata and Microformats"> An Uber-comparison of RDFa, Microdata and Microformats</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>June 25, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/#comments" title="Comment on An Uber-comparison of RDFa, Microdata and Microformats">59 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to An Uber-comparison of RDFa, Microdata and Microformats" /><a title="Permanent Link to An Uber-comparison of RDFa, Microdata and Microformats" href="http://manu.sporny.org/2011/uber-comparison-rdfa-md-uf/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <style type="text/css">
.positive { 
   background: #86C67C;
}
.warning { 
   background: #C6C67C;
}
.negative { 
   background: #C6867C;
}
</style>
<p><em>Full disclosure: I am the current Chair of the group at the World Wide Web Consortium that created RDFa. That said, all of this is my personal opinion. I am not speaking on behalf of the W3C or my company, Digital Bazaar. This is just my personal take on the recent events that are unfolding. If you would like to keep up with these events as they happen, you can <a href="http://twitter.com/manusporny" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">follow me</a> on Twitter.</em></p>
<p>There has been a <a href="http://www.w3.org/2001/tag/2011/06/16-minutes.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">recent discussion</a> at the World Wide Web Consortium (W3C) about the state of RDFa, Microdata and Microformats. The Technical Architecture Group (TAG) is <a href="http://lists.w3.org/Archives/Public/public-rdfa-wg/2011Jun/0058.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">concerned</a> about the W3C publishing two specifications that achieve effectively the same thing in incompatible ways. They are suggesting that both RDFa 1.1 and Microdata, in their current state, should not proceed as official specifications until they become more compatible with one another. The W3C intends to launch a quick examination of the situation to determine whether or not there is room for convergence of these technologies.</p>
<p>To those that are not following this stuff closely, it can be difficult to understand all of the technical reasons this issue has been raised. This post attempts to clarify those technical issues by providing an easy-to-read list of similarities and differences between RDFa, Microdata and Microformats. A simple table summarizing all features across each structured data syntax is listed below. Each feature is linked to a brief explanation of the feature toward the bottom of the page.</p>
<p><em>Thanks to Jeni Tennison for doing a separate technical analysis for the W3C TAG. This article builds upon her hard work, but has been heavily modified and thus should not be considered as her thoughts on the matter. Writing this article was a fairly large undertaking and there are bound to be issues with parts of the article. Please let me know if there are errors by commenting on the post and I will do my best to fix them and clarify when necessary.</em></p>
<h1>Structured Data in a Nutshell</h1>
<p><em>Note: This post frequently uses the term IRI. For those not familiar with the term <strong>IRI</strong>, it means &#8220;Internationalized Resource Identifier&#8221; which is basically a fancy way of saying &#8220;a URL that allows western language characters as well as characters from any language in the world, such as Arabic, Japanese Katakana, Chinese ideograms, etc&#8221;. The URL in the location bar in your browser is a valid IRI.</em></p>
<table>
<thead>
<tr>
<th>Feature</th>
<th>RDFa 1.1</th>
<th>Microdata 1.0</th>
<th>Microformats 1.0</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="#relative-complexity">Relative Complexity</a></td>
<td class="negative">High</td>
<td class="warning">Medium</td>
<td class="positive">Low</td>
</tr>
<tr>
<td><a href="#data-model">Data Model</a></td>
<td class="positive">Graph</td>
<td class="positive">Tree</td>
<td class="positive">Tree</td>
</tr>
<tr>
<td><a href="#iri-id">Item optionally identified by IRI</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#iri-type">Item type optionally specified by IRI</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#iri-property">Item properties specified by IRI</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#multiple-objects">Multiple objects per page</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
</tr>
<tr>
<td><a href="#overlapping-objects">Overlapping objects</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#plain-text-properties">Plain Text properties</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
</tr>
<tr>
<td><a href="#iri-properties">IRI properties</td>
<td class="positive">Yes</td>
<td class="positive">Yes*</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#typed-literal">Typed Literal properties</a></td>
<td class="positive">Yes</td>
<td class="negative">No</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#xml-literal">XML Literal properties</a></td>
<td class="positive">Yes</td>
<td class="negative">No</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#language-tagging">Language tagging</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="warning">Inconsistent</td>
</tr>
<tr>
<td><a href="#text-iri-override">Override text and IRI content</a></td>
<td class="positive">Yes</td>
<td class="negative">No</td>
<td class="warning">Text only</td>
</tr>
<tr>
<td><a href="#rdf-mapping">Clear mapping to RDF</a></td>
<td class="positive">Yes</td>
<td class="warning">Problematic</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#languages">Target Languages</a></td>
<td class="positive"><span>8</span>
<div>(XHTML1, HTML4, HTML5, XHTML5, XML, SVG, ePub, OpenDocument)</div>
</td>
<td class="negative"><span>2</span>
<div>(HTML5, XHTML5)</div>
</td>
<td class="warning"><span>4</span>
<div>(XHTML1, HTML4, HTML5, XHTML5)</div>
</td>
</tr>
<tr>
<td><a href="#new-attributes">New Attributes</a></td>
<td class="negative"><span>8</span>
<div>about, datatype, profile, prefix, property, resource, typeof, vocab</div>
</td>
<td class="warning"><span>5</span>
<div>itemid, itemprop, itemref, itemscope, itemtype</div>
</td>
<td class="positive"><span>0</span></td>
</tr>
<tr>
<td><a href="#reused-attributes">Re-used Attributes</a></td>
<td class="positive"><span>5</span>
<div>content, href, rel, rev, src</div>
</td>
<td class="positive"><span>5</span>
<div>content, src, href, data, datetime</div>
</td>
<td class="positive"><span>4</span>
<div>class, title, rel, href</div>
</td>
</tr>
<tr>
<td><a href="#multiple-types">Multiple IRI types per object</a></td>
<td class="positive">Yes</td>
<td class="warning">RDF only</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#multiple-statements">Multiple statements per element</a></td>
<td class="positive">Yes</td>
<td class="negative">No</td>
<td class="positive">Yes</td>
</tr>
<tr>
<td><a href="#locally-scoped">&#8220;Locally scoped&#8221; vocabulary terms</a></td>
<td class="positive">Yes, via vocab</td>
<td class="positive">Yes, via itemscope</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#chaining">Item Chaining</a></td>
<td class="positive">Yes</td>
<td class="warning">Basic</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#transclusion">Transclusion</a></td>
<td class="negative">No</td>
<td class="positive">Yes</td>
<td class="warning">Yes, via include pattern</td>
</tr>
<tr>
<td><a href="#curies">Compact IRIs</a></td>
<td class="positive">Yes</td>
<td class="negative">No</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#prefixes">Prefix rebinding</a></td>
<td class="warning">Yes</td>
<td class="warning">No</td>
<td class="warning">No</td>
</tr>
<tr>
<td><a href="#vocabulary-mashups">Vocabulary Mashups</a></td>
<td class="positive">Yes</td>
<td class="negative">No</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#time-support">HTML5 time element support</a></td>
<td class="warning">Not yet</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#context-based-attributes">Different attributes for different property types</a></td>
<td class="warning"><span>Yes</span>
<div>property for text, rel/rev for URLs, resource/content for overrides</div>
</td>
<td class="positive">No</td>
<td class="warning"><span>Yes</span>
<div>class for text and rel for URLs</div>
</td>
</tr>
<tr>
<td><a href="#json">Transform to JSON</a></td>
<td class="positive">Yes (RDFa API)</td>
<td class="positive">Yes (Parser and Microdata DOM API)</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#dom-api">DOM API</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
<tr>
<td><a href="#unified-parser">Unified Parser</a></td>
<td class="positive">Yes</td>
<td class="positive">Yes</td>
<td class="negative">No</td>
</tr>
</tbody>
</table>
<h2 id="relative-complexity">Relative Complexity</h2>
<p>Relative Complexity is a fuzzy measure of how difficult it is to achieve mastery of a particular structured data syntax. Microformats is by far the easiest to pick up and use. Microdata is a big step up and a bit more complex. RDFa is the most complex to master. There are design trade-offs, the simpler the syntax, the fewer structured data markup scenarios are supported. The more complex the syntax, the more structured data markup scenarios that are supported, but at the cost of making it more difficult for Web developers to master the syntax.</p>
<h2 id="data-model">Data Model</h2>
<p>The Web is a graph of information. There are nodes (web pages) and edges (links) that connect all of the information together. RDFa uses a graph to model the Web. Microdata and Microformats use a special subset of a graph called a rooted graph, or tree. There are benefits and drawbacks to each approach.</p>
<h2 id="iri-id">Item optionally identified by IRI</h2>
<p>Being able to identify an item on the Web is very useful. If we weren&#8217;t able to identify web pages in a universal way, the Web wouldn&#8217;t exist as it does today. That is, we couldn&#8217;t send someone a link, have them open it and find the same information that we found. The same concept applies to &#8220;things&#8221; described in Web pages. If we identify these things with IRIs, it becomes easier to be specific about the &#8220;thing&#8221; we&#8217;re talking about. </p>
<p>RDFa example:</p>
<pre>
&lt;div about="http://example.com/people#manu"&gt;...
</pre>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemtype="http://example.com/types/Person" itemid="http://example.com/people#manu"&gt;...
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="iri-type">Item type optionally specified by IRI</h2>
<p>The ability to identify the type of an item on the Web is useful. In Object Oriented Programming (OOP) parlance, this is the concept of a Class. Using an IRI to specify the type of an item lets us universally identify that type on the Web. Instead of a machine having to guess whether an item of type &#8220;Person&#8221; specified on a Web page is the same type that is familiar to it, we can instead give the item a type of <code>http://example.org/types/Person</code>. Giving the item an IRI type allows us to be sure that two machines are using the same type information.</p>
<p>RDFa example:</p>
<pre>
&lt;div typeof="http://example.com/types/Person"&gt;...
</pre>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemtype="http://example.com/types/Person"&gt;...
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="iri-property">Item properties specified by IRI</h2>
<p>The ability to identify a property, also known as a vocabulary term, associated with an item on the Web is useful. In Object Oriented Programming (OOP) parlance, this is the concept of a member variable. Using an IRI to specify the property of an item lets us universally identify that property on the Web. Instead of a machine having to guess whether a property of type &#8220;name&#8221; specified on a Web page is the same property that is familiar to it, we can instead refer to the property using an IRI, like <code>http://example.org/terms/name</code>. Giving the property an IRI allows us to be sure that two machines are using the same vocabulary term in a program.</p>
<p>RDFa example:</p>
<pre>
&lt;span property="http://example.org/terms/name"&gt;Manu Sporny&lt;/span&gt;
</pre>
<p>Microdata example:</p>
<pre>
&lt;span itemprop="http://example.org/terms/name"&gt;Manu Sporny&lt;/span&gt;
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="multiple-objects">Multiple objects per page</h2>
<p>Web pages often describe multiple &#8220;things&#8221; on a page. The ability to express this information as structured data is a natural extension of a Web page.</p>
<p>RDFa example:</p>
<pre>
&lt;div about="#person1"&gt;...&lt;/div&gt;
...
&lt;div about="#person2"&gt;...&lt;/div&gt;
</pre>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemtype="http://example.com/types/Person" itemid="#person1"&gt;...&lt;/div&gt;
...
&lt;div itemscope itemtype="http://example.com/types/Person" itemid="#person2"&gt;...&lt;/div&gt;
</pre>
<p>Microformats example:</p>
<pre>
&lt;div class="hcard"&gt;.../div&gt;
...
&lt;div class="hcard"&gt;.../div&gt;
</pre>
<h2 id="overlapping-objects">Overlapping objects</h2>
<p>At times, the HTML markup on a page will contain two pieces of overlapping information. For example, two people may be marked up on a web page. Ensuring that the structured data syntax is able to specify which person is being described by the HTML is important because the syntax should not force a Web developer to change the layout of their page.</p>
<p>RDFa example:</p>
<pre>
&lt;div about="#person1"&gt;... Information about Person 1 ...
   &lt;div about="#person2"&gt;...&lt;/div&gt; ... Information about Person 2 ...
&lt;/div&gt;
</pre>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemtype="http://example.com/types/Person" itemid="#person1"&gt;
   ... Information about Person 1 ...
   &lt;div itemscope itemtype="http://example.com/types/Person" itemid="#person2"&gt;...&lt;/div&gt;
      ... Information about Person 2 ...
&lt;/div&gt;
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="plain-text-properties">Plain Text properties</h2>
<p>Most item attributes, such as a person&#8217;s name, can be expressed using plain text. It is important that these text attributes can be picked up from the page.</p>
<p>RDFa example:</p>
<pre>
&lt;span property="name"&gt;Manu Sporny&lt;/span&gt;
</pre>
<p>Microdata example:</p>
<pre>
&lt;span itemprop="name"&gt;Manu Sporny&lt;/span&gt;
</pre>
<p>Microformats example:</p>
<pre>
&lt;span class="fn"&gt;Manu Sporny&lt;/span&gt;
</pre>
<h2 id="iri-properties">IRI properties</h2>
<p>At times it is important to differentiate between an IRI and plain text. For example, the text string <code>sip:msporny@digitalbazaar.com</code> could be a text string or it could be a valid IRI. While the ability to differentiate may seem trivial, guessing what a valid IRI is and isn&#8217;t will never be future proof. It is helpful to be able to understand if a value is a piece of text or an IRI in the data model.</p>
<p>RDFa example:</p>
<pre>
&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/"&gt;CC-AT-SA-3.0&lt;/a&gt;
</pre>
<p>While Microdata does allow one to differentiate between IRIs and strings in the syntax, the JSON-based serialization converts all IRIs to string values. This is problematic because it is impossible to differentiate between a string that looks like and IRI and an actual IRI in the JSON serialization. IRI properties are preserved correctly in the RDF serialization of Microdata.</p>
<p>Microdata example:</p>
<pre>
&lt;a itemprop="license" href="http://creativecommons.org/licenses/by-sa/3.0/"&gt;CC-AT-SA-3.0&lt;/a&gt;
</pre>
<p>While Microformats allow you to use IRI information, there is no official data model or mapping to RDF or JSON. Everything is treated as a text string and application logic must be written to determine if a particular data item is meant to be an IRI or text. So, while the markup below is valid &#8211; the IRI will be expressed as a text string, not an IRI.</p>
<p>Microformats example:</p>
<pre>
&lt;a rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/"&gt;CC-AT-SA-3.0&lt;/a&gt;
</pre>
<h2 id="typed-literal">Typed Literal properties</h2>
<p>Typed literals allow you to express typing information about a property. This is important when you need to specify things like units of measure, or specific kinds of numbers, in a way that doesn&#8217;t depend on understanding the language in the unit of measure. For example: Is &#8220;+353872206327&#8243; an integer or a phone number? Is &#8220;.1E-1&#8243; a float or a text string? Is &#8220;false&#8221; a boolean value or a part of a sentence? Another example concerns measurements like the kilogram, a unit of weight measurement that can be displayed in a variety of different ways around the world. Being able to express this unit of measurement in structured data in a language-neutral and measurement-neutral way makes it easier for machines to understand the unit of measurement without having to understand the underlying language.</p>
<pre>
&lt;span property="measure:weight" datatype="measure:kilograms"&gt;40&lt;/span&gt; килограммов
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="xml-literal">XML Literal properties</h2>
<p>XML Literals are used for properties that contain markup, such as the content of a blog post, SVG or MathML markup that should be preserved in the final output of the structured data parser. This is useful when you want to preserve all markup. </p>
<p><img src="http://upload.wikimedia.org/math/8/c/5/8c58ae2d322a33f3036800d96db0e91a.png" alt="The Quadratic Formula" /></p>
<p>The formula above is expressed like so in RDFa and MathML:</p>
<pre>
&lt;span property="math:formula" datatype="rdf:XMLLiteral"&gt;
&lt;math mode="display" xmlns="http://www.w3.org/1998/Math/MathML"&gt;
  &lt;mrow&gt;
    &lt;mi&gt;x&lt;/mi&gt;
    &lt;mo&gt;=&lt;/mo&gt;
    &lt;mfrac&gt;
      &lt;mrow&gt;
        &lt;mo form="prefix"&gt;&#x2212;&lt;!-- &minus; --&gt;&lt;/mo&gt;
        &lt;mi&gt;b&lt;/mi&gt;
        &lt;mo&gt;&#x00B1;&lt;!-- &PlusMinus; --&gt;&lt;/mo&gt;
        &lt;msqrt&gt;
          &lt;msup&gt;
            &lt;mi&gt;b&lt;/mi&gt;
            &lt;mn&gt;2&lt;/mn&gt;
          &lt;/msup&gt;
          &lt;mo&gt;&#x2212;&lt;!-- &minus; --&gt;&lt;/mo&gt;
          &lt;mn&gt;4&lt;/mn&gt;
          &lt;mo&gt;&#x2062;&lt;!-- &#038;InvisibleTimes; --&gt;&lt;/mo&gt;
          &lt;mi&gt;a&lt;/mi&gt;
          &lt;mo&gt;&#x2062;&lt;!-- &#038;InvisibleTimes; --&gt;&lt;/mo&gt;
          &lt;mi&gt;c&lt;/mi&gt;
        &lt;/msqrt&gt;
      &lt;/mrow&gt;
      &lt;mrow&gt;
        &lt;mn&gt;2&lt;/mn&gt;
        &lt;mo&gt;&#x2062;&lt;!-- &#038;InvisibleTimes; --&gt;&lt;/mo&gt;
        &lt;mi&gt;a&lt;/mi&gt;
      &lt;/mrow&gt;
    &lt;/mfrac&gt;
  &lt;/mrow&gt;
&lt;/math&gt;
&lt;/span&gt;
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="language-tagging">Language tagging</h2>
<p>The ability to specify language information for plain text is important when pulling data in from the Web. At times, words that are spelled the same in western character sets can mean different things. For example, the word &#8220;chat&#8221; in English (to have a conversation) is a very different meaning from the word &#8220;chat&#8221; (cat) in French.</p>
<p>RDFa example:</p>
<pre>
&lt;span property="name" lang="en"&gt;Manu Sporny&lt;/span&gt;
</pre>
<p>Microdata example:</p>
<pre>
&lt;span itemprop="name" lang="en"&gt;Manu Sporny&lt;/span&gt;
</pre>
<p>Language information support is only on a per-microformat basis. Some Microformats do not make any statements about supporting multiple language tags.</p>
<p>Microformats example:</p>
<pre>
&lt;span class="fn" lang="en"&gt;Manu Sporny&lt;/span&gt;
</pre>
<h2 id="text-iri-override">Override text and IRI content</h2>
<p>At times, the text content in the page is not what you want the machine to extract when reading the structured data. It is important to have a way to override both the text content, and the URL content in an element.</p>
<p>RDFa example:</p>
<pre>
&lt;span property="candles" content="14"&gt;fourteen&lt;/span&gt;
...
&lt;a rel="homepage" href="http://example.org/short-url" 
      resource="http://example.org/2011/path-to-real-url"&gt;My Homepage&lt;/a&gt;
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats only supports overriding text content in an element.</p>
<p>Microformats example:</p>
<pre>
&lt;abbr property="candles" title="14"&gt;fourteen&lt;/abbr&gt;
</pre>
<h2 id="rdf-mapping">Clear mapping to RDF</h2>
<p>The Resource Description Framework, or RDF, has been the standard model for the Semantic Web for over a decade. At times it can be overkill for simple structured data projects, but there are many times where it is necessary for some of the more involved to advanced structured data use cases. There is a fairly large, well-developed set of tools for RDF. It is beneficial if the structured data mechanism has a clear way of mapping the syntax to the RDF data model in a way that is useful to the set of existing RDF processing tools.</p>
<p>Since RDFa is built on RDF, the mapping to RDF is well specified. While it is possible to map Microformats to RDF, there is no standard way of doing so. Microdata does map to RDF, but there are a few bugs that are of concern. Namely, Microdata auto-generates RDF property URLs in a way that is not useful to many of the existing RDF processing tools. The issues that have raised objections in the past relate to the usefulness of/centralization of/dereferenceability of the generated IRIs. It has been argued that the IRIs designated for properties in Microdata are problematic as-is and need to be changed.  The following example demonstrates how properties in RDFa map to easy-to-understand URLs:</p>
<pre>
&lt;section vocab="http://schema.org/" typeof="Person"&gt;
   &lt;h1 property="name"&gt;John Doe&lt;/h1&gt;
&lt;/section&gt;
</pre>
<p>which results in the following IRI for the &#8220;name&#8221; property in RDFa:</p>
<pre>http://schema.org/name</pre>
<p>This URI is not centrally controlled. It fits in well with the RDF stack. De-referencing the URI leads to a location that is under the vocabulary maintainers control. The Microdata mapping to RDF is a bit less straightforward:</p>
<pre>
&lt;section itemscope itemtype="http://schema.org/Person"&gt;
   &lt;h1 itemprop="name"&gt;John Doe&lt;/h1&gt;
&lt;/section&gt;
</pre>
<p>The following URI is generated for the &#8220;name&#8221; property in Microdata:</p>
<pre>http://www.w3.org/1999/xhtml/microdata#http%3A%2F%2Fschema.org%2FPerson%23%3Aname</pre>
<p>This URI is centrally controlled. It requires extensive mapping to be useful for most RDF stacks. De-referencing the URI leads to a location not under the vocabulary maintainers control.</p>
<h2 id="languages">Target Languages</h2>
<p>Most structured data languages are meant to express data in a variety of different languages. RDFa is designed and is officially specified to work in a variety of different languages including HTML5, XHTML1, HTML4, SVG, ePub and OpenOffice Document Format. Microdata was built and specified for HTML5. Microformats re-uses attributes in HTML that have been in use for over a decade.</p>
<p>Having a structured data syntax support as many Web document formats as possible is good for the web because it reduces the tooling necessary to support structured data on the Web.</p>
<h2 id="new-attributes">New Attributes</h2>
<p>The complexity of a structured data syntax can be viewed, in part, by how many attributes a Web developer needs to understand to properly use the language. New attributes, while providing new functionality, do increase the cognitive load on the Web developer.</p>
<h2 id="reused-attributes">Re-used Attributes</h2>
<p>All of the structured data languages re-use a subset of attributes that contain information important to structured data on the Web. There is a delicate balance between re-using too many attributes and creating new attributes.</p>
<h2 id="multiple-types">Multiple IRI types per item</h2>
<p>Web developers need to be able to specify that an item on a page is associated with more than one type. That is, a business can be both an &#8220;AutoPartsStore&#8221; and a &#8220;RepairShop&#8221;.</p>
<p>RDFa example:</p>
<pre>
&lt;div typeof="AutoPartsStore RepairShop"&gt;...
</pre>
<p>In Microdata, you can only express multiple types for a single object using itemid to tie the information together and then only see the result in the RDF output. The DOM API would generate two separate items for the markup below, while the RDF output would generate only one item.</p>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemid="#fixit" itemtype="http://example.com/types/AutoPartsStore"&gt;...&lt;/div&gt;
&lt;meta itemscope itemid="#fixit" itemtype="http://example.com/types/RepairShop" /&gt;
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="multiple-statements">Multiple statements per element</h2>
<p>It is advantageous to use as much of the existing information in an HTML document as possible. At times, one element can contain more than a single piece of structured data. For example, a link can contain both the name of a person as well as a link to their homepage. A structured data syntax should re-use as much of this information as possible.</p>
<p>RDFa example:</p>
<pre>
&lt;a rel="homepage" href="http://manu.sporny.org/" property="name"&gt;Manu Sporny&lt;/a&gt;
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats example:</p>
<pre>
&lt;a rel="homepage" href="http://manu.sporny.org/" class="fn"&gt;Manu Sporny&lt;/a&gt;
</pre>
<h2 id="locally-scoped">&#8220;Locally scoped&#8221; vocabulary terms</h2>
<p>Locally scoped vocabulary terms allow you to create new vocabulary terms on-the-fly that are picked up by the structured data parsers. The use case for this is questionable, as it is considered good practice to have a vocabulary that allows any person or machine to dereference the URL and find out more about the vocabulary term.</p>
<p>RDFa example:</p>
<pre>
&lt;div vocab="http://schema.org/" typeof="Person"&gt;
   &lt;span property="favoriteSquash"&gt;Butternut Squash&lt;/a&gt;
&lt;/div&gt;
</pre>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemtype="http://schema.org/Person"&gt;
   &lt;span itemprop="favoriteSquash"&gt;Butternut Squash&lt;/a&gt;
&lt;/div&gt;
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="chaining">Item Chaining</h2>
<p>Chaining allows the object of a particular statement to become the subject of the next statement. It is often useful when relating multiple items to a single item or when linking multiple items, like social networks, together. For example, &#8220;Manu knows Ivan who knows Sandro who knows Mike&#8221;.</p>
<pre>
&lt;div about="#manu" rel="knows"&gt;
   &lt;div about="#ivan" rel="knows"&gt;
      &lt;div about="#sandro" rel="knows"&gt;
         &lt;div about="#mike"&gt;
         ...
&lt;/div&gt;
</pre>
<p>Microdata supports basic chaining, but doesn&#8217;t support hanging-rels or reverse chaining.</p>
<p>Microdata example:</p>
<pre>
&lt;div itemscope itemid="#manu" itemtype="http://schema.org/Person"&gt;
   &lt;div itemscope itemid="#ivan" itemprop="knows"&gt;
      &lt;div itemscope itemid="#sandro" itemprop="knows"&gt;
         &lt;div itemscope itemid="#mike" itemprop="knows"&gt;
         &lt;/div&gt;
      &lt;/div&gt;
   &lt;/div&gt;
&lt;/div&gt;
</pre>
<p>It is questionable whether or not Microformats even supports basic chaining. If somebody has a good chaining example for Microformats, please let me know and I&#8217;ll put it below.</p>
<p>Microformats example:</p>
<pre>
No examples of chaining.
</pre>
<h2 id="transclusion">Transclusion</h2>
<p>Transclusion allows a Web author to specify a set of properties once in a page, such as a business address, and copy those properties to multiple items in a page. RDFa allows doing this by reference, not by making a copy. Microdata allows transclusion both by reference and by copy. Microformats allows transclusion both by reference and by copy.</p>
<p>RDFa example:</p>
<pre>
Transclusion by copy not supported.
</pre>
<p>Microdata example:</p>
<pre>
&lt;span itemscope itemtype="http://microformats.org/profile/hcard" 
      itemref="home"&gt;&lt;span itemprop="fn"&gt;Jack&lt;/span&gt;&lt;/span&gt;
&lt;span itemscope itemtype="http://microformats.org/profile/hcard" 
      itemref="home"&gt;&lt;span itemprop="fn"&gt;Jill&lt;/span&gt;&lt;/span&gt;
&lt;span id="home" itemprop="adr" itemscope&gt;&lt;span 
      itemprop="street-address"&gt;Bottom of the Hill&lt;/span&gt;&lt;/span&gt;
</pre>
<p>Microformats example:</p>
<pre>
&lt;span class="vcard"&gt;
  &lt;span class="fn n" id="james-hcard-name"&gt;
    &lt;span class="given-name"&gt;James&lt;/span&gt; &lt;span class="family-name"&gt;Levine&lt;/span&gt;
  &lt;/span&gt;
&lt;/span&gt;
...
&lt;span class="vcard"&gt;
 &lt;object class="include" data="#james-hcard-name"&gt;&lt;/object&gt;
 &lt;span class="org"&gt;SimplyHired&lt;/span&gt;
 &lt;span class="title"&gt;Microformat Brainstormer&lt;/span&gt;
&lt;/span&gt;
</pre>
<h2 id="curies">Compact IRIs</h2>
<p>Compact IRIs allow Web developers to compress URLs so that they are easier to author. This allows more compact markup and reduces errors because it is no longer necessary to type out full URLs.</p>
<p>RDFa example:</p>
<pre>
&lt;div prefix="dc: http://purl.org/dc/terms/"&gt;
...
   &lt;span property="dc:title"&gt;...
   &lt;span property="dc:creator"&gt;...
   &lt;span property="dc:abstract"&gt;...
&lt;/div&gt;
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="prefixes">Prefix rebinding</h2>
<p>Enabling prefix declaration and rebinding supports decentralized vocabulary development and management. Prefix rebinding allows Web developers to create vocabularies that are specific to their domain of expertise and use them in a way that is inter-operable with other RDFa processors. Microdata and Microformats do not specify a prefix declaration and rebinding mechanism. Microdata does allow custom vocabularies using the itemtype attribute and therefore does support decentralized vocabulary development, but not decentralized vocabulary management, unless full IRIs are used to express the vocabulary terms.</p>
<p>RDFa example:</p>
<pre>
&lt;div prefix="dc: http://purl.org/dc/terms/"&gt;
...
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="vocabulary-mashups">Vocabulary Mashups</h2>
<p>Enabling multiple Web vocabularies to be mashed together into simple vocabulary terms is useful when creating application specific &#8220;vocabulary profiles&#8221;. Using a vocabulary profile, these simple vocabulary terms can be re-mapped to full vocabulary term IRIs which is useful to Web developers that need to simplify markup for a particular business unit, but ensure that the data generated maps to the correct Web vocabularies when used on the open Web. </p>
<p>For example, assume that a Web developer wants to map the vocabulary term &#8220;name&#8221; to &#8220;http://schema.org/name&#8221;, and &#8220;nickname&#8221; to &#8220;http://xmlns.com/0.1/foaf/nick&#8221;, and &#8220;hangout&#8221; to &#8220;http://example.com/myvocab#homebase&#8221;. These mappings could be accomplished in a simple-to-use vocabulary profile like so:</p>
<p>RDFa example:</p>
<pre>
&lt;div profile="http://example.com/my-rdfa-profile"&gt;
...
   &lt;span property="name"&gt;...
   &lt;span property="nickname"&gt;...
   &lt;span property="hangout"&gt;...
&lt;/div&gt;
</pre>
<p>Microdata example:</p>
<pre>
Not supported
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="time-support">HTML5 time element support</h2>
<p>There is a new element in HTML5 called <code>time</code>. This element is used to express human-readable dates and times and also contains a machine-readable value. This element was created as a response to the difficulty that the Microdata community was having when marking up dates and times. The only specification that makes use of the element currently is the Microdata specification. However, there is currently an <a href="http://www.w3.org/2010/02/rdfa/track/issues/97" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">issue</a> logged against HTML5+RDFa that requests the inclusion of this element so that RDFa processors may understand it. Microformats do not use this element yet, partly because it does not exist in HTML4.</p>
<p>RDFa example:</p>
<pre>
Not supported
</pre>
<p>Microdata example:</p>
<pre>
&lt;time datetime="2011-06-25" pubdate&gt;June 25th 2011&lt;/time&gt;
</pre>
<p>Microformats example:</p>
<pre>
Not supported
</pre>
<h2 id="context-based-attributes">Different attributes for different property types</h2>
<p>There is a design trade-off in structured data languages. As the number of statements that a single element can express increases, so does the number of attributes used to express statements. As the number of ways that an element&#8217;s value can be overridden increases, so does the number of attributes used to perform the override. Microdata keeps things simple by allowing only one statement to be made per element. Microformats allows class for text, rel for IRIs and title to override text content. RDFa uses the property attribute for text, rel and rev to specify URLs, and resource and content to override IRI and text content, respectively.</p>
<h2 id="json">Transform to JSON</h2>
<p>JSON is a heavily used data transport format used on the Web. It fits nicely into programming environments, so it is beneficial if a structured data syntax can be easily transformed into JSON. Microdata has a native mapping from the <a href="http://dev.w3.org/html5/md/#json" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','dev.w3.org']);">parser output</a> to JSON, as well as a <a href="http://dev.w3.org/html5/md/#microdata-dom-api" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','dev.w3.org']);">DOM API</a> that allows items to be retrieved from the page. The RDFa API provides a <a href="http://www.w3.org/TR/2011/WD-rdfa-api-20110419/#projections" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">mechanism</a> to retrieve data from a page and then serialize that data to JSON.</p>
<h2 id="dom-api">DOM API</h2>
<p>The ability to extract and utilize structured data from a web page in a browser setting is useful for improving interfaces and interactive applications. Microdata provides a simple <a href="http://dev.w3.org/html5/md/#microdata-dom-api" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','dev.w3.org']);">Microdata DOM API</a> for retrieving items from a web page. RDFa provides a more comprehensive <a href="http://www.w3.org/TR/2011/WD-rdfa-api-20110419/#projections" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa DOM API</a> for retrieving structured data from a web page. Microformats do not provide an API for extracting structured data from a web page.</p>
<h2 id="unified-parser">Unified Parser</h2>
<p>Having a solid set of tooling for handling structured data is important. One of the most important set of tooling are the parsers that are able to process Web documents and extract structured data from those web documents. Both RDFa and Microdata have a unified parser specification, which makes it easier to create inter-operable tools. Microformats require that separate parsers are created for each data format. This may change with the <a href="http://manu.sporny.org/2011/microformats-2/" >Microformats 2 work</a>, but for now, there is no unified parser specification for Microformats.</p>
<h2>Closing</h2>
<p>This document will be updated as errors or omissions are found. It can be considered an up-to-date comparison between RDFa, Microdata and Microformats as of June 2011. A follow-up blog post will explain how these structured data languages could be combined into a single structured data language for the Web, achieving the W3C TAG&#8217;s goal for unification of the syntaxes used to express structured data on the Web.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-4112 post type-post status-publish format-standard hentry category-rdfa category-semantic-web" id="post-4112">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/microformats-2/" rel="bookmark" title="Permanent Link to Microformats 2 and RDFa Collaboration"> Microformats 2 and RDFa Collaboration</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>June 15, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/microformats-2/#comments" title="Comment on Microformats 2 and RDFa Collaboration">14 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Microformats 2 and RDFa Collaboration" /><a title="Permanent Link to Microformats 2 and RDFa Collaboration" href="http://manu.sporny.org/2011/microformats-2/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>During the recent schema.org <a href="http://www.w3.org/2011/06/semtech-bof-notes.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">kerfuffle</a>, <a href="http://tantek.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tantek.com']);">Tantek Çelik</a> and I found ourselves agreeing with each other on the fundamentals of how a Web vocabulary should be developed. Like any technology standard meant for the world to use, we hoped that it would be developed transparently and scientifically. Tantek asked me to review the new Microformats 2 work and I thought it would be interesting to see what they&#8217;ve been up to recently.</p>
<p>I&#8217;ve been a contributing member of the Microformats community for some time, having participated in the design work for the hAudio, hVideo, hMedia, hProduct, hRecipe, currency, collection and measurement Microformats, among others. I&#8217;ve <a href="http://microformats.org/wiki/how-to-start-a-new-microformat" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">documented the process</a>, commented on <a href="http://microformats.org/wiki/namespaces-inconsistency-issue" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">inconsistencies</a> in the community, been <a href="http://www.mail-archive.com/microformats-new@microformats.org/msg00828.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.mail-archive.com']);">critical</a> of the confusing spec-creation steps, raised <a href="http://microformats.org/wiki/process-issues-closed#2007" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">governance and technical issues</a>, pushed the community to more clearly address <a href="http://microformats.org/discuss/mail/microformats-new/2007-April/000237.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">patent and copyright concerns</a> as well as admit that the lack of a unified parsing model is holding Microformats back. I have been harsh about how the community was run, but continued to participate because there were a number of redeeming qualities in the Microformats movement.</p>
<p>All of the frustration with the various inconsistencies, the administrators, and lack of progress led to me to take a hiatus from the community. I think many others in the community felt this frustration around the same time, as you can see the discussion average of 125 messages per month <a href="http://microformats.org/discuss/mail/microformats-new/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">drop to an average of 10 per month</a> and stay there to this day. When I took a leave from the Microformats work, I joined the RDFa Working Group at the W3C where I now Chair the group that created RDFa. In 2007, <a href="http://digitalbazaar.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','digitalbazaar.com']);">my company</a> was working on expressing music on the Web as structured data and RDFa seemed like a much better way to do it, so we shifted our focus to RDFa and distributed vocabulary development. Fast forward to today and both <a href="http://payswarm.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PaySwarm</a> and MusicBrainz <a href="https://twitter.com/#!/manusporny/status/70949495281692672" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">publish</a> all of their data as RDFa. However, with the recent launch of schema.org, an interesting question was pushed into the public view once again: What is the best way to develop a Web vocabulary for structured data in HTML if millions of people are going to depend on it?</p>
<p>The <a href="http://microformats.org/wiki/microformats-2" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">Microformats 2</a> work attempts to address a number of concerns that have been raised in the community over the past several years. Most of these issues were logged during a period of peak activity in the community, between 2007 and 2009, during the development of the hAudio, hVideo, hMedia, hProduct, collection and measurement Microformats. Here&#8217;s a quick breakdown of my initial thoughts on the Microformats 2 work:</p>
<h2>The Good</h2>
<p>There are a number of really great things proposed for Microformats 2 that could breathe new life into the community.</p>
<ul>
<li><strong>Unified parsing model</strong> &#8211; Microformats 2 has it &#8211; this is one of the best changes to the new direction.</li>
<li><strong>Flat set of properties</strong> &#8211; All Microformats are treated as objects with a flat set of properties. This maps to JSON nicely and is another move in the right direction.</li>
<li><strong>Hungarian prefixing</strong> &#8211; All Microformats 2.0 markup will now have an h-* prefix for the Microformat, a p-* prefix for string properties, a u-* prefix for URLs, and a d-* prefix for datetimes.</li>
<li><strong>Vendor extensions</strong>. &#8211; I hope this catches on &#8211; it allows a path toward experimentation which we desperately needed for the <a href="http://payswarm.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PaySwarm</a> work. The Microformats community has a saying, &#8220;<a href="http://www.designingsocialinterfaces.com/patterns/Pave_the_Cowpaths" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.designingsocialinterfaces.com']);">Pave the cowpaths</a>”. This philosophy effectively boils down to ensuring that standards are rooted in existing practice. However, you can&#8217;t pave cowpaths that aren&#8217;t there yet. Typically, innovation requires the first cow to start making the cowpath. It would be nice to have an open community that you can innovate within &#8211; this could provide that mechanism. <em>Moo</em>.</li>
<li><strong>Separation of Syntax from Vocabularies</strong> &#8211; Tantek mentioned that the Microformats 2 work would separate vocabularies from syntax. I couldn&#8217;t find that statement on the page, but I think it would be great to do that. I&#8217;ve always believed that the real contribution of the Microformats community to the Web was in the development of well-researched Web vocabularies. We now have syntaxes that are capable of expressing Microformats; RDFa and Microdata. Why do we need yet another syntax? The part of this new Microformats 2 reboot I&#8217;m most interested in participating in is the vocabulary part. Specifically, porting all of the Microformats Vocabularies over to <a href="http://www.w3.org/2010/02/rdfa/sources/rdfa-primer/#vocabulary-bundles" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa 1.1 Profiles</a>. The markup would be almost exactly the same as what is proposed on the Microformats 2 wiki page (example below).</li>
</ul>
<h2>Meh</h2>
<p>Some of the changes to Microformats aren&#8217;t really necessary, nor do I think that they will result in stronger uptake of Microformats.</p>
<ul>
<li><strong>Root Class Name Only</strong> &#8211; Microformats aren&#8217;t that difficult to publish. Simplifying them down to one tag will probably not result in much uptake or data that is interesting or helpful.</li>
<li><strong>&#8220;hcard&#8221; instead of &#8220;vcard&#8221;</strong> &#8211; Yes, it was a point of confusion. I don&#8217;t think it really prevented people from implementing Microformats.</li>
</ul>
<h2>The Bad</h2>
<p>Some of the most important things that the Microformats community needs to change are not addressed. I&#8217;d like to see them addressed before assuming that new work done in that community will have a lasting impact:</p>
<ul>
<li><strong>The Administrators</strong> &#8211; One of the strongest criticisms by the community has always been the status of the self-appointed leaders. They do a good job most of the time, but having a mechanism where the community elects the leaders and administrators would get us closer to a meritocracy. Not allowing the community to govern itself shows that you don&#8217;t trust the membership of the community. If you don&#8217;t trust us, how can we trust you? If there is a &#8220;you&#8221; and a &#8220;them&#8221;, then it becomes easy to have a &#8220;you versus them&#8221; situation. The Microformats community could learn a great deal from the Debian community in this respect.</li>
<li><strong>The Process</strong> &#8211; I had previously complained that it was <a href="http://microformats.org/wiki/process-issues-closed#2007" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">not very clear</a> what you need to meet each hurdle in the Microformats process. This seems to have been <a href="http://microformats.org/wiki/process" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','microformats.org']);">clarified</a> with the new Microformats 2 work. I&#8217;m still concerned that too much is left in the hands of the &#8220;leaders&#8221;. There was a great deal of what I felt was &#8220;moving the goalposts&#8221; when developing hAudio. The process kept changing. If the process keeps changing, it can mean that all of your hard work may not end up making it to the &#8220;official&#8221; Microformats standard stage. So, I am suspect of the process if the community has no power over who gets to change the process and when.</li>
<li><strong>Open Innovation</strong> &#8211; How does one innovate in the Microformats community? That is, how do we have an open discussion about the <a href="http://purl.org/commerce" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">Commerce</a>, <a href="http://purl.org/signature" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">Signature</a> and <a href="http://purl.org/payswarm" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','purl.org']);">PaySwarm</a> Web vocabularies in the Microformats community? We&#8217;re trying to solve a real-world problem &#8211; Universal Payment on the Web. We need to have an open discussion about the Web vocabularies used to accomplish this goal. How can we have this discussion in the Microformats community?</li>
<li><strong>Collaboration</strong> &#8211; How can the RDFa community, Microdata folks and the Microformats community work together? I&#8217;d really like all of us to work together. I&#8217;ve been trying to make this happen for several years now, each attempt met with varied levels of failure. Our continued track record of not reaching out and working with one another on a regular basis is damaging structured data adoption on the Web &#8211; and each community feels as if they are blame-less for the current state of affairs. &#8220;If only they&#8217;d listen to us, we wouldn&#8217;t be in this mess!&#8221;. Schema.org is just one signal that all of us need to come together and work on a unified way forward.</li>
</ul>
<h2 id="working-together">Working Together</h2>
<p>So, how do we collaborate on this? We have <a href="http://manu.sporny.org/2011/rdfa-microdata-features/" >added Microformats-like features to RDFa</a> over the past few years because we wanted RDFa 1.1 markup to be just as easy as Microformats markup. This example is used on the Microformats 2 page:</p>
<pre>
&lt;h1 class="h-card">
 &lt;span class="p-fn">
  &lt;span class="p-given-name">Chris&lt;/span>
  &lt;abbr class="p-additional-name">R.&lt;/abbr>
  &lt;span class="p-family-name">Messina&lt;/span>
 &lt;/span>
&lt;/h1>
</pre>
<p>The markup above can be easily expressed in RDFa 1.1, using <a href="http://www.w3.org/TR/rdfa-core/#s_profiles" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">RDFa Profiles</a> like so:</p>
<pre>
&lt;h1 typeof="hcard">
 &lt;span property="fn">
  &lt;span property="given-name">Chris&lt;/span>
  &lt;abbr property="additional-name">R.&lt;/abbr>
  &lt;span property="family-name">Messina&lt;/span>
 &lt;/span>
&lt;/h1>
</pre>
<p>This is useful to the Microformats 2 work because every RDFa 1.1 compliant parser could easily become a compliant Microformats 2 parser. Food for thought.</p>
<p>Let&#8217;s try to work together on this. As a first step, I think that the RDFa community could easily generate RDFa Profiles for Microformats. This would give people the ability to use Microformats either in the Microformats 2 syntax, or in RDFa 1.1 syntax. That would drive further adoption of the Microformats vocabularies &#8211; which would be great for both communities. How can we make this happen?</p>
<p><small>Thanks to DL and DIL for reviewing this post.</small></p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-4004 post type-post status-publish format-standard hentry category-rdfa category-semantic-web" id="post-4004">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/false-choice/" rel="bookmark" title="Permanent Link to The False Choice of Schema.org"> The False Choice of Schema.org</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>June 3, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/false-choice/#comments" title="Comment on The False Choice of Schema.org">79 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to The False Choice of Schema.org" /><a title="Permanent Link to The False Choice of Schema.org" href="http://manu.sporny.org/2011/false-choice/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p><em>Full disclosure: I am the current Chair of the group at the World Wide Web Consortium that created RDFa. That said, all of this is my personal opinion &#8211; I am not speaking on behalf of the W3C or my company, Digital Bazaar. I am biased, but also have been around long enough to know when freedom of choice on the Web is being threatened.</em></p>
<p>Some of you may have heard that Microsoft, Google and Yahoo have <a href="http://schema.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','schema.org']);">just released</a> a new uber-vocabulary for the Web. As the site explains, if you use schema.org, you will get a better looking search listing on all of the search listings for Bing, Google and Yahoo. While this may sound good on the surface, it is very bad news for choice on the Web. There are few points that I&#8217;d like to make in this post:</p>
<ol>
<li>RDFa and Microdata markup are similar for the schema.org use cases &#8211; they should both be supported.</li>
<li>Microdata doesn&#8217;t scale as easily as RDFa &#8211; early successes will be followed by stagnation and vocabulary lock-in.</li>
<li>All of us have the power to change this as the Web community &#8211; let&#8217;s do that. We will release a plan shortly.</li>
</ol>
<p>The schema.org site makes it appear as if you must pick sides and use Microdata if you want preferential treatment. <strong>This is a false choice</strong>! They even state that you cannot use RDFa and Microdata and Microformats on the same page as it will confuse their parsers &#8211; forcing Web designers to exclusively use Microdata or be lost in the morass of search listings [<strong>Edit:</strong> Google has since <a href="http://www.w3.org/2011/06/semtech-bof-notes.html#line0116" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.w3.org']);">retracted</a> this statement.]. The entire Web community should decide which features should be supported &#8211; not just Microsoft or Google or Yahoo. We must not let the rug be pulled out from under us, we must band together and make our voices heard. We must make it very clear that we want to use what is best for us, not what a few people think is best for three large corporations.</strong></p>
<p>Google and Yahoo already support Microformats, Microdata and RDFa in their advanced search services (Google Rich Snippets and Yahoo Search). So, why is it that we cannot continue to use what has been working for our organizations? Of the three, RDFa supports far more communities and is currently used far more heavily than Microdata. So, what possible reasons could they have to now exclude RDFa? Why exclude Microformats?</p>
<p>The <a href="http://schema.org/docs/terms.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','schema.org']);">patent licensing section</a> alone sent shivers down my spine, but the most glaring concern is the reasoning to use Microdata.</p>
<h1>Complexity</h1>
<blockquote><p>Q: Why microdata? Why not RDFa or microformats?<br />
Focusing on microdata was a pragmatic decision. Supporting multiple syntaxes makes documentation for webmasters more complex and introduces more overhead in terms of defining new formats.</p></blockquote>
<p>Being pragmatic is about balance. It&#8217;s true that supporting multiple syntaxes makes documentation and management more complex, so reduction can be good, but at what cost? </p>
<blockquote><p>RDFa is extensible and very expressive, but the substantial complexity of the language has contributed to slower adoption.</p></blockquote>
<p>Yes, it is extensible and very expressive. However, I don&#8217;t buy the &#8220;more complex&#8221; argument at all for the schema.org use case. The RDFa 1.1 community has been extremely focused on Web developer feedback and simplifying the markup. For example, take this Microdata snippet from schema.org:</p>
<pre>
&lt;div itemscope itemtype="http://schema.org/CreativeWork">
   &lt;img itemprop="image" src="videogame.jpg" />
   &lt;span itemprop="name">Resistance 3: Fall of Man&lt;/span>
   by &lt;span itemprop="author">Sony&lt;/span>,
   Platform: Playstation 3
   Rated:&lt;span itemprop="contentRating">Mature&lt;/span>
&lt;/div>
</pre>
<p>and compare against the RDFa 1.1 equivalent:</p>
<pre>
&lt;div vocab="http://schema.org/" typeof="CreativeWork">
   &lt;span rel="image">&lt;img src="videogame.jpg" />&lt;/span>
   &lt;span property="name">Resistance 3: Fall of Man&lt;/span>
   by &lt;span property="author">Sony&lt;/span>,
   Platform: Playstation 3
   Rated:&lt;span property="contentRating">Mature&lt;/span>
&lt;/div>
</pre>
<p>The complexity difference between the two languages for the simple use cases is negligible. Make no mistake &#8211; there are politics being played here and we will eventually get to the bottom of this. When you get to more advanced use cases, such as mixing vocabularies, RDFa really shines. In Microdata, your choice in vocabulary is exclusive. In RDFa, your choice in vocabulary is inclusive. That is, you can mix-and-match vocabularies that suit your organization far more easily in RDFa than you can in Microdata. Vocabulary mixing will become far more prevalent as structured data grows on the Web.</p>
<p>Some have argued that some of the more involved features are complex, but the counter argument has always been: Well, don&#8217;t use those features. Those features aren&#8217;t just there to be purely complex &#8211; they were specifically requested by the Web community when building RDFa. Microdata is lacking many of those community-requested features, which does make it simpler, but it also makes it so that it doesn&#8217;t solve the problems that the &#8220;complex&#8221; features were designed for. RDFa is designed to solve a wider range of problems than just those of the search companies. Yes, complexity is bad &#8211; but so is cutting features that the Web community has specifically requested and needs to make structured data on the Web everything that it can be.</p>
<h1>Adoption</h1>
<blockquote><p>RDFa is extensible and very expressive, but the substantial complexity of the language has contributed to slower adoption.</p></blockquote>
<p>The &#8220;slower adoption&#8221; statement is pure bunk. Of Microformats, RDFa and Microdata &#8211; RDFa is the only one that has experienced triple digit growth in the last year &#8211; <a href="http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tripletalk.wordpress.com']);">510% growth over the last year</a>, to be exact. There are no such figures for Microdata. If you are going to claim that something has slow adoption, then you have to measure it against something else. Where is the public, hard data to demonstrate that Microdata is growing faster than Microformats and RDFa? Both the Microformats and RDFa communities have provided hard numbers in a public forum. I would suspect that these numbers have not been published for Microdata because they do not exist. If the numbers do exist, they should be made public so that we may check the veracity of this claim.</p>
<p>So it leaves us guessing, slower adoption compared to what? Since when did triple digit adoption figures become not good enough? With claims that go counter to publicly available hard data, it makes it seem as if something fishy is going on here. These numbers will probably not matter in the long run. If Google, Microsoft and Yahoo all said that you need to embed their proprietary markup in pages, people would do it if it meant higher search ranking. The adoption rate of <em>any</em> markup would increase if Google, Microsoft and Yahoo mandated it. That doesn&#8217;t mean that it would result in something that is better for the Web.</p>
<h1>The False Choice</h1>
<blockquote><p>We will also be monitoring the web for RDFa and microformats adoption and if they pick up, we will look into supporting these syntaxes.</p></blockquote>
<p>Since Google and Microsoft and Yahoo have said that the new schema.org vocabulary expressed in RDFa isn&#8217;t supported, people won&#8217;t use it. There are no examples in schema.org RDFa on the entity pages and it&#8217;s not even clear if they will index RDFa that expresses schema.org structured data. They&#8217;ve created a catch-22 situation. RDFa and Microformats adoption for schema.org will not pick up because they go out of their way to not support it. Even if they were to support extracting the schema.org vocabulary as RDFa, I don&#8217;t know how much more RDFa and Microformats would have to &#8220;pick up&#8221; to qualify. If triple-digit growth isn&#8217;t enough, then what is?</p>
<p>Microformats were created in an open and community-driven way. RDFa was created in an open and community-driven way. Schema.org was not, and if it catches on, expect to see it not scale over the long term and an increase in vocabulary lock-in to the major search companies. Which are you going to choose? Facebook&#8217;s Like button markup, or Google/Microsoft/Yahoo&#8217;s Microdata markup &#8211; you are being put into the position of choosing one of those exclusively.</p>
<p>We the publishers, developers and authors of the Web have the power to change this. We need to make it clear that we want to be able to express structured data in whatever language we choose. We create the content that Google, Microsoft and Yahoo index, it is a two-way conversation. Google and Microsoft do not tell us what is worth indexing, that is our choice &#8211; our freedom to decide.</p>
<h1>Action</h1>
<p>Don&#8217;t let this freedom be taken away from us and from the rest of the Web. Schema.org is the work of only a handful of people under the guise of three very large companies. It is not the community of thousands of Web Developers that RDFa and Microformats relied upon to build truly open standards. This is not how we do things on the Web.</p>
<p>The feedback form for schema.org is below. Let them know that you want RDFa supported for schema.org as a first class language. Tell them that you want new Microformats continued to be supported if you use it. Let them know that you want to see data backing up the claim that Microdata is the best and only choice. Let them know that you want the vocabularies provided on the schema.org site to go through a public review process. Ask them why they aren&#8217;t reusing the good work done by the Microformats community or the many Web vocabulary authors that have already put multiple years into creating solid Web vocabularies. Let them know that you don&#8217;t think that a handful of people should decide what will be used by hundreds of millions of people. We should be a part of this decision &#8211; let them know that.</p>
<p>We&#8217;re getting a plan of action together for those that care about freedom of choice on the Web. I&#8217;ll tweet a call to action via <a href="http://twitter.com/#!/manusporny/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','twitter.com']);">@manusporny</a> when it is ready, roughly 1-2 weeks from now.</p>
<p><iframe width="100%" height="768" src="http://schema.org/docs/feedback.html"></iframe></p>
<p>Thanks to B, T, M, D, and D for reviewing this post and suggesting changes.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-3464 post type-post status-publish format-standard hentry category-json-ld category-rdfa category-semantic-web" id="post-3464">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/linked-json/" rel="bookmark" title="Permanent Link to Linked JSON: RDF for the Masses"> Linked JSON: RDF for the Masses</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>April 23, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/linked-json/#comments" title="Comment on Linked JSON: RDF for the Masses">5 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Linked JSON: RDF for the Masses" /><a title="Permanent Link to Linked JSON: RDF for the Masses" href="http://manu.sporny.org/2011/linked-json/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>There are times when we can see ourselves doing things that will be successful, and then there are times when we can see ourselves screwing it all up. I&#8217;ve just witnessed the latter in the RDF Working Group at the World Wide Web Consortium and thought that it may help to do a post-mortem on what went wrong. This was a social failure, not a technical one. Unlike technical failures, social failures are so much more complicated &#8211; so, let&#8217;s see if we can find out what went wrong.</p>
<h2>Background</h2>
<p>I spend a great deal of my time trying to convince technology leaders at large companies like Google, the New York Times, Facebook, Twitter, Sony, Universal and Warner Brothers to choose a common path forward that will help the Web flourish. Most of that time is spent at the World Wide Web Consortium (W3C), in standards working groups, trying to predict and build the future of the Web. I&#8217;m currently the Chair of the RDF Web Applications Working Group, formerly known as the RDFa Working Group. My participation covers many different working groups at the W3C; RDFa, HTML5, RDF, WebID, Web Apps, Social Web, Semantic Web Coordination, and a few others. The hope is that all of these groups are building technologies that will actually make all of our lives easier &#8211; especially for those that create and build the Web.</p>
<h2>The Pull of Linked Data</h2>
<p>There is a big push on the Web right now to publish data in an inter-operable way. <a href="http://en.wikipedia.org/wiki/Rdfa" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">RDFa</a> is a good example of this new push to get as much <a href="http://www.ted.com/talks/tim_berners_lee_on_the_next_web.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.ted.com']);">Linked Data</a> out there as possible. Our latest work in the RDF Working Group was to try and find a way to bring Linked Data to JSON. That is, we were given the task of figuring out a way to get companies like Google, Yahoo!, The New York Times, Facebook and Twitter to publish their data in a standards-compliant format that the rest of the world could use. We&#8217;ve already convinced some of these large companies to publish their data in RDFa. This was a huge win for the Web, but it was only a fraction of the interesting data out there. The rest of it is locked up in Web Services &#8211; in volumes of JSON data that are passed back and forth via JSON-REST APIs every day.</p>
<p>Wouldn&#8217;t it be great if we had something like RDFa for JSON? A way for a standard software stack to extract globally meaningful objects from Web Services? In fact, that is what <a href="http://json-ld.org/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','json-ld.org']);">JSON-LD</a> was designed to do. There are also a number of other JSON formats that could be read not only as JSON, but as RDF. If we could get the world to start publishing their JSON data as Linked Data, we would have more transparency and more inter-operable systems. The rate at which we re-use data from other JSON-based systems would grow by leaps and bounds.</p>
<p>This is what the charge of the RDF Working Group was, and at the Face-to-Face meeting a little over a week ago, <strong>we failed miserably to deliver on that promise</strong>. </p>
<h2>Failure Timeline</h2>
<p>Here is a quick run-down of what happened:</p>
<ul>
<li>March 2010: Work starts on JSON-LD &#8211; focusing on an easy-to-use, stripped down version of Linked Data for Web Developers. The work builds on previous work done by lots of smart people across the Web.</li>
<li>Summer 2010: An W3C RDF Workshop finds that there is a deep desire in the community for a JSON-based RDF format.</li>
<li>January 2011: The RDF Working Group starts up &#8211; starts to analyze 10 different RDF in JSON format proposals. There is general confusion in the group as to the exact community we&#8217;re attempting to address. Some think it&#8217;s people that are already using RDF/Graph Stores and SPARQL, others believe we are attempting to bring independent Web Developers into the world of Linked Data. I was of the latter mindset &#8211; we don&#8217;t need to convince people that are already using RDF to keep using RDF.</li>
<li>March 2011: Arguments continue about what features of JSON we&#8217;ll use and whether or not we are just creating another triple-based serialization for RDF, or if we are creating an easier to use form of Linked Data in JSON.</li>
<li>April 2011: At the RDF Face-to-Face, a show of hands decides to place the JSON work intended for independent Web Developers on the back burner for a year or more. The reason was that there was no consensus that we were solving a problem that needed to be solved.</li>
</ul>
<p>Before I get into what went wrong, I don&#8217;t intend any of this to be bashing anyone in the RDF Working Group. They&#8217;re all good people that want to do good things for the Web. Many of them have put years of work into RDF &#8211; they want to see it succeed. They are also very smart people &#8211; they are the worlds leading experts in this stuff. There were no politics or back-room dealing that occurred. The criticism is more about the group dynamic &#8211; why we failed to deliver what some of us saw as our primary directive in the group.</p>
<h2>What Went Wrong?</h2>
<p>How did we go from knowing that people wanted to get Linked Data out of JSON to deciding to back-burner the work on providing just that to the people that build the Web? I pondered what went wrong for about a week and came up with the following list:</p>
<ul>
<li><strong>I failed to gather support and evidence</strong> that people wanted to get Linked Data out of JSON. I place most of the blame on myself for not educating the group before the decision needed to be made. I wouldn&#8217;t be saying this if the vote was close, but when it came time to show who supported the work &#8211; out of a group of 20-some-odd people, only two raised their hands. One of those people was me. I should have spent more time getting the larger companies to weigh in on the matter. I should have had more documentation and evidence ready on why the world needed to get Linked Data out of JSON. I should have had more one-on-one conversations with the people that I could see struggling with why we needed Linked Data for JSON. I assumed that it was obvious that the world needed this and that assumption came back to kick our collective asses.</li>
<li><strong>A lack of Web App developers</strong> in the RDF Working Group helped compound the problem stated above. Most of the group didn&#8217;t understand why just serializing triples to JSON wasn&#8217;t good enough as most of them had APIs to make sense of the triples. They were also not convinced that we needed to bring Web App developers into the RDF community. RDF is already successful, right? <strong>Wrong</strong>. Every RDF serialization format is losing out to JSON when it comes to data interchange &#8211; not by a little, but by a staggering margin. The RDF community is so pathetically tiny compared to the Web App development community. The people around the world that use JSON as their primary data serialization format are easily 100 fold greater than those using RDF. I&#8217;m convinced that there is a problem. I don&#8217;t think that the majority of traditional RDF community thinks that there is a problem.</li>
<li><strong>Lacking a common vision</strong> will kill a community. It has been said that standards groups should not innovate, but instead they should standardize solutions that are already out in the marketplace. There are days where I believe this &#8211; the TURTLE work has been easy to move forward in the RDF Working Group. There are also days where I know this is not true. Standards groups can be fantastic innovators &#8211; just look at the WHATWG, CSS, RDFa, Web Applications, and HTML5 Working Groups. At the heart of the matter is whether or not a group has a common vision. If you don&#8217;t have a common vision, you go nowhere. We didn&#8217;t have a common vision for the Linked Data in JSON work.
</li>
<li><strong>Only one company in the group was depending on the technology</strong> to be completed in order to ship a product. That company was Digital Bazaar, for the <a href="http://payswarm.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','payswarm.com']);">PaySwarm</a> work. None of the other companies really have any skin in the game. Sure some of them would like to see something developed, but they&#8217;re not dependent on it. One recipe for disaster is to get a group of people together to work on something without hardly any negative consequence for failure.</li>
<li><strong>I pushed JSON-LD too hard</strong> when discussing the various possibilities. I pushed it because I thought it was the best solution, and still do. I think my sense of urgency came across as being too pushy and authoritarian. This strategy, if you could call it that, backfired. Rather than open up a debate on the proper Linked Data JSON format, it seemed as if some people refused to have any sort of debate on the formats and instead chose to debate which community we were attempting to address in order to slow down the decision process until they could catch up with the state of all of the serialization formats.</li>
<li><strong>Old school RDF people</strong> compose the majority of the RDF Working Group. It&#8217;s hard to pinpoint, but I saw what I could only describe as an &#8220;old world&#8221; mentality in the RDF Working Group. Browser-based APIs and development weren&#8217;t that important to them. They had functioning graph storage engines, operational SPARQL query engines, and PhDs to solve all of the hard problems that they may find in their everyday usage of RDF. Independent Web developers rarely have all of these advantages &#8211; many of them have none of these advantages. Many Web developers only have a browser, JavaScript, some server side code and JSON.parse() for performing data serialization and deserialization. JSON coupled with REST is simple, fast, stable and works for most everything we do. To solve 80% of our problems, there is no need for the added complexity that the &#8220;old school&#8221; RDF crowd brings to the table.</li>
<li>The RDF Working Group <strong>didn&#8217;t do their homework</strong>. We are all busy, I get that. However, even after two months, it was painfully clear that many in the group had not taken the time to understand the proposals on the table in any amount of depth. In some cases, I&#8217;m convinced that some did not even look at the proposals before passing judgement on whether or not the solution was sound.</li>
<li><strong>Experts tend to over-analyze</strong> and cripple themselves and their colleagues with all of the potential failure scenarios. There were assertions in the group at times that, while had a basis of validity, were not constructive and came across as typical academic nay-saying. It is easier to find reasons why a particular direction will not succeed when you&#8217;re an expert. This nay-saying was very active in the RDF Working Group. We didn&#8217;t have a group that was saying &#8220;Yes, we can make this happen.&#8221; Instead, we had a minority that set the tone for the group by repeating &#8220;I don&#8217;t know if this&#8217;ll work, let&#8217;s not do it.&#8221;</li>
</ul>
<p>I think the RDF Working Group has lost it&#8217;s way &#8211; we have forgotten the end-goal of enabling everyone on the Web to use Linked Data. We have chosen to deal with the easier problems instead of taking the biggest problem (adoption) seriously. There are many rational arguments to be made about why we&#8217;re not doing the work &#8211; none of those reasons are going to help spread Linked Data outside the modestly sized community that it enjoys at the moment. We need to get Web Apps developers using Linked Data &#8211; JSON is one way to accomplish that goal. <strong>It is a shame that we&#8217;re passing up this opportunity</strong>.</p>
<h2>All is Not Lost</h2>
<p>The RDF Working Group is only working on one interesting thing right now &#8211; and that&#8217;s how to represent multiple graphs in the various RDF serializations. Call them Named Graphs, or Graph Literals, or something else &#8211; but at least we&#8217;re taking that bull by the horns. As for the rest of the work that the RDF Working Group plans to do &#8211; it&#8217;s uninspired. I joined the group hoping to breathe some new life into RDF &#8211; make it exciting and useful to JavaScript developers. Instead, we ended up spending most of our time polishing things that are already working for most people. Don&#8217;t get me wrong, it&#8217;s good that some of these things are being polished &#8211; but it&#8217;s not going to impact RDF adoption rates in any significant way.</p>
<p>All is not lost. We decided to create a <a href="http://lists.w3.org/Archives/Public/public-linked-json/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lists.w3.org']);">public linked data in JSON mailing list</a> (not activated yet) where the people that would like to see something come of JSON in Linked Data could continue the work. We&#8217;re already revving JSON-LD and updating it to reflect issues that we discovered over the past several months. That&#8217;s where I&#8217;ll be spending most of my effort on Linked Data in JSON from now on &#8211; the RDF Working Group has demonstrated that we can&#8217;t accomplish the goal of growing the Linked Data community there.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-1597 post type-post status-publish format-standard hentry category-rdfa category-semantic-web" id="post-1597">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/those-six-guys/" rel="bookmark" title="Permanent Link to Basing Design Decisions on &#8220;Those Six Guys&#8221;"> Basing Design Decisions on &#8220;Those Six Guys&#8221;</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>February 6, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/those-six-guys/#comments" title="Comment on Basing Design Decisions on &#8220;Those Six Guys&#8221;">8 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to Basing Design Decisions on &#8220;Those Six Guys&#8221;" /><a title="Permanent Link to Basing Design Decisions on &#8220;Those Six Guys&#8221;" href="http://manu.sporny.org/2011/those-six-guys/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>As I explained in yesterday&#8217;s post, <a href="http://manu.sporny.org/2011/case-for-curies/" >one of the core features of RDFa is under attack in the HTML Working Group</a>. I use the phrase &#8220;under attack&#8221; loosely because I can&#8217;t imagine that the Chairs for the HTML Working Group are going to remove CURIEs based on Ian Hickson&#8217;s (the editor of the HTML5 specification) <a href="http://wiki.whatwg.org/wiki/Change_Proposal_for_ISSUE-120" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','wiki.whatwg.org']);">current proposal to eviscerate RDFa</a>. But hey, stranger things have happened. I&#8217;m concerned about this possibility because I&#8217;m also the current Chair of the RDFa Working Group. Removing CURIEs would break all of the currently deployed RDFa content out there (430+ million web pages), so I doubt it&#8217;ll be removed. Personally, I think that the case against CURIEs is so weak that it is laughable&#8230; or cry-able. Honestly, I switch how it affects me from day to day &#8211; working on standards does that to you, it makes you manic. Today, it&#8217;s laughter &#8211; so let&#8217;s laugh a bit, while we can.</p>
<h2>Ground Rules</h2>
<p><strong>Fair warning</strong>: This post is probably going to get a bit ranty from this point on. I try not to rant publicly too often because it can be construed as petty whining, or at worst, used as a reason to divide communities and people. So, know that this rant is mostly petty whining with a sprinkling of irony. It&#8217;s hard to not understand what&#8217;s going on here and not have a good laugh about it. This rant is mostly about a few key individuals in the Web standards community and how, at times, fantastically ridiculous things can emerge from multi-year conflicts between them. Nerd fight!</p>
<p>I also don&#8217;t want this to come across as a slam against Ian Hickson. I respect the guy because he&#8217;s moving HTML5 forward and he&#8217;s pissed off enough people along the way to make people passionate about Web standards again. I like that people get excited about HTML5, even though many of them don&#8217;t know what in the hell it means. Hell, even I don&#8217;t know what it means other than it&#8217;s supposed to cure this nasty rash I picked up in Nicaragua.</p>
<p>Back to our favorite non-benevolent, benevolent dictator. I don&#8217;t appreciate many of the political tactics and doublespeak Ian uses in the name of moving the Web forward, but I tend to not care about most of the crap he pulls unless it causes the good people in the Standards Community grief. There&#8217;s even a really fun (NOT SAFE FOR WORK) website that follows the <a href="http://lastweekinhtml5.blogspot.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','lastweekinhtml5.blogspot.com']);">many antics of Ian Hickson and friends</a>. So, hat&#8217;s off to Ian for getting shit done.</p>
<h2>I Do Science. Now You Can Too!</h2>
<p>Now, let&#8217;s have some fun. One of the arguments that Ian has been making ever since we pushed for RDFa to go into HTML5 goes something like this:</p>
<p><em>&#8220;In a usability study for microdata, it was discovered that authors in fact have no difficulty dealing with straight URLs rather than shortening them with prefixes.&#8221;</em></p>
<p>The usability study alluded to was done by Google and was used to determine a few of the features that one can find in Microdata (which is a competing specification to RDFa in HTML5). When it was performed, Ian was quick to point out that a study had been performed by Google on Web developers not having an issue with typing out full URLs, but no data was released for many months. Some of the reasons cited were privacy concerns, it was an internal Google study, &#8220;I know better than you&#8221;, etc. </p>
<p>However, that didn&#8217;t stop Ian from referencing the usability study when discussing what he deemed to be faults in RDFa. In fact, the <a href="http://blog.whatwg.org/usability-testing-html5" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','blog.whatwg.org']);">blog post referenced by the change proposal</a> (which was put together fourteen days ago) to remove CURIEs from RDFa was the first time that I had ever seen the raw data, or the number of people that had taken part in the study. I passed it by others in the community and it was the first time that they had seen the data as well. There are many, many people that track this stuff and the fact that this was posted in October 2009 and we are just now seeing the data is&#8230; well, I just can&#8217;t explain how the <strong>entire</strong> RDFa community missed this vital piece of information that we have been looking for for the past two years. Anyway, there it is &#8211; all the data on the <em>thorough set of tests</em> run by Google, across potentially hundreds of participants, all for figuring out how key features of Microdata would work.</p>
<h2>Bah &#8211; Confidence, Schmonfidence.</h2>
<p>One of the first things you look for when somebody alludes to a &#8220;scientific study&#8221; are the number of participants. The other thing is &#8220;confidence level&#8221;, which is how sure you can be that what you find is in common with the general population you&#8217;re testing. So, a quick calculation would show us that if we had 100,000 people in the world that write HTML by hand on occasion, and if we wanted to be at least 90% confident of what we find, that we would need roughly 383 people to participate in the study.</p>
<p>So, I scan the study and find them&#8230; <strong><em>all six of them</em></strong>, who will henceforth be known as <em><strong>those six guys</strong></em>. Note: I&#8217;m using the gender-neutral form of <em>guys</em> so as to not be a sexist asshole.</p>
<p><em><strong>Those six guys</strong></em> are far less than the 383 people that you would need for a decent scientific study. Design decisions were made for Microdata based on <em><strong>those six guys</strong></em>. There were supposed to be seven people partaking in the test, but one of them was a no-show. Perhaps it was because they knew some basic statistics and understood that the study was a waste of their time, perhaps it was because they didn&#8217;t want to feel the pressure of making a design decision for the billions of people in the world that use the Web, who knows!</p>
<p>Sure that I had missed something, I read through the study again. I re-checked my calculations on sample size, attempted to figure out what the confidence level for <em><strong>those six guys</strong></em> could be when applied to smaller populations, everything was pointing to something fantastically wrong having happened. Here we were, the RDFa Community, having to defend ourselves against an unknown Google study over the past several years where we believed everything had been done with the mythical exacting precision honed on every problem to cross Google&#8217;s path. There was some sort of deep Google A/B testing that was applied to this study, of this, we were certain.</p>
<p>Take a wild guess at how confident you can be with a population of 100,000 people and then sampling only 6 of them? By sampling <em><strong>those six guys</strong></em>, your minimum confidence level is <strong>54%</strong>. That&#8217;s almost equivalent to the confidence you get by <em>flipping a fucking coin</em>. <em><strong>Those six guys</strong></em> don&#8217;t represent science, they represent random chance. You could put together a test with three donkeys and five chinchillas and be more confident about your findings than the Microdata Usability Study. I suggested the donkey-chinchilla metric to the engineering team at our company and like most of my brilliant ideas, they chose to ignore it, or me. It&#8217;s difficult to tell when people refuse to make eye contact with you.</p>
<h2>One important key to success is self-confidence. Another is not being wrong.</h2>
<p>Ian goes on to draw conclusions from <em><strong>those six guys</strong></em>:</p>
<p><em>&#8220;One thing we weren&#8217;t trying to test but which I was happy to see is that people really don&#8217;t have any problems dealing with URLs as property names. In fact, they didn&#8217;t even complain about URLs being long, which reassured me that Microdata&#8217;s lack of URL shortening mechanisms is probably not an issue.</em></p>
<p>Wait a sec. &#8220;<em>people</em>&#8220;? &#8220;<em>they</em>&#8220;? Who in the hell are we talking about here? Are we talking about <em><strong>those six guys</strong></em>? I&#8217;m pretty sure that&#8217;s who we&#8217;re talking about, not the general Web Developer population. I showed this to some other folks that have a grasp of college-level statistics and it was fun to see them wince and then watch as their heads, figuratively, imploded. One absolutely should not draw any conclusions from the horribly flawed Microdata Usability Study. Ian had asked me a few weeks ago why we hadn&#8217;t done a usability study like the Microdata one and not having known the number of participants in the usability study, I replied that we just didn&#8217;t have the resources that Google did to carry out such a comprehensive study.</p>
<p>But here we are &#8211; a brave new world of &#8220;scientific inquiry&#8221;! So, I headed off with a spring in my step, determined to do as good of a job as the Google Microdata Study. I e-mailed, IMed, phoned and talked my way through until I had responses from 12 people, twice as many as the Google study! I asked them whether or not they found URIs hard to type and found CURIEs useful. BIAS ALERT: These are all people that have deployed or are successfully deploying RDFa as a part of a product. The answer in all cases was unequivocal: &#8220;Don&#8217;t you have anything better to do with your time? Why in the hell are you wasting <em>my</em> time with these questions? Of course CURIEs are necessary to ease authoring, isn&#8217;t it obvious?&#8221;</p>
<p>So, take that Microdata Usability study&#8217;s 54% confidence level! Based on my in-depth study, I&#8217;m at least 65% confident that CURIEs are useful. </p>
<p>Yes, I&#8217;ve done Hallway testing and yes, I&#8217;m aware of things like the Nielsen/Landauer formulas for Usability Testing. Yes, I think that Usability Testing is very important &#8211; <em>when done correctly and with a complete set of alternatives</em>. A single test with six people does not qualify. So, what&#8217;s the lesson here: Oh yes &#8211; it&#8217;s that anecdotal evidence and studies based on <em><strong>those six guys</strong></em> are worth as much as the time it takes to slap them together. That is, it&#8217;s next to worthless. </p>
<p>What is worth something is hard data that is statistically significant &#8211; such as there are <a href="http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tripletalk.wordpress.com']);">at least 430+ million web pages containing RDFa and CURIEs</a> today. That there are currently <a href="http://drupal.org/project/usage/drupal" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','drupal.org']);">23,913 RDFa-enabled Drupal 7 sites using CURIEs right now</a>, which will grow to 350,000+ sites in 2 years. That Google, Yahoo, Bing, Facebook, Flickr, Overstock.com, Best Buy, Tesco, Newsweek, O&#8217;Reilly, The Public Library of Science, the US Whitehouse, and the UK Government among tens of thousands of other websites are successfully using RDFa and CURIEs.</p>
<p>Remove CURIE support from HTML5+RDFa and most of those site&#8217;s meta-data will go dark. I&#8217;m laughing about the prospect of that today, but only because it seems laughable. If CURIEs are removed from HTML+RDFa, I cannot imagine the shit-storm that&#8217;s going to rain down on the RDFa Working Group and the HTML Working Group. Haha. *sob*</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-1593 post type-post status-publish format-standard hentry category-rdfa category-semantic-web" id="post-1593">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/case-for-curies/" rel="bookmark" title="Permanent Link to The Case for Curies"> The Case for Curies</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>February 4, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/case-for-curies/#comments" title="Comment on The Case for Curies">5 Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to The Case for Curies" /><a title="Permanent Link to The Case for Curies" href="http://manu.sporny.org/2011/case-for-curies/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>Should we provide a way for Web developers to shorten URLs? This question is at the core of a super-geeky argument spanning three years about how we can make the Web better. This <em>URL shortening</em> technology was quietly released with <a href="http://en.wikipedia.org/wiki/Rdfa" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','en.wikipedia.org']);">RDFa</a> in 2008 and is known as Compact URI Expression, also known as the CURIE.</p>
<p>We, the Linked Data community, thought that this would be handy for Web developers that want to add things like <a href="http://googlewebmastercentral.blogspot.com/2009/10/help-us-make-web-better-update-on-rich.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','googlewebmastercentral.blogspot.com']);">Google Rich Snippet</a> markup to their web pages. Rich snippets basically allow Web developers to mark up things like movies, people, places and events on their pages so that a search engine can find them and display better search listings for people looking for those particular movies, people, places or events. Basically, RDFa helps people find your web page more easily because the search engines can now better understand what&#8217;s on your Web page.</p>
<p>There are over <a href="http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','tripletalk.wordpress.com']);">430 million Web pages</a> that use RDFa today, based just on Drupal 7&#8242;s release numbers (Drupal 7 includes RDFa by default), there will be over 350,000 websites publishing RDFa in 2 years. So, RDFa and CURIEs are already out there, they&#8217;re being used successfully, and they&#8217;re helping search engines better classify the Web.</p>
<p>It may come as a surprise to you, then, that the HTML Working Group (the people that manage the HTML5 standard) is <a href="http://wiki.whatwg.org/wiki/Change_Proposal_for_ISSUE-120" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','wiki.whatwg.org']);">currently entertaining a proposal to remove CURIEs from HTML+RDFa</a>. <strong>Wait, What!?</strong> You read that correctly &#8211; this would break most of those 430 million web pages out there. Based on the way HTML5 works, if a Web server tells your web browser that it&#8217;s sending a <code>text/html</code> document to the browser, the browser is supposed to use HTML5 to interpret the document. If HTML5+RDFa doesn&#8217;t have CURIE support, that means that all CURIEs are not going to be recognized. All web pages that are currently deployed and using CURIEs correctly and being served as <code>text/html</code> (which is most of them, by the way) will break.</p>
<h2>What are CURIEs and why are they useful?</h2>
<p>CURIEs are a pretty simple concept. Let&#8217;s say that you want to talk about a set of geographic coordinates and you want a search engine to find them easily in your Web page. The example below talks about geographic coordinates for Blacksburg, Virginia, USA. Let&#8217;s say that anytime someone searches for something near &#8220;Blacksburg&#8221; in a search engine that you also want your page to show up in the search results. You would have to tag those coordinates with something like the following in your HTML:</p>
<pre>
&lt;div about="#bburg">
   &lt;span property="latitude">37.229N&lt;/span>
   &lt;span property="longitude">-80.414W&lt;/span>
&lt;div>
</pre>
<p>Unfortunately, it&#8217;s not as simple as the HTML code above because the search engine doesn&#8217;t know for certain that you mean the same &#8220;latitude&#8221; and &#8220;longitude&#8221; that it&#8217;s looking for. To solve this problem, the Web uses URLs to uniquely identify these terms, so the HTML code ends up looking like this:</p>
<pre>
&lt;div about="#bburg">
   &lt;span property="http://www.w3.org/2003/01/geo/wgs84_pos#latitude">37.229N&lt;/span>
   &lt;span property="http://www.w3.org/2003/01/geo/wgs84_pos#longitude">-80.414W&lt;/span>
&lt;div>
</pre>
<p>Now the thing that sucks about the code above is that you will have to type those ridiculously long URLs into your HTML every time that you wanted to talk about latitude and longitude. This is exactly what you have to do in Microdata today. There is a better way in RDFa &#8211; by using CURIEs, we can shorten what we have to type like so:</p>
<pre>
&lt;div prefix="geo: http://www.w3.org/2003/01/geo/wgs84_pos#" about="#bburg">
   &lt;span property="geo:latitude">37.229N&lt;/span>
   &lt;span property="geo:longitude">-80.414W&lt;/span>
&lt;div>
</pre>
<p>Notice how we define a prefix called <code>geo</code> and then we use that prefix for both latitude and longitude. Now, we didn&#8217;t save a great deal of typing above, but imagine if you had to type out 100 or 200 of these types of URLs during the week. How often do you think you would mistype the long form of the URL vs. the CURIE? How difficult would it be to spot errors in the long form of the URL? How much extra typing would you have to do for the long form of the URL? CURIEs make your life easier by reducing the mistakes that you might make when typing out the long form URL and they also save Web developers time when deploying RDFa pages.</p>
<p>In fact, most everyone that we know that uses and deploys RDFa really, really likes CURIEs. Add that to the millions of pages on the Web that use CURIEs correctly and the growing support for them (by deployment numbers) and you would think that this new, useful technology is a done deal.</p>
<h2>So, Who Thinks That CURIEs Are Bad?</h2>
<p>Ian Hickson, the lead editor of the HTML5 specification, really doesn&#8217;t like CURIEs and is leading the charge to remove them from HTML+RDFa. You can <a href="http://wiki.whatwg.org/wiki/Change_Proposal_for_ISSUE-120" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','wiki.whatwg.org']);">read his reasoning here</a>, but in a nut-shell here they are and some quick rebuttals to each point:</p>
<ul>
<li><em>&#8220;People might carelessly copy-paste RDFa markup.&#8221;</em> &#8211; People can do this with HTML5, JavaScript, and XML too, quite easily. Just because people may be careless is not a reason to rip out a technology that is currently being used correctly. Besides, <a href="http://check.rdfa.info/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','check.rdfa.info']);">there are tools</a> to tell you when something goes wrong with your RDFa.</li>
<li><em>&#8220;CURIEs are too difficult for people to understand.&#8221;</em> &#8211; I have a hard time believing that Web developers are so thick that they can&#8217;t understand how to use a CURIE. Web developers are smart and most of them get stuff right, if not the first time, soon thereafter. Sure, some people will get it wrong at first, but that&#8217;s a part of the learning process. I would imagine that many Web developers&#8217; first real-world HTML page would be riddled with issues after the first cut &#8211; that&#8217;s why <a href="http://www.google.com/webmasters/tools/richsnippets" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','www.google.com']);">we have tools to let us know when things go wrong</a>.</li>
<li><em>&#8220;Other technologies don&#8217;t use prefixes.&#8221;</em> &#8211; CSS, C++, JavaScript, XHTML &#8211; all of these use re-bindable variables (aka: prefixes). But let&#8217;s assume that they didn&#8217;t, that still doesn&#8217;t mean that prefixes are bad. That&#8217;s like saying &#8211; your locomotion contraption has this new fangled thing called a &#8220;wheel&#8221; &#8211; none of our horses or riding livestock has this mechanism &#8211; therefore it must be bad.</li>
<li><em>&#8220;People may forget to define prefixes.&#8221;</em> &#8211; Yes, and I may forget to put my pants on before I go out of the house. I&#8217;ll find out I&#8217;ve made a mistake soon enough because there are real-world consequences for making mistakes like this (especially in the winter-time). If someone forgets to define a prefix, their data won&#8217;t show up and their search ranking will stay low. That is, if they don&#8217;t first <a href="http://check.rdfa.info/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','check.rdfa.info']);">use the tools given to them</a> to make sure that they did the right thing.</li>
<li><em>&#8220;CURIEs are unnecessary, people don&#8217;t have a problem typing out full URLs.&#8221;</em> &#8211; I don&#8217;t know about you, but I have a very big problem remembering this URL: <code>http://www.w3.org/2003/01/geo/wgs84_pos#latitude</code> vs. the CURIE for that URL &#8211; <code>geo</code>. It was this last one, particularly, that pegged my irony meter. I&#8217;ll explain below.</li>
</ul>
<p>Now, I&#8217;m not saying that these dangers are not out there. They certainly are &#8211; language design is always a balance between risk and reward, trade-offs in design purity vs. trade-offs in practicality. The people that are building and improving RDFa believe that we have struck the right balance and we should keep CURIEs, even if there is a chance that someone, somewhere will mess it up at some point.</p>
<p>However, I&#8217;d like to point out one fatal flaw in the argument that full URLs are not difficult to work with and that CURIEs are not necessary &#8211; it&#8217;s based upon some &#8220;research&#8221; that Ian points to in his last point. It&#8217;ll be covered in a blog post that I&#8217;ll post tomorrow.</p>
<p><strong>Editorial:</strong> <a href="http://manu.sporny.org/2011/those-six-guys/" >The follow-up blog post discussing the irony of the anti-CURIE stance is now available</a>.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

								
				<!--BEGIN .hentry -->
				<div class="post-6 post type-post status-publish format-standard hentry category-json-ld category-rdfa category-semantic-web" id="post-6">	
                			
					<h2 class="entry-title"><a href="http://manu.sporny.org/2011/semweb-problems-1/" rel="bookmark" title="Permanent Link to JSON-LD: Cycle Breaking and Object Framing"> JSON-LD: Cycle Breaking and Object Framing</a></h2>
                    
                    					<!--BEGIN .clearfix -->
                    <div class="clearfix">		
                    
                        <!--BEGIN .entry-meta .entry-header-->
                        <div class="entry-meta entry-header">
                            <span class="author">By <a href="http://manu.sporny.org/author/manusporny/" title="Posts by ManuSporny" rel="author">ManuSporny</a></span>
                            <span class="published">On <strong>January 24, 2011</strong></span>
                            <span class="entry-categories">In <a href="http://manu.sporny.org/category/json-ld/" title="View all posts in JSON-LD" rel="category tag">JSON-LD</a>, <a href="http://manu.sporny.org/category/rdfa/" title="View all posts in RDFa" rel="category tag">RDFa</a>, <a href="http://manu.sporny.org/category/semantic-web/" title="View all posts in Semantic Web" rel="category tag">Semantic Web</a></span>
                            <span class="comment-count">With <a href="http://manu.sporny.org/2011/semweb-problems-1/#respond" title="Comment on JSON-LD: Cycle Breaking and Object Framing">No Comments</a></span>
                            <span class="permalink"><img src="http://manu.sporny.org/wp-content/themes/classica/images/permalink_icon.png" alt="Permanent Link to JSON-LD: Cycle Breaking and Object Framing" /><a title="Permanent Link to JSON-LD: Cycle Breaking and Object Framing" href="http://manu.sporny.org/2011/semweb-problems-1/">Permalink</a></span>
                                                    <!--END .entry-meta entry-header -->
                        </div>
    
                        <!--BEGIN .entry-content -->
                        <div class="entry-content ">
                            <p>We&#8217;ve been doing a bit of research at Digital Bazaar on how to best meld graph-based object models with what most developers are familiar with these days &#8211; JSON-based object programming (aka: associative-array based object models). We want to enable developers to use the same data models that they use in JavaScript today, but to work with arbitrary graph data.</p>
<p>This is an issue that we think is at the heart of why RDF has not caught on as a general data model &#8211; the data is very difficult to work with in programming languages. There is no native data structure that is easy to work with without a complex set of APIs.</p>
<p>When a JavaScript author gets JSON-LD from a remote source, the graph that the JSON-LD expresses can take a number of different but valid forms. That is, the information expressed by the graph can be identical, but each graph can be structured differently.</p>
<p>Think of these two statements:</p>
<p>The Q library contains book X.<br />
Book X is contained in the Q library.</p>
<p>The information that is expressed in both sentences is exactly the same, but the structure of each sentence is different. Structure is very important when programming. When you write code, you expect the structure of your data to not change.</p>
<p>However, when we program using graphs, the structure is almost always unknown, so a mechanism to impose a structure is required in order to help the programmer be more productive.</p>
<p>The way the graph is represented is entirely dependent on the algorithm used to normalize and the algorithm used to break cycles in the graph. Consider the following example, which is a graph with three top-level objects &#8211; a library, a book and a chapter. Each of the items is related to one another, thus the graph can be expressed in JSON-LD in a number of different ways:</p>
<pre>
{
   "#":
   {
      "dc": "http://purl.org/dc/elements/1.1/",
      "ex": "http://example.org/vocab#"
   },
   "@":
   [
      {
         "@": "http://example.org/test#library",
         "a": "ex:Library",
         "ex:contains":  "<http://example.org/test#book>"
      },
      {
         "@": "<http://example.org/test#book>",
         "a": "ex:Book",
         "dc:contributor": "Writer",
         "dc:title": "My Book",
         "ex:contains": "<http://example.org/test#chapter>"
      },
      {
         "@": "http://example.org/test#chapter",
         "a": "ex:Chapter",
         "dc:description": "Fun",
         "dc:title": "Chapter One"
      }
   ]
}
</pre>
<p>The JSON-LD graph above could also be represented like so:</p>
<pre>
{
   "#":
   {
      "dc": "http://purl.org/dc/elements/1.1/",
      "ex": "http://example.org/vocab#"
   },
   "@": "http://example.org/test#library",
   "a": "ex:Library",
   "ex:contains":
   {
      "@": "<http://example.org/test#book>",
      "a": "ex:Book",
      "dc:contributor": "Writer",
      "dc:title": "My Book",
      "ex:contains":
      {
         "@": "http://example.org/test#chapter",
         "a": "ex:Chapter",
         "dc:description": "Fun",
         "dc:title": "Chapter One"
      }
   }
}
</pre>
<p>Both of the examples above express the exact same information, but the graph structure is very different. If a developer can receive both of the objects from a remote source, how do they ensure that they only have to write one code path to deal with both examples?</p>
<p>That is, how can a developer reliably write the following code:</p>
<pre>
// print all of the books and their corresponding chapters
var library = jsonld.toObject(jsonLdText);
for(var bookIndex = 0; bookIndex < library["ex:contains"].length;
    bookIndex++)
{
   var book = library["ex:contains"][bookIndex];
   var bookTitle = book["dc:title"];
   for(var chapterIndex = 0; chapterIndex < book["ex:contains"].length;
       chapterIndex++)
   {
      var chapter = book["ex:contains"][chapterIndex];
      var chapterTitle = chapter["dc:title"];
      console.log("Book: " + bookTitle + " Chapter: " + chapterTitle);
   }
}
</pre>
<p>The answer boils down to ensuring that the data structure that is built for the developer from the JSON-LD is framed in a way that makes property access predictable. That is, the developer provides a structure that MUST be filled out by the JSON-LD API. The working title for this mechanism is called "Cycle Breaking and Object Framing" since both mechanisms must be operable in order to solve this problem.</p>
<p>The developer would specify a Frame for their language-native object like the following:</p>
<pre>
{
   "#": {"ex": "http://example.org/vocab#"},
   "a": "ex:Library",
   "ex:contains":
   {
      "a": "ex:Book",
      "ex:contains":
      {
         "a": "ex:Chapter"
      }
   }
}
</pre>
<p>The object frame above asserts that the developer expects to get a library containing one or more books containing one or more chapters returned to them. This ensures that the data is structured in a way that<br />
is predictable and only one code path is necessary to work with graphs that can take multiple forms. The API call that they would use would look something like this:</p>
<pre>
var library = jsonld.toObject(jsonLdText, objectFrame);
</pre>
<p>The discussion on this particular issue is continued on the <a href="http://groups.google.com/group/json-ld/browse_frm/thread/7f9c138ab6aa07be" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','groups.google.com']);">JSON-LD mailing list</a>.</p>
                        <!--END .entry-content -->
                        </div>
                        
                    <!--END .clearfix -->
				    </div>     
                          
				<!--END .hentry-->  
				</div>

				
			<!--BEGIN .navigation .page-navigation -->
			<div class="navigation page-navigation">
				<div class="nav-next"></div>
				<div class="nav-previous"></div>
			<!--END .navigation .page-navigation -->
			</div>

						<!--END #primary .hfeed-->
			</div>

		<!--BEGIN #sidebar .aside-->
		<div id="sidebar" class="aside">
			
							
                		
		<!--END #sidebar .aside-->
		</div>

		<!-- END #content -->
		</div>
        
    <!-- END #container -->
    </div> 	
    
    <!-- BEGIN #footer-container -->
    <div id="footer-container">
    	
        <!-- BEGIN #footer-widgets -->
    	<div id="footer-widgets">
        	
            <!-- BEGIN .widget-wrap -->
            <div class="widget-wrap clearfix">
            	
                <!-- BEGIN .widget-section -->
                <div class="widget-section">
                	
                                        
                <!-- END .widget-section -->   
                </div>
                
                <!-- BEGIN .widget-section -->
                <div class="widget-section">
                
                	                    
                <!-- END .widget-section -->   
                </div>
                
                <!-- BEGIN .widget-section -->
                <div class="widget-section">
                
                	                    
                <!-- END .widget-section -->   
                </div>
                
                <!-- BEGIN .widget-section -->
                <div class="widget-section">
                
                	                    
                <!-- END .widget-section -->   
                </div>
            
            <!-- END .widget-wrap -->
       		</div>
            
        <!-- END #footer-widgets -->
        </div>
    
        <!-- BEGIN #footer -->
        <div id="footer" class="clearfix">
        
            <p class="copyright">&copy; Copyright 2014. Powered by <a href="http://wordpress.org/">WordPress</a>.<br /><a href="http://www.premiumpixels.com/classica">Classica Theme</a> by <a href="http://www.premiumpixels.com">Orman Clark</a></p>
            
            <p class="credit"><a href="http://twitter.com/manusporny">Follow @manusporny</a> on Twitter.

<a href="http://linkedin.com/in/manusporny/">Connect with Manu</a> on LinkedIn.</p>
        
        <!-- END #footer -->
        </div>
	
    <!-- END #footer-container -->
	</div>
		
	<!-- Theme Hook -->
	<script type='text/javascript' src='http://manu.sporny.org/wp-content/themes/classica/js/jquery.custom.js?ver=1.0'></script>
			
<!--END body-->
</body>
<!--END html-->
</html>
