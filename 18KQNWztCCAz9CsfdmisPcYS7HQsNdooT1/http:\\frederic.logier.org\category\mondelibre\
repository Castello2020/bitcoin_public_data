http://frederic.logier.org/category/mondelibre/
HTTP/1.1 200 OK
Server: nginx
Date: Tue, 22 Jul 2014 14:50:57 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
Vary: Accept-Encoding
Vary: Cookie
X-hacker: If you're reading this, you should visit automattic.com/jobs and apply to join the fun, mention this header.
X-Pingback: http://frederic.logier.org/xmlrpc.php
Content-Encoding: gzip

<!DOCTYPE html>
<!--[if IE 8]>
<html id="ie8" lang="fr">
<![endif]-->
<!--[if IE 9]>
<html id="ie9" lang="fr">
<![endif]-->
<!--[if !(IE)]><!-->
<html lang="fr">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>MondeLibre | fredix</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://frederic.logier.org/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://s2.wp.com/wp-content/themes/pub/sunspot/js/html5.js?m=1329866217g" type="text/javascript"></script>
<![endif]-->

		<script src='//r-login.wordpress.com/remote-login.php?action=js&amp;host=frederic.logier.org&amp;id=3098224&amp;t=1406040657&amp;back=http%3A%2F%2Ffrederic.logier.org%2Fcategory%2Fmondelibre%2F' type="text/javascript"></script>
		<script type="text/javascript">
		/* <![CDATA[ */
			if ( 'function' === typeof WPRemoteLogin ) {
				document.cookie = "wordpress_test_cookie=test; path=/";
				if ( document.cookie.match( /(;|^)\s*wordpress_test_cookie\=/ ) ) {
					WPRemoteLogin();
				}
			}
		/* ]]> */
		</script>
		<link rel="alternate" type="application/rss+xml" title="fredix &quot; Flux" href="http://frederic.logier.org/feed/" />
<link rel="alternate" type="application/rss+xml" title="fredix &quot; Flux des commentaires" href="http://frederic.logier.org/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="fredix &quot; Flux de la catégorie MondeLibre" href="http://frederic.logier.org/category/mondelibre/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script>
<link rel='stylesheet' id='all-css-0' href='http://s1.wp.com/_static/??-eJx9j90OgjAMRl/IOTVKwoXxWWDUMejWhnYhvL3DxBiD4a5fc05/7MzGUVJIamM2jNmHJFZiQFh4ogGc/qajEznY/xqGEcQOoNy40bzTBm+R/Fcg76GjrOZJiDTbOXQednc4mqD0Ize6EhG60ABCLNieFrn6WGvZlwO3t2lf5ojl3FrJSZjK77ogrOAj3s/X06WuL1V1G14Au3Tv' type='text/css' media='all' />
<link rel='stylesheet' id='ubuntu-css'  href='http://fonts.googleapis.com/css?family=Ubuntu%3A400%2C300&#038;ver=20120821' type='text/css' media='all' />
<link rel='stylesheet' id='all-css-2' href='http://s0.wp.com/_static/??-eJx9j1ELwjAMhP+QNZv2wRfxt3Rd7CJtU5aU4b+3TJGJsLc7ct+Rg6UYz1kxK+iECQVKHUBqlsIKlD2IPiOapXhORy9yAILMSo2Sr3gfNl2pmhJroJYJyCayd0qcf4y5R0fzHjrjEDk0GaClNvYP+vw+WQiRBxf3WhcaA6qslYF5nNGN64Jbuva2s31/unTnxwtrQ2kg' type='text/css' media='all' />
<link rel='stylesheet' id='print-css-2' href='http://s0.wp.com/wp-content/mu-plugins/global-print/global-print.css?m=1387483371g' type='text/css' media='print' />
<script type='text/javascript'>
/* <![CDATA[ */
var LoggedOutFollow = {"invalid_email":"Votre souscription n'a pas abouti, veuillez r\u00e9essayer avec une adresse email valide."};
/* ]]> */
</script>
<script type='text/javascript' src='http://s1.wp.com/_static/??-eJyFjd0KwjAMRl/IrttQ8EZ8lv1kJbVtapOu6NNbQUFR2FVCcr7v6BLVREEgiLasPY3oQGWGNJh6UxgWaizvdOUwTC7PwE/QXjOk22tsAsqjSYNA4zG84Q9rJBYPzFX55/utwrAilE3MgsRhuqgEjPef1tGRUdFlg4F13Q3MlEUt5BwVXXA2IDVz9qdu37aHY9e3vX0APQlvpA=='></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://fredix.wordpress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://fredix.wordpress.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress.com" />
<link rel="shortcut icon" type="image/x-icon" href="http://s2.wp.com/i/favicon.ico?m=1405977958g" sizes="16x16 24x24 32x32 48x48" />
<link rel="icon" type="image/x-icon" href="http://s2.wp.com/i/favicon.ico?m=1405977958g" sizes="16x16 24x24 32x32 48x48" />
<link rel="apple-touch-icon-precomposed" href="http://s0.wp.com/i/webclip.png?m=1391188133g" />
<link rel='openid.server' href='http://fredix.wordpress.com/?openidserver=1' />
<link rel='openid.delegate' href='http://fredix.wordpress.com/' />
<link rel="search" type="application/opensearchdescription+xml" href="http://frederic.logier.org/osd.xml" title="fredix" />
<link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com" />
<meta name="application-name" content="fredix" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-task" content="name=Souscrire;action-uri=http://frederic.logier.org/feed/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=S&#039;inscrire pour un blog gratuit;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=Support WordPress.com;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico" /><meta name="title" content="Articles à propos de MondeLibre sur fredix" />
<meta name="description" content="Articles classés MondeLibre écrits par fredix" />
<style type="text/css" id="syntaxhighlighteranchor"></style>
</head>

<body class="archive category category-mondelibre category-22328751 mp6 highlander-enabled highlander-dark">
<div class="sunstrip"></div>
<div id="page" class="hfeed site">
	<div id="wrapper" class="wrap">
				<header id="masthead" class="site-header" role="banner">
			<div class="site-header-inner">

				
				<hgroup>
					<h1 class="site-title"><a href="http://frederic.logier.org/" title="fredix" rel="home">fredix</a></h1>
					<h2 class="site-description"></h2>
				</hgroup>

				<nav role="navigation" class="site-navigation main-navigation">
					<h1 class="assistive-text">Menu</h1>
					<div class="assistive-text skip-link"><a href="#content" title="Aller au contenu principal">Aller au contenu principal</a></div>

					<div class="menu"><ul><li ><a href="http://frederic.logier.org/">Accueil</a></li><li class="page_item page-item-2"><a href="http://frederic.logier.org/about/">A propos</a></li><li class="page_item page-item-161"><a href="http://frederic.logier.org/code/">Code</a></li><li class="page_item page-item-5"><a href="http://frederic.logier.org/cv/">CV</a></li><li class="page_item page-item-9"><a href="http://frederic.logier.org/liens/">Liens</a></li><li class="page_item page-item-15 page_item_has_children"><a href="http://frederic.logier.org/textes/">Textes</a><ul class='children'><li class="page_item page-item-13"><a href="http://frederic.logier.org/textes/armitage/">Armitage</a></li><li class="page_item page-item-23"><a href="http://frederic.logier.org/textes/developpement-linux/">Développement Linux</a></li><li class="page_item page-item-7"><a href="http://frederic.logier.org/textes/manifeste-du-hacker/">Manifeste du Hacker</a></li><li class="page_item page-item-169"><a href="http://frederic.logier.org/textes/publications/">Publications</a></li></ul></li></ul></div>
				</nav>

				
			</div><!-- .site-header-inner -->
		</header><!-- #masthead .site-header -->

		<div id="main">
		<section id="primary" class="site-content">
			<div id="content" role="main">

			
				<header class="page-header">
					<h1 class="page-title">
						Archives de Cat&eacute;gorie: <span>MondeLibre</span>					</h1>
									</header>

				
								
					<article id="post-556" class="post-556 post type-post status-publish format-standard hentry category-mondelibre tag-apple tag-google">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2014/06/07/google-vs-apple-vs/" rel="bookmark">Google vs Apple vs &#8230;&nbsp;?</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2014/06/07/google-vs-apple-vs/" title="23:59" rel="bookmark"><time class="entry-date" datetime="2014-06-07T23:59:21+00:00" pubdate>7 juin 2014</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2014/06/07/google-vs-apple-vs/#respond" title="Commentaire sur Google vs Apple vs &#8230;&nbsp;?"><span class="no-reply">0</span></a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Je viens de tomber sur cet article <a href="http://www.ginjfo.com/actualites/politique-et-economie/google-vs-apple-visions-tres-differentes-20140607" target="_blank">Google vs Apple, des visions très différentes</a> c&rsquo;est l&rsquo;occasion pour moi de rebondir sur ce sujet qui me titille.</p>
<p>La dernière <a href="https://developer.apple.com/wwdc/" target="_blank">WWDC</a> d&rsquo;Apple a été l&rsquo;occasion de démontrer les dernières avancées autour de l&rsquo;intégration entre leurs devices. On pourra ainsi commencer l&rsquo;écriture d&rsquo;un email sur son iPhone ou iPad et le finir sur son Mac. De même on pourra répondre à un appel téléphonique depuis son Mac. Apple mise en force sur le matériel et le logiciel natif le tout lié par iCloud. Google, semble en effet différer puisqu&rsquo;il mise tout sur ses services web, bien qu&rsquo;il propose également des smartphones et tablettes nexus il est absent du desktop, chromeOS étant tout sauf un succès.</p>
<p>En fait tout découle de leur business model. Celui d&rsquo;Apple est basé sur la vente de matériels, il est donc condamné à innover régulièrement sur ce secteur. Celui de Google est basé sur son moteur de recherche et la publicité qui est leur pompe à fric, il est donc condamné à conserver son leadership dans le search en s&rsquo;appuyant sur leurs services web annexes, et tous les matériels sous android.</p>
<p>Qui a raison, qui peut gagner, impossible à dire, le vrai problème est que les deux peuvent gagner indéfiniment&#8230; On entre dans une nouvelle ère où l&rsquo;informatique s&rsquo;étend vers des matériels jusque là isolés ; les véhicules, les lunettes, les montres, les maisons, etc. or même si les premiers utilisateurs seront vu comme des passionnés frimeurs fortunés, nul doute que le coût d&rsquo;acquisition baissera et sera accessible au plus grand nombre. Le choix du consommateur ne sera plus quel matériel lui fait envie mais à quel univers il souhaite se lier, et de fait la question sera également imposée à tous les développeurs&#8230;</p>
<p>Rien de surprenant dans tout cela pour qui s&rsquo;intéresse à ces sujets, mais les derniers scandales autour de la vie privée repose la question sur des alternatives à ces services propriétaires. Il s&rsquo;agit bien de services et non de logiciels, par exemple l’interaction de plus en plus forte des iPhone avec iCloud va rendre ce dernier obligatoire. De même pour android avec un compte Google&#8230;</p>
<p>La seule alternative du libre, qui peut paraître crédible est celle de Mozilla avec <a href="http://www.mozilla.org/fr/firefox/os/" target="_blank">Firefox OS</a>. Je ne parlerai pas de celle de <a href="http://www.ubuntu.com/" target="_blank">Ubuntu</a>, qui prend bien trop son temps depuis des années malheureusement. Un des problèmes de Mozilla à mes yeux est de réduire l&rsquo;informatique et Internet au web, d&rsquo;en faire le dénominateur commun&#8230; Mettre à la trappe de nombreux outils, langages, et technologies pour se baser uniquement sur la moins pertinente techniquement est une grossière erreur, pour rester poli&#8230;</p>
<p>Il est à noter malgré tout qu&rsquo;après des années d&rsquo;extrémismes anti-cloud, mozilla se sent obligé de proposer des services, un <a href="https://marketplace.firefox.com" target="_blank">market</a> et <a href="https://account.services.mozilla.com/" target="_blank">account</a> ; quand la réalité du monde percute les idéaux les plus stupide il ne reste pas grand chose&#8230; Je suis pour ma part convaincu depuis des années que le libre se doit de proposer des services, mais il n&rsquo;y a pas malheureusement un libre mais des libres &#8230; Le libre étant constitué de communautés qui travaillent souvent sur des solutions proches voir concurrentes des noyaux aux desktops, ce qui faisait notre force il y a des années, nous réduit en simple fournisseur de briques logiciels pour des fournisseurs de services ou pour les quelques utilisateurs que nous auront pu conserver.</p>
<p>Aussi j&rsquo;ai bien peur qu&rsquo;une alternative libre et respectueuse de la vie privée, fournissant des services voir aussi des matériels tels que ceux proposés par Google et Apple ne voit jamais le jour. Il est impossible que le libre puisse s&rsquo;unifier afin de faire naître cela de manière homogène, cependant il y a quelques lueurs d&rsquo;espoirs de faire autrement. Lorsque je regarde un produit 100% hacker tel que <a href="https://bitcoin.org" target="_blank">bitcoin</a> obtenir un si gros succès en si peu de temps je pense que cela peu nous montrer la voie vers des services complètement décentralisés et spécialisés. Un de ces nouveaux service spécialisé basé sur le moteur de bitcoin est <a href="http://twister.net.co/" target="_blank">twister</a> qui est à mes yeux une alternative hautement crédible à twitter, même s&rsquo;il est infiniment loin d&rsquo;espérer atteindre la même base d&rsquo;utilisateurs avant des années. Le libre arrive parfois à accoucher de pépites, or pourquoi pas imaginer qu&rsquo;un jour ces pépites puissent arriver à communiquer entre elles afin de fournir un service homogène pour les utilisateurs ? Entre temps il faudra que les libristes, les utilisent, les promeus, les hacks, au lieu de les ignorer tout en utilisant des services propriétaires centralisés&#8230; et pour les autres qui n&rsquo;utilisent ni l&rsquo;un ni l&rsquo;autre, il s&rsquo;isoleront dans leur grotte chaque jour plus seul ; numériquement bien sûr <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span></p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>.			</span>
			
						<span class="tag-links">
				Tagué <a href="http://frederic.logier.org/tag/apple/" rel="tag">Apple</a>, <a href="http://frederic.logier.org/tag/google/" rel="tag">Google</a>.			</span>
					
			</footer><!-- #entry-meta -->
</article><!-- #post-556 -->

				
					<article id="post-527" class="post-527 post type-post status-publish format-standard hentry category-mondelibre category-nodecast tag-mongodb tag-qt tag-zeromq">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2013/04/01/nodecast-passe-present-et-avenir/" rel="bookmark">Nodecast : passé, présent et&nbsp;avenir</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2013/04/01/nodecast-passe-present-et-avenir/" title="12:46" rel="bookmark"><time class="entry-date" datetime="2013-04-01T12:46:55+00:00" pubdate>1 avril 2013</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2013/04/01/nodecast-passe-present-et-avenir/#respond" title="Commentaire sur Nodecast : passé, présent et&nbsp;avenir"><span class="no-reply">0</span></a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Voici un moment que je n&rsquo;avais pas trouvé le temps d&rsquo;écrire un nouvel article sur <a href="https://github.com/nodecast" target="_blank">nodecast</a>. Depuis le dernier en juillet 2012, il y a eu énormément d&rsquo;apprentissage et d&rsquo;avancées, et même si ce projet n&rsquo;est pas encore prêt à être utilisé en dehors de mon usage, j&rsquo;ai bon espoir qu&rsquo;il puisse être présentable d&rsquo;ici quelques mois.</p>
<h3>Passé</h3>
<p>A l&rsquo;origine j&rsquo;avais débuté ce projet en tant que backend de mon projet de supervision système <a title="nodecast.net" href="http://nodecast.net/" target="_blank">nodecast.net</a>. Le frontend web étant en Ruby on Rails il m&rsquo;a paru évident d&rsquo;utiliser Ruby pour le backend. Il avait pour but de recevoir les payloads envoyées par mon client natif en Qt/C++ et qui contenaient les informations système (CPU, réseau, mémoire, etc). J&rsquo;ai utilisé pour ce backend différents serveurs de file d&rsquo;attente afin de le rendre asynchrone, propriété impérative à tout système ayant la prétention de tenir la charge. Il s&rsquo;est avéré qu&rsquo;avec juste quelques clients le backend montait rapidement en charge CPU et mémoire, la faute au langage script et aux innombrables couches de bibliothèques.</p>
<p>Il me fallait donc un langage compilé ce qui me permettait de plus d&rsquo;éviter des bindings vers mongodb pas forcément optimisé et à jour. Utilisant Qt pour mon client desktop, je me suis lancé dans la réécriture du backend en Qt/C++. Ruby fut malgré tout intéressant car il me permit de développer rapidement un prototype.</p>
<p>La réécriture du backend se fit en plusieurs passes, en fonction des technologies que je testais et des contraintes qui s&rsquo;imposaient. L&rsquo;objectif étant d&rsquo;avoir un minimum de dépendances vers des outils annexes et une stack très légère permettant d&rsquo;exploiter l&rsquo;ensemble sur un environnement matériel très léger ou ancien. Pour cela Zeromq supprime la dépendance d&rsquo;un serveur de file d&rsquo;attente tout en fournissant les mêmes propriétés, hormis la persistance disque. Je l&rsquo;ai réglé en stockant les payloads dans mongoDB en sus des autres données.</p>
<p>Coté fonctionnalité, mon backend était typé en fonction du métier de la supervision. J&rsquo;ai donc travaillé pour sortir le métier du serveur ncs vers des workers externe, cela afin de le rendre générique et facilement adaptable à des besoins différents. Ce travail pris tellement de l&rsquo;ampleur que j&rsquo;ai fini par percevoir plus d&rsquo;intérêt. En effet si un backend générique asynchrone pouvait voir le jour, il permettrait de développer plus rapidement des logiciels, laissant le développeur se concentrer sur son cœur de métier. De plus cela permettrait de séparer l&rsquo;IHM des traitements, ce qui procure l&rsquo;immense avantage de développer facilement plusieurs IHM (desktop, mobile, web).</p>
<p>Les payloads envoyées sur l&rsquo;API HTTP peuvent être du json ou bien des fichiers binaires. Dans ce dernier cas nodecast les stocke dans <a title="gridfs" href="http://docs.mongodb.org/manual/applications/gridfs/" target="_blank">GridFS</a> pour les transmettre immédiatement aux workers ou lorsqu&rsquo;un worker en fait la demande. Comme usage on peut très bien imaginer envoyer à nodecast des fichiers vidéos pour les faire traiter à différents workers qui vont les transcoder, les dupliquer, les distribuer, etc. L&rsquo;upload HTTP ayant ses limites, le service FTP permettra d&rsquo;envoyer de gros fichiers avec possibilité de resume en cas de coupure.</p>
<h3>Présent</h3>
<p>A ce jour l&rsquo;architecture est basée sur <a title="Qt" href="http://qt-project.org/" target="_blank">Qt</a>, <a title="zeromq" href="http://www.zeromq.org/" target="_blank">Zeromq</a> et <a title="mongodb" href="http://www.mongodb.org/" target="_blank">mongoDB</a>. J&rsquo;étais parti sur le postulat d&rsquo;offrir des services embarqués dans des threads, ceci pour simplifier l&rsquo;installation et la configuration. C&rsquo;était cependant une erreur de sécurité, une simple faille dans un service (FTP par exemple) aurait compromis l&rsquo;ensemble du processus <a title="ncs" href="https://github.com/nodecast/ncs" target="_blank">ncs</a> de nodecast, ensuite cela aurait obligé de futurs contributeurs à utiliser Qt/C++ et à m&rsquo;assurer de chaque ligne de code de leur service avant de l&rsquo;intégrer.</p>
<p>Je travaille donc actuellement à externaliser ces services, cependant sans sacrifier en performance puisqu&rsquo;il resteront en C/C++ ou dans un langage compilé. La difficulté étant de trouver un outil adapté à ces contraintes, j&rsquo;ai fini par trouver le projet <a title="zerogw" href="http://zerogw.com/" target="_blank">zerogw</a> qui est un serveur HTTP en frontal et un backend vers Zeromq. Dans un simple <a title="zerogw.yaml" href="https://github.com/nodecast/ncs/blob/master/services/zerogw/zerogw.yaml" target="_blank">fichier de configuration</a>, ce serveur permet grâce à des règles de routage de transférer les requêtes HTTP vers le serveur nodecast. Les performances de zerogw sont incomparables avec ce que je pouvais espérer avec la <a title="qxt" href="http://libqxt.bitbucket.org/doc/tip/qxtweb.html" target="_blank">libqxt</a> et cela me permet d&rsquo;installer ce service sur une machine dédiée, nodecast restant alors au chaud sur un serveur non routable depuis l&rsquo;extérieur.</p>
<p>Les deux autres services HTTP sont l&rsquo;IHM web d&rsquo;administration et le tracker bittorrent. Pour cela j&rsquo;ai trouvé l&rsquo;excellent <a title="treefrogframework" href="http://www.treefrogframework.org/" target="_blank">treefrogframework</a> qui propose une stack façon Ruby on Rails en Qt/C++. Cependant puisque les services nodecast seront externes, au même titre que les workers, il sera tout à fait possible de les développer dans un autre langage tel que <a title="Go" href="http://golang.org/" target="_blank">Go</a>  qui possède des frameworks web (<a title="revel" href="http://robfig.github.com/revel/" target="_blank">Revel</a>, <a title="gorilla" href="http://www.gorillatoolkit.org/" target="_blank">Gorilla</a>) . Quant au service FTP, rien de plus simple de sortir celui que j&rsquo;ai développé à partir de <a title="CftpServer" href="http://cftpserver.sourceforge.net/" target="_blank">CftpServer</a>.</p>
<p>L&rsquo;idée finale étant que ces services communiquent avec nodecast via zeromq voir également via stdin/stdout comme les workers.</p>
<h3>Futur</h3>
<p>Nodecast, et plus précisément le serveur <a title="ncs" href="https://github.com/nodecast/ncs" target="_blank">ncs</a>, se présentera comme un HUB entre des workers et des services. L&rsquo;utilisateur pourra l&rsquo;utiliser via l&rsquo;API HTTP et les différents services, et effectuer ses traitements métiers dans ses workers. L&rsquo;enchaînement de ses traitements se fait via un workflow qu&rsquo;il définit lui même. Le workflow est pour l&rsquo;instant très basique puisque c&rsquo;est une simple suite ordonnée (worker1 puis worker2, etc). A long terme je souhaite pouvoir conditionner les enchaînements par exemple si le worker1 renvoit true -&gt; worker2a sinon worker2b, puis avec des conditions plus complexes (présence de fichier, date, etc) grâce au <a title="statemachine" href="http://doc.qt.digia.com/4.6/statemachine-api.html">state machine framework</a> de Qt.</p>
<p>Enfin le deux derniers services à finaliser seront le serveur XMPP et le tracker bittorrent. Ils permettront la communication et le partage de fichiers entre des utilisateurs depuis une interface native dédiée à cela, cette interface fait partie de mon prochain projet nodeseed.</p>
<p><a href="http://fredix.files.wordpress.com/2013/04/ncs_dev.png"><img class="alignnone size-large wp-image-533" alt="ncs architecture" src="http://fredix.files.wordpress.com/2013/04/ncs_dev.png?w=545&#038;h=538" width="545" height="538" /></a></p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>, <a href="http://frederic.logier.org/category/nodecast/" rel="category tag">nodecast</a>.			</span>
			
						<span class="tag-links">
				Tagué <a href="http://frederic.logier.org/tag/mongodb/" rel="tag">mongodb</a>, <a href="http://frederic.logier.org/tag/qt/" rel="tag">Qt</a>, <a href="http://frederic.logier.org/tag/zeromq/" rel="tag">zeromq</a>.			</span>
					
			</footer><!-- #entry-meta -->
</article><!-- #post-527 -->

				
					<article id="post-503" class="post-503 post type-post status-publish format-standard hentry category-mondelibre">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2012/12/14/le-monde-selon-le-libre/" rel="bookmark">le monde selon le&nbsp;Libre</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2012/12/14/le-monde-selon-le-libre/" title="15:40" rel="bookmark"><time class="entry-date" datetime="2012-12-14T15:40:07+00:00" pubdate>14 décembre 2012</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2012/12/14/le-monde-selon-le-libre/#comments" title="Commentaire sur le monde selon le&nbsp;Libre">1</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Ce texte tente d&rsquo;être une réponse à <a href="http://ploum.net/post/le-monde-selon-Google" target="_blank">le monde selon Google</a> de <a href="http://ploum.net/" target="_blank">ploum</a>.</p>
<p>En 2020 l’hégémonie du Triumvirat Google-Apple-Amazon est à son comble. Pour les consommateurs il ne s&rsquo;agit plus de choisir une télévision, une voiture, un ordinateur, un smartphone ou une tablette, il s&rsquo;agit de choisir un écosystème dans lequel son expérience sera comblée.</p>
<p>A cette époque le logiciel libre sur les terminaux utilisateurs est réduit à une peau de chagrin, celle de certains informaticiens et libertaires qui préfèrent sacrifier les facilités que procurent les écosystèmes fermés sur l&rsquo;autel de leur indépendance.. Après des années de dénis, de dénigrement et de mauvaise fois, une frange de cette communauté décida de développer les fondations amenant à la naissance d&rsquo;un écosystème libre respectant l’étique du Libre et l&rsquo;architecture décentralisée d&rsquo;Internet.</p>
<p>Le projet Avalon fut créé, non sans difficultés et heurts. Il avait pour principe de fournir des outils et protocoles permettant à n&rsquo;importe qui de développer un logiciel sans se préoccuper de la confidentialité, de la scalabilité, du stockage, du partage des données et de leur redondance. Ce fut une avancée majeure pour le libre, ainsi il pouvait proposer des fonctionnalités présentes depuis des décennies dans les écosystèmes propriétaires.</p>
<p>Avalon fut rapidement intégré dans les distributions Linux, lequelles offrirent également un service en ligne qui permettait d&rsquo;associer le compte de l&rsquo;utilisateur Linux à leur propre instance. De plus en plus de logiciels natifs intégrèrent l&rsquo;API d&rsquo;Avalon ce qui permit de sauvegarder les préférences de configuration dans Avalon mais aussi les données de ces logiciels. Cela commença par de simple éditeur de texte via des plugins, puis lorsque les retours utilisateurs enthousiastes fusaient de toute part, des poids lourds comme OpenOffice intégrèrent l&rsquo;API nativement ainsi que des logiciels de chat, musique, mail, et même des sites web.</p>
<p>Les utilisateurs découvrirent les avantages de la fusion du natifs et d&rsquo;Internet, puisque leurs documents étaient sauvegardés sur plusieurs noeuds, mais l&rsquo;API permettait aussi l&rsquo;édition à plusieurs. Les avantages du web sans les limitations de ses interfaces de programmation.</p>
<p>Avalon était tellement optimisé que les utilisateurs avancés pouvaient l&rsquo;installer dans un device léger au fond d&rsquo;un placard. Avalon intégrait nativement une réplication en P2P avec ses contacts. Les données étaient chiffrées et répliqués, une simple commande permettaient de les récupérer en cas de crash de son instance locale. Avalon fut tellement adopté que toutes les distributions l&rsquo;avaient intégré au point qu&rsquo;un utilisateur pouvait installer à nouveau une machine, l&rsquo;associer à son compte Avalon puis en quelques minutes retrouver les logiciels déjà installé par ailleurs avec leurs données de configuration et les données utilisateurs correspondantes pour chacun d&rsquo;eux.</p>
<p>Avalon atteignit son apogée dans le Libre, lorsque <a href="http://www.cyanogenmod.org/" target="_blank">cyanogenmod</a> intégra les API d&rsquo;Avalon par défaut. Les tablettes, smartphone et télévisions sous Android étaient synchronisable avec ses desktops Linux. De nombreuses applications Android utilisèrent son API plutôt que celle de Google. <a href="https://www.haiku-os.org/" target="_blank">HaikuOS</a> fit de même ainsi que<a href="http://jolla.com/" target="_blank"> Jolla Mobile</a>.</p>
<p>Avalon devint un standard du Libre et de tous les écosystèmes alternatifs. L&rsquo;intégration avec l&rsquo;OS était telle que les services de réseaux sociaux historique n&rsquo;avaient plus d&rsquo;intérêt, en effet on avait son réseau social intégré dans toutes les applications de son système. Il était devenu complètement désué de devoir aller sur un site web dédié ou de lancer une application dédié pour communiquer avec son réseau.</p>
<p>Les développeurs d&rsquo;Amazon, Mac, et même du vieux système Windows encore sur le marché malgré sa chute libre depuis 2017,  souhaitèrent à ce moment là utiliser l&rsquo;API d&rsquo;Avalon plutôt que celles de leurs OS éponyme. Cela leur économisait des coûts de licence vers les clouds et surtout la demande de leurs utilisateurs étaient de plus en plus tenace. A ce moment là les développeur d&rsquo;Avalon ajoutèrent le service <a href="http://bitcoin.org/" target="_blank">Bitcoin</a> nativement. Cette monnaie était de plus en plus utilisée et la demande était forte pour vendre et acheter du contenu numérique à travers Avalon.</p>
<p>Le Triumvirat ne supporta pas l&rsquo;arrivée sur leur plate-bande d&rsquo;Avalon, qui permettait aux développeurs et surtout à leurs consommateurs d&rsquo;échapper à leurs contrôles et à leurs taxes. Bitcoin fut la goutte de trop et ils firent pression auprès des gouvernements qui n&rsquo;attendaient que ça pour rendre illégal Avalon.</p>
<p>Malgré une mobilisation mondiale et une résistance farouche d&rsquo;hacktivistes, le point d&rsquo;Achille fut rapidement trouvé en stoppant les DNS d&rsquo;Avalon.</p>
<p>Aujourd&rsquo;hui, 2022. Internet est splitté. Avalon a comblé sa dernière faille, son dernier point central, en basculant sur <a href="http://dot-bit.org/Main_Page" target="_blank">Namecoin</a>, un DNS en P2P basé sur Bitcoin. La bataille est loin d&rsquo;être terminée, mais Avalon attirant de plus en plus d&rsquo;utilisateurs et une économie florissante il obtient chaque jour plus de soutiens. Les FAIs ont de plus en plus de pressions via des lois pour scruter ce réseau parallèle et le bloquer. En contrepartie des FAIs locaux alternatifs poussent partout, ils ne supportent qu&rsquo;Avalon et son DNS en P2P.</p>
<p>La bataille est loin d&rsquo;être terminée, mais l&rsquo;économie numérique basée sur Avalon étant de plus en plus florissante, il devient difficile pour les gouvernements de justifier son éradication. Hier Google a du faire un premier pas en se rendant compatible avec Avalon, ils ne pouvaient continuer à rester isolé d&rsquo;un nombre de plus en plus grand d&rsquo;utilisateurs. Google n&rsquo;est plus qu&rsquo;un noeud, mais il est certainement trop tard pour eux, sur Avalon tout le monde utilise <a href="http://www.seeks-project.info" target="_blank">seeks</a>&#8230;</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>.			</span>
			
					
			</footer><!-- #entry-meta -->
</article><!-- #post-503 -->

				
					<article id="post-481" class="post-481 post type-post status-publish format-standard hentry category-mondelibre category-nodecast tag-mongodb tag-qt">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2012/07/12/nodecast-evolution-vers-un-ordonnanceur-opensource/" rel="bookmark">Nodecast : évolution vers un ordonnanceur&nbsp;opensource</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2012/07/12/nodecast-evolution-vers-un-ordonnanceur-opensource/" title="11:25" rel="bookmark"><time class="entry-date" datetime="2012-07-12T11:25:13+00:00" pubdate>12 juillet 2012</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2012/07/12/nodecast-evolution-vers-un-ordonnanceur-opensource/#comments" title="Commentaire sur Nodecast : évolution vers un ordonnanceur&nbsp;opensource">2</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Depuis mon dernier article sur <a href="http://frederic.logier.org/category/nodecast/">nodecast</a> en novembre 2011 j&rsquo;ai depuis extraordinairement avancé. Historiquement <a href="http://nodecast.net/" target="_blank">Nodecast.net</a> représentait pour moi un outil de monitoring système, via un client natif desktop et un backend asynchrone. J&rsquo;ai rapidement décidé de rendre ce backend agnostique pour qu&rsquo;il puisse être utilisé par tous types de projets. Le site du projet est donc <a href="http://www.nodecast.org/" target="_blank">Nodecast.org</a> qui renvoie pour l&rsquo;instant sur le compte github en attendant une page web de présentation.</p>
<p>Nodecast devient donc officiellement un ordonnanceur, même si ce terme est encore très pompeux face aux ténors propriétaires du marché. Je ne sais pas encore ce qu&rsquo;il adviendra du projet de monitoring, ni si j&rsquo;aurais le temps et l&rsquo;envie de le migrer vers la nouvelle version de Nodecast. Côté desktop j&rsquo;ai à vrai dire une idée de projet plus excitante <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span></p>
<p>A ce jour Nodecast permet de gérer des workers qui reçoivent en paramètre un exécutable à lancer. Une fois enregistré, on poste en HTTP un JSON qui contient un workflow d&rsquo;enchainement des workers, exemple :</p>
<pre>curl -H "X-workflow: test" -d '{ "ls": 1, "rm": 2}' --user "user@email.com:16dsqqs" 

http://127.0.0.1:4567/workflow/create</pre>
<p>Le premier worker qui s&rsquo;exécutera s&rsquo;appelle &quot;ls&quot; et le deuxième &quot;rm&quot;, ils lancent bien entendu les commandes éponymes.  L&rsquo;API renvoi un uuid à utiliser par la suite.</p>
<p>On poste ensuite le fichier binaire ou texte que l&rsquo;on souhaite traiter, ici <em><strong>qxmpp-0.4.0.tar.gz</strong></em> :</p>
<pre>curl -H "X-workflow-uuid: 66e994e8-1824-4604-bcf0-f1a321986888" 
-H "X-node-uuid: d4bd950b-7a04-4ff3-bf73-f840947d1171" 
-H "X-node-password: 69df62ab-4084-4e22-b788-6803c80c9931" 
-H "X-payloadfilename: qxmpp-0.4.0.tar.gz" 
-X POST --data-binary @qxmpp-0.4.0.tar.gz 

http://127.0.0.1:4567/payload/create</pre>
<p>Les informations à fournir sur le node (le serveur qui POST) sont obtenues auparavant par la commande suivante :</p>
<pre>curl -H "X-nodename: your-node-name" --user "email:token" http://127.0.0.1:4567/node/create</pre>
<p>Le fichier est ensuite stocké par Nodecast dans <a href="http://www.mongodb.org/display/DOCS/GridFS+Specification">GridFS</a>, puis extrait dans le filesystème et son path transmis au premier worker. le retour de la commande (ls dans cet exemple) et transmis au deuxième worker, via Nodecast, qui la donne en paramètre à son exécutable (rm ici). Rien de transcendant comme exemple, mais grâce à l&rsquo;architecture de Nodecast basée sur <a href="http://www.zeromq.org/" target="_blank">Zeromq</a>, il est possible de lancer de multiples workers &quot;ls&quot; et &quot;rm&quot;, les messages seront alors transmis à une instance aléatoire de chaque type de worker. La connexion entre les workers et Nodecast étant en TCP il est bien sur possible de répartir les workers sur une grappe de serveurs. Attention le fichier transmis à Nodecast étant stocké sur le file system, il faudra un partage NFS pour que les workers y aient accès en réseaux. Je souhaite cependant utiliser les fonctionnalités de stream de données de Zeromq pour la transmission vers les workers.</p>
<p>Mon prochain gros travail sera de terminer les workers de type service et leur éventuel communication avec les workers. Ensuite développer une API qui permettra de développer des IHM afin de connaitre l&rsquo;état des workers, les piloter, etc &#8230;</p>
<p>Pour finir voici les derniers schémas côté utilisateur et développeur</p>
<p><a href="http://fredix.files.wordpress.com/2012/07/ncs_user.png"><img class="alignnone size-full wp-image-484" title="ncs_user" alt="" src="http://fredix.files.wordpress.com/2012/07/ncs_user.png?w=545"   /></a></p>
<p><a href="http://fredix.files.wordpress.com/2012/07/ncs_dev.png"><img class="alignnone size-full wp-image-483" title="ncs_dev" alt="" src="http://fredix.files.wordpress.com/2012/07/ncs_dev.png?w=545"   /></a></p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>, <a href="http://frederic.logier.org/category/nodecast/" rel="category tag">nodecast</a>.			</span>
			
						<span class="tag-links">
				Tagué <a href="http://frederic.logier.org/tag/mongodb/" rel="tag">mongodb</a>, <a href="http://frederic.logier.org/tag/qt/" rel="tag">Qt</a>.			</span>
					
			</footer><!-- #entry-meta -->
</article><!-- #post-481 -->

				
					<article id="post-471" class="post-471 post type-post status-publish format-standard hentry category-mondelibre">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2012/03/21/pourquoi-linux-ne-percera-pas-sur-le-desktop/" rel="bookmark">Pourquoi Linux ne percera pas sur le&nbsp;desktop</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2012/03/21/pourquoi-linux-ne-percera-pas-sur-le-desktop/" title="23:28" rel="bookmark"><time class="entry-date" datetime="2012-03-21T23:28:06+00:00" pubdate>21 mars 2012</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2012/03/21/pourquoi-linux-ne-percera-pas-sur-le-desktop/#comments" title="Commentaire sur Pourquoi Linux ne percera pas sur le&nbsp;desktop">17</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<h3>Disclamer</h3>
<p>Voici un billet pourrait sembler aller à  contre sens de mes convictions, cependant je n&rsquo;ai pas honte de dire que des convictions sont parfois amenées à évoluer en fonction de la réalité que l&rsquo;on veut bien accepter. Dans le cas où l&rsquo;on refuse d&rsquo;admettre les faits, il faut accepter l&rsquo;idée de vivre avec sa propre réalité dans sa tête et au final sans doute plus subir que jouir de ses convictions&#8230;</p>
<p>Ce billet n&rsquo;est pas une tentative d&rsquo;excuse, n&rsquo;ayant rien à justifier à personne, mais un simple billet d&rsquo;humeur pour pourrait intéresser quelques gouikers.</p>
<h3>Contexte</h3>
<p>J&rsquo;ai donc eu l&rsquo;occasion de tester un week end complet un vieux macbook blanc. Même si j&rsquo;avais pu lorgner du coin de l&rsquo;oeil un OS X, cela n&rsquo;a rien à voir avec un test complet dans les mains. La première chose qui me vient à l&rsquo;esprit c&rsquo;est OS X est un OS taillé au laser. Il possède une finition remarquable, que cela soit dans les polices, dans les petits détails comme dans l&rsquo;écosystème de store remarquablement bien présenté. La dernière version de l&quot;OS (Lion) ne semble subir d&rsquo;aucun lag même sur ce vieux macbook de 2006. Le matériel est du même niveau avec un trackpad très agréable et beaucoup plus utilisable que les versions PC&#8230;</p>
<p>Je ne vais pas m&rsquo;étendre mais l&rsquo;OS possède une cohérence et une finition qu&rsquo;aucun desktop libre n&rsquo;arrive à approcher, que cela soit GNOME ou KDE. Ubuntu essaye bien de ressembler à OS X, mais il subit la stack Linux/Xorg/GTK ce qui ne lui permettra pas d&rsquo;atteindre ce même niveau d&rsquo;excellence.</p>
<h3>Théorie</h3>
<p>Ma théorie est donc la suivante :</p>
<p>1. Linux est un noyau généraliste, qui essaye tant bien que mal de supporter une multitude de matériels.</p>
<p>2. Xorg est un serveur graphique en userspace qui possède une architecture très adaptée dans un ancien temps mais est archaïque de nos jours.</p>
<p>3. Les projets GNOME et KDE se concentrent uniquement sur les logiciels, ils ignorent sciemment la demande de services en ligne. Ils ne travaillent sur aucune API qui permettrait à un développeur d&rsquo;un logiciel natif desktop de faciliter l&rsquo;utilisation d&rsquo;Internet. Chaque développeur doit donc redévelopper la roue de son côté et s&rsquo;occuper de la partie développement et hébergement côté serveur s&rsquo;il souhaite intégrer des fonctionnalités type cloud (synchronisation des préférences et des données en ligne, &#8230;).</p>
<p>A l&rsquo;inverse Mozilla essaye d&rsquo;adapter le web au desktop (sic) avec le projet <a href="https://wiki.mozilla.org/WebAPI" target="_blank">WebAPI</a>. Il est &quot;amusant&quot; de voir que ceux qui auraient le moins de boulot pour fournir un desktop libre qui exploite Internet ne sont pas ceux qu&rsquo;on aurait pu imaginer&#8230;&#8230;&#8230;&#8230;..</p>
<h3>Faits</h3>
<p>Chez Apple on trouve :</p>
<ol>
<li>Un noyau (micro-noyau peu importe) optimisé pour une gamme de matériel</li>
<li>Une stack graphique moderne et intégrée au plus profond de l&rsquo;OS</li>
<li>Une plateforme de développement cohérente, moderne et dernièrement des API pour exploiter les fonctionnalités d&rsquo;Internet (cloud Apple), afin de proposer des services de synchronisation (datas et apps), backup et partage de données.</li>
</ol>
<p>Les 2 premiers points me rappellent furieusement les Amiga et Atari. Pour rappel pour les plus jeunes, ça été deux énormes succès, les premiers ordinateurs grand public (années 80-90). Ils ont malheureusement fini par échouer plus pour des raisons de stratégies commerciales et d&rsquo;égo des dirigeants que de techniques. Cependant leur réussite a été du à un OS 100% dédié a un type de matériel (et en grande partie en langage assembleur) ce qui permettait des optimisations de folies. Les développeurs d&rsquo;applications tierces connaissaient la plateforme sur le bout des doigts, ils ne perdaient pas leur temps à gérer des configuration matériel tordues.</p>
<p>Face au melon qu&rsquo;ont pris les dirigeants d&rsquo;Atari et Amiga ce qui a bridé le renouvellement de la gamme, les PC à bas coûts fait de bric et de broc ont su séduire  malgré des interfaces MS-DOS bien inférieures&#8230;</p>
<p>Or, ce qui a fait le succès d&rsquo;Atari et Amiga, a été clairement repris par Steve Jobs : Un OS conçu pour le desktop et dédié à un type de matériel. Cette recette est, à mon avis, la seule valable pour rendre l&rsquo;informatique sexy, agréable, intuitive, ergonomique, moderne. Elle a certes le &quot;petit&quot; défaut de lier l&rsquo;utilisateur à cet écosystème logiciel et à des types de matériels et périphériques. Mais c&rsquo;est le prix à payer pour ceux qui souhaite bénéficier de ces avantages, et ce prix étaient d&rsquo;ailleurs  à l&rsquo;époque pleinement accepté par les Ataristes et Amigaiste.</p>
<h3>Conclusion</h3>
<p>Le calcul personnel à faire est donc mettre sur la balance le prix d&rsquo;être lié à une marque et ses technologies proprios face au prix de subir une informatique dépassée qui n&rsquo;apporte plus aucun plaisir. J&rsquo;ai personnellement fait mon choix, car j&rsquo;estime qu&rsquo;en 2012 il est temps que l&rsquo;informatique de bureau devienne un plaisir, quelque chose d&rsquo;intuitif et transparent. Quelle liberté y a t-il a subir ses convictions ?</p>
<p>Pour ces raisons le desktop Linux ne pourra pas arriver aux genoux de ce que propose Apple avec OS X. Seule une entreprise qui ferait le choix de modifier profondément la stack Linux/Xorg pour l&rsquo;optimiser à un matériel spécifique pourrait peut-être commencer à y arriver, encore que l&rsquo;architecture de <a href="http://haiku-os.org/" target="_blank">Haiku OS</a> est à mon sens plus adapté par design.</p>
<p>Bien entendu le bureau Linux aura toujours son public, mais un public restreint, différent de la foule toujours plus grande qui souhaite se faire plaisir à utiliser un environnement sexy qui rend de plus en plus de services.  Si des communautés du libre pensent prétendre un jour opposer une alternative, il faudra autre chose que des paroles qui exigent au grand public de devenir informaticien pour &quot;s&rsquo;auto-héberger&quot;. Il faudra arrêter de troller, sortir le doigt de son derrière et tapoter sur son clavier pour coder une alternative sexy qui rend des services.</p>
<p>J&rsquo;ai d&rsquo;ailleurs testé récemment le très sexy Enlightenment (<a href="http://www.enlightenment.org/" target="_blank">E17</a>). Le problème est que même si le bureau après de pénibles paramétrages est à tomber (KDE ET GNOME sont juste laids à côté), il n&rsquo;y a aucune application en EFL&#8230; Utiliser des applications en Qt ou GTK sous E17 n&rsquo;apporte donc aucune cohérence malheureusement, sauf à gruger mollement avec des thèmes&#8230;</p>
<p>BREF, je n&rsquo;ai pas encore acheté de Mac faute de budget <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span> Je souhaite vraiment que le libre puisse un jour fournir une alternative complète qui pourrait séduire un grand public, cependant les choix stupides de certains et les non-choix stupides des autres me font douter fortement de cela à moyen terme. En attendant l&rsquo;heure du plaisir est venu <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span> (ou pas)</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>.			</span>
			
					
			</footer><!-- #entry-meta -->
</article><!-- #post-471 -->

				
					<article id="post-462" class="post-462 post type-post status-publish format-standard hentry category-mondelibre tag-graylog2 tag-syslog tag-windows">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2012/01/12/centralisation-des-logs-windows-vers-linux-via-syslog/" rel="bookmark">Centralisation des logs Windows vers Linux via&nbsp;syslog</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2012/01/12/centralisation-des-logs-windows-vers-linux-via-syslog/" title="21:10" rel="bookmark"><time class="entry-date" datetime="2012-01-12T21:10:27+00:00" pubdate>12 janvier 2012</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2012/01/12/centralisation-des-logs-windows-vers-linux-via-syslog/#comments" title="Commentaire sur Centralisation des logs Windows vers Linux via&nbsp;syslog">2</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>[<a href="http://linuxfr.org/users/fredix/journaux/centralisation-des-logs-windows-vers-linux-via-syslog" target="_blank">Article publié sur linuxfr.org</a>]</p>
<h4>Intro</h4>
<p>Lorsqu&rsquo;on gère un parc de serveur qui comprend malheureusement des serveurs Windows, on souhaite centraliser leurs logs, voir même recevoir des alertes en fonction du contenu. C&rsquo;est simple à faire sous Linux avec rsyslog, avec lequel je transmets les syslogs vers l&rsquo;excellent <a href="http://graylog2.org/">Graylog2</a>. Par contre dans le monde Windows il n&rsquo;y a pas de serveur syslog natif. J&rsquo;avais donc trouvé <a href="http://www.mwagent.com/">MonitorWare Agent</a> un impressionnant logiciel propriétaire qui permet de définir des services qui vont lire n&rsquo;importe quel type de logs, puis associer à ces services des ruleset qui vont déclencher une action comme faire suivre les logs vers un serveur syslog. L&rsquo;interface graphique permet de créer un nombre de services et de rulesets impressionnants pour enchaîner des actions les plus tordus.<br />
Le seul problème est le coût de la licence à environ 200€ par serveur, ce qui peut être bloquant.</p>
<h4 id="toc_1">NXLOG</h4>
<p>Prêt à laisser tomber, mon collègue et voisin de bureau <a href="https://twitter.com/ponteilla" target="_blank">@ponteilla</a> m&rsquo;a judicieusement déniché le logiciel libre <a href="http://nxlog-ce.sourceforge.net/">nxlog</a> qui permet de faire exactement la même chose, sans interface graphique mais ça nous fait pas peur. Après de nombreux tâtonnement et quelques mails sur la liste j&rsquo;ai pu transmettre les logs d&rsquo;une application qui rotate elle meme ses logs en donnant un nouveau nom au log en cours (gruik)&#8230; Cependant nxlog permet d&rsquo;utiliser des wildcard sur les noms des fichiers (*.log par ex) et même d&rsquo;être récursif en allant lire tous les logs dans chaque sous répertoire. Un processor transformer permet de formater le log selon la RFC syslog voulue.<br />
<a href="http://nxlog-ce.sourceforge.net/nxlog-docs/en/nxlog-reference-manual.html">La doc</a> montre le workflow très poussé de nxlog qui permet des enchaînements vraiment tordu, genre intégrer un schéduler dans un <a href="http://nxlog-ce.sourceforge.net/nxlog-docs/en/nxlog-reference-manual.html#config_module_schedule">module input</a>, surveiller un fichier de log et le convertir en CVS vers un autre fichier <a href="http://nxlog-ce.sourceforge.net/nxlog-docs/en/nxlog-reference-manual.html#xm_csv_example">xm_csv_example</a>. Il intègre également un <a href="http://nxlog-ce.sourceforge.net/nxlog-docs/en/nxlog-reference-manual.html#lang">langage</a> qui permet par exemple de tester une expression régulière sur un flux en entrée :</p>
<pre><code>if $Message =~ /^Test (\S+)/ log_info("captured: " + $1); </code></pre>
<h4 id="toc_2">Workflow</h4>
<p>En entrée on choisi un input module (fichier, sgbd, syslog, tcp/udp, ..), puis un processor module qui va transformer ou filtrer les datas, puis un output module (sgbd, syslog, tcp/udp, file, ..) enfin via la directive route on enchaîne ces modules entre eux. Je n&rsquo;ai que survolé les possibilités du soft, mais au vu de sa richesse et de sa licence GPL/LGPL je suis plutôt surpris de ne pas le trouver dans les dépôts debian/ubuntu.</p>
<h4 id="toc_3">Config basique fichiers de logs (*.log) -&gt; serveur Graylog2 Linux (syslog)</h4>
<p>Voici ma config qui fonctionne. Le serveur Windows communique avec Graylog2 sous Linux via OpenVPN. Pour aider au paramétrage j&rsquo;ai lancé sur le Linux un tcpdump pour vérifier que les paquets arrivaient bien, avec la facility voulue :</p>
<pre><code>tcpdump -i tap0 "udp port 514" </code></pre>
<p>Le fichier de conf nxlog.conf</p>
<pre><code>## This is a sample configuration file. See the nxlog reference manual about the</code>
<code>## configuration options. It should be installed locally and is also available</code>
<code>## online at http://nxlog.org/nxlog-docs/en/nxlog-reference-manual.html</code>
<code>## Please set the ROOT to the folder your nxlog was installed into,</code>
<code>## otherwise it will not start.</code>
<code>define ROOT C:\Program Files\nxlog</code>
<code># define ROOT C:\Program Files (x86)\nxlog</code>
<code>define CERTDIR %ROOT%\cert</code>
<code>define CONFDIR %ROOT%\conf</code>
<code>define LOGDIR %ROOT%\data</code>
<code>Moduledir %ROOT%\modules</code>
<code>CacheDir %ROOT%\data</code>
<code>Pidfile %ROOT%\data\nxlog.pid</code>
<code>SpoolDir %ROOT%\data</code>
<code>LogFile %ROOT%\data\nxlog.log</code>
<code>LogLevel INFO</code>
<code>&lt;Extension syslog&gt;</code>
<code> Module xm_syslog</code>
<code>&lt;/Extension&gt;</code>
<code>&lt;Input in&gt;</code>
<code> Module im_file</code>
<code> File "C:\monapp\log\\*.log" # lit tous les .log dans tous les sous répertoires !</code>
<code> Exec $Message = $raw_event;</code>
<code> SavePos TRUE</code>
<code> Recursive TRUE</code>
<code>&lt;/Input&gt;</code>
<code>&lt;Processor transformer&gt;</code>
<code> Module pm_transformer</code>
<code> Exec $SyslogFacilityValue = syslog_facility_value("local2");</code>
<code> OutputFormat syslog_rfc3164</code>
<code>&lt;/Processor&gt;</code>
<code>&lt;Output out&gt;</code>
<code> Module om_udp</code>
<code> Host 10.8.0.1 # IP du serveur Linux sur lequel écoute graylog2 </code>server
   Port 514
&lt;/Output&gt;
<code>&lt;Route 1&gt;</code>
<code>Path in =&gt; transformer =&gt; out</code>
<code>&lt;/Route&gt; </code></pre>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>.			</span>
			
						<span class="tag-links">
				Tagué <a href="http://frederic.logier.org/tag/graylog2/" rel="tag">graylog2</a>, <a href="http://frederic.logier.org/tag/syslog/" rel="tag">syslog</a>, <a href="http://frederic.logier.org/tag/windows/" rel="tag">windows</a>.			</span>
					
			</footer><!-- #entry-meta -->
</article><!-- #post-462 -->

				
					<article id="post-453" class="post-453 post type-post status-publish format-standard hentry category-mondelibre">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2011/12/12/le-confort-contre-la-liberte/" rel="bookmark">le confort contre la&nbsp;liberté</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2011/12/12/le-confort-contre-la-liberte/" title="09:53" rel="bookmark"><time class="entry-date" datetime="2011-12-12T09:53:26+00:00" pubdate>12 décembre 2011</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2011/12/12/le-confort-contre-la-liberte/#comments" title="Commentaire sur le confort contre la&nbsp;liberté">4</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>[<a href="http://linuxfr.org/users/fredix/journaux/le-confort-contre-la-libert%C3%A9">Article publié sur Linuxfr.org</a>] source <a href="https://twitter.com/#!/zifro/status/145980942211751936" target="_blank">@zifro</a></p>
<p>Je viens de tomber sur <a href="http://www.arte.tv/fr/Comprendre-le-monde/4285416.html" target="_blank">APPLE, LA TYRANNIE DU COOL</a> qui contient cette phrase :</p>
<blockquote><p>Tim Wu, qui compare le succès de Steve Jobs à celui d’Hollywood, en soulignant que l’humanité préfère en général « la facilité et le confort » à la liberté</p></blockquote>
<p>Je vais tenter de décortiquer cette phrase qui me parait très lumineuse, et possède plusieurs niveaux de profondeur pour nous Linuxiens.</p>
<p>En effet si nous sommes tous d&rsquo;accord ici pour dénoncer la perte de nos libertés fondamentales lorsqu&rsquo;on utilise un produit Apple, il en est pas de même pour reconnaître la faiblesse du logiciel libre qui ne le rend pas assez attrayant face aux produits Apple/Google. Pour certains le client Apple est idiot, pour d&rsquo;autres il est bling bling, pour d&rsquo;autres il est anti-microsoft primaire ou bien il peut être tout ça.</p>
<p>Cette histoire de confort me rappelle une histoire, vraie il me semble, sur un test de scientifiques effectué sur des chimpanzés. Ils fournissaient 2 moyens à ceux-ci pour obtenir des bananes. Un très complexe à base de cordes et de poulies et un autre très simple qui permet de prendre les bananes en tendant le bras à travers des barreaux légèrement électrifié. Il s&rsquo;est avéré que le stress généré par la peur du courant électrique était moins important que celui généré via le système de poulies pourtant sans douleur.</p>
<p>Rapporté à l&rsquo;être humain, cette histoire tend à démontrer qu&rsquo;il préférerait le moyen le plus simple pour effectuer des tâches courantes, quelque soit les inconvénients. Donc même si ces tâches sont effectuées via des logiciels libres offrant plus de libertés, elles seront la plupart du temps plus stressante qu&rsquo;un logiciel ou surtout qu&rsquo;un écosystème propriétaire comme Apple ou Google plus agréable.</p>
<p>Si l&rsquo;on admet cette réalité, d&rsquo;autant plus pour des personnes dont l&rsquo;informatique n&rsquo;est qu&rsquo;un outil qui ne les occupent qu&rsquo;une infime partie de leur temps par rapport à nous, on ne devrait plus perdre du temps à pratiquer le dénigrement ou le mépris envers ces personnes, mais comment rendre les logiciels libres plus agréable.</p>
<h2 id="toc_0">Le cloud</h2>
<p>C&rsquo;est un système très justement dénoncé par le risque de perte de la vie privée contenue dans nos données. Il est pourtant le pilier des écosystèmes d&rsquo;Apple, de Google, et prochainement de Microsoft. Cet outil permet et permettra encore plus de simplifier la synchronisation des données personnelles, des applications et des personnalisations.<br />
Il est l&rsquo;outil indispensable à l&rsquo;amélioration du confort de l&rsquo;utilisateur, et pourtant nous ne faisons que le dénigrer voir dénoncer la dangerosité d&rsquo;un tel système en le baptisant par certains Minitel 2.0</p>
<p>Certains travaillent à concevoir des logiciels libres alternatifs aux outils propriétaires les plus connus basés sur le cloud, comme movim ou diaspora. D&rsquo;autres comme la FSFFrance ou tuxfamily proposent d&rsquo;héberger des logiciels libres. Même si ces 2 types d&rsquo;initiative pourraient conjointement arriver à un début d&rsquo;alternative, encore faudrait-il une équipe de techniciens pour maintenir et faire évoluer l&rsquo;infrastructure. Or nous l&rsquo;avons vu avec l&rsquo;APINC et Tuxfamily, ce type de service basé sur le bénévolat est par définition non pérenne.</p>
<p>L&rsquo;autre solution est l&rsquo;auto-hébergement, ce qui revient à renvoyer à l&rsquo;utilisateur la prise en charge des services et donc la complexité de celle-ci. Il va s&rsquo;en dire que ce n&rsquo;est pas une solution pour le grand public.</p>
<h2 id="toc_1">Solutions</h2>
<p>Des solutions sont à mon avis nécessaire si l&rsquo;on veut que le grand public ne doivent pas choisir entre son confort et sa liberté. Pourquoi l&rsquo;utilisation du logiciel libre devrait nécessairement passer par une complexité ou une compréhension de l&rsquo;informatique ?<br />
Cette question est d&rsquo;autant plus critique maintenant car jusqu&rsquo;à il y a quelques années l&rsquo;usage d&rsquo;un logiciel libre comme un navigateur web ou une suite bureautique n&rsquo;impliquait pas un grand effort face à la version propriétaire, hormis bien sûr celui de changer ses habitudes. Cependant avec l&rsquo;intégration de plus en plus fortes de services au sein des logiciels, la différence entre logiciel propriétaire et logiciel libre est de plus en plus flagrante et ne sera pas en faveur de ces derniers.</p>
<p>Une solution serait qu&rsquo;une Fondation du libre possédant une certaine reconnaissance de ses pairs proposent des services. En effet le dilemme du cloud est qu&rsquo;il suffit qu&rsquo;une entreprise exploite de données personnelles pour que cela suffise à jeter le doute sur la vie privée, que cela soit Google ou Canonical. A priori seul une Fondation ayant en son coeur une éthique, comme la FSF ou la Mozilla Fondation pourraient obtenir la légitimité de l&rsquo;exploitation de données personnelles.</p>
<p>L&rsquo;autre solution qui est une sorte de Graal, serait de concilier le P2P et les services. Il &quot;suffirait&quot; que des services, quel qu&rsquo;ils soient, s&rsquo;appuient sur une API système, laquelle fonctionnerait en P2P pour distribuer les données découpées, chiffrées et redondées. J&rsquo;ai cependant bien peur qu&rsquo;un tel système ne voit pas le jour avant très longtemps.</p>
<p>C&rsquo;est pourtant à mon avis le prochain défi du logiciel libre, ne plus se contenter de proposer du logiciel, mais aussi des services si possible décentralisés et si possible non gratuit.</p>
<h2 id="toc_2">La gratuité</h2>
<p>La liberté a un coût, la preuve en est que certains s&rsquo;en prive en échange de confort et de simplicité. Il est à mon avis dommageable à long terme pour le libre que ce coût soit sur celui du confort d&rsquo;utilisation. Le succès d&rsquo;Apple montre qu&rsquo;un grand nombre de personnes sont prêtes à payer très cher en monnaies, leur confort. Un autre grand nombre de personnes sont prêtes à obtenir ce confort en échange de leur vie privée, chez Facebook ou Google.<br />
Dans les 3 cités, Apple, Facebook, Google, aucun n&rsquo;a fait l&rsquo;économie du confort.</p>
<p>Il est donc à mon avis nécessaire de diminuer fortement l&rsquo;effort nécessaire à utiliser et exploiter les logiciels libres, l&rsquo;usage de services liés sera pour cela de plus en plus indispensable. Une grande partie des utilisateurs seraient prêt à payer pour ces services ce qui permettrait d&rsquo;une part de financer leur développement et exploitation, mais aussi que les communautés libres qui développent et supportent ces services puisse s&rsquo;auto financer.</p>
<p>Quand je vois la part de plus en plus grande que prend l&rsquo;informatique connecté à des services en ligne sur des formes aussi variées que des véhicules, des télévisions, console de jeux, téléphone, frigo, maison, etc, et que le libre ne propose aucune alternative à cela hormis dire que c&rsquo;est pas bien, je suis très inquiet, certes pas à titre personnel mais pour l&rsquo;avenir de tous.</p>
<p>Il sera je pense de plus en plus nécessaire de penser au confort, au financement et donc arriver à créer un écosystème décentralisé libre auto-financé et en terminer avec les tabous des services et de l&rsquo;argent.</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>.			</span>
			
					
			</footer><!-- #entry-meta -->
</article><!-- #post-453 -->

				
					<article id="post-439" class="post-439 post type-post status-publish format-standard hentry category-mondelibre">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2011/11/19/un-petit-retour-des-jdll-2011/" rel="bookmark">un petit retour des JDLL&nbsp;2011</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2011/11/19/un-petit-retour-des-jdll-2011/" title="21:27" rel="bookmark"><time class="entry-date" datetime="2011-11-19T21:27:27+00:00" pubdate>19 novembre 2011</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2011/11/19/un-petit-retour-des-jdll-2011/#comments" title="Commentaire sur un petit retour des JDLL&nbsp;2011">4</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p><strong><em>mise à jour</em></strong> : Je me rend compte avoir oublié de parler de la conférence sur <a href="http://www.illyse.org/">Illyse</a> l&rsquo;association qui souhaite proposer un FAI associatif local sur Lyon et Saint Etienne. Illyse fait parti du projet d&rsquo;<a href="http://www.fdn.fr/-Essaimage-.html">essaimage</a> lancé par FDN. J&rsquo;ai trouvé Jean-François Mourges (que je connais ayant travaillé avec lui <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span> ) plutôt bon orateur et ayant semble-t-il réussi a s&rsquo;entourer d&rsquo;une équipe compétente , ce qui est la base de la réussite d&rsquo;un projet. Cependant je m&rsquo;ajoute aux requêtes qui ont été faite sur une offre VPN. En effet une offre d&rsquo;un accès Internet non triple play entre 35 et 40 euros, qui comprend l&rsquo;achat d&rsquo;un modem ADSL et de 100 euros de frais d&rsquo;installation est à mon avis un énorme frein pour pas mal de geeks. Or il serait à mon avis pragmatique de proposer <strong>en plus</strong> une offre VPN (entre 5 et 10 euros par mois par exemple) qui permettrait de financer plus rapidement l&rsquo;association. Même si dans l&rsquo;idéal on ne devrait pas avoir besoin d&rsquo;utiliser un VPN puisque les FAI devraient respecter la neutralité des réseaux, un pragmatisme &quot;à la Linus&quot; en phase avec la triste réalité, permettrait, à mon avis, la réussite de ce projet.</p>
<p>Comme chaque année j&rsquo;ai fait un tour aux <a href="http://www.jdll.org">JDLL</a> le vendredi et le samedi. Il y a eu des conférences très intéressantes, notamment <a href="http://www.jdll.org/node/165">celle</a> d&rsquo; Alexandre de dommelin sur <a href="http://puppetlabs.com/">puppet</a>. J&rsquo;ai déjà eu envie d&rsquo;utiliser cet outil de gestion automatique des déploiements et des configurations, mais son enthousiasme m&rsquo;a convaincu d&rsquo;utiliser cet outil indispensable à l&rsquo;industrialisation d&rsquo;un SI (traçabilité, déploiement automatique, etc).</p>
<p>J&rsquo;ai ensuite suivi les conférences sur <a href="http://movim.eu/">movim</a> et <a href="http://wiki.goffi.org/wiki/Salut_%C3%A0_Toi">salut à toi</a> qui sont des réseaux sociaux décentralisés basés sur XMPP. On voit qu&rsquo;il y a eu beaucoup de taff derrière ces projets, et qu&rsquo;ils mériteraient d&rsquo;être financé. Au sujet du financement j&rsquo;ai rencontré les petits gars derrière <a href="https://elveos.org/">elveos</a> qui permet de financer les développements de logiciels libre. C&rsquo;est typiquement ce genre d&rsquo;outil qui manque à notre écosystème depuis longtemps. Mais à mon sens ils devraient ajouter une gestion des ressources humaines en plus des ressources financières. En effet l&rsquo;énorme difficulté des développeurs de logiciel libre, outre le financement, est de trouver d&rsquo;autres développeurs, administrateur, graphiste, etc.</p>
<p>J&rsquo;ai ensuite assisté à la <a href="http://www.jdll.org/node/255">conférence</a> de Benjamin Bayard. Il a vraiment des talents d&rsquo;orateur et de vulgarisation. Sur les problématiques aussi fondamentales telles que la neutralité des réseaux, nous mériterions qu&rsquo;il touche un plus grand public plutôt que celui des geeks déjà acquis à cette cause.</p>
<p>Pour finir j&rsquo;ai été plutôt impressionné par une démonstration d&rsquo;<a href="http://fr.opensuse.org/">opensuse</a> sur le stand éponyme. L&rsquo;outil <a href="http://openbuildservice.org/">OBS</a> semble à première vue extraordinaire pour générer des paquets vers différentes distributions Linux. Mon netbook va sans doute servir de cobaye.</p>
<p>Peut être que l&rsquo;année prochaine j&rsquo;aurais assez avancé sur nodecast pour faire une petite conférence, et ainsi éviter de saouler toutes les personnes qui font l&rsquo;erreur de me demander quel est mon projet <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span></p>
<p>Quoi qu&rsquo;il en soit, il me parait évident que l&rsquo;avenir des prochains services libres s&rsquo;annoncent décentralisé et basé sur XMPP. C&rsquo;est à mon sens la meilleur voie si l&rsquo;ont veut éviter l’hémorragie des utilisateurs vers des services propriétaires centralisés et ce que cela implique en terme de protection de la vie privée. Car il ne sert à rien d&rsquo;utiliser des logiciels libres sur son poste de travail si les données sont stockées chez Apple, Google, Facebook, Yahoo, &#8230;</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>.			</span>
			
					
			</footer><!-- #entry-meta -->
</article><!-- #post-439 -->

				
					<article id="post-429" class="post-429 post type-post status-publish format-standard hentry category-code category-mondelibre category-nodecast tag-mongodb tag-qt tag-xmpp-2">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2011/11/07/ncs-un-serveur-applicatif/" rel="bookmark">NCS : un serveur&nbsp;applicatif</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2011/11/07/ncs-un-serveur-applicatif/" title="11:53" rel="bookmark"><time class="entry-date" datetime="2011-11-07T11:53:36+00:00" pubdate>7 novembre 2011</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2011/11/07/ncs-un-serveur-applicatif/#respond" title="Commentaire sur NCS : un serveur&nbsp;applicatif"><span class="no-reply">0</span></a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p id="sites-page-title-header" align="left">Lors de mon dernier article sur nodecast je terminais sur la possibilité d&rsquo;y intégrer un serveur web pour remplacer le serveur ruby Thin qui exposait l&rsquo;API HTTP REST. C&rsquo;est maintenant chose faite, la <a href="http://libqxt.bitbucket.org/doc/0.6/">libqxt</a> via son module <a href="http://libqxt.bitbucket.org/doc/0.6/qxtweb.html">QxtWeb</a> m&rsquo;a permis de mettre en œuvre assez simplement un serveur web dans un thread du serveur <a href="https://github.com/nodecast/ncs">ncs</a>. J&rsquo;ai migré tout le projet sur <a href="https://github.com/nodecast/">github</a>, le code du serveur est visible ici : <a href="https://github.com/nodecast/ncs/blob/master/http_api.cpp">http_api.cpp</a>. Ce how to m&rsquo;a été très utile : <a href="https://sites.google.com/a/embeddedlab.org/community/technical-articles/qt/qt-posts/howtocreateasimplewebserviceusingqtandlibqxt">How to create a simple webservice using qt and libqxt</a></p>
<p>Dans la lancée j&rsquo;ai également intégré un serveur XMPP grâce à <a href="http://code.google.com/p/qxmpp/">QXmpp</a>  ce qui permet au client <a href="https://github.com/nodecast/geekast">Geekast </a>d&rsquo;effectuer des push en XMPP. Il fonctionne également dans son propre thread. Outre la rapidité de ce protocole face à HTTP, cela va permettre aux clients Geekast d&rsquo;avoir une socket persistante avec le serveur ncs et donc permettre à celui-ci de faire du push vers tous les clients connectés. Les usages restent à définir mais cette possibilité ouvre un grand nombre de portes. Par exemple proposer la possibilité d&rsquo;agir sur tous ses clients geekast depuis l&rsquo;interface web (kill de processus, etc). L&rsquo;envoi par HTTP sera toujours présent dans le client, au cas où la connexion XMPP est impossible (firewall, etc).</p>
<p>L&rsquo;autre avancée est sur le format de donnée entre le client et le serveur, qui migre du XML vers JSON via <a href="http://libqxt.bitbucket.org/doc/0.6/qxtjson.html">QxtJson</a>. Ainsi le serveur ncs qui reçoit les payload en json peut directement les transformer en <a href="http://api.mongodb.org/cplusplus/current/classmongo_1_1_b_s_o_n_obj.html">bson object</a>, format binaire de MongoDB. Plus besoin de passer par un lourd parsing du xml et des conversions vers des tableaux pour en extraire les données. La <a href="https://github.com/nodecast/ncs/blob/master/nosql.cpp#L147">ligne suivante</a> montre la simplicité d&rsquo;une telle conversion :</p>
<pre>bson::bo m_bo_json = mongo::fromjson(json.toStdString());</pre>
<p>Le serveur ncs est donc maintenant autonome, Ruby est uniquement utilisé pour l&rsquo;exécution du frontal web en Ruby on Rails.</p>
<p>Pour finir, voici un schéma du fonctionnement interne du serveur ncs.</p>
<p><a href="http://fredix.files.wordpress.com/2011/11/ncs1.png"><img class="alignnone size-full wp-image-434" title="ncs" src="http://fredix.files.wordpress.com/2011/11/ncs1.png?w=545" alt=""   /></a></p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/code/" rel="category tag">code</a>, <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>, <a href="http://frederic.logier.org/category/nodecast/" rel="category tag">nodecast</a>.			</span>
			
						<span class="tag-links">
				Tagué <a href="http://frederic.logier.org/tag/mongodb/" rel="tag">mongodb</a>, <a href="http://frederic.logier.org/tag/qt/" rel="tag">Qt</a>, <a href="http://frederic.logier.org/tag/xmpp-2/" rel="tag">xmpp</a>.			</span>
					
			</footer><!-- #entry-meta -->
</article><!-- #post-429 -->

				
					<article id="post-397" class="post-397 post type-post status-publish format-standard hentry category-code category-mondelibre category-nodecast tag-mongodb tag-qt tag-zeromq">
	<header class="entry-header">
		<h1 class="entry-title"><a href="http://frederic.logier.org/2011/08/02/nodecast-backend-asynchrone-avec-zeromq/" rel="bookmark">Nodecast : backend asynchrone avec&nbsp;zeromq</a></h1>

				<div class="entry-meta">
			<a href="http://frederic.logier.org/2011/08/02/nodecast-backend-asynchrone-avec-zeromq/" title="22:17" rel="bookmark"><time class="entry-date" datetime="2011-08-02T22:17:03+00:00" pubdate>2 août 2011</time></a><span class="byline"> par <span class="author vcard"><a class="url fn n" href="http://frederic.logier.org/author/fredix/" title="Voir tous les articles par fredix" rel="author">fredix</a></span></span>
					</div><!-- .entry-meta -->
		
				<p class="comments-link"><a href="http://frederic.logier.org/2011/08/02/nodecast-backend-asynchrone-avec-zeromq/#comments" title="Commentaire sur Nodecast : backend asynchrone avec&nbsp;zeromq">4</a></p>
			</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Depuis mon dernier article sur Nodecast il y a 6 mois, de nouvelles idées ont germés qui ont données lieux à une nouvelle et sans aucun doute dernière (on y croit) réécriture du backend.</p>
<p>En effet dans mon dernier article je me sers d&rsquo;un logiciel propriétaire pour présenter ce que je crois être l&rsquo;avenir de services sur Internet via des technologies en Peer to Peer. Dans cette architecture P2P je pense que l&rsquo;auto-hébergement est alors crédible car les données sont répliquées et leur accès répartie.</p>
<p>C&rsquo;est pourquoi j&rsquo;ai à nouveau réécris le backend, car dans un contexte où chaque utilisateur est encouragé à s&rsquo;auto-héberger, il est nécessaire que le logiciel soit léger, simple à packager et donc avoir le moins de dépendance possible. Lorsque j&rsquo;ai découvert <a href="http://zeromq.org">Zeromq</a> j&rsquo;ai décidé d&rsquo;implémenter avec, la gestion de la file d&rsquo;attente et de répartition des jobs pour remplacer le serveur Qpid. Tous les serveurs de file comme Qpid, RabbitMQ ou Redis sont excellent dans un environnement centralisé mais sont à mon avis une contrainte s&rsquo;ils sont imposés dans un environnement décentralisé ou réparti.</p>
<p>Zeromq me permet de migrer dans le <a href="https://gitorious.org/nodecast/nodecast-dispatcher">dispatcher</a> la gestion des files, grâce à des sockets ZMQ de type <a href="http://api.zeromq.org/2-1:zmq-socket#toc12">PUSH/PULL</a> gérées dans des threads. L&rsquo;usage de Zeromq est in fine plus complexe puisque plus bas niveau qu&rsquo;une API fourni avec un serveur de file, mais les possibilités sont quasiment infinie, voir les différents <a href="https://github.com/imatix/zguide/tree/master/examples/">exemples</a> dans de nombreux langages et surtout les nombreuses spécifications de <a href="http://rfc.zeromq.org/">protocoles</a>. A noter que Zeromq ne permet pas de persistance disque comme le font Qpid ou RabbitMQ, cependant une implémentation du protocole <a href="http://rfc.zeromq.org/spec:9">Titanic</a> le permettrait, et il n&rsquo;est sans doute pas sorcier de les ajouter en option.</p>
<p>A propos de la persistance des messages, tout dépend du type d&rsquo;application gérée, pour un système bancaire il ne peut y avoir de perte de message bien entendu. Au contraire, il me semble avoir lu que les dev du  backend de last.fm avaient choisi une technologie sans persistance pour privilégier la performance.</p>
<h2>Schémas</h2>
<p>Voici le schéma de la nouvelle architecture et du dispatcher</p>
<p><a href="http://fredix.files.wordpress.com/2011/08/architecture2.png"><img class="alignnone size-full wp-image-402" title="architecture2" src="http://fredix.files.wordpress.com/2011/08/architecture2.png?w=545" alt=""   /></a></p>
<h2></h2>
<h2></h2>
<h2><a href="http://fredix.files.wordpress.com/2011/08/dispatcher2.png"><img class="alignnone size-full wp-image-413" title="dispatcher" src="http://fredix.files.wordpress.com/2011/08/dispatcher2.png?w=545" alt=""   /></a></h2>
<h2></h2>
<h2></h2>
<h2>Description</h2>
<p>Ce schéma décrit le fonctionnement interne du processus dispatcher. Les numéros en rouge indiquent le workflow suivi par un job. Même s&rsquo;il n&rsquo;y a plus de serveur de file dans l&rsquo;architecture nodecast, le dispatcher permet d&rsquo;en conserver les propriétés grâce d&rsquo;une part aux threads et aux envois non bloquant :  la directive ZMQ::NOBLOCK indique à la socket zmq de ne pas attendre de confirmation du destinataire.</p>
<blockquote>
<ol>
<li>L&rsquo;API géré par Thin (externe au processus dispatcher) réceptionne les données XML envoyées par les clients nodecast. Le serveur Thin a bindé le port 5555 local, stocke le XML dans GridFS, construit un hash et le push dans la socket <a href="http://api.zeromq.org/2-1:zmq-socket#toc12">ZMQ_PUSH</a>.</li>
<li>Le thread Zreceive est connecté sur le port 5555 via une socket ZMQ:PULL. Avec ce protocole il peut y avoir plusieurs instance du dispatcher connectés, mais un seul recevra un même job. A contrario en <a href="http://api.zeromq.org/2-1:zmq-socket#toc9">ZMQ PUB/SUB</a> tous les subscribers recoivent une copie du job.</li>
<li>Zreceive a créé un <a href="http://api.zeromq.org/2-1:zmq-device">ZMQ_DEVICE</a>. Celui-ci relie la socket ZMQ_PULL vers une socket ZMQ_PUSH. Le device transmet tout ce que reçoit la socket de PULL vers la socket de PUSH. A noter que la socket ZMQ_PUSH est ici de type <a href="http://api.zeromq.org/2-1:zmq-inproc">ZMQ_INPROC</a>, ce n&rsquo;est donc pas une socket TCP mais une zone mémoire partagée avec une autre thread.</li>
<li>Un thread Zdispatch est connecté en ZMQ_PULL sur la zone mémoire inproc. Il désérialize les jobs reçu dans un objet BSON puis émet un signal Qt avec la charge créée.</li>
<li>L&rsquo;objet Payload reçoit la charge dans un slot. A noter que cet objet possède à une référence vers un objet Nosql ce qui lui permet d&rsquo;interroger MongoDB. Dans ce cas il est impératif que le slot Payload ne soit pas appelé alors qu&rsquo;il n&rsquo;a pas fini ses tâches en cours. Pour cela le <em>QObject::connect</em> qui relie le signal de Zdispatch avec le slot de Payload doit impérativement posséder la directive  <em>Qt::BlockingQueuedConnection</em>. Payload découpe la charge reçue, effectue des traitements, sérialize des objects puis emet des signaux pour chaque worker.</li>
<li>Le thread worker_push possède un slot par signal emit par Payload. Lors de sa construction il a bindé chaque socket ZMQ_PUSH par worker. Il transmet alors la charge en mode non bloquant ZMQ_NOBLOCK.</li>
<li>Chaque worker ZMQ_PULL sur sa socket TCP dédié. Traite puis stocke dans MongoDB.</li>
</ol>
</blockquote>
<h2>Les cadences.</h2>
<blockquote><p>Elles rythmes le workflow, s&rsquo;il n&rsquo;y avait qu&rsquo;une seule cadence ce backend serait synchrone. Cependant on voit très bien plusieurs.</p>
<ol>
<li>Tout d&rsquo;abord le serveur Thin, qui transmet le job et retourne aussitôt une réponse au client.</li>
<li>Ensuite le thread Zreceive, retransmet à son rythme les jobs dans une zone mémoire</li>
<li>Le thread Zdispatch lit la zone mémoire puis faire suivre les jobs dans des signaux Qt.</li>
<li>L&rsquo;objet Payload transmet les bouts de job dans des signaux vers des slots.</li>
<li>Le thread worker_push envoie à chaque worker sa charge</li>
</ol>
<div>L&rsquo;entrée et la sortie du dispatcher sont non bloquante. Si ce dernier plante, le serveur Thin et le worker se rendront compte de rien. De plus contrairement à un serveur classique, les sockets zeromq permettent de lancer des clients même si le serveur n&rsquo;est pas lancé. <strong>Si le dispatcher tombe il pourra être relancé sans problème et les workers recevront à nouveau leur jobs</strong>.</div>
</blockquote>
<h2>Conclusions</h2>
<blockquote>
<div>L&rsquo;architecture du dispatcher n&rsquo;est pas encore optimisée, par exemple les positions 4, 5 et 6 pourraient fusionner. Cependant le Proof Of Concept est concluant, ce backend devrait pouvoir s&rsquo;exécuter correctement sur une machine recyclée. Une dernière tâche serait de migrer le serveur Thin dans un thread en Qt afin de simplifier et optimiser encore l&rsquo;architecture, ou bien d&rsquo;utiliser <a href="http://mongrel2.org/">Mongrel2</a> à la place de Nginx et Thin comme me le conseillait un certain Zed Shaw <span class='wp-smiley emoji emoji-smile' title=':)'>:)</span></div>
<div>La cible d&rsquo;obtenir un backend asynchrone brokerless étant atteinte la prochaine étape est l&rsquo;intégration d&rsquo;un worker qui permette la synchronisation en P2P des données du backend. L&rsquo;objectif est qu&rsquo;une instance Nodecast se synchronise avec l&rsquo;instance d&rsquo;un contact de l&rsquo;utilisateur. Gros travail en prespective, les solutions sont nombreuses comme <a href="http://telehash.org/">telehash</a> mais qui ne fourni pas pour l&rsquo;instant d&rsquo;implémentation en C/C++, ou bien la lib <a href="http://bitdht.sourceforge.net/">bitdht</a> utilisée par entre autre par <a href="http://retroshare.sourceforge.net/">retroshare</a>.</div>
</blockquote>
<div>Bonnes vacances (ou bon courage) aux lecteurs !</div>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
								<span class="cat-links">
				Publié dans <a href="http://frederic.logier.org/category/code/" rel="category tag">code</a>, <a href="http://frederic.logier.org/category/mondelibre/" rel="category tag">MondeLibre</a>, <a href="http://frederic.logier.org/category/nodecast/" rel="category tag">nodecast</a>.			</span>
			
						<span class="tag-links">
				Tagué <a href="http://frederic.logier.org/tag/mongodb/" rel="tag">mongodb</a>, <a href="http://frederic.logier.org/tag/qt/" rel="tag">Qt</a>, <a href="http://frederic.logier.org/tag/zeromq/" rel="tag">zeromq</a>.			</span>
					
			</footer><!-- #entry-meta -->
</article><!-- #post-397 -->

				
					<nav role="navigation" id="nav-below" class="site-navigation paging-navigation">
		<h1 class="assistive-text">Navigation des articles</h1>

	
				<div class="nav-previous"><a href="http://frederic.logier.org/category/mondelibre/page/2/" ><span class="meta-nav">&larr;</span> Articles Précédents</a></div>
		
		
	
	</nav><!-- #nav-below -->
	
			
			</div><!-- #content -->
		</section><!-- #primary .site-content -->

				<div id="secondary" class="widget-area" role="complementary">
						<aside id="text-5" class="widget widget_text">			<div class="textwidget"><p>
<a href="http://www.bitcoin.org/" target="_blank">Bitcoin address</a> : <b>18KQNWztCCAz9CsfdmisPcYS7HQsNdooT1</b>
</p></div>
		</aside><aside id="gravatar-2" class="widget widget_gravatar"><p><img alt='' src='http://0.gravatar.com/avatar/0fc8e5d51ed3c0726b2826e8caeb8017?s=64&#038;d=identicon&#038;r=G' class='avatar avatar-64 grav-widget-none' height='64' width='64' /></p>
<p><a href="http://twitter.com/fredix">@fredix</a></p>
</aside><aside id="tag_cloud-2" class="widget widget_tag_cloud"><h1 class="widget-title">Catégories</h1><div style="overflow: hidden;"><a href="http://frederic.logier.org/category/android/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="android (1)">android</a> <a href="http://frederic.logier.org/category/cinema/" style="font-size: 107.95454545455%; padding: 1px; margin: 1px;"  title="cinéma (3)">cinéma</a> <a href="http://frederic.logier.org/category/code/" style="font-size: 107.95454545455%; padding: 1px; margin: 1px;"  title="code (3)">code</a> <a href="http://frederic.logier.org/category/config/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="config (1)">config</a> <a href="http://frederic.logier.org/category/demomaker/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="demomaker (1)">demomaker</a> <a href="http://frederic.logier.org/category/fredix/" style="font-size: 115.90909090909%; padding: 1px; margin: 1px;"  title="fredix (5)">fredix</a> <a href="http://frederic.logier.org/category/geekast/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="geekast (1)">geekast</a> <a href="http://frederic.logier.org/category/google/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="Google (1)">Google</a> <a href="http://frederic.logier.org/category/gstreamer/" style="font-size: 103.97727272727%; padding: 1px; margin: 1px;"  title="gstreamer (2)">gstreamer</a> <a href="http://frederic.logier.org/category/gtk/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="GTK+ (1)">GTK+</a> <a href="http://frederic.logier.org/category/gtkmm/" style="font-size: 107.95454545455%; padding: 1px; margin: 1px;"  title="gtkmm (3)">gtkmm</a> <a href="http://frederic.logier.org/category/imotion/" style="font-size: 107.95454545455%; padding: 1px; margin: 1px;"  title="imotion (3)">imotion</a> <a href="http://frederic.logier.org/category/internet/" style="font-size: 119.88636363636%; padding: 1px; margin: 1px;"  title="Internet (6)">Internet</a> <a href="http://frederic.logier.org/category/jeux/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="jeux (1)">jeux</a> <a href="http://frederic.logier.org/category/linutop/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="linutop (1)">linutop</a> <a href="http://frederic.logier.org/category/mondelibre/" style="font-size: 275%; padding: 1px; margin: 1px;"  title="MondeLibre (45)">MondeLibre</a> <a href="http://frederic.logier.org/category/mondemerde/" style="font-size: 119.88636363636%; padding: 1px; margin: 1px;"  title="MondeMerde (6)">MondeMerde</a> <a href="http://frederic.logier.org/category/musique/" style="font-size: 100%; padding: 1px; margin: 1px;"  title="musique (1)">musique</a> <a href="http://frederic.logier.org/category/nodecast/" style="font-size: 115.90909090909%; padding: 1px; margin: 1px;"  title="nodecast (5)">nodecast</a> <a href="http://frederic.logier.org/category/rails/" style="font-size: 123.86363636364%; padding: 1px; margin: 1px;"  title="rails (7)">rails</a> <a href="http://frederic.logier.org/category/ruby/" style="font-size: 139.77272727273%; padding: 1px; margin: 1px;"  title="ruby (11)">ruby</a> <a href="http://frederic.logier.org/category/texte/" style="font-size: 111.93181818182%; padding: 1px; margin: 1px;"  title="texte (4)">texte</a> <a href="http://frederic.logier.org/category/uncategorized/" style="font-size: 111.93181818182%; padding: 1px; margin: 1px;"  title="Uncategorized (4)">Uncategorized</a> <a href="http://frederic.logier.org/category/web/" style="font-size: 147.72727272727%; padding: 1px; margin: 1px;"  title="web (13)">web</a> <a href="http://frederic.logier.org/category/xmpp/" style="font-size: 111.93181818182%; padding: 1px; margin: 1px;"  title="XMPP (4)">XMPP</a> </div></aside><aside id="archives-2" class="widget widget_archive"><h1 class="widget-title">Archives</h1>		<ul>
	<li><a href='http://frederic.logier.org/2014/06/'>juin 2014</a></li>
	<li><a href='http://frederic.logier.org/2014/01/'>janvier 2014</a></li>
	<li><a href='http://frederic.logier.org/2013/04/'>avril 2013</a></li>
	<li><a href='http://frederic.logier.org/2012/12/'>décembre 2012</a></li>
	<li><a href='http://frederic.logier.org/2012/07/'>juillet 2012</a></li>
	<li><a href='http://frederic.logier.org/2012/03/'>mars 2012</a></li>
	<li><a href='http://frederic.logier.org/2012/01/'>janvier 2012</a></li>
	<li><a href='http://frederic.logier.org/2011/12/'>décembre 2011</a></li>
	<li><a href='http://frederic.logier.org/2011/11/'>novembre 2011</a></li>
	<li><a href='http://frederic.logier.org/2011/08/'>août 2011</a></li>
	<li><a href='http://frederic.logier.org/2011/05/'>mai 2011</a></li>
	<li><a href='http://frederic.logier.org/2011/02/'>février 2011</a></li>
	<li><a href='http://frederic.logier.org/2010/10/'>octobre 2010</a></li>
	<li><a href='http://frederic.logier.org/2010/07/'>juillet 2010</a></li>
	<li><a href='http://frederic.logier.org/2010/06/'>juin 2010</a></li>
	<li><a href='http://frederic.logier.org/2010/04/'>avril 2010</a></li>
	<li><a href='http://frederic.logier.org/2010/01/'>janvier 2010</a></li>
	<li><a href='http://frederic.logier.org/2009/10/'>octobre 2009</a></li>
	<li><a href='http://frederic.logier.org/2009/08/'>août 2009</a></li>
	<li><a href='http://frederic.logier.org/2009/07/'>juillet 2009</a></li>
	<li><a href='http://frederic.logier.org/2009/06/'>juin 2009</a></li>
	<li><a href='http://frederic.logier.org/2009/02/'>février 2009</a></li>
	<li><a href='http://frederic.logier.org/2009/01/'>janvier 2009</a></li>
	<li><a href='http://frederic.logier.org/2008/11/'>novembre 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/10/'>octobre 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/09/'>septembre 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/08/'>août 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/06/'>juin 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/05/'>mai 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/03/'>mars 2008</a></li>
	<li><a href='http://frederic.logier.org/2008/01/'>janvier 2008</a></li>
	<li><a href='http://frederic.logier.org/2007/08/'>août 2007</a></li>
	<li><a href='http://frederic.logier.org/2007/06/'>juin 2007</a></li>
	<li><a href='http://frederic.logier.org/2007/05/'>mai 2007</a></li>
	<li><a href='http://frederic.logier.org/2007/03/'>mars 2007</a></li>
	<li><a href='http://frederic.logier.org/2007/01/'>janvier 2007</a></li>
	<li><a href='http://frederic.logier.org/2006/12/'>décembre 2006</a></li>
	<li><a href='http://frederic.logier.org/2006/11/'>novembre 2006</a></li>
	<li><a href='http://frederic.logier.org/2006/04/'>avril 2006</a></li>
	<li><a href='http://frederic.logier.org/2006/03/'>mars 2006</a></li>
	<li><a href='http://frederic.logier.org/2005/12/'>décembre 2005</a></li>
	<li><a href='http://frederic.logier.org/2005/10/'>octobre 2005</a></li>
	<li><a href='http://frederic.logier.org/2005/07/'>juillet 2005</a></li>
	<li><a href='http://frederic.logier.org/2005/02/'>février 2005</a></li>
	<li><a href='http://frederic.logier.org/2004/12/'>décembre 2004</a></li>
	<li><a href='http://frederic.logier.org/2004/06/'>juin 2004</a></li>
	<li><a href='http://frederic.logier.org/2004/05/'>mai 2004</a></li>
	<li><a href='http://frederic.logier.org/2000/09/'>septembre 2000</a></li>
		</ul>
</aside><aside id="wp_tag_cloud-2" class="widget wp_widget_tag_cloud"><h1 class="widget-title"></h1><div style="overflow:hidden"><a href='http://frederic.logier.org/tag/amqp/' class='tag-link-3261981' title='1 sujet' style='font-size: 8pt;'>AMQP</a>
<a href='http://frederic.logier.org/tag/apple/' class='tag-link-291' title='1 sujet' style='font-size: 8pt;'>Apple</a>
<a href='http://frederic.logier.org/tag/backup/' class='tag-link-5469' title='1 sujet' style='font-size: 8pt;'>backup</a>
<a href='http://frederic.logier.org/tag/emacs/' class='tag-link-11362' title='1 sujet' style='font-size: 8pt;'>emacs</a>
<a href='http://frederic.logier.org/tag/gearman/' class='tag-link-27768953' title='2 sujets' style='font-size: 12.2pt;'>gearman</a>
<a href='http://frederic.logier.org/tag/google/' class='tag-link-81' title='1 sujet' style='font-size: 8pt;'>Google</a>
<a href='http://frederic.logier.org/tag/graylog2/' class='tag-link-71355968' title='1 sujet' style='font-size: 8pt;'>graylog2</a>
<a href='http://frederic.logier.org/tag/jabber/' class='tag-link-4996' title='1 sujet' style='font-size: 8pt;'>jabber</a>
<a href='http://frederic.logier.org/tag/juick/' class='tag-link-18939116' title='1 sujet' style='font-size: 8pt;'>juick</a>
<a href='http://frederic.logier.org/tag/mongodb/' class='tag-link-21954763' title='7 sujets' style='font-size: 22pt;'>mongodb</a>
<a href='http://frederic.logier.org/tag/nodecast/' class='tag-link-39395879' title='1 sujet' style='font-size: 8pt;'>nodecast</a>
<a href='http://frederic.logier.org/tag/p2p/' class='tag-link-991' title='1 sujet' style='font-size: 8pt;'>P2P</a>
<a href='http://frederic.logier.org/tag/qpid/' class='tag-link-8660547' title='1 sujet' style='font-size: 8pt;'>Qpid</a>
<a href='http://frederic.logier.org/tag/qt/' class='tag-link-61037' title='5 sujets' style='font-size: 19.2pt;'>Qt</a>
<a href='http://frederic.logier.org/tag/ruby/' class='tag-link-4872' title='1 sujet' style='font-size: 8pt;'>ruby</a>
<a href='http://frederic.logier.org/tag/sinatra/' class='tag-link-212321' title='2 sujets' style='font-size: 12.2pt;'>sinatra</a>
<a href='http://frederic.logier.org/tag/spica/' class='tag-link-329051' title='1 sujet' style='font-size: 8pt;'>spica</a>
<a href='http://frederic.logier.org/tag/syslog/' class='tag-link-306399' title='1 sujet' style='font-size: 8pt;'>syslog</a>
<a href='http://frederic.logier.org/tag/twitter/' class='tag-link-599182' title='1 sujet' style='font-size: 8pt;'>twitter</a>
<a href='http://frederic.logier.org/tag/windows/' class='tag-link-800' title='1 sujet' style='font-size: 8pt;'>windows</a>
<a href='http://frederic.logier.org/tag/wordpress/' class='tag-link-33' title='1 sujet' style='font-size: 8pt;'>wordpress</a>
<a href='http://frederic.logier.org/tag/xmpp-2/' class='tag-link-40632996' title='1 sujet' style='font-size: 8pt;'>xmpp</a>
<a href='http://frederic.logier.org/tag/zeromq/' class='tag-link-38557877' title='2 sujets' style='font-size: 12.2pt;'>zeromq</a></div></aside><aside id="wpcom-goodreads-2" class="widget widget_goodreads"><h1 class="widget-title">Goodreads</h1><div class="gr_custom_widget" id="gr_custom_widget_2"></div><script src="https://www.goodreads.com/review/custom_widget/4271853.Goodreads:%20read?cover_position=&#038;cover_size=small&#038;num_books=5&#038;order=d&#038;shelf=read&#038;sort=date_added&#038;widget_bg_transparent=&#038;widget_id=2"></script></aside><aside id="meta-2" class="widget widget_meta"><h1 class="widget-title">Méta</h1>			<ul>
			<li><a href="https://fr.wordpress.com/signup/?ref=wplogin">Inscription</a></li>			<li><a href="https://fredix.wordpress.com/wp-login.php">Connexion</a></li>
			<li><a href="http://frederic.logier.org/feed/" title="Suivez ce site par syndication RSS 2.0">Flux <abbr title="Really Simple Syndication">RSS</abbr> des articles</a></li>
			<li><a href="http://frederic.logier.org/comments/feed/" title="Les derniers commentaires pour tous les articles, au format RSS"><abbr title="Really Simple Syndication">RSS</abbr> des commentaires</a></li>
<li><a href="http://wordpress.com/" title="Propulsé par WordPress, plate-forme de publication personnelle sémantique de pointe.">WordPress.com</a></li>			</ul>
</aside>		</div><!-- #secondary .widget-area -->
		
			<footer id="colophon" class="site-footer" role="contentinfo">
				<div class="site-info">
										<a href="http://fr.wordpress.com/?ref=footer_website">Créez un site Web ou un blog gratuitement sur WordPress.com</a>.
					<span class="sep"> | </span>
					<a href="http://theme.wordpress.com/themes/sunspot/" title="En savoir plus sur ce thème">Th&egrave;me Sunspot</a>.				</div><!-- .site-info -->
			</footer><!-- .site-footer .site-footer -->
		</div><!-- #main -->

	</div><!-- #wrapper .wrap -->
</div><!-- #page .hfeed .site -->
<div class="sunstrip-small"></div>
<script type='text/javascript' src='//0.gravatar.com/js/gprofiles.js?ver=201430x'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://s2.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1380573781g'></script>

	<script>
		//initialize and attach hovercards to all gravatars
		jQuery( document ).ready( function( $ ) {
			if ( typeof Gravatar.init !== "function" ) {
				return;
			}			

			Gravatar.profile_cb = function( hash, id ) {
				WPGroHo.syncProfileData( hash, id );
			};
			Gravatar.my_hash = WPGroHo.my_hash;
			Gravatar.init( 'body', '#wp-admin-bar-my-account' );
		});
	</script>

		<div style="display:none">
	<div class="grofile-hash-map-0fc8e5d51ed3c0726b2826e8caeb8017">
	</div>
	</div>

	<div id="bit" class="loggedout-follow-normal">
		<a class="bsub" href="javascript:void(0)"><span id='bsub-text'>Suivre</span></a>
		<div id="bitsubscribe">

					<h3><label for="loggedout-follow-field">Souscrire à &ldquo;fredix&rdquo;</label></h3>

			<form action="https://subscribe.wordpress.com" method="post" accept-charset="utf-8" id="loggedout-follow">
			<p>Recevez les nouvelles publications par mail.</p>

			<p id="loggedout-follow-error" style="display: none;"></p>

						<p class="bit-follow-count">Rejoignez 275 autres abonnés</p>
			<p><input type="email" name="email" value="Entrez votre adresse mail" onfocus='this.value=(this.value=="Entrez votre adresse mail") ? "" : this.value;' onblur='this.value=(this.value=="") ? "Enter email address" : this.value;'  id="loggedout-follow-field"/></p>

			<input type="hidden" name="action" value="subscribe"/>
			<input type="hidden" name="blog_id" value="3098224"/>
			<input type="hidden" name="source" value="http://frederic.logier.org/category/mondelibre/"/>
			<input type="hidden" name="sub-type" value="loggedout-follow"/>

			<input type="hidden" id="_wpnonce" name="_wpnonce" value="c840b0d4c3" /><input type="hidden" name="_wp_http_referer" value="/category/mondelibre/" />
			<p id='bsub-subscribe-button'><input type="submit" value="Inscrivez-moi" /></p>
			</form>
					<div id='bsub-credit'><a href="http://wordpress.com/signup/?ref=lof">Propulsé par WordPress.com</a></div>
		</div><!-- #bitsubscribe -->
	</div><!-- #bit -->
<script type='text/javascript' src='http://s0.wp.com/_static/??/wp-content/js/devicepx.js,/wp-content/themes/pub/sunspot/js/small-menu.js?m=1399919068j'></script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script>	<script type="text/javascript">
	var skimlinks_pub_id = "725X584219"
	var skimlinks_sitename = "fredix.wordpress.com";
	</script>
	<script type="text/javascript" src="http://s.skimresources.com/js/725X1342.skimlinks.js"></script><script src="//stats.wp.com/w.js?22" type="text/javascript"></script>
<script type="text/javascript">
st_go({'blog':'3098224','v':'wpcom','tz':'1','user_id':'0','subd':'fredix'});
ex_go({'crypt':'UE40eW5QN0p8M2Y/RE1LVmwrVi5vQS5fVFtfdHBbPyw1VXIrU3hWLHhzVndTdktBX0ddJnpXRjVaOTd6fj1YMX4ydzRUSk0wbVRfODlnNUZzfmJrW2JOTElkVSZoSTRDc3NsWGQmR3EyaiZXVnZSZFpBN18zZD9yc1Q4JTd2X3FxWXB2a0dXNlhZUX44eFI3Wkk2a2NPSWV+c1cxLzhKOVJOQzIrcTRBamwxUXxGaiZnVnFbckRhSSx0PS90VW9EN1l0czNjNUd4OT81WUdbU1JrSSxKZV1KUlJLb0dPTkY5TTcleitsW3hWK1lkU2E3Kz12ZkcyQStuclNzNF1KOWhvZkFDNU4xMXpGdSY1N0RKay5yQmhlZ3h6Y0lKNGssX2JxbVF3K0VybEZYa2lQZDElYVRBbkdud1AxfHNWckQwRktDXVpsa0VN'});
addLoadEvent(function(){linktracker_init('3098224',0);});
	</script>
<noscript><img src="http://pixel.wp.com/b.gif?v=noscript" style="height:0px;width:0px;overflow:hidden" alt="" /></noscript>
<script>
if ( 'object' === typeof wpcom_mobile_user_agent_info ) {

	wpcom_mobile_user_agent_info.init();
	var mobileStatsQueryString = "";
	
	if( false !== wpcom_mobile_user_agent_info.matchedPlatformName )
		mobileStatsQueryString += "&x_" + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
	
	if( false !== wpcom_mobile_user_agent_info.matchedUserAgentName )
		mobileStatsQueryString += "&x_" + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
	
	if( wpcom_mobile_user_agent_info.isIPad() )
		mobileStatsQueryString += "&x_" + 'ipad_views' + '=' + 'views';

	if( "" != mobileStatsQueryString ) {
		new Image().src = document.location.protocol + '//pixel.wp.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
	}
	
}
</script>
</body>
</html>
