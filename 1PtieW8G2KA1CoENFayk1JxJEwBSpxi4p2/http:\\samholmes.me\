http://samholmes.me/
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
P3P: CP="ALL ADM DEV PSAi COM OUR OTRo STP IND ONL"
X-Tumblr-User: sam-holmes
X-Tumblr-Pixel-0: http://www.tumblr.com/impixu?T=1406212626&J=eyJ0eXBlIjoidXJsIiwidXJsIjoiaHR0cDpcL1wvc2FtaG9sbWVzLm1lXC8iLCJyZXF0eXBlIjowLCJyb3V0ZSI6IlwvIn0=&U=IJBDLNGJDK&K=6cfeabed961f3b547ad8b6f3dfbefdc6e88caa4fb82a41680169666f1159cd3c--http://www.tumblr.com/impixu?T=1406212626&J=eyJ0eXBlIjoicG9zdCIsInVybCI6Imh0dHA6XC9cL3NhbWhvbG1lcy5tZVwvIiwicmVxdHlwZSI6MCwicm91dGUiOiJcLyIsInBvc3RzIjpbeyJwb3N0aWQiOiI1OTA1MjM2NzYxNyIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjU5MDI5MjU3ODM4IiwiYmxvZ2lk
X-Tumblr-Pixel-1: IjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTc3MzM2ODU1MzEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI1MjI2MTk0Nzg4MCIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InJvb3RfYmxvZ2lkIjoiNzQwODg4MzYiLCJyb290X3Bvc3RpZCI6NTEwNzcyMzYzNTMsInBvc3RpZCI6IjUyMDc2OTk0OTE2IiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTIwNzY4NDc5NzEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJyb290X2Jsb2dpZCI6Ijc0MDg4ODM2Iiwicm9vdF9wb3N0aWQiOjUxMDc3MjM2MzUzLCJwb3N0aWQiOiI1MTA4NT
X-Tumblr-Pixel-2: I2MjcxNSIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjUwMjkxOTcwNTMwIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTAyOTE4NTMxOTEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI0ODYyNDM3MDU2OSIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjQ4NDczMzg3NjYyIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNDc0NDc2NzM0MjgiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI0NzE1Mjg0MDEwMCIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3Vy
X-Tumblr-Pixel-3: Y2UiOjMzfSx7InBvc3RpZCI6IjQ3MTQ3NDgyOTIxIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNDU4NTU5NzM2NjMiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM31dfQ==&U=JHEOKFPBPA&K=b34384feb9d79ab36c84b26c4f33469f11f2025de70b0771ab88dc03be8e5a12
X-Tumblr-Pixel: 4
Link: <http://33.media.tumblr.com/avatar_d2b878813232_128.png>; rel=icon
X-UA-Compatible: IE=Edge,chrome=1
Content-Encoding: gzip
X-UA-Device: desktop
Vary: X-UA-Device
Content-Length: 18348
Accept-Ranges: bytes
Date: Thu, 24 Jul 2014 14:37:06 GMT
Connection: close

<!DOCTYPE html>
<script>var __pbpa = true;</script><script>var translated_warning_string = 'Warning: Never enter your Tumblr password unless \u201chttps://www.tumblr.com/login\u201d\x0ais the address in your web browser.\x0a\x0aYou should also see a green \u201cTumblr, Inc.\u201d identification in the address bar.\x0a\x0aSpammers and other bad guys use fake forms to steal passwords.\x0a\x0aTumblr will never ask you to log in from a user\u2019s blog.\x0a\x0aAre you absolutely sure you want to continue?';</script><script type="text/javascript" language="javascript" src="http://assets.tumblr.com/assets/scripts/pre_tumblelog.js?_v=c65abde67782d19ef9d6ba2e8362ef98"></script>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# blog: http://ogp.me/ns/blog#">
	<title>samholmes</title>
	<link rel="icon" href="http://33.media.tumblr.com/avatar_d2b878813232_128.png"/>
	<link rel="alternate" type="application/rss+xml" title="RSS" href="http://samholmes.me/rss"/>
	<meta name="description" content="This is the personal tumblelog for Sam Holmes, a web enthusiast, developer and entrepreneur. Here, you&#039;ll find writings about technology or any other topic that strikes a chord with Sam." />
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	<meta name="viewport" content="width=775"/>

	<meta name="text:Disqus Shortname" content="" />

<link rel="stylesheet" href="http://static.tumblr.com/xcxngn2/Gr0lm7i86/style.css" type="text/css" media="screen" />

<style type="text/css" media="screen">
	code {
border: 1px solid #DDDDDD;
overflow: auto;
background: #fff;
color: #111;
box-shadow: inset 0px 1px 6px -1px rgba(0,0,0,.2);
}

pre code {
display: block;
padding: 6px;
border: 0px;
}

#contents {
width: 800px;
}

.post .content,
#disqus_thread,
.content .notes {
width: 500px;
}

ol {
list-style: decimal;
}
</style>

<link rel="alternate" href="android-app://com.tumblr/tumblr/x-callback-url/blog?blogName=sam-holmes" />
<script src="http://assets.tumblr.com/assets/scripts/tumblelog.js?_v=7edb3c3b36e8b351a1249cf33411a3a7"></script>
<link rel="stylesheet" type="text/css" href="http://assets.tumblr.com/fonts/gibson/stylesheet.css?v=3">
<meta http-equiv="x-dns-prefetch-control" content="off"/>
<meta name="keywords" content="javascript,node.js,programming,asynchronous,asyncronous" />

<!-- BEGIN TUMBLR FACEBOOK OPENGRAPH TAGS --><!-- If you'd like to specify your own Open Graph tags, define the og:url and og:title tags in your theme's HTML. --><!-- Read more: http://ogp.me/ --><meta property="fb:app_id" content="48119224995" /><meta property="og:title" content="samholmes" /><meta property="og:url" content="http://samholmes.me/?og=1" /><meta property="og:description" content="This is the personal tumblelog for Sam Holmes, a web enthusiast, developer and entrepreneur. Here,..." /><meta property="og:type" content="tumblr-feed:tumblelog" /><meta property="og:image" content="http://33.media.tumblr.com/avatar_d2b878813232_128.png" /><meta property="al:ios:url" content="tumblr://x-callback-url/blog?blogName=sam-holmes" /><meta property="al:ios:app_name" content="Tumblr" /><meta property="al:ios:app_store_id" content="305343404" /><meta property="al:android:url" content="tumblr://x-callback-url/blog?blogName=sam-holmes" /><meta property="al:android:app_name" content="Tumblr" /><meta property="al:android:package" content="com.tumblr" /><!-- END TUMBLR FACEBOOK OPENGRAPH TAGS -->


<!-- TWITTER TAGS --><meta charset="utf-8"><meta name="twitter:site" content="tumblr" /><meta name="twitter:card" content="summary" /><meta name="twitter:title" content="sam-holmes" /><meta name="twitter:description" content="This is the personal tumblelog for Sam Holmes, a web enthusiast, developer and entrepreneur. Here, you&#039;ll find writings about technology or any other topic that strikes a chord with Sam." /><meta name="twitter:app:name:iphone" content="Tumblr" /><meta name="twitter:app:name:ipad" content="Tumblr" /><meta name="twitter:app:name:googleplay" content="Tumblr" /><meta name="twitter:app:id:iphone" content="305343404" /><meta name="twitter:app:id:ipad" content="305343404" /><meta name="twitter:app:id:googleplay" content="com.tumblr" /><meta name="twitter:app:url:iphone" content="tumblr://x-callback-url/blog?blogName=sam-holmes&amp;referrer=twitter-cards" /><meta name="twitter:app:url:ipad" content="tumblr://x-callback-url/blog?blogName=sam-holmes&amp;referrer=twitter-cards" /><meta name="twitter:app:url:googleplay" content="tumblr://x-callback-url/blog?blogName=sam-holmes&amp;referrer=twitter-cards" />

</head>
<body>
<div class="noise">
	<div id="container">
		<div id="header">
			<h1><a href="/">samholmes</a></h1>
			<ul id="nav">
			
			
            
			</ul>
		</div>
		<a name="contents"></a>
		<div id="contents">
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>22nd August 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/59052367617/what-if-return-was-callback">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/59052367617/what-if-return-was-callback#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIys-ovy1" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/javascript">javascript </a>
                                
                                        <a href="http://samholmes.me/tagged/asynchronous">asynchronous </a>
                                
                                        <a href="http://samholmes.me/tagged/ideas">ideas </a>
                                
                                        <a href="http://samholmes.me/tagged/Thoughts">Thoughts </a>
                                
                                        <a href="http://samholmes.me/tagged/pondering">pondering </a>
                                
                                        <a href="http://samholmes.me/tagged/what-if">what if </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/59052367617/what-if-return-was-callback">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/59052367617/what-if-return-was-callback">What if return was callback()?</a></h3>
						<div class="go">
							<p>In JavaScript, you have the return statement which synchronously returns a value for a function. Asynchronous functions usually has a callback that it calls when it has a value to return. Some async functions call that callback more than once (streams).</p>

<p>What if JavaScript had a return statement that was asynchronous? At first this doesn&#8217;t if make sense; that would block execution. No, what I&#8217;m saying is, what if JavaScript was smart enough to know which code depended on a returned value from a function. Then instead of this:</p>

<pre><code>fs.readFile('foo.txt', function(err, file){
  console.log(file);
});
console.log("reading file");
</code></pre>

<p>You would write code like this:</p>

<pre><code>console.log(fs.readFile('foo.txt'));
console.log("reading file");
</code></pre>

<p>JavaScript would just need to be smart enough to know that the first console.log statement depended on the output of fs.readFile whether it returns synchronously or not.</p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/59029257838/firebase-chat-app">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/59029257838/firebase-chat-app#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIys_Qlvk" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/firebase">firebase </a>
                                
                                        <a href="http://samholmes.me/tagged/chat">chat </a>
                                
                                </p>	

				
				
				

				

				
					</div>
					<div class="content link">
                                                <div class="link-post">
                                                  <a href="http://samholmes.me/post/59029257838/firebase-chat-app">A LINK</a>
                                                </div>   
						<h3><a href="http://jsbin.com/ePabADa/3" class="link" >Firebase Chat App</a></h3>
						
							<div class="description"><p><p>I built this chat application in 45 minutes!</p></p></div>
						
				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>8th August 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/57733685531/how-javascript-inheritance-could-have-been">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/57733685531/how-javascript-inheritance-could-have-been#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIyrnCY4R" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/javascript">javascript </a>
                                
                                        <a href="http://samholmes.me/tagged/oop">oop </a>
                                
                                        <a href="http://samholmes.me/tagged/object-oriented-programming">object-oriented programming </a>
                                
                                        <a href="http://samholmes.me/tagged/inheritance">inheritance </a>
                                
                                        <a href="http://samholmes.me/tagged/prototypal-inheritance">prototypal-inheritance </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/57733685531/how-javascript-inheritance-could-have-been">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/57733685531/how-javascript-inheritance-could-have-been">How JavaScript Inheritance could have been</a></h3>
						<div class="go">
							<p>JavaScript could have been so much more simpler if it had just one extra thing, and got rid of the <code>new</code> operator, and here&#8217;s why.</p>

<pre><code>function Animal(name){
    return {
        parent:: Animal.blueprint,
        name: name
    };
}

Animal.blueprint = {
    name: 'unknown',
    speak: function(){
        alert("Grrrrrrrrrrr!");
    }
};


var instance = Animal('bob');

instance.speak(); // "Grrrrrrrrrr!"
instance.name === 'bob'; // true


function Human(){
    return {
        parent:: Human.blueprint,
        name: name
    };
}

// Human blueprine
Human.blueprint = {
    // Inherit from Animal
    parent:: Animal.blueprint,
    speak: function(){
        alert("Hi, I'm " + Human.blueprint.name); // Notice that Human.blueprint.name isn't defined, but inherited from Animal.blueprint
    }
}


// Or you could have used a syntactic surgary method to extend

Human.blueprint = extend(Animal.blueprint, {
    speak: function(){
        alert("Hi, I'm " + Human.blueprint.name);
    }
});


function extend(parent, child){
    child..parent = parent;
    return child;
}


var instance = Human('bob');

instance.speak(); // "Hi, I'm bob!"
instance.name === 'bob'; // true
</code></pre>

<p>Above you&#8217;ll notice this weird object literal syntax where you have two colons instead of one. And you&#8217;ll also notice two dots for property accessing instead of one. What is this? Well, first let&#8217;s talk about the infamous prototype in JavaScript.</p>

<p>The prototype of an object is another object that the JavaScript engine keeps track of for each object. It&#8217;s stored in what the ECMAScript standard calls &#8220;slots&#8221;. Whenever a property isn&#8217;t found in an object, the JavaScript engine looks at the object&#8217;s prototype for the property, and if it&#8217;s found returns the value, otherwise it looks at the prototype&#8217;s prototype, and repeats the process on and on up the prototype &#8220;chain&#8221; until it finds a defined property or doesn&#8217;t find one at all.</p>

<p>These slots are hidden from the programmer, however some non-standard implementations of a <code>__proto__</code> property for each object have made the prototype slot accessible. This is bad for one reason which I&#8217;ll get to later. But, there is a reason why I think being able to explicitly access and define a slot is a good idea.</p>

<p>Which brings me back around to the double colons and dots. If you could define object &#8220;slots&#8221; or &#8220;meta properties&#8221; on an object, then we&#8217;d have the power of <code>__proto__</code> without the bad part, which is: the properties for an object would be clear of any implementation details, therefore you could still use <code>obj.__proto__</code> for your own uses without effecting the object&#8217;s meta data.</p>

<p>Great, so let&#8217;s talk about naming conventions. The whole purpose of the prototype is so objects can inherit properties from other objects. So why call it prototype? Well, it fits the definition, but I say it doesn&#8217;t have to be a technical word the newcomers have to learn and understand (I believe the name itself acts in part of the confusion to learning JavaScript). I would purpose that the object&#8217;s prototype be called it&#8217;s <strong>parent</strong>. So instead of <code>obj..prototype = otherObject</code>, it would be <code>obj..parent = otherObject</code>. &#8220;parent&#8221; is easier to type and feels cleaner.</p>

<p>So what about the <code>new</code> operator, why get rid of it? Well, all it does is call a function with <code>this</code> bound to the function&#8217;s prototype property and returns <code>this</code>. I bet that if you&#8217;re struggling with JavaScript, you didn&#8217;t understand a lick of what i just said, or at least it took you a while to wrap your head around. I say we don&#8217;t need all this confusion. I say you give access to the meta properties (slots) of an object to the programmer and let them define what the parent meta property should be of an object for inheritance. Done.</p>

<p>Now we could add sugar and conventions to our code that would mimic whatever <code>new</code> operator pattern that was trying to be mimic from Java in the first place. All we&#8217;d need is a function that returns an object with a defined parent.</p>

<pre><code>function newMyObject(prop) {
  return {
    parent:: newMyObject.blueprint, 
    property: prop
  }
}

newMyObject.blueprint = {
  property: "Default value"
}

var instance = newMyObject();
</code></pre>

<p>Remember that <code>::</code> means define a meta property, in this case the parent meta property.</p>

<p>We call it <code>newMyObject</code> as a convention for &#8220;constructor functions&#8221; like this. We could follow another convention where we just make the first letter of the identifier uppercase, i.e. &#8220;MyObject&#8221;.</p>

<p>What&#8217;s <code>newMyObject.blueprint</code>? Another convention. It&#8217;s just a property of newMyObject that&#8217;s used to define the parent object of each instance that newMyObject returns. We could have called it <code>newMyObject.prototype</code> or <code>newMyObject.parent</code>, but I feel like either of those would have been confusing. The identifier <code>blueprint</code> seems to convey what it&#8217;s trying to accomplish, which is to be the blueprint for each instance.</p>

<p>In classical OO programming we have these &#8220;classes&#8221; that act as <em>blueprints</em> to instances. In a similar way, we have an object that acts as a blueprint to instances. There are no classes in JavaScript, just objects. So this convention makes more since to a classical OO programmer. However, the coder is not limited to using these conventions.</p>

<p>So. All this makes it simpler, because now when you teach JavaScript to people, all they need to &#8220;get&#8221; is the meta properties and specifically the parent meta property. Once they understand this concept, they can go ahead a recklessly create any objects and patterns to their hearts content. However, you might want to teach them some good practices and patterns.</p>

<p>Look at the above code at the beginning of this post for another pattern that people could use, the <code>extend</code> function. Go a head and see if you could figure it out on your own because I already taught you about the parent meta property. The extend function isn&#8217;t needed though, it&#8217;s just some syntactic sugar.</p>

<p>Final note: Whether meta properties should be constant or not is subject to good discussion. I personally think that meta properties should be variable, but there may be good reason to making your script error out if you attempt to define an already defined meta property. Let me know what the argument for constants is.</p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>5th June 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/52261947880/lesson-i-should-learn-use-mysql-as-little-as">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/52261947880/lesson-i-should-learn-use-mysql-as-little-as#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIymh3Wde" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/mysql">mysql </a>
                                
                                        <a href="http://samholmes.me/tagged/mysql-hate">mysql hate </a>
                                
                                        <a href="http://samholmes.me/tagged/mysql--It%27s-complicate">mysql--It&#039;s complicate </a>
                                
                                </p>	

				
				
				
						
					</div>
					<div class="content image">
                                           <div class="image-post">
                                              <a href="http://samholmes.me/post/52261947880/lesson-i-should-learn-use-mysql-as-little-as">A PHOTO</a>
                                           </div>
						
<a href="http://38.media.tumblr.com/9d6aa8d82c429bdeb586e36e80813ddd/tumblr_mny4rbXLvX1qc3qg0o1_500.png" rel="prettyPhoto">
<span style="background: url(http://31.media.tumblr.com/9d6aa8d82c429bdeb586e36e80813ddd/tumblr_mny4rbXLvX1qc3qg0o1_400.png) no-repeat center center;" class="image-wrap">
<img class="image" src="http://31.media.tumblr.com/9d6aa8d82c429bdeb586e36e80813ddd/tumblr_mny4rbXLvX1qc3qg0o1_400.png" />
</span>
</a>

						
							<div class="description"><p><strong>Lesson I should learn: Use MySQL as little as possible.</strong></p>

<p>Too much time has been wasting trying to &#8220;figure out how to do it in MySQL&#8221;, under the assumption that this would make my application better/faster. No! I shouldn&#8217;t think like this anymore. Do everything in the application land (business logic); just ask query as simply as possible, get in get out. MySQL, move out the way BITCH!</p></div>
						
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>3rd June 2013</h2></li>
				
				
				
				
				
				
				    
                                <li class="notes">
    				       <a href="http://samholmes.me/post/52076994916/comics0026-sam-holmes-comics0026-a/#notes">4 notes</a>&nbsp;
                                </li>
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/52076994916/comics0026-sam-holmes-comics0026-a">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/52076994916/comics0026-sam-holmes-comics0026-a#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIymW1_5a" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                </p>	

				
				
				
						
					</div>
					<div class="content image">
                                           <div class="image-post">
                                              <a href="http://samholmes.me/post/52076994916/comics0026-sam-holmes-comics0026-a">A PHOTO</a>
                                           </div>
						<a href="http://samholmes.me/image/52076994916">
<a href="http://31.media.tumblr.com/ae667dabdcb5589c3fbef3dc96ee53ed/tumblr_mn7kybVHiE1rh8r4xo1_500.jpg" rel="prettyPhoto">
<span style="background: url(http://38.media.tumblr.com/ae667dabdcb5589c3fbef3dc96ee53ed/tumblr_mn7kybVHiE1rh8r4xo1_400.jpg) no-repeat center center;" class="image-wrap">
<img class="image" src="http://38.media.tumblr.com/ae667dabdcb5589c3fbef3dc96ee53ed/tumblr_mn7kybVHiE1rh8r4xo1_400.jpg" />
</span>
</a>
</a>
						
							<div class="description"><p><a href="http://comics0026.tumblr.com/post/51100766609/sam-holmes-comics0026-a-riddle-i-came-up" class="tumblr_blog">comics0026</a>:</p>

<blockquote><p><a class="tumblr_blog" href="http://samholmes.me/post/51085262715/comics0026-a-riddle-i-came-up-with-it-can-be-a">sam-holmes</a>:</p>

<blockquote>
<p><a class="tumblr_blog" href="http://comics0026.tumblr.com/post/51077236353/a-riddle-i-came-up-with-it-can-be-a-bit-of-a">comics0026</a>:</p>
<blockquote>
<p>A riddle I came up with. It can be a bit of a stumper. I’ll post the answer later today.</p>
</blockquote>
<p>The answer, I would presume, is any number, so long as you add a negative.</p>
<p>Let me know if I am correct, comics0026.</p>
</blockquote>

<p>While technically correct, it’s not the answer I’m looking for. :)</p></blockquote>

<p>What is the answer you&#8217;re looking for?</p></div>
						
				

				

				

				

				

				
				
				
					<div class="description">Reblogged from <a href="http://comics0026.tumblr.com/post/51100766609/sam-holmes-comics0026-a-riddle-i-came-up">The Collective Collections of Comics0026</a></div>
				

				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
				
				
				
				
				
				    
                                
                                
                                    <li>
				        Sam Holmes
                                    </li>
			        
                                <li class="permalink"><a href="http://samholmes.me/post/52076847971/i-find-that-nodemon-is-faster-than-supervisor-for">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/52076847971/i-find-that-nodemon-is-faster-than-supervisor-for#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIymW1QDZ" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/node.js">node.js </a>
                                
                                        <a href="http://samholmes.me/tagged/nodemon">nodemon </a>
                                
                                </p>	

				
				
				

				
					</div>
					<div class="content quote">

                                                <div class="quote-post">
                                                  <a href="http://samholmes.me/post/52076847971/i-find-that-nodemon-is-faster-than-supervisor-for">A QUOTE</a>
                                                </div>

						<h4>I find that nodemon is faster than supervisor for me.</h4>

						
				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>22nd May 2013</h2></li>
				
				
				
				
				
				
				    
                                <li class="notes">
    				       <a href="http://samholmes.me/post/51085262715/comics0026-a-riddle-i-came-up-with-it-can-be-a/#notes">4 notes</a>&nbsp;
                                </li>
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/51085262715/comics0026-a-riddle-i-came-up-with-it-can-be-a">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/51085262715/comics0026-a-riddle-i-came-up-with-it-can-be-a#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIylawpzx" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                </p>	

				
				
				
						
					</div>
					<div class="content image">
                                           <div class="image-post">
                                              <a href="http://samholmes.me/post/51085262715/comics0026-a-riddle-i-came-up-with-it-can-be-a">A PHOTO</a>
                                           </div>
						<a href="http://samholmes.me/image/51085262715">
<a href="http://31.media.tumblr.com/ae667dabdcb5589c3fbef3dc96ee53ed/tumblr_mn7kybVHiE1rh8r4xo1_500.jpg" rel="prettyPhoto">
<span style="background: url(http://38.media.tumblr.com/ae667dabdcb5589c3fbef3dc96ee53ed/tumblr_mn7kybVHiE1rh8r4xo1_400.jpg) no-repeat center center;" class="image-wrap">
<img class="image" src="http://38.media.tumblr.com/ae667dabdcb5589c3fbef3dc96ee53ed/tumblr_mn7kybVHiE1rh8r4xo1_400.jpg" />
</span>
</a>
</a>
						
							<div class="description"><p><a href="http://comics0026.tumblr.com/post/51077236353/a-riddle-i-came-up-with-it-can-be-a-bit-of-a" class="tumblr_blog">comics0026</a>:</p>

<blockquote><p>A riddle I came up with. It can be a bit of a stumper. I’ll post the answer later today.</p></blockquote>

<p>The answer, I would presume, is any number, so long as you add a negative.</p>

<p>Let me know if I am correct, comics0026.</p></div>
						
				

				

				

				

				

				
				
				
					<div class="description">Reblogged from <a href="http://comics0026.tumblr.com/post/51077236353/a-riddle-i-came-up-with-it-can-be-a-bit-of-a">The Collective Collections of Comics0026</a></div>
				

				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>12th May 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                    <li>
				        LF
                                    </li>
			        
                                <li class="permalink"><a href="http://samholmes.me/post/50291970530/eta-oin-shr">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/50291970530/eta-oin-shr#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIykref7Y" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                </p>	

				
				
				

				
					</div>
					<div class="content quote">

                                                <div class="quote-post">
                                                  <a href="http://samholmes.me/post/50291970530/eta-oin-shr">A QUOTE</a>
                                                </div>

						<h4>eta oin shr</h4>

						
				

				

				

				

				
				
				

				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/50291853191">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/50291853191#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIykreCU7" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                </p>	

				
				
				
						
					</div>
					<div class="content image">
                                           <div class="image-post">
                                              <a href="http://samholmes.me/post/50291853191">A PHOTO</a>
                                           </div>
						<a href="http://samholmes.me/image/50291853191">
<a href="http://31.media.tumblr.com/d56331223aa8523011ecc84e5746f82d/tumblr_mmph0enkne1qc3qg0o1_500.png" rel="prettyPhoto">
<span style="background: url(http://37.media.tumblr.com/d56331223aa8523011ecc84e5746f82d/tumblr_mmph0enkne1qc3qg0o1_400.png) no-repeat center center;" class="image-wrap">
<img class="image" src="http://37.media.tumblr.com/d56331223aa8523011ecc84e5746f82d/tumblr_mmph0enkne1qc3qg0o1_400.png" />
</span>
</a>
</a>
						
				

				

				

				

				

				
				
				

				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>22nd April 2013</h2></li>
				
				
				
				
				
				
				    
                                <li class="notes">
    				       <a href="http://samholmes.me/post/48624370569/a-happy-bitcoin-birthday/#notes">1 note</a>&nbsp;
                                </li>
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/48624370569/a-happy-bitcoin-birthday">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/48624370569/a-happy-bitcoin-birthday#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIyjIFGE9" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/bitcoin">bitcoin </a>
                                
                                        <a href="http://samholmes.me/tagged/crowd-funding">crowd funding </a>
                                
                                        <a href="http://samholmes.me/tagged/birthday">birthday </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/48624370569/a-happy-bitcoin-birthday">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/48624370569/a-happy-bitcoin-birthday">A Happy, Bitcoin Birthday!</a></h3>
						<div class="go">
							<p>So my birthday is coming up next month on May 5th, and I had this idea to publish a bitcoin address that would act as a birthday fund. I will use the funds to throw a little party with friends and family for my 22nd birthday!</p>

<p>So feel free to wish me a happy birthday! I appreciate your generosity, and I look forward to seeing how this goes. Thanks! :)</p>

<p><strong>1PtieW8G2KA1CoENFayk1JxJEwBSpxi4p2</strong></p>

<p><img src="http://bitcoinbox.ru/display/graph.php?btcaddress=1PtieW8G2KA1CoENFayk1JxJEwBSpxi4p2" alt="Balance" title="Balance"/></p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>20th April 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/48473387662/are-you-selfish">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/48473387662/are-you-selfish#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIyj9FJAE" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/philosophy">philosophy </a>
                                
                                        <a href="http://samholmes.me/tagged/thoughts">thoughts </a>
                                
                                        <a href="http://samholmes.me/tagged/selfish">selfish </a>
                                
                                        <a href="http://samholmes.me/tagged/status-quo">status quo </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/48473387662/are-you-selfish">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/48473387662/are-you-selfish">Are you selfish?</a></h3>
						<div class="go">
							<p>Why not challenge the status quo?</p>

<p>Are you selfish? Most wouldn&#8217;t like to answer yes to this question, but that&#8217;s only because it&#8217;s not desirable to have this quality. But here&#8217;s the definition:</p>

<blockquote>
  <p>Adjective.<br/>
  (of a person, action, or motive) Lacking consideration for others; concerned chiefly with one&#8217;s own personal profit or pleasure.</p>
</blockquote>

<p>I think if we really were to evaluate ourselves and determine whether we fall under this definition, we would find that we are at least somewhat selfish, but we would be okay with it. Relatively speaking, if most people are selfish to a common extent, then it wouldn&#8217;t be a bad thing; you would be normal (of the norm), at least not for simply being abnormal.</p>

<p>To be selfish is to be lacking consideration for others. Are we not doing this all of the time? Say we go to a Starbucks to buy a cup of coffee and a lunch item. A lot of the time (at least where I live), you&#8217;ll come across a homeless person. This homeless person would probably want a cup of coffee and a lunch item too. So, why not ask him if he does. If he says yes, then the selfless thing to do would be to get him one. In fact, you could even explain to the person behind the Starbucks register that this homeless person would like something but doesn&#8217;t have the money for it. The selfless thing to do for the barista would be to give the homeless person something(s) at no charge.</p>

<p>Yet, this rarely (if at all) happens because everyone is looking out for their own self interest (they&#8217;re technically selfish). The barista wouldn&#8217;t want to lose their job. You probably wouldn&#8217;t want to give your money away to every person in need (you couldn&#8217;t physically handle the demand). If we all take care of ourselves, then that requires us to be focused on the self, and focused on selfish things.</p>

<p>Looking at the the word &#8220;selfish&#8221; in this way, makes us realize that it isn&#8217;t such a bad word after all. Maybe next time when someone calls you selfish, you&#8217;re immediate thought or response could be &#8220;Aren&#8217;t we all?&#8221; But maybe they&#8217;re calling you <em>more selfish</em> or selfish to an extreme extent from the norm. In this case, ask whether you&#8217;re extension from the norm is <em>bad</em>. Challenge the status quo as to why it&#8217;s bad to be more selfish than usual. Maybe you&#8217;re being selfish for a good reason (i.e. there is valid rationale behind your decisions).</p>

<p>In no way am I suggesting that it is never bad to be overly selfish. The purpose of this post is to explain how it&#8217;s not always bad, nor is it always good. Things aren&#8217;t black and white, yet this is how we all tend to believe because of how we&#8217;re influenced. Think differently; we discover more this way. Thanks!</p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>8th April 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/47447673428/natural-async-programming-contd-signal-oriented">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/47447673428/natural-async-programming-contd-signal-oriented#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIyiC6WfK" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/programming">programming </a>
                                
                                        <a href="http://samholmes.me/tagged/asynchronous">asynchronous </a>
                                
                                        <a href="http://samholmes.me/tagged/javascript">javascript </a>
                                
                                        <a href="http://samholmes.me/tagged/signals">signals </a>
                                
                                        <a href="http://samholmes.me/tagged/SOP">SOP </a>
                                
                                        <a href="http://samholmes.me/tagged/OOP">OOP </a>
                                
                                        <a href="http://samholmes.me/tagged/signal-based-programming">signal-based programming </a>
                                
                                        <a href="http://samholmes.me/tagged/callbacks">callbacks </a>
                                
                                        <a href="http://samholmes.me/tagged/node.js">node.js </a>
                                
                                        <a href="http://samholmes.me/tagged/functional-programming">functional programming </a>
                                
                                        <a href="http://samholmes.me/tagged/FRP">FRP </a>
                                
                                        <a href="http://samholmes.me/tagged/functional-reactive-programming">functional reactive programming </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/47447673428/natural-async-programming-contd-signal-oriented">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/47447673428/natural-async-programming-contd-signal-oriented">Natural Async Programming (cont&#8217;d) &ndash; Signal-Oriented Programming</a></h3>
						<div class="go">
							<p><em>This is a follow up post to <a href="http://samholmes.me/post/47152840100/natural-async-programming">Natural Async Programming</a></em></p>

<p>Giving my thoughts <em>more thought</em>, I realized a concept that could change everything. Something that OOP did for the Macintosh era, could do for our era–the async revolution. I looked into some things such as Flapjax and Elm, and I discovered an idea that I&#8217;d like to define in this post, signals. Not signals in the Elm sense specifically, but signals in my own definition.</p>

<p>First, let&#8217;s talk about event emitters. Event emitters can emitter any number of events, and handlers can be attached to these events and be invoked when the events are emitted. This is very powerful, but in JS, this is all done with callbacks:</p>

<pre><code>emitter.on('event', callback);
...
</code></pre>

<p>Now, I&#8217;d like to define a <em>signal</em> as a lower level form of event emitter, but rather than a collection of events, it is a single event, a single signal. Signals, however, are not done with callbacks. They&#8217;re handled automatically by the interpreter:</p>

<pre><code>var signal = createSignal();
data = signal;
</code></pre>

<p><em>createSignal is just an example of a function that would create a new signal; signals are more ubiquitous that having a single interface for creating signals, i.e. an async function could return a signal.</em></p>

<p>The idea is that a signal is a value that changes over time. The value is used as you would any value, but the code is re-evaluated when the signal changes. This is analogous to an event being emitted.</p>

<p>In fact, <code>data</code> is a signal too; everything is a signal! Just like in OOP, everything is an object, in SOP (signal oriented programming) everything is a signal!</p>

<p>But if everything is a signal, then wouldn&#8217;t this get confusing when everything is changing? No, because some signals are static, and don&#8217;t change. If I create a function that just returns the number 23, that&#8217;s a static signal.</p>

<p>Back to the comparison to signals and event emitters. Event emitters in a signal-based language would just be a collection of signals:</p>

<pre><code>emitter.event1;
emitter.event2;
...
</code></pre>

<p>These signals can change, reacting to these signals is as simple as just using them. But, sometimes you&#8217;ll want to be able to just do something when a signal changes. Well, you just use the signal, and that code will be evaluated on signal changes. So you could just do an if statement:</p>

<pre><code>if (signal)
{
...
}
</code></pre>

<p>Though, sometimes in JS, you might have callbacks that don&#8217;t have values passed to them (like setTimeout/Interval). In these cases, <code>if (signal)</code> would evaluate to false because the value would be undefined in the signal. To solve this, there should be a statement just for handing signal changes:</p>

<pre><code>when (signal)
{
...
}
</code></pre>

<p>It doesn&#8217;t have to be named <code>when</code>, it could be named <code>on</code> or <code>change</code> even.</p>

<p>Signal-oriented programming allows us to use all the power that functions give us but without the functions! Instead you just declare what happens in your program and when your program has signal changes, it responds. It&#8217;s a very enticing idea, isn&#8217;t it?</p>

<p>But, sometimes you don&#8217;t want to respond to a signal any longer. Take setInterval for example. If you had a similar function, <code>interval</code> that takes an integer for milliseconds as input and returns an <code>undefined</code> value for every signal change on that interval, you wouldn&#8217;t be able to <em>clear</em> this interval because there is no ID number to use to clear it. However, there is the signal itself, so all you need is a function that could kill the signal:</p>

<pre><code>var intervalSignal = interval(1000);
when (intervalSignal)
{
  var num = Math.random();
  if (num*100 &amp;lt; 23)
    kill(intervalSignal);
}
</code></pre>

<p>The kill function will deallocate/garbage collect anything that is envolved with a signal. This function is probably unnecessary, because you could just use <code>delete</code> to delete the variable itself, but maybe <code>kill()</code> can do something more that <code>delete</code> doesn&#8217;t do (i.e. stop all variables that reference the signal from receiving changes, or maybe keeping the value of the signal without allowing it to change further).</p>

<p>In conclusion, I think the idea of Signal-Oriented Programming should be the next hot topic for programming language semantics. I personally think, signals, or something like it, could change the way we program, and the way we think about how computers work, forever.</p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>4th April 2013</h2></li>
				
				
				
				
				
				
				    
                                <li class="notes">
    				       <a href="http://samholmes.me/post/47152840100/natural-async-programming/#notes">2 notes</a>&nbsp;
                                </li>
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/47152840100/natural-async-programming">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/47152840100/natural-async-programming#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIyhwXpsa" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/asyncronous">asyncronous </a>
                                
                                        <a href="http://samholmes.me/tagged/programming">programming </a>
                                
                                        <a href="http://samholmes.me/tagged/javascript">javascript </a>
                                
                                        <a href="http://samholmes.me/tagged/async">async </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/47152840100/natural-async-programming">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/47152840100/natural-async-programming">Natural Async Programming</a></h3>
						<div class="go">
							<p>JavaScript has really taken asynchronous programming mainstream, but some of the lessons we&#8217;ve learned along the way is that async is different. Rather than the usual linear program flow, you have these callbacks which can be nested or managed by a control flow lib. However, what if we dreamt something more natural for async programming, because async is awesome and it deserves it.</p>

<p>Promises is the idea that an async function returns an object which handles the outcome of an async action. I like this concept because you&#8217;re using the return statement where it should be used (output). Inversely, callbacks seem backwards: you use the input to handle the output of a function (how backwards). However, promises are still callbacks, just nicer.</p>

<p>I wondered then, what would it be like if we had async built into a language? How could this work? Could it even work? Let&#8217;s hypothesize.</p>

<p>Say the return statement was asynchronous in that the function would wait until it is used before it returns output:</p>

<pre><code>function af(){
  return setTimeout(function(){
    return 'done';
  }, 1000)
}
</code></pre>

<p>Here, setTimeout returns what the callback returns, but it is async so it doesn&#8217;t return &#8216;done&#8217; immediately. This is interesting, but the language would have to know which parts of the code depend on other async operations.</p>

<pre><code>var foo = af();

if (foo === 'done')
{
   alert('second');
}

alert('first');
</code></pre>

<p>Sense the if-statement depends on foo, then the if statement is put on hold before, and the <code>alert('first')</code> statement is executed.</p>

<p>This will make parallel async and serial async almost invisible to the programmer:</p>

<pre><code>// parallel invocation
var a = async();
var b = async();
doSomethingWith(a, b); // Final results

// Serial invocation
var a = async();
var b = doSomethingWith(a);
doSomethingWith(b); // Final results
</code></pre>

<p>Some more examples to get used to how this works:</p>

<pre><code>var done = sleep(2000);
if (done) {
  alert('Done sleeping!');
}
alert('Sleeping');

var posts = db.query("select * from posts");
var comments = db.query("select * from comments");

// This next statement is using the pending variables
// so it will be queued until for later, automatically
res.render('template', {posts:posts, comments:comments});

// This will run before the above because it's not depending 
// on the async pending variables
Analytics.push(request);
</code></pre>

<p>Somehow, this could be possible with it being implemented at the interpreter level. <strong>Could it be done?</strong></p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/47147482921/mac-os-x-mountain-lion-feedback">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/47147482921/mac-os-x-mountain-lion-feedback#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIyhwDNyf" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/apple">apple </a>
                                
                                        <a href="http://samholmes.me/tagged/mac">mac </a>
                                
                                        <a href="http://samholmes.me/tagged/osx">osx </a>
                                
                                        <a href="http://samholmes.me/tagged/mountain-lion">mountain lion </a>
                                
                                        <a href="http://samholmes.me/tagged/feedback">feedback </a>
                                
                                        <a href="http://samholmes.me/tagged/complaint">complaint </a>
                                
                                        <a href="http://samholmes.me/tagged/rant">rant </a>
                                
                                        <a href="http://samholmes.me/tagged/suggestions">suggestions </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/47147482921/mac-os-x-mountain-lion-feedback">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/47147482921/mac-os-x-mountain-lion-feedback">Mac OS X Mountain Lion Feedback</a></h3>
						<div class="go">
							<p>Here&#8217;s a compilation of the various things I suggest Apple fixes in Mac OS X. I&#8217;ll be adding to this list over time. (Warning, it gets very whiny)</p>

<ol><li><p>In a fullscreen app, the menu bar shouldn&#8217;t appear until you move your cursor past the top most pixels. This is how the dock works for the bottom most pixels. It&#8217;s so annoying to have the menu bar get in your way when you mean to click on a tab in Terminal.</p></li>
<li><p>1st Desktop should be closable/sortable.</p></li>
<li><p>NO. That&#8217;s directed toward waiting for the close button on desktops or needing to hold Option to show the close. Make this easier to do.</p></li>
<li><p>Trackpad gestures shouldn&#8217;t require that you lift your hands off the trackpad before you could initiate another gesture. For example, swipe up with three fingers to go into mission control, then swipe left and right to switch desktops, then pull back down to exit mission control.</p></li>
<li><p>You don&#8217;t need to move your cursor in order to click on a window in Mission Control. Right now, swipe up with three fingers. Now click on the window directly under your cursor. Nothing will happen, because OS X is being stupid. You need to move your mouse until a blue highlight appears around the window before you can click on it. So stupid.</p></li>
<li><p>Please squish bugs; I&#8217;m on a Mac right, not a PC? When I open mission control while an application is launching, the app will appear over mission control, not with it. And if I close an application while in mission control, well: <a href="http://cl.ly/image/0d2s2P3q1A1d">http://cl.ly/image/0d2s2P3q1A1d</a></p></li>
<li><p>I want my RAM back.</p></li>
</ol>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			
			<div class="post">
				<div class="sidebar">
	            <ul>
	            
				
					<li class="date"><h2>20th March 2013</h2></li>
				
				
				
				
				
				
				    
                                
                                
                                <li class="permalink"><a href="http://samholmes.me/post/45855973663/error-handling-in-async-programming-help">Permalink</a></li>
                       
    				
                                 <li class="comments">
                    <a href="http://samholmes.me/post/45855973663/error-handling-in-async-programming-help#disqus_thread" style="border-width: 0px"></a>
                                 </li>                    
                                
			        <li class="tweet"><a href="http://twitter.com/home?status=http://tmblr.co/ZOcvIygjEg4V" target="_blank">Tweet this</a></li>
				</ul>
                                
                                <p class="tags">
                                
                                        <a href="http://samholmes.me/tagged/node.js">node.js </a>
                                
                                        <a href="http://samholmes.me/tagged/asyncronous">asyncronous </a>
                                
                                        <a href="http://samholmes.me/tagged/asyn">asyn </a>
                                
                                        <a href="http://samholmes.me/tagged/javascript">javascript </a>
                                
                                </p>	

				
					</div>
					<div class="content text">
                                            <div class="text-post">
                                               <a href="http://samholmes.me/post/45855973663/error-handling-in-async-programming-help">A TEXT POST</a>
                                            </div>
						<h3><a href="http://samholmes.me/post/45855973663/error-handling-in-async-programming-help">Error Handling in Async Programming &ndash; Help</a></h3>
						<div class="go">
							<p>How do I spend less time worrying about errors and more time focusing on what my functions actually do? I have these model files which are a collection of functions that accept an info object and a callback function. When something is missing, but required, in the info object, I error out calling the callback with <code>new Error('missing info.something')</code>. It&#8217;s not very DRY because I have to write the same <code>if (!info.something)</code> in my model functions whenever I choose to create a new function. But, I have to do it in order for my application to spit out meaningful error messages. This is the problem with async programming, at least for me.</p>

<p>Does anyone have any solutions to this? One where I wouldn&#8217;t have to worry about error handling; if something goes wrong, then my app will give a meaningful error (critical errors would crash the app, non-critical would just give a HTTP 500 status code).</p>
						</div>
                                                
                                                

				
				
				

				

				

				

				

				
				
				

				
					
				
                
				</div>
			</div>
			


            

			

			
			<div class="post" style="margin-bottom: 40px;">
                                <div class="sidebar">

                                </div>
				<div class="footer-nav clearfix" style="text-transform:lowercase;">
					    
   
					
						<a class="next-page" href="/page/2">Next &#187;</a>
					
				</div>
			</div>
			

		</div>
		<a name="description"></a>
		<div id="footer" class="clearfix">

			

		</div>
       </div>
</div>

<div class="footer-wrap">
	<p class="footer">Atonement by <a href="http://www.madebylipsum.com">Toni Romero</a> Powered by <a href="http://www.tumblr.com/">Tumblr</a> / <a href="/archive">Archives</a> / <a href="http://samholmes.me/rss">Feed</a></p>
</div>

	
    <script type="text/javascript">
    //<![CDATA[
    (function() {
        var links = document.getElementsByTagName('a');
        var query = '?';
        for(var i = 0; i < links.length; i++) {
        if(links[i].href.indexOf('#disqus_thread') >= 0) {
            query += 'url' + i + '=' + encodeURIComponent(links[i].href) + '&';
        }
        }
        document.write('<script charset="utf-8" type="text/javascript" src="http://disqus.com/forums/samholmes/get_num_replies.js' + query + '"></' + 'script>');
    })();
    //]]>
    </script>
    
<!-- BEGIN TUMBLR CODE --><iframe scrolling="no" width="1" height="1" frameborder="0" style="background-color:transparent; overflow:hidden; position:absolute; top:0; left:0; z-index:9999;" id="ga_target"></iframe><script type="text/javascript">
    (function(){
        var analytics_frame = document.getElementById('ga_target');
        var analytics_iframe_loaded;
        var user_logged_in;
        var blog_is_nsfw = 'No';

        var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
        var eventer = window[eventMethod];
        var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";
        eventer(messageEvent,function(e) {
            var message = (e.data && e.data.split) ? e.data.split(';') : '';
            switch (message[0]) {
                case 'analytics_iframe_loaded':
                    analytics_iframe_loaded = true;
                    postCSMessage();
                    postGAMessage();
                    break;
                case 'user_logged_in':
                    user_logged_in = message[1];
                    postGAMessage();
                    break;
            }
        }, false);

        analytics_frame.src = "http://assets.tumblr.com/analytics.html?3e91d63d5994bffc6ac211967f138b2c#http://samholmes.me";
        function postGAMessage() {
            if (analytics_iframe_loaded && user_logged_in) {
                var is_ajax = false;
                analytics_frame.contentWindow.postMessage(['tick_google_analytics', is_ajax, user_logged_in, blog_is_nsfw, '/?route=%2F'].join(';'), analytics_frame.src.split('/analytics.html')[0]);
            }
        }
        function postCSMessage() {
            COMSCORE = true;
            analytics_frame.contentWindow.postMessage('enable_comscore;' + window.location, analytics_frame.src.split('/analytics.html')[0]);
        }
    })();
</script><script>
            var _qevents = _qevents || [];
            (function() {
                var s = document.createElement('script');
                var el = document.getElementsByTagName('script')[0];
                s.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
                el.parentNode.insertBefore(s, el);
            })();
        </script><script type="text/javascript">
            _qevents.push( { qacct: 'p-19UtqE8ngoZbM' } );
        </script><noscript><div style="display: none;"><img src="//pixel.quantserve.com/pixel/'p-19UtqE8ngoZbM'.gif" height="1" width="1" alt="Quantcast"/></div></noscript><script type="text/javascript">!function(s){s.src='http://www.tumblr.com/impixu?T=1406212626&J=eyJ0eXBlIjoidXJsIiwidXJsIjoiaHR0cDpcL1wvc2FtaG9sbWVzLm1lXC8iLCJyZXF0eXBlIjowLCJyb3V0ZSI6IlwvIn0=&U=EEKIAANKCF&K=6a4408a766730c381e96158377d16c194e3d84e4d696b3678b6b89ff4453c6ec&R='.replace(/&R=[^&$]*/,'').concat('&R='+escape(document.referrer)).slice(0,2000).replace(/%.?.?$/,'');}(new Image());</script><noscript><img style="position:absolute;z-index:-3334;top:0px;left:0px;visibility:hidden;" src="http://www.tumblr.com/impixu?T=1406212626&J=eyJ0eXBlIjoidXJsIiwidXJsIjoiaHR0cDpcL1wvc2FtaG9sbWVzLm1lXC8iLCJyZXF0eXBlIjowLCJyb3V0ZSI6IlwvIiwibm9zY3JpcHQiOjF9&U=EEKIAANKCF&K=52046545d690abe3ec0164c0494b301a6ad98476176617c18edb6a6a5ef6d346&R="></noscript><script type="text/javascript">!function(s){s.src='http://www.tumblr.com/impixu?T=1406212626&J=eyJ0eXBlIjoicG9zdCIsInVybCI6Imh0dHA6XC9cL3NhbWhvbG1lcy5tZVwvIiwicmVxdHlwZSI6MCwicm91dGUiOiJcLyIsInBvc3RzIjpbeyJwb3N0aWQiOiI1OTA1MjM2NzYxNyIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjU5MDI5MjU3ODM4IiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTc3MzM2ODU1MzEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI1MjI2MTk0Nzg4MCIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InJvb3RfYmxvZ2lkIjoiNzQwODg4MzYiLCJyb290X3Bvc3RpZCI6NTEwNzcyMzYzNTMsInBvc3RpZCI6IjUyMDc2OTk0OTE2IiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTIwNzY4NDc5NzEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJyb290X2Jsb2dpZCI6Ijc0MDg4ODM2Iiwicm9vdF9wb3N0aWQiOjUxMDc3MjM2MzUzLCJwb3N0aWQiOiI1MTA4NTI2MjcxNSIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjUwMjkxOTcwNTMwIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTAyOTE4NTMxOTEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI0ODYyNDM3MDU2OSIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjQ4NDczMzg3NjYyIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNDc0NDc2NzM0MjgiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI0NzE1Mjg0MDEwMCIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjQ3MTQ3NDgyOTIxIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNDU4NTU5NzM2NjMiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM31dfQ==&U=LMCIHIKNIF&K=caa7872618f20fdbf81e3c9334f4b4544b37ba543f8ecbb95a57ffe349e8960a&R='.replace(/&R=[^&$]*/,'').concat('&R='+escape(document.referrer)).slice(0,2000).replace(/%.?.?$/,'');}(new Image());</script><noscript><img style="position:absolute;z-index:-3334;top:0px;left:0px;visibility:hidden;" src="http://www.tumblr.com/impixu?T=1406212626&J=eyJ0eXBlIjoicG9zdCIsInVybCI6Imh0dHA6XC9cL3NhbWhvbG1lcy5tZVwvIiwicmVxdHlwZSI6MCwicm91dGUiOiJcLyIsInBvc3RzIjpbeyJwb3N0aWQiOiI1OTA1MjM2NzYxNyIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjU5MDI5MjU3ODM4IiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTc3MzM2ODU1MzEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI1MjI2MTk0Nzg4MCIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InJvb3RfYmxvZ2lkIjoiNzQwODg4MzYiLCJyb290X3Bvc3RpZCI6NTEwNzcyMzYzNTMsInBvc3RpZCI6IjUyMDc2OTk0OTE2IiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTIwNzY4NDc5NzEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJyb290X2Jsb2dpZCI6Ijc0MDg4ODM2Iiwicm9vdF9wb3N0aWQiOjUxMDc3MjM2MzUzLCJwb3N0aWQiOiI1MTA4NTI2MjcxNSIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjUwMjkxOTcwNTMwIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNTAyOTE4NTMxOTEiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI0ODYyNDM3MDU2OSIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjQ4NDczMzg3NjYyIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNDc0NDc2NzM0MjgiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM30seyJwb3N0aWQiOiI0NzE1Mjg0MDEwMCIsImJsb2dpZCI6IjQ5OTA4ODQiLCJzb3VyY2UiOjMzfSx7InBvc3RpZCI6IjQ3MTQ3NDgyOTIxIiwiYmxvZ2lkIjoiNDk5MDg4NCIsInNvdXJjZSI6MzN9LHsicG9zdGlkIjoiNDU4NTU5NzM2NjMiLCJibG9naWQiOiI0OTkwODg0Iiwic291cmNlIjozM31dLCJub3NjcmlwdCI6MX0=&U=LMCIHIKNIF&K=91451c5113f468b72a9e6d1967be8727b820bfc3c12d5109a608c3e02a90f1b3&R="></noscript><script>
                    (function() {
                        var s = document.createElement('script');
                        var el = document.getElementsByTagName('script')[0];
                        s.src = ('https:' == document.location.protocol ? 'https://s' : 'http://l') + '.yimg.com/ss/rapid-3.18.1.js';
                        s.onload = function(){
                            var YAHOO = window.YAHOO;
                            if (YAHOO) {
                                var keys = {
                                    pd:'/',
                                    _li:0,
                                    b_id:4990884,
                                    i_rad:0,
                                    i_strm:0
                                };
                                var conf = {
                                                                        spaceid:1197716038,
                                    client_only:1,
                                    yql_enabled:false,
                                    keys:keys,
                                    nol:1
                                };
                                YAHOO.rapid = new YAHOO.i13n.Rapid(conf);
                            }
                        };
                        el.parentNode.insertBefore(s, el);
                    })();
                </script><iframe id="tumblr_controls" class="tumblr_controls" width="1" height="1" frameborder="0" scrolling="no" src="http://assets.tumblr.com/assets/html/iframe/o.html?_v=9e17aad297935c7fb478643c59604364#src=http%3A%2F%2Fsamholmes.me%2F&amp;lang=en_US&amp;name=sam-holmes&amp;avatar=http%3A%2F%2F38.media.tumblr.com%2Favatar_d2b878813232_64.png&amp;title=samholmes&amp;url=http%3A%2F%2Fsamholmes.me%2F&amp;page_slide=slide"></iframe><div id="teaser_iframe_container" style="display:none;"><iframe scrolling="no" frameborder="0" src="http://www.tumblr.com/assets/html/iframe/teaser.html?_v=bfe495a8395cc4648dc91acfefafee5c#src=http%3A%2F%2Fsamholmes.me%2F&amp;lang=en_US&amp;name=sam-holmes&amp;avatar=http%3A%2F%2F38.media.tumblr.com%2Favatar_d2b878813232_64.png&amp;title=samholmes&amp;url=http%3A%2F%2Fsamholmes.me%2F&amp;page_slide=slide" id="teaser_iframe" width="1" height="1"></iframe></div><script type="text/javascript">
    (function(Tumblr){
        var follow_iframe_initialized = false;
        if (Tumblr.FollowTeaser && Tumblr.PostMessageListener) {
            // Don't do anything until the first initialize event
            Tumblr.PostMessageListener.initialize(function(message, origin) {
                if (follow_iframe_initialized || message.length < 2) return;

                if (message[0] === 'follow_iframe' && message[1] === 'enable') {
                    Tumblr.FollowTeaser.current_page = 1;
                    Tumblr.FollowTeaser.infer_infinite_scroll = true;
                    Tumblr.FollowTeaser.create_from_tumblr_controls("http:\/\/assets.tumblr.com\/assets\/html\/iframe\/follow.html?_v=a52b0a29bf82ebeec459a1f647a24914");
                    Tumblr.FollowTeaser.scroll_listener(true);
                    follow_iframe_initialized = true;
                }
            });
        }
    })(this.Tumblr || (this.Tumblr = {}));
</script><!--[if IE]><script type="text/javascript">document.getElementById('tumblr_controls').allowTransparency=true;</script><![endif]--><!-- END TUMBLR CODE -->

</body>
</html>
