http://htmlcompressor.com/compressor/
HTTP/1.0 200 OK
Vary: Accept-Encoding
Content-Encoding: gzip
Last-Modified: Mon, 23 Sep 2013 07:47:04 GMT
ETag: "320428209"
Content-Type: text/html; charset=utf-8
Accept-Ranges: bytes
Content-Length: 27501
Connection: close
Date: Thu, 24 Jul 2014 10:39:04 GMT
Server: lighttpd

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta http-equiv="pragma" content="no-cache" /><meta http-equiv="cache-control" content="max-age=0" /><meta http-equiv="cache-control" content="no-cache" /><meta http-equiv="cache-control" content="no-store" /><meta name="googlebot" content="noarchive" /><meta name="robots" content="noarchive,noodp,noydir" /><title>HTML Compressor - Reduce the size of HTML, CSS, JavaScript, PHP and Smarty code.</title><style type="text/css">/*! (c) 2010 HTMLcompressor.com - All rights reserved. */html,body{width:100%;height:100%;padding:0;margin:0;overflow:hidden!important;overflow:auto}a{outline:0}.layout{height:100%}.center,.east,.west,.north,.south{display:inline-block}.south{height:25px}.north{height:40px}.center{overflow:auto}body{background:#f4f4f4;text-align:center;font-family:arial,helvetica,"lucida grande",verdana,sans-serif;font-size:14px;color:#000}textarea{-moz-resize:none;resize:none}a,span.hot{font-size:13px;font-weight:bold;color:#e41b0b;text-decoration:none}a:link{color:#e41b0b}a:visited{color:#e41b0b}a:hover{color:#e41b0b;text-decoration:underline}a:active{color:#e41b0b}#Header{height:40px;background-color:#fff;border-bottom:#000 1px solid}#Header a{font-weight:normal}#Header div{height:40px;width:98%;margin:0 auto;padding-right:2px;line-height:40px;background:url(img/logo.png) no-repeat left;text-align:right}#Header div a{background-color:#fff}#Footer{font-size:12px;text-align:center;color:#fff;background-color:#333;line-height:24px;border-top:#000 1px solid}textarea,input.round{border:1px solid #7a7a7a;margin:0;border-radius:4px 4px 4px 4px;-moz-border-radius:4px 4px 4px 4px;-webkit-border-radius:4px 4px 4px 4px;box-shadow:1px 1px 2px #ebebeb inset;-moz-box-shadow:1px 1px 2px #ebebeb inset;-webkit-box-shadow:1px 1px 2px #ebebeb inset}textarea{width:98%;height:360px}.clear{clear:both}.sectionHead{font-weight:bold}#noJS{position:absolute;top:2px;left:20%;width:60%;border-radius:3px 3px 3px 3px;-moz-border-radius:3px 3px 3px 3px;-webkit-border-radius:3px 3px 3px 3px;border:1px solid #c00;line-height:40px;text-align:center;color:#000;background-color:#ffebe8;font-weight:bold}div.btn-medium{text-align:center;margin-top:16px;margin-bottom:16px}div.btn-medium a{border-radius:5px 5px 5px 5px;-moz-border-radius:5px 5px 5px 5px;-webkit-border-radius:5px 5px 5px 5px;background-color:#0c0;border:1px solid #0a0;color:#fff;font:bold 14px Arial,Sans-serif;padding:6px 10px;margin-left:4px;margin-right:4px;text-align:center;text-decoration:none;text-shadow:0 1px 0 #222}div.btn-medium a:visited{color:#FFF}div.btn-medium a:hover{text-decoration:none}div.btn-medium a:hover{border-color:#003e00}div.btn-working{display:none}div.btn-working a,div.btn-working a:hover{border-color:#a00;background-color:#e41b0b}div.btn-working a:hover{cursor:wait}.error_msg{font-weight:bold;color:#f00}.chg_log li{padding-bottom:10px;width:700px}.chg_log li span{font-weight:bold;text-decoration:underline}.col-container{position:relative}.col-a{float:left;width:70%}.col-b{float:left;width:30%}.opt-s .col-a{width:70%}.opt-s .col-b{width:30%}.opt-l .col-a{width:30%}.opt-l .col-b{width:70%}.opt-x .col-a{width:100%}.opt-x .col-b{display:none}.rcol-section{margin-bottom:14px}.cmp_container{width:98%;margin:10px auto}ul.tabs{margin:0;padding:0;float:left;list-style:none;height:22px;width:100%;border-bottom:1px solid #bbb;border-left:1px solid #bbb;border-top-left-radius:3px;-moz-border-radius-topleft:3px}ul.tabs li{float:left;margin:0;padding:0;height:21px;line-height:21px;border:1px solid #bbb;border-left:none;margin-bottom:-1px;background:#f4f4f4;overflow:hidden;position:relative;border-top-left-radius:3px;border-top-right-radius:3px;-moz-border-radius-topleft:3px;-moz-border-radius-topright:3px}ul.tabs li a{text-decoration:none;color:#000;display:block;padding:0 20px;outline:0;font-weight:normal}ul.tabs li a:visited{color:#000}ul.tabs li a:hover{background:#ddd;text-decoration:none}ul.tabs li.active,ul.tabs li.active a:hover{background:#fff;border-bottom:1px solid #fff}.tab_container{border:1px solid #bbb;border-top:0;clear:both;width:100%;background:#fff;border-radius:0 0 5px 5px;-moz-border-radius:0 0 5px 5px;-webkit-border-radius:0 0 5px 5px}.tab_content{padding:4px;text-align:left}ul.tabs li.warning a,ul.tabs li.warning a:visited,ul.tabs li.warning a:hover{color:#e41b0b;font-weight:bold}ul.tabs li.error a{color:#e41b0b;font-weight:bold}div.collapse-container{margin:10px;padding:0}div.collapse-container p{text-transform:capitalize}div.collapse-container h3{text-transform:uppercase;border-bottom:1px dashed #aaa;color:#000;font-size:110%;font-weight:bold;line-height:1.2em;margin-bottom:14px;margin-top:20px;padding-bottom:2px}p.collapse-head{padding:5px 10px;position:relative;margin:1px;background-color:#fcc}p.collapse-head a{outline:0;text-decoration:none}div.collapse-body{padding-top:2px;padding-bottom:2px;background-color:#f4f4f8;display:none}div.collapse-body pre{padding:5px 10px 15px;max-height:400px;overflow:auto}.panel-container{position:relative;margin-bottom:16px}.panel-label{background-color:#fff;position:absolute;left:12px;top:-10px;padding:0 3px}.panel-box{border:1px solid #999;border-radius:3px;-moz-border-radius:3px;-webkit-border-radius:3px}.panel-box .bar{border:1px solid #666;border-radius:4px 4px 4px 4px;-moz-border-radius:4px 4px 4px 4px;-webkit-border-radius:4px 4px 4px 4px}.panel-box .bar-txt{height:20px;line-height:20px;padding-left:4px;color:#fff}.panel-box .bar-src{width:100%;background:#cf0404;background:-moz-linear-gradient(left,#cf0404 0,#ff3019 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0%,#cf0404),color-stop(100%,#ff3019));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#cf0404',endColorstr='#ff3019',GradientType=1)}.panel-box .bar-cmp{width:100%;background:#009d00;background:-moz-linear-gradient(left,#009D00 0,#2FFF2F 100%);background:-webkit-gradient(linear,left top,right top,color-stop(0%,#009D00),color-stop(100%,#2FFF2F));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#009D00',endColorstr='#2FFF2F',GradientType=1)}.panel-box .bar-src-container{margin:14px 10px 4px 10px}.panel-box .bar-cmp-container{margin:4px 10px 10px 10px}.panel-box .cmp-stats,.panel-box .panel-txt{margin:10px}.panel-box .cmp-stats span{font-weight:bold}div.nfo-content{clear:both;border:1px dotted #cac7b8;margin:10px 4px;padding:10px 4px;background-color:#fdfdfd;font-size:12px;-moz-box-shadow:3px 3px 4px #dadada;-webkit-box-shadow:3px 3px 4px #dadada;box-shadow:3px 3px 4px #dadada}.nfo-content pre{font:100% "Courier New","Andale Mono",monospace;background-color:#f6f6f2;overflow:auto;padding:10px 4px;margin-top:0}.nfo-content h4{color:#333;font-size:90%;font-weight:bold;line-height:1.2em;margin-bottom:0}.nfo-content h4.section{font-size:100%;margin-bottom:10px;text-decoration:underline}.nfo-content ul{padding-left:20px}.nfo-content .icode{font-family:monospace;color:#0a0;font-weight:bold}.nfo-content .rcode{font-family:monospace;color:#333;font-weight:bold}.nfo-content .errln{font-family:monospace;color:#e41b0b;font-weight:bold}.nfo-content .note{background-color:#f0f1f7;padding:8px}.nfo-content .tip{background-color:#ff9;border:1px solid #ffe066;padding:8px}.nfo-content .errmsg{background-color:#fcc;border:1px solid #f00;padding:8px}.nfo-content .darkBG{background-color:#333}.nfo-content .pinkBG{background-color:#fcc}div.opt{float:left}div .hlp{float:right}.iface-ctrl{font-size:12px;position:absolute;right:1.5%;top:35px;z-index:1}.modal{background-color:#fff;display:none;width:40%;padding:15px;text-align:left;border:1px solid #666;font-size:13px;border-radius:6px;-moz-border-radius:6px;-webkit-border-radius:6px;box-shadow:0 2px 4px #999;-moz-box-shadow:0 2px 4px #999;-webkit-box-shadow:0 2px 4px #999}.modal h2{text-align:center;margin:0;padding:4px;border-bottom:1px solid #333;font-size:18px}.modal .u_ctype,.modal .ad_ctype{font-weight:bold;color:#e41b0b}.modal a.modal-ignore{border-color:#960;background-color:#f90}.modal a:modal-ignore:hover{border-color:#552b00}.modal a.modal-cancel{border-color:#a00;background-color:#e41b0b}.modal a.modal-cancel:hover{border-color:#500}#dndmsg,#dndzone{overflow:hidden;display:none;position:absolute;top:0;left:0;background-color:#f0f1f7;opacity:.7;font-size:24px;text-align:center;border-radius:4px 4px 4px 4px;-moz-border-radius:4px 4px 4px 4px;-webkit-border-radius:4px 4px 4px 4px}#dndload{background-color:#ffc}#dndload.dndActive{background-color:#ffff9f}#dndloadcmp{background-color:#e4fecd}#dndloadcmp.dndActive{background-color:#cdfda2}.vthalf{width:100%;height:50%;display:table;vertical-align:middle;text-align:center}.vtcenter{display:table-cell;vertical-align:middle}.dragOut{font-weight:bold;font-size:12px;color:#e41b0b;cursor:pointer;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;user-select:none}.dragOut:hover{background-color:#ffff9f}div.dragOut{display:inline}</style><!--[if lt IE 7]><style type="text/css">.panel-container,.panel-container .panel-label{position:fixed}.panel-container{margin-bottom:6px}.panel-box .bar{border:0}.panel-box .bar-txt{border:1px solid #666}ul.tabs li.warning a{color:#e41b0b;font-weight:bold}.nfo-content pre{width:95%;padding:18px 4px;overflow-y:hidden;overflow-x:auto}.iface-ctrl{right:2%}.opt .round{margin-left:-6px}.clear{display:inline}</style><![endif]--><script type="text/javascript" src="js/jquery1.6.4-layout-tools.js"></script><script type="text/javascript">if(null!=/\.?htmlcompressor\.com$/.exec(window.location.href.split("/")[2])){var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-20597629-2"]);_gaq.push(["_trackPageview"]);(function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var c=document.getElementsByTagName("script")[0];c.parentNode.insertBefore(a,c)})()}</script></head><body><div class="layout {layout: {type: 'border', hgap: 0, vgap: 1}}"><div class="north"><div id="Header"><div><a href="/">Home</a> | <a href="/services/">Services</a> | <a href="/contact/">Contact</a> | <a href="http://addthis.com/bookmark.php?v=250&amp;url=http://htmlcompressor.com/" class="tr_click">Share</a></div></div></div><div class="center"><div class="cmp_container"><ul class="tabs"><li><a href="#tab_source">Source</a></li><li><a href="#tab_result">Compressed</a></li><li><a href="#tab_errors">Errors</a></li><li><a href="#tab_messages">Messages</a></li></ul><div class="tab_container"><div id="tab_source" class="tab_content"><form name="cmpForm" action="#" method="post" id="cmpForm" style="display:inline"><div class="iface-ctrl"> ( <span><a href="#tab_source" class="lnk-expand-b tr_click">expand</a> | </span><a href="#tab_source" class="lnk-expand-a tr_click">hide</a> ) </div><div><span id="code_msg" class="error_msg">&nbsp;</span></div><div class="col-container"><div class="col-a"><textarea name="code" id="code" rows="18" cols="110" style="width:98%"></textarea><div id="compress-btn-msg" class="btn-medium"><span><a href="#"><span>Compress</span></a></span></div><div id="working-btn-msg" class="btn-medium btn-working"><span><a href="#" onclick="return false"><span>Compressing. Please wait...</span></a></span></div><div id="dndmsg"><div class="vtcenter"><div class="vtcontent"> Drag a File<br />or Paste Code </div></div></div><div id="dndzone"><div id="dndload" class="dndarea vthalf"><div id="a2" class="vtcenter"><div id="a3" class="vtcontent"><span id="dndload-txt">Load Only</span></div></div></div><div id="dndloadcmp" class="dndarea vthalf"><div class="vtcenter"><div class="vtcontent"><span id="dndloadcmp-txt">Load and Compress</span></div></div></div></div></div><div class="col-b"><div class="panel-container"><div class="panel-label">Code type:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><select name="code_type"><option value="html" selected="selected">x/html</option><option value="php">x/html + PHP</option><option value="asp">x/html + ASP</option><option value="smarty">x/html + Smarty</option><option value="" disabled="disabled">=================</option><option value="css">CSS</option><option value="css_php">CSS + PHP</option><option value="css_asp">CSS + ASP</option><option value="css_smarty">CSS + Smarty</option><option value="" disabled="disabled">=================</option><option value="js">JavaScript</option><option value="js_php">JavaScript + PHP</option><option value="js_asp">JavaScript + ASP</option><option value="js_smarty">JavaScript + Smarty</option><option value="" disabled="disabled">=================</option><option value="blogger">Blogger</option></select> &nbsp;( <a href="#" id="opt_toggle" style="outline:none"><span class="opt_basic">Show</span><span class="opt_advanced" style="display:none">Hide</span> Options</a> ) </div><div class="hlp">(<a href="#nfo-code-type" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div><div class="opt_dnd"><div id="dnd_block" style="display:none"><div class="panel-container"><div class="panel-label">Drag and Drop Charset:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><select name="dnd_charset"><option value="IBM-864">Arabic (IBM-864)</option><option value="ISO-8859-6">Arabic (ISO-8859-6)</option><option value="Windows-1256">Arabic (Windows-1256)</option><option value="ARMSCII-8">Armenian (ARMSCII-8)</option><option value="ISO-8859-13">Baltic (ISO-8859-13)</option><option value="ISO-8859-4">Baltic (ISO-8859-4)</option><option value="Windows-1257">Baltic (Windows-1257)</option><option value="ISO-8859-14">Celtic (ISO-8859-14)</option><option value="IBM-852">Central European (IBM-852)</option><option value="ISO-8859-2">Central European (ISO-8859-2)</option><option value="MacCE">Central European (MacCE)</option><option value="Windows-1250">Central European (Windows-1250)</option><option value="GB18030">Chinese Simplified (GB18030)</option><option value="GB2312">Chinese Simplified (GB2312)</option><option value="GBK">Chinese Simplified (GBK)</option><option value="HZ">Chinese Simplified (HZ)</option><option value="ISO-2022-CN">Chinese Simplified (ISO-2022-CN)</option><option value="Big5">Chinese Traditional (Big5)</option><option value="Big5-HKSCS">Chinese Traditional (Big5-HKSCS)</option><option value="EUC-TW">Chinese Traditional (EUC-TW)</option><option value="MacCroatian">Croatian (MacCroatian)</option><option value="IBM-855">Cyrillic (IBM-855)</option><option value="ISO-8859-5">Cyrillic (ISO-8859-5)</option><option value="ISO-IR-111">Cyrillic (ISO-IR-111)</option><option value="KOI8-R">Cyrillic (KOI8-R)</option><option value="MacCyrillic">Cyrillic (MacCyrillic)</option><option value="Windows-1251">Cyrillic (Windows-1251)</option><option value="CP-866">Cyrillic/Russian (CP-866)</option><option value="KOI8-U">Cyrillic/Ukrainian (KOI8-U)</option><option value="GEOSTD8">Georgian (GEOSTD8)</option><option value="ISO-8859-7">Greek (ISO-8859-7)</option><option value="MacGreek">Greek (MacGreek)</option><option value="Windows-1253">Greek (Windows-1253)</option><option value="MacGujarati">Gujarati (MacGujarati)</option><option value="MacGurmukhi">Gurmukhi (MacGurmukhi)</option><option value="IBM-862">Hebrew (IBM-862)</option><option value="ISO-8859-8-I">Hebrew (ISO-8859-8-I)</option><option value="Windows-1255">Hebrew (Windows-1255)</option><option value="ISO-8859-8">Hebrew Visual (ISO-8859-8)</option><option value="MacDevanagari">Hindi (MacDevanagari)</option><option value="MacIcelandic">Icelandic (MacIcelandic)</option><option value="EUC-JP">Japanese (EUC-JP)</option><option value="ISO-2022-JP">Japanese (ISO-2022-JP)</option><option value="Shift_JIS">Japanese (Shift_JIS)</option><option value="EUC-KR">Korean (EUC-KR)</option><option value="ISO-2022-KR">Korean (ISO-2022-KR)</option><option value="JOHAB">Korean (JOHAB)</option><option value="UHC">Korean (UHC)</option><option value="ISO-8859-10">Nordic (ISO-8859-10)</option><option value="ISO-8859-16">Romanian (ISO-8859-16)</option><option value="MacRomanian">Romanian (MacRomanian)</option><option value="ISO-8859-3">South European (ISO-8859-3)</option><option value="ISO-8859-11">Thai (ISO-8859-11)</option><option value="TIS-620">Thai (TIS-620)</option><option value="Windows-874">Thai (Windows-874)</option><option value="IBM-857">Turkish (IBM-857)</option><option value="ISO-8859-9">Turkish (ISO-8859-9)</option><option value="MacTurkish">Turkish (MacTurkish)</option><option value="Windows-1254">Turkish (Windows-1254)</option><option value="UTF-16">Unicode (UTF-16)</option><option value="UTF-16BE">Unicode (UTF-16BE)</option><option value="UTF-16LE">Unicode (UTF-16LE)</option><option value="UTF-8">Unicode (UTF-8)</option><option value="TCVN">Vietnamese (TCVN)</option><option value="VISCII">Vietnamese (VISCII)</option><option value="VPS">Vietnamese (VPS)</option><option value="Windows-1258">Vietnamese (Windows-1258)</option><option value="IBM-850">Western (IBM-850)</option><option value="ISO-8859-1" selected="selected">Western (ISO-8859-1)</option><option value="ISO-8859-15">Western (ISO-8859-15)</option><option value="MacRoman">Western (MacRoman)</option><option value="Windows-1252">Western (Windows-1252)</option></select></div><div class="hlp">(<a href="#nfo-dnd-charset" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div></div><div class="opt_advanced" style="display:none"><div id="php_block" style="display:none"><div class="panel-container"><div class="panel-label">PHP Code:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><input type="checkbox" name="php_minimize" value="1" /> Minimize PHP code </div><div class="hlp">(<a href="#nfo-php-minimize" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div id="php_convert_tag_block" style="display:none"><div class="opt"><input type="checkbox" name="php_convert_tag" value="1" /> Convert PHP short tags </div><div class="hlp">(<a href="#nfo-php-convert-tag" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div></div><div id="smarty_block" style="display:none"><div class="panel-container"><div class="panel-label">Smarty Code:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><input type="checkbox" name="smarty_mode" value="1" checked="checked" readonly="readonly" /> Smarty template mode </div><div class="hlp">(<a href="#nfo-smarty" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="smarty_auto_literals" value="1" checked="checked" /> Use auto literals </div><div class="hlp">(<a href="#nfo-smarty-autoliterals" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="smarty_keep_comments" value="1" /> Keep all smarty comments </div><div class="hlp">(<a href="#nfo-smarty-keep-comments" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div><div id="asp_block" style="display:none"><div class="panel-container"><div class="panel-label">ASP Code:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><input type="checkbox" name="exclude_asp" value="1" checked="checked" readonly="readonly" /> Preserve intact ASP code </div><div class="hlp">(<a href="#nfo-asp" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div><div id="html_block"><div class="panel-container"><div class="panel-label">HTML Tags and Spaces:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><select name="html_level"><option value="0">Do not minimize</option><option value="1" selected="selected">Safe minimization</option><option value="2">Advanced minimization</option><option value="3">Aggressive minimization</option></select></div><div class="hlp">(<a href="#nfo-html-level" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div id="html_options_block" style="display:inline"><div id="html_single_line_block" style="display:inline"><div class="opt"><input type="checkbox" name="html_single_line" value="1" /> Single line html output </div><div class="hlp">(<a href="#nfo-html-single" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="html_force_trim_block" style="display:inline"><div class="opt"><input type="checkbox" name="html_force_trim" value="1" checked="checked" /> Always trim output </div><div class="hlp">(<a href="#nfo-html-trim" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="html_never_strip_quotes_block" style="display:inline"><div class="opt"><input type="checkbox" name="html_keep_quotes" value="1" /> Never strip quotes </div><div class="hlp">(<a href="#nfo-html-keep-quotes" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="html_strip_quotes_block" style="display:inline"><div class="opt"><input type="checkbox" name="html_strip_quotes" value="1" /> Strip quotes regardless of DOCTYPE </div><div class="hlp">(<a href="#nfo-html-strip-quotes" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div class="opt"><input type="checkbox" name="minimize_style" value="1" checked="checked" /> Minimize CSS inside style attributes </div><div class="hlp">(<a href="#nfo-style" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="minimize_events" value="1" checked="checked" /> Minimize JavaScript events in html tags </div><div class="hlp">(<a href="#nfo-js-events" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="minimize_js_href" value="1" checked="checked" /> Minimize JavaScript in href=&quot;javascript:...&quot; </div><div class="hlp">(<a href="#nfo-js-href" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div><div class="panel-container"><div class="panel-label">Comments, CSS and JavaScript:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><input type="checkbox" name="keep_comments" value="1" /> Preserve all x/html comments </div><div class="hlp">(<a href="#nfo-html-comments" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div id="html_comments_extra_block"><div class="opt"><input type="checkbox" name="keep_ssi" value="1" /> Preserve SSI directives </div><div class="hlp">(<a href="#nfo-ssi" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="text" name="keep_char" value="" size="2" style="width:16px" maxlength="1" class="round" /> Keep &lt;!--CHARACTER ... --&gt; </div><div class="hlp">(<a href="#nfo-keep-char" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div class="opt"><input type="checkbox" name="minimize_css" value="1" checked="checked" /> Minimize CSS code </div><div class="hlp">(<a href="#nfo-css" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="minimize_js" value="1" checked="checked" /> Minimize JavaScript code </div><div class="hlp">(<a href="#nfo-js" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div id="minimize_js_ph_block" style="display:inline"><div class="opt"><input type="checkbox" name="minimize_js_ph" value="1" checked="checked" /> Minimize JavaScript containing S.S.C. </div><div class="hlp">(<a href="#nfo-js-ph" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="html_optional_cdata_block" style="display:inline"><div class="opt"><input type="checkbox" name="html_optional_cdata" value="1" /> Default doctype is not XML (CDATA) </div><div class="hlp">(<a href="#nfo-html-cdata" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div></div><div id="css_block"><div class="panel-container"><div class="panel-label">CSS minimization Options:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><input type="text" name="css_lb_num" value="" size="2" style="width:30px" class="round" /> Add line break after col no. </div><div class="hlp">(<a href="#nfo-css-lb" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div><div id="js_block"><div class="panel-container"><div class="panel-label">JavaScript Minimization options:</div><div class="panel-box"><div class="panel-txt"><div><select name="js_engine"><option value="jsmin">JSMin</option><option value="yui" selected="selected">Yahoo YUI Compressor 2.4.7</option><option value="closure">Google Closure Compiler (20130823)</option></select></div><div id="js_jsmin_block" style="display:none"></div><div id="js_yui_block"><div class="opt"><input type="checkbox" name="js_yui_nomunge" value="1" /> Do not miimize local symbols (nomunge) </div><div class="hlp">(<a href="#nfo-yui-nomunge" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_yui_preserve" value="1" /> Preserve all semicolons </div><div class="hlp">(<a href="#nfo-yui-preserve" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_yui_noopt" value="1" /> Disable all micro optimizations </div><div class="hlp">(<a href="#nfo-yui-noopt" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="text" name="js_yui_lb_num" value="" size="2" maxlength="4" style="width:30px" class="round" /> Add line break after column number </div><div class="hlp">(<a href="#nfo-yui-lb" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_yui_verbose" value="1" /> Verbose output </div><div class="hlp">(<a href="#nfo-yui-verbose" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="js_closure_block" style="display:none"><div class="opt"><input type="radio" name="js_closure_level" value="spaces" /> White spaces removal </div><div class="hlp">(<a href="#nfo-closure-level-spaces" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="radio" name="js_closure_level" value="simple" checked="checked" /> Simple optimizations </div><div class="hlp">(<a href="#nfo-closure-level-simple" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="radio" name="js_closure_level" value="advanced" /> Advanced optimizations (Experts only) </div><div class="hlp">(<a href="#nfo-closure-level-advanced" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_closure_single_line" value="1" /> Single line output </div><div class="hlp">(<a href="#nfo-closure-single-line" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div id="js_closure_formatting_block"><div class="opt"><input type="checkbox" name="js_closure_formatting" value="1" /> Add output formatting to source </div><div class="hlp">(<a href="#nfo-closure-formatting" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div class="opt"><input type="checkbox" name="js_closure_verbose" value="1" /> Verbose output </div><div class="hlp">(<a href="#nfo-closure-verbose" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="js_fallback_block"><div class="opt"><input type="checkbox" name="js_fallback" value="1" checked="checked" /> Use JSMin as failback engine </div><div class="hlp">(<a href="#nfo-js-fallback" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div></div><div id="js_ph_block" style="display:none"><div class="panel-container"><div class="panel-label">JavaScript with S.S.C. options:</div><div class="panel-box"><div class="panel-txt"><div><select name="js_ph_engine"><option value="jsmin">JSMin</option><option value="yui" selected="selected">Yahoo YUI Compressor 2.4.7</option></select></div><div id="js_ph_jsmin_block" style="display:none"></div><div id="js_ph_yui_block"><div class="opt"><input type="checkbox" name="js_ph_yui_nomunge" value="1" /> Minify only, do not obfuscate (nomunge) </div><div class="hlp">(<a href="#nfo-ph-yui-nomunge" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_ph_yui_preserve" value="1" /> Preserve all semicolons </div><div class="hlp">(<a href="#nfo-ph-yui-preserve" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_ph_yui_noopt" value="1" /> Disable all micro optimizations </div><div class="hlp">(<a href="#nfo-ph-yui-noopt" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="text" name="js_ph_yui_lb_num" value="" size="2" maxlength="4" style="width:30px" class="round" /> Add line break after column number </div><div class="hlp">(<a href="#nfo-ph-yui-lb" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="js_ph_yui_verbose" value="1" /> Verbose output </div><div class="hlp">(<a href="#nfo-ph-yui-verbose" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div><div id="js_ph_fallback_block"><div class="opt"><input type="checkbox" name="js_ph_fallback" value="1" checked="checked" /> Use JSMin as failback engine </div><div class="hlp">(<a href="#nfo-js-ph-fallback" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div></div><div class="panel-container"><div class="panel-label">Misc Options:</div><div class="panel-box"><div class="panel-txt"><div class="opt"><input type="checkbox" name="verbose" value="1" checked="checked" /> Show general notices and warnings </div><div class="hlp">(<a href="#nfo-verbose" class="nfo-link tr_click">?</a>)</div><div class="clear"></div><div class="opt"><input type="checkbox" name="detect_ct" value="1" checked="checked" /> Enable Code Type autodetection </div><div class="hlp">(<a href="#nfo-detect_ct" class="nfo-link tr_click">?</a>)</div><div class="clear"></div></div></div></div></div><div class="dnt-box"><div class="dnt-box-nfo" style="padding-bottom:10px"> To keep this service up and running without annoying ads, please consider a donation using <a href="http://bitcoin.org/">Bitcoins</a> or <a href="http://litecoin.org/">Litecoins</a> to cover our server fees, thank you! </div><div class="dnt-box-qrc"><a href="bitcoin:1P5XE3zg2QagkB5sb6mw7CtZh5d8qykzNe"><img src="img/BTC.png" border="0" /></a><a href="litecoin:LiYbLshTBSgiAE4HxubVotRN5yg5Fuvh5v"><img src="img/LTC.png" border="0" /></a></div></div></div></div><div class="clear"></div></form></div><div id="tab_result" class="tab_content"><div><span class="sectionHead">&nbsp;</span><span id="result_msg"></span><span id="resultError_msg" class="error_msg"></span></div><div class="col-container"><div class="col-a"><div><textarea id="result" rows="18" cols="110"></textarea></div><div class="btn-medium"><a href="#result" class="btn-select"><span>Select All</span></a><a href="#" class="btn-reset"><span>Clear</span></a></div></div><div class="col-b"><div id="stats_block" style="display:none"><div class="panel-container"><div class="panel-label">Compression Ratio: <span id="cmp-data-ratio">&nbsp;</span>%</div><div class="panel-box"><div class="bar-src-container"><div><div class="bar bar-src"><div class="bar-txt" id="cmp-data-src">&nbsp;</div></div></div></div><div class="bar-cmp-container"><div><div class="bar bar-cmp"><div class="bar-txt" id="cmp-data-cmp">&nbsp;</div></div></div></div><div class="cmp-stats" id="cmp-data-svdl">&nbsp;</div></div></div></div><div id="tools_block"><div class="panel-container"><div class="panel-label">Webmaster tools:</div><div class="panel-box"><div class="panel-txt"><a href="#php" class="wmtools-btn tr_click">Single</a> / <a href="#php_ML" class="wmtools-btn tr_click">Multi</a> line PHP string.<br /><a href="#js" class="wmtools-btn tr_click">Single</a> / <a href="#js_ML" class="wmtools-btn tr_click">Multi</a> line JavaScript string.<br /><a href="#" class="wmtools-btn tr_click"><span>Restore result</span></a>.<br /></div></div></div></div><div id="w3c_html_block" style="display:none"><div class="panel-container"><div class="panel-label">W3C x/html validation:</div><div class="panel-box"><div class="panel-txt"><a href="#code" class="w3c-btn HTML-mode tr_click"><span>Validate Original Code</span></a><br /><a href="#result" class="w3c-btn HTML-mode tr_click"><span>Validate Compressed Code</span></a></div></div></div></div><div id="w3c_css_block" style="display:none"><div class="panel-container"><div class="panel-label">W3C CSS validation:</div><div class="panel-box"><div class="panel-txt"><a href="#code" class="w3c-btn CSS-mode tr_click"><span>Validate Original Code</span></a><br /><a href="#result" class="w3c-btn CSS-mode tr_click"><span>Validate Compressed Code</span></a></div></div></div></div></div></div><div class="clear"></div></div><div id="tab_errors" class="tab_content"> &nbsp; </div><div id="tab_messages" class="tab_content"> &nbsp; </div></div></div></div><div class="south"><div id="Footer"> &copy; 2013 HTMLCompressor.com - All rights reserved. Updated: 2013-09-23 </div></div></div><div id="noJS"> You need to enable JavaScript to use this website. </div><script type="text/JavaScript">/*<![CDATA[*/document.getElementById("noJS").style.display="none";jQuery(function(a){function c(){a("#dndmsg").hide();b.layout({resize:!1});a.browser.msie||a.browser.webkit?window.setTimeout(function(){a("#dndmsg").hide();a("#code, #result").height(a(".center").height()-124);a("#compress-btn-msg").hide().show();resizeDND()},100):(a("#code, #result").height(a(".center").height()-120),resizeDND())}jQuery.fx.off=a.browser.msie&&7<parseInt(a.browser.version,10);var b=a(".layout");c();a(window).resize(c)});var _opt={},result_bkp="",t_status="",c_verify=!0,cc_post_SR={s:[],r:[]},inDND=!1,offTimer=!1,fadeTimer=!1,zoneID=!1,lastDNDe=0,test_div=document.createElement("div"),canDAR=!(!window.FileReader||!("draggable"in test_div||"ondragstart"in test_div&&"ondrop"in test_div)),onDAR=!1,wasDAR=!1,DARfile="",DOutFile="",isChrome=-1!=navigator.userAgent.indexOf("Chrome");$(document).ready(function(){window.domIsReady=!0;$(".tab_content").hide();$("ul.tabs li:first").addClass("active").show();$(".tab_content:first").show();"https:"==document.location.protocol?$("#Footer").append(" (SSL)"):$("#Footer").append(' (Switch to <a href="https://'+window.location.hostname+window.location.pathname+'">SSL</a>)');canDAR?($("#dnd_block").show(),$("#dndmsg").css({width:$("#code").outerWidth()+"px",height:$("#code").outerHeight()+"px"}).fadeIn().css("display","table"),onDAR=!0,$("#dndmsg").mousedown(function(a){a.preventDefault();$(this).hide();$("#code").focus().mousedown();onDAR=!1}),$(document).bind({dragenter:function(a){1!=lastDNDe&&(zoneNOW=$(a.target).closest(".dndarea").attr("id"),!zoneNOW&&zoneID&&($("#"+zoneID).removeClass("dndActive"),zoneID=!1));lastDNDe=1},dragover:function(a){offTimer&&(clearTimeout(offTimer),offTimer=!1);fadeTimer&&(clearTimeout(fadeTimer),fadeTimer=!1);a.stopPropagation();a.preventDefault();if(2!=lastDNDe&&(zoneNOW=$(a.target).closest(".dndarea").attr("id"))&&zoneID!=zoneNOW)$("#"+zoneID).removeClass("dndActive"),$("#"+zoneNOW).addClass("dndActive"),zoneID=zoneNOW;zoneNOW||(a=a.originalEvent,a.dataTransfer&&(a.dataTransfer.dropEffect="none",a.stopPropagation(),a.preventDefault()));!1==inDND&&(inDND=!0,$("div.center").scrollTop(0),switch_tab("#tab_source"),$("#dndmsg").hide(),onDAR=!1,$("#dndzone").css({width:$("#code").outerWidth()+"px",height:$("#code").outerHeight()+"px"}).fadeIn().css("display","table"));lastDNDe=2},dragleave:function(a){a.stopPropagation();a.preventDefault();offTimer||(offTimer=window.setTimeout(function(){offTimer=inDND=!1},25));fadeTimer||(fadeTimer=window.setTimeout(function(){!inDND&&$("#dndzone").is(":visible")&&$("#dndzone").stop(!0,!0).fadeOut();fadeTimer=!1},250));lastDNDe=3},drop:function(a){a.stopPropagation();a.preventDefault();var c="dndloadcmp"==$(a.target).closest(".dndarea").attr("id");a=a.originalEvent.dataTransfer.files;inDND=!1;wasDAR=!0;$("#dndzone").stop(!0,!0).hide();if(0==a.length)return!1;if(1<a.length)return $("#code_msg").text("Only 1 file allowed at a time"),!1;$("#code_msg").html("&nbsp;");showValues(!0);var b=_opt[_opt.key].dnd_charset,d=new FileReader,f=a[0];d.onload=function(){DARfile=f.name;$("#code").val(d.result);c&&$("#compress-btn-msg a").click()};d.readAsText(f,b);return!1}})):$("#dnd_block").remove();$("ul.tabs li").click(function(){$("ul.tabs li").removeClass("active");$(this).addClass("active");$(".tab_content").hide();var a=$(this).find("a").attr("href");$(a).show();return!1});$(".nfo-link").toggle(function(){$(this).text("x");var a=$(this).attr("href");0<$(a).length&&$(this).parent("div").after($(a));resizeDND()},function(){$(this).text("?");"nfo-content"==$(this).parent("div").next("div").attr("class")&&$(this).parent("div").next("div").appendTo("#nfo-container");resizeDND()});$("#modal_AD").overlay({mask:{color:"#eeeeee",loadSpeed:200,opacity:0.8},fixed:!1,closeOnClick:!1,closeOnEsc:!1})});$("#cmpForm input:checkbox[readonly=readonly]").click(function(){return!1});$("#opt_toggle").click(function(a){a.preventDefault();$(".opt_basic, .opt_advanced").toggle();resizeDND()});function resizeDND(){onDAR&&$("#dndmsg").width($("#code").outerWidth()).height($("#code").outerHeight()).css("display","table")}function loadCodeOptions(a){a in _opt&&$("#cmpForm :input").each(function(){var c=this.type,b=this.name,d=this.value,f=this.tagName.toLowerCase();"text"==c?b in _opt[a]&&(this.value=_opt[a][b]):"checkbox"==c?this.checked=b in _opt[a]?!0:!1:"radio"==c?this.checked=b in _opt[a]&&_opt[a][b]==d?!0:!1:"select"==f&&(b in _opt[a]?$(this).val(_opt[a][b]):this.selectedIndex=-1)})}function showValues(a){var c={},b=$("#cmpForm select[name='code_type']").val(),d=$("#cmpForm").serializeArray();jQuery.each(d,function(a,b){0<b.value.length&&(c[b.name]=b.value)});_opt[b]=c;_opt.key=b;a||(_KK("css,js")?$("#html_block").hide():($("#html_block").show(),"0"!=c.html_level?$("#html_options_block").show():$("#html_options_block").hide(),"1"==c.html_level&&"html"!=b&&"blogger"!=b?$("#html_force_trim_block").show():$("#html_force_trim_block").hide(),3>c.html_level?$("#html_single_line_block").show():$("#html_single_line_block").hide(),"1"==c.keep_comments?$("#html_comments_extra_block").hide():$("#html_comments_extra_block").show(),"1"==c.html_keep_quotes||"blogger"==b?$("#html_strip_quotes_block").hide():$("#html_strip_quotes_block").show(),"blogger"==b?$("#html_never_strip_quotes_block").hide():$("#html_never_strip_quotes_block").show(),"1"==c.minimize_css||"1"==c.minimize_js?$("#html_optional_cdata_block").show():$("#html_optional_cdata_block").hide()),_KK("php,asp,smarty,blogger")?$("#minimize_js_ph_block").show():$("#minimize_js_ph_block").hide(),_K("php")?$("#php_block").show():$("#php_block").hide(),_K("asp")?$("#asp_block").show():$("#asp_block").hide(),_K("smarty")?$("#smarty_block").show():$("#smarty_block").hide(),_K("js")||!_K("css")&&"1"==c.minimize_js?($("#js_block").show(),"jsmin"==c.js_engine?$("#js_jsmin_block").show():$("#js_jsmin_block").hide(),"yui"==c.js_engine?$("#js_yui_block").show():$("#js_yui_block").hide(),"closure"==c.js_engine?$("#js_closure_block").show():$("#js_closure_block").hide(),"jsmin"==c.js_engine?$("#js_fallback_block").hide():$("#js_fallback_block").show(),"1"==c.js_closure_single_line?$("#js_closure_formatting_block").hide():$("#js_closure_formatting_block").show()):$("#js_block").hide(),_K("js_")||!_K("css")&&_KK("php,asp,smarty,blogger")&&"1"==c.minimize_js_ph?($("#js_ph_block").show(),"jsmin"==c.js_ph_engine?$("#js_ph_jsmin_block").show():$("#js_ph_jsmin_block").hide(),"yui"==c.js_ph_engine?$("#js_ph_yui_block").show():$("#js_ph_yui_block").hide(),"jsmin"==c.js_ph_engine? $("#js_ph_fallback_block").hide():$("#js_ph_fallback_block").show()):$("#js_ph_block").hide(),_K("php")&&"1"==c.php_minimize?$("#php_convert_tag_block").show():$("#php_convert_tag_block").hide(),_K("css")||!_K("js")&&"1"==c.minimize_css?$("#css_block").show():$("#css_block").hide())}function _K(a){return-1!=_opt.key.indexOf(a)}function _KK(a){a=a.split(",");for(var c=0,b=a.length,c=0;c<b;c++)if(_K(a[c]))return!0;return!1}function build_params(){var a="",c=_opt.key,b=_opt[c],d=/^\d{1,4}$/;"html_level"in b&&"0"==b.html_level&&("html_single_line"in b&&delete b.html_single_line,"html_force_trim"in b&&delete b.html_force_trim,"minimize_events"in b&&delete b.minimize_events,"minimize_js_href"in b&&delete b.minimize_js_href,"minimize_style"in b&&delete b.minimize_style,"html_keep_quotes"in b&&delete b.html_keep_quotes,"html_strip_quotes"in b&&delete b.html_strip_quotes);"html_force_trim"in b&&("blogger"==c||"html"==c)&&delete b.html_force_trim;"html_keep_quotes"in b&&"html_strip_quotes"in b&&delete b.html_strip_quotes;if("keep_comments"in b&&("keep_ssi"in b||"keep_char"in b))delete b.keep_ssi,delete b.keep_char;"jsmin"==b.js_engine&&"1"==b.js_fallback&&delete b.js_fallback;"jsmin"==b.js_ph_engine&&"1"==b.js_ph_fallback&&delete b.js_ph_fallback;"closure"==b.js_engine&&("1"==b.js_closure_single_line&&"1"==b.js_closure_formatting)&&delete b.js_closure_formatting;"php"!=c&&("asp"!=c&&"smarty"!=c&&"blogger"!=c&&"minimize_js_ph"in b)&&delete b.minimize_js_ph;_K("php")&&("php_convert_tag"in b&&!("php_minimize"in b))&&delete b.php_convert_tag;"html_keep_quotes"in b&&"blogger"==c&&delete b.html_keep_quotes;"html_strip_quotes"in b&&"blogger"==c&&delete b.html_strip_quotes;!wasDAR&&"dnd_charset"in b&&delete b.dnd_charset;a+="code_type="+c;a+="verbose"in b?"&verbose=1":"";a+="dnd_charset"in b?"&dnd_charset="+b.dnd_charset:"";$.each(b,function(b,c){if(0==b.indexOf("keep_")&&!_KK("js,css")||0==b.indexOf("minimize_")&&!_KK("js,css")||0==b.indexOf("html_")&&!_KK("js,css")||0==b.indexOf("asp_")&&_K("asp")||0==b.indexOf("php_")&&_K("php")||0==b.indexOf("smarty_")&&_K("smarty"))a+="&"+b+"="+c});if(_K("css")||!_K("js")&&"1"==b.minimize_css)"css_lb_num"in b&&d.test(b.css_lb_num)&&(a+="&css_lb_num="+b.css_lb_num);if(_K("js")||!_K("css")&&"minimize_js"in b)a+="&js_engine="+b.js_engine,"js_fallback"in b&&(a+="&js_fallback="+b.js_fallback),"js_yui_lb_num"in b&&!d.test(b.js_yui_lb_num)&&delete b.js_yui_lb_num,$.each(b,function(c,e){-1<c.indexOf("js_"+b.js_engine)&&(a+="&"+c+"="+e)});if(_K("js_")||"minimize_js_ph"in b&&_KK("php,asp,smarty,blogger")&&!_K("css"))a+="&js_ph_engine="+b.js_ph_engine,"js_ph_fallback"in b&&(a+="&js_ph_fallback="+b.js_ph_fallback),"js_ph_yui_lb_num"in b&&!d.test(b.js_ph_yui_lb_num)&&delete b.js_ph_yui_lb_num,$.each(b,function(c,e){0==c.indexOf("js_ph_"+b.js_ph_engine)&&(a+="&"+c+"="+e)});return a}$("#cmpForm input").change(function(){showValues(!1)});$("#cmpForm select").change(function(){"code_type"==this.name&&loadCodeOptions(this.value);showValues(!1)}).change();function cc_process(a){var c="htmlcompressor.com";if(0>a.indexOf("@<"+c+":"))return a;var b=["\x3c!--","\\{\\*","/\\*"],d=["--\x3e","\\*\\}","\\*/"],f=b.length,e,g,h={pre:{s:[],r:[]},post:{s:[],r:[]}};for(e=0;e<f;e++)g=RegExp(b[e]+"@<"+c+":CCI>([-_a-zA-Z0-9]{1,30})<\\\\?/"+c+":CCI>@"+d[e]),a=a.replace(g,function(a,b,f,e){c=b;return a});DOutFile="";for(e=0;e<f;e++)g=RegExp(b[e]+"@<"+c+':file_name>([^\\\\/*?"<>|:]{1,255})<\\\\?/'+c+":file_name>@"+d[e]),a=a.replace(g,function(a,b,c,f){DOutFile=b;return a});for(e=0;e<f;e++)g=RegExp(b[e]+"@<"+c+":(pre|post)_SR>([\\s\\S]+?)<"+c+":\\|>([\\s\\S]*?)<\\\\?/"+c+":\\1_SR>@"+d[e],"g"),a=a.replace(g,function(a,b,c,f,e,d){h[b].s.push(c);h[b].r.push(f);return""});for(e=0;e<h.pre.s.length;e++)a=a.replace(h.pre.s[e],h.pre.r[e],"g");for(e=0;e<b.length;e++)g=RegExp(b[e]+"@<"+c+":strip>@"+d[e]+"[\\s\\S]*?"+b[e]+"@<\\\\?/"+c+":strip>@"+d[e],"g"),a=a.replace(g,"");for(e=0;e<b.length;e++)g=RegExp(b[e]+"@<\\\\?/?("+c+"|htmlcompressor.com):[-_a-zA-Z0-9]+>(@"+d[e]+"|[\\s\\S]*?<\\\\?/\\1:[-_a-zA-Z0-9]+>@"+d[e]+")","g"),a=a.replace(g,"");cc_post_SR=h.post;return a}$("#compress-btn-msg a").click(function(a){a.preventDefault();a=build_params();var c=cc_process($("#code").val()),b=$("#cmpForm :checkbox[name=detect_ct]").is(":checked");$("ul.tabs li").removeClass("warning").removeClass("error");if(""==c||8>c.length||3E5<c.length)$("#code_msg").text("Code must have a min of 8 bytes and max of 300kb, but it has "+c.length+" bytes"),3E5<c.length&&track_cs(c.length);else{a+="&code="+encodeURIComponent(c);$("#code_msg").text("Processing data...");$("#compress-btn-msg, #working-btn-msg").toggle();if(c_verify&&b){var c=detect_code_type(c),d=c.replace(/(maybe_|^html_)/g,"");if(d!=_opt.key){$("#modal_AD .u_ctype").html($("#cmpForm select[name='code_type'] option").filter(":selected").text());$("#modal_AD .ad_ctype").html((-1<c.indexOf("maybe")?"maybe ":"")+$("#cmpForm select[name='code_type'] option[value='"+d+"']").text());$("#modal_AD .me").unbind("click");$("#modal_AD .me").bind("click",function(a){a.preventDefault();$("#compress-btn-msg, #working-btn-msg").toggle();-1!=$(this).attr("class").indexOf("modal-cancel")? (c_verify=!0,$("#code_msg").html("&nbsp;")):(c_verify=!1,-1!=$(this).attr("class").indexOf("modal-change")&&$("#cmpForm select[name='code_type']").val(d).change(),$("#compress-btn-msg a").click());$("#modal_AD").data("overlay").close()});$("#modal_AD").data("overlay").load();return}}c_verify=!0;track_cmp(wasDAR);wasDAR=!1;$.post("/compress_ajax_v2.php",a,function(a){var b=result_bkp=t_status="",c=0,d=0,l=0,k=0,m=0,c=cc_post_SR.s.length;$.isEmptyObject(a)&&(a={success:!1,result:"",error:{system:["The server could not compress your code."]}});if(""!=a.result&&0<c)for(d=0;d<c;d++)a.result=a.result.replace(cc_post_SR.s[d],cc_post_SR.r[d],"g");document.getElementById("result").value=a.result;"string"==typeof a.result&&0<a.result.length?(c=$("#code").val().length,d=$("#result").val().length,l=c-d,k=Math.round(100-100*(l/c)),m=Math.round(100*(100/k)),100<k?($(".panel-box .bar-src").css("width",m+"%"),$(".panel-box .bar-cmp").css("width",m+"%"),$(".panel-box .bar-cmp").animate({width:"100%"},3E3)):($(".panel-box .bar-src").css("width","100%"),$(".panel-box .bar-cmp").css("width","100%"),$(".panel-box .bar-cmp").animate({width:k+"%"},3E3)),track_cr(k,0>l?0:l),$("#cmp-data-src").text(add_commas(c)+" bytes"),$("#cmp-data-cmp").text(add_commas(d)+" bytes"),$("#cmp-data-ratio").text(k),$("#cmp-data-svdl").html("<span>Saved: </span>"+add_commas(l)+" bytes"),"gzip_s"in a&&$("#cmp-data-svdl").append("<br /><span>Original:</span> "+add_commas(c)+" bytes. <span>Gzip:</span> "+add_commas(a.gzip_s)+" bytes"),"gzip_c"in a&&$("#cmp-data-svdl").append("<br/><span>Compressed:</span> "+add_commas(d)+" bytes. <span>Gzip:</span> "+add_commas(a.gzip_c)+" bytes"),0<a.download.length&&($("#cdload").unbind("click"),$("#cmp-data-svdl").append('<br /><span>Download: </span><a id="cdload" href="'+a.download+'"  title="Download compressed file...">Here</a>.'),isChrome&&($(".dragOut").unbind("dragstart"),c=window.location.protocol+"//"+window.location.hostname+a.download,$("#cmp-data-svdl").append('<br /><span>Drag as: </span><div class="dragOut" draggable="true" data-downloadurl="text/plain:'+a.download.split("/").pop()+":"+c+'" href="'+a.download+'"  title="Drag to your desktop to save">'+a.download.split("/").pop()+"</div>"),DARfile&&(d=-1!=DARfile.indexOf(".")?DARfile.replace(/(.*)(\.[^\.]+)$/,"$1-min$2"):DARfile+"-min",$("#cmp-data-svdl").append('<br /><span>Drag as: </span><div class="dragOut" draggable="true" data-downloadurl="text/plain:'+DARfile+":"+c+'" title="Drag to your desktop to save">'+DARfile+"</div>"),$("#cmp-data-svdl").append('<br /><span>Drag as: </span><div class="dragOut" draggable="true" data-downloadurl="text/plain:'+d+":"+c+'" title="Drag to your desktop to save">'+d+"</div>")),DOutFile&&$("#cmp-data-svdl").append('<br /><span>Drag as: </span><div class="dragOut" draggable="true" data-downloadurl="text/plain:'+DOutFile+":"+c+'" title="Drag to your desktop to save">'+DOutFile+"</div>"),$(".dragOut").bind("dragstart",function(a){var b=$(a.target).data("downloadurl");b||(b=$(a.target).attr("data-downloadurl"));a.originalEvent.dataTransfer.setData("DownloadURL",b)})),$("#cdload").bind("click",function(a){if(analytics()){var b=$(this).attr("href");a.preventDefault();window.setTimeout(function(){document.location=b},100);_gaq.push(["_trackEvent","Download",_opt.key])}})),"html"==a.code_type?($("#w3c_css_block").hide(),$("#w3c_html_block").show()):"css"==a.code_type?($("#w3c_html_block").hide(),$("#w3c_css_block").show()):$("#w3c_html_block, #w3c_css_block").hide(),$("#stats_block").show()):$("#w3c_html_block, #w3c_css_block, #stats_block").hide();a.success||(b="Compilation error(s). Please check the error messages.");if(a.success&&("string"!=typeof a.result||""==a.result))b="Compiler returned empty result. Check your settings.";$("#tab_messages").empty();"log"in a&&($("#tab_messages").append('<div><p>Compressor log messages:</p></div><div id="log_container"></div>'),build_messages(a.log,"#log_container"),tab_status("tab_messages","warning"));"empty_blocks"in a&&(""!=$("#tab_messages").html()&&$("#tab_messages").append("<div>&nbsp;</div>"),$("#tab_messages").append('<div><p>The compression produced the following empty blocks. This is normally due to blocks consisting only of commented code.</p></div><div id="eb_container"></div>'),build_messages(a.empty_blocks,"#eb_container"),tab_status("tab_messages","warning"));"output"in a?(""!=$("#tab_messages").html()&&$("#tab_messages").append("<div>&nbsp;</div>"),$("#tab_messages").append('<div><p>Output messages from the compression engine:</p></div><div id="om_container"></div>'),build_messages(a.output,"#om_container"),tab_status("tab_messages","warning")):"log"in a||"empty_blocks"in a||$("#tab_messages").html("<p>No messages.</p>");"error"in a?(build_messages(a.error,"#tab_errors"),$("#tab_errors").prepend("<div><p>The compressor engine reported the following errors:</p></div>"),$("#tab_errors").append("<div><p>&nbsp;</p><h3>Did you choose the correct Code Type?</h3><p>Choosing a wrong code type may lead to fewer optimizations or compression errors. Try with a different Code Type if in doubt, as most of the times that's the cause for them to appear.</p><h3>General errors note:</h3><p>Whenever html compressor finds an error while compressing your inline javascripts or css code it keeps your original code intact and continues compressing all the other elements. The objective is to always preserve your code functionality, so if for example one of your scripts generates errors, it is left intact and the rest of the scripts, css and html are compressed.</p></div>"),tab_status("tab_errors","error")):$("#tab_errors").html("<p>No errors.</p>");a.success&&("error"in a?(tab_status("tab_result","warning"),switch_tab("#tab_errors")):(tab_status("tab_result","success"),switch_tab("#tab_result")));$("#resultError_msg").text(b)},"json").success(function(a,b,c){$("#code_msg").html("&nbsp;")}).error(function(a,b,c){$("#code_msg").text("Server communication error. Try again later please.")}).complete(function(){$("#working-btn-msg").hide();$("#compress-btn-msg").show()})}});$(".tr_click").click(function(a){var c=$(this).text(),b=$(this).attr("href");0<b.length&&0==b.indexOf("http")&&(a.preventDefault(),window.setTimeout(function(){document.location=b},100));"?"==c&&(c=b);if("Single"==c||"Multi"==c)c="Convert to "+c+" Line "+(-1<b.indexOf("php")?"PHP":"JS");"x"!=c&&track_link(c)});$(".lnk-expand-b").toggle(function(){$(this).text("collapse");var a=$(this).attr("href");0<$(a).length&&$(a).removeClass("opt-s").removeClass("opt-x").addClass("opt-l");resizeDND()},function(){$(this).text("expand");var a=$(this).attr("href");0<$(a).length&&$(a).removeClass("opt-l").removeClass("opt-x").addClass("opt-s");resizeDND()});$(".lnk-expand-a").toggle(function(){$(this).text("show");$(this).prev().hide();var a=$(this).attr("href");0<$(a).length&&$(a).addClass("opt-x");resizeDND()},function(){$(this).text("hide");$(this).prev().show();var a=$(this).attr("href");0<$(a).length&&$(a).removeClass("opt-x");resizeDND()});$(".btn-select").click(function(a){a.preventDefault();a=$(this).attr("href");0<$(a).length&&$(a).focus().select()});$(".btn-reset").click(function(a){a.preventDefault();$("#code, #result").val("");$("#result_msg, #resultError_msg, #code_msg").html("&nbsp;");$("#w3c_html_block, #w3c_css_block, #stats_block").hide();$("#tab_errors, #tab_messages").html("&nbsp;");$("ul.tabs li").removeClass("warning").removeClass("error");DARfile=t_status=result_bkp="";switch_tab("#tab_source")});function tab_status(a,c){$('a[href$="#'+a+'"]').parent().addClass(c)}function build_messages(a,c){var b='<div class="collapse-container">';$.each(a,function(a,c){b+="";b+="<h3>"+a+"</h3>";"null"!==c&&"object"==typeof c?jQuery.each(c,function(c,f){b+='<p class="collapse-head"><a href="#" class="list-toggle">'+a+" "+c+'</a></p><div class="collapse-body"><pre>'+htmlspecialchars(f)+"</pre></div>"}):"string"==typeof c&&(b+='<div class="static-body"><pre>'+htmlspecialchars(c.replace(/\n/g,"\r\n"))+"</pre></div>")});$(c).empty().append(b+"</div>");$(c+" .list-toggle").click(function(a){$(this).parent().next(".collapse-body").toggle();a.preventDefault()})}function htmlspecialchars(a){return(a+"").replace(/&/g,"&amp;").replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/"/g,"&quot;")}function add_commas(a){var c=(a+"").split(".");a=c[0];for(var c=1<c.length?"."+c[1]:"",b=/(\d+)(\d{3})/;b.test(a);)a=a.replace(b,"$1,$2");return a+c}function switch_tab(a){$("ul.tabs li").removeClass("active");$('a[href$="'+a+'"]').parent().addClass("active");$(".tab_content").hide();$(a).show()}$(".w3c-btn").click(function(a){a.preventDefault();a=$(this).attr("href");var c=$(this).hasClass("CSS-mode");w3c(a,c)});$(".wmtools-btn").click(function(a){a.preventDefault();a=$(this).attr("href");code_to_var("#result",a)});function w3c(a,c){if(!(0<!$(a).val().length)){var b='<div style="display:block">';"#result"==a&&""!=t_status&&code_to_var(a,"#");c?(b+='<form id="w3f" method="post" enctype="multipart/form-data" action="http://jigsaw.w3.org/css-validator/validator" target="_blank"><textarea id="shit1" name="text" rows="10" cols="60"><',b+="/textarea>",b+='<input type="hidden" name="profile" value="none" />',b+='<input type="hidden" name="usermedium" value="all" />',b+='<input type="hidden" name="type" value="none" />',b+='<input type="hidden" name="warning" value="1" />'):(b+='<form id="w3f" method="post" enctype="multipart/form-data" action="http://validator.w3.org/check" target="_blank">',b+='<textarea id="shit1" name="fragment" rows="10" cols="60"><',b+="/textarea>",b+='<input type="hidden" name="doctype" value="Inline">');b+="</form></div>";$(b).appendTo("body");$("#w3f textarea").val($(a).val());$("#w3f").submit();$("#w3f").parent().delay(500).remove()}}function code_to_var(a,c){if(!(0<!$(a).val().length)&&("#"==c&&""!=result_bkp&&($(a).val(result_bkp),t_status=""),"#"!=c)){""==t_status&&(result_bkp=$(a).val());var b=!1,d=-1<t_status.indexOf("php"),f=-1<t_status.indexOf("_ML")&&-1<$(a).val().indexOf("\n"),d=(d?"$":"var ")+"code "+(d&&f?" ":"")+"= '"+convert_code(result_bkp,d,f)+"';";""!=t_status&&("#"!=t_status&&""!=result_bkp&&d!=$(a).val())&&(result_bkp=$(a).val(),b=!0);d=-1<c.indexOf("php");b=-1<c.indexOf("_ML")&&-1<(b?$(a).val():result_bkp).indexOf("\n");$(a).val((d?"$":"var ")+"code "+(d&&b?" ":"")+"= '"+convert_code(result_bkp,d,b)+"';");t_status=c}}function convert_code(a,c,b){a=(a+"").replace(/[\\']/g,"\\$&");return a=c?b?a.replace(/(\n+)/g,function(a,b){return 1<(b+"").length?'\'."\\n";\n'+b.slice(1).replace(/\n/g,'$code .= "\\n";\n')+"$code .= '":"'.\"\\n\";\n$code .= '"}):a.replace(/(\n+)/g,function(a,b){return"'.\""+b.replace(/\n/g,"\\n")+"\".'"}):a.replace(/\n/g,b?"\\n';\ncode += '":"\\n")}function detect_code_type(a){var c="",b=/<\?(=|php\s|\s)/i.test(a),d=/{\s*\/\s*(if|for|foreach|function|literal|nocache|php|section|strip|textformat|while)\s*}/.test(a),f=/{\$[_a-z][_a-z0-9.]*}/i.test(a)||/{#[_a-z][_a-z0-9.]*#}/i.test(a),e=/<%[-a-zA-Z0-9=#@\$\(\)\[\]\.,"'\s\{\};\/]+%>/.test(a),g=-1<a.indexOf("expr:dir='data:blog.languageDirection'")||-1<a.indexOf("xmlns:b='http://www.google.com/2005/gml/b'")||-1<a.indexOf("xmlns:data='http://www.google.com/2005/gml/data'")||-1<a.indexOf("xmlns:expr='http://www.google.com/2005/gml/expr'")||/<\/b:(if|else|skin|section|includable|loop|widget)>/.test(a)||/<[a-z]+\s+expr:[a-z]+\s*=/.test(a)||/<data:[a-zA-Z\.]+\/>/.test(a),h=/(\bvar\s+[a-zA-Z_$]([a-zA-Z0-9_$]+)?\s*=|[a-zA-Z_$][a-zA-Z0-9_$]*\.[a-zA-Z0-9_]+\s*\(|\bfunction(\s[a-zA-Z_][a-zA-Z0-9.]+)?\s*\()/,l=/(^|;|{|}|=|\+|\(|\)|<|>|\||&)\s*(?!url|scale)[a-zA-Z]+\(/,k=/^\s*(\{\$php\}\s*)*<\/?[a-zA-Z]+>/m,m=/<\?(=|php\s|\s)[\s\S]*?($|\?>)/ig,n=/\s*[-_\.#a-zA-Z0-9]+\s*{(?:\s*[-_a-zA-Z0-9]+\s*:\s*[-#%'"\(\)\/\._a-zA-Z0-9 \t]+\s*;)*(?:\s*[-_a-zA-Z0-9]+\s*:\s*[-#%'"\(\)\/\._a-zA-Z0-9 \t]+\s*;?)\s*}/,p=/\s*[-_\.#a-zA-Z0-9]+\s*{(?:\s*[-_a-zA-Z0-9]+\s*:\s*(?:[-#%'"\(\)\/\._a-zA-Z0-9 \t]+|{(?:\$|#)[-#\$+>\._\[\]\(\)\/a-zA-Z0-9]+\s*})\s*;)*(?:\s*[-_a-zA-Z0-9]+\s*:\s*(?:[-#%'"\(\)\/\._a-zA-Z0-9 \t]+|{(?:\$|#)[-#\$+>\._\[\]\(\)\/a-zA-Z0-9]+\s*})\s*;?)\s*}/;b&&(a=a.replace(m,"{$php}"));if(/^\s*(\{\$php\}\s*)*($|<)/.test(a)||/>\s*(\{\$php\}\s*)?$/.test(a.replace(/\/\/.*$/mg,"")))c="html";else if(a=a.replace(/\/\*[\s\S]*?\*\//g,"").replace(/^\s*\/\/.*$/mg,""),h=h.test(a),(b||d||f?p.test(a):n.test(a))&&!h)c=/<\/style\s*>/i.test(a)?"html":"css";else if(h)c=k.test(a)?"html":"js";else if((-1<a.indexOf(";")||-1<a.indexOf("{"))&&!k.test(a))c=/^\s*(\{\$php\}\s*)*(\.|#|@|\*)/.test(a)?"maybe_css":l.test(a)?"maybe_js":"maybe_css";c=""==c?"html":c;return b?c+"_php":d?c+"_smarty":g?"blogger":f?c+"_maybe_smarty":e?c+"_maybe_asp":c}function analytics(){return"undefined"!==typeof _gaq&&window.domIsReady?!0:!1}function track_link(a){analytics()&&_gaq.push(["_trackEvent","Click",a])}function track_cs(a){analytics()&&_gaq.push(["_trackEvent","TooBig",a])}function track_cmp(a){analytics()&&_gaq.push(["_trackEvent","Compress",(a?"DAR-":"")+_opt.key])}function track_cr(a,c){analytics()&&(_gaq.push(["_trackEvent","Ratio",_opt.key,a]),_gaq.push(["_trackEvent","Ratio",_opt.key,"saved",c]))};/*]]>*/</script><div class="modal" id="modal_AD"><h2>Code Autodetection Notice!</h2><p>You have selected <span class="u_ctype">.</span>, however your code looks like <span class="ad_ctype">.</span>.</p><p>Click on <b>Change</b> to use the new Code Type and continue, <b>Ignore</b> to continue compression without changing the Code Type, or <b>Cancel</b> to abort so you can manually change your selection and adjust other settings.</p><p>Note: you can turn off autodetection in Options &gt; Misc Options.</p><div class="btn-medium"><p><a href="#" class="modal-change me"><span>Change</span></a><a href="#" class="modal-ignore me"><span>Ignore</span></a><a href="#" class="modal-cancel me"><span>Cancel</span></a></p></div></div><div id="nfo-container" style="display:none"><div id="nfo-code-type" class="nfo-content"> Choosing the correct Code Type makes the compression of your code more safe and effective. Choosing the wrong option may lead to fewer optimizations or errors. <br /><br /> There are 3 main groups, <span class="rcode">x/html</span>, <span class="rcode">CSS</span> and <span class="rcode">JavaScript</span>. <br /><br /> Select <span class="rcode">JavaScript</span> when you want to compress just JavaScript code, as it would appear in an external.js file. If your JavaScript code contains PHP, ASP or Smarty server side code then select the respective option. This will allow you to minimize your JavaScript code containing PHP, ASP or Smarty without getting syntax errors, while preserving your server side code intact. <h4>note:</h4><div class="note"> JavaScript code contained between <span class="icode">&lt;script&gt;</span> and <span class="icode">&lt;/script&gt;</span> tags is considered x/html with embedded JavaScript code. Select a <span class="rcode">x/html</span> code type in such case. </div><br /> Select <span class="rcode">CSS</span> when you want to compress just Cascading Style Sheets (CSS) code as it would appear in an external style.css file. To compress your CSS containing PHP, ASP or Smarty code select the respective option. <h4>note:</h4><div class="note"> CSS code contained between <span class="icode">&lt;style&gt;</span> and <span class="icode">&lt;/style&gt;</span> tags is considered x/html with embedded CSS code. Select a <span class="rcode">x/html</span> code type in such case. </div><br /> Select <span class="rcode">x/html</span> for web documents that do not contain server side code, such as static web pages. <br /><br /> Select <span class="rcode">x/html + PHP</span> if you want to compress x/html containing PHP code. This will ensure that your PHP code remains intact while your x/html code gets minimized. With this option you can safely minimize the x/html code of a <a href="http://www.wordpress.org" target="_blank">Wordpress</a> theme, a <a href="http://www.joomla.org" target="_blank">Joomla</a> template, a <a href="http://drupal.org" target="_blank">Drupal</a> template or any other PHP based template. Only the following tags are considered valid open and close tags: <span class="icode">&lt;?</span>, <span class="icode">&lt;?=</span>, <span class="icode">&lt;?php</span> and <span class="icode">?&gt;</span>. <br /><br /> Select <span class="rcode">x/html + ASP</span> if you want to compress x/html containing ASP code. Note that ASP code support is simply limited to preserving anything between <span class="icode">&lt;%</span> and <span class="icode">%&gt;</span> tags. <br /><br /> Select <span class="rcode">x/html + Smarty</span> if you want to compress <a href="http://www.smarty.net" target="_blank">Smarty</a> templates code, or any other template system with similar syntax to smarty. Only the following tags are considered valid open and close tags: <span class="icode">{</span> and <span class="icode">}</span>, and they can contain any number of nested tags. </div><div id="nfo-dnd-charset" class="nfo-content"> When reading files using <a href="https://developer.mozilla.org/en/DOM/FileReader" target="_blank">HTML5 ReadFile API</a>, use the specified <a href="http://en.wikipedia.org/wiki/Character_encoding" target="_blank">charset encoding</a> to render the characters of the dropped file correctly.<br /><br /> Unfortunately ReadAsText() method does not autodetect the encoding of the files properly, so if you see weird characters appearing in your document, or the text is incomplete, choose an appropriate charset value. Most of the times you'll be good using <span class="rcode">ISO-8859-1</span> or <span class="rcode">UTF-8</span>, but depending of the language you use in your documents, that needs to be changed. <h4>How to find out:</h4><div class="tip"> You can determine which character encoding a certain file uses by opening that file in your browser. For example using FireFox, drop the file in a new tab. If the file displays the characters correctly, check the menu <span class="rcode">View / Character Encoding</span> and write down the one that is selected.<br /><br /> If the characters appear wrong in FireFox, try selecting a different Character Encoding in the same menu until you find the one that displays your file correctly. </div></div><div id="nfo-smarty" class="nfo-content"> Compresses smarty templates while preserving <a href="http://www.smarty.net/about_smarty" target="_blank">smarty</a> code functionality.<br /><br /> Please note that HTMLCompressor uses a custom lightweight smarty parsing engine, and only &quot;<span class="icode">{</span>&quot; and &quot;<span class="icode">}</span>&quot; tag delimiters are supported. <br /></div><div id="nfo-smarty-autoliterals" class="nfo-content"> Ignores smarty open / close delimiters if they are surrounded by a whitespace character. A whitespace character after &quot;<span class="icode">{</span>&quot; or a whitespace character before &quot;<span class="icode">}</span>&quot;.<br /><br /> For more information read the official smarty documentation about <a href="http://www.smarty.net/docs/en/language.escaping.tpl" target="_blank">escaping smarty parsing</a>. <br /></div><div id="nfo-smarty-keep-comments" class="nfo-content"> If selected, preserves all the comments found in the source code. Otherwise only important comments are preserved. <h4>before:</h4><pre class="code">
{*!
   Important comments are not deleted.
   The format is similar to CSS / JavaScript.
   Just add &quot;!&quot; after the comment open tag.
*}
&lt;head&gt;
   {* Normal comment *}
   &lt;title&gt;{$pageTitle}&lt;/title&gt;
&lt;/head&gt;
</pre><h4>after: (option not selected)</h4><pre class="code">
{*!
   Important comments are not deleted.
   The format is similar to CSS / JavaScript.
   Just add &quot;!&quot; after the comment open tag.
*}
&lt;head&gt;
&lt;title&gt;{$pageTitle}&lt;/title&gt;
&lt;/head&gt;
</pre><h4>after: (option selected)</h4><pre class="code">
{*!
   Important comments are not deleted.
   The format is similar to CSS / JavaScript.
   Just add &quot;!&quot; after the comment open tag.
*}
&lt;head&gt;
{* Normal comment *}
&lt;title&gt;{$pageTitle}&lt;/title&gt;
&lt;/head&gt;
</pre></div><div id="nfo-asp" class="nfo-content"> Preserves code between <span class="icode">&lt;%</span> and <span class="icode">%&gt;</span> tags.<br /><br /> Please note that <a href="http://msdn.microsoft.com/en-us/library/aa286483.aspx" target="_blank">ASP</a> support is quite basic and limited only to preserving anything between the mentioned tags. <h4>before:</h4><pre class="code">
&lt;div&gt;
   &lt;p&gt;Today is a &lt;%
                  randomize()
                  r=rnd()
                  if r&gt;0.5 then
                      response.write(&quot;nice&quot;)
                  else
                      response.write(&quot;horrible&quot;)
                  end if
   %&gt; day!&lt;/p&gt;
&lt;/div&gt;
</pre><h4>after: (code type: x/html)</h4><pre class="code">
&lt;div&gt;
&lt;p&gt;Today is a &lt;% randomize() r=rnd() if r&gt;0.5 then
response.write(&quot;nice&quot;)
else
response.write(&quot;horrible&quot;)
end if
%&gt; day!&lt;/p&gt;
&lt;/div&gt;
</pre><h4>after: (code type: x/html+ASP)</h4><pre class="code">
&lt;div&gt;
&lt;p&gt;Today is a &lt;%
                  randomize()
                  r=rnd()
                  if r&gt;0.5 then
                      response.write(&quot;nice&quot;)
                  else
                      response.write(&quot;horrible&quot;)
                  end if
   %&gt; day!&lt;/p&gt;
&lt;/div&gt;
</pre></div><div id="nfo-php-minimize" class="nfo-content"> Minimizes PHP code by removing unnecessary white spaces and line breaks, while preserving the functionality of <a href="http://www.php.net" target="_blank">PHP</a> code. <br /><br /> However minimizing PHP code itself does not affect the size of the output to the browser, it can be very handy when you are mixing small code snippets within x/html templates, as you will get most of the times a single line of PHP code which makes is easier to integrate in your x/html. <br /><br /> It is also useful to save disk space for integrated systems with a limited storage capacity, convert it for command line usage, and anywhere where you see fit. <h4>note:</h4><div class="note"> String content is always preserved, so multiline strings, heredoc and nowdoc are always kept intact. </div><h4>before:</h4><pre class="code">&lt;?php

if ( $user.is_new )
{
   echo 'Hello new user!';

} else {

   echo 'Welcome back user';
}

?&gt;</pre><h4>after:</h4><pre class="code">&lt;?php if($user.is_new){echo 'Hello new user!';}else{echo 'Welcome back user';}?&gt;</pre></div><div id="nfo-php-convert-tag" class="nfo-content"> Converts PHP Short Open Tag &quot;<span class="icode">&lt;?</span>&quot; and Short Open Tag with echo &quot;<span class="icode">&lt;?=</span>&quot; to full Open Tag format &quot;<span class="icode">&lt;?php</span>&quot; and &quot;<span class="icode">&lt;?php echo</span>&quot; respectively. <h4>before:</h4><pre class="code">Welcome &lt;? if($user.returning) echo &quot;back&quot;; ?&gt; dear &lt;?=$user.name; ?&gt;</pre><h4>after:</h4><pre class="code">Welcome &lt;?php if($user.returning) echo &quot;back&quot;; ?&gt; dear &lt;?php echo $user.name; ?&gt;</pre></div><div id="nfo-html-level" class="nfo-content"> Currently there are 4 compression levels. <h4>Do not minimize</h4> The compression in this level respects the x/html document layout, while still allows to remove comments (preserving conditional comments), and compress CSS and JavaScript code. <h4>Safe minimization</h4> This is the default level and is meant to reduce the size of your code as much as possible while preserving the layout representation. <h4>Advanced minimization</h4> This does all of the above, plus tries to save some more bytes by removing whitespace characters between block elements. Whilst most of the time this won't alter the layout of x/html code, it is very possible that any of the block elements is set to be inline with CSS, then there would be a lack for one whitespace where otherwise may be needed. Read further for a simple solution. <h4>Aggressive minimization</h4> This level does all of the above plus removes any whitespace character between x/html tags, while still preserving <span class="icode">textarea</span> and <span class="icode">pre</span> contents unaltered. In this level the resulting layout can get affected if the design relies in intertag whitespaces (whitespaces between a close tag and an open tag). See the given examples below for a graphical explanation and a simple solution. <br /><br /><h4>before:</h4><pre class="code">
&lt;!-- Minimization Levels Test --&gt;
&lt;style type = &quot;text/css&quot;&gt;
   p {
      font-size: 12px;
      font-weight: bold;
   }
&lt;/style&gt;
&lt;div style = &quot;background: #ff0000;&quot;&gt;
   &lt;div&gt;Some&lt;/div&gt;
   &lt;div&gt;text&lt;/div&gt;
   &lt;div&gt;
      &lt;span&gt;More&lt;/span&gt;
      &lt;span&gt;text&lt;/span&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type = &quot;text/JavaScript&quot;&gt;
  alert ( &quot;hello!&quot; );
&lt;/script&gt;
</pre><h4>after: (Do not minimize)</h4><pre class="code">

&lt;style type = &quot;text/css&quot;&gt;p{font-size:12px;font-weight:bold}&lt;/style&gt;
&lt;div style = &quot;background: #ff0000;&quot;&gt;
   &lt;div&gt;Some&lt;/div&gt;
   &lt;div&gt;text&lt;/div&gt;
   &lt;div&gt;
      &lt;span&gt;More&lt;/span&gt;
      &lt;span&gt;text&lt;/span&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type = &quot;text/JavaScript&quot;&gt;alert(&quot;hello!&quot;);&lt;/script&gt;
</pre><h4>after: (Safe)</h4><pre class="code">
&lt;style type=&quot;text/css&quot;&gt;p{font-size:12px;font-weight:bold}&lt;/style&gt;
&lt;div style=&quot;background:#f00&quot;&gt;
&lt;div&gt;Some&lt;/div&gt;
&lt;div&gt;text&lt;/div&gt;
&lt;div&gt;
&lt;span&gt;More&lt;/span&gt;
&lt;span&gt;text&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/JavaScript&quot;&gt;alert(&quot;hello!&quot;);&lt;/script&gt;
</pre><h4>after: (Advanced)</h4><pre class="code">
&lt;style type=&quot;text/css&quot;&gt;p{font-size:12px;font-weight:bold}&lt;/style&gt;&lt;div style=&quot;background:#f00&quot;&gt;&lt;div&gt;Some&lt;/div&gt;&lt;div&gt;text&lt;/div&gt;&lt;div&gt;
&lt;span&gt;More&lt;/span&gt;
&lt;span&gt;text&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;
&lt;script type=&quot;text/JavaScript&quot;&gt;alert(&quot;hello!&quot;);&lt;/script&gt;
</pre> Look at the tags &quot;<span class="icode">&lt;div&gt;Some&lt;/div&gt;&lt;div&gt;text&lt;/div&gt;</span>&quot; and notice how the newline character that was between &quot;<span class="icode">&lt;div&gt;Some&lt;/div&gt;</span>&quot; and &quot;<span class="icode">&lt;div&gt;text&lt;/div&gt;</span>&quot; has been removed.<br /><br /> This is not a problem as long as this div display style is <span class="rcode">block</span>, &quot;<span class="icode">Some</span>&quot; and &quot;<span class="icode">text</span>&quot; would continue to render in a separate line, one on top of another. However if these div display style were <span class="rcode">inline</span>, what would render as &quot;<span class="icode">Some text</span>&quot; with the newline character between them, would turn into &quot;<span class="icode">Sometext</span>&quot; without it. For a simple workaround, check next example.<br /><br /><h4>after: (Aggressive)</h4><pre class="code">
&lt;style type=&quot;text/css&quot;&gt;p{font-size:12px;font-weight:bold}&lt;/style&gt;&lt;div style=&quot;background:#f00&quot;&gt;&lt;div&gt;Some&lt;/div&gt;&lt;div&gt;text&lt;/div&gt;&lt;div&gt;&lt;span&gt;More&lt;/span&gt;&lt;span&gt;text&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type=&quot;text/JavaScript&quot;&gt;alert(&quot;hello!&quot;);&lt;/script&gt;
</pre> In aggressive level all whitespace characters between x/html tags are removed, resulting in a single line output (as long as there are no textarea or pre tags with multiline content, which is preserved). This produces in some circumstances a change in the layout of the page, where the page design relies on such spaces.<br /><br /> Notice here what happened with &quot;<span class="icode">&lt;span&gt;More&lt;/span&gt;&lt;span&gt;text&lt;/span&gt;</span>&quot;. Before compression there was a newline character between &quot;<span class="icode">&lt;span&gt;More&lt;/span&gt;</span>&quot; and &quot;<span class="icode">&lt;span&gt;text&lt;/span&gt;</span>&quot;, so with the original code, this text would render as &quot;<span class="icode">More text</span>&quot;, however after aggressive compression, it would read as &quot;<span class="icode">Moretext</span>&quot; because the newline character that was between them is no longer present. <h4>The solution:</h4><div class="tip"> To ensure that the layout does not change after compression with Advanced / Aggressive compression levels put your desired space inside the x/html tag, or use an explicit <span class="icode">&amp;nbsp;</span>.<br /><br /> Space inside x/html is always preserved:<br /><span class="rcode">&lt;span&gt;More &lt;/span&gt;&lt;span&gt;Text&lt;/span&gt;</span><br /><br /> Explicit x/html space entity:<br /><span class="rcode">&lt;span&gt;More&lt;/span&gt;&amp;nbsp;&lt;span&gt;Text&lt;/span&gt;</span><br /></div></div><div id="nfo-html-single" class="nfo-content"> Replaces new line characters from output with one space. This ensures that the layout is preserved, yet provides one line of code output which is handy in many situations.<br /><h4>before:</h4><pre class="code">&lt;div&gt;Hello&lt;/div&gt;
&lt;div&gt;Goodbye&lt;/div&gt;</pre><h4>after:</h4><pre class="code">&lt;div&gt;Hello&lt;/div&gt; &lt;div&gt;Goodbye&lt;/div&gt;</pre> In aggressive compression level, new lines between html tags are always discarded, so the previous code would look like this: <h4>code:</h4><pre class="code">&lt;div&gt;Hello&lt;/div&gt;&lt;div&gt;Goodbye&lt;/div&gt;</pre></div><div id="nfo-html-keep-quotes" class="nfo-content"> Prevents removing quotes from attribute values in document types that support this feature. <h4>before:</h4><pre class="code">
&lt;!doctype html&gt;
&lt;a href = &quot;http://example.com/&quot;&gt; Go to website. &lt;/a&gt;
</pre><h4>after: (option selected)</h4><pre class="code">
&lt;!doctype html&gt;
&lt;a href=&quot;http://example.com/&quot;&gt; Go to website. &lt;/a&gt;
</pre><h4>after: (option NOT selected)</h4><pre class="code">
&lt;!doctype html&gt;
&lt;a href=http://example.com/&gt; Go to website. &lt;/a&gt;
</pre> HTML compressor checks for a DOCTYPE declaration and automatically removes the quotes of attributes for HTML5 documents based on the current <a href="http://www.w3.org/TR/html5/syntax.html#syntax-attribute-name" target="_blank">html5 attributes syntax specification</a>. If you don't want this behavior, check this option. <h4>note:</h4><div class="note">More document types that support attribute values without quotes will be considered in the near future.</div></div><div id="nfo-html-strip-quotes" class="nfo-content"> Removes quotes regardless of DOCTYPE not being present, in base of HTML5 rules.<br /><br /> Check this option if you are compressing bits of html code that do not have a DOCTYPE declaration and you want to remove the quotes of attribute values. <h4>before:</h4><pre class="code">&lt;a href=&quot;site.com&quot; id=&quot;site-link&quot; onclick=&quot;return false;&quot; class=&quot;&quot;&gt; Go nowhere &lt;/a&gt;</pre><h4>after: (option selected)</h4><pre class="code">&lt;a href=site.com id=site-link onclick=&quot;return false&quot; class&gt; Go nowhere &lt;/a&gt;</pre><h4>after: (option not selected)</h4><pre class="code">&lt;a href=&quot;site.com&quot; id=&quot;site-link&quot; onclick=&quot;return false&quot; class=&quot;&quot;&gt; Go nowhere &lt;/a&gt;</pre> By default the compressor checks for a DOCTYPE declaration and automatically removes the quotes of attributes for HTML5 documents based on the current <a href="http://www.w3.org/TR/html5/syntax.html#syntax-attribute-name" target="_blank">html5 attributes syntax specification</a>. <h4>note:</h4><div class="note"> This option is meant for documents without doctype declaration. If the document has a doctype declaration that falls under xml specification, quotes won't get removed. </div></div><div id="nfo-html-trim" class="nfo-content"> Removes any leading and trailing new line characters from the compressed code in Safe Minimization Level for PHP, ASP and Smarty.<br /><br /> By default we make the best effort to preserve the original document layout after compression, and because of that, PHP, ASP and SMARTY code preserves a leading / trailing new line character if present in the Source code. This is desirable when the code is part of a template system and the design layout relies in those new line characters (however is a bad practice), in order to present the final output.<br /><br /> Consider the following basic php templates. <h4>header.php:</h4><pre class="code"><span class="darkBG">&nbsp;</span>&lt;span&gt;Name:&lt;/span&gt;<span class="darkBG">&nbsp;</span></pre><h4>body.php:</h4><pre class="code"><span class="darkBG">&nbsp;</span><span class="pinkBG">&nbsp;</span>
&lt;?php echo &quot;Mike&quot;; ?&gt;<span class="darkBG">&nbsp;</span></pre><h4>output:</h4><pre class="code">Name: Mike</pre> In this example the dark boxes (<span class="darkBG">&nbsp;&nbsp;</span>) represent the absolute start and end of the file, and the pink boxes (<span class="pinkBG">&nbsp;&nbsp;</span>) represent the new line character. Notice how the output has a white space between &quot;Name:&quot; and &quot;Mike&quot;. However if we compress &quot;body.php&quot; template with this option checked, or an html compression level higher than Safe Minimization, the following happens:<br /><h4>body.php:</h4><pre class="code"><span class="darkBG">&nbsp;</span>&lt;?php echo &quot;Mike&quot; ?&gt;<span class="darkBG">&nbsp;</span></pre><h4>output:</h4><pre class="code">Name:Mike</pre> Here the white space between &quot;Name:&quot; and &quot;Mike&quot; has vanished, generating a different output from the original uncompressed php template.<br /><br />I would say that 95% of the times you will find templates that do not reply on such character, so this option is here for that reason. </div><div id="nfo-html-cdata" class="nfo-content"> If the compressor engine cannot determine the document type and the inline JavaScript or CSS code contains <span class="icode">&lt;</span> or <span class="icode">&amp;</span> characters, we enclose the code between <span class="icode">/*&lt;![CDATA[*/</span> and <span class="icode">/*]]&gt;*/</span> tags.<br /><br /> Having this option checked tells the compressor engine that the document is not xml (and this includes xhtml), so CDATA enclosing is not necessary. <h4>before:</h4><pre class="code">&lt;head&gt;
&lt;script&gt;
if (2 &lt; 3) alert(&quot;Hi!&quot;);
&lt;/script&gt;
&lt;/head&gt;</pre><h4>after: Option not checked. (Default)</h4><pre class="code">&lt;head&gt;
&lt;script&gt;/*&lt;![CDATA[*/if(2&lt;3){alert(&quot;Hi!&quot;)};/*]]&gt;*/&lt;/script&gt;
&lt;/head&gt;</pre><h4>after: Option checked.</h4><pre class="code">&lt;head&gt;
&lt;script&gt;if(2&lt;3){alert(&quot;Hi!&quot;)};&lt;/script&gt;
&lt;/head&gt;</pre> The script treats the document as XML if a <a href="http://www.w3.org/QA/2002/04/valid-dtd-list.html" target="_blank">XHTML DOCTYPE</a> declaration, a <a href="http://www.w3.org/TR/xml/#sec-prolog-dtd" target="_blank">XML Declaration</a> or an <span class="icode">&lt;html&gt;</span> tag containing a <span class="icode">xmlns</span> attribute is found, <b>anywhere</b> in your document.<br /><br /> Now notice the same code with a xhtml document type declaration:<br /><h4>code:</h4><pre class="code">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;
   &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
&lt;head&gt;
&lt;script&gt;
if (2 &lt; 3) alert(&quot;Hi!&quot;);
&lt;/script&gt;
&lt;/head&gt;</pre><h4>after: Option checked.</h4><pre class="code">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
&lt;head&gt;
&lt;script&gt;/*&lt;![CDATA[*/if(2&lt;3){alert(&quot;Hi!&quot;)};/*]]&gt;*/&lt;/script&gt;
&lt;/head&gt;</pre><h4>note 1:</h4><div class="note"> CDATA sections are always added to CSS and JavaScript code containing S.S.C. (Server Side Code) if document type is XML.<br /><br />This is because the characters that can appear in such code are dynamically generated and could potentially contain non valid XML characters. </div><br /> For more info, read <a href="https://developer.mozilla.org/en/properly_using_css_and_javascript_in_xhtml_documents" target="_blank">Properly Using CSS and JavaScript in XHTML Documents</a>. </div><div id="nfo-js-events" class="nfo-content"><div>Minimizes the JavaScript code contained inside html tag attribute events.</div><h4>before:</h4><pre class="code">&lt;img onload=&quot;alert ( 'Image loaded!' );&quot; /&gt;</pre><h4>after:</h4><pre class="code">&lt;img onload=&quot;alert('Image loaded!')&quot; /&gt;</pre><div> Events list includes but is not limited to <a href="http://www.w3.org/TR/html4/interact/scripts.html#h-18.2.3" target="_blank">html intrinsic events</a>, <a href="http://www.quirksmode.org/dom/events/index.html" target="_blank">cross browser events</a> and <a href="http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html" target="_blank">iOS gesture events</a>. </div></div><div id="nfo-js-href" class="nfo-content"> Minimizes the JavaScript code contained inside HREF attribute of anchor elements with the javascript: protocol. <h4>before:</h4><pre class="code">&lt;a href="javascript:alert ( 'Link clicked' );"&gt;Click me&lt;/a&gt;</pre><h4>after:</h4><pre class="code">&lt;a href="javascript:alert('Link clicked')"&gt;Click me&lt;/a&gt;</pre> For more info read <a href="https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/void#JavaScript_URIs" target="_blank">JavaScript URIs</a> at MDC. </div><div id="nfo-style" class="nfo-content"> Minimizes the CSS code contained inside STYLE attribute of html elements. <h4>before:</h4><pre class="code">&lt;p style="color:  #ff0000; padding:  19px;"&gt; ... &lt;/p&gt;</pre><h4>after:</h4><pre class="code">&lt;p style="color:#f00;padding:19px"&gt; ... &lt;/p&gt;</pre></div><div id="nfo-html-comments" class="nfo-content"> Preserves anything between &lt;!-- and --&gt;. By default the compressor removes all x/html comments with the exception of <a href="http://msdn.microsoft.com/en-us/library/ms537512%28v=vs.85%29.aspx" target="_blank">conditional comments</a>, which are preserved. <h4>before:</h4><pre class="code">
&lt;!-- Standard comment --&gt;
&lt;meta name="version" value="2.0" /&gt;

&lt;!--[if lt IE 8]&gt;
&lt;link rel="stylesheet" type="text/css" href="ie.css" /&gt;
&lt;![endif]--&gt;
</pre><h4>after: ( turned on )</h4><pre class="code">
&lt;!-- Standard comment --&gt;
&lt;meta name="version" value="2.0" /&gt;

&lt;!--[if lt IE 8]&gt;
&lt;link rel="stylesheet" type="text/css" href="ie.css" /&gt;
&lt;![endif]--&gt;
</pre><h4>after: ( turned off )</h4><pre class="code">
&lt;meta name="version" value="2.0" /&gt;

&lt;!--[if lt IE 8]&gt;
&lt;link rel="stylesheet" type="text/css" href="ie.css" /&gt;
&lt;![endif]--&gt;
</pre></div><div id="nfo-js" class="nfo-content"> Minimizes the <a href="http://en.wikipedia.org/wiki/JavaScript" target="_blank">JavaScript</a> code contained between <span class="icode">&lt;script&gt;</span> and <span class="icode">&lt;/script&gt;</span> tags.<br /><br /> Only scripts which are JavaScript according to <a href="http://www.rfc-editor.org/rfc/rfc4329.txt" target="_blank">RFC 4329</a> and those that don't have a <span class="rcode">type</span> or <span class="rcode">language</span> attribute set, are sent to the JavaScript compressor engine. If the document contains a <a href="http://www.w3.org/TR/html401/interact/scripts.html#h-18.2.2" target="_blank">default scripting language</a> meta tag, it is considered. This way we avoid sending to the engine other languages such as vbscript, tcl or other implementations such as x-jquery-tmpl. <h4>before:</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;

// Basic welcome script...

function welcome( username ) {

   alert ( &quot;Welcome to our site &quot; + username );

}

welcome ( &quot;Mr. Smith&quot; );

&lt;/script&gt;
</pre><h4>after:</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;function welcome(a){alert(&quot;Welcome to our site &quot;+a)}welcome(&quot;Mr. Smith&quot;);&lt;/script&gt;
</pre><h4 class="section">Comment preservation</h4> By default all comments are removed from the JavaScript code. If we want to preserve some comments, such as copyright info, credits, etc, we can use the important comment syntax for YUI Compressor and JSMin engines, and the <span class="rcode">@license</span> or <span class="rcode">@preserve</span> JSDoc tags with Closure Compiler engine. See the following illustrative examples. <h4>before:</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;

/*! Some important info here... */

alert (&quot;welcome!&quot;);

&lt;/script&gt;
</pre><h4>after: (YUI Compressor / JSMin)</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;/*! Some important info here... */
alert(&quot;welcome!&quot;);&lt;/script&gt;
</pre><h4>after: (Closure Compiler)</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;alert(&quot;welcome!&quot;);&lt;/script&gt;
</pre><h4>note 1:</h4><div class="note"> The syntax for important comments is: <span class="icode">/*! comment here... */</span>. The contents of those comments are preserved, including new line characters. This syntax is valid for CSS, PHP and JavaScript (With the exception of Closure Compiler). </div><br /> As you can see, Closure Compiler removed the comment in the previous example, as it does not understand the important comment syntax. <br /> Now let's see the JSDoc tags that Closure Compiler uses to preserve important comments. <h4>before:</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;

/**
 * @preserve Copyright message here.
 * The text here can span into several lines, and the asterisks
 * will be removed after the compression.
 */

alert (&quot;welcome!&quot;);

&lt;/script&gt;
</pre><h4>after: (YUI Compressor / JSMin)</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;alert(&quot;welcome!&quot;);&lt;/script&gt;
</pre><h4>after: (Closure Compiler)</h4><pre class="code">
&lt;script type=&quot;text/JavaScript&quot;&gt;/*
 Copyright message here.
 The text here can span into several lines, and the asterisks
 will be removed after the compression.
*/
alert(&quot;welcome!&quot;);&lt;/script&gt;
</pre><h4>note 2:</h4><div class="note"> The JSDoc tags to preserve comments are <span class="rcode">@license</span> and <span class="rcode">@preserve</span>. There is no difference between them, and whenever you can use them multiple times inside your source code, Closure Compiler will put them on top of the resulting javascript code as a single comment. <pre>
/**
 * @preserve Text to preserve here.
 * This text can span several lines...
 */
</pre></div><br /> For more information about all the JSDoc tags that Closure Compiler supports, check <a href="http://code.google.com/closure/compiler/docs/js-for-compiler.html" target="_blank">Annotating JavaScript for the Closure Compiler</a>.<br /><h4>tip 1: PHP, ASP, Smarty!</h4><div class="tip"> If your JavaScript code contains Server Side Code, such as PHP, ASP or Smarty, then select the appropriate <span class="rcode">Code Type</span>. For x/html documents with inline JavaScript (code contained between <span class="icode">&lt;script&gt;</span> ... <span class="icode">&lt;/script&gt;</span>), choose <span class="rcode">x/html+PHP</span>, <span class="rcode">x/html+ASP</span> or <span class="rcode">x/html+Smarty</span>, otherwise the JavaScript compressor engine will failt to compress your code. </div><h4>tip 2: External JavaScript files</h4><div class="tip"> If you want to compress a standalone .js file, then choose <span class="rcode">JavaScript</span> from the <span class="rcode">Code Type</span> dropdown, and if your standalone .js file contains Server Side Code, choose <span class="rcode">JavaScript+PHP</span>, <span class="rcode">JavaScript+ASP</span> or <span class="rcode">JavaScript+Smarty</span> accordingly. </div></div><div id="nfo-js-ph" class="nfo-content"> Minimizes the <a href="http://en.wikipedia.org/wiki/JavaScript" target="_blank">JavaScript</a> code contained between <span class="icode">&lt;script&gt;</span> and <span class="icode">&lt;/script&gt;</span> tags mixed with Server Side Code.<br /><br /> This is a unique feature of our HTML Compressor, that allows you to compress JavaScript code that otherwise would not be possible due to the fact that is contains Server Side Code (<span class="rcode">S.S.C.</span> for short), such as PHP, ASP or Smarty, and that would produce syntax errors as the JavaScript compressor engine does not understand any other language than JavaScript.<br /><br /> Whenever the our engine will digest most of the JavaScript code mixed with S.S.C., there are some limitations and best practices to get things going smooth. By default we use YUI Compressor with a failback to JSMin. </div><div id="nfo-css" class="nfo-content"> Minimizes the <a href="http://www.w3.org/Style/CSS/" target="_blank">CSS</a> code contained between <span class="icode">&lt;style&gt;</span> and <span class="icode">&lt;/style&gt;</span> tags. <h4>before:</h4><pre class="code">
&lt;style type="text/css"&gt;

/*! Important comment, such as copyright notice, etc */

p {
   padding: 10px 0px;
   background-color: #ccaacc; /* standard comment */
}

&lt;/style&gt;
</pre><h4>after:</h4><pre class="code">
&lt;style type="text/css"&gt;/*&lt;![CDATA[*//*! Important comment, such as copyright notice, etc */p{padding:10px 0;background-color:#cac}/*]]&gt;*/&lt;/style&gt;
</pre> Notice that comments that are immediately followed by an exclamation sign are considered important, so they are not removed from the code. Standard comments are removed, however most <a href="http://developer.yahoo.com/yui/compressor/css.html#hacks" target="_blank">css hacks</a> involving comments are supported. <h4>note 1:</h4><div class="note"> The syntax for important comments is: <span class="icode">/*! comment here... */</span>. That's the same for CSS, PHP, Smarty and JavaScript (With the exception of Closure Compiler). </div><h4>tip 1:</h4><div class="tip"> If you want to compress standalone CSS code (code not enclosed in &lt;style&gt; ... &lt;/style&gt; tags), such as the contents of a style.css file, select &quot;CSS&quot; from the Code type drop-down. </div><br />Let's have a look at some practical examples to illustrate how the final results change when we choose different &quot;<span class="rcode">Code Type</span>&quot; options, with the following basic CSS code: <h4>before:</h4><pre class="code">span {
  color: #FF0000;
  padding: 0px 0px 0px 0px;
  margin: 0px;
}</pre><h4>after: (Code type: x/html)</h4><pre class="code">span {
color: #FF0000;
padding: 0px 0px 0px 0px;
margin: 0px;
}</pre><h4>after: (Code type: CSS)</h4><pre class="code">span{color:#f00;padding:0;margin:0}</pre> Now let's put our CSS code between <span class="icode">&lt;style&gt;</span> and <span class="icode">&lt;/style&gt;</span> tags. <h4>Before: (CSS code enclosed in &lt;style&gt;)</h4><pre class="code">&lt;style&gt;
span {
  color: #FF0000;
  padding: 0px 0px 0px 0px;
  margin: 0px;
}
&lt;/style&gt;</pre><h4>after: (Code type: x/html)</h4><pre class="code">&lt;style&gt;span{color:#f00;padding:0;margin:0}&lt;/style&gt;</pre> As you can see, the CSS code gets properly minimized when Code Type is set to x/html (or x/html + XXX) and it is enclosed within STYLE tags. <h4>tip 2: PHP, ASP, Smarty!</h4><div class="tip"> If your CSS code contains Server Side Code, such as PHP, ASP or Smarty, you need to enclose the code with <span class="icode">&lt;style&gt;</span> ... <span class="icode">&lt;/style&gt;</span> tags and select the appropriate document type, such as &quot;<span class="rcode">x/html+PHP</span>&quot; if your CSS code is mixed with PHP, or &quot;<span class="rcode">x/html+Smarty</span>&quot; if your code is mixed with smarty template tags. <br /><h4>UPDATE!</h4> Now you can compress standalone CSS code containing Server Side Code by selecting the appropriate <span class="rcode">Code Type</span>, such as <span class="rcode">CSS+PHP</span>, <span class="rcode">CSS+ASP</span> or <span class="rcode">CSS+Smarty</span>. </div><br />Below are some practical examples to illustrate what happens when we have CSS code mixed with PHP, and the different results that we obtain based on the Code Type that we choose. <h4>before:</h4><pre class="code">span {
  color: #FF0000;
  padding: 0px 0px 0px 0px;
  margin: 0px;

&lt;?php

  if ($something == true)
  {
     echo &quot;background-color: red;&quot;;
  }

?&gt;

}</pre><h4>after: (Code type: x/html)</h4><pre class="code">span {
color: #FF0000;
padding: 0px 0px 0px 0px;
margin: 0px;
&lt;?php if ($something==true) { echo &quot;background-color: red;&quot;; } ?&gt;
}</pre><h4>after: (Code type: CSS)</h4><pre class="code">span{color:#f00;padding:0;margin:0;&lt;?php if($something == true){echo &quot;background-color: red;&quot;}?&gt;}</pre> Now let's put our code within STYLE tags... <h4>Before: (enclosed in STYLE)</h4><pre class="code">&lt;style&gt;
span {
  color: #FF0000;
  padding: 0px 0px 0px 0px;
  margin: 0px;

&lt;?php

  if ($something == true)
  {
     echo &quot;background-color: red;&quot;;
  }

?&gt;

}
&lt;/style&gt;</pre><h4>after: (Code type: x/html + PHP)</h4><pre class="code">&lt;style&gt;/*&lt;![CDATA[*/span{color:#f00;padding:0;margin:0;&lt;?php

  if ($something == true)
  {
     echo &quot;background-color: red;&quot;;
  }

?&gt;
}/*]]&gt;*/&lt;/style&gt;</pre> As we can see here, choosing the right Code Type ensures that our PHP, ASP or Smarty code does not get altered, while we are still able to minimize the surrounding CSS code.<br /><br /></div><div id="nfo-css-lb" class="nfo-content"> Adds a newline character after the specified column number. <h4>before:</h4><pre class="code">
p {
   color: #ff0000;
   padding: 10px 0px;
}

span {
   font-weight: bold;
}

#content {
   float: left;
   width: 600px;
}
</pre> By default (no value specified), CSS compression creates a single line output. <h4>after: (default)</h4><pre class="code">p{color:#f00;padding:10px 0}span{font-weight:bold}#content{float:left;width:600px}</pre> Use 0 (zero) as the column number to add a new line character after every rule declaration block. <h4>after: (0)</h4><pre class="code">
p{color:#f00;padding:10px 0}
span{font-weight:bold}
#content{float:left;width:600px}
</pre> Specifying a higher value (1 - 9999), the compressor will add a new line character at the end of a rule declaration block immediately after the given column number. <h4>after: (30)</h4><pre class="code">
p{color:#f00;padding:10px 0}span{font-weight:bold}
#content{float:left;width:600px}
</pre><h4>tip:</h4><div class="tip"> A good value to specify for standalone css files (style.css files), is 500. </div></div><div id="nfo-ssi" class="nfo-content"> Keeps <a href="http://httpd.apache.org/docs/current/howto/ssi.html" target="_blank">SSI directives</a> found in the code. <h4>before:</h4><pre class="code">
&lt;!-- Show this document's last modification time --&gt;

&lt;p&gt; Last modified on: &lt;!--#set var="modified" value="$LAST_MODIFIED" --&gt; &lt;/p&gt;
</pre><h4>after:</h4><pre class="code">&lt;p&gt; Last modified on: &lt;!--#set var="modified" value="$LAST_MODIFIED" --&gt; &lt;/p&gt;</pre></div><div id="nfo-keep-char" class="nfo-content"> Use this to preserve comments which opening tag is followed immediately by the specified character. This allows you to keep important comments that you don't want to get removed on compression. <h4>before:</h4><pre class="code">
&lt;!--@ Copyright SiteName.com --&gt;

&lt;h3&gt; Latest News &lt;/h3&gt;

&lt;!-- End of header --&gt;
</pre> By default (no value specified), all comments are removed. <h4>after:</h4><pre class="code">&lt;h3&gt; Latest News &lt;/h3&gt;</pre> If we use "@" as the key character we keep the comments that we want. <h4>after: (@)</h4><pre class="code">&lt;!--@ Copyright SiteName.com --&gt;&lt;h3&gt; Latest News &lt;/h3&gt;</pre><h4>tip:</h4><div class="tip"> You can use any character that you like, which is useful if you are trying to compress a document with a custom template system based in SGML comments. </div></div><div id="nfo-ph-yui-nomunge" class="nfo-content"> When this option is selected, local symbols are not minimized.<br /><br /> Check this option if your server side code output variable names in the local scope. Ideally you would make your server side code to output just values, instead of variable names, so you can take advantadge of local scope variable renaming (munging), and save some more bytes. <h4>before:</h4><pre class="code">
function greet(name) {

  var site = '';

  &lt;?php

     // For this example, let's assume that
     // we got an empty $siteName...
     $siteName = getSiteFromSomewhere();

     if ( empty($siteName) )
     {
        $siteName = 'default-website.com';
     }

     echo 'site=&quot;'.$siteName.'&quot;;';

  ?&gt;

  alert ( name + &quot;, welcome to &quot; + site );

}
</pre><h4>after:</h4><pre class="code">
function greet(b){var a=&quot;&quot;;&lt;?php

     // For this example, let's assume that
     // we got an empty $siteName...
     $siteName = getSiteFromSomewhere();

     if ( empty($siteName) )
     {
        $siteName = 'default-website.com';
     }

     echo 'site=&quot;'.$siteName.'&quot;;';

  ?&gt;alert(b+&quot;, welcome to &quot;+a)};
</pre><h4>after client-side: </h4><pre class="code">function greet(b){var a=&quot;&quot;;site=&quot;default-website.com&quot;;alert(b+&quot;, welcome to &quot;+a)};</pre> Here we can see how the JavaScript local variable <span class="rcode">site</span> has been renamed to <span class="rcode">a</span>, so when this code runs at the server, it does output <span class="rcode">site=&quot;default-website.com&quot;;</span>, but this value is never assigned, as the variable <span class="rcode">site</span> no longer exists in the local scope, and the renamed variable <span class="rcode">a</span> is used instead.<br /><br /><h4>after: (nomunge selected)</h4><pre class="code">
function greet(name){var site=&quot;&quot;;&lt;?php

     // For this example, let's assume that
     // we got an empty $siteName...
     $siteName = getSiteFromSomewhere();

     if ( empty($siteName) )
     {
        $siteName = 'default-website.com';
     }

     echo 'site=&quot;'.$siteName.'&quot;;';

  ?&gt;alert(name+&quot;, welcome to &quot;+site)};
</pre><h4>after client-side: (nomunge selected)</h4><pre class="code">function greet(name){var site=&quot;&quot;;site=&quot;default-website.com&quot;;alert(name+&quot;, welcome to &quot;+site)};</pre> With <span class="rcode">nomunge</span> selected, variables in the local scope do not get renamed, so the code in the previous example continues to work as expected. </div><div id="nfo-ph-yui-preserve" class="nfo-content"> If this option is selected, YUI Compressor will not remove the semicolons preceding a right curly brace. </div><div id="nfo-ph-yui-noopt" class="nfo-content"> When this option is selected, YUI Compressor won't perform the following micro optimizations:<br /><ul><li>Literal strings concatenation</li><li>Literal object member declarations</li><li>Object member access optimization</li></ul></div><div id="nfo-ph-yui-lb" class="nfo-content"> Adds a newline character after a semicolon past the given column number. Valid values range from 1 to 9999. </div><div id="nfo-ph-yui-verbose" class="nfo-content"> Displays notices and warnings about your code. Error messages are always displayed regardless of this option. <h4>note:</h4><div class="note"> Use verbose mode only for debugging purposes. For normal compression operations it is better not to use verbose mode. </div></div><div id="nfo-js-ph-fallback" class="nfo-content"> If YUI Compressor fails to minimize your code, HTMLcompressor will use <a href="http://crockford.com/javascript/jsmin" target="_blank">JSMin</a> and retry minimization.<br /><br /> JSMin engine does a more basic and safe minimization to JavaScript code than YUI Compressor does, without renaming local symbols or any other kind of code optimizations, and has certain tolerance to malformed code. </div><div id="nfo-yui-nomunge" class="nfo-content"> When this option is selected, local symbols are not minimized. <h4>before:</h4><pre class="code">function greet(name)
{
   alert(name);
}

greet(&quot;Mike&quot;);</pre><h4>after:</h4><pre class="code">function greet(a){alert(a)}greet(&quot;Mike&quot;);</pre><h4>after: (nomunge selected)</h4><pre class="code">function greet(name){alert(name)}greet(&quot;Mike&quot;);</pre> By default <a href="http://developer.yahoo.com/yui/compressor/" target="_blank">YUI Compressor</a> minimizes local symbols (renames them to the shortest possible names), such as local variables and local function names as long as <span class="icode">eval()</span> and <span class="icode">with()</span> statements are not present in that scope to ensure that your code won't break. Global symbols are never minimized.<br /><br /> Let's see an example of the following code with an <span class="icode">eval()</span> statement. <h4>before:</h4><pre class="code">var addtax = &quot;amount = amount * 1.2&quot;;

function total(amount)
{
   eval(addtax);
   alert(amount);
}

total(50);</pre> When run, this code outputs: 60 <h4>after:</h4><pre class="code">var addtax=&quot;amount = amount * 1.2&quot;;function total(amount){eval(addtax);alert(amount)}total(50);</pre> Notice that YUI compressor has not minimized the symbols in the function <span class="icode">total()</span>, even when <span class="rcode">nomunge</span> was not selected. The execution of this script still outputs: 60 <h4>after: (Closure Compiler - Simple optimizations)</h4><pre class="code">var addtax=&quot;amount = amount * 1.2&quot;;function total(a){eval(addtax);alert(a)}total(50);</pre> Notice the difference when using <a href="http://code.google.com/closure/compiler/" target="_blank">Closure Compiler</a> as the JavaScript minimization engine. With simple optimizations, Closure compiler renames symbols in the local scope regardless of any <span class="icode">eval()</span> or <span class="icode">with()</span> statements. The execution of this script produces the error: &quot;amount is not defined&quot;.<br /><br /> For extended information on dealing with those statements, please check <a href="http://www.yuiblog.com/blog/2008/02/11/helping-the-yui-compressor/" target="_blank">Helping the YUI Compressor</a>. <h4>note:</h4><div class="note"> To save you headaches HTMLcompressor checks the JavaScript code sent to the compiler and outputs a warning message when it finds <span class="icode">eval()</span> or <span class="icode">with()</span> statements in it, and your selected JavaScript minimization engine is Closure Compiler with Simple optimizations. </div></div><div id="nfo-yui-preserve" class="nfo-content"> If this option is selected, YUI Compressor will not remove the semicolons preceding a right curly brace. <h4>before:</h4><pre class="code">function greet(name)
{
   alert (name);
}

greet(&quot;Mike&quot;);</pre><h4>after:</h4><pre class="code">function greet(a){alert(a)}greet(&quot;Mike&quot;);</pre><h4>after: (option selected)</h4><pre class="code">function greet(a){alert(a);}greet(&quot;Mike&quot;);</pre></div><div id="nfo-yui-noopt" class="nfo-content"> When this option is selected, YUI Compressor won't perform the following micro optimizations:<br /><ul><li>Literal strings concatenation</li><li>Literal object member declarations</li><li>Object member access optimization</li></ul><h4>before:</h4><pre class="code">var user = { &quot;name&quot; : &quot;Mike&quot; };

alert( &quot;Wel&quot; + &quot;come &quot; + user[&quot;name&quot;] );</pre><h4>after:</h4><pre class="code">var user={name:&quot;Mike&quot;};alert(&quot;Welcome &quot;+user.name);</pre><h4>after: (option selected)</h4><pre class="code">var user={&quot;name&quot;:&quot;Mike&quot;};alert(&quot;Wel&quot;+&quot;come &quot;+user[&quot;name&quot;]);</pre></div><div id="nfo-yui-verbose" class="nfo-content"> Displays notices and warnings about your code that can help to improve it, such as already declared symbols, unsuported hints, declared but never used symbols in the local scope, etc.<br /><br /> Note that error messages are always displayed regardless of this option. <h4>before:</h4><pre class="code">function greet(name)
{
  var color = &quot;blue&quot;;
  alert(name);
}

greet(&quot;Mike&quot;);</pre><h4>after:</h4><pre class="code">function greet(b){var a=&quot;blue&quot;;alert(b)}greet(&quot;Mike&quot;);</pre><h4>Messages:</h4><pre class="code">[WARNING] The symbol color is declared but is apparently never used.
This code can probably be written in a more compact way.
functiongreet(name){var  ---&gt; color &lt;--- =&quot;blue&quot;;alert(name);}greet</pre></div><div id="nfo-yui-lb" class="nfo-content"> Adds a newline character after a semicolon past the given column number. <h4>before:</h4><pre class="code">function greet(name)
{
   name = &quot;Welcome &quot; + name;
   alert(name);
}

greet(&quot;Mike&quot;);
</pre> By default (no value specified), YUI Compressor creates a single line output. <h4>after: (default)</h4><pre class="code">function greet(a){a=&quot;Welcome &quot;+a;alert(a)}greet(&quot;Mike&quot;);</pre> Use 0 (zero) as the column number to add a new line character after each semicolon. <h4>after: (0)</h4><pre class="code">function greet(a){a=&quot;Welcome &quot;+a;
alert(a)
}greet(&quot;Mike&quot;);</pre> Specifying a higher value (1 - 9999), YUI Compressor will add a new line character immediately after a semicolon past the given column number. <h4>after: (30)</h4><pre class="code">function greet(a){a=&quot;Welcome &quot;+a;
alert(a)}greet(&quot;Mike&quot;);</pre></div><div id="nfo-closure-level-spaces" class="nfo-content"> Removes comments and unneeded whitespace characters from the JavaScript code. <h4>before:</h4><pre class="code">
// Basic example...

function greet( name ) {

   alert (&quot;Welcome to&quot; + &quot; our site &quot; + name);
}

greet( &quot;visitor&quot; );
</pre><h4>after:</h4><pre class="code">
function greet(name){alert("Welcome to"+" our site "+name)}greet("visitor");
</pre></div><div id="nfo-closure-level-simple" class="nfo-content"> Removes comments and unneeded whitespace characters from the JavaScript code. Also renames local symbols and function parameters to shorter versions (munging), and performs various optimizations within expressions and functions.<br /><h4>before:</h4><pre class="code">
// Basic example...

function greet( name ) {

   alert (&quot;Welcome to&quot; + &quot; our site &quot; + name);
}

greet( &quot;visitor&quot; );
</pre><h4>after:</h4><pre class="code">
function greet(a){alert(&quot;Welcome to our site &quot;+a)}greet(&quot;visitor&quot;);
</pre><br /> Note that if your javascript code tries to access local variables by their variable name using <span class="icode">eval()</span> or <span class="icode">with()</span> statements, your code will break. As opposed to <a href="http://developer.yahoo.com/yui/compressor/" target="_blank">YUI Compressor</a>, which prevents local symbols from being renamed when it detects the presence of those statements, <a href="http://code.google.com/closure/compiler/" target="_blank">Closure Compiler</a> does rename them regardless of the presence of these statements. <h4>before: (code with eval)</h4><pre class="code">
function greet( name ) {

   eval (&quot;name='Mr. '+name;&quot;);

   alert (&quot;Welcome &quot; + name);
}

greet( &quot;Smith&quot; );
</pre><h4>after: (code with eval)</h4><pre class="code">
function greet(a){eval(&quot;name='Mr. '+name;&quot;);alert(&quot;Welcome &quot;+a)}greet(&quot;Smith&quot;);
</pre><h4>tip:</h4><div class="tip"> You don't need to worry and check if your javascript code contains <span class="icode">eval()</span> or <span class="icode">with()</span> statements every time, as HTML Compressor does this automatically and will show you a warning, suggesting to change to <span class="rcode">White spaces removal</span> level, or switch to YUI Compressor engine. </div></div><div id="nfo-closure-level-advanced" class="nfo-content"> Performs all the optimizations used in <span class="rcode">Simple optimizations</span> level, but also goes way further with extreme compression techniques that transform your code in the local and global scope, renaming not only variables, but also function names and object properties. It also removes unused code and replaces some function calls with the body of the function (inlining) where possible.<br /><br /> This level provides the highest possible compression of all levels, but it also has a lot of requirements in order to make your code work, so it is not recommended to use with HTML Compressor unless you know very well what you are doing. For a troubleless compression of your documents, choose the <span class="rcode">Simple optimizations</span> level, or use YUI Compressor. <h4>before:</h4><pre class="code">
// Basic example...

function greet( name ) {

   alert (&quot;Welcome to&quot; + &quot; our site &quot; + name);
}

greet( &quot;visitor&quot; );
</pre><h4>after:</h4><pre class="code">
alert(&quot;Welcome to our site visitor&quot;);
</pre><br /> The use of this level when compressing javascript code contained inside x/html documents is restricted to the presence of a single <span class="icode">&lt;script&gt;</span> ... <span class="icode">&lt;/script&gt;</span> with code to process (HTML Compressor will throw a warning and downgrade the compression level to <span class="rcode">Simple Optimizations</span> in such cases).<br /><br /> Any references to function names made from your x/html code inside intrinsic events (such as <span class="rcode">onclick</span>, <span class="rcode">onload</span>, etc) will break, unless you <a href="http://code.google.com/closure/compiler/docs/api-tutorial3.html#removal" target="_blank">export the symbols you want to keep</a>. <h4>note:</h4><div class="note"> In Advanced Optimizations mode, Google Analytics and JQuery externs are loaded by default. The option to use custom externs will be added in the future. </div></div><div id="nfo-closure-single-line" class="nfo-content"> By default Closure Compiler adds a line break near column number 500. Check this option if you want the compressed javascript to be a single line output. </div><div id="nfo-closure-formatting" class="nfo-content"> Outputs code in a properly formatted way, which makes it more readable. This is useful to study how the Closure Compiler works, and how does it modify your code. Use it with any of the compression levels. <h4>before:</h4><pre class="code">
// Basic example...

function greet( name ) {

   alert (&quot;Welcome to&quot; + &quot; our site &quot; + name);
}

greet( &quot;visitor&quot; );
</pre><h4>after: (Simple optimizations + Formatting)</h4><pre class="code">
function greet(a) {
  alert(&quot;Welcome to our site &quot; + a)
}
greet(&quot;visitor&quot;);
</pre></div><div id="nfo-closure-verbose" class="nfo-content"> Displays notices and warnings about your code that can help to improve it. <h4>note:</h4><div class="note"> Verbose output with Closure Compiler sometimes produces an error output that would not happen if verbose mode was not selected. So it is recommended to check this option only for debugging purposes. </div></div><div id="nfo-js-fallback" class="nfo-content"> If the current selected JavaScript minimization engine fails to minimize your code, HTMLcompressor will use <a href="http://crockford.com/javascript/jsmin" target="_blank">JSMin</a> and retry minimization.<br /><br /> JSMin engine does a more basic and safe minimization to JavaScript code than YUI Compressor or Closure Compiler do. It does a safe whitespace removal without renaming local symbols or any other kind of code optimizations, and has certain tolerance to malformed code. </div><div id="nfo-verbose" class="nfo-content"> Disable this option if you don't want the compressor to report empty code blocks and general informative messages. </div><div id="nfo-detect_ct" class="nfo-content"> When enabled, the compressor detects the <span class="rcode">Code Type</span> you are trying to compress and will display a warning message if the detected Code Type and your selected Code Type do not match.<br /><br /> Please note that <span class="rcode">Code Type</span> autodetection is not 100% accurate, however the detection ratio success is quite high as per the tests that we have performed. It is useful as a double check, and to help users who are not developers and may not be aware of the type of code they are trying to compress. </div></div></body></html>

