http://arstechnica.com/civis/viewtopic.php?p=24052051
while (true) { - Ars Technica OpenForum
Welcome to the Ars OpenForum.
Register
Login
Posting Guidelines | Contact Moderators
Ars Technica > Forums > Operating Systems & Software > Programmer's Symposium
Jump to:
Select a forum
------------------
Hardware & Tweaking
Audio/Visual Club
Case and Cooling Fetish
CPU & Motherboard Technologia
Mobile Computing Outpost
Networking Matrix
Other Hardware
Agora Classifieds
Operating Systems & Software
Battlefront
Microsoft OS & Software Colloquium
Linux Kung Fu
Windows Technical Mojo
Distributed Computing Arcana
Macintoshian Achaia
Programmer's Symposium
The Server Room
Ars Lykaion
Gaming, Extra Strength Caplets
The Lounge
The Soap Box
The Boardroom
The Observatory
Ars Help & Feedback
Ars Subscription Member Areas
Image Galleries
while (true) {
6385 posts â€¢ Previous 1 ... 697071 ... 160 Next
wallinbl
Ars Praefectus
Registered: Dec 6, 2001Posts: 4973
Posted: Thu Mar 07, 2013 9:27 pm
Pont wrote:LordHunter317 wrote:That said, most of the problems I see with logs in particular fall into two categories:The software used to move them from place to place is not particularly robust. Frequently, this is a failing of the tools available.The software parsing them isn't robust to unexpected or unusual log input (e.g., extremely long lines or output that's never been seen before).Combined withthe developers were given no firm requirements on what to log in the first place, so they logged what they thought would be useful, which may or may not be sufficientnobody actually uses the logs on a regular basis, so all of the above problems went unnoticed until a crisis hitI log for two reasons - one to help myself figure out what's wrong, and two, to prove that users are full of shit when they say they didn't do something and blame the system for waking up and doing it all on its own.
LordHunter317
Ars Legatus Legionis
Tribus: MD (Waiting)
Registered: Apr 17, 2001Posts: 22394
Posted: Fri Mar 08, 2013 6:39 am
ShuggyCoUk wrote:Quote:Likewise, data corruption and loss is a real thing that happensMD5 hashes for *everything*. At least you know it has happened...That's great if the data is corrupted once you store it. It doesn't help you if the sensor goes out to lunch, or if there are other problems prior to/at acquisition.
ronelson
Ars Legatus Legionis
Tribus: Richmond, VA
Registered: Mar 21, 1999Posts: 21393
Posted: Fri Mar 08, 2013 7:22 am
Quote:nobody actually uses the logs on a regular basis, so all of the above problems went unnoticed until a crisis hitDing ding ding, we have a winner! Bonus points when the log format changed two years ago and no-one noticed until the system died - something I see a lot when parsing firewall logs. I blame you, <every firewall vendor ever>!
andyfatbastard
"lol donkaments"
Ars Legatus Legionis
et Subscriptor
Tribus: 19BFxo1jzGMrTsKFTezsjDiEksLNQoPVXg
Registered: Oct 17, 2000Posts: 19944
Posted: Fri Mar 08, 2013 7:24 am
Lord Nitpick is in full flow ShuggyCoUk
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Londinium
Registered: Nov 14, 2005Posts: 6952
Posted: Fri Mar 08, 2013 8:33 am
LordHunter317 wrote:ShuggyCoUk wrote:Quote:Likewise, data corruption and loss is a real thing that happensMD5 hashes for *everything*. At least you know it has happened...That's great if the data is corrupted once you store it. It doesn't help you if the sensor goes out to lunch, or if there are other problems prior to/at acquisition.That's what the internal consistency checking does. Validate it forms a self consistent result for the entire day. This validation involves running the system that will eventually consume it against it enabling several very aggressive sanity checks over and above what it would normally do. This isn't just counting things. Like I said, we catch bugs in the *exchange* doing this.
LordHunter317
Ars Legatus Legionis
Tribus: MD (Waiting)
Registered: Apr 17, 2001Posts: 22394
Posted: Fri Mar 08, 2013 8:48 am
Clearly I should have explained myself better initially. Data corruption is a real physical thing, that will happen with your raw data no matter what. Physics, unfortunately, demands it.Yes, in some processes, you can do checking after the fact to detect and/or correct some errors, possibly all errors. However, this is not always the case. Despite all of that, it doesn't change that you should treat the raw data as the most important thing, even though it may be (will be) imperfect and incorret.
Inscitia
Ars Tribunus Militum
et Subscriptor
Tribus: New York
Registered: Sep 19, 2006Posts: 1644
Posted: Fri Mar 08, 2013 10:09 am
LordHunter317 wrote:Despite all of that, it doesn't change that you should treat the raw data as the most important thing, even though it may be (will be) imperfect and incorret.There's always measurement error, but it's still closer to reality than anything else you have.That said, there may be points of biased data corruption elsewhere in your data processing chain, and consistency checks can be quite useful for that.
koala
Ars Praefectus
Tribus: Barcelona, Spain
Registered: Dec 31, 2001Posts: 4014
Posted: Fri Mar 08, 2013 11:05 am
Code:def month_range(start_year, start_month, num_months, step=1): return [datetime.date(start_year + (start_month + i) / 12, 1 + (start_month + i) % 12, 1) for i in range(0, num_months, step)]Good or bad?
koala
Ars Praefectus
Tribus: Barcelona, Spain
Registered: Dec 31, 2001Posts: 4014
Posted: Fri Mar 08, 2013 11:17 am
Bad, of course, f'n Python...Code:def month_range(start_year, start_month, num_months, step=1): return [datetime.date(start_year + (start_month + i - 1) / 12, 1 + (start_month + i -1) % 12, 1) for i in range(0, num_months, step)]
Jonathon
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Tennessee, USA
Registered: Jan 27, 2006Posts: 7880
Posted: Fri Mar 08, 2013 11:49 am
December's highly overrated; let's just skip it. koala
Ars Praefectus
Tribus: Barcelona, Spain
Registered: Dec 31, 2001Posts: 4014
Posted: Fri Mar 08, 2013 12:05 pm
Is it me or is Python quirky? To me, it's much better if months are 0-based; modular arithmetic is easier and jives better with 0-based arrays... Why would they be 1-based? I know display of months is 1-based, but it's better to handle that in the display layer instead of having that permeate the internals and make them more complex. I know Java months are 0-based... so are everyone else's, right?
Alamout
Ars Legatus Legionis
Tribus: s/(?<=Bay) State/ Area/
Registered: Aug 12, 2000Posts: 20878
Posted: Fri Mar 08, 2013 12:27 pm
I thought the point of the datetime module was so you didn't need to do stuff like modular arithmetic on months. I can see the argument for 0 based (and presumably the same with days?), but there's a clear trade-off between that and having an intuitive interface.It is a bit weird that timedelta doesn't support dates (or that there's no datadelta equivalent), so I guess it can't do what you want. I did just find dateutil which allows such things but that's a 3rd-party dependency.
Richard Berg
"Eruditio et Basketballio"
Ars Legatus Legionis
et Subscriptor
Tribus: Harlem
Registered: Aug 6, 1999Posts: 36561
Posted: Fri Mar 08, 2013 1:06 pm
You shouldn't have to care; it should be handled by the type system. In particular, you are mixing dates & offsets. Psuedocode:Code:class Date (int year, uint8 month, uint8 day)class DateOffset (int year, uint8 month, uint8 day)def operator+ (Date d, DateOffset o) := Date(...)def operator+ (Date d, DateOffset o) := DateOffset(...)def operator+ (Date d1, Date d2) := # UNDEFINED!...class Year(y) := Date(y, 1, 1) # or Date(y, 0, 0) -- you shouldn't have to care, so long as operators and properties behave sanelyclass YearOffset(y) := DateOffset(y, 0, 0)class Month(m) := # UNDEFINED!class MonthOffset(m) := DateOffset(0, m, 0) # again, could be 1-based, but that's an impl detail...def month_range(start_year, start_month, num_months) := ...start_year obviously is-a Date; num_months obviously is-a DateOffset; what is start_month? You gave it a name that suggests it's highly similar to start_year, yet it's a fundamentally different type of data. Thus a bug was born.If this were a code review, rather than fix the bug, I'd tell you to genericize the 1st param and remove the 2nd entirely. So a callsite might beCode:for m in month_range(approval.year + initial_month_offset, loan_duration)# instead offor m in month_range(approval.year, initial_month_offset, loan_duration)...which is probably clearer anyway.
Last edited by Richard Berg on Fri Mar 08, 2013 1:11 pm
jxl
Ars Praefectus
Registered: Jan 29, 2001Posts: 4750
Posted: Fri Mar 08, 2013 1:06 pm
koala wrote:I know Java months are 0-based... so are everyone else's, right?Meanwhile, in .Net-istan, The month component, expressed as a value between 1 and 12.Java's date/time functionality is notoriously fucked. I don't want to re-open that can of worms, but isn't use of Joda-Time fairly rampant?
Alamout
Ars Legatus Legionis
Tribus: s/(?<=Bay) State/ Area/
Registered: Aug 12, 2000Posts: 20878
Posted: Fri Mar 08, 2013 1:14 pm
While Richard Berg was writing something useful I was screwing around with itertools. Spoiler: show
Code:import datetimefrom itertools import chain, count, imap, islice, repeatdef month_range(start_year, start_month, num_months, step): return islice(imap(datetime.date, chain.from_iterable(imap(repeat, count(start_year), repeat(12))), cycle(range(1,13)), repeat(1)), start_month - 1, start_month + num_months - 1, step)
And I still ended up with an off-by-one bug...
LordHunter317
Ars Legatus Legionis
Tribus: MD (Waiting)
Registered: Apr 17, 2001Posts: 22394
Posted: Fri Mar 08, 2013 1:25 pm
Inscitia wrote:LordHunter317 wrote:Despite all of that, it doesn't change that you should treat the raw data as the most important thing, even though it may be (will be) imperfect and incorret.There's always measurement error, but it's still closer to reality than anything else you have.I'm not talking about measurement error, but the (physical) sensor actually returning garbage data.
Jonathon
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Tennessee, USA
Registered: Jan 27, 2006Posts: 7880
Posted: Fri Mar 08, 2013 2:15 pm
Richard Berg wrote:You shouldn't have to care; it should be handled by the type system. In particular, you are mixing dates & offsets. Psuedocode:Code:class Date (int year, uint8 month, uint8 day)class DateOffset (int year, uint8 month, uint8 day)def operator+ (Date d, DateOffset o) := Date(...)def operator+ (Date d, DateOffset o) := DateOffset(...)def operator+ (Date d1, Date d2) := # UNDEFINED!...class Year(y) := Date(y, 1, 1) # or Date(y, 0, 0) -- you shouldn't have to care, so long as operators and properties behave sanelyclass YearOffset(y) := DateOffset(y, 0, 0)class Month(m) := # UNDEFINED!class MonthOffset(m) := DateOffset(0, m, 0) # again, could be 1-based, but that's an impl detail...def month_range(start_year, start_month, num_months) := ...start_year obviously is-a Date; num_months obviously is-a DateOffset; what is start_month? You gave it a name that suggests it's highly similar to start_year, yet it's a fundamentally different type of data. Thus a bug was born.If this were a code review, rather than fix the bug, I'd tell you to genericize the 1st param and remove the 2nd entirely. So a callsite might beCode:for m in month_range(approval.year + initial_month_offset, loan_duration)# instead offor m in month_range(approval.year, initial_month_offset, loan_duration)...which is probably clearer anyway.Python provides a 'timedelta' object, but its largest component is 'day'... doesn't really help if you need to be able to operate on months. So you end up stuck rolling your own, which is... complicated, to say the least.Fortunately, month-based date operations are (IME) relatively rare-- most financial and business processes tend to operate on a daily or weekly basis. Not that those aren't fraught with perils, too (see the ISO week 0 issue that caused problems with scheduling in iOS earlier this year).
Solomonoff's Secret
Ars Legatus Legionis
et Subscriptor
Registered: Nov 18, 2007Posts: 11007
Posted: Fri Mar 08, 2013 2:39 pm
What's so hard about date math?Code:nextMonth(date): newMonth = toInt(date.substring(0, 2)) mod 12 + 1 return (newMonth < 10 ? "0" : "") + toStr(newMonth) + date.substring(3, 10)nextMonth("03/08/2013") = "04/08/2013"
Blacken00100
"Naked Moral Outrage"
Ars Legatus Legionis
et Subscriptor
Tribus: swankyrobot.com/blog
Registered: Sep 11, 2007Posts: 10375
Posted: Fri Mar 08, 2013 3:35 pm
jxl wrote:Java's date/time functionality is notoriously fucked. I don't want to re-open that can of worms, but isn't use of Joda-Time fairly rampant?Use of java.util.Date should be considered a bug in almost all, if not all, cases.(Use of java.sql.Date should be strictly limited to conversions from Joda-Time.)
Vince-RA
"Baddest Motherfucker in the Lounge"
Ars Praefectus
et Subscriptor
Tribus: North Carolina
Registered: May 21, 2007Posts: 3595
Posted: Fri Mar 08, 2013 3:35 pm
Batch files are fucking awful things.
Apteris
Ars Tribunus Angusticlavius
Tribus: Caudium
Registered: Jul 12, 2007Posts: 6217
Posted: Fri Mar 08, 2013 4:17 pm
So here's something weird. I set up Console2 to handle both cmd.exe and Powershell, as per Scott Hanselman's instructions. I already have this set-up at work and it's great. But, here at home, when I open a new Powershell tab:Code:Windows PowerShellCopyright (C) 2009 Microsoft Corporation. All rights reserved.File C:\Users\Me\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1 cannot be loadedbecause the execution of scripts is disabled on this system.Please see "get-help about_signing" for more details.At line:1 char:2+ . <<<< 'C:\Users\Me\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1' + CategoryInfo : NotSpecified: (:) [], PSSecurityException + FullyQualifiedErrorId : RuntimeExceptionWhich is odd, because as anyone who's tried to use PS will have had to, I set my execution policy to RemoteSigned ages ago. Indeed, running Powershell either as me (a regular user) or as admin:Code:Get-ExecutionPolicy <ENTER>RemoteSignedSame thing if I start cmd.exe and run Powerhsell from there. But if I start it via Console2.exe, I getCode:Get-ExecutionPolicy <ENTER>RestrictedI've tried (and apparently succeeded) to change the exec policy at both a user and LocalMachine scope. Still no dice. Help?The one clue I do have is that starting powershell normally starts a 64-bit process (C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe) whereas starting it via Console2.exe starts a 32-bit process (C:\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe). I'm on Win7 Ultimate x64, if it matters.
Pont
Ars Legatus Legionis
et Subscriptor
Tribus: Los Gatos Mountains View
Registered: Aug 19, 2000Posts: 18208
Posted: Fri Mar 08, 2013 9:38 pm
Start the 32-bit process manually as Administrator. Run Set-ExecutionPolicy again.
Apteris
Ars Tribunus Angusticlavius
Tribus: Caudium
Registered: Jul 12, 2007Posts: 6217
Posted: Sat Mar 09, 2013 4:36 am
Yup, that did it. Thanks. So, as I now learn, the registry key ExecutionPolicy is to be found not only under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell, but also HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell. Good to know.
Agathos
"That's Dr. Agathos to you."
Ars Praefectus
et Subscriptor
Tribus: Chicago, IL, US
Registered: Mar 18, 1999Posts: 3136
Posted: Sat Mar 09, 2013 10:53 am
Jonathon wrote:Fortunately, month-based date operations are (IME) relatively rare-- most financial and business processes tend to operate on a daily or weekly basis.I was amused to read this, as I spent much of this week adding a month-based feature to a financial app written in Python. But I'm really doing my date calculations in PostgreSQL, which has excellent date/time support.Code:SELECT now() + '1 month';
ShuggyCoUk
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Londinium
Registered: Nov 14, 2005Posts: 6952
Posted: Sat Mar 09, 2013 2:52 pm
I moved most of my companies storage to ISO weeks years ago.Having weekends is a wonderful thing and we should exploit them as much as possible.
Jonathon
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Tennessee, USA
Registered: Jan 27, 2006Posts: 7880
Posted: Sat Mar 09, 2013 4:14 pm
I propose we adjust the Earth's orbit and spin to allow the metrication of dates and times. What could go wrong? SituationSoap
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Grand Rapids MI
Registered: Jun 28, 2008Posts: 9778
Posted: Sat Mar 09, 2013 10:05 pm
Agathos wrote:Jonathon wrote:Fortunately, month-based date operations are (IME) relatively rare-- most financial and business processes tend to operate on a daily or weekly basis.I was amused to read this, as I spent much of this week adding a month-based feature to a financial app written in Python. But I'm really doing my date calculations in PostgreSQL, which has excellent date/time support.Code:SELECT now() + '1 month';I also chuckle, as active_support ostensibly (but not always, depending on your definition of 'month' -- 30 days vs. this day next month) solves this problem rather trivially with 1.month.from_now.
Alamout
Ars Legatus Legionis
Tribus: s/(?<=Bay) State/ Area/
Registered: Aug 12, 2000Posts: 20878
Posted: Sat Mar 09, 2013 11:25 pm
There are indeed 3rd-party packages that solve this problem in Python. It's not always possible to rely on something like that though.
w00key
Ars Scholae Palatinae
Registered: Aug 27, 2008Posts: 1387
Posted: Sun Mar 10, 2013 6:55 am
Yeah, don't invent this stuff yourself, date and time is horrible, and the more your know, the more you go EWWWyuckyBLARGH. I wish I could use joda-time on Android but the overhead is just a bit too large to justify, so we're left with java.util.Calendar, android.text.format.Time and custom classes (stuff like get all Week's in a Month). But at least if you configure java.util.Calendar well, I get week numbers, first day of the week, TimeZone/DST calculations right for free, only one thing (getWeekYear) had to be backported/borrowed from Java 7, it's n/a in any previous version.I'm looking forward to the day we can drop support for 2.2/2.3 and go all in with libraries instead of trying to keep the .apk below 2-3MB. I know some apps go "screw that" like G+ with 10MB+ worth of binaries, but they do get punished for that with lots of justified complaints and reviews on the store.
SituationSoap
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Grand Rapids MI
Registered: Jun 28, 2008Posts: 9778
Posted: Sun Mar 10, 2013 7:48 am
Alamout wrote:There are indeed 3rd-party packages that solve this problem in Python. It's not always possible to rely on something like that though.Oh, I totally understand. Though, if Python were really that powerful, it would be able to import packages from other languages! Blacken00100
"Naked Moral Outrage"
Ars Legatus Legionis
et Subscriptor
Tribus: swankyrobot.com/blog
Registered: Sep 11, 2007Posts: 10375
Posted: Sun Mar 10, 2013 9:56 am
We use Joda-Time quite comfortably on Android. The overhead of it isn't that bad.
ronelson
Ars Legatus Legionis
Tribus: Richmond, VA
Registered: Mar 21, 1999Posts: 21393
Posted: Sun Mar 10, 2013 9:58 am
Quote:Yeah, don't invent this stuff yourself, date and time is horrible, and the more your know, the more you go EWWWyuckyBLARGH.There's also the bonus that when you get hit with a leap year bug, you can point to the vendor (and all the other companies that are much "better" than you and still got hit) instead of taking it on the chin like any unlucky asshole who had that issue in homecrafted date-time software last year. Don't underestimate the ability to CYA on these things.
w00key
Ars Scholae Palatinae
Registered: Aug 27, 2008Posts: 1387
Posted: Sun Mar 10, 2013 10:22 am
Blacken00100 wrote:We use Joda-Time quite comfortably on Android. The overhead of it isn't that bad.Hmm, any idea what the size is after packing? Proguard nukes all unused things so just linking it in doesn't tell me much.
Blacken00100
"Naked Moral Outrage"
Ars Legatus Legionis
et Subscriptor
Tribus: swankyrobot.com/blog
Registered: Sep 11, 2007Posts: 10375
Posted: Sun Mar 10, 2013 10:41 am
Not offhand, but Joda-Time's not particularly Proguard-able because most of its weight comes from the internal stuff (timezones, etc.) that gets linked in pretty much regardless of what you use. Still isn't too bad though.
w00key
Ars Scholae Palatinae
Registered: Aug 27, 2008Posts: 1387
Posted: Sun Mar 10, 2013 12:32 pm
+240KB for Joda-time and it's dependency Joda-convert for a dist build. Not bad, I thought it was larger, but Proguard is more efficient than I thought.Date and time calculations takes up a good chunk of the CPU usage in the app according to the profiler, it used to be worse but since we ported most calculations to the Time class that uses native code for normalization it's alright. I'll give Joda-time a try when I've some spare time. If there's no CPU penalty, any new app will definitely use this library exclusively.
koala
Ars Praefectus
Tribus: Barcelona, Spain
Registered: Dec 31, 2001Posts: 4014
Posted: Mon Mar 11, 2013 11:28 am
Code:create table services ( service_id serial primary key, ...);Now I want a table that relates dependent services, encoding facts such as "service A depends on service B".Code:create table service_dependencies ( xxxxx integer not null references services(service_id), yyyyy integer not null references services(service_id), ...);Which name would you use for the xxxxx and yyyyy columns? I thought source, target or something like that, but I don't think it's immediately obvious who depends on whom.
technophile
Ars Legatus Legionis
Tribus: Ogden, UT
Registered: Aug 3, 1999Posts: 18273
Posted: Mon Mar 11, 2013 11:32 am
koala wrote:Which name would you use for the xxxxx and yyyyy columns? I thought source, target or something like that, but I don't think it's immediately obvious who depends on whom."service" and "dependson".
Jonathon
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Tennessee, USA
Registered: Jan 27, 2006Posts: 7880
Posted: Mon Mar 11, 2013 11:34 am
I'd probably use parent/child (where the child service is dependent on the parent).Edit: Technophile's solution is probably clearer. I hate naming things. SituationSoap
Ars Tribunus Angusticlavius
et Subscriptor
Tribus: Grand Rapids MI
Registered: Jun 28, 2008Posts: 9778
Posted: Mon Mar 11, 2013 12:22 pm
Jonathon wrote:I'd probably use parent/child (where the child service is dependent on the parent).Edit: Technophile's solution is probably clearer. I hate naming things. Old Programmer's Proverb: "There are only two hard things in Computer Science. Cache invalidation and what to name things."
GohanIYIan
Ars Praefectus
et Subscriptor
Registered: Oct 17, 2002Posts: 3729
Posted: Mon Mar 11, 2013 12:25 pm
I'd use service_id and requires_id. Or requires_service_id if I was feeling verbose.
6385 posts â€¢ Previous 1 ... 697071 ... 160 Next
Ars Technica > Forums > Operating Systems & Software > Programmer's Symposium
Jump to:
Select a forum
------------------
Hardware & Tweaking
Audio/Visual Club
Case and Cooling Fetish
CPU & Motherboard Technologia
Mobile Computing Outpost
Networking Matrix
Other Hardware
Agora Classifieds
Operating Systems & Software
Battlefront
Microsoft OS & Software Colloquium
Linux Kung Fu
Windows Technical Mojo
Distributed Computing Arcana
Macintoshian Achaia
Programmer's Symposium
The Server Room
Ars Lykaion
Gaming, Extra Strength Caplets
The Lounge
The Soap Box
The Boardroom
The Observatory
Ars Help & Feedback
Ars Subscription Member Areas
Image Galleries
Contact Us | Ars Technica
Â© Ars Technica 1998-2014
Powered by phpBB and...
Â© 2014 CondÃ© Nast. All rights reserved
Use of this Site constitutes acceptance of our User Agreement (effective 3/21/12) and Privacy Policy (effective 3/21/12), and Ars Technica Addendum (effective 5/17/2012)
Your California Privacy Rights
The material on this site may not be reproduced, distributed, transmitted, cached or otherwise used, except with the prior written permission of CondÃ© Nast.
Ad Choices

