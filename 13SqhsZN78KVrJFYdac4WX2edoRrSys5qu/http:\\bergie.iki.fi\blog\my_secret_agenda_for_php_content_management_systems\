http://bergie.iki.fi/blog/my_secret_agenda_for_php_content_management_systems/
HTTP/1.1 200 OK
Server: GitHub.com
Date: Wed, 23 Jul 2014 03:54:26 GMT
Content-Type: text/html; charset=utf-8
Connection: close
Last-Modified: Wed, 07 May 2014 14:12:21 GMT
Expires: Wed, 23 Jul 2014 04:04:26 GMT
Cache-Control: max-age=600
Vary: Accept-Encoding
Content-Encoding: gzip
Vary: Accept-Encoding

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>My secret agenda for PHP Content Management Systems - Henri Bergius</title>
    <link rel="stylesheet" href="/style/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/style/css/bootstrap-responsive.min.css" />
    <link rel="stylesheet" href="/style/css/bergie-2012.css" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/style/img/favicon/favicon_144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/style/img/favicon/favicon_114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="/style/img/favicon/favicon_72.png" />
    <link rel="apple-touch-icon-precomposed" href="/style/img/favicon/favicon_57.png" />
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />
    
    <link rel="payment" href="https://flattr.com/submit/auto?url=http%3A%2F%2Fbergie.iki.fi%2Fblog%2Fmy_secret_agenda_for_php_content_management_systems%2F&amp;user_id=bergie" type="text/html" />
    <link rel="bitcoin" href="bitcoin:13SqhsZN78KVrJFYdac4WX2edoRrSys5qu" />
    <meta name="google-site-verification" content="ge5GAC0xnAgFKsZdHP3DD9KbNYPM0d4F5SpK0ivCJtg" />
    <meta property="fb:admins" content="722463139" />
    
    <link rel="alternate" type="application/rss+xml" href="/blog/rss.xml" title="Henri Bergius feed" />
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-75936-2']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script>
  </head>
  <body class="post ">
    <div class="container">
            <article vocab="http://schema.org/" about="/blog/my_secret_agenda_for_php_content_management_systems/" typeof="BlogPosting" class="span8 offset1">
        <header class="span9">
          <div>
            <h1 property="headline">My secret agenda for PHP Content Management Systems</h1>
          </div>
        </header>
        <div class="span8">
          <div property="articleBody">
            <p>As I've written before, I'm concerned about the state of the PHP ecosystem. There are lots of good applications written in the language, but there is very little code sharing between different projects, mainly because of framework incompatibilities, but also because of quite a strong <a href="http://en.wikipedia.org/wiki/Not_Invented_Here">NIH</a> culture.</p>

<p>But there are also bright points. I've recently seen lots of exchange of ideas, and even potential code sharing between some communities including Symfony2, Midgard, TYPO3 and eZ Publish. Much of the vision in these systems is similar, as are many of the engineering principles. When everybody uses reasonable object-oriented design, namespaces, and test-driven development, it is much easier to share.</p>

<p>If I had to list three areas where there is most potential for collaboration, these would be:</p>

<h2>Content model on the browser: VIE and RDFa</h2>

<p>The age of communicating with your web audience via <em>forms</em> is almost over, and it is time to evolve. HTML5 includes support for the <a href="http://blog.whatwg.org/the-road-to-html-5-contenteditable">contentEditable</a> attribute which allows rich editing interaction straight on the pages, and there are cool editors supporting that, including <a href="http://aloha-editor.org/">Aloha Editor</a> and <a href="https://github.com/jejacks0n/mercury#readme">Mercury</a>.</p>

<p>To do proper front-end editing, your CMS and the JavaScript environment have to agree on the content model. Fortunately there is a great solution for this: just annotate your content with some RDFa.</p>

<p>Having RDFa on a page allows the browser to understand the content. What is a collection of blog posts for instance, and what is the title of a blog post. With this, my VIE library will provide you with a nice in-browser content management API based on <a href="http://documentcloud.github.com/backbone/">Backbone.js</a>. Getting there is easy:</p>

<ol>
<li>Annotate your pages with RDFa</li>
<li>Include <a href="https://github.com/bergie/VIE">vie.js</a> to the pages</li>
<li>Implement <a href="http://documentcloud.github.com/backbone/#Sync">Backbone.sync</a></li>
</ol>


<p>This allows a great deal of <a href="http://bergie.iki.fi/blog/decoupling_content_management/">decoupling in the CMS stack</a>. Suddenly the server side just has to worry about content management and page generation, and newer in-browser technologies can be used for actual content authoring.</p>

<p>Using RDFa annotations in your content comes also with another benefit: suddenly your pages themselves are an API into your content model. And search engines can understand and present your content better.</p>

<p>If you want to learn more about this, <a href="http://bergie.iki.fi/blog/midgard_create_and_vie_in_the_aloha_editor_conference/">watch my talk</a> from the Aloha Editor Dev Con.</p>

<h2>Content persistence and retrieval: PHPCR</h2>

<p>Historically, all CMSs have implemented persistence in their own way. There have been systems using relational databases like MySQL, systems providing their own content repository APIs like Midgard, and also some systems just using XML and the file system. This has reduced integration and code re-use possibilities between systems. In the Java world, a solution exists for this: the <a href="http://en.wikipedia.org/wiki/Content_repository_API_for_Java">Java Content Repository</a> standard (JCR).</p>

<p>Now JCR has been ported to PHP. <a href="http://phpcr.github.com/">PHPCR</a> provides a standard interface for all content management needs, and has multiple back-ends available. Depending on your deployment needs, you could store your content into a relational database, into Apache Jackrabbit, or into for example MongoDB.</p>

<p>PHPCR is great in that you can start small: just model your content with a simple, filesystem-like tree of nodes and properties. Then when you need it, a wealth of functionality is available. Versioning? Query builders? Access control? It is all there for you to use. And, depending on the PHPCR back-end, you'll have the ability to scale up to insane amounts of content.</p>

<p>While I've advocated <a href="http://bergie.iki.fi/blog/why_you_should_use_a_content_repository_for_your_application/">using content repositories</a> for years now, this is the first time PHP has a true standardized, vendor-neutral API for it. And PHPCR is even being integrated <a href="http://java.net/jira/browse/JSR_333-28">into the JCR specification</a>, eventually making it an official standard.</p>

<p><img src="http://farm7.static.flickr.com/6053/5915517564_ba20056559.jpg" alt="PHPCR discussion in Sursee, Switzerland" /></p>

<p>Adoption is also picking up. Yesterday I was in a meeting where we had developers from TYPO3, Symfony2, Doctrine and Midgard discussing issues and solutions in the content repository space. I just hope the other projects also pick this specification up.</p>

<h2>Improving performance: AppServer-in-PHP</h2>

<p>Of the three, this is probably the most controversial idea. Traditionally PHP is run as a scripting environment on a regular web server, like Apache or Nginx. In such setup, when the server receives a request, it passes it on to the PHP environment. The PHP environment loads all the code needed to fulfill the request, runs it, sends the response back, and unloads everything loaded.</p>

<p>This is fine when PHP is being used in the way Rasmus originally intended, as a simple display layer. But nowadays most of <a href="http://www.sitepoint.com/rasmus-lerdorf-php-frameworks-think-again/">PHP runs on a big framework</a>, whether it is MVC or something custom like Drupal. And loading and then discarding a whole framework for each request is simply insane.</p>

<p>With <a href="http://github.com/indeyets/appserver-in-php">AppServer-in-PHP</a> (AiP), you have an environment where even a big framework can perform. AiP provides you with a full server environment for PHP, <em>written in PHP</em>. In this setup, your framework is loaded when the server boots up, and then each request just runs the request processing part of it.</p>

<p>During the <a href="https://github.com/alohaeditor/Aloha-Editor/wiki/Aloha-Editor-Dev-Con-SanFrancisco-11">San Francisco Aloha Dev Con</a> we ported TYPO3 to run on AiP, and the performance results where staggering. A simpler request with not much I/O would run 3-4 times faster than the same code on regular PHP setup, and an I/O -intensive request would still be <em>twice as fast</em>. AiP can't do much about I/O performance, but at least the cost of having a framework is greatly reduced.</p>

<p>In short, AppServer-in-PHP is something any developer running web services with a PHP framework should consider. It is also a great way for framework developers to see if they have request isolation problems in their design.</p>

<p><em>This post has been written in the <a href="http://t3dd11.typo3.org/">TYPO3 Developer Days 2011</a> event where I was invited to discuss these ideas, and also help run the RDFa part of the <a href="http://www.slideshare.net/jocrau/semantic-typo3">TYPO3 Goes Semantic</a> workshop.</em></p>

          </div>
          <div class="metadata">
            
            <a rel="author" href="http://bergie.iki.fi/#me"></a>
            
            <span property="datePublished" content="2011-07-08T00:00:00-07:00">08 July 2011</span>
            
            <span property="wordCount" content="930"></span>
          </div>
          
        
        
          
        
        
          
            <hr />
            <aside class="category oscom">
  <h2>Decoupled Content Management</h2>

  <p><a href="http://decoupledcms.org/">Decoupled Content Management</a> is a movement to bring clean separation of concerns into CMSs. With it, Content Management Systems can focus better on their core functionalities, and get the missing pieces through code-sharing and collaboration.</p>

  <p>For me, the decoupled CMS story began in the <a href="http://www.advogato.org/article/657.html">OSCOM era</a> of early 2000s, and culminated in the still-popular <a href="http://bergie.iki.fi/blog/decoupling_content_management/">Decoupling Content Management</a> article I wrote in 2011. The tools mentioned there &mdash; <a href="http://createjs.org/">Create.js</a>, <a href="http://viejs.org/">VIE</a>, and <a href="http://phpcr.github.com/">PHPCR</a> &mdash; have since reached quite a nice level of adoption in mainstream CMSs.</p>
</aside>

            <p><a href="/blog/category/oscom/">Read more Decoupled CMS posts</a>.<p>
          
        
        
                <div class="instapaper_ignore">
          <hr />
          <div id="disqus_thread"></div>
          <script type="text/javascript">
            var disqus_shortname = 'bergie';
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
          </script>
        </div>

        </div>
      </article>

    </div>
    <footer>
            <div class="container">
        <div vocab="http://schema.org/" id="me" about="http://bergie.iki.fi/#me" typeof="Person" class="card span8 offset1">
          <div class="avatar instapaper_ignore">
            <div class="switcher">
              <div class="image photo"></div>
              <div class="image drawing" id="bergie_drawn"></div>
            </div>
          </div>
          <div class="details">
            <p>
            <strong><span property="givenName">Henri</span> <span property="familyName">Bergius</span></strong> is an occasional adventurer living in <span rel="homeLocation" typeof="City"><span property="name">Berlin</span></span> and working on decoupled software systems, content repositories and free software.
            </p>
            <p>
            You can reach him by <a rel="email" href="mailto:henri.bergius@iki.fi">email</a> or <a href="xmpp:henri.bergius@gmail.com">instant messaging</a>. Besides writing on this blog, he is also available on <a href="http://twitter.com/bergie">Twitter</a>, <a href="https://plus.google.com/100751105859582805241/?rel=author">Google+</a>, and <a href="http://www.linkedin.com/in/bergie">LinkedIn</a>. Most of Henri's recent code can be found from <a href="https://github.com/bergie">GitHub</a>. <a href="/about/">&raquo;</a>
            </p>
          </div>
        </div>
        <div class="span8 offset1 hidden-phone">
          <ul class="nav nav-pills nav-wide">
            <li><a href="/">Home</a></li>
            <li><a href="/about/">About Henri</a></li>
            <li><a href="/blog/category/bestof/">Best Of</a></li>
            <li><a href="http://www.flickr.com/photos/bergie/">Photos</a></li>
            <li><a href="/talks/">Talks</a></li>
            <li><a href="/colophon/">Colophon</a></li>
          </ul>
        </div>
        <div class="span8 pull-left visible-phone">
          <ul class="nav nav-pills nav-narrow">
            <li><a href="/">Home</a></li>
            <li><a href="/about/">About Henri</a></li>
            <li><a href="/blog/category/bestof/">Best Of</a></li>
          </ul>
        </div>
      </div>
      <script type="application/javascript">
        var avatar = document.getElementById('bergie_drawn');
        avatar.addEventListener('click', function () {
          if (avatar.className.indexOf('transparent') === -1) {
            avatar.className = avatar.className + ' transparent';
            return;
          }
          avatar.className = avatar.className.replace(/\b transparent\b/,'');
        });
      </script>

    </footer>
    
  </body>
</html>

