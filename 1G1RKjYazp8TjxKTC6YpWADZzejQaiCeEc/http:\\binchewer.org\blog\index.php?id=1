http://binchewer.org/blog/index.php?id=1
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 24 Jul 2014 14:40:00 GMT
Content-Type: text/html; charset=utf-8
Connection: close
X-Powered-By: PHP/5.3.28-1~dotdeb.0
Last-Modified: Thu, 17 Jul 2014 14:40:00 GMT
Cache-Control: no-cache

<!doctype html>
<html lang="en-gb">

<head>
  <meta charset="utf-8">

<!-- page title and metas, no meta keywords as they are now obsolete -->
  <title>binchewer blog: Resolving power button issues in Mac OS X Mavericks</title>
  <meta name="description" content="">
  <meta name="generator" content="Textpattern CMS">
  <meta name="robots" content="noindex, follow, noodp, noydir">

<!-- mobile viewport optimised, more info: http://h5bp.com/viewport -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  
<!-- add meta author for individual articles -->
    <meta name="author" content="binchewer" />
  

<!-- content feeds -->
  <link rel="alternate" type="application/atom+xml" title="Atom feed" href="http://binchewer.org/blog/index.php?atom=1&amp;section=articles" />
  <link rel="alternate" type="application/rss+xml" title="RSS feed" href="http://binchewer.org/blog/index.php?rss=1&amp;section=articles" />
  

<!-- specify canonical, more info: http://googlewebmastercentral.blogspot.com/2009/02/specify-your-canonical.html -->
  
    <link rel="canonical" href="http://binchewer.org/blog/index.php?id=1">
  

<!-- css -->
  <!-- Google font API (remove this if you intend to use the theme in a project without internet access) -->
  <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=PT+Serif:n4,i4,n7,i7|Cousine">

  <link rel="stylesheet" href="http://binchewer.org/blog/css.php?n=default" />
  <!-- or you can use (faster) external CSS files eg. <link rel="stylesheet" href="http://binchewer.org/blog/css/default.css"> -->

<!-- HTML5/Media Queries support for IE < 9 (you can remove this section and the corresponding 'js' directory files if you don't intend to support IE < 9) -->
  <!--[if lt IE 9]>
    <script src="http://binchewer.org/blog/js/html5shiv.js"></script>
    <script src="http://binchewer.org/blog/js/css3-mediaqueries.js"></script>
  <![endif]-->

</head>

<body id="articles-page">

<!-- header -->
  <header role="banner">
    <hgroup>
      <h1><a rel="home" href="http://binchewer.org/blog/">binchewer blog</a></h1>
      <h3>chewing binaries since 2003</h3>
    </hgroup>
  </header>

<!-- navigation -->
  <nav role="navigation">
    <h1>Navigation</h1>
    <ul class="section_list">
      <li>
        <a href="http://binchewer.org/blog/index.php">Home</a>
      </li>
    
      <li class="active">
        <a href="http://binchewer.org/blog/index.php?s=articles">Articles</a>
      </li>
    </ul>
  </nav>

  <div class="wrapper">
    <div class="container">

<!-- left (main) column -->
      <div role="main">

        

        <article role="article" itemscope itemtype="http://schema.org/Article">

<!-- if not an individual article then make the title h1 a link -->

  <h1 itemprop="name">Resolving power button issues in Mac OS X&#160;Mavericks</h1>


  <p><strong>Posted</strong> <time datetime="2013-12-31T14:24:04Z" itemprop="datePublished">31/12/13 08:24 PM</time><br>
    <strong>Comments</strong> <a href="http://binchewer.org/blog/index.php?id=1#comments-head" title="View&#8230;" itemprop="discussionUrl" itemscope itemtype="http://schema.org/UserComments">

<!-- if comments then display the number, if no comments then print 'none' -->

  <span itemprop="interactionCount">33</span>


  </a></p>

  <div itemprop="articleBody">
    	<p>It always amused me how Apple is capable of producing so quality hardware and has so bright ideas in design, but makes so awful lot of questionable decisions in software. I have quite a number of questions on the usability of Mac OS X, but recent update to Mavericks was the last drop. I spend a lot of time in the text editor and I press <strong>delete</strong> key several hundreds times a day. The problem is, I have a MacBook Air and <strong>delete</strong> key is only 3mm apart from <strong>power</strong> key and I mishit it from time to time.</p>

	<p>In the past versions of <span class="caps">OSX</span>, pressing <strong>power</strong> key would result in shutdown dialog, which could be closed by <strong>esc</strong> key in a wink, no harm done. In Mavericks, <strong>power</strong> key puts system in sleep, screen goes black, and I need to press <strong>power</strong> key again, in 2-3 seconds system would boot up back, after that I need another couple of seconds to enter my password &#8212; 5 seconds in total, which is quite disturbing when you are concentrated. On top of that, this behavior is not customizable, that effectively cuts MacBook Air with Mavericks usability for programming or writing texts.</p>

	<p>Let&#8217;s put aside the question why someone would decide to implement such a ridiculous feature &#8212; it was implemented, everyone is unhappy, and Apple seems to have more important tasks to do than to fix it back. Unfortunately MacBook is currently my primary instrument, and I could not just put in on the shelf until better times, so naturally I started to seek a solution. There was not much &#8212; <a href="http://support.apple.com/kb/HT5869">hilarious Apple support post</a> that advised to press <strong>power</strong> key for 1.5 seconds to get shutdown dialog and <a href="http://www.reddit.com/r/apple/comments/1q9dmc/">reddit post</a> that advised to change <code>powerd</code> config file.</p>

	<p>When you apply suggested fix, screen goes black on <strong>power</strong> key, but the system doesn&#8217;t fall asleep anymore, and you could wake it up momentarily, that saves you several seconds. And if you don&#8217;t want to lose another couple of seconds on password input, you can go to <em>Security &amp; Privacy</em> in <em>System Preferences</em> and change password requirement from &#8220;Immediately&#8221; to &#8220;5 seconds&#8221;. Now you don&#8217;t lose any time, but as for me, screen blackout is still pretty damn disturbing, so I decided to investigate this issue further.</p>

	<p>What do we have: if <strong>power</strong> key is released in less than 1.5 seconds, system falls asleep, if key is pressed for 1.5 seconds, shutdown dialog appears, and if it is pressed for 5+ seconds, system powers off. Third case is usually implemented in hardware, but the first two cases are software in nature and there must be a key handler somewhere, so our goal is to find it and fix it. We also have two leads &#8212; one is that <code>powerd</code> config contains &#8220;Sleep on power button&#8221; option, and another is the shutdown dialog that had to be linked to some piece of code.</p>

	<p>I decided to start with shutdown dialog and searched the whole system disk for the phrase from it:</p>

<pre><code>$ sudo find / -type f -print0 | xargs -0 fgrep &quot;Are you sure you want to shut down your&quot; 2&gt;/dev/null
</code></pre>

	<p>Actually it was a long shot because dialog resources could be encrypted or compressed, or string could be in Unicode, so I was already prepared to dump and examine memory, but luckily <code>grep</code> found matching string in two files:</p>

<pre><code>Binary file /System/Library/CoreServices/loginwindow.app/Contents/Resources/English.lproj/PowerButton.nib matches
Binary file /System/Library/CoreServices/loginwindow.app/Contents/Resources/English.lproj/ShutDown.nib matches
</code></pre>

	<p>As we can see, both of them are part of <code>loginwindow</code> application, and the name <code>PowerButton.nib</code> looks quite promising, huh? And if we dig it even deeper, we can figure out that <code>PowerButton.nib</code> is a dialog resource for <strong>power</strong> key, and <code>ShutDown.nib</code> is a dialog resource for <em>Apple</em> -&gt; <em>Shutdown&#8230;</em>:</p>

<pre><code>$ cd /System/Library/CoreServices/loginwindow.app/Contents/Resources/English.lproj/
$ fgrep &quot;Restart&quot; PowerButton.nib ShutDown.nib
Binary file PowerButton.nib matches
$ fgrep &quot;If you do nothing, the computer will shut down&quot; PowerButton.nib ShutDown.nib
Binary file ShutDown.nib matches
</code></pre>

	<p>Anyway, now we had two suspects &#8212; <code>loginwindow.app</code> and <code>powerd</code>. <code>/System/Library/CoreServices/loginwindow.app/Contents/MacOS/loginwindow</code> and <code>/System/Library/CoreServices/powerd.bundle/powerd</code>, to be precise.</p>

	<p>I fired up <span class="caps">IDA</span> and loaded <code>powerd</code> in it. Quick look around discovered a whole lot of strings with <em>&#8220;sleep&#8221;</em> substring, imported <code>IOPMSleepSystemWithOptions</code> from <code>IOKit</code> and several exported symbols with <em>&#8220;sleep&#8221;</em> substring, but actually nothing that would instantly catch my eye. And no hits for <em>&#8220;powerbutton&#8221;</em> substring.</p>

	<p>So I switched to <code>loginwindow</code>, but it looked all gibberish. That is when I remembered that Apple uses code signing and encryption. So I ended up dumping processes memory anyway. Quick searching on the internet discovered <a href="https://github.com/gdbinit/readmem">tool named readmem</a>, that did the trick:</p>

<pre><code>$ ps -A | fgrep loginwindow
   59 ??         0:02.31 /System/Library/CoreServices/loginwindow.app/Contents/MacOS/loginwindow console
  436 ttys000    0:00.00 fgrep loginwindow
$ sudo ./readmem -p 59 -m -o loginwindow.dmp
---------------------------------
Readmem v0.6 - (c) 2012, 2013 fG!
---------------------------------
[DEBUG] Found main binary mach-o image @ 0x10acf7000!
[DEBUG] Executing get_image_size
[DEBUG] Executing dump_binary
[DEBUG] Dumping __TEXT at 10acf7000 with size 99000 (buffer:200000)
[DEBUG] Dumping __DATA at 10ad90000 with size 1d000 (buffer:299000)
[DEBUG] Dumping __CGPreLoginApp at 10adad000 with size 0 (buffer:2b6000)
[DEBUG] Dumping __RESTRICT at 10adad000 with size 0 (buffer:2b6000)
[DEBUG] Dumping __LINKEDIT at 10adad000 with size 15cc0 (buffer:2b6000)
[OK] Full binary dumped to loginwindow.dmp!
</code></pre>

	<p>Now it looked fine in <span class="caps">IDA</span>, so I started to look for <em>&#8220;sleep&#8221;</em>, <em>&#8220;powerbutton&#8221;</em>, <em>&#8220;power button&#8221;</em> in there and almost instantly discovered the following strings:</p>

<pre><code>__cstring:00000001000769F4 0000002F C -[ApplicationManager checkPowerButtonTimeout:]
__cstring:0000000100077140 0000002E C -[ApplicationManager handlePowerButtonEvent:]
</code></pre>

	<p>Each string had several cross-references from the <code>__text</code> section, it was natural to assume that these places were all parts of two <code>ApplicationManager</code> methods, <code>checkPowerButtonTimeout</code> and <code>handlePowerButtonEvent</code>. I created these functions in <span class="caps">IDA</span> and now we were getting somewhere. Original strings turned out to be a part of logging system that was enabled by the condition:</p>

<pre><code>lea     r12, qword_1000B5F18
test    byte ptr [r12+2], 2
jz      no_log
</code></pre>

	<p>Of course, in the original source code it was something like this:</p>

<pre><code>if (qword_1000B5F18 &amp; 0x20000) log(…)
</code></pre>

	<p>So I went back to <code>readmem</code> and enabled the logging:</p>

<pre><code>$ sudo ./readmem -p 59 -a `python -c &quot;print hex(0x10acf7000 + 0xb5f18)&quot;` -s 8
---------------------------------
Readmem v0.6 - (c) 2012, 2013 fG!
---------------------------------
Memory protection: rw-/rwx
0x10adacf18 00 00 00 00 00 00 00 00                         |........|
$ sudo ./readmem -p 59 -a `python -c &quot;print hex(0x10acf7000 + 0xb5f18)&quot;` -s 8 -w -b 20000
---------------------------------
Readmem v0.6 - (c) 2012, 2013 fG!
---------------------------------
-[ Memory before writing... ]-
Memory protection: rw-/rwx
0x10adacf18 00 00 00 00 00 00 00 00                         |........|
-[ Memory after writing... ]-
Memory protection: rw-/rwx
0x10adacf18 00 00 02 00 00 00 00 00                         |........|
</code></pre>

	<p>After which I did two tests. First, I held power button for 1.5 seconds. Here is what I got in the syslog via <code>Console.app</code>:</p>

<pre><code>31/12/13 10:24:24,596 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | entered, keyDown:1
31/12/13 10:24:24,597 loginwindow[59]: FaceTimeNotificationCenter | -[FaceTimeNotifictionCenterSupport callIsRinging] | returning:0
31/12/13 10:24:24,597 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |      No call is ringing
31/12/13 10:24:24,597 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |     NO shield window showing
31/12/13 10:24:24,597 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | power button pressed, start timer
31/12/13 10:24:26,098 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager checkPowerButtonTimeout:] | entered.
31/12/13 10:24:26,099 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager checkPowerButtonTimeout:] |      not already handled
31/12/13 10:24:26,099 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager checkPowerButtonTimeout:] |      is not terminating apps and power button held for &gt; 1.5 seconds, show powerbutton dialog
31/12/13 10:24:26,903 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | entered, keyDown:0
31/12/13 10:24:26,903 loginwindow[59]: FaceTimeNotificationCenter | -[FaceTimeNotifictionCenterSupport callIsRinging] | returning:0
31/12/13 10:24:26,903 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |      No call is ringing
31/12/13 10:24:26,903 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |     NO shield window showing
</code></pre>

	<p>Second, I pressed and released power button momentarily, forcing the system to sleep, and pressed it again in about 5 seconds to wake it up:</p>

<pre><code>31/12/13 10:27:47,682 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | entered, keyDown:1
31/12/13 10:27:47,683 loginwindow[59]: FaceTimeNotificationCenter | -[FaceTimeNotifictionCenterSupport callIsRinging] | returning:0
31/12/13 10:27:47,683 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |      No call is ringing
31/12/13 10:27:47,683 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |     NO shield window showing
31/12/13 10:27:47,683 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | power button pressed, start timer
31/12/13 10:27:47,842 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | entered, keyDown:0
31/12/13 10:27:47,842 loginwindow[59]: FaceTimeNotificationCenter | -[FaceTimeNotifictionCenterSupport callIsRinging] | returning:0
31/12/13 10:27:47,842 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |      No call is ringing
31/12/13 10:27:47,842 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] |     NO shield window showing
31/12/13 10:27:47,842 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager handlePowerButtonEvent:] | powre button released before 1.5 seconds, sleep the system.
31/12/13 10:27:47,843 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | __RegisterSleepWakeCallback_block_invoke | IOPMScheduleUserActiveChangedNotification received:0
31/12/13 10:27:47,843 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock userActivityChanged:] | entered.  isActive:0, shieldWindowShowing:0, lockRequestInProgress:0
31/12/13 10:27:47,847 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock(Private) userIsActiveCheck] | entered.
31/12/13 10:27:47,847 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock(Private) userIsActiveCheck] | returning: 0
31/12/13 10:27:49,185 loginwindow[59]: FaceTimeNotificationCenter | -[ApplicationManager checkPowerButtonTimeout:] | entered.
31/12/13 10:27:52,705 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | __RegisterSleepWakeCallback_block_invoke | IOPMScheduleUserActiveChangedNotification received:1
31/12/13 10:27:52,705 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock userActivityChanged:] | entered.  isActive:1, shieldWindowShowing:1, lockRequestInProgress:0
31/12/13 10:27:52,705 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock userActivityChanged:] | user event received, start an unlock with &#39;active user&#39; as the reason
31/12/13 10:27:52,705 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock(Private) userIsActiveCheck] | entered.
31/12/13 10:27:52,706 loginwindow[59]: FaceTimeNotificationCenter | kLWDBLogScreenLockAndPower | -[LWScreenLock(Private) userIsActiveCheck] | returning: 1
</code></pre>

	<p>Clearly, our initial suspicions about <code>handlePowerButtonEvent</code> and <code>checkPowerButtonTimeout</code> were right, these are the two functions responsible for the whole mess, so I restored their logic:</p>

<pre><code>When power button is pressed:
  if facetime call is ringing, notify facetime about pressed powerbutton and do nothing.
  else if shield window (login form for current user) is active, simulate esc keystroke, effectively putting the system to sleep.
  else start timer for 1.5 seconds
When power button is released:
  if timer didn’t fire yet, put system to sleep.
When timer fires up:
  if button is still pressed, and the system is not in kiosk and the system is not powering down, show dialog.
</code></pre>

	<p>Everything seems to be pretty straightforward. Now, we want to get rid of unwanted unacknowledged sleeping <strong>and</strong> we want to restore original behavior of showing shutdown options dialog. First task is pretty easy &#8212; basically placing <code>mov rax, 1; retn</code> in the beginning of <code>handlePowerButtonEvent</code> will do the trick. Second task is somewhat more ambiguous &#8212; we can either call <code>ApplicationManager::postPowerButtonDialogRequest</code> from <code>handlePowerButtonEvent</code> when <code>keyDown</code> is 1, or we can reduce timeout from 1.5 seconds to 0.001 seconds, or we can just replace <code>handlePowerButtonEvent</code> call with <code>postPowerButtonDialogRequest</code> and hope that multiple calls won’t break anything.</p>

	<p>I personally consider second way is the least destructive &#8212; all we do is change a constant, no intervention in the program logic, so I focused on it. </p>

	<p>Timer setup code looks like this:</p>

<pre><code>10004D07A   48 8B 35 37 D6 05 00      mov     rsi, cs:off_1000AA6B8
10004D081   48 8B 0D 00 EF 05 00      mov     rcx, cs:off_1000ABF88
10004D088   48 8B 3D C1 FF 05 00      mov     rdi, cs:off_1000AD050
10004D08F   F2 0F 10 05 A1 81 04 00   movsd   xmm0, cs:qword_100095238
10004D097   4C 89 FA                  mov     rdx, r15
10004D09A   45 31 C0                  xor     r8d, r8d
10004D09D   45 31 C9                  xor     r9d, r9d
10004D0A0   FF 15 52 C4 04 00         call    cs:_objc_msgSend_ptr
10004D0A6   49 89 04 1F               mov     [r15+rbx], rax
</code></pre>

	<p>Timer constant is loaded into <code>xmm0</code> in the fourth line. The naïve approach is to simply update <code>qword_100095238</code> value, but unfortunately that constant is used outside the <code>handlePowerButtonEvent</code>, so we could unwillingly alter behavior of other parts of <code>loginwindow</code> if mess with it. Therefore we would rather update the instruction so it points not to <code>100095238</code>, but somewhere else.</p>

	<p>We don’t see any direct reference to address <code>100095238</code> in the instruction, but it is common for x86 processor family to incorporate relative addresses, where effective address is calculated as <code>next instruction address + offset</code>. <code>100095238 - 10004D097</code> gives us <code>481A1</code>, which is exactly the value of second dword of <code>movsd</code> instruction. So now our entire job is to find another, smaller value, recalculate offset to it, and replace old offset with it.</p>

	<p>We could of course look for small values all over the memory, but that wouldn’t be exactly wise &#8212; most memory areas change from time to time, and if we find some small value now, it could easily change to enormous value or even be not valid memory place in the future. So the correct approach here is to look for small values only in the code segment of <code>loginwindow</code>, which is guaranteed to be intact in normal operation. I wrote a simple Python script for that matter:</p>

<pre><code>def find_small_double(image, from, to=None):
	for i in xrange(0x18, 0x74):
		pattern = chr(i) + &#39;\x3f&#39;
		pos = image.find(pattern, from)
		if pos != -1:
			return (pos-6, struct.unpack(&#39;d&#39;,image[pos-6:pos+2])[0])
	return None
</code></pre>

	<p>It in fact finds a lot of byte sequences that could be interpret as small double values around the <code>__text</code> section, so I just updated the offset to the first of them:</p>

<pre><code>$ sudo ./readmem -p 59 -a `python -c &quot;print hex(0x10acf7000 + 0x4D093)&quot;` -s 4 -w -b 8533
---------------------------------
Readmem v0.6 - (c) 2012, 2013 fG!
---------------------------------
-[ Memory before writing... ]-
Memory protection: rw-/rwx
0x10ad44093 A1 81 04 00                                     |....|
-[ Memory after writing... ]-
Memory protection: rw-/rwx
0x10ad44093 33 85 00 00                                     |3...|
</code></pre>

	<p>&#8230; and my power button was fixed.</p>

	<p>Understanding that it is quite a big deal to fix it by hand all the time, I wrote a <a href="https://github.com/binchewer/power_fixer">simple utility</a> based on the <code>readmem</code> that tries to fix <code>loginwindow</code> process. Download it, build it (you will likely need XCode), run it. Alternatively, you can download and run <a href="http://binchewer.org/files/power_fixer">binary version</a>.</p>

	<p>Of course, it has several limitations:</p>

	<ul>
		<li>I have only tested it on my <code>loginwindow</code> version, so it is not guaranteed to work on any other machine. Please report on how it works for you.</li>
		<li>The utility works only on 64bit platform but that shouldn’t be a problem, considering Mavericks only runs on 64bit.</li>
		<li>The utility must be run from superuser. Probably you could <code>chmod +s</code> it and autolaunch it on system start or in cron, I haven’t tested it.</li>
		<li>The fix will only work until system is rebooted or user is logged out. The fix will not work for any newly logged it users.</li>
	</ul>

	<p>But still it should be handy. Have a happy coding in the New Year!</p>

	<p>Donations are welcome at <code>1G1RKjYazp8TjxKTC6YpWADZzejQaiCeEc</code> or <code>LKqD7vAfWkfDTSzta1YUdGqWkBj1RMf654</code>.</p>

	<p><strong>P.S.:</strong> Oh but wait, what about <code>powerd</code> and &#8220;Sleep on power button&#8221; config option? Nothing, actually. All the sleeping-waking magic is performed by <code>IOKit</code>, and <code>powerd</code> merely loads the config and applies it to <code>IOKit</code>. I guess just another option would be to modify <code>IOKit</code> and disable screen blackout, but I sticked to <code>loginwindow</code> fix.</p>
  </div>

  <p><strong>Author</strong> <span itemprop="author"><a rel="author" href="http://binchewer.org/blog/index.php?s=articles&amp;author=binchewer">binchewer</a></span>

<!-- only display categories if they are actually set for an article, otherwise omit -->
  
    <br><strong>Categories</strong> <span itemprop="keywords"><a href="http://binchewer.org/blog/index.php?c=reverse-engineering">reverse engineering</a>, <a href="http://binchewer.org/blog/index.php?c=osx">osx</a></span>
  

  </p>

<!-- if this is an individual article then add the comments section via form: comments_display.article.txp -->

  <!-- added an id attribute to the section so we can link directly to here e.g. http://mysite.com/section/article#comments-head -->

<section id="comments-head">

<h3>Comments</h3>

<!-- if there are comments, display them (note: example code below overrides the global preference setting for comments wrapping by stating
  attributes of wraptag="" and break="", you are instead using ol and li tags below)... -->

  <ol class="comments-list" itemscope itemtype="http://schema.org/UserComments">

    <li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Tom</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000003" id="c000003">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T03:33:12Z" itemprop="commentTime">02/01/14 09:33 AM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>&#8220;Let’s put aside the question why someone would decide to implement such a ridiculous feature&#8230;&#8221; </p>

	<p>Momentary presses of the power button do nothing on my Macbook Air with 10.9.1.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Alan</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000004" id="c000004">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T03:54:27Z" itemprop="commentTime">02/01/14 09:54 AM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Your first sentence is in direct contradiction with your other sentences.  If the problem is (as you say it is, and that it sounds like) that the power button is only 3mm from the delete key, that&#8217;s a hardware problem, not a software problem.  </p>

	<p>In previous versions of OS X, this flaw was mitigated to an extent by being able to press &#8220;esc&#8221;, but I think we can all agree that not having to press &#8220;esc&#8221; all day would have been much better.</p>

	<p>My car doesn&#8217;t have its horn located 3mm from the radio&#8217;s volume knob, and if it did, I wouldn&#8217;t call it &#8220;quality hardware&#8221; with a &#8220;questionable decision in software&#8221;, nor would I consider it acceptable if it gave me an &#8220;are you sure?&#8221; dialog box before sounding the horn each time.  That&#8217;s a hardware design issue, plain and simple.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments comments-author" itemprop="comment">


  <h4>

  <span itemprop="creator">binchewer</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  
    <span class="is-author">(Author)</span>
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000005" id="c000005">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T04:56:23Z" itemprop="commentTime">02/01/14 10:56 AM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p><strong>Tom</strong>, as we empirically found, duration threshold is around 0.07 sec, which is ~1/15 of a second. Maybe I press my keys too lazy, but for me it is quite common to press power button (thinking that I am pressing the delete key) for 0.07+ sec, thus activating it.</p>

	<p><strong>Alan</strong>, hardware <em>quality</em> is perfectly fine. Location of a key is a hardware <em>design</em> issue, and, I agree, the source of the problem is location of a key. But what&#8217;s done is done, I bought this car, and I have to put up with it. But you can bypass a lot of hardware issues with proper software, and you would expect the vendor to do so.</p>

	<p>As for Apple, they, instead of fixing this issue with software, made it even bigger. I&#8217;m sorry if my sentencing didn&#8217;t make it clear the first time:<br />
* Apple hardware quality is very good,<br />
* Apple hardware design is generally good with several exceptions,<br />
* Apple interface design is good with a lot of exceptions,<br />
* Apple software quality is not bad, but it brings couple of issues that make you want to kill yourself.</p>

	<p>The entire post is about managing one of the latter issues.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Ted</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000006" id="c000006">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T06:23:35Z" itemprop="commentTime">02/01/14 12:23 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>I have experienced this on my <span class="caps">MBA</span> many times. Very frustrating. Of course havin dinosaur hands doesn&#8217;t help</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Mosselman</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000007" id="c000007">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T07:01:44Z" itemprop="commentTime">02/01/14 01:01 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>@Alan</p>

	<p>It is obviously not true what you are saying. You are using @binchewer&#8217;s (equally flawed) solution to argue that the hardware (locaiton of power button) is wrong, while all you are saying is that a shutdown dialog isn&#8217;t what you&#8217;d want when you slightly press it.</p>

	<p>Not matter the location of the power button, I don&#8217;t want tapping it to result in immediate shutdown. The solution is to do what was done with the <span class="caps">DVD</span> eject button on the Macbook Pro; pressing it slightly longer 1 second versus slight tap, will trigger its functionality -&gt; software fixed.</p>

	<p>The location of the power button is fine actually.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Ben</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000008" id="c000008">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T08:44:00Z" itemprop="commentTime">02/01/14 02:44 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Just wanted to say awesome post and I learned a lot thanks for that! And to other commentators please guys just focus on what is really important here, small hint it is not the keyboard/hardware layout <strong>wink</strong> :)</p>

	<p>Regards,<br />
Ben</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator"><a href="http://css3.bradshawenterprises.com" rel="nofollow">Richard Bradshaw</a></span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000009" id="c000009">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T09:14:48Z" itemprop="commentTime">02/01/14 03:14 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Neat write up, nice detail and very clear. It&#8217;s interesting to note that on the Macbooks I have (rMBP, older <span class="caps">MBP</span>, both on 10.9.1), this isn&#8217;t an issue – tapping the power button doesn&#8217;t power the machine off. If I hold it for a short amount of time (a slightly long tap) it does, but tapping it again it comes on instantly. (so, a taaap, tap = screen black for less than 1 second). I have a password required after 5 seconds, so that helps.</p>

	<p>I wonder if Apple&#8217;s logic is that the process is so quick, that it doesn&#8217;t matter. Interesting change of behaviour nonetheless.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Ankur</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000010" id="c000010">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T12:29:50Z" itemprop="commentTime">02/01/14 06:29 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>What is highly annoying is using booting to Windows and hitting the key while playing games.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Eterna</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000011" id="c000011">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T13:34:24Z" itemprop="commentTime">02/01/14 07:34 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>I&#8217;m just here to say that I sincerely hope all this extreme geeking and nerding gets you laid somehow, some day. You deserve it!</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">user</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000012" id="c000012">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T14:36:36Z" itemprop="commentTime">02/01/14 08:36 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>this really is a great article (and workaround) .. thanks!</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator"><a href="http://www.techload.com.br" rel="nofollow">Criação</a></span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000013" id="c000013">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T16:21:54Z" itemprop="commentTime">02/01/14 10:21 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>This issue was driving me crazy too! Thanks so much for this fix!</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator"><a href="http://danwalker.com" rel="nofollow">Dan</a></span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000014" id="c000014">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T17:12:46Z" itemprop="commentTime">02/01/14 11:12 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Excellent read, it&#8217;s nice to see an article like this that actually &#8216;shows working out&#8217;, so to speak.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator"><a href="http://mattmower.com/" rel="nofollow">Matt Mower</a></span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000015" id="c000015">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T17:34:22Z" itemprop="commentTime">02/01/14 11:34 PM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>I use a 2013 13&#8221; <span class="caps">MBA</span> and confess that I&#8217;ve never experienced this problem but I wanted to leave a comment to say how impressed I am with how you analysed and fixed the problem. I&#8217;m 99% certain I would have given up at the readmem stage, even had I known about it! Kudos to you.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Kevin</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000016" id="c000016">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T19:37:14Z" itemprop="commentTime">03/01/14 01:37 AM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>A good hack. Congrats</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Sammy</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000017" id="c000017">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T20:28:43Z" itemprop="commentTime">03/01/14 02:28 AM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>great work! I&#8217;ve needed the ability to repurpose my power key to a forward delete key and now I finally have it. Thanks a million.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Rosyna</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000018" id="c000018">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-02T21:34:24Z" itemprop="commentTime">03/01/14 03:34 AM (203 days ago)</time></p>

  <div itemprop="commentText">
    	<p>I am saddened by what you did. Very saddened. There&#8217;s no reason whatsoever to even get a disassembly of the loginwindow (class-dump is your friend here). The act of using memory addresses directly or thinking about using them makes me a sad panda.</p>

	<p>(not to mention patching loginwindow is extremely dangerous from a stability point of view as it controls all <span class="caps">GUI</span>).</p>

	<p>Better way:</p>

	<p>Make an <span class="caps">NSB</span>undle project (Cocoa Bundle) in Xcode that does all your patching in the +load method of your class.<br />
Compile that bundle and stick it somewhere. Embed it in a command line tool or something, if that floats your goat.<br />
From your command line tool running as root, use +[NSBundle bundleWithURL:] with the file <span class="caps">URL</span> to your bundle.<br />
On the resulting NSbundle instance, call -load. It&#8217;ll automatically run your +load code.</p>

	<p>For the +load code, do something like this.</p>

	<p>Get the old <span class="caps">IMP</span> of the target function using the objective-c runtime and save it somewhere.<br />
Create a new implementation of the function using imp_implementationWithBlock() from within that new <span class="caps">IMP</span> block, call the original <span class="caps">IMP</span> if you need to. Remember to recreate the second argument when you call the original.<br />
Use method_setImplementation() to set the new implementation.<br />
Rejoice.</p>

	<p>I do it with a different method as posted on </p>

	<p>https://gist.github.com/Rosyna/87017e661d5593acb733</p>

	<p>I used it to debug the actual &#8220;something&#8221; being passed around.<br />
Rejoice more.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator"><a href="http://no.web" rel="nofollow">sean</a></span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000019" id="c000019">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-03T02:42:32Z" itemprop="commentTime">03/01/14 08:42 AM (202 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Thanks!! This shit was driving me crazy&#8230; besides the problem you stated, i work 100% of my time logged in to my office openvpn server when the power button is pressed besides the black screen (i hate it) i get automatically disconnected from the vpn server.</p>

	<p>So,</p>

	<p>tl:dr your 5 seconds of work disruption becomes 30-45 seconds to me (because of the vpn cut of).</p>

	<p>So,</p>

	<p>Thanks buddy. Great hack.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Dave Barr</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000020" id="c000020">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-03T18:34:11Z" itemprop="commentTime">04/01/14 12:34 AM (202 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Pro tip: you should never have to reach up and hit delete in a text editor/textbox. Ctrl-H is your friend. Keeps your fingers on the home row, especially if you map caps lock to control. You have remapped caps lock, right? Or do you murder babies too?</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">me</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000021" id="c000021">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-04T02:14:20Z" itemprop="commentTime">04/01/14 08:14 AM (202 days ago)</time></p>

  <div itemprop="commentText">
    	<p>I have a 17&#8221; unibody <span class="caps">MBP</span> with 10.9.1 and it doesn&#8217;t work.<br />
I even was desperate enough to try logging in as root and running it.<br />
it has no effect.<br />
I am desperate to restore my power button to the popup dialog as it was before Mavericks. (God Apple is stupid!)</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments comments-author" itemprop="comment">


  <h4>

  <span itemprop="creator">binchewer</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  
    <span class="is-author">(Author)</span>
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000022" id="c000022">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-04T07:40:47Z" itemprop="commentTime">04/01/14 01:40 PM (201 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Thank you all for your comments.</p>

	<p><strong>Mosselman</strong>, yes, my fix just reverts it from &#8220;really bad&#8221; to &#8220;not so good&#8221;. Increasing the duration threshold is a clever solution, I&#8217;ll try to do it.</p>

	<p><strong>Eterna</strong>, thank you. I hope so too.</p>

	<p><strong>Rosyna</strong>, great comment. As you can see, I don&#8217;t know much about Objective-C and <span class="caps">OSX</span> internals, and this post was my first scratch on this subject. But, my incompetence taken into account, I still can&#8217;t agree with what you said.</p>

	<p>First, we absolutely need to disassembly the program &#8212; class hierarchy and declarations is not enough to understand how it works. Second, you are overdramatizing about danger of messing with loginwindow. I crashed it a dozen times while debugging my fix, and it&#8217;s not scary at all &#8212; when loginwindow crashes, you just get logged out and need to relogin, that&#8217;s all. Also my patch does a lot of checks not to screw it up.</p>

	<p>Third, your suggestion of replacing old method with new one is exactly the approach I discarded in the post, because I consider it far more dangerous than to mess with a constant &#8212; if you don&#8217;t know how method works (and you don&#8217;t because class-dump won&#8217;t tell you that), you risk breaking down application logic, which can lead to far more funny consequences than plain application crash.</p>

	<p>Anyway, your patching-bundle approach is very clever, and I will try to incorporate it in the future. Thank you.</p>

	<p><strong>Dave Barr</strong>, I seem to murder babies :(</p>

	<p>Finally, the last commentator, please email me the details (my program output, loginwindow version, and probably loginwindow dump made with readmem). I can&#8217;t help you without this information.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">JPC</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000023" id="c000023">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-01-06T15:01:46Z" itemprop="commentTime">06/01/14 09:01 PM (199 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Hi,<br />
Very good job, I like/use it !<br />
Another challenge for you : since Lion, can&#8217;t turn on the screen with mouse move or trackpad swipe, only with mouse clic, trackpad clic, or keyboard key.<br />
Can you investigate this ;-)<br />
<span class="caps">WARNING</span>: I am speaking about <span class="caps">DISPLAY</span> <span class="caps">SLEEP</span> state, not the full <span class="caps">COMPUTER</span> <span class="caps">SLEEP</span> state for which this behavior is correct.<br />
Thanks.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Stefan</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000024" id="c000024">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-02T20:36:22Z" itemprop="commentTime">03/02/14 02:36 AM (172 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Excellent work and analysis. Thanks a lot!<br />
I actually had the problem with the unreliable wake-up when opening the lid (depending on whether the battery is empty or not). So I tend to press the power button to speed things up or check the state &#8220;manually&#8221;, which under Mavericks tends to sleep the machine exactly when it wakes up due to the lid switch. Drove me nuts. So thanks again for the therapy.</p>

	<p>Stefan</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">stino</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000025" id="c000025">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-06T22:53:06Z" itemprop="commentTime">07/02/14 04:53 AM (168 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Very interesting to read how you analyse the problem. I never heard of that readmem tool before. I will give it a try at the weekend when I have more time.</p>

	<p>I wondering if it is possible to replace the the hole &#8220;movsd xmm0,cs:[adress]&#8221; opcode by an &#8220;xorps xmm0,xmm0&#8221; opcode to set the <span class="caps">SSE</span> register to zero? If the &#8220;xorps&#8221; opcode uses less bytes than &#8220;movsd&#8221; opcode you can fill the not needed bytes with some &#8220;nop&#8221; opcodes.<br />
It could be an alternative to finding an small double somewhere in mem and patching the relative jump address.<br />
But I have no idea if the next function call can handle an timer of 0.0 until we try it.</p>

	<p>Thanks for sharing your hack!</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">gurn</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000026" id="c000026">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-07T07:01:15Z" itemprop="commentTime">07/02/14 01:01 PM (167 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Thanks for this fix!  It took me a while to figure out how to get this to run automatically at boot/login, but I finally got a .plist written for launchd, and it works flawlessly:</p>

	<p>&lt;?xml version=&#8220;1.0&#8221; encoding=&#8220;<span class="caps">UTF</span>-8&#8221;?&gt;<br />
&lt;!DOCTYPE plist <span class="caps">PUBLIC</span> &#8220;-//Apple//DTD <span class="caps">PLIST</span> 1.0//EN&#8221; &#8220;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#8221;&gt;<br />
&lt;plist version=&#8220;1.0&#8221;&gt;<br />
&lt;!&#8212;<br />
File name: com.binchewer.power_fixer.plist<br />
Placed in /Library/LaunchDaemons/<br />
Ensure plist file and program are both owned by root and executable<br />
&#8212;&gt;<br />
&lt;dict&gt;<br />
&lt;key&gt;Label&lt;/key&gt;<br />
&lt;string&gt;com.binchewer.power_fixer&lt;/string&gt;<br />
&lt;key&gt;Program&lt;/key&gt;<br />
&lt;string&gt;/usr/local/power_fixer/bin/power_fixer&lt;/string&gt;<br />
&lt;key&gt;RunAtLoad&lt;/key&gt;<br />
&lt;true/&gt;<br />
&lt;/dict&gt;<br />
&lt;/plist&gt;</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">stino</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000027" id="c000027">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-07T23:34:57Z" itemprop="commentTime">08/02/14 05:34 AM (167 days ago)</time></p>

  <div itemprop="commentText">
    	<p>It was possible with an good disassembler like &#8220;hopper&#8221; to disassemble the loginwindow binary and this means the binary is not encrypted. But if you try to patch loginwindow in hopper directly and try to create a new binary from it, hopper warn you that the old binary was using code signing. This means the system will detect if the binary is changed in the file. </p>

	<p>But just for analysis there is no needed to grab a dump from memory. Disassembling the loginwindow file on your HD or <span class="caps">SSD</span> works also fine. </p>

	<p>But if we try to patch loginwindow we need to do this in the memory with the same technic that binchewer already uses in his power_fixer program.</p>

	<p>I change the source code of power_fixer a little bit to try out my idea from yesterday. This patched version of power_fixer not longer search for that small double as I suggested. It only replaces the pattern F20F1005A1810400 (“movsd xmm0,cs:[adress]”) with the pattern 0F57C09090909090 (&#8220;xorps xmm0,xmm0&#8221; and five times &#8220;nop&#8221;). I try this patched power_fixer program and it does the job as well.</p>

	<p>It is just great that I will be no longer disturbed by that annoying standby screen when accidentally hit the power button. :) I’m still wondering who had this ludicrous idea at apple?</p>

	<p>Anyway, thank you very much for your patch binchewer!</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">stino</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000028" id="c000028">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-10T00:50:13Z" itemprop="commentTime">10/02/14 06:50 AM (165 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Found another interesting way to patch loginwindow.<br />
The code where the sleep function is triggered (sub_10003dcb5)m when power key was released before the 1.5 sec are gone is found here:<br />
10004d036     E87A0CFFFF                      call       sub_10003dcb5  </p>

	<p>Just replace E87A0CFFFF by 9090909090 (5 nop as before) and than pressing the power button shorter than 1.5 sec make nothing. You have to press it longer than 1.5 sec to show the power button dialog.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">man</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000029" id="c000029">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-10T10:25:54Z" itemprop="commentTime">10/02/14 04:25 PM (164 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Rosyna, you have convinced me women shouldn&#8217;t be working in tech, it&#8217;s bad enough already with males who&#8217;ve been emasculated.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Todd</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000030" id="c000030">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-20T20:20:37Z" itemprop="commentTime">21/02/14 02:20 AM (154 days ago)</time></p>

  <div itemprop="commentText">
    	<p>While the tech is cool, what a waste of time and effort, learn to type better :) Submit bug reports to Apple and have them fix it properly. Of course that is just my lowly opinion.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Jason</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000031" id="c000031">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-27T20:18:19Z" itemprop="commentTime">28/02/14 02:18 AM (147 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Todd, you&#8217;re a dick.</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Joshua Ochs</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000032" id="c000032">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-02-28T22:46:19Z" itemprop="commentTime">01/03/14 04:46 AM (146 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Looks like 10.9.2 broke this approach, or at least the binary no longer does its magic. Is there a way to generalize the approach so it works across new releases, or did Apple block this for good?</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">#</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000033" id="c000033">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-03-02T09:01:41Z" itemprop="commentTime">02/03/14 03:01 PM (144 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Can we get a fix for 10.9.2 please?</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">Peter</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000034" id="c000034">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-03-08T21:35:39Z" itemprop="commentTime">09/03/14 03:35 AM (138 days ago)</time></p>

  <div itemprop="commentText">
    	<p>10.9.2 issue:  <br />
https://github.com/binchewer/power_fixer/issues/9</p>
  </div>

</article>
</li>
<li>
<!-- load the comment email into a variable. you will be using below this along with author email variable loaded in form: default.article.txp
  then check the comment email variable against article author email variable, and if it matches add 'comments-author' class -->


  <article class="comments" itemprop="comment">


  <h4>

  <span itemprop="creator">#</span>

  <!-- ...now check the comment email variable against article author email variable, and if it matches add '(author)' text -->
  

  <!-- add a permlink so people can link direct to this comment -->
    <span class="comment-anchor" itemprop="url"><a href="http://binchewer.org/blog/index.php?id=1#c000035" id="c000035">#</a></span>

  </h4>

  <!-- also add a 'since' to show comment freshness -->
  <p class="footnote"><time datetime="2014-03-11T08:15:19Z" itemprop="commentTime">11/03/14 02:15 PM (135 days ago)</time></p>

  <div itemprop="commentText">
    	<p>Any idea when it&#8217;ll be fixed? Either stino&#8217;s or the original power_fixer? Anything beats the default 10.9.2 function&#8230;</p>
  </div>

</article>

</li> <!-- links by default to form: 'comments.comment.txp' unless you specify a different form -->

  <!-- if this is a comment preview, display it (but only if there is no error) -->
    

  </ol>



<!-- if new comments are allowed for this article then display comment form, if not then display 'closed' messages -->

  <section id="comments-form">

    <!-- comment invite text is taken for the article's comment invitation field on the 'write' screen -->
    <h3>Comment</h3>

    <form id="txpCommentInputForm" method="post" action="/blog/index.php?id=1#cpreview">
<div class="comments-wrapper">



<p><strong>Enter your comment below.</strong> Fields marked <b class="required" title="Required">*</b> are required. You must preview your comment first before finally posting.</p>

<!-- if there is an error, then inform user -->


<fieldset>

  <p class="large"><label for="name">Name <b class="required" title="Required">*</b></label><br>
  <input type="text" value="" name="name" size="32" class="comment_name_input" id="name" required /></p>

  <p class="large"><label for="email">Email <b class="required" title="Required">*</b></label><br>
  <input type="email" value="" name="email" size="32" class="comment_email_input" id="email" required /></p>

  <p class="large"><label for="web">Website</label><br>
  <input type="text" value="" name="web" size="32" class="comment_web_input" id="web" /></p>

  <p><input type="checkbox" name="remember" value="1" id="remember" checked="checked" class="checkbox active" /> <label for="remember">Remember</label> <input type="hidden" value="remember" name="checkbox_type" /></p>

  <p class="small"><label for="message">Message <b class="required" title="Required">*</b></label><br>
  <textarea id="message" name="message" cols="64" rows="4" required class="txpCommentInputMessage"></textarea></p>

</fieldset>

<!-- preview and submit buttons (note: submit button will have a class of 'disabled' applied until you have previewed the message at least once) -->
<p><input type="submit" value="Preview" name="preview" class="button" id="txpCommentPreview" /> <input type="submit" value="Submit" name="submit" class="button disabled" id="txpCommentSubmit" disabled="disabled" /></p>
<input type="hidden" value="1" name="parentid" />
<input type="hidden" value="/blog/index.php?id=1" name="backpage" />

</div>
</form> <!-- links by default to form: 'comment_form.comment.txp' unless you specify a different form -->
  </section>



</section>


</article>
        <!-- or if you want to list all articles from all sections instead, then replace txp:article with txp:article_custom -->

        <!-- add pagination links to foot of article/article listings if there are more articles available,
          this method is more flexibile than using simple txp:link_to_prev/txp:link_to_next or txp:older/txp:newer tags -->
        <p id="paginator">

        

          
          

          
            <span id="paginator-l" class="button disabled">&#8592; Older</span>
          
          
            <a id="paginator-r" href="http://binchewer.org/blog/index.php?id=4" title="Pile of code " class="button">Newer &#8594;</a>
          

        

        </p>

      </div> <!-- /main -->

  <!-- right (complementary) column -->
      <div role="complementary">
        <form role="search" method="get" action="http://binchewer.org/blog/">
  <h4><label for="search-textbox">Search</label></h4>
  <p><input id="search-textbox" type="search" name="q"><input type="submit" value="Go"></p>
</form> <!-- links by default to form: 'search_input.misc.txp' unless you specify a different form -->
  
        <!-- Feed links, default flavor is rss, so we don't need to specify a flavor on the first feed_link -->
        <p><a href="http://binchewer.org/blog/index.php?rss=1&amp;section=articles" title="RSS feed">RSS</a> / <a href="http://binchewer.org/blog/index.php?atom=1&amp;section=articles" title="Atom feed">Atom</a></p>

        <h4>External links</h4>
         <!-- links by default to form: 'plainlinks.link.txp' unless you specify a different form -->
      </div> <!-- /complementary -->

    </div> <!-- /.container -->
  </div> <!-- /.wrapper -->

<!-- footer -->
  <footer role="contentinfo">
    <p><small>Published with <a href="http://textpattern.com" rel="external" title="Go to the Textpattern website">Textpattern CMS</a>.</small></p>
  </footer>

<!-- JavaScript at the bottom for fast page loading, more info: http://developer.yahoo.com/performance/rules.html#js_bottom -->

  <!-- add your own JavaScript here -->

</body>
</html>
