http://spritesmods.com/?art=hddhack&page=6
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 20:07:29 GMT
Server: Apache/2.2.22 (Debian)
X-Powered-By: PHP/5.4.4-14+deb7u12
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 3746
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>Sprites mods - Hard disk hacking - Software flashing</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="style/style-new.css" />
<link rel="stylesheet" type="text/css" href="style/print.css" media="print" />
<link type="application/rss+xml" rel="alternate" title="Sprites Mods" href="http://spritesmods.com/rss.php" />
</head>
<body>

<div id="header"><span id="sitename"><span id="sitenamebig">SpritesMods</span>.com</span><h1>Hard disk hacking - Software flashing</h1></div>


<div id="left">
<p />
<a href="?art=main">Welcome</a><br /><ul id="mainmenu"><li><a href="?art=hardware">Hardware stuff</a></li><li><a href="?art=hacks">Hacks</a><ul id="submenu"><li><a href="?art=rtl8366sb">Dumb to managed switch conversion</a></li><li><a href="?art=zx3hack">Hacking the Kodak Zx3</a></li><li><a href="?art=vpx500">Hacking the VPx500</a></li><li><a href="?art=twitter1943">Twittering vintage arcade game</a></li><li><a href="?art=hddhack">Hard disk hacking</a></li><li><a href="?art=wtcluster">Cluster using WT-300s</a></li><li><a href="?art=ljdisplay">Standalone HPLJ display hack</a></li><li><a href="?art=keybled">Laptop keyboard LED</a></li><li><a href="?art=wskpsip">Convert a SMC WSKP100 to use SIP</a></li><li><a href="?art=sweexusb">Add USB to a Sweex LB000021 router</a></li><li><a href="?art=swordfish">Damocles' Swordfish</a></li><li><a href="?art=mouseeye">Optical mouse-cam</a></li><li><a href="?art=ledbl">LEDs replacing CCFL backlight</a></li><li><a href="?art=picframe">Use a cheap digital photoframe as a second display for your PC</a></li></ul></li><li><a href="?art=software">Software</a></li><li><a href="?art=consoles">Console hacking</a></li><li><a href="?art=security">Security</a></li><li><a href="?art=nabaztag">Nabaztag</a></li><li><a href="?art=about">About Spritesmods</a></li></ul></div>

<div id="right">
<div id="righttop">
<p /><a href="?art=hddhack&amp;page=1"><strong>Page 1</strong><br /></a>Intro<p /><a href="?art=hddhack&amp;page=2"><strong>Page 2</strong><br /></a>Parts on the PCB<p /><a href="?art=hddhack&amp;page=3"><strong>Page 3</strong><br /></a>Hooking up JTAG<p /><a href="?art=hddhack&amp;page=4"><strong>Page 4</strong><br /></a>Injecting code<p /><a href="?art=hddhack&amp;page=5"><strong>Page 5</strong><br /></a>Persistence<p /><strong>Page 6</strong><br />Software flashing<p /><a href="?art=hddhack&amp;page=7"><strong>Page 7</strong><br /></a>Other uses<p /><a href="?art=hddhack&amp;page=8"><strong>Page 8</strong><br /></a>Conclusion (+ discussion / remarks)<p>
</p>
</div>
<div id="rightbottom">
<p>
Do you like my hacking? If so, please consider leaving something in the<br />
</p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_donations">
<input type="hidden" name="business" value="AWHK8LYRDDS3C">
<input type="hidden" name="lc" value="GB">
<input type="hidden" name="item_name" value="Spritesmods.com">
<input type="hidden" name="no_note" value="0">
<input type="hidden" name="cn" value="Remarks">
<input type="hidden" name="no_shipping" value="1">
<input type="hidden" name="rm" value="1">
<input type="hidden" name="return" value="http://spritesmods.com/?art=main&amp;thanks=1">
<input type="hidden" name="currency_code" value="EUR">
<input type="hidden" name="bn" value="PP-DonationsBF:donate.png:NonHosted">
<input type="image" src="http://spritesmods.com/donate.png" border="0" name="submit" alt="PayPal, de veilige en complete manier van online betalen.">
<!--
<img alt="" border="0" src="https://www.paypalobjects.com/nl_NL/i/scr/pixel.gif" width="1" height="1">
-->
</form>

<p>
Or use Bitcoins:<br />
<script src="btc/coin.js"></script>
<script>
CoinWidgetCom.go({
	wallet_address: "16wKm29FmTLmYSrDtBXB4zLYGsqfrTwcEC"
	, currency: "bitcoin"
	, counter: "count"
	, alignment: "bl"
	, qrcode: true
	, auto_show: false
	, lbl_button: "Donate"
	, lbl_address: "My Bitcoin Address:"
	, lbl_count: "donations"
	, lbl_amount: "BTC"
});
</script>
</p>


<p>
<br />Current contents:
<br />EUR181 (about $240.73) and a bunch of cool hardware.
</p>


<p>
Follow Spritesmods on <a href="http://twitter.com/SpritesMods">Twitter</a>!
</p>
</div>
</div>
<div id="center">
<p><h1>Software flashing
</h1>
</p>
<!-- google_ad_section_start -->
<p>
While the flash mod was a good step forward, I still couldn't play out my 
imaginary hacker scenario: I don't think any server company accepts 'donations'
of hard disks with de- and re-soldered flash chips. I needed to find a way to
re-flash the chip while it was still soldered to the hard disk, preferably from
the PC the hard disk was connected to.
</p>
<p>
The Western Digital firmware upgrade tools proves this is possible: it's 
basically a tool you run under DOS to put new firmware to both the flash and
the service area aka the reserved sectors of the hard disk. According to the
Internet, the tools use so-called Vendor Specific Commands to There are also some
other tools that can meddle with the firmware: for example, there is a bit of
proof-of-concept <a href="http://www.recover.co.il/SA-cover/SA-cover.pdf">code</a>
that can use unused reserved sectors to hide away data. Finally, there's a set of
tools called <a href="http://idle3-tools.sourceforge.net/">idle3-tools</a> that
can be used to modify a byte in the firmware to modift the idle behaviour of the
hard disk. This code also uses VSCs, and does this using the 'official' way
using Linux scsi passthrough ioctls. I decided to 'borrow' this code, modify it
a bit and integrate it in fwtool. After some messing around and guessing VSC
parameters, fwtool could all of a sudden also read and write the flash
of a HD attached to the PC it's run on.
</p>
<p>
With this, my attack was complete. If a blackhat hacker had somehow
obtained root access to a server with this drive, he could use fwtool to remotely 
dump the flash of the disk, modify it and flash it back. Eventually, the owner of
the box will find out I am using his box for nefarious purposes and will probably
re-install the system, securing the way the hacker orginally entered the machine.
</p>
<p>
With the firmware hack in place, however, the attacker could tell the hard disk 
to do something nefarious with the new install. He'd need to trigger that 
behaviour first, though, and that could be done  by writing a certain magic string 
the firmware hack would look for to the disk. The magic string can be in any file; 
the attacker could for example upload a .jpeg-file with the string in it to the 
server. He could also request a file from the webserver with the magic string 
appended to the URL. That would eventually end up in the logs of the machines, 
triggering the exploit.
</p>
<p>
The hard disk firmware hack would then do something nefarious. For example, it 
could wait for the machine to read out the file /etc/shadow, where all the passwords
are stored on an Unix/Linux system, and modify the contents on-the-fly to something
the attacker hardcoded earlier. When the attacker would then try to log into the
system with his own password, the machine would check this password against the
now-modified /etc/shadow and the attacker would be free to login again.
</p>
<p>
Here's the demonstration I did at the presentation. You can see me try to log into 
the root account of the machine unsuccessfully. I then enable the hack and give it
a replacement password hash, namely for the password 'test123'. Because Linux 
caches the shadow file (like all files recently accessed), I have to generate a lot
of disk activity for the file to be 'pushed out' of the cache; that way, when I try 
to login again, Linux will be forced to fetch the shadow file from disk again. 
Finally, with the cache cleared, I can just log into the root account with the
faked test123 password.
</p>
<video width="456" height="344" controls>
<source src="hddhack/demo-pass.ogv" type="video/ogg">
</video>
<!-- google_ad_section_end -->
<p>	<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- singlebigad -->
	<ins class="adsbygoogle"
	     style="display:inline-block;width:728px;height:90px"
	     data-ad-client="ca-pub-6055011648930388"
	     data-ad-slot="3668631373"></ins>
	<script>
	(adsbygoogle = window.adsbygoogle || []).push({});
	</script>
	</p><p id="prevnext"><a href="?art=hddhack&amp;page=5">&laquo Prev</a>&nbsp;6&nbsp;<a href="?art=hddhack&amp;page=7">Next &raquo;</a></p><br /><div class="copy">&copy; 2006-2013 Sprite_tm - <a href="?art=contact&amp;af=Hard disk hacking">Contact</a></div></div>
</body>
</html>

