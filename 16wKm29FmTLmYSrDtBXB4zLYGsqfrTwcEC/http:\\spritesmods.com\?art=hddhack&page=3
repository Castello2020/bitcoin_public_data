http://spritesmods.com/?art=hddhack&page=3
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 11:57:40 GMT
Server: Apache/2.2.22 (Debian)
X-Powered-By: PHP/5.4.4-14+deb7u12
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 4865
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>Sprites mods - Hard disk hacking - Hooking up JTAG</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="style/style-new.css" />
<link rel="stylesheet" type="text/css" href="style/print.css" media="print" />
<link type="application/rss+xml" rel="alternate" title="Sprites Mods" href="http://spritesmods.com/rss.php" />
</head>
<body>

<div id="header"><span id="sitename"><span id="sitenamebig">SpritesMods</span>.com</span><h1>Hard disk hacking - Hooking up JTAG</h1></div>


<div id="left">
<p />
<a href="?art=main">Welcome</a><br /><ul id="mainmenu"><li><a href="?art=hardware">Hardware stuff</a></li><li><a href="?art=hacks">Hacks</a><ul id="submenu"><li><a href="?art=rtl8366sb">Dumb to managed switch conversion</a></li><li><a href="?art=zx3hack">Hacking the Kodak Zx3</a></li><li><a href="?art=vpx500">Hacking the VPx500</a></li><li><a href="?art=twitter1943">Twittering vintage arcade game</a></li><li><a href="?art=hddhack">Hard disk hacking</a></li><li><a href="?art=wtcluster">Cluster using WT-300s</a></li><li><a href="?art=ljdisplay">Standalone HPLJ display hack</a></li><li><a href="?art=keybled">Laptop keyboard LED</a></li><li><a href="?art=wskpsip">Convert a SMC WSKP100 to use SIP</a></li><li><a href="?art=sweexusb">Add USB to a Sweex LB000021 router</a></li><li><a href="?art=swordfish">Damocles' Swordfish</a></li><li><a href="?art=mouseeye">Optical mouse-cam</a></li><li><a href="?art=ledbl">LEDs replacing CCFL backlight</a></li><li><a href="?art=picframe">Use a cheap digital photoframe as a second display for your PC</a></li></ul></li><li><a href="?art=software">Software</a></li><li><a href="?art=consoles">Console hacking</a></li><li><a href="?art=security">Security</a></li><li><a href="?art=nabaztag">Nabaztag</a></li><li><a href="?art=about">About Spritesmods</a></li></ul></div>

<div id="right">
<div id="righttop">
<p /><a href="?art=hddhack&amp;page=1"><strong>Page 1</strong><br /></a>Intro<p /><a href="?art=hddhack&amp;page=2"><strong>Page 2</strong><br /></a>Parts on the PCB<p /><strong>Page 3</strong><br />Hooking up JTAG<p /><a href="?art=hddhack&amp;page=4"><strong>Page 4</strong><br /></a>Injecting code<p /><a href="?art=hddhack&amp;page=5"><strong>Page 5</strong><br /></a>Persistence<p /><a href="?art=hddhack&amp;page=6"><strong>Page 6</strong><br /></a>Software flashing<p /><a href="?art=hddhack&amp;page=7"><strong>Page 7</strong><br /></a>Other uses<p /><a href="?art=hddhack&amp;page=8"><strong>Page 8</strong><br /></a>Conclusion (+ discussion / remarks)<p>
</p>
</div>
<div id="rightbottom">
<p>
Do you like my hacking? If so, please consider leaving something in the<br />
</p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_donations">
<input type="hidden" name="business" value="AWHK8LYRDDS3C">
<input type="hidden" name="lc" value="GB">
<input type="hidden" name="item_name" value="Spritesmods.com">
<input type="hidden" name="no_note" value="0">
<input type="hidden" name="cn" value="Remarks">
<input type="hidden" name="no_shipping" value="1">
<input type="hidden" name="rm" value="1">
<input type="hidden" name="return" value="http://spritesmods.com/?art=main&amp;thanks=1">
<input type="hidden" name="currency_code" value="EUR">
<input type="hidden" name="bn" value="PP-DonationsBF:donate.png:NonHosted">
<input type="image" src="http://spritesmods.com/donate.png" border="0" name="submit" alt="PayPal, de veilige en complete manier van online betalen.">
<!--
<img alt="" border="0" src="https://www.paypalobjects.com/nl_NL/i/scr/pixel.gif" width="1" height="1">
-->
</form>

<p>
Or use Bitcoins:<br />
<script src="btc/coin.js"></script>
<script>
CoinWidgetCom.go({
	wallet_address: "16wKm29FmTLmYSrDtBXB4zLYGsqfrTwcEC"
	, currency: "bitcoin"
	, counter: "count"
	, alignment: "bl"
	, qrcode: true
	, auto_show: false
	, lbl_button: "Donate"
	, lbl_address: "My Bitcoin Address:"
	, lbl_count: "donations"
	, lbl_amount: "BTC"
});
</script>
</p>


<p>
<br />Current contents:
<br />EUR181 (about $240.73) and a bunch of cool hardware.
</p>


<p>
Follow Spritesmods on <a href="http://twitter.com/SpritesMods">Twitter</a>!
</p>
</div>
</div>
<div id="center">
<p><h1>Hooking up JTAG
</h1>
</p>
<!-- google_ad_section_start -->
<p>
Luckily, there are other ways to find out information about these ICs
than datasheets. One of my web searches actually resulted in something
useful.
</p>
<p>
what I found was a <a href="http://forum.hddguru.com/viewtopic.php?t=20324&start=">thread</a> from a guy called Dejan on the HDDGuru forums.
Dejan had managed to corrupt the internal flash of his hard disk
in some way and wanted to know if there's a way to either boot the 
controller from external flash, or a method to re-write the flash.
For five days, he doesn't get a reponse, but the guy is inventive: the
next thing he posts is the message that he has found the pinout of the
JTAG-port. That's a major find: the JTAG-port can be used to control
a controller like a puppet. You can stop it, restart it, modify memory,
set breakpoints etc with it. Dejan then figures out how to dump the
boot ROM of the controller, figures out there's a serial port on one
of the hard disk headers and manages to restore his flash ROM. He
then dumps a few more bits and pointers about the flash update process
before finally disappearing into the mists of the Internet again.
</p>
<p>
All this was pretty useful information: it told me at least the
Western Digital controllers seem to have an ARM-core that's accessible
over the JTAG-port. It also told me these hard disks usually have a 
serial port, which is usually unused but could be useful for debugging
my hack. With this, I should have enough information to start hacking.
</p>
<p>
So, this is my setup:<br />
<a href="http://meuk.spritesserver.nl/foto/foto/hdhack/IMG_2294c.JPG"><img src="http://meuk.spritesserver.nl/foto/foto/hdhack/tmb-IMG_2294c.JPG" /></a>
</p>
<p>
The red thing is an FT2232H-board, a cheap board you can get for about
EUR30 which can do JTAG and serial, as well as SPI-communications. It's
connected to the JTAG-interface of the hard disk, as well as the header
where the hard disk has its serial port. The HD is directly connected
to the SATA-port on my computers mainboard, as well as to an external 
ATX power supply. I use OpenOCD as the software to drive the JTAG-port.
</p>
<p>
Now, the question is: would it actually work? Dejan did this with 
a 2.5" 250G HD with an 88i6745-controller, and he detected an arm9-core.
I grabbed a 3.5" 2TB HD with an 88i9146-controller instead, which had
a different form factor and is a bit newer. Luckily, OpenOCD has a way
to detect what's on the JTAG chain by itself. This is what it found:<br />
<a href="http://meuk.spritesserver.nl/foto/foto/hdhack/multicore.png">
<img src="http://meuk.spritesserver.nl/foto/foto/hdhack/tmb-multicore.png" /></a>
</p>
<p>
This confused me for a bit... I expected a single tap, for the single ARM
core that's inthere... but instead, I found <i>three</i> taps... does
that mean this chip has three ARM-cores?
</p>
<p>
After some research, I found out that yes, the chip indeed seems to have
three cores. There's two Feroceons, which are quite powerful arm9-like 
cores, and a Cortex-M3 core, which is a bit smaller, more 
microcontroller-ish core. Some more playing around (and later research)
indicating the controllers all had different functions:
<ul>
<li>Feroceon 1 handles the physical reading and writing from/to the 
hard disk platters</li>
<li>Feroceon 2 handles the SATA-interface</li>
<li>Feroceon 2 also handles the cache and LBA to CHS translation</li>
<li>The Cortex-M3 handles... nothing? I could stop it and still have
all hard disk functions.</li>
</ul>
</p>
<p>
Now, what core to start hacking at? My target was to try and compromise
the security of a system by using hard disk firmware mods. The easiest
and probably hardest-to-detect way to do this was to modify data on the
fly. That way, the data on the disk wouldn't need to be changed and the
firmware could just make itself invisible. To do this, I would need
to find a suitable core to that kind of interception: I needed to
have a core that would have access to the data when it's in-transit 
from the disk to the SATA-cable, and also could be rigged to modify
the data while it was in between those two points.
</p>
<p>
Now, how would that data get from the HD platters to the SATA interface?
Here's where I used a bit of intuition. My reasoning went something 
like this:<br />
If the processors would use a standard memory copy, with them running
at 150MHz, they would only be able to reach 150*23/2=2.4Gbps, and in
practice most likely much less. The hard disk is specced at 6Gbps, so
there's probably some hardware acceleration involved. The most likely
hardware acceleration would be to use DMA. That would mean the data
is copied directly from the head reading logic to memory, without
active involvment of the processor. The same goes for the SATA-port:
the processor would have to only indicate where the data is, and the
DMA logic would take care of reading the data directly from memory. 
</p>
<p>
If this was the case, where would the memory that the DMA-engine would
be pointed at, be located? The cache of the hard disk would be a good
location: data read from the disk would need to be in cache anyway, so
it would make sense to copy it there immediately when reading from the 
disk. I figured out earlier that Feroceon 2 was responsible for the
cache handling; that'd make it a prime target for a hacking attempt.
</p>
<p>
So, I deduced that the data was read and written through DMA, without
any CPU action involved. Now the question was: Even if the CPUs 
<i>won't</i> touch the data in normal operation, <i>can</i> they
actually access it? To answer this question, I first used the 
JTAG-connection and a bit of disassembly to figure out the memory map
of the 2nd Feroceon:<br />
<a href="http://meuk.spritesserver.nl/foto/foto/hdhack/memmap.png">
<img src="http://meuk.spritesserver.nl/foto/foto/hdhack/tmb-memmap.png" /></a>
</p>
<p>
As you can see, the memory map is a bit fragmented. There are small
bits of RAM sprinkled around, there's some IO and IRQ space, and a
bit of internal boot ROM. There also is a big, 64MB segment of what
I suspected was the DRAM-chip with the cache in it. Let's find out
if this is actually true. First, I mounted the disk on my machine and
wrote 'Hello world!' to a file on it. Now, could I find the string 
in the 64MB mem region?
</p>
<a href="http://meuk.spritesserver.nl/foto/foto/hdhack/cachedemo.png">
<img src="http://meuk.spritesserver.nl/foto/foto/hdhack/tmb-cachedemo.png" /></a>
<p>
Yep, there it is. Seems the cache is accessible by the Feroceons and
mapped to the 64MB DRAM region.
</p>
<!-- google_ad_section_end -->
<p>	<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- singlebigad -->
	<ins class="adsbygoogle"
	     style="display:inline-block;width:728px;height:90px"
	     data-ad-client="ca-pub-6055011648930388"
	     data-ad-slot="3668631373"></ins>
	<script>
	(adsbygoogle = window.adsbygoogle || []).push({});
	</script>
	</p><p id="prevnext"><a href="?art=hddhack&amp;page=2">&laquo Prev</a>&nbsp;3&nbsp;<a href="?art=hddhack&amp;page=4">Next &raquo;</a></p><br /><div class="copy">&copy; 2006-2013 Sprite_tm - <a href="?art=contact&amp;af=Hard disk hacking">Contact</a></div></div>
</body>
</html>

