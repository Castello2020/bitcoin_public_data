http://spritesmods.com/?art=bwidow_fpga&page=4
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 14:42:57 GMT
Server: Apache/2.2.22 (Debian)
X-Powered-By: PHP/5.4.4-14+deb7u12
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 4989
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>Sprites mods - Black Widow in an FPGA - Deflection amps</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="style/style-new.css" />
<link rel="stylesheet" type="text/css" href="style/print.css" media="print" />
<link type="application/rss+xml" rel="alternate" title="Sprites Mods" href="http://spritesmods.com/rss.php" />
</head>
<body>

<div id="header"><span id="sitename"><span id="sitenamebig">SpritesMods</span>.com</span><h1>Black Widow in an FPGA - Deflection amps</h1></div>


<div id="left">
<p />
<a href="?art=main">Welcome</a><br /><ul id="mainmenu"><li><a href="?art=hardware">Hardware stuff</a><ul id="submenu"><li><a href="?art=rpi_arcade">Raspberry Pi micro arcade machine</a></li><li><a href="?art=mcportal">USB Minecraft portal</a></li><li><a href="?art=gbamidi">GameBoy Advance as a MIDI synthesizer</a></li><li><a href="?art=spitft">Connecting an LCD to a non-video-capable Linux device</a></li><li><a href="?art=lineccdts">Scanner CCD touchscreen conversion</a></li><li><a href="?art=bwidow_fpga">Black Widow in an FPGA</a></li><li><a href="?art=imx233-ws2811">WS2812 LEDs controlled by an iMX233</a></li><li><a href="?art=magnmicrobots">Duplicating the SRI magnet micro-robots</a></li><li><a href="?art=thermchromclk">Thermochromic paint clock</a></li><li><a href="?art=engarde">En Garde, a classifying capacitive touch sensor</a></li><li><a href="?art=avrfmtx">AVR-based FM-transmitter</a></li><li><a href="?art=stdalonejtag">Standalone JTAG programmer</a></li><li><a href="?art=avrcpm">CP/M on an AVR</a></li><li><a href="?art=doorbell">Wav-playing doorbell</a></li><li><a href="?art=rgbwall">Wall-lighting with RGB-leds</a></li><li><a href="?art=t5325_satapex">Adding SATA and PCIE to a HP T5325 thin client</a></li><li><a href="?art=ftdinand">FT2232H NAND flash reader</a></li><li><a href="?art=virtwiibar">Virtual Wii Sensor-bar</a></li><li><a href="?art=quizbtn">Quizshow buttons on the cheap</a></li><li><a href="?art=macsearm">Macintosh SE/arm</a></li><li><a href="?art=ledboardsolari">Solari ledboard controller</a></li><li><a href="?art=jello3dprinter">3d Jello printer</a></li><li><a href="?art=inker">Electronic Stamp</a></li><li><a href="?art=wcterror">Toilet terror alert</a></li><li><a href="?art=ledfanclock">Clock using a fan and a LED</a></li><li><a href="?art=streeplijst">Electronic beer tallier</a></li><li><a href="?art=knock2open">Knock to open</a></li><li><a href="?art=mechctr">Mechanical webpage hitcounter</a></li><li><a href="?art=ddrmat">Stealth DDR-mat</a></li><li><a href="?art=yamaharenewed">CM: Yamaha Renewed</a></li><li><a href="?art=bristlebot">Controllable bristlebot</a></li><li><a href="?art=novemini">NoveMini</a></li><li><a href="?art=xpad">Real HID for Xbox-controller</a></li><li><a href="?art=ledmatrix">96x48 LED-board</a></li><li><a href="?art=ucboost">Run an uC from an AA-battery</a></li><li><a href="?art=rocketlogger">Rocket acceleration logger</a></li><li><a href="?art=autobaud">Automatic baudrate converter</a></li><li><a href="?art=wtcpled">Temperature led for Weller WTCPs</a></li><li><a href="?art=minimalism">Electronic minimalism</a></li><li><a href="?art=rgbledlamp">RGB ledlamp</a></li><li><a href="?art=vfdcontroller">Simple VFD-controller</a></li><li><a href="?art=whiteboard">Online whiteboard</a></li></ul></li><li><a href="?art=hacks">Hacks</a></li><li><a href="?art=software">Software</a></li><li><a href="?art=consoles">Console hacking</a></li><li><a href="?art=security">Security</a></li><li><a href="?art=nabaztag">Nabaztag</a></li><li><a href="?art=about">About Spritesmods</a></li></ul></div>

<div id="right">
<div id="righttop">
<p /><a href="?art=bwidow_fpga&amp;page=1"><strong>Page 1</strong><br /></a>Intro<p /><a href="?art=bwidow_fpga&amp;page=2"><strong>Page 2</strong><br /></a>Prototyping<p /><a href="?art=bwidow_fpga&amp;page=3"><strong>Page 3</strong><br /></a>VHDL<p /><strong>Page 4</strong><br />Deflection amps<p /><a href="?art=bwidow_fpga&amp;page=5"><strong>Page 5</strong><br /></a>Color control, buttons, sound<p /><a href="?art=bwidow_fpga&amp;page=6"><strong>Page 6</strong><br /></a>Power supply<p /><a href="?art=bwidow_fpga&amp;page=7"><strong>Page 7</strong><br /></a>Building it<p /><a href="?art=bwidow_fpga&amp;page=8"><strong>Page 8</strong><br /></a>Conclusion (+ discussion / remarks)<p>
</p>
</div>
<div id="rightbottom">
<p>
Do you like my hacking? If so, please consider leaving something in the<br />
</p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_donations">
<input type="hidden" name="business" value="AWHK8LYRDDS3C">
<input type="hidden" name="lc" value="GB">
<input type="hidden" name="item_name" value="Spritesmods.com">
<input type="hidden" name="no_note" value="0">
<input type="hidden" name="cn" value="Remarks">
<input type="hidden" name="no_shipping" value="1">
<input type="hidden" name="rm" value="1">
<input type="hidden" name="return" value="http://spritesmods.com/?art=main&amp;thanks=1">
<input type="hidden" name="currency_code" value="EUR">
<input type="hidden" name="bn" value="PP-DonationsBF:donate.png:NonHosted">
<input type="image" src="http://spritesmods.com/donate.png" border="0" name="submit" alt="PayPal, de veilige en complete manier van online betalen.">
<!--
<img alt="" border="0" src="https://www.paypalobjects.com/nl_NL/i/scr/pixel.gif" width="1" height="1">
-->
</form>

<p>
Or use Bitcoins:<br />
<script src="btc/coin.js"></script>
<script>
CoinWidgetCom.go({
	wallet_address: "16wKm29FmTLmYSrDtBXB4zLYGsqfrTwcEC"
	, currency: "bitcoin"
	, counter: "count"
	, alignment: "bl"
	, qrcode: true
	, auto_show: false
	, lbl_button: "Donate"
	, lbl_address: "My Bitcoin Address:"
	, lbl_count: "donations"
	, lbl_amount: "BTC"
});
</script>
</p>


<p>
<br />Current contents:
<br />EUR181 (about $240.73) and a bunch of cool hardware.
</p>


<p>
Follow Spritesmods on <a href="http://twitter.com/SpritesMods">Twitter</a>!
</p>
</div>
</div>
<div id="center">
<p><h1>Deflection amps
</h1>
</p>
<!-- google_ad_section_start -->
<p>
While the hardware configured in the FPGA can do a lot, it's not really
possible to drive a CRT directly with it. I did need some extra hardware for that,
although I've tried to keep the amount of it to an absolute minimum. Hardware costs
money, extra lines of VHDL-code only cost time.
</p>
<p>
The best example probably is the DA-converter for the X- and Y-position. Atari mostly
used 10-bit discrete DA-converters. I could do that too, but I had an FPGA capable
of generating signals with astonishing speed: that had to be worth something?</p>
<p>
The first thing I thought about was a 
<a href="http://en.wikipedia.org/wiki/Pulse-width_modulation">PWM</a>-based 
DA-converter. They're not hard to implement, and as long as you make the cycle 
frequency much higher than the bandwith required, all you need to convert the
digital PWM-signal to an analog signal is a simple RC-filter. The problem, however,
was the amount of bits I needed to convert. I had a 100MHz clock signal in my FPGA 
and my PWM-counter would have a size of 10 bit, which would mean a pwm cycle frequency
of (100MHz/(2^10))=100KHz. This was dangerously close to the 100KHz bandwidth I 
expected to need and would mean a complicated filter to separate the PWM-noise from
the signal. That was not an option; I had to think of something different.
</p><p>
After much thought, I came up with a fairly elegant solution. Take not one 10-bit
but two 5-bit PWM-converters. Feed the highest 5 bits of the signal into the first
and the lowest 5 bits into the second PWM-converter. Now, take a look at the binary
digits of the 10-bit signal: if the second most significant bit is 1, the output
of the DA-converter should go up half the amount of volts than when the most significant
bit is 1. The same goes for all the other bits: if you compare a bit and the bit next
to it, the least significant of the two will always influence the output of the 
DA-converter by half that much as the more significant.
</p></p>
With that in mind, you can also calculate the difference between setting bit 10 and
bit 5: bit 5 should influence the signal (2^5)=32 times less than bit 10. Sooo... if
we mix the signals from both 5-bit PWM-converters in a ratio of 32:1, we should end
up with a signal that's linearly related to the original 10-bit signal again! And
because the PWM-registers can be half as small, with a 100MHz clock signal, the
PWM-cycle frequency is a nice (100MHz/(2^5))=3.125MHz, which is easily to get rid of
with a simple RC-filter.</p>
<p>
With that in mind, I ended up with a bit of VHDL code and a very simple output 
circuit:<br />
<img src="bwidow_fpga/pwm_mixer.png"> <br />
The circuit consists of two RC-filters, consisting of a capacitor and Rfh/Rfl.
With the various laws of electronics, you can calculate that Vout=(1-C)*PWMH+C*PWML,
with C being (Rfh+Rmh)/(Rfh+Rmh+Rfl+Rfl). In other words, by picking the resistors 
correctly, I should be able to get the ratios to about 32:1.
</p>
<p>
<img src="bwidow_fpga/schem_amp.png"><br />
This is the complete deflection amp (for one axis: there are two of these in the
complete circuit.) You can see the PWM-mixer on the right side: the resistors chosen
give a ratio of about 35:1, which for this purpose is close enough. We can't just
feed the output of that into the CRTs deflection coils, though: The coils of a CRT 
are fairly wieldy
things, and can require currents up to a few amps to quickly get the electron beam 
from one side of the screen to another. To do that, they also require fairly large
voltages: the 3.3V or 5V used by the logic isn't enough for that. And finally, the 
deflection of a CRT is current-controlled: the position of the electron beam depends
on the current through the coil, not the voltage over it. That's why the power opamp
is in the schematic. It's a LM685; its pinout is the same as the TDA2030 I used in the
prototype, but it has a higher bandwith.</p>
<p>
The power opamp is used as a controllable current source here: it tries to make sure the
voltage over Rshunt is the same as the input voltage. Because of Ohms law, the current
through the shunt resistor is linearily dependent on the current through the shunt
and the coil, so by varying the input voltage, we can vary the current through the coil.
All that's left is to center and scale the image, and that's what the two trimpotmeters
are for: by pulling the voltage to zero or -15V, the image can be scaled and centered
so it appears full-screen on the CRT.</p>
<p>
You might ask yourself: what's the 39 ohm resistor parallel to the deflection coil for?
The coil itself has a certain induction, but it isn't ideal, and because of some
parasitic influences, it can 'ring': when it gets a quickly changing current, it
can oscillate a bit. That gives an interesting but not too useful 
<a href="http://meuk.spritesserver.nl/foto/foto/misc14/IMG_5175.JPG">effect</a>...
The resistor dampens the coil a bit, cancelling the oscillations.
</p>


<!-- google_ad_section_end -->
<p>	<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- singlebigad -->
	<ins class="adsbygoogle"
	     style="display:inline-block;width:728px;height:90px"
	     data-ad-client="ca-pub-6055011648930388"
	     data-ad-slot="3668631373"></ins>
	<script>
	(adsbygoogle = window.adsbygoogle || []).push({});
	</script>
	</p><p id="prevnext"><a href="?art=bwidow_fpga&amp;page=3">&laquo Prev</a>&nbsp;4&nbsp;<a href="?art=bwidow_fpga&amp;page=5">Next &raquo;</a></p><br /><div class="copy">&copy; 2006-2013 Sprite_tm - <a href="?art=contact&amp;af=Black Widow in an FPGA">Contact</a></div></div>
</body>
</html>

