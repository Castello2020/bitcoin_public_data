http://spritesmods.com/?art=ledfanclock&page=3
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 03:41:46 GMT
Server: Apache/2.2.22 (Debian)
X-Powered-By: PHP/5.4.4-14+deb7u12
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 5291
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" 
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>Sprites mods - Clock using a fan and a LED - Software</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" type="text/css" href="style/style-new.css" />
<link rel="stylesheet" type="text/css" href="style/print.css" media="print" />
<link type="application/rss+xml" rel="alternate" title="Sprites Mods" href="http://spritesmods.com/rss.php" />
</head>
<body>

<div id="header"><span id="sitename"><span id="sitenamebig">SpritesMods</span>.com</span><h1>Clock using a fan and a LED - Software</h1></div>


<div id="left">
<p />
<a href="?art=main">Welcome</a><br /><ul id="mainmenu"><li><a href="?art=hardware">Hardware stuff</a><ul id="submenu"><li><a href="?art=rpi_arcade">Raspberry Pi micro arcade machine</a></li><li><a href="?art=mcportal">USB Minecraft portal</a></li><li><a href="?art=gbamidi">GameBoy Advance as a MIDI synthesizer</a></li><li><a href="?art=spitft">Connecting an LCD to a non-video-capable Linux device</a></li><li><a href="?art=lineccdts">Scanner CCD touchscreen conversion</a></li><li><a href="?art=bwidow_fpga">Black Widow in an FPGA</a></li><li><a href="?art=imx233-ws2811">WS2812 LEDs controlled by an iMX233</a></li><li><a href="?art=magnmicrobots">Duplicating the SRI magnet micro-robots</a></li><li><a href="?art=thermchromclk">Thermochromic paint clock</a></li><li><a href="?art=engarde">En Garde, a classifying capacitive touch sensor</a></li><li><a href="?art=avrfmtx">AVR-based FM-transmitter</a></li><li><a href="?art=stdalonejtag">Standalone JTAG programmer</a></li><li><a href="?art=avrcpm">CP/M on an AVR</a></li><li><a href="?art=doorbell">Wav-playing doorbell</a></li><li><a href="?art=rgbwall">Wall-lighting with RGB-leds</a></li><li><a href="?art=t5325_satapex">Adding SATA and PCIE to a HP T5325 thin client</a></li><li><a href="?art=ftdinand">FT2232H NAND flash reader</a></li><li><a href="?art=virtwiibar">Virtual Wii Sensor-bar</a></li><li><a href="?art=quizbtn">Quizshow buttons on the cheap</a></li><li><a href="?art=macsearm">Macintosh SE/arm</a></li><li><a href="?art=ledboardsolari">Solari ledboard controller</a></li><li><a href="?art=jello3dprinter">3d Jello printer</a></li><li><a href="?art=inker">Electronic Stamp</a></li><li><a href="?art=wcterror">Toilet terror alert</a></li><li><a href="?art=ledfanclock">Clock using a fan and a LED</a></li><li><a href="?art=streeplijst">Electronic beer tallier</a></li><li><a href="?art=knock2open">Knock to open</a></li><li><a href="?art=mechctr">Mechanical webpage hitcounter</a></li><li><a href="?art=ddrmat">Stealth DDR-mat</a></li><li><a href="?art=yamaharenewed">CM: Yamaha Renewed</a></li><li><a href="?art=bristlebot">Controllable bristlebot</a></li><li><a href="?art=novemini">NoveMini</a></li><li><a href="?art=xpad">Real HID for Xbox-controller</a></li><li><a href="?art=ledmatrix">96x48 LED-board</a></li><li><a href="?art=ucboost">Run an uC from an AA-battery</a></li><li><a href="?art=rocketlogger">Rocket acceleration logger</a></li><li><a href="?art=autobaud">Automatic baudrate converter</a></li><li><a href="?art=wtcpled">Temperature led for Weller WTCPs</a></li><li><a href="?art=minimalism">Electronic minimalism</a></li><li><a href="?art=rgbledlamp">RGB ledlamp</a></li><li><a href="?art=vfdcontroller">Simple VFD-controller</a></li><li><a href="?art=whiteboard">Online whiteboard</a></li></ul></li><li><a href="?art=hacks">Hacks</a></li><li><a href="?art=software">Software</a></li><li><a href="?art=consoles">Console hacking</a></li><li><a href="?art=security">Security</a></li><li><a href="?art=nabaztag">Nabaztag</a></li><li><a href="?art=about">About Spritesmods</a></li></ul></div>

<div id="right">
<div id="righttop">
<p /><a href="?art=ledfanclock&amp;page=1"><strong>Page 1</strong><br /></a>Intro<p /><a href="?art=ledfanclock&amp;page=2"><strong>Page 2</strong><br /></a>Hardware<p /><strong>Page 3</strong><br />Software (+ discussion / remarks)<p>
</p>
</div>
<div id="rightbottom">
<p>
Do you like my hacking? If so, please consider leaving something in the<br />
</p>
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_donations">
<input type="hidden" name="business" value="AWHK8LYRDDS3C">
<input type="hidden" name="lc" value="GB">
<input type="hidden" name="item_name" value="Spritesmods.com">
<input type="hidden" name="no_note" value="0">
<input type="hidden" name="cn" value="Remarks">
<input type="hidden" name="no_shipping" value="1">
<input type="hidden" name="rm" value="1">
<input type="hidden" name="return" value="http://spritesmods.com/?art=main&amp;thanks=1">
<input type="hidden" name="currency_code" value="EUR">
<input type="hidden" name="bn" value="PP-DonationsBF:donate.png:NonHosted">
<input type="image" src="http://spritesmods.com/donate.png" border="0" name="submit" alt="PayPal, de veilige en complete manier van online betalen.">
<!--
<img alt="" border="0" src="https://www.paypalobjects.com/nl_NL/i/scr/pixel.gif" width="1" height="1">
-->
</form>

<p>
Or use Bitcoins:<br />
<script src="btc/coin.js"></script>
<script>
CoinWidgetCom.go({
	wallet_address: "16wKm29FmTLmYSrDtBXB4zLYGsqfrTwcEC"
	, currency: "bitcoin"
	, counter: "count"
	, alignment: "bl"
	, qrcode: true
	, auto_show: false
	, lbl_button: "Donate"
	, lbl_address: "My Bitcoin Address:"
	, lbl_count: "donations"
	, lbl_amount: "BTC"
});
</script>
</p>


<p>
<br />Current contents:
<br />EUR181 (about $240.73) and a bunch of cool hardware.
</p>


<p>
Follow Spritesmods on <a href="http://twitter.com/SpritesMods">Twitter</a>!
</p>
</div>
</div>
<div id="center">
<p><h1>Software
</h1>
</p>
<!-- google_ad_section_start -->
<p>
The software is written to enable the user to configure the clock at run-time 
using only two buttons: the '+'-button increases the current setting, the 
'adv'-button saves the current setting and allows one to setup the next.</p>
<p>If the microcontroller is fresh from the programmer, the firmware doesn't
yet know what the hardware looks like, so stuff like the type of fan and the
angles the hands are on should be set up first. After that, the user can input
the current time and after that's confirmed, the clock will start running.</p>
<p>The software mainly works by using three interrupts: the first one
kicks in 500 times a second and is used for button debouncing and keeping time.
The second one is dynamically adjusted to kick in 60 times per rotation of the
fan and handles the showing of the hands by enabling and disabling the three
colors of the RGB-led. The third one kicks in every time the fan generates 
an RPM-pulse. When that happens, the microcontroller will evaluate the speed
at which the rotation-timer happens and adjust it when necessary.
</p>
<p>The software for the clock is written in avr-gcc and 
<a href="ledfanclock/ledclock.tgz">released</a> under the
GPL v3, so if you want, you can modify it to display a clock on anything 
rotating quickly enough. If you come up with something interesting, 
please let me know!</p>
<p>
Video of the led-fan-clock in action:<br>
<object width="425" height="350"> <param name="movie" value="http://www.youtube.com/v/J2vcXdDhoAk"> </param> <embed src="http://www.youtube.com/v/J2vcXdDhoAk" type="application/x-shockwave-flash" width="425" height="350"> </embed> </object>
</p><!-- google_ad_section_end -->
<p>	<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- singlebigad -->
	<ins class="adsbygoogle"
	     style="display:inline-block;width:728px;height:90px"
	     data-ad-client="ca-pub-6055011648930388"
	     data-ad-slot="3668631373"></ins>
	<script>
	(adsbygoogle = window.adsbygoogle || []).push({});
	</script>
	</p><p id="prevnext"><a href="?art=ledfanclock&amp;page=2">&laquo Prev</a>&nbsp;3&nbsp;</p><p /><strong>Last 10 comments</strong> <a href="?art=ledfanclock&amp;page=3&amp;showall=true">Show all</a><a id="cmtid2367"></a><div class="comment"><strong>samand wrote at 19 Apr 2014, 16.52:</strong><p>My fan is rotating clockwise and motion of clock hands on it is seen counterclockwise(The  motion of clock  hands  is seen like a clock in mirror).How can I change the program to have correct motion &amp; would you pls make this correction in final Hex, so that we have two Hex for clockwise &amp; counterclockwise fan rotating ?BTW: What is the role of test.c in program? </p></div><a id="cmtid2364"></a><div class="comment"><strong>samand wrote at 14 Apr 2014, 5.45:</strong><p>Thank you for your reply! What`s max &amp; min fan RPM for proper circuit performance?</p></div><a id="cmtid2363"></a><div class="comment"><strong>Evil.Spock wrote at 13 Apr 2014, 1.26:</strong><p>samand, The direction of rotation is irrelevant. It's the strobe rate of the LED that determines the perceived motion. Nice POV clock BTW. Personally, I would've used a 555 instead of a uC.</p></div><a id="cmtid2362"></a><div class="comment"><strong>samand wrote at 12 Apr 2014, 15.27:</strong><p>Good job,but for clockwise rotating fan what must we do?</p></div><a id="cmtid1574"></a><div class="comment"><strong>Sprite_tm wrote at 3 Mar 2011, 16.51:</strong><p>You can use any old 8MHz crystal. 10 or 12MHz makes the clock run faster; you'd have to change a few things in the code and recompile to make that work.</p></div><a id="cmtid1572"></a><div class="comment"><strong>makakasirapuka wrote at 2 Mar 2011, 23.34:</strong><p>Thank you for your reply! 
What crystal did you use in the project? What's the part number? Is there any other difference but for the frequency? What would happen if I use a 10MHz crystal or 12MHz? Should I change something in the code for the clock to work correctly? </p></div><a id="cmtid1571"></a><div class="comment"><strong>Sprite_tm wrote at 2 Mar 2011, 23.00:</strong><p>Yes, you could go without a crystal... but with the rc-osc having an 1% deviation, the clock could be running 14 minutes a day slow or fast. The warnings: Yes, I know they are there and what they warn about. It's basically the compiler being anal about syntax or processor-specific details, you can ignore them.</p></div><a id="cmtid1570"></a><div class="comment"><strong>makakasirapuka wrote at 2 Mar 2011, 0.11:</strong><p>holly shit! &amp;#25105;&amp;#19981;&amp;#24819; </p></div><a id="cmtid1569"></a><div class="comment"><strong>makakasirapuka wrote at 2 Mar 2011, 0.08:</strong><p>Probably, it's one of the most remarkable attiny2313 projects I've seen so far :-)
Is there a way to get rid of that 8MHz crystal? Why can't we set up the fuses in such a manner to use the inbuilt crystal? Besides, I used crosspack on a mac to compile your code and got several warnings... :

avr-gcc -c -mmcu=attiny2313 -I. -gstabs  -I ../core/ -Os -Wall -Wstrict-prototypes -std=gnu99  main.c -o main.o 
In file included from main.c:4:
io.h:14: warning: function declaration isn't a prototype
main.c:11: warning: function declaration isn't a prototype
main.c:22:2: warning: no newline at end of file
avr-gcc -c -mmcu=attiny2313 -I. -gstabs  -I ../core/ -Os -Wall -Wstrict-prototypes -std=gnu99  io.c -o io.o 
In file included from io.c:4:
io.h:14: warning: function declaration isn't a prototype
io.c:53: warning: function declaration isn't a prototype
io.c:81:2: warning: no newline at end of file
avr-gcc -c -mmcu=attiny2313 -I. -gstabs  -I ../core/ -Os -Wall -Wstrict-prototypes -std=gnu99  rtc.c -o rtc.o 
avr-gcc -c -mmcu=attiny2313 -I. -gstabs  -I ../core/ -Os -Wall -Wstrict-prototypes -std=gnu99  run.c -o run.o 
In file included from run.c:5:
io.h:14: warning: function declaration isn't a prototype
run.c: In function `__vector_4':
run.c:20: warning: unused variable `mux'
avr-gcc -c -mmcu=attiny2313 -I. -gstabs  -I ../core/ -Os -Wall -Wstrict-prototypes -std=gnu99  setup.c -o setup.o 
In file included from setup.c:4:
io.h:14: warning: function declaration isn't a prototype
setup.c:20: warning: function declaration isn't a prototype
setup.c: In function `init_offsets':
setup.c:21: warning: passing arg 1 of `eeprom_read_byte' makes pointer from integer without a cast
setup.c:22: warning: passing arg 1 of `eeprom_read_byte' makes pointer from integer without a cast
setup.c:23: warning: passing arg 1 of `eeprom_read_byte' makes pointer from integer without a cast
setup.c:24: warning: passing arg 1 of `eeprom_read_byte' makes pointer from integer without a cast
setup.c: In function `btn_tick':
setup.c:51: warning: passing arg 1 of `eeprom_write_byte' makes pointer from integer without a cast
setup.c:66: warning: passing arg 1 of `eeprom_write_byte' makes pointer from integer without a cast
setup.c:78: warning: passing arg 1 of `eeprom_write_byte' makes pointer from integer without a cast
setup.c:93: warning: passing arg 1 of `eeprom_write_byte' makes pointer from integer without a cast
avr-gcc -mmcu=attiny2313 -I. -gstabs  -I ../core/ -Os -Wall -Wstrict-prototypes -std=gnu99   main.o io.o rtc.o run.o setup.o   --output ledclock.elf     -lm
avr-objcopy -O ihex -R .eeprom ledclock.elf ledclock.hex
avr-objcopy -j .eeprom --set-section-flags=.eeprom=&quot;alloc,load&quot; \
	--change-section-lma .eeprom=0 -O ihex ledclock.elf ledclock.eep
avr-objcopy: --change-section-lma .eeprom=0x00000000 never used
</p></div><a id="cmtid1197"></a><div class="comment"><strong>sam wrote at 15 Dec 2009, 7.36:</strong><p>Awsome projects.... dont get tired of reading your articles. A+</p></div><a id="leavecmt"></a>
<div class="comment">
Leave a comment:<form method="post" action="?#leavecmt">
<p>
<input type="hidden" name="page" value="3" />
<input type="hidden" name="art" value="ledfanclock" />
<input type="hidden" name="capval" value="1499825233" />
Your name:<br />
<input type="text" name="name" value="" /><br />
What does this picture say?<br />
<img src="captcha/captcha.php?secret=245847854" alt="Sorry, this is a captcha" /><br />
<input type="hidden" name="capfld" value="jexjba" />
<input type="text" name="jexjba" /><br />
Your comment:<br />
<textarea name="comment" rows="5" cols="60"></textarea><br />
<input type="submit" name="postcomment" value="Comment" />
</p>
</form>
</div>
<br /><div class="copy">&copy; 2006-2013 Sprite_tm - <a href="?art=contact&amp;af=Clock using a fan and a LED">Contact</a></div></div>
</body>
</html>

