http://dailyjs.com/2012/07/26/mvstar-3/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 22:09:26 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:54 GMT
ETag: "104481-5904-4fedef2a5f580"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 6691
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Backbone.js: Hacker's Guide Part 2</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2012/07/26/mvstar-3">Backbone.js: Hacker's Guide Part 2</a></h2>

<div class="meta">
  26 Jul 2012 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#mvc">mvc</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#backbone.js">backbone.js</a>
    
      <a href="/tags.html#code-review">code-review</a>
    
  </span>
</div>

<div id="post">
<p><a href='/2012/07/19/mvstar-2/'>Last week</a> we looked at Backbone.js&#8217;s internals, covering configuration, server support, events, and models. I actually really enjoy looking at projects this way, it&#8217;s one of the best ways to learn new programming techniques. So let&#8217;s continue dissecting Backbone by taking a look at <code>Backbone.Collection</code>.</p>

<h3 id='constructor'>Constructor</h3>

<p><a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L549'>Backbone.Collection</a> is a constructor function that accepts an array of models and an options object.</p>

<p>As an aside, notice that <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L558'>void 0</a> is used in this code. To understand why, recall that <a href='https://developer.mozilla.org/en/JavaScript/Reference/Operators/void'>the void operator</a> returns <code>undefined</code>. Since ECMAScript 5, the <code>undefined</code> property isn&#8217;t writable, so it&#8217;s safe to use it. However, in earlier versions it was writable, which meant malicious code could technically take advantage of this fact by assigning a value to the <code>undefined</code> property of the <em>global object</em>. The <code>void</code> operator expects an expression, so <code>void 0</code> is considered the idiomatic way of safely obtaining <code>undefined</code>.</p>

<p>The constructor calls the <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L558'>reset</a> method, which removes existing models and adds new ones. This is similar to instantiating a collection with no models, and then manually calling <code>add</code> on each one.</p>

<h3 id='inheritance_and_mixins'>Inheritance and Mixins</h3>

<p>The <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L565'>Collection class inherits from Backbone.Events</a>. Events are used both publicly and internally. There&#8217;s a <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L577'>toJSON</a> method that iterates over each model and calls the model&#8217;s <code>toJSON</code> method. This brings up an interesting point: collections use methods from Underscore.js, but <code>Collection</code> doesn&#8217;t inherit from Underscore. Why not? Well, <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L863-875'>certain methods are manually assigned to Collection.prototype</a>, while others are rewritten in ways that make sense in Backbone. For example, the <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L748'>pluck</a> method works on model attributes, and <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L734'>sort</a> uses the <code>boundComparator</code> which has a slightly different API to <code>Array.prototype.sort</code>.</p>

<h3 id='adding_and_removing_items'>Adding and Removing Items</h3>

<p>Collections are basically an array of models with events, wrapped with convenient Underscore-like iterator methods. The <code>add</code> method is always called however models are added, which means it&#8217;s a good place to do housekeeping like <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L595-612'>preventing invalid models and duplicates</a> from being inserted into the collection. Models are also <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L616-620'>indexed by id</a>, and all model events are bound to <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L851'>_onModelEvent</a>. This method dynamically adds new models, removes deleted ones, and updates models with changes.</p>

<p>If the collection requires sorting, the <code>add</code> method will <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L636'>call sort</a> once all models have been processed. And, if the <code>silent</code> option isn&#8217;t set, an <code>add</code> event will be triggered for each model that was successfully added.</p>

<p>It naturally follows that the <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L650'>remove</a> method has a fair amount of work to do, given the complexity of <code>add</code>. The indexed ids must be deleted, and <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L842'>_removeReference</a> is called to remove the model&#8217;s reference back to the collection.</p>

<p>Deleting items in JavaScript is interesting, because we actually have the <code>delete</code> keyword to do this for us. However, <code>delete</code> is only used for properties, so the authors have used the <code>Array.prototype.splice</code> technique to delete models from the array. The <code>add</code> and <code>remove</code> methods also update the <code>length</code> property, which allows the collection to behave in an Array-like manner, and helps support the mixed-in Underscore methods.</p>

<p>Now take a look at the simplicity of the <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L721'>where</a> method. It basically loops over each model, comparing an attributes object. This is simple because the <code>filter</code> method is taken directly from Underscore.</p>

<h3 id='chainable_api'>Chainable API</h3>

<p>Another bit of sugar is the support for Underscore&#8217;s <a href='https://github.com/documentcloud/backbone/blob/ddefd21167c27d98fd1eb05a44e330a2313055f6/backbone.js#L816'>chain</a> method. This works by calling the original method with the current array of models and returning the result. In case you haven&#8217;t seen it before, the chainable API looks like this:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>collection</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>Collection</span><span class='p'>([</span>
  <span class='p'>{</span> <span class='nx'>name</span><span class='o'>:</span> <span class='s1'>&#39;Tim&#39;</span><span class='p'>,</span> <span class='nx'>age</span><span class='o'>:</span> <span class='mi'>5</span> <span class='p'>},</span>
  <span class='p'>{</span> <span class='nx'>name</span><span class='o'>:</span> <span class='s1'>&#39;Ida&#39;</span><span class='p'>,</span> <span class='nx'>age</span><span class='o'>:</span> <span class='mi'>26</span> <span class='p'>},</span>
  <span class='p'>{</span> <span class='nx'>name</span><span class='o'>:</span> <span class='s1'>&#39;Rob&#39;</span><span class='p'>,</span> <span class='nx'>age</span><span class='o'>:</span> <span class='mi'>55</span> <span class='p'>}</span>
<span class='p'>]);</span>

<span class='nx'>collection</span><span class='p'>.</span><span class='nx'>chain</span><span class='p'>()</span>
  <span class='p'>.</span><span class='nx'>filter</span><span class='p'>(</span><span class='kd'>function</span><span class='p'>(</span><span class='nx'>item</span><span class='p'>)</span> <span class='p'>{</span> <span class='k'>return</span> <span class='nx'>item</span><span class='p'>.</span><span class='nx'>get</span><span class='p'>(</span><span class='s1'>&#39;age&#39;</span><span class='p'>)</span> <span class='o'>&gt;</span> <span class='mi'>10</span><span class='p'>;</span> <span class='p'>})</span>
  <span class='p'>.</span><span class='nx'>map</span><span class='p'>(</span><span class='kd'>function</span><span class='p'>(</span><span class='nx'>item</span><span class='p'>)</span> <span class='p'>{</span> <span class='k'>return</span> <span class='nx'>item</span><span class='p'>.</span><span class='nx'>get</span><span class='p'>(</span><span class='s1'>&#39;name&#39;</span><span class='p'>);</span> <span class='p'>})</span>
  <span class='p'>.</span><span class='nx'>value</span><span class='p'>();</span>

<span class='c1'>// Will return [&#39;Ida&#39;, &#39;Rob&#39;]</span>
</code></pre>
</div>
<p>Some of the Backbone-specific method will return <code>this</code>, which means they can be chained as well:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>collection</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>Collection</span><span class='p'>();</span>

<span class='nx'>collection</span>
    <span class='p'>.</span><span class='nx'>add</span><span class='p'>({</span> <span class='nx'>name</span><span class='o'>:</span> <span class='s1'>&#39;John&#39;</span><span class='p'>,</span> <span class='nx'>age</span><span class='o'>:</span> <span class='mi'>23</span> <span class='p'>})</span>
    <span class='p'>.</span><span class='nx'>add</span><span class='p'>({</span> <span class='nx'>name</span><span class='o'>:</span> <span class='s1'>&#39;Harry&#39;</span><span class='p'>,</span> <span class='nx'>age</span><span class='o'>:</span> <span class='mi'>33</span> <span class='p'>})</span>
    <span class='p'>.</span><span class='nx'>add</span><span class='p'>({</span> <span class='nx'>name</span><span class='o'>:</span> <span class='s1'>&#39;Steve&#39;</span><span class='p'>,</span> <span class='nx'>age</span><span class='o'>:</span> <span class='mi'>41</span> <span class='p'>});</span>

<span class='nx'>collection</span><span class='p'>.</span><span class='nx'>pluck</span><span class='p'>(</span><span class='s1'>&#39;name&#39;</span><span class='p'>);</span>
<span class='c1'>// [&#39;John&#39;, &#39;Harry&#39;, &#39;Steve&#39;]</span>
</code></pre>
</div>
<h3 id='conclusion'>Conclusion</h3>

<p>I&#8217;ve been using Backbone for a while, and I&#8217;ve never really thought about how the <code>Backbone.Collection</code> methods can be chained. Sometimes it&#8217;s difficult to tell what&#8217;s possible though &#8211; once you&#8217;re in an Underscore chain you can&#8217;t use methods like <code>pluck</code> because Backbone&#8217;s models use the <code>get</code> method to access attributes, so you&#8217;ll end up with an array of <code>undefined</code> values.</p>

<p>Next week I&#8217;ll continue looking at Backbone by investing the formidable routing and history APIs.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2012/07/26/mvstar-3/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

