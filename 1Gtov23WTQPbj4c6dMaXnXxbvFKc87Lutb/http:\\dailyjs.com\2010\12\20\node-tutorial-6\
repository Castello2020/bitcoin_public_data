http://dailyjs.com/2010/12/20/node-tutorial-6/
HTTP/1.1 200 OK
Date: Tue, 22 Jul 2014 19:02:57 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Tue, 22 Jul 2014 17:17:00 GMT
ETag: "16c2f7-7c65-4fecb64373b00"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 8378
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Node Tutorial Part 6</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2010/12/20/node-tutorial-6">Node Tutorial Part 6</a></h2>

<div class="meta">
  20 Dec 2010 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#server">server</a>
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#lmawa">lmawa</a>
    
      <a href="/tags.html#nodepad">nodepad</a>
    
  </span>
</div>

<div id="post">
<p>Welcome to part 6 of <em>Let&#8217;s Make a Web App</em>, a tutorial series about building a web app with <a href="http://nodejs.org/">Node</a>.  This series will walk you through the major areas you&#8217;ll need to face when building your own applications.  These tutorials are tagged with <a href="/tags.html#lmawa">lmawa</a>.</p>
<p>Previous tutorials:</p>
<ul>
	<li><a href="http://dailyjs.com/2010/11/01/node-tutorial/">Part 1: Introduction</a></li>
	<li><a href="http://dailyjs.com/2010/11/08/node-tutorial-2/">Part 2: Installation and Skeleton App</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/4ea936b4b426012528fc722c7576391b48d5a0b7">4ea936b</a></li>
	<li><a href="http://dailyjs.com/2010/11/15/node-tutorial-3/">Part 3: RESTful Methods and Testing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/39e66cb9d11a67044495beb0de1934ac4d9c4786">39e66cb</a></li>
	<li><a href="http://dailyjs.com/2010/11/22/node-tutorial-4/">Part 4: Templates, Partials, Creating and Editing Documents</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/f66fdb5c3bebdf693f62884ffc06a40b93328bb5">f66fdb</a></li>
	<li><a href="http://dailyjs.com/2010/12/06/node-tutorial-5/">Part 5: Authentication, Sessions, Access Control Middleware</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/03fe9b272fea1beb98ffefcf5f7ed226c81c49fd">03fe9b</a></li>
</ul>
<p>Before starting this tutorial remember to start up a mongo daemon if your computer doesn&#8217;t run one automatically.</p>
<p>In the last part we looked at authentication and sessions.  We used the particularly cool concept of <em>middleware</em> to build some seamless access control.  This week I&#8217;m going to demonstrate how to make the interface more interesting using jQuery.</p>
<h3>Interface Design</h3>
<p>When I design interfaces I usually plan out a rough idea before developing the app.  This is usually known as top-down design.  Once the interface seems workable, I move on to develop the <span class="caps">API</span> with a simple interface and tests, just like we&#8217;ve been doing so far in this tutorial series.</p>
<p>I like to sketch out interfaces with graph paper, a mechanical pencil, and a good eraser.  I keep the sketches rough so my colleagues know they&#8217;re not finished designs, they&#8217;re ideas that will evolve as we discuss the project.</p>
<p><img src="/images/posts/nodepad-sketch.jpg" alt="" /></p>
<p>A simple sketch of Nodepad suggested the following:</p>
<ul>
	<li>The interface could use two panels like a desktop app, one for the list of notes and the other for the note body</li>
	<li>A save button could appear at the bottom, but an auto-save feature would be nice too</li>
	<li>Single-clicking a note loads it, double-click allows the title to be edited</li>
	<li>We need account settings for email/password change</li>
	<li>Editing could work with XMLHttpRequest, because we already have <span class="caps">JSON</span> support</li>
</ul>
<h3>Cheating</h3>
<p>One of the most important things when building interfaces is to cheat as much as possible.  When I&#8217;m programming I don&#8217;t spend hours working on code that&#8217;s already available in a well-written library, and the same can be said for design.  I don&#8217;t need to draw every icon I need, and I don&#8217;t need to reinvent the wheel for layouts either.</p>
<p>Today there are a lot of solutions available, from <span class="caps">CSS</span> frameworks to <span class="caps">GUI</span>-heavy projects like <a href="http://cappuccino.org/">Cappuccino</a>.  For Nodepad we&#8217;re going to use <a href="http://jqueryui.com/">jQuery UI</a> which sits in the middle.  It gives us a lot of bang for buck when combined with a solid theme.</p>
<p>For the theme, I&#8217;ve decided to use <a href="http://taitems.tumblr.com/post/482577430/introducing-aristo-a-jquery-ui-theme">Aristo</a> (<a href="http://www.warfuric.com/taitems/demo.html">demo</a>).  It&#8217;s not necessarily the best theme out there, but I&#8217;ve got a lot of experience using it and I think it looks great.</p>
<h3>Including Aristo and jQuery UI</h3>
<p>I&#8217;ve downloaded <a href="https://github.com/taitems/Aristo-jQuery-UI-Theme">Aristo from GitHub</a> and put it in <code>public/stylesheets/aristo</code>.  Then we just need to load jQuery UI and the new stylesheet in the <code>views/layout.jade</code> template:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">link</span><span class="p">(</span><span class="nx">rel</span><span class="o">=</span><span class="s1">&#39;stylesheet&#39;</span><span class="p">,</span> <span class="nx">href</span><span class="o">=</span><span class="s1">&#39;/stylesheets/aristo/jquery-ui-1.8.5.custom.css&#39;</span><span class="p">)</span>
<span class="nx">script</span><span class="p">(</span><span class="nx">type</span><span class="o">=</span><span class="s1">&#39;text/javascript&#39;</span><span class="p">,</span> <span class="nx">src</span><span class="o">=</span><span class="s1">&#39;https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.7/jquery-ui.min.js&#39;</span><span class="p">)</span>
</code></pre>
</div>
<h3>Page Structure</h3>
<p>Our interface needs two columns, a header, a document body for editing, and some buttons for document management.  In Jade it might look like this:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">div</span><span class="p">(</span><span class="kr">class</span><span class="o">=</span><span class="s1">&#39;outline-view&#39;</span><span class="p">,</span> <span class="nx">id</span><span class="o">=</span><span class="s1">&#39;left&#39;</span><span class="p">)</span>
  <span class="nx">div</span><span class="p">(</span><span class="nx">id</span><span class="o">=</span><span class="s1">&#39;DocumentTitles&#39;</span><span class="p">)</span>
    <span class="nx">ul</span><span class="p">(</span><span class="nx">id</span><span class="o">=</span><span class="s1">&#39;document-list&#39;</span><span class="p">)</span>
      <span class="o">-</span> <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">documents</span><span class="p">)</span>
        <span class="nx">li</span>
          <span class="nx">a</span><span class="p">(</span><span class="nx">id</span><span class="o">=</span><span class="s1">&#39;document-title-&#39;</span> <span class="o">+</span> <span class="nx">documents</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">id</span><span class="p">,</span> <span class="nx">href</span><span class="o">=</span><span class="s1">&#39;/documents/&#39;</span> <span class="o">+</span> <span class="nx">documents</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">id</span><span class="p">)</span>
            <span class="o">=</span><span class="nx">documents</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">title</span>

  <span class="nx">ul</span><span class="p">(</span><span class="kr">class</span><span class="o">=</span><span class="s1">&#39;toolbar&#39;</span><span class="p">)</span>
    <span class="nx">li</span>
      <span class="nx">a</span><span class="p">(</span><span class="nx">href</span><span class="o">=</span><span class="s1">&#39;/documents/new&#39;</span><span class="p">)</span>
        <span class="o">+</span>
    <span class="nx">li</span>
      <span class="nx">a</span><span class="p">(</span><span class="nx">href</span><span class="o">=</span><span class="s1">&#39;#&#39;</span><span class="p">,</span> <span class="nx">id</span><span class="o">=</span><span class="s1">&#39;delete-document&#39;</span><span class="p">)</span>
        <span class="o">-</span>

<span class="nx">div</span><span class="p">(</span><span class="kr">class</span><span class="o">=</span><span class="s1">&#39;content-divider&#39;</span><span class="p">)</span>

<span class="nx">div</span><span class="p">(</span><span class="kr">class</span><span class="o">=</span><span class="s1">&#39;content&#39;</span><span class="p">)</span>
  <span class="nx">div</span><span class="p">(</span><span class="nx">id</span><span class="o">=</span><span class="s1">&#39;editor-container&#39;</span><span class="p">)</span>
    <span class="nx">textarea</span><span class="p">(</span><span class="nx">name</span><span class="o">=</span><span class="s1">&#39;d[data]&#39;</span><span class="p">,</span> <span class="nx">id</span><span class="o">=</span><span class="s1">&#39;editor&#39;</span><span class="p">)</span>
      <span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span>

<span class="nx">ul</span><span class="p">(</span><span class="nx">id</span><span class="o">=</span><span class="s1">&#39;controls&#39;</span><span class="p">,</span><span class="kr">class</span><span class="o">=</span><span class="s1">&#39;toolbar&#39;</span><span class="p">)</span>
  <span class="nx">li</span>
    <span class="nx">a</span><span class="p">(</span><span class="nx">href</span><span class="o">=</span><span class="s1">&#39;#&#39;</span><span class="p">,</span> <span class="nx">id</span><span class="o">=</span><span class="s1">&#39;save-button&#39;</span><span class="p">)</span> <span class="nx">Save</span>
</code></pre>
</div>
<p>The first part, <code>outline-view</code> is a div that contains the document list.  This is the code we&#8217;ve seen before.  I&#8217;ve positioned these with <code>absolute</code> and I&#8217;m using some JavaScript on <code>resize</code> and <code>focus</code> to resize the document list and button toolbars.</p>
<p>The selected document is displayed using some <span class="caps">CSS</span> gradients:</p>
<div class="highlight"><pre><code class="css"><span class="nc">.outline-view</span> <span class="nt">ul</span> <span class="nc">.selected</span> <span class="p">{</span>
  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
  <span class="k">background-color</span><span class="o">:</span> <span class="m">#8897ba</span><span class="p">;</span>
  <span class="k">background</span><span class="o">:</span> <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">gradient</span><span class="p">(</span><span class="n">linear</span><span class="o">,</span> <span class="k">left</span> <span class="k">top</span><span class="o">,</span> <span class="k">left</span> <span class="k">bottom</span><span class="o">,</span> <span class="n">from</span><span class="p">(</span><span class="m">#b2bed7</span><span class="p">)</span><span class="o">,</span> <span class="n">to</span><span class="p">(</span><span class="m">#8897ba</span><span class="p">));</span>
  <span class="k">background</span><span class="o">:</span> <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">linear</span><span class="o">-</span><span class="n">gradient</span><span class="p">(</span><span class="k">top</span><span class="o">,</span>  <span class="m">#b2bed7</span><span class="o">,</span>  <span class="m">#8897ba</span><span class="p">);</span>
<span class="p">}</span>
</code></pre>
</div>
<p>It doesn&#8217;t matter if browsers don&#8217;t support CSS3 gradients, it&#8217;ll look fine with just the darker colour.</p>
<h3>Selecting Documents</h3>
<p>Recall that our <span class="caps">API</span> requires <code>.json</code> to be appended to the <span class="caps">URL</span> to get <span class="caps">JSON</span> data back.  We just need some simple jQuery event handling to load the document from the server:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#document-list li a&#39;</span><span class="p">).</span><span class="nx">live</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">li</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>

  <span class="nx">$</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">href</span> <span class="o">+</span> <span class="s1">&#39;.json&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#document-list .selected&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;selected&#39;</span><span class="p">);</span>
    <span class="nx">li</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;selected&#39;</span><span class="p">);</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#editor&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#editor&#39;</span><span class="p">).</span><span class="nx">focus</span><span class="p">();</span>
  <span class="p">});</span>

  <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
<span class="p">});</span>
</code></pre>
</div>
<p>This binds a click handler that will fire whenever a document title is clicked.  It fills out the <code>textarea</code> with the <code>data</code> value from the <span class="caps">JSON</span> response.  Rather than a normal event, <code>live</code> is used to set up a delegate in case the document list changes.</p>
<h3>Saving Documents</h3>
<p>Something I like to do when creating dynamic interfaces is to set id attributes based on database IDs, using a simple naming convention.  In Nodepad I&#8217;ve used <span class="caps">DOM</span> ids like this: <em>document-844ce17994ba1b87d359000001</em>.  To retrieve the database ID we just need to get the last part, which is easy if we split on the hyphens.</p>
<p>Once that convention is established, we can use a mini jQuery plugin to extract item IDs:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">itemID</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">items</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">);</span>
    <span class="k">return</span> <span class="nx">items</span><span class="p">[</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">exception</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre>
</div>
<p>This makes saving documents when the save button is pressed straightforward enough:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#save-button&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">id</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#document-list .selected&#39;</span><span class="p">).</span><span class="nx">itemID</span><span class="p">(),</span>
      <span class="nx">params</span> <span class="o">=</span> <span class="p">{</span> <span class="nx">d</span><span class="o">:</span> <span class="p">{</span> <span class="nx">data</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#editor&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">id</span> <span class="p">}</span> <span class="p">};</span>
  <span class="nx">$</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s1">&#39;/documents/&#39;</span> <span class="o">+</span> <span class="nx">id</span> <span class="o">+</span> <span class="s1">&#39;.json&#39;</span><span class="p">,</span> <span class="nx">params</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Saved, will return JSON</span>
  <span class="p">});</span>
</code></pre>
</div>
<p>There isn&#8217;t actually a <span class="caps">HTTP</span> verb for <em>put</em> in jQuery, so I defined one:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">$</span><span class="p">.</span><span class="nx">put</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">success</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">data</span><span class="p">.</span><span class="nx">_method</span> <span class="o">=</span> <span class="s1">&#39;PUT&#39;</span><span class="p">;</span>
  <span class="nx">$</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">data</span><span class="p">,</span> <span class="nx">success</span><span class="p">,</span> <span class="s1">&#39;json&#39;</span><span class="p">);</span>
<span class="p">};</span>
</code></pre>
</div>
<h3>Progress</h3>
<p><img src="/images/posts/nodepad-progress.png" alt="" /></p>
<p>We haven&#8217;t actually used any jQuery UI so far, but we&#8217;ll get to that in the next part.  So far we&#8217;ve got a simple little editor that&#8217;s starting to look like something more friendly and usable.</p>
<p>I haven&#8217;t had time to browser test yet, so stick to WebKit or Firefox.</p>
<p>The latest Nodepad commit was <a href="https://github.com/alexyoung/nodepad/tree/dd40b5917bf1e59597395425941cc74607110791">dd40b</a>.</p>
<p><strong>Update</strong>: I&#8217;ve changed the <a href="https://github.com/alexyoung/nodepad">Nodepad <span class="caps">README</span></a> to include more details on library, binary and operating systems that I&#8217;ve tested it against.  This may help people who&#8217;ve been having trouble running it.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
      <li>
        <div>18 Jul 2014</div>
        <a href="/2014/07/18/lazy-json-undo">Undo with Object.observe</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2010/12/20/node-tutorial-6/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

