http://dailyjs.com/2011/03/17/framework-54/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 11:53:40 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Tue, 22 Jul 2014 17:17:00 GMT
ETag: "16c281-66cb-4fecb64373b00"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 6939
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Let's Make a Framework: CSS Manipulation</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2011/03/17/framework-54">Let's Make a Framework: CSS Manipulation</a></h2>

<div class="meta">
  17 Mar 2011 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#frameworks">frameworks</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#lmaf">lmaf</a>
    
      <a href="/tags.html#documentation">documentation</a>
    
      <a href="/tags.html#dom">dom</a>
    
      <a href="/tags.html#css">css</a>
    
  </span>
</div>

<div id="post">
<p>Welcome to part 54 of <em>Let&#8217;s Make a Framework</em>, the ongoing series about building a JavaScript framework.</p>
<p>If you haven&#8217;t been following along, these articles are tagged with <a href="http://dailyjs.com/tags.html#lmaf">lmaf</a>.  The project we&#8217;re creating is called <a href="http://github.com/alexyoung/turing.js">Turing</a>.  Documentation is available at <a href="http://turingjs.com/">turingjs.com</a>.</p>
<p>Last week I took a look at how jQuery manipulates the <span class="caps">DOM</span> using <code>$.html()</code>.  This week I&#8217;m going to discuss how jQuery lets us get and set <span class="caps">CSS</span> properties with <code>.css</code>.</p>
<h3>jQuery&#8217;s <code>.css()</code> Method</h3>
<p>The <code>.css()</code> method can both get and set <span class="caps">CSS</span> values on attributes.  The reason why this is useful is &#8212; you&#8217;ve guessed it &#8212; browser incompatibilities.  Standards-compliant browsers provide the <a href="https://developer.mozilla.org/en/DOM:window.getComputedStyle" title="">getComputedStyle</a> method, while Internet Explorer uses <code>currentStyle</code> and <code>runtimeStyle</code>.</p>
<p>jQuery also returns the correct value for both <span class="caps">CSS</span> and <span class="caps">DOM</span> naming schemes: <code>.css('background-color')</code> will return the same value as <code>.css('backgroundColor')</code>.</p>
<p>Even though accessing an element&#8217;s <code>style</code> property, jQuery&#8217;s <span class="caps">API</span> provides a more consistent and less error-prone way of programming.</p>
<h3>Internals</h3>
<p>jQuery groups this functionality into <a href="https://github.com/jquery/jquery/blob/master/src/css.js">css.js</a>.  Getting values uses <code>jQuery.css(elem, name)</code>, while setting uses <code>jQuery.style(elem, name, value)</code>.</p>
<h3><code>jQuery.css</code></h3>
<p>The first thing to note is the <code>camelCase</code> method, which is used quite early on:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">css</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">elem</span><span class="p">,</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">extra</span> <span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Make sure that we&#39;re working with the right name</span>
  <span class="kd">var</span> <span class="nx">ret</span><span class="p">,</span> <span class="nx">origName</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span> <span class="nx">name</span> <span class="p">),</span>
    <span class="nx">hooks</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span> <span class="nx">origName</span> <span class="p">];</span>
</code></pre>
</div>
<p>This is a very simple method that uses a regular expression to transform dashed strings to <span class="caps">DOM</span> properties:</p>
<div class="highlight"><pre><code class="javascript"><span class="c1">// rdashAlpha = /-([a-z])/ig</span>
<span class="c1">// fcamelCase = function( all, letter ) {</span>
<span class="c1">//   return letter.toUpperCase();</span>
<span class="c1">// };</span>

<span class="nx">camelCase</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">string</span> <span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">string</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span> <span class="nx">rdashAlpha</span><span class="p">,</span> <span class="nx">fcamelCase</span> <span class="p">);</span>
<span class="p">}</span>
</code></pre>
</div>
<p>Which works like this:</p>
<div class="highlight"><pre><code class="javascript"><span class="s1">&#39;background-color&#39;</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-([a-z])/ig</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">all</span><span class="p">,</span> <span class="nx">letter</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">letter</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span> <span class="p">})</span>

<span class="o">&gt;&gt;</span> <span class="s1">&#39;backgroundColor&#39;</span>
</code></pre>
</div>
<p>This value is kept and referred to as originName.  This is then used with <code>cssProps</code> which helps deal with special cases.  The &#8220;hooks&#8221; refer to <span class="caps">CSS</span> hooks, which is jQuery&#8217;s way of making <span class="caps">CSS</span> getting and setting more extensible.</p>
<div class="highlight"><pre><code class="javascript"><span class="c1">// cssProps: {</span>
<span class="c1">//  &quot;float&quot;: jQuery.support.cssFloat ? &quot;cssFloat&quot; : &quot;styleFloat&quot;</span>
<span class="c1">// },</span>

<span class="c1">// Back in the CSS function:</span>
<span class="nx">name</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">cssProps</span><span class="p">[</span> <span class="nx">origName</span> <span class="p">]</span> <span class="o">||</span> <span class="nx">origName</span><span class="p">;</span>

<span class="c1">// If a hook was provided get the computed value from there</span>
<span class="k">if</span> <span class="p">(</span> <span class="nx">hooks</span> <span class="o">&amp;&amp;</span> <span class="s2">&quot;get&quot;</span> <span class="k">in</span> <span class="nx">hooks</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nx">ret</span> <span class="o">=</span> <span class="nx">hooks</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span> <span class="nx">elem</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">extra</span> <span class="p">))</span> <span class="o">!==</span> <span class="kc">undefined</span> <span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">ret</span><span class="p">;</span>

<span class="c1">// Otherwise, if a way to get the computed value exists, use that</span>
<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span> <span class="nx">curCSS</span> <span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">curCSS</span><span class="p">(</span> <span class="nx">elem</span><span class="p">,</span> <span class="nx">name</span><span class="p">,</span> <span class="nx">origName</span> <span class="p">);</span>
<span class="p">}</span>
</code></pre>
</div>
<p>If none of the hooks match, <code>curCSS</code> is called.  This is actually a reference to the <code>getComputedStyle</code> or <code>currentStyle</code> method used to extract <span class="caps">CSS</span> values.  jQuery wraps these methods with its own functions to make them behave more consistently.  For example, the <code>currentStyle</code> function converts sizes to pixels based on a hack <a href="http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291">written by Dean Edwards in 2007</a>.</p>
<p>Both of the calculated names are passed to <code>getComputedStyle</code> and used to extracted the value from a query against <code>document.defaultView.getComputedStyle</code> (or IE&#8217;s equivalent).</p>
<h3><code>jQuery.style</code></h3>
<p>The <code>.style</code> method sets style properties, and works with various signatures:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;selector&#39;</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span> <span class="s1">&#39;background-color&#39;</span><span class="o">:</span> <span class="s1">&#39;blue&#39;</span> <span class="p">});</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;selector&#39;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;blue&#39;</span><span class="p">);</span>
</code></pre>
</div>
<p>The first thing it does is checks the element is valid for this type of operation:</p>
<div class="highlight"><pre><code class="javascript"><span class="c1">// Don&#39;t set styles on text and comment nodes</span>
<span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">elem</span> <span class="o">||</span> <span class="nx">elem</span><span class="p">.</span><span class="nx">nodeType</span> <span class="o">===</span> <span class="mi">3</span> <span class="o">||</span> <span class="nx">elem</span><span class="p">.</span><span class="nx">nodeType</span> <span class="o">===</span> <span class="mi">8</span> <span class="o">||</span> <span class="o">!</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span> <span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>
<p>We&#8217;ve seen <a href="https://developer.mozilla.org/en/nodeType">nodeType</a> used like this frequently in this series.  The next part looks a lot like <code>.css()</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="c1">// Make sure that we&#39;re working with the right name</span>
<span class="kd">var</span> <span class="nx">ret</span><span class="p">,</span> <span class="nx">origName</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span> <span class="nx">name</span> <span class="p">),</span>
  <span class="nx">style</span> <span class="o">=</span> <span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span> <span class="nx">hooks</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">cssHooks</span><span class="p">[</span> <span class="nx">origName</span> <span class="p">];</span>

<span class="nx">name</span> <span class="o">=</span> <span class="nx">jQuery</span><span class="p">.</span><span class="nx">cssProps</span><span class="p">[</span> <span class="nx">origName</span> <span class="p">]</span> <span class="o">||</span> <span class="nx">origName</span><span class="p">;</span>
</code></pre>
</div>
<p>When a value to set is present, some interesting checks are performed:</p>
<div class="highlight"><pre><code class="javascript"><span class="c1">// Make sure that NaN and null values aren&#39;t set. See: #7116</span>
<span class="k">if</span> <span class="p">(</span> <span class="k">typeof</span> <span class="nx">value</span> <span class="o">===</span> <span class="s2">&quot;number&quot;</span> <span class="o">&amp;&amp;</span> <span class="nb">isNaN</span><span class="p">(</span> <span class="nx">value</span> <span class="p">)</span> <span class="o">||</span> <span class="nx">value</span> <span class="o">==</span> <span class="kc">null</span> <span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// If a number was passed in, add &#39;px&#39; to the (except for certain CSS properties)</span>
<span class="k">if</span> <span class="p">(</span> <span class="k">typeof</span> <span class="nx">value</span> <span class="o">===</span> <span class="s2">&quot;number&quot;</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">jQuery</span><span class="p">.</span><span class="nx">cssNumber</span><span class="p">[</span> <span class="nx">origName</span> <span class="p">]</span> <span class="p">)</span> <span class="p">{</span>
  <span class="nx">value</span> <span class="o">+=</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// If a hook was provided, use that value, otherwise just set the specified value</span>
<span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nx">hooks</span> <span class="o">||</span> <span class="o">!</span><span class="p">(</span><span class="s2">&quot;set&quot;</span> <span class="k">in</span> <span class="nx">hooks</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">hooks</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span> <span class="nx">elem</span><span class="p">,</span> <span class="nx">value</span> <span class="p">))</span> <span class="o">!==</span> <span class="kc">undefined</span> <span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Wrapped to prevent IE from throwing errors when &#39;invalid&#39; values are provided</span>
  <span class="c1">// Fixes bug #5509</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="nx">style</span><span class="p">[</span> <span class="nx">name</span> <span class="p">]</span> <span class="o">=</span> <span class="nx">value</span><span class="p">;</span>
  <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{}</span>
<span class="p">}</span>
</code></pre>
</div>
<p>Other than the weird bugs worked around with the <code>if</code> statements, writing styles simply boils down to mapping to a camel case name then writing the element&#8217;s property.</p>
<h3>Conclusion</h3>
<p>jQuery, and frameworks like it, give us a seamless way of getting and setting style properties.  It would be a fairly simple task if it wasn&#8217;t for those pesky browser bugs and incompatibilities.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
      <li>
        <div>18 Jul 2014</div>
        <a href="/2014/07/18/lazy-json-undo">Undo with Object.observe</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2011/03/17/framework-54/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

