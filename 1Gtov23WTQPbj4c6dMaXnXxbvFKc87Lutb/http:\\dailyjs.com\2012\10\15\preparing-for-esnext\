http://dailyjs.com/2012/10/15/preparing-for-esnext/
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 14:39:36 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:54 GMT
ETag: "e8802-67f0-4fedef2a5f580"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 8279
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: ES6 for Node</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2012/10/15/preparing-for-esnext">ES6 for Node</a></h2>

<div class="meta">
  15 Oct 2012 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#ES6">ES6</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
  </span>
</div>

<div id="post">
<p>In <a href='https://brendaneich.com/2012/10/harmony-of-dreams-come-true/'>Harmony of Dreams Come True</a>, Brendan Eich discusses the &#8220;new-in-ES6 stuff&#8221; that is starting to come to fruition. Although his discussion mostly focuses on Mozilla-based implementations, he does relate upcoming language features to a wide range of JavaScript projects, including games. This is relevant to Node developers because ECMAScript 6 <em>is</em> happening, and changes are already present in V8 itself.</p>

<p>Let&#8217;s look at some of these changes in a moment. For now you might be wondering how to track such changes as they become available in Node. When new builds of Node are released, the version of V8 is usually mentioned if it has changed. You can also view the commit history on GitHub for a given release tag to see what version of V8 has been used, or take a look at the value of <a href='http://nodejs.org/docs/latest/api/all.html#all_process_versions'>process.versions</a>:</p>
<div class='highlight'><pre><code class='text'>~  node -e &#39;console.log(process.versions)&#39;
{ http_parser: &#39;1.0&#39;,
  node: &#39;0.8.12&#39;,
  v8: &#39;3.11.10.22&#39;,
  ares: &#39;1.7.5-DEV&#39;,
  uv: &#39;0.8&#39;,
  zlib: &#39;1.2.3&#39;,
  openssl: &#39;1.0.0f&#39; }
</code></pre>
</div>
<p>Once you&#8217;ve got the V8 version, you can check take a look at the <a href='http://v8.googlecode.com/svn/trunk/ChangeLog'>V8 ChangeLog</a> to see what has been included. Just searching that text for &#8220;Harmony&#8221; shows the following for Node 0.8.12:</p>

<ul>
<li>Block scoping</li>

<li>Harmony semantics for typeof</li>

<li><code>let</code> and <code>const</code></li>

<li><code>Map</code> and <code>WeakMap</code></li>

<li>Module declaration</li>

<li>The <code>Proxy</code> prototype</li>
</ul>

<h3 id='running_node_with_harmony_options'>Running Node with Harmony Options</h3>

<p>Typing <code>node --v8-options</code> shows all of the available V8 options:</p>

<ul>
<li><code>--harmony_typeof</code>: Enable harmony semantics for typeof</li>

<li><code>--harmony_scoping</code>: Enable harmony block scoping</li>

<li><code>--harmony_modules</code>: Enable harmony modules (implies block scoping)</li>

<li><code>--harmony_proxies</code>: Enable harmony proxies</li>

<li><code>--harmony_collections</code>: Enable harmony collections (sets, maps, and weak maps)</li>

<li><code>--harmony</code>: Enable all harmony features (except typeof)</li>
</ul>

<p>To actually use one of these options, just include it when running a script:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>node</span> <span class='o'>--</span><span class='nx'>harmony</span> <span class='nx'>script</span><span class='p'>.</span><span class='nx'>js</span>
</code></pre>
</div>
<h3 id='example_'>Example: <code>typeof</code></h3>

<p>The <code>--harmony_typeof</code> option is special because it isn&#8217;t included with <code>--harmony</code>, this is most likely because the proposal was rejected: <a href='http://wiki.ecmascript.org/doku.php?id=harmony:typeof_null&amp;s=typeof'>harmony:typeof_null</a>. The possibility of a proposal being rejected is part of working with cutting edge language features &#8211; if you&#8217;re unsure about the status of a given feature the best thing to do is search the <a href='http://wiki.ecmascript.org/doku.php'>ECMAScript DokuWiki</a>.</p>

<p>With this option enabled, <code>typeof null === &quot;null&quot;</code> is <code>true</code>.</p>

<h3 id='example_type_checking'>Example: Type Checking</h3>

<p>Standard Node 0.8 without the <code>--harmony</code> flag supports <code>isNaN</code> and <code>isFinite</code>. However, <code>toInteger</code> and <code>isInteger</code> don&#8217;t seem to be supported yet.</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>assert</span> <span class='o'>=</span> <span class='nx'>require</span><span class='p'>(</span><span class='s1'>&#39;assert&#39;</span><span class='p'>);</span>

<span class='nx'>assert</span><span class='p'>(</span><span class='o'>!</span><span class='nb'>isNaN</span><span class='p'>(</span><span class='mi'>1</span><span class='p'>));</span>
<span class='nx'>assert</span><span class='p'>(</span><span class='o'>!</span><span class='nb'>isNaN</span><span class='p'>(</span><span class='s1'>&#39;1&#39;</span><span class='p'>));</span>
<span class='nx'>assert</span><span class='p'>(</span><span class='nb'>isNaN</span><span class='p'>(</span><span class='s1'>&#39;test&#39;</span><span class='p'>));</span>
<span class='nx'>assert</span><span class='p'>(</span><span class='nb'>isFinite</span><span class='p'>(</span><span class='mi'>1</span><span class='p'>));</span>
<span class='nx'>assert</span><span class='p'>(</span><span class='o'>!</span><span class='nb'>isFinite</span><span class='p'>(</span><span class='mi'>1</span><span class='o'>/</span><span class='mi'>0</span><span class='p'>));</span>
</code></pre>
</div>
<h3 id='example_block_scoping'>Example: Block Scoping</h3>

<p>Strict mode helps fix a major JavaScript design flaw: a missing <code>var</code> statement makes a variable globally visible. ES6 goes a step further by introducing <code>let</code> which can be used to create block-local variables. The following example must be run with <code>node --use-strict --harmony</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='k'>for</span> <span class='p'>(</span><span class='kd'>let</span> <span class='nx'>i</span> <span class='o'>=</span> <span class='mi'>0</span><span class='p'>;</span> <span class='nx'>i</span> <span class='o'>&lt;</span> <span class='mi'>3</span><span class='p'>;</span> <span class='nx'>i</span><span class='o'>++</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='nx'>console</span><span class='p'>.</span><span class='nx'>log</span><span class='p'>(</span><span class='s1'>&#39;i:&#39;</span><span class='p'>,</span> <span class='nx'>i</span><span class='p'>);</span>
<span class='p'>}</span>

<span class='nx'>console</span><span class='p'>.</span><span class='nx'>log</span><span class='p'>(</span><span class='nx'>i</span><span class='p'>);</span>
</code></pre>
</div>
<p>The final statement, <code>console.log(i)</code>, will cause a <code>ReferenceError</code> to be raised. The variable <code>i</code> is out of scope. Great, but doesn&#8217;t that mean forgetting <code>let</code> will just create a global? No, because in that case strict mode causes a <code>ReferenceError</code> to be raised.</p>

<p>The advantages of <code>let</code> are paired with <code>const</code> &#8211; by declaring a constant in global code the semantics are clear, and leaking uninitialised properties into the global object is avoided.</p>

<h3 id='example_collections'>Example: Collections</h3>

<p>ES6 adds new APIs for dealing with groups of values: <code>Map</code>, <code>Set</code>, and <code>WeakMap</code>. The <code>Map</code> constructor allows any object or primitive value to be mapped to another value. This is confusing because it sounds similar to plain old objects, but that&#8217;s only because we often use objects to implement what maps are designed to solve more efficiently.</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>assert</span> <span class='o'>=</span> <span class='nx'>require</span><span class='p'>(</span><span class='s1'>&#39;assert&#39;</span><span class='p'>)</span>
  <span class='p'>,</span> <span class='nx'>m</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>Map</span><span class='p'>()</span>
  <span class='p'>,</span> <span class='nx'>key</span> <span class='o'>=</span> <span class='p'>{</span> <span class='nx'>a</span><span class='o'>:</span> <span class='s1'>&#39;Test&#39;</span> <span class='p'>}</span>
  <span class='p'>,</span> <span class='nx'>value</span> <span class='o'>=</span> <span class='s1'>&#39;a test value&#39;</span>
  <span class='p'>;</span>

<span class='nx'>m</span><span class='p'>.</span><span class='nx'>set</span><span class='p'>(</span><span class='nx'>key</span><span class='p'>,</span> <span class='nx'>value</span><span class='p'>);</span>

<span class='nx'>assert</span><span class='p'>.</span><span class='nx'>equal</span><span class='p'>(</span><span class='nx'>m</span><span class='p'>.</span><span class='nx'>get</span><span class='p'>(</span><span class='nx'>key</span><span class='p'>),</span> <span class='nx'>value</span><span class='p'>);</span>
</code></pre>
</div>
<p>This example shows that map keys don&#8217;t need to be converted to strings, unlike with objects.</p>

<p>Node also currently has <code>Set</code> when running with <code>--harmony</code>, but instantiation with an array doesn&#8217;t seem to work yet, and neither does <code>Set.prototype.size</code>.</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>assert</span> <span class='o'>=</span> <span class='nx'>require</span><span class='p'>(</span><span class='s1'>&#39;assert&#39;</span><span class='p'>)</span>
  <span class='p'>,</span> <span class='nx'>s</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>Set</span><span class='p'>()</span>
  <span class='p'>;</span>

<span class='nx'>s</span><span class='p'>.</span><span class='nx'>add</span><span class='p'>(</span><span class='s1'>&#39;a&#39;</span><span class='p'>);</span>

<span class='nx'>assert</span><span class='p'>.</span><span class='nx'>ok</span><span class='p'>(</span><span class='nx'>s</span><span class='p'>.</span><span class='nx'>has</span><span class='p'>(</span><span class='s1'>&#39;a&#39;</span><span class='p'>));</span>
</code></pre>
</div>
<p>Finally, <code>WeakMap</code> is a form of map with <em>weak</em> references. Because <code>WeakMap</code> holds weak references to objects, the keys are not enumerable. The advantage of this is the garbage collector can remove entries when they&#8217;re no-longer in use. To justify the relevance of <code>WeakMap</code>, Brendan mentioned the <a href='http://en.wikipedia.org/wiki/Ephemeron'>Ephemeron</a>:</p>

<blockquote>
<p>Ephemerons solve a problem which is commonly found when trying to &#8220;attach&#8221; properties to objects by using a registry. When some property should be attached to an object, the property should (in terms of GC behavior) typically have the life-time that an instance variable of this object would have.</p>
</blockquote>

<p>So the <code>WeakMap</code> API should give us a memory-efficient and faster-than-O(n) key/value map.</p>

<p>There&#8217;s a post from last year by Andy E called <a href='http://whattheheadsaid.com/2011/10/es6-a-quick-look-at-weak-maps'>ES6 – a quick look at Weak Maps</a> that relates <code>WeakMap</code> to jQuery&#8217;s expando property:</p>

<blockquote>
<p>Weak maps come in here because they can do the job much better. They cut out the need for the expando property entirely, along with the requirement of handling JS objects differently to DOM objects. They also expand on jQuery&#8217;s ability to allow garbage collection when DOM elements are removed by its own methods, by automatically allowing garbage collection when DOM elements no longer reachable after they&#8217;ve been removed by any method.</p>
</blockquote>

<p>I tried creating some instances of <code>WeakMap</code> with circular references and forcing the garbage collector to run by using <code>node --harmony --expose_gc</code> and calling <code>gc()</code>, but it&#8217;s difficult to tell if the object is actually being removed yet:</p>

<blockquote>
<p>We can&#8217;t tell, however: there&#8217;s no way to enumerate a <code>WeakMap</code>, as doing so could expose the GC schedule (in browsers, you can&#8217;t call <code>gc()</code> to force a collection). Nor can we use <code>wm.has</code> to probe for entries, since we have nulled our <code>objkey</code> references!</p>
</blockquote>

<h3 id='proxies'>Proxies</h3>

<p>The current version of Node seems to include the <a href='http://wiki.ecmascript.org/doku.php?id=harmony:proxies'>old Proxy API</a>, so I don&#8217;t think it&#8217;s worth exploring here. The <a href='http://wiki.ecmascript.org/doku.php?id=harmony:direct_proxies'>newer Proxy API</a> doesn&#8217;t seem to work as expected, and I can&#8217;t find specific mention of a change to the new API style in the V8 issues or developer mailing list.</p>

<h3 id='generators_classes_and_macros'>Generators, Classes, and Macros</h3>

<p>Generators, classes, and macros are not currently supported by V8. These are still hotly debated areas, which you can read more about on the ECMAScript DokuWiki:</p>

<ul>
<li><a href='http://wiki.ecmascript.org/doku.php?id=harmony:generators'>Generators</a></li>

<li><a href='http://wiki.ecmascript.org/doku.php?id=harmony:classes'>Classes</a></li>
</ul>

<p>Andreas Rossberg said <a href='https://groups.google.com/d/msg/v8-users/mV38oWvA2Nk/txtSzVdDhpUJ'>the V8 developers are aware of generators</a>, but there aren&#8217;t any concrete plans for supporting them yet.</p>

<p><a href='http://wiki.ecmascript.org/doku.php?id=harmony:destructuring'>Destructuring</a> has been added to the draft ECMAScript 6 specification.</p>

<p>If you&#8217;re desperate to try macros in Node now, Mozilla released <a href='http://sweetjs.org/'>sweet.js</a> (GitHub: <a href='https://github.com/mozilla/sweet.js'>mozilla / sweet.js</a>, License: <em>BSD</em>, npm: <a href='https://npmjs.org/package/sweet.js'>sweet.js</a>) a few weeks ago. It&#8217;s a command-line tool that &#8220;compiles&#8221; scripts, in a similar way to CoffeeScript. This isn&#8217;t specifically an ES6 shim, although there are plenty of those out there. Some new features like <code>WeakMap</code> seem like they can be supported using shims, but a complete implementation isn&#8217;t always possible in older versions of ECMAScript.</p>

<h3 id='references'>References</h3>

<ul>
<li><a href='https://brendaneich.com/2012/10/harmony-of-dreams-come-true/'>Harmony of Dreams Come True</a> by Brendan Eich</li>

<li><a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Map'>MDN: Map</a></li>

<li><a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Set'>MDN: Set</a></li>

<li><a href='https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/WeakMap'>MDN: WeakMap</a></li>

<li><a href='http://whattheheadsaid.com/2011/10/es6-a-quick-look-at-weak-maps'>ES6 – a quick look at Weak Maps</a> by Andy E</li>
</ul>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2012/10/15/preparing-for-esnext/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

