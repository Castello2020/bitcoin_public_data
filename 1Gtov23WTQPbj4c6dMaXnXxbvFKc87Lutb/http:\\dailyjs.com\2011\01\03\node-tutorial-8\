http://dailyjs.com/2011/01/03/node-tutorial-8/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 09:16:46 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Tue, 22 Jul 2014 17:17:00 GMT
ETag: "16c261-8111-4fecb64373b00"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 7768
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Node Tutorial Part 8</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2011/01/03/node-tutorial-8">Node Tutorial Part 8</a></h2>

<div class="meta">
  03 Jan 2011 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#server">server</a>
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#lmawa">lmawa</a>
    
      <a href="/tags.html#nodepad">nodepad</a>
    
      <a href="/tags.html#npm">npm</a>
    
      <a href="/tags.html#express">express</a>
    
  </span>
</div>

<div id="post">
<p>Welcome to part 8 of <em>Let&#8217;s Make a Web App</em>, a tutorial series about building a web app with <a href="http://nodejs.org/">Node</a>.  This series will walk you through the major areas you&#8217;ll need to face when building your own applications.  These tutorials are tagged with <a href="/tags.html#lmawa">lmawa</a>.</p>
<p>Previous tutorials:</p>
<ul>
	<li><a href="http://dailyjs.com/2010/11/01/node-tutorial/">Part 1: Introduction</a></li>
	<li><a href="http://dailyjs.com/2010/11/08/node-tutorial-2/">Part 2: Installation and Skeleton App</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/4ea936b4b426012528fc722c7576391b48d5a0b7">4ea936b</a></li>
	<li><a href="http://dailyjs.com/2010/11/15/node-tutorial-3/">Part 3: RESTful Methods and Testing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/39e66cb9d11a67044495beb0de1934ac4d9c4786">39e66cb</a></li>
	<li><a href="http://dailyjs.com/2010/11/22/node-tutorial-4/">Part 4: Templates, Partials, Creating and Editing Documents</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/f66fdb5c3bebdf693f62884ffc06a40b93328bb5">f66fdb</a></li>
	<li><a href="http://dailyjs.com/2010/12/06/node-tutorial-5/">Part 5: Authentication, Sessions, Access Control Middleware</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/03fe9b272fea1beb98ffefcf5f7ed226c81c49fd">03fe9b</a></li>
	<li><a href="http://dailyjs.com/2010/12/20/node-tutorial-6/">Part 6: Interface Basics</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/f2261c510c987b35df1e6e000be6e1e591cd9d6d">f2261c</a></li>
	<li><a href="http://dailyjs.com/2010/12/27/node-tutorial-7/">Part 7: Node Library Versions, Jade Tricks, Error Pages</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/929f5642ca1b2fa664df517457e056c92490d892">929f5</a></li>
</ul>
<h3>Flash Messages</h3>
<p>Flash messages are server-side messages that are displayed once.  The session is usually used to store flash messages until they&#8217;re displayed, at which point they&#8217;re deleted.  Express has support for flash messages through <a href="http://extjs.github.com/Connect/flash.html">Connect&#8217;s flash middleware</a>:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">req</span><span class="p">.</span><span class="nx">flash</span><span class="p">(</span><span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="s1">&#39;%s items have been saved.&#39;</span><span class="p">,</span> <span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
</code></pre>
</div>
<p>The first parameter is a category for the message. I usually associate these with <span class="caps">CSS</span> classes to display error messages differently to general feedback.  The second parameter is the message to be displayed, which can use formatters (only <code>%s</code> is available by default).</p>
<h3>Helpers</h3>
<p>Express has two kinds of view helpers: static and dynamic.  Helpers can be variables or functions, and are added to the application like this:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">helpers</span><span class="p">({</span>
  <span class="nx">nameAndVersion</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">version</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">name</span> <span class="o">+</span> <span class="s1">&#39; v&#39;</span> <span class="o">+</span> <span class="nx">version</span><span class="p">;</span>
  <span class="p">},</span>

  <span class="nx">appName</span><span class="o">:</span> <span class="s1">&#39;Nodepad&#39;</span><span class="p">,</span>
  <span class="nx">version</span><span class="o">:</span> <span class="s1">&#39;0.1&#39;</span>
<span class="p">});</span>
</code></pre>
</div>
<p>I like to make a file called <code>helpers.js</code> with all of my helpers in, then load it with <code>require</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">helpers</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./helpers.js&#39;</span><span class="p">).</span><span class="nx">helpers</span><span class="p">);</span>
</code></pre>
</div>
<p>Now update the Jade templates to use the helper:</p>
<div class="highlight"><pre><code class="javascript"><span class="err">#</span><span class="p">{</span><span class="nx">nameAndVersion</span><span class="p">(</span><span class="nx">appName</span><span class="p">,</span> <span class="nx">version</span><span class="p">)}</span>
</code></pre>
</div>
<p>I&#8217;ve added this to the header in Nodepad.</p>
<p>Dynamic helpers provide access to the <code>req</code> and <code>res</code> objects, which will mean we can use them to get at our flash messages.  Next I&#8217;ll demonstrate how to use dynamic helpers to display flash messages.</p>
<p><strong>Note</strong>: The interesting thing about dynamic helpers is they&#8217;re rendered before the view, which means they appear as variables rather than functions.  This may catch you out.</p>
<h3>Adding Flash Message to Nodepad</h3>
<p>We&#8217;ll need a helper to display flash messages.  Add this to <code>helpers.js</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">exports</span><span class="p">.</span><span class="nx">dynamicHelpers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">flashMessages</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">html</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
    <span class="p">[</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="s1">&#39;info&#39;</span><span class="p">].</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
      <span class="kd">var</span> <span class="nx">messages</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">flash</span><span class="p">(</span><span class="nx">type</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">messages</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">html</span> <span class="o">+=</span> <span class="k">new</span> <span class="nx">FlashMessage</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span> <span class="nx">messages</span><span class="p">).</span><span class="nx">toHTML</span><span class="p">();</span>
      <span class="p">}</span>
    <span class="p">});</span>
    <span class="k">return</span> <span class="nx">html</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre>
</div>
<p>This loops through each message type and generates a flash message using <code>FlashMessage</code>.  This is a new class that I&#8217;ve made to make it easier to reuse the jQuery UI styles:</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">FlashMessage</span><span class="p">(</span><span class="nx">type</span><span class="p">,</span> <span class="nx">messages</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="nx">type</span><span class="p">;</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">messages</span> <span class="o">=</span> <span class="k">typeof</span> <span class="nx">messages</span> <span class="o">===</span> <span class="s1">&#39;string&#39;</span> <span class="o">?</span> <span class="p">[</span><span class="nx">messages</span><span class="p">]</span> <span class="o">:</span> <span class="nx">messages</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">FlashMessage</span><span class="p">.</span><span class="nx">prototype</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">get</span> <span class="nx">icon</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">case</span> <span class="s1">&#39;info&#39;</span><span class="o">:</span>
        <span class="k">return</span> <span class="s1">&#39;ui-icon-info&#39;</span><span class="p">;</span>
      <span class="k">case</span> <span class="s1">&#39;error&#39;</span><span class="o">:</span>
        <span class="k">return</span> <span class="s1">&#39;ui-icon-alert&#39;</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">},</span>

  <span class="nx">get</span> <span class="nx">stateClass</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">case</span> <span class="s1">&#39;info&#39;</span><span class="o">:</span>
        <span class="k">return</span> <span class="s1">&#39;ui-state-highlight&#39;</span><span class="p">;</span>
      <span class="k">case</span> <span class="s1">&#39;error&#39;</span><span class="o">:</span>
        <span class="k">return</span> <span class="s1">&#39;ui-state-error&#39;</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">},</span>

  <span class="nx">toHTML</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="s1">&#39;&lt;div class=&quot;ui-widget flash&quot;&gt;&#39;</span> <span class="o">+</span>
           <span class="s1">&#39;&lt;div class=&quot;&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">stateClass</span> <span class="o">+</span> <span class="s1">&#39; ui-corner-all&quot;&gt;&#39;</span> <span class="o">+</span>
           <span class="s1">&#39;&lt;p&gt;&lt;span class=&quot;ui-icon &#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">icon</span> <span class="o">+</span> <span class="s1">&#39;&quot;&gt;&lt;/span&gt;&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&lt;/p&gt;&#39;</span> <span class="o">+</span>
           <span class="s1">&#39;&lt;/div&gt;&#39;</span> <span class="o">+</span>
           <span class="s1">&#39;&lt;/div&gt;&#39;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>
</code></pre>
</div>
<p>The flash middleware returns multiple messages per type, so the code above handles this by joining each message with a comma.</p>
<p>This simplifies the <code>flashMessages</code> helper by using <code>switch</code> statements to generate appropriate <span class="caps">CSS</span> classes based on the message type.  It then generates some <span class="caps">HTML</span> that will work well with jQuery UI code:</p>
<p><img src="/images/posts/jquery-ui-login.png" alt="" /></p>
<p>Now load the dynamic helpers in <code>app.js</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">dynamicHelpers</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./helpers.js&#39;</span><span class="p">).</span><span class="nx">dynamicHelpers</span><span class="p">);</span>
</code></pre>
</div>
<p>And find some places to add flash messages to:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/sessions&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">User</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span> <span class="nx">email</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">email</span> <span class="p">}).</span><span class="nx">first</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">user</span> <span class="o">&amp;&amp;</span> <span class="nx">user</span><span class="p">.</span><span class="nx">authenticate</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">password</span><span class="p">))</span> <span class="p">{</span>
      <span class="nx">req</span><span class="p">.</span><span class="nx">session</span><span class="p">.</span><span class="nx">user_id</span> <span class="o">=</span> <span class="nx">user</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span>
      <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="s1">&#39;/documents&#39;</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">req</span><span class="p">.</span><span class="nx">flash</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="s1">&#39;Incorrect credentials&#39;</span><span class="p">);</span>
      <span class="nx">res</span><span class="p">.</span><span class="nx">redirect</span><span class="p">(</span><span class="s1">&#39;/sessions/new&#39;</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">});</span> 
<span class="p">});</span>
</code></pre>
</div>
<p>Now add the helper to the layout, <code>views/layout.jade</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="err">#</span><span class="p">{</span><span class="nx">flashMessages</span><span class="p">}</span>
</code></pre>
</div>
<h3>Feedback Display Issues</h3>
<p>The only problem with the current code is it doesn&#8217;t sit well with the editor design:</p>
<p><img src="/images/posts/nt8-problems.png" alt="" /></p>
<p>The way around this is to use some styling.  In <code>styles.less</code>:</p>
<div class="highlight"><pre><code class="css"><span class="nc">.flash</span> <span class="p">{</span>
  <span class="k">position</span><span class="o">:</span> <span class="k">absolute</span><span class="p">;</span>
  <span class="k">top</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="k">bottom</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="k">z-index</span><span class="o">:</span> <span class="m">1001</span><span class="p">;</span>
  <span class="k">width</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span>
  <span class="k">opacity</span><span class="o">:</span> <span class="m">0</span><span class="o">.</span><span class="m">75</span><span class="p">;</span>
  <span class="k">background-color</span><span class="o">:</span> <span class="m">#111</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.flash</span> <span class="nt">span</span> <span class="p">{</span>
  <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
  <span class="k">margin-right</span><span class="o">:</span> <span class="m">.7em</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.flash</span> <span class="nc">.ui-corner-all</span> <span class="p">{</span>
  <span class="k">width</span><span class="o">:</span> <span class="m">300px</span><span class="p">;</span>
  <span class="k">margin</span><span class="o">:</span> <span class="m">50px</span> <span class="k">auto</span> <span class="m">0</span> <span class="k">auto</span><span class="p">;</span>
  <span class="k">padding</span><span class="o">:</span> <span class="m">0</span> <span class="m">5px</span><span class="p">;</span>
  <span class="k">opacity</span><span class="o">:</span> <span class="m">0</span><span class="o">.</span><span class="m">9</span><span class="p">;</span>
  <span class="k">font-weight</span><span class="o">:</span> <span class="k">bold</span><span class="p">;</span>
  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">8px</span> <span class="m">#111</span><span class="p">;</span>
  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">8px</span> <span class="m">#111</span><span class="p">;</span>
  <span class="n">box</span><span class="o">-</span><span class="n">shadow</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">8px</span> <span class="m">#111</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>
<p>This will take over the entire page and fade it to black while the message is visible.  To hide it, I&#8217;ve added this to <code>application.js</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">function</span> <span class="nx">hideFlashMessages</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">fadeOut</span><span class="p">();</span>
<span class="p">}</span>

<span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.flash&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="nx">hideFlashMessages</span><span class="p">);</span>
<span class="p">},</span> <span class="mi">5000</span><span class="p">);</span>
<span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.flash&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="nx">hideFlashMessages</span><span class="p">);</span>
</code></pre>
</div>
<h3>Conclusion</h3>
<p>Express has static and dynamic helpers.  Dynamic helpers are rendered just before the view, and they are passed the <code>req</code> and <code>res</code> objects.  They&#8217;re accessed as variables in the views.</p>
<p>It&#8217;s easy to create a separate file that stores all of an application&#8217;s helpers by using <code>require</code>.</p>
<p>I built the <code>FlashMessage</code> class to demonstrate why using a file for helpers is useful, and also to covertly show some simple JavaScript OO with getters.  You may prefer to implement this by exposing flash messages to templates through dynamic helpers, which would mean the flash <span class="caps">HTML</span> can be written with Jade.  Why not try it out as a challenge?</p>
<p>The current version of Nodepad is <a href="https://github.com/alexyoung/nodepad/tree/df0b954b3c4e83a69ab4cfe2d87f2fb1d0ffa162">commit df0b954</a>.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
      <li>
        <div>18 Jul 2014</div>
        <a href="/2014/07/18/lazy-json-undo">Undo with Object.observe</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2011/01/03/node-tutorial-8/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

