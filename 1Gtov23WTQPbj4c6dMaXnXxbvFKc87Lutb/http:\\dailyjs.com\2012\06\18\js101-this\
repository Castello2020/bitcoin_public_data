http://dailyjs.com/2012/06/18/js101-this/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 07:24:41 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Tue, 22 Jul 2014 17:17:01 GMT
ETag: "10441d-5714-4fecb64467d40"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 6318
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: JS101: this</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2012/06/18/js101-this">JS101: this</a></h2>

<div class="meta">
  18 Jun 2012 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#js101">js101</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#language">language</a>
    
      <a href="/tags.html#beginner">beginner</a>
    
  </span>
</div>

<div id="post">
<p>So far in <a href='http://dailyjs.com/tags.html#js101'>JS101</a>, our examples have mentioned <code>this</code> and functions that take advantage of its behaviour, like <code>Function.prototype.apply</code> and <code>Function.prototype.call</code>. However, before approaching other aspects of the language, we should first address <code>this</code> and execution contexts.</p>

<h3 id='methods_and_functions'>Methods and Functions</h3>

<p>In this article I refer to both <em>methods</em> and <em>functions</em>. <a href='http://es5.github.com/#x4.3.27'>Method</a> is defined in the ECMAScript specification as follows:</p>

<blockquote>
<p>&#8230; function that is the value of a property.</p>
</blockquote>

<blockquote>
<p><em>NOTE</em> When a function is called as a method of an object, the object is passed to the function as its this value.</p>
</blockquote>

<p>We typically think of functions as a standalone subroutine, while methods are properties of an object that happen to be functions. This nomenclature is used widely within the community.</p>

<h3 id='execution_context'>Execution Context</h3>

<p>According to the ECMAScript 5.1 specification, an executing program is formed of &#8220;execution contexts&#8221;. These execution contexts support the language constructs we need to manage scope &#8211; the visibility of variables and function declarations from other parts of a program.</p>

<p>The execution context contains references to various elements that enable state within a program to be managed according to the current logical scope &#8211; for the exact details, see <a href='http://es5.github.com/#x10.3'>Execution Contexts</a> in the specification. What we&#8217;re interested in is how the current value of <code>this</code> is determined.</p>

<h3 id='global_context_and_constructors'>Global Context and Constructors</h3>

<p>Try running the following code in Node or a browser:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>function</span> <span class='nx'>add</span><span class='p'>(</span><span class='nx'>x</span><span class='p'>,</span> <span class='nx'>y</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='nx'>console</span><span class='p'>.</span><span class='nx'>log</span><span class='p'>(</span><span class='k'>this</span><span class='p'>);</span>
  <span class='k'>return</span> <span class='nx'>x</span> <span class='o'>+</span> <span class='nx'>y</span><span class='p'>;</span>
<span class='p'>}</span>

<span class='nx'>add</span><span class='p'>(</span><span class='mi'>1</span><span class='p'>,</span> <span class='mi'>1</span><span class='p'>);</span>
</code></pre>
</div>
<p>The second line will cause the global context to be displayed: <code>global</code> in Node, or <code>window</code> in a browser. If I inserted <code>&#39;use strict&#39;</code> after the line that reads <code>function add...</code>, then <code>this</code> would be <code>undefined</code> instead.</p>

<p>Now consider what happens when a constructor is executed:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>function</span> <span class='nx'>Shape</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='k'>this</span><span class='p'>.</span><span class='nx'>x</span> <span class='o'>=</span> <span class='mi'>0</span><span class='p'>;</span>
  <span class='k'>this</span><span class='p'>.</span><span class='nx'>y</span> <span class='o'>=</span> <span class='mi'>0</span><span class='p'>;</span>
<span class='p'>}</span>

<span class='kd'>var</span> <span class='nx'>shape</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>Shape</span><span class='p'>();</span>
</code></pre>
</div>
<p>When control enters the <code>Shape</code> constructor as a result of <code>new Shape()</code>, the <code>this</code> value will refer to the current object. Keep this in mind when writing object-oriented code: if a function is called as a method on an object, or by using <code>new</code>, then the value of <code>this</code> will be the current instance of the object, otherwise it will be the global context (or <code>undefined</code> in strict mode). The lesson here is the value of <code>this</code> is dependent on how a function is called.</p>

<h3 id='common_mistakes'>Common Mistakes</h3>

<p>Be careful when nesting functions inside methods. Read the following example and try to figure out the value of <code>this</code> inside <code>checkBounds</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>function</span> <span class='nx'>Shape</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='k'>this</span><span class='p'>.</span><span class='nx'>x</span> <span class='o'>=</span> <span class='mi'>0</span><span class='p'>;</span>
  <span class='k'>this</span><span class='p'>.</span><span class='nx'>y</span> <span class='o'>=</span> <span class='mi'>0</span><span class='p'>;</span>
<span class='p'>}</span>

<span class='nx'>Shape</span><span class='p'>.</span><span class='nx'>prototype</span> <span class='o'>=</span> <span class='p'>{</span>
  <span class='nx'>move</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>x</span><span class='p'>,</span> <span class='nx'>y</span><span class='p'>)</span> <span class='p'>{</span>
    <span class='k'>this</span><span class='p'>.</span><span class='nx'>x</span> <span class='o'>+=</span> <span class='nx'>x</span><span class='p'>;</span>
    <span class='k'>this</span><span class='p'>.</span><span class='nx'>y</span> <span class='o'>+=</span> <span class='nx'>y</span><span class='p'>;</span>

    <span class='kd'>function</span> <span class='nx'>checkBounds</span><span class='p'>()</span> <span class='p'>{</span>
      <span class='k'>if</span> <span class='p'>(</span><span class='k'>this</span><span class='p'>.</span><span class='nx'>x</span> <span class='o'>&gt;</span> <span class='mi'>100</span><span class='p'>)</span> <span class='p'>{</span>
        <span class='nx'>console</span><span class='p'>.</span><span class='nx'>error</span><span class='p'>(</span><span class='s1'>&#39;Warning: Shape out of bounds&#39;</span><span class='p'>);</span>
      <span class='p'>}</span>
    <span class='p'>}</span>

    <span class='nx'>checkBounds</span><span class='p'>();</span>
  <span class='p'>}</span>
<span class='p'>};</span>

<span class='kd'>var</span> <span class='nx'>shape</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>Shape</span><span class='p'>();</span>
<span class='nx'>shape</span><span class='p'>.</span><span class='nx'>move</span><span class='p'>(</span><span class='mi'>101</span><span class='p'>,</span> <span class='mi'>1</span><span class='p'>);</span>
</code></pre>
</div>
<p>The <code>checkBounds</code> function is defined inside the <code>move</code> method, but the <code>console.error</code> line will never be reached. This is because the value of <code>this</code> will be set to the global context, which is correct according to the specification but understandably confusing and represents a common source of bugs.</p>

<p>Fortunately, <code>this</code> is a value so we can reference it by using another variable:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>Shape</span><span class='p'>.</span><span class='nx'>prototype</span> <span class='o'>=</span> <span class='p'>{</span>
  <span class='nx'>move</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>x</span><span class='p'>,</span> <span class='nx'>y</span><span class='p'>)</span> <span class='p'>{</span>
    <span class='kd'>var</span> <span class='nx'>self</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>;</span>

    <span class='k'>this</span><span class='p'>.</span><span class='nx'>x</span> <span class='o'>+=</span> <span class='nx'>x</span><span class='p'>;</span>
    <span class='k'>this</span><span class='p'>.</span><span class='nx'>y</span> <span class='o'>+=</span> <span class='nx'>y</span><span class='p'>;</span>

    <span class='kd'>function</span> <span class='nx'>checkBounds</span><span class='p'>()</span> <span class='p'>{</span>
      <span class='k'>if</span> <span class='p'>(</span><span class='nx'>self</span><span class='p'>.</span><span class='nx'>x</span> <span class='o'>&gt;</span> <span class='mi'>100</span><span class='p'>)</span> <span class='p'>{</span>
        <span class='nx'>console</span><span class='p'>.</span><span class='nx'>error</span><span class='p'>(</span><span class='s1'>&#39;Warning: Shape out of bounds&#39;</span><span class='p'>);</span>
      <span class='p'>}</span>
    <span class='p'>}</span>

    <span class='nx'>checkBounds</span><span class='p'>();</span>
  <span class='p'>}</span>
<span class='p'>};</span>
</code></pre>
</div>
<p>Here <code>self</code> now points to the ThisBinding assigned when <code>move</code> executes, so <code>checkBounds</code> will work the way we intend it to. The name <code>self</code> can be anything, but it&#8217;s a popular convention. It&#8217;s not a <a href='https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words'>reserved word</a>, but your editor may highlight it.</p>

<h3 id='summary'>Summary</h3>

<p>When working with <code>this</code>, remember the following rules:</p>

<ul>
<li>It&#8217;s set based on how a function is called: <code>new MyConstructor</code> or <code>myObject.method()</code> will refer to an instance, while <code>this</code> inside a function refers to the global context</li>

<li>Strict mode causes <code>this</code> to evaluate to <code>undefined</code> instead of the global context inside functions</li>

<li><code>this</code> can be referenced by a variable, and <code>self</code> is the conventionally used name</li>
</ul>

<p>If you want to read lower-level details on this topic, start by looking at how the ECMAScript 5.1 specification defines the algorithms that are used to determine <code>this</code> for various situations: entering <a href='http://es5.github.com/#x10.4.1'>global code</a>, <a href='http://es5.github.com/#x10.4.2'>executing <code>eval</code> code</a>, and <a href='http://es5.github.com/#x10.4.3'>entering functions</a>.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
      <li>
        <div>18 Jul 2014</div>
        <a href="/2014/07/18/lazy-json-undo">Undo with Object.observe</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2012/06/18/js101-this/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

