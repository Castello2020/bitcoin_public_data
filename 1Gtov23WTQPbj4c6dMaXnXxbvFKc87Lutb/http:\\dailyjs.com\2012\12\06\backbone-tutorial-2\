http://dailyjs.com/2012/12/06/backbone-tutorial-2/
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 14:39:53 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:54 GMT
ETag: "e8807-99ab-4fedef2a5f580"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 9295
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Backbone.js Tutorial: Google's APIs and RequireJS</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2012/12/06/backbone-tutorial-2">Backbone.js Tutorial: Google's APIs and RequireJS</a></h2>

<div class="meta">
  06 Dec 2012 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#backbone.js">backbone.js</a>
    
      <a href="/tags.html#mvc">mvc</a>
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#backgoog">backgoog</a>
    
  </span>
</div>

<div id="post">
<ul class='parts'>
  <li><a href='http://dailyjs.com/2012/11/29/backbone-tutorial-1/'>Part 1: Build Environment</a></li>
  <li><a href='http://dailyjs.com/2012/12/06/backbone-tutorial-2/'><strong>Part 2: Google's APIs and RequireJS</strong></a></li>
  <li><a href='http://dailyjs.com/2012/12/13/backbone-tutorial-3/'>Part 3: Authenticating with OAuth2</a></li>
  <li><a href='http://dailyjs.com/2012/12/20/backbone-tutorial-4/'>Part 4: Backbone.sync</a></li>
  <li><a href='http://dailyjs.com/2012/12/27/backbone-tutorial-5/'>Part 5: List Views</a></li>
  <li><a href='http://dailyjs.com/2013/01/03/backbone-tutorial-6/'>Part 6: Creating Lists</a></li>
  <li><a href='http://dailyjs.com/2013/01/10/backbone-tutorial-7/'>Part 7: Editing Lists</a></li>
  <li><a href='http://dailyjs.com/2013/01/17/backbone-tutorial-8/'>Part 8: Deleting Lists</a></li>
  <li><a href='http://dailyjs.com/2013/01/24/backbone-tutorial-9/'>Part 9: Tasks</a></li>
  <li><a href='http://dailyjs.com/2013/01/31/backbone-tutorial-10/'>Part 10: Oh No Not More Tasks</a></li>
  <li><a href='http://dailyjs.com/2013/02/07/backbone-tutorial-11/'>Part 11: Spies, Stubs, and Mocks</a></li>
  <li><a href='http://dailyjs.com/2013/02/14/backbone-tutorial-12/'>Part 12: Testing with Mocks</a></li>
  <li><a href='http://dailyjs.com/2013/03/07/backbone-tutorial-13/'>Part 13: Routes</a></li>
  <li><a href='http://dailyjs.com/2013/03/14/backbone-tutorial-14/'>Part 14: Customosing the UI</a></li>
  <li><a href='http://dailyjs.com/2013/03/28/backbone-tutorial-15/'>Part 15: Updates for 1.0, Clear Complete</a></li>
  <li><a href='http://dailyjs.com/2013/04/04/backbone-tutorial-16/'>Part 16: jQuery Plugins</a></li>
</ul>
<p>In <a href='http://dailyjs.com/2012/11/29/backbone-tutorial-1/'>Part 1: Build Environment</a>, I explained how to set up a simple Node server to host your Backbone.js app and test suite. Something that confused people was the way I used relative paths, which meant the tests could fail if you didn&#8217;t visit <code>/test/</code> (<code>/test</code> won&#8217;t work). There was a reason for this: I developed the original version to run on Dropbox, so I wanted to use relative paths. It&#8217;s probably safer to use absolute paths, so I should have made this clearer.</p>

<p>In this part you&#8217;ll learn the following:</p>

<ul>
<li>How <code>Backbone.sync</code> works</li>

<li>How to load Backbone.js and Underscore.js with RequireJS</li>

<li>How to get started with Google&#8217;s APIs</li>
</ul>

<h3 id='the__method'>The <code>Backbone.sync</code> Method</h3>

<p>Network access in Backbone.js is nicely abstracted through a single method which has the following signature:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>sync</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>method</span><span class='p'>,</span> <span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>)</span> <span class='p'>{</span>
<span class='p'>};</span>
</code></pre>
</div>
<p>The <code>method</code> argument contains a string that can be one of the following values:</p>

<ul>
<li><code>create</code></li>

<li><code>update</code></li>

<li><code>delete</code></li>

<li><code>read</code></li>
</ul>

<p>Internally, Backbone.js maps these method names to HTTP verbs:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>methodMap</span> <span class='o'>=</span> <span class='p'>{</span>
  <span class='s1'>&#39;create&#39;</span><span class='o'>:</span> <span class='s1'>&#39;POST&#39;</span><span class='p'>,</span>
  <span class='s1'>&#39;update&#39;</span><span class='o'>:</span> <span class='s1'>&#39;PUT&#39;</span><span class='p'>,</span>
  <span class='s1'>&#39;delete&#39;</span><span class='o'>:</span> <span class='s1'>&#39;DELETE&#39;</span><span class='p'>,</span>
  <span class='s1'>&#39;read&#39;</span><span class='o'>:</span>   <span class='s1'>&#39;GET&#39;</span>
<span class='p'>};</span>
</code></pre>
</div>
<p>If you&#8217;re familiar with that particular flavour of RESTful API then this should all look familiar.</p>

<p>The second argument, <code>model</code>, is a <code>Backbone.Model</code> or <code>Backbone.Collection</code> &#8211; collections are used when reading multiple values.</p>

<p>The final argument, <code>options</code>, is an object that contains success and error callbacks. It&#8217;s ultimately handed off to the jQuery Ajax API.</p>

<p>To work with Google&#8217;s APIs we need to write our own <code>Backbone.sync</code> method. In general terms our implementation should be structured like this:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>sync</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>method</span><span class='p'>,</span> <span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='k'>switch</span> <span class='p'>(</span><span class='nx'>method</span><span class='p'>)</span> <span class='p'>{</span>
    <span class='k'>case</span> <span class='s1'>&#39;create&#39;</span><span class='o'>:</span>
      <span class='nx'>googleAPI</span><span class='p'>.</span><span class='nx'>create</span><span class='p'>(</span><span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>);</span>
    <span class='k'>break</span><span class='p'>;</span>

    <span class='k'>case</span> <span class='s1'>&#39;update&#39;</span><span class='o'>:</span>
      <span class='nx'>googleAPI</span><span class='p'>.</span><span class='nx'>update</span><span class='p'>(</span><span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>);</span>
    <span class='k'>break</span><span class='p'>;</span>

    <span class='k'>case</span> <span class='s1'>&#39;delete&#39;</span><span class='o'>:</span>
      <span class='nx'>googleAPI</span><span class='p'>.</span><span class='nx'>destroy</span><span class='p'>(</span><span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>);</span>
    <span class='k'>break</span><span class='p'>;</span>

    <span class='k'>case</span> <span class='s1'>&#39;read&#39;</span><span class='o'>:</span>
      <span class='c1'>// The model value is a collection in this case</span>
      <span class='nx'>googleAPI</span><span class='p'>.</span><span class='nx'>list</span><span class='p'>(</span><span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>);</span>
    <span class='k'>break</span><span class='p'>;</span>

    <span class='k'>default</span><span class='o'>:</span>
      <span class='c1'>// Something probably went wrong</span>
      <span class='nx'>console</span><span class='p'>.</span><span class='nx'>error</span><span class='p'>(</span><span class='s1'>&#39;Unknown method:&#39;</span><span class='p'>,</span> <span class='nx'>method</span><span class='p'>);</span>
    <span class='k'>break</span><span class='p'>;</span>
  <span class='p'>}</span>
<span class='p'>};</span>
</code></pre>
</div>
<p>The <code>googleAPI</code> object is fictitious, but this is basically how <code>Backbone.sync</code> is usually extended &#8211; a lightweight wrapper that maps the method names and models to another API. Using a lightweight wrapper means the underlying target API can be easily used outside of a Backbone.js.</p>

<p>In our case, Google actually provides a JavaScript API &#8211; there will be a <code>gapi.client</code> object available once the Google APIs have been loaded.</p>

<h3 id='setting_up_a_google_api_account'>Setting Up A Google API Account</h3>

<p>The main page for Google&#8217;s developer documentation is at <a href='https://developers.google.com/'>developers.google.com</a>, but what we&#8217;re interested in is the <a href='https://developers.google.com/google-apps/tasks/'>Google Tasks API</a> which can be found under Application APIs.</p>

<p>Google&#8217;s Application APIs are designed to work well with both server-side scripting and client-side JavaScript. To work with the Google Tasks API you&#8217;ll need three things:</p>

<ol>
<li>A Google account (an existing one is fine)</li>

<li>Google API Console access (you may have already enabled it if you work with Google&#8217;s services)</li>

<li>An API key</li>
</ol>

<p>To set up your account to work with the Google API Console, visit <a href='https://code.google.com/apis/console/'>code.google.com/apis/console</a>. Once you&#8217;ve enabled it, scroll down to <em>Tasks API</em>:</p>

<p><img src='/images/posts/gapi-tasks.png' alt='Google Tasks API switch' /></p>

<p>Then switch the button to <em>on</em>, and accept the terms (if you agree to them). Next, click <em>API Access</em> in the left-hand navigation bar, and look under <em>Simple API Access</em> for the API key. This &#8220;browser apps&#8221; key is what we need. <em>Make a note</em> of it for later.</p>

<h3 id='oauth_20_for_clientside_applications'>OAuth 2.0 for Client-side Applications</h3>

<p>Still in the <em>API Access</em> section of the console, click the button to create an OAuth 2.0 project. Enter &#8220;bTask&#8221; (or whatever you want) for the product name, then <code>http://localhost:8080</code> for the URL. In the next dialog, make sure <code>http://</code> is selected instead of <code>https://</code>, then enter <code>localhost:8080</code> and click &#8220;Create client ID&#8221;.</p>

<p>You&#8217;ll now see a set of values under &#8220;Client ID for web applications&#8221;. The field that says &#8220;Client ID&#8221; is important &#8211; <em>make a note</em> of this one as well.</p>

<p>You should now have an API key <em>and</em> a Client ID. These will be used to load Google&#8217;s APIs and allow us to use an OAuth 2.0 service from within the browser &#8211; we won&#8217;t need to write our own server-side code to authenticate users.</p>

<h3 id='follow_along'>Follow Along</h3>

<p>If you want to check out the source from Part 1 so you can follow along, you can use Git to get the exact revision from last week:</p>
<div class='highlight'><pre><code class='text'>git clone git@github.com:alexyoung/dailyjs-backbone-tutorial.git
cd dailyjs-backbone-tutorial
git reset --hard 2a8517e
</code></pre>
</div>
<h3 id='required_libraries'>Required Libraries</h3>

<p>Before progressing, download the following libraries to <code>app/js/lib/</code>:</p>

<ul>
<li><a href='http://underscorejs.org/underscore-min.js'>Underscore.js</a></li>

<li><a href='http://backbonejs.org/backbone-min.js'>Backbone.js</a></li>
</ul>

<p>Open <code>app/js/main.js</code> and edit the <code>shim</code> property under <code>requirejs.config</code> to load Underscore.js and Backbone.js:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>requirejs</span><span class='p'>.</span><span class='nx'>config</span><span class='p'>({</span>
  <span class='nx'>baseUrl</span><span class='o'>:</span> <span class='s1'>&#39;js&#39;</span><span class='p'>,</span>

  <span class='nx'>paths</span><span class='o'>:</span> <span class='p'>{</span>
  <span class='p'>},</span>

  <span class='nx'>shim</span><span class='o'>:</span> <span class='p'>{</span>
    <span class='s1'>&#39;lib/underscore-min&#39;</span><span class='o'>:</span> <span class='p'>{</span>
      <span class='nx'>exports</span><span class='o'>:</span> <span class='s1'>&#39;_&#39;</span>
    <span class='p'>},</span>
    <span class='s1'>&#39;lib/backbone-min&#39;</span><span class='o'>:</span> <span class='p'>{</span>
      <span class='nx'>deps</span><span class='o'>:</span> <span class='p'>[</span><span class='s1'>&#39;lib/underscore-min&#39;</span><span class='p'>]</span>
    <span class='p'>,</span> <span class='nx'>exports</span><span class='o'>:</span> <span class='s1'>&#39;Backbone&#39;</span>
    <span class='p'>},</span>
    <span class='s1'>&#39;app&#39;</span><span class='o'>:</span> <span class='p'>{</span>
      <span class='nx'>deps</span><span class='o'>:</span> <span class='p'>[</span><span class='s1'>&#39;lib/underscore-min&#39;</span><span class='p'>,</span> <span class='s1'>&#39;lib/backbone-min&#39;</span><span class='p'>]</span>
    <span class='p'>}</span>
  <span class='p'>}</span>
<span class='p'>});</span>

<span class='nx'>require</span><span class='p'>([</span>
  <span class='s1'>&#39;app&#39;</span>
<span class='p'>],</span>

<span class='kd'>function</span><span class='p'>(</span><span class='nx'>App</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='nb'>window</span><span class='p'>.</span><span class='nx'>bTask</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>App</span><span class='p'>();</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>This looks weird, but remember we&#8217;re using <a href='http://requirejs.org/'>RequireJS</a> to load scripts as modules. RequireJS &#8220;shims&#8221; allow dependencies to be expressed for libraries that aren&#8217;t implemented using AMD.</p>

<h3 id='loading_the_tasks_api'>Loading the Tasks API</h3>

<p>The basic pattern for loading the Google Tasks API is:</p>

<ol>
<li>Load the Google API client library: <code>https://apis.google.com/js/client.js</code></li>

<li>Call <code>gapi.client.load</code> to load the &#8220;tasks&#8221; API</li>

<li>Set the API key using <code>gapi.client.setApiKey()</code></li>
</ol>

<p>To implement this, you&#8217;ll need a place to put the necessary credentials. Create a file called <code>app/js/config.js</code> and add the API key and Client ID to it:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>define</span><span class='p'>([],</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>config</span> <span class='o'>=</span> <span class='p'>{};</span>
  <span class='nx'>config</span><span class='p'>.</span><span class='nx'>apiKey</span> <span class='o'>=</span> <span class='s1'>&#39;your API key&#39;</span><span class='p'>;</span>
  <span class='nx'>config</span><span class='p'>.</span><span class='nx'>scopes</span> <span class='o'>=</span> <span class='s1'>&#39;https://www.googleapis.com/auth/tasks https://www.googleapis.com/auth/userinfo.profile&#39;</span><span class='p'>;</span>
  <span class='nx'>config</span><span class='p'>.</span><span class='nx'>clientId</span> <span class='o'>=</span> <span class='s1'>&#39;your client ID&#39;</span><span class='p'>;</span>
  <span class='k'>return</span> <span class='nx'>config</span><span class='p'>;</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>This file can be loaded by our custom Google Tasks API/Backbone.sync implementation.</p>

<p>Now create a new file called <code>app/gapi.js</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>define</span><span class='p'>([</span><span class='s1'>&#39;config&#39;</span><span class='p'>],</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>config</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='kd'>function</span> <span class='nx'>ApiManager</span><span class='p'>()</span> <span class='p'>{</span>
    <span class='k'>this</span><span class='p'>.</span><span class='nx'>loadGapi</span><span class='p'>();</span>
  <span class='p'>}</span>

  <span class='nx'>_</span><span class='p'>.</span><span class='nx'>extend</span><span class='p'>(</span><span class='nx'>ApiManager</span><span class='p'>.</span><span class='nx'>prototype</span><span class='p'>,</span> <span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>Events</span><span class='p'>);</span>

  <span class='nx'>ApiManager</span><span class='p'>.</span><span class='nx'>prototype</span><span class='p'>.</span><span class='nx'>init</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='p'>};</span>

  <span class='nx'>ApiManager</span><span class='p'>.</span><span class='nx'>prototype</span><span class='p'>.</span><span class='nx'>loadGapi</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='p'>};</span>

  <span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>sync</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>method</span><span class='p'>,</span> <span class='nx'>model</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>)</span> <span class='p'>{</span>
    <span class='nx'>options</span> <span class='o'>||</span> <span class='p'>(</span><span class='nx'>options</span> <span class='o'>=</span> <span class='p'>{});</span>

    <span class='k'>switch</span> <span class='p'>(</span><span class='nx'>method</span><span class='p'>)</span> <span class='p'>{</span>
      <span class='k'>case</span> <span class='s1'>&#39;create&#39;</span><span class='o'>:</span>
      <span class='k'>break</span><span class='p'>;</span>

      <span class='k'>case</span> <span class='s1'>&#39;update&#39;</span><span class='o'>:</span>
      <span class='k'>break</span><span class='p'>;</span>

      <span class='k'>case</span> <span class='s1'>&#39;delete&#39;</span><span class='o'>:</span>
      <span class='k'>break</span><span class='p'>;</span>

      <span class='k'>case</span> <span class='s1'>&#39;read&#39;</span><span class='o'>:</span>
      <span class='k'>break</span><span class='p'>;</span>
    <span class='p'>}</span>
  <span class='p'>};</span>

  <span class='k'>return</span> <span class='nx'>ApiManager</span><span class='p'>;</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>This skeleton module shows the overall layout of our Google Tasks API loader and <code>Backbone.sync</code> implementation. The <code>ApiManager</code> is a standard constructor, and I&#8217;ve used Underscore.js to inherit from <code>Backbone.Events</code>. This code will be asynchronous, so event handling will be useful later.</p>

<p>The <code>loadGapi</code> method loads Google&#8217;s JavaScript using RequireJS. Once the <code>gapi</code> global object has been found, it will do the rest of the configuration by calling the <code>init</code> method:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>ApiManager</span><span class='p'>.</span><span class='nx'>prototype</span><span class='p'>.</span><span class='nx'>loadGapi</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>self</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>;</span>

  <span class='c1'>// Don&#39;t load gapi if it&#39;s already present</span>
  <span class='k'>if</span> <span class='p'>(</span><span class='k'>typeof</span> <span class='nx'>gapi</span> <span class='o'>!==</span> <span class='s1'>&#39;undefined&#39;</span><span class='p'>)</span> <span class='p'>{</span>
    <span class='k'>return</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>init</span><span class='p'>();</span>
  <span class='p'>}</span>

  <span class='nx'>require</span><span class='p'>([</span><span class='s1'>&#39;https://apis.google.com/js/client.js?onload=define&#39;</span><span class='p'>],</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
    <span class='c1'>// Poll until gapi is ready</span>
    <span class='kd'>function</span> <span class='nx'>checkGAPI</span><span class='p'>()</span> <span class='p'>{</span>
      <span class='k'>if</span> <span class='p'>(</span><span class='nx'>gapi</span> <span class='o'>&amp;&amp;</span> <span class='nx'>gapi</span><span class='p'>.</span><span class='nx'>client</span><span class='p'>)</span> <span class='p'>{</span>
        <span class='nx'>self</span><span class='p'>.</span><span class='nx'>init</span><span class='p'>();</span>
      <span class='p'>}</span> <span class='k'>else</span> <span class='p'>{</span>
        <span class='nx'>setTimeout</span><span class='p'>(</span><span class='nx'>checkGAPI</span><span class='p'>,</span> <span class='mi'>100</span><span class='p'>);</span>
      <span class='p'>}</span>
    <span class='p'>}</span>
    
    <span class='nx'>checkGAPI</span><span class='p'>();</span>
  <span class='p'>});</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>All the <code>init</code> method needs to do is load the Tasks API with <code>gapi.client.load</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>ApiManager</span><span class='p'>.</span><span class='nx'>prototype</span><span class='p'>.</span><span class='nx'>init</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>self</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>;</span>

  <span class='nx'>gapi</span><span class='p'>.</span><span class='nx'>client</span><span class='p'>.</span><span class='nx'>load</span><span class='p'>(</span><span class='s1'>&#39;tasks&#39;</span><span class='p'>,</span> <span class='s1'>&#39;v1&#39;</span><span class='p'>,</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span> <span class='cm'>/* Loaded */</span> <span class='p'>});</span>

  <span class='kd'>function</span> <span class='nx'>handleClientLoad</span><span class='p'>()</span> <span class='p'>{</span>
    <span class='nx'>gapi</span><span class='p'>.</span><span class='nx'>client</span><span class='p'>.</span><span class='nx'>setApiKey</span><span class='p'>(</span><span class='nx'>config</span><span class='p'>.</span><span class='nx'>apiKey</span><span class='p'>);</span>
    <span class='nb'>window</span><span class='p'>.</span><span class='nx'>setTimeout</span><span class='p'>(</span><span class='nx'>checkAuth</span><span class='p'>,</span> <span class='mi'>100</span><span class='p'>);</span>
  <span class='p'>}</span>

  <span class='kd'>function</span> <span class='nx'>checkAuth</span><span class='p'>()</span> <span class='p'>{</span>
    <span class='nx'>gapi</span><span class='p'>.</span><span class='nx'>auth</span><span class='p'>.</span><span class='nx'>authorize</span><span class='p'>({</span> <span class='nx'>client_id</span><span class='o'>:</span> <span class='nx'>config</span><span class='p'>.</span><span class='nx'>clientId</span><span class='p'>,</span> <span class='nx'>scope</span><span class='o'>:</span> <span class='nx'>config</span><span class='p'>.</span><span class='nx'>scopes</span><span class='p'>,</span> <span class='nx'>immediate</span><span class='o'>:</span> <span class='kc'>true</span> <span class='p'>},</span> <span class='nx'>handleAuthResult</span><span class='p'>);</span>
  <span class='p'>}</span>

  <span class='kd'>function</span> <span class='nx'>handleAuthResult</span><span class='p'>(</span><span class='nx'>authResult</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='p'>}</span>

  <span class='nx'>handleClientLoad</span><span class='p'>();</span>
<span class='p'>};</span>
</code></pre>
</div>
<p>The <code>config</code> variable was one of the dependencies for this file, and contains the credentials required by Google&#8217;s API.</p>

<h3 id='loading_the_api_manager'>Loading the API Manager</h3>

<p>Now open <code>app/js/app.js</code> and make it depend on <code>gapi</code>, then create an instance of <code>ApiManager</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>define</span><span class='p'>([</span>
  <span class='s1'>&#39;gapi&#39;</span>
<span class='p'>],</span>

<span class='kd'>function</span><span class='p'>(</span><span class='nx'>ApiManager</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>App</span> <span class='o'>=</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
    <span class='k'>this</span><span class='p'>.</span><span class='nx'>connectGapi</span><span class='p'>();</span>
  <span class='p'>};</span>

  <span class='nx'>App</span><span class='p'>.</span><span class='nx'>prototype</span> <span class='o'>=</span> <span class='p'>{</span>
    <span class='nx'>connectGapi</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
      <span class='k'>this</span><span class='p'>.</span><span class='nx'>apiManager</span> <span class='o'>=</span> <span class='k'>new</span> <span class='nx'>ApiManager</span><span class='p'>();</span>
    <span class='p'>}</span>
  <span class='p'>};</span>

  <span class='k'>return</span> <span class='nx'>App</span><span class='p'>;</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>If you want to check this works by running the tests, you&#8217;ll need to change <code>test/setup.js</code> to flag <code>gapi</code> as a global:</p>
<div class='highlight'><pre><code class='javascript'><span class='kd'>var</span> <span class='nx'>assert</span> <span class='o'>=</span> <span class='nx'>chai</span><span class='p'>.</span><span class='nx'>assert</span><span class='p'>;</span>

<span class='nx'>mocha</span><span class='p'>.</span><span class='nx'>setup</span><span class='p'>({</span>
  <span class='nx'>ui</span><span class='o'>:</span> <span class='s1'>&#39;tdd&#39;</span>
<span class='p'>,</span> <span class='nx'>globals</span><span class='o'>:</span> <span class='p'>[</span><span class='s1'>&#39;bTask&#39;</span><span class='p'>,</span> <span class='s1'>&#39;gapi&#39;</span><span class='p'>,</span> <span class='s1'>&#39;___jsl&#39;</span><span class='p'>]</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>However, I don&#8217;t intend to load the API remotely during testing &#8211; this will effectively be mocked. I&#8217;ll come onto that in a later tutorial.</p>

<h3 id='results'>Results</h3>

<p><img src='/images/posts/gapi-loaded.png' alt='gapi loaded' /></p>

<p>If you run the app or tests and open a JavaScript console, a <code>gapi</code> global object should be available. Using Google&#8217;s APIs with RequireJS and Backbone.js seems like a lot of work, but most of this stuff is effectively just configuration, and once it&#8217;s done it should work solidly enough, allowing you to focus on the app design and development side of things.</p>

<h3 id='full_source_code'>Full Source Code</h3>

<p><a href='https://github.com/alexyoung/dailyjs-backbone-tutorial/tree/9d09a66b1f722ebf80198a8db76dd32a7b4a6923'>Commit 9d09a6</a>.</p>

<h3 id='references'>References</h3>

<ul>
<li><a href='https://developers.google.com/accounts/docs/OAuth2UserAgent'>Using OAuth 2.0 for Client-side Applications</a></li>
</ul>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2012/12/06/backbone-tutorial-2/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

