http://dailyjs.com/2011/01/20/framework-part-47/
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 12:21:09 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:53 GMT
ETag: "180007-52a1-4fedef296b340"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 6685
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Let's Make a Framework: JSDoc</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2011/01/20/framework-part-47">Let's Make a Framework: JSDoc</a></h2>

<div class="meta">
  20 Jan 2011 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#frameworks">frameworks</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#lmaf">lmaf</a>
    
      <a href="/tags.html#documentation">documentation</a>
    
  </span>
</div>

<div id="post">
<p>Welcome to part 47 of <em>Let&#8217;s Make a Framework</em>, the ongoing series about building a JavaScript framework.</p>
<p>If you haven&#8217;t been following along, these articles are tagged with <a href="http://dailyjs.com/tags.html#lmaf">lmaf</a>.  The project we&#8217;re creating is called <a href="http://github.com/alexyoung/turing.js">Turing</a>.</p>
<h3>JSDoc</h3>
<p>Last week I reviewed various approaches to JavaScript documentation, and I decided to use <a href="https://github.com/visionmedia/dox">dox</a>.  Dox can be installed with npm:</p>
<div class="highlight"><pre><code class="sh">npm install dox
</code></pre>
</div>
<p>By the end of this tutorial, you&#8217;ll be able to make something like this:</p>
<p><img src="/images/posts/turing_documentation.png" alt="" /></p>
<p>Although dox produces readable documentation &#8212; which is incidentally perfect for writing tutorials because the code is inline &#8212; it can&#8217;t parse everything JSDoc offers.  It&#8217;s a simple tool designed to suit the author&#8217;s requirements, but I like it and would like to see it grow in the future.</p>
<p>Despite not supporting everything outlined by <a href="http://code.google.com/p/jsdoc-toolkit/">jsdoc-toolkit</a>, I&#8217;m going to use dox and write JSDoc comments as if it fully supports them.</p>
<h3>JSDoc Comment Structure</h3>
<p>Each file in your project should contain author, copyright, and license details.  For example:</p>
<div class="highlight"><pre><code class="javascript"><span class="cm">/*!</span>
<span class="cm"> * Turing - Module Name</span>
<span class="cm"> * Copyright (C) 2010-2011 Alex R. Young </span>
<span class="cm"> * MIT Licensed</span>
<span class="cm"> */</span>

<span class="cm">/**</span>
<span class="cm"> * A private namespace to set things up against the global object.</span>
<span class="cm"> */</span>
<span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">global</span><span class="p">)</span> <span class="p">{</span>
</code></pre>
</div>
<p>I like to write comments in a relatively informal conversational style, as full sentences.  I might be extra-verbose because this is a tutorial, so you can be a bit more succinct in your own projects.</p>
<p>Where JSDoc comments come in handy is outlining the intended inputs and outputs of a function:</p>
<div class="highlight"><pre><code class="javascript">  <span class="cm">/**</span>
<span class="cm">   * Determine if an object is an `Array`.</span>
<span class="cm">   *</span>
<span class="cm">   * @param {Object} object An object that may or may not be an array</span>
<span class="cm">   * @returns {Boolean} True if the parameter is an array</span>
<span class="cm">   */</span>
  <span class="nx">turing</span><span class="p">.</span><span class="nx">isArray</span> <span class="o">=</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span> <span class="o">||</span> <span class="kd">function</span><span class="p">(</span><span class="nx">object</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">!!</span><span class="p">(</span><span class="nx">object</span> <span class="o">&amp;&amp;</span> <span class="nx">object</span><span class="p">.</span><span class="nx">concat</span>
              <span class="o">&amp;&amp;</span> <span class="nx">object</span><span class="p">.</span><span class="nx">unshift</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">object</span><span class="p">.</span><span class="nx">callee</span><span class="p">);</span>
  <span class="p">};</span>
</code></pre>
</div>
<p>Notice I&#8217;ve used backticks around the <code>Array</code> keyword.  Dox has markdown support, so this will be converted into a <code>code</code> tags in the resulting <span class="caps">HTML</span>.</p>
<p>The <code>@param</code> and <code>@returns</code> directives are known as <em>tags</em>.  The <a href="http://code.google.com/p/jsdoc-toolkit/wiki/">jsdoc-toolkit</a> wiki lists lots of tags.  The <a href="http://code.google.com/p/jsdoc-toolkit/wiki/TagParam">@param</a> tag actually has quite a few ways of defining method parameters, including support for optional parameters.</p>
<h3>Long Examples</h3>
<p>Because dox supports markdown, long code examples can be included simply through indentation:</p>
<div class="highlight"><pre><code class="javascript"><span class="cm">/**</span>
<span class="cm"> * Chain animation module calls, for example:</span>
<span class="cm"> *</span>
<span class="cm"> *     turing.anim.chain(element)</span>
<span class="cm"> *       .highlight()</span>
<span class="cm"> *       .pause(250)</span>
<span class="cm"> *       .move(100, { x: &#39;100px&#39;, y: &#39;100px&#39;, easing: &#39;ease-in-out&#39; })</span>
<span class="cm"> *       .animate(250, { width: &#39;1000px&#39; })</span>
<span class="cm"> *       .fadeOut(250)</span>
<span class="cm"> *       .pause(250)</span>
<span class="cm"> *       .fadeIn(250)</span>
<span class="cm"> *       .animate(250, { width: &#39;20px&#39; });</span>
<span class="cm"> *</span>
<span class="cm"> * @param {Object} element A DOM element</span>
<span class="cm"> * @returns {Chainer} Chained API object</span>
<span class="cm"> */</span>
<span class="nx">anim</span><span class="p">.</span><span class="nx">chain</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nx">Chainer</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
<span class="p">};</span>
</code></pre>
</div>
<h3>Generating the Documentation</h3>
<p>Dox can be run with just <code>dox file.js</code>, and it&#8217;ll output the <span class="caps">HTML</span> to the console.  The <span class="caps">HTML</span> is totally self-contained, which means there are no extra image, <span class="caps">CSS</span>, or JavaScript files.  This will generate the documentation for <a href="https://github.com/alexyoung/turing.js/blob/master/turing.core.js">turing.core.js</a>:</p>
<div class="highlight"><pre><code class="sh">dox --title Turing turing.core.js  &gt; index.html
</code></pre>
</div>
<p>I also added this to the project&#8217;s Jakefile (node-jake):</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">var</span> <span class="nx">exec</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;child_process&#39;</span><span class="p">).</span><span class="nx">exec</span><span class="p">;</span>

<span class="nx">desc</span><span class="p">(</span><span class="s1">&#39;Documentation&#39;</span><span class="p">);</span>
<span class="nx">task</span><span class="p">(</span><span class="s1">&#39;docs&#39;</span><span class="p">,</span> <span class="p">[],</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">exec</span><span class="p">(</span><span class="s1">&#39;dox --title Turing *.js  &gt; docs/index.html&#39;</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>
</div>
<h3>Build Systems</h3>
<p>The build system is closely tied to project management tasks like generating documentation.  Generating documentation should be consistent and easy to run so it doesn&#8217;t get forgotten as the project changes over time, therefore adding a <em>docs</em> task is a good idea.</p>
<p>Every time I go over TJ Holowaychuk&#8217;s projects (and <a href="https://github.com/jquery/jquery/blob/master/Makefile">jQuery</a>) I&#8217;m reminded that <span class="caps">GNU</span> <code>make</code> was more than enough for our needs.  Build system choice is partially dependent on how much JavaScript from Node, Narwhal, Rhino, etc. you want to reuse in your build system &#8212; Python, Java, and Ruby projects often use native build systems to get access to native libraries.  Also, you already know how to write JavaScript pretty well but might not be familiar with <code>make</code>.</p>
<p>However, when writing your own projects <code>make</code> is more likely to be on a system than <a href="https://github.com/mde/node-jake">node-jake</a>, and it could always invoke JavaScript scripts anyway.  I recommend giving it a look before deciding on the build system for your own projects.</p>
<p>Side note: I&#8217;ve removed the Narwhal support from the Jakefile to focus on using Node for the build system instead.  The main motivation for this was to get some cross-pollination between the Node tutorial series and this series.</p>
<h3>References</h3>
<ul>
	<li><a href="https://github.com/visionmedia/dox">dox</a></li>
	<li><a href="http://code.google.com/p/jsdoc-toolkit/w/list">jsdoc-toolkit wiki</a></li>
	<li><a href="https://github.com/mde/node-jake">node-jake</a></li>
	<li><a href="https://github.com/jquery/jquery/blob/master/Makefile">jQuery&#8217;s Makefile</a></li>
</ul>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2011/01/20/framework-part-47/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

