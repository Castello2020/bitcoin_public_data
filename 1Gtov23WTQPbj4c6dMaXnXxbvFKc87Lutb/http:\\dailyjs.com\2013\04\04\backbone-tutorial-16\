http://dailyjs.com/2013/04/04/backbone-tutorial-16/
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 12:20:22 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:54 GMT
ETag: "131c61-7698-4fedef2a5f580"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 7844
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Backbone.js Tutorial: jQuery Plugins and Moving Tasks</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2013/04/04/backbone-tutorial-16">Backbone.js Tutorial: jQuery Plugins and Moving Tasks</a></h2>

<div class="meta">
  04 Apr 2013 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#backbone.js">backbone.js</a>
    
      <a href="/tags.html#mvc">mvc</a>
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#backgoog">backgoog</a>
    
      <a href="/tags.html#bootstrap">bootstrap</a>
    
      <a href="/tags.html#jquery">jquery</a>
    
  </span>
</div>

<div id="post">
<ul class='parts'>
  <li><a href='http://dailyjs.com/2012/11/29/backbone-tutorial-1/'>Part 1: Build Environment</a></li>
  <li><a href='http://dailyjs.com/2012/12/06/backbone-tutorial-2/'>Part 2: Google's APIs and RequireJS</a></li>
  <li><a href='http://dailyjs.com/2012/12/13/backbone-tutorial-3/'>Part 3: Authenticating with OAuth2</a></li>
  <li><a href='http://dailyjs.com/2012/12/20/backbone-tutorial-4/'>Part 4: Backbone.sync</a></li>
  <li><a href='http://dailyjs.com/2012/12/27/backbone-tutorial-5/'>Part 5: List Views</a></li>
  <li><a href='http://dailyjs.com/2013/01/03/backbone-tutorial-6/'>Part 6: Creating Lists</a></li>
  <li><a href='http://dailyjs.com/2013/01/10/backbone-tutorial-7/'>Part 7: Editing Lists</a></li>
  <li><a href='http://dailyjs.com/2013/01/17/backbone-tutorial-8/'>Part 8: Deleting Lists</a></li>
  <li><a href='http://dailyjs.com/2013/01/24/backbone-tutorial-9/'>Part 9: Tasks</a></li>
  <li><a href='http://dailyjs.com/2013/01/31/backbone-tutorial-10/'>Part 10: Oh No Not More Tasks</a></li>
  <li><a href='http://dailyjs.com/2013/02/07/backbone-tutorial-11/'>Part 11: Spies, Stubs, and Mocks</a></li>
  <li><a href='http://dailyjs.com/2013/02/14/backbone-tutorial-12/'>Part 12: Testing with Mocks</a></li>
  <li><a href='http://dailyjs.com/2013/03/07/backbone-tutorial-13/'>Part 13: Routes</a></li>
  <li><a href='http://dailyjs.com/2013/03/14/backbone-tutorial-14/'>Part 14: Customising the UI</a></li>
  <li><a href='http://dailyjs.com/2013/03/28/backbone-tutorial-15/'>Part 15: Updates for 1.0, Clear Complete</a></li>
  <li><a href='http://dailyjs.com/2013/04/04/backbone-tutorial-16/'><strong>Part 16: jQuery Plugins</strong></a></li>
</ul>
<h3 id='preparation'>Preparation</h3>

<p>Before starting this tutorial, you&#8217;ll need the following:</p>

<ul>
<li><a href='https://github.com/alexyoung/dailyjs-backbone-tutorial'>alexyoung / dailyjs-backbone-tutorial</a> at commit <code>705bcb4</code></li>

<li>The API key from part 2</li>

<li>The &#8220;Client ID&#8221; key from part 2</li>

<li>Update <code>app/js/config.js</code> with your keys (if you&#8217;ve checked out my source)</li>
</ul>

<p>To check out the source, run the following commands (or use a suitable Git GUI tool):</p>
<div class='highlight'><pre><code class='text'>git clone git@github.com:alexyoung/dailyjs-backbone-tutorial.git
cd dailyjs-backbone-tutorial
git reset --hard 705bcb4
</code></pre>
</div>
<h3 id='using_backbone_with_jquery_plugins'>Using Backbone with jQuery Plugins</h3>

<p>Although Backbone doesn&#8217;t need to be used with jQuery specifically, a lot of people use it with jQuery (and RequireJS) to get access to the diverse plugins made by the jQuery community. In this tutorial I&#8217;ll explain how to use jQuery plugins with Backbone projects, and how to find ones that will work well.</p>

<p>The example I&#8217;ve used is integrating a drag-and-drop &#8220;sortable&#8221; plugin to allow tasks to be reordered.</p>

<h3 id='html5_sortable'>HTML5 Sortable</h3>

<p>The plugin I&#8217;ve used for drag-and-drop is the <a href='http://farhadi.ir/projects/html5sortable'>HTML5 Sortable Plugin</a> by Ali Farhadi. The reason I used this particular plugin is it has a simple event-based API that allows the plugin to be unloaded and sort events to be captured and responded to. It just needs a container element and the child elements that need to be sorted. The unordered list of tasks in this project directly translates to the expected markup.</p>

<p>Sometimes it&#8217;s easier to just write out data attributes to elements rather than trying to create relationships between the DOM nodes used by plugins and models. HTML5 Sortable emits a <code>&#39;sortupdate&#39;</code> event when a node has been dragged and dropped, and it&#8217;ll pass the relevant element to the listener callback. From this we need to figure out which model has changed, then translate that into something Google&#8217;s API can understand.</p>

<h3 id='loading_plugins_with_requirejs'>Loading Plugins with RequireJS</h3>

<p>In an earlier tutorial I demonstrated how to load non-AMD libraries using RequireJS. If you want a recap, just check out <code>app/js/main.js</code> and look at the <code>shim</code> property in the RequireJS configuration:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>requirejs</span><span class='p'>.</span><span class='nx'>config</span><span class='p'>({</span>
  <span class='nx'>baseUrl</span><span class='o'>:</span> <span class='s1'>&#39;js&#39;</span><span class='p'>,</span>

  <span class='nx'>paths</span><span class='o'>:</span> <span class='p'>{</span>
    <span class='nx'>text</span><span class='o'>:</span> <span class='s1'>&#39;lib/text&#39;</span>
  <span class='p'>},</span>

  <span class='nx'>shim</span><span class='o'>:</span> <span class='p'>{</span>
    <span class='s1'>&#39;lib/underscore-min&#39;</span><span class='o'>:</span> <span class='p'>{</span>
      <span class='nx'>exports</span><span class='o'>:</span> <span class='s1'>&#39;_&#39;</span>
    <span class='p'>},</span>
    <span class='s1'>&#39;lib/backbone&#39;</span><span class='o'>:</span> <span class='p'>{</span>
      <span class='nx'>deps</span><span class='o'>:</span> <span class='p'>[</span><span class='s1'>&#39;lib/underscore-min&#39;</span><span class='p'>]</span>
    <span class='p'>,</span> <span class='nx'>exports</span><span class='o'>:</span> <span class='s1'>&#39;Backbone&#39;</span>
    <span class='p'>},</span>
    <span class='s1'>&#39;app&#39;</span><span class='o'>:</span> <span class='p'>{</span>
      <span class='nx'>deps</span><span class='o'>:</span> <span class='p'>[</span><span class='s1'>&#39;lib/underscore-min&#39;</span><span class='p'>,</span> <span class='s1'>&#39;lib/backbone&#39;</span><span class='p'>,</span> <span class='s1'>&#39;lib/jquery.sortable&#39;</span><span class='p'>]</span>
    <span class='p'>}</span>
  <span class='p'>}</span>
<span class='p'>});</span>
</code></pre>
</div>
<p>The <code>&#39;app&#39;</code> property expresses a dependency between the main Backbone application file and <code>lib/jquery.sortable</code>, which means <code>/lib/jquery.sortable.js</code> will get automatically loaded (or compiled in by <code>r.js</code> when creating a production build of the app).</p>

<h3 id='google_tasks_ordering_api'>Google Tasks Ordering API</h3>

<p>It would be too easy if HTML5 Sortable&#8217;s API was a one-to-one match with the Google Task&#8217;s ordering API. Google&#8217;s API has a specific method for moving tasks, and it&#8217;s based around moving one task to occupy the position of another one:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>gapi</span><span class='p'>.</span><span class='nx'>client</span><span class='p'>.</span><span class='nx'>tasks</span><span class='p'>.</span><span class='nx'>tasks</span><span class='p'>.</span><span class='nx'>move</span><span class='p'>({</span> <span class='nx'>tasklist</span><span class='o'>:</span> <span class='nx'>listId</span><span class='p'>,</span> <span class='nx'>task</span><span class='o'>:</span> <span class='nx'>id</span><span class='p'>,</span> <span class='nx'>previous</span><span class='o'>:</span> <span class='nx'>previousId</span> <span class='p'>});</span>
</code></pre>
</div>
<p>Moving a task to the top of the list is handled by passing <code>null</code> for <code>previous</code>.</p>

<p>Next I&#8217;ll explain how to create some simple interface elements for the draggable handle, and then we&#8217;ll look at how to persist moved tasks by translating Google&#8217;s API into Backbone model and collection code.</p>

<h3 id='implementation_views_and_templates'>Implementation: Views and Templates</h3>

<p>I added a little handle by using a Bootstrap icon and an anchor element in <code>app/js/templates/tasks/task.html</code>:</p>
<div class='highlight'><pre><code class='html'><span class='nt'>&lt;a</span> <span class='na'>href=</span><span class='s'>&quot;#&quot;</span> <span class='na'>class=</span><span class='s'>&quot;handle pull-right&quot;</span><span class='nt'>&gt;&lt;i</span> <span class='na'>class=</span><span class='s'>&quot;icon-move&quot;</span><span class='nt'>&gt;&lt;/i&gt;&lt;/a&gt;</span>
</code></pre>
</div>
<p>Next I added the code that maps between the Backbone view and the jQuery HTML5 Sortable plugin to <code>app/js/views/tasks/index.js</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>makeSortable</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>()</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>$el</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>$el</span><span class='p'>.</span><span class='nx'>find</span><span class='p'>(</span><span class='s1'>&#39;#task-list&#39;</span><span class='p'>);</span>
  <span class='k'>if</span> <span class='p'>(</span><span class='k'>this</span><span class='p'>.</span><span class='nx'>collection</span><span class='p'>.</span><span class='nx'>length</span><span class='p'>)</span> <span class='p'>{</span>
    <span class='nx'>$el</span><span class='p'>.</span><span class='nx'>sortable</span><span class='p'>(</span><span class='s1'>&#39;destroy&#39;</span><span class='p'>);</span>
    <span class='nx'>$el</span><span class='p'>.</span><span class='nx'>sortable</span><span class='p'>({</span> <span class='nx'>handle</span><span class='o'>:</span> <span class='s1'>&#39;.handle&#39;</span> <span class='p'>}).</span><span class='nx'>bind</span><span class='p'>(</span><span class='s1'>&#39;sortupdate&#39;</span><span class='p'>,</span> <span class='nx'>_</span><span class='p'>.</span><span class='nx'>bind</span><span class='p'>(</span><span class='k'>this</span><span class='p'>.</span><span class='nx'>saveTaskOrder</span><span class='p'>,</span> <span class='k'>this</span><span class='p'>));</span>
  <span class='p'>}</span>
<span class='p'>},</span>

<span class='nx'>saveTaskOrder</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>e</span><span class='p'>,</span> <span class='nx'>o</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>id</span> <span class='o'>=</span> <span class='nx'>$</span><span class='p'>(</span><span class='nx'>o</span><span class='p'>.</span><span class='nx'>item</span><span class='p'>).</span><span class='nx'>find</span><span class='p'>(</span><span class='s1'>&#39;.check-task&#39;</span><span class='p'>).</span><span class='nx'>data</span><span class='p'>(</span><span class='s1'>&#39;taskId&#39;</span><span class='p'>)</span>
    <span class='p'>,</span> <span class='nx'>previous</span> <span class='o'>=</span> <span class='nx'>$</span><span class='p'>(</span><span class='nx'>o</span><span class='p'>.</span><span class='nx'>item</span><span class='p'>).</span><span class='nx'>prev</span><span class='p'>()</span>
    <span class='p'>,</span> <span class='nx'>previousId</span> <span class='o'>=</span> <span class='nx'>previous</span><span class='p'>.</span><span class='nx'>length</span> <span class='o'>?</span> <span class='nx'>$</span><span class='p'>(</span><span class='nx'>previous</span><span class='p'>).</span><span class='nx'>find</span><span class='p'>(</span><span class='s1'>&#39;.check-task&#39;</span><span class='p'>).</span><span class='nx'>data</span><span class='p'>(</span><span class='s1'>&#39;taskId&#39;</span><span class='p'>)</span> <span class='o'>:</span> <span class='kc'>null</span>
    <span class='p'>,</span> <span class='nx'>request</span>
    <span class='p'>;</span>

  <span class='k'>this</span><span class='p'>.</span><span class='nx'>collection</span><span class='p'>.</span><span class='nx'>move</span><span class='p'>(</span><span class='nx'>id</span><span class='p'>,</span> <span class='nx'>previousId</span><span class='p'>,</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>model</span><span class='p'>);</span>
<span class='p'>},</span>
</code></pre>
</div>
<p>The <code>makeSortable</code> method makes an element that appears within <code>TasksIndexView</code> &#8220;sortable&#8221; &#8211; that is, HTML Sortable has been wrapped around it. The plugin&#8217;s <code>&#39;sortupdate&#39;</code> method is then bound to <code>saveTaskOrder</code>.</p>

<p>The <code>saveTaskOrder</code> method gets the current task&#8217;s ID by looking at the checkbox, because I&#8217;d already added a data attribute to that element in the template. This ID is then passed to the collection with the previous task&#8217;s ID. In this case, the previous task is the one adjacent to it, which Google&#8217;s API needs to figure out how to move the task.</p>

<p>The collection property in this view is a <code>Tasks</code> property, so let&#8217;s take a look at how to implement the <code>move</code> method that causes the changes to be persisted.</p>

<h3 id='implementation_models_and_collections'>Implementation: Models and Collections</h3>

<p>Open <code>app/js/collections/tasks.js</code> and add a new method called <code>move</code>:</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>move</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>id</span><span class='p'>,</span> <span class='nx'>previousId</span><span class='p'>,</span> <span class='nx'>list</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='kd'>var</span> <span class='nx'>model</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>get</span><span class='p'>(</span><span class='nx'>id</span><span class='p'>)</span>
    <span class='p'>,</span> <span class='nx'>toModel</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>get</span><span class='p'>(</span><span class='nx'>previousId</span><span class='p'>)</span>
    <span class='p'>,</span> <span class='nx'>index</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>indexOf</span><span class='p'>(</span><span class='nx'>toModel</span><span class='p'>)</span> <span class='o'>+</span> <span class='mi'>1</span>
    <span class='p'>;</span>

  <span class='k'>this</span><span class='p'>.</span><span class='nx'>remove</span><span class='p'>(</span><span class='nx'>model</span><span class='p'>,</span> <span class='p'>{</span> <span class='nx'>silent</span><span class='o'>:</span> <span class='kc'>true</span> <span class='p'>});</span>
  <span class='k'>this</span><span class='p'>.</span><span class='nx'>add</span><span class='p'>(</span><span class='nx'>model</span><span class='p'>,</span> <span class='p'>{</span> <span class='nx'>at</span><span class='o'>:</span> <span class='nx'>index</span><span class='p'>,</span> <span class='nx'>silent</span><span class='o'>:</span> <span class='kc'>true</span> <span class='p'>});</span>

  <span class='c1'>// Persist the change</span>
  <span class='nx'>list</span><span class='p'>.</span><span class='nx'>moveTask</span><span class='p'>({</span> <span class='nx'>task</span><span class='o'>:</span> <span class='nx'>id</span><span class='p'>,</span> <span class='nx'>previous</span><span class='o'>:</span> <span class='nx'>previousId</span> <span class='p'>});</span>
<span class='p'>}</span>
</code></pre>
</div>
<p>This method just exists to trigger <code>remove</code> and <code>add</code> calls on the collection so cause the objects to be reshuffled internally. It then calls <code>moveTask</code> on the <code>TaskList</code> model (in <code>app/js/models/tasklist.js</code>):</p>
<div class='highlight'><pre><code class='javascript'><span class='nx'>moveTask</span><span class='o'>:</span> <span class='kd'>function</span><span class='p'>(</span><span class='nx'>options</span><span class='p'>)</span> <span class='p'>{</span>
  <span class='nx'>options</span><span class='p'>[</span><span class='s1'>&#39;tasklist&#39;</span><span class='p'>]</span> <span class='o'>=</span> <span class='k'>this</span><span class='p'>.</span><span class='nx'>get</span><span class='p'>(</span><span class='s1'>&#39;id&#39;</span><span class='p'>);</span>
  <span class='kd'>var</span> <span class='nx'>request</span> <span class='o'>=</span> <span class='nx'>gapi</span><span class='p'>.</span><span class='nx'>client</span><span class='p'>.</span><span class='nx'>tasks</span><span class='p'>.</span><span class='nx'>tasks</span><span class='p'>.</span><span class='nx'>move</span><span class='p'>(</span><span class='nx'>options</span><span class='p'>);</span>

  <span class='nx'>Backbone</span><span class='p'>.</span><span class='nx'>gapiRequest</span><span class='p'>(</span><span class='nx'>request</span><span class='p'>,</span> <span class='s1'>&#39;update&#39;</span><span class='p'>,</span> <span class='k'>this</span><span class='p'>,</span> <span class='nx'>options</span><span class='p'>);</span>
<span class='p'>}</span>
</code></pre>
</div>
<p>The <code>gapiRequest</code> method forms the basis for the custom <code>Backbone.sync</code> method used in this project, which I&#8217;ve talked about in previous tutorials. I wasn&#8217;t able to figure out how to make <code>Backbone.sync</code> cope with moving items in a way that made sense given how <code>gapi.client.tasks.tasks.move</code> works, but I was able to at least reuse some of the syncing functionality by creating a request and calling the &#8220;standard&#8221; request handler.</p>

<h3 id='summary'>Summary</h3>

<p>When you can&#8217;t find a suitable Backbone plugin for something and want to use a jQuery plugin, my advice is to look for plugins that have event-based APIs and can be cleanly unloaded. That will make them easy to hook into your Backbone views.</p>

<p>The full source for this tutorial can be found in <a href='https://github.com/alexyoung/dailyjs-backbone-tutorial/commit/e9edfa3157fd460a9c82faa6c6bb9d87ccdca443'>alexyoung / dailyjs-backbone-tutorial, commit e9edfa3</a>.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2013/04/04/backbone-tutorial-16/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

