http://dailyjs.com/2011/04/18/node-tutorial-21/
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 10:42:47 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:54 GMT
ETag: "16c309-796a-4fedef2a5f580"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 7517
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Node Tutorial Part 21: Connection Management</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2011/04/18/node-tutorial-21">Node Tutorial Part 21: Connection Management</a></h2>

<div class="meta">
  18 Apr 2011 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#server">server</a>
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#lmawa">lmawa</a>
    
      <a href="/tags.html#nodepad">nodepad</a>
    
  </span>
</div>

<div id="post">
<p>Welcome to part 21 of <em>Let&#8217;s Make a Web App</em>, a tutorial series about building a web app with <a href="http://nodejs.org/">Node</a>.  This series will walk you through the major areas you&#8217;ll need to face when building your own applications.  These tutorials are tagged with <a href="/tags.html#lmawa">lmawa</a>.</p>
<p><a href="#" class="showPrevious">Click to show previous tutorials</a>.</p>
<div class="previous" style="display: none">
<ul>
	<li><a href="http://dailyjs.com/2010/11/01/node-tutorial/">Part 1: Introduction</a></li>
	<li><a href="http://dailyjs.com/2010/11/08/node-tutorial-2/">Part 2: Installation and Skeleton App</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/4ea936b4b426012528fc722c7576391b48d5a0b7">4ea936b</a></li>
	<li><a href="http://dailyjs.com/2010/11/15/node-tutorial-3/">Part 3: RESTful Methods and Testing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/39e66cb9d11a67044495beb0de1934ac4d9c4786">39e66cb</a></li>
	<li><a href="http://dailyjs.com/2010/11/22/node-tutorial-4/">Part 4: Templates, Partials, Creating and Editing Documents</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/f66fdb5c3bebdf693f62884ffc06a40b93328bb5">f66fdb</a></li>
	<li><a href="http://dailyjs.com/2010/12/06/node-tutorial-5/">Part 5: Authentication, Sessions, Access Control Middleware</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/03fe9b272fea1beb98ffefcf5f7ed226c81c49fd">03fe9b</a></li>
	<li><a href="http://dailyjs.com/2010/12/20/node-tutorial-6/">Part 6: Interface Basics</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/f2261c510c987b35df1e6e000be6e1e591cd9d6d">f2261c</a></li>
	<li><a href="http://dailyjs.com/2010/12/27/node-tutorial-7/">Part 7: Node Library Versions, Jade Tricks, Error Pages</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/929f5642ca1b2fa664df517457e056c92490d892">929f5</a></li>
	<li><a href="http://dailyjs.com/2011/01/03/node-tutorial-8/">Part 8: Flash Messages and Helpers</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/841a493c03f0421dd1a2279fccac3fbcf1e17b1f">841a49</a></li>
	<li><a href="http://dailyjs.com/2011/01/10/node-tutorial-9/">Part 9: Remember Me</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/1904c6b7f95d708474a5d42e8cdfd40e96243a7a">1904c</a></li>
	<li><a href="http://dailyjs.com/2011/01/24/node-tutorial-10/">Part 10: Markdown</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/11d33e19066e76c8559857fb780ac9fd1ecf68ac">11d33</a></li>
	<li><a href="http://dailyjs.com/2011/01/31/node-tutorial-11/">Part 11: Better Testing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/6a269ce4ddb6c7dc78598b488c93b38828fb5763">6a269ce</a></li>
	<li><a href="http://dailyjs.com/2011/02/07/node-tutorial-12/">Part 12: Updating Mongoose</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/2a8725f089ef052ec8b4ccfed8f6fbece70a606a">2a8725</a></li>
	<li><a href="http://dailyjs.com/2011/02/14/node-tutorial-13/">Part 13: Stylus</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/0a70e40cafd982c1f2421ecf16caa887fc49ae39">0a70e40</a></li>
	<li><a href="http://dailyjs.com/2011/02/21/node-tutorial-14/">Part 14: Email</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/2e81a7b8a1863db75485e4c49af5753a21266178">2e81a7b</a></li>
	<li><a href="http://dailyjs.com/2011/02/28/node-tutorial-15/">Part 15: Node Versions, npm Publishing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/89abea12171de333159ef2be89890e9c56eb86af">89abea1</a></li>
	<li><a href="http://dailyjs.com/2011/03/14/node-tutorial-16/">Part 16: Updating to Node 0.4.2 and Express 2</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/19fbb2e15dd2e247397e9d9d1caea3a4800a865e">19fbb2</a></li>
	<li><a href="http://dailyjs.com/2011/03/21/node-tutorial-17/">Part 17: UI Improvements</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/5c5fb5c5f5ad296f192dc5ca49c91aa340efe465">5c5fb5c</a></li>
	<li><a href="http://dailyjs.com/2011/03/28/node-tutorial-18/">Part 18: Full Text Search</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/ceb9b32a09dec3a52956bc9c631b68487b34bf23">ceb9b32</a></li>
	<li><a href="http://dailyjs.com/2011/04/04/node-tutorial-19/">Part 19: Backbone.js</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/8e8624073cc27fe377d8417159d69a9f3318cc22">8e86240</a></li>
	<li><a href="http://dailyjs.com/2011/04/11/node-tutorial-20/">Part 20: Backbone.js Persistence</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/7d5cc3d4631efee86719e35522f514dbc302c193">7d5cc3d</a><br />
</div></li>
</ul>
<h3>Package Updates</h3>
<p>I&#8217;ve updated all the packages to the latest versions.  Express is now on 2.2.2!</p>
<h3><span class="caps">HTML</span> Preview</h3>
<p><img src="/images/posts/nodepad-html.png" alt="" /></p>
<p>In the Backbone.js tutorials we already added a stub to <code>DocumentControls</code> called <code>showHTML</code>.  This is meant to show the <span class="caps">HTML</span> preview, which can be obtained by viewing a document with <code>.html</code> appended to the <span class="caps">URL</span>.  I added a convenience function to the model for getting the right <span class="caps">URL</span>:</p>
<div class="highlight"><pre><code class="javascript">  <span class="nx">Document</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
    <span class="nx">Collection</span><span class="o">:</span> <span class="nx">Documents</span><span class="p">,</span>

    <span class="nx">url</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
      <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">urlWithFormat</span><span class="p">(</span><span class="s1">&#39;json&#39;</span><span class="p">);</span>
    <span class="p">},</span>

    <span class="nx">urlWithFormat</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;/documents/&#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="nx">format</span> <span class="o">:</span> <span class="s1">&#39;/documents.json&#39;</span><span class="p">;</span>
    <span class="p">},</span>

    <span class="c1">// ...</span>
</code></pre>
</div>
<p>Then added the event <code>'click #html-button': 'showHTML'</code> to <code>DocumentControls</code> and updated <code>showHTML</code>:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">showHTML</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">model</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">;</span>
  <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
  <span class="nx">$</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">urlWithFormat</span><span class="p">(</span><span class="s1">&#39;html&#39;</span><span class="p">),</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">height</span><span class="p">());</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#html-container&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#html-container&#39;</span><span class="p">).</span><span class="nx">dialog</span><span class="p">({</span>
      <span class="nx">title</span><span class="o">:</span> <span class="nx">model</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">),</span>
      <span class="nx">autoOpen</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nx">modal</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="nx">width</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">width</span><span class="p">()</span> <span class="o">*</span> <span class="mf">0.95</span><span class="p">,</span>
      <span class="nx">height</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">height</span><span class="p">()</span> <span class="o">*</span> <span class="mf">0.90</span>
    <span class="p">});</span>
  <span class="p">});</span>
<span class="p">}</span>
</code></pre>
</div>
<p>I&#8217;m using <code>dialog</code> from jQuery UI to display the contents of the <span class="caps">HTML</span> document.</p>
<h3>Express Responses</h3>
<p>It was possible to make some of my server-side methods hang, like this one:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/search.:format?&#39;</span><span class="p">,</span> <span class="nx">loadUser</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">Document</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span> <span class="nx">user_id</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">currentUser</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nx">keywords</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">s</span> <span class="o">?</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">s</span> <span class="o">:</span> <span class="kc">null</span> <span class="p">},</span>
                <span class="p">[],</span> <span class="p">{</span> <span class="nx">sort</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">,</span> <span class="s1">&#39;descending&#39;</span><span class="p">]</span> <span class="p">},</span>
                <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">documents</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">case</span> <span class="s1">&#39;json&#39;</span><span class="o">:</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">documents</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">return</span> <span class="p">{</span> <span class="nx">title</span><span class="o">:</span> <span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">d</span><span class="p">.</span><span class="nx">_id</span> <span class="p">};</span>
        <span class="p">}));</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">});</span>
<span class="p">});</span>
</code></pre>
</div>
<p>This is poor style because an unrecognised format would cause the app to hang.  You should avoid this as much as possible when building Express apps and always send something back to the browser:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/search.:format?&#39;</span><span class="p">,</span> <span class="nx">loadUser</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">Document</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span> <span class="nx">user_id</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">currentUser</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nx">keywords</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">s</span> <span class="o">?</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">s</span> <span class="o">:</span> <span class="kc">null</span> <span class="p">},</span>
                <span class="p">[],</span> <span class="p">{</span> <span class="nx">sort</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">,</span> <span class="s1">&#39;descending&#39;</span><span class="p">]</span> <span class="p">},</span>
                <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">documents</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">format</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">case</span> <span class="s1">&#39;json&#39;</span><span class="o">:</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">documents</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">return</span> <span class="p">{</span> <span class="nx">title</span><span class="o">:</span> <span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">d</span><span class="p">.</span><span class="nx">_id</span> <span class="p">};</span>
        <span class="p">}));</span>
      <span class="k">break</span><span class="p">;</span>

      <span class="c1">// Here</span>
      <span class="k">default</span><span class="o">:</span>
        <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s1">&#39;Format not available&#39;</span><span class="p">,</span> <span class="mi">400</span><span class="p">);</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">});</span>
<span class="p">});</span>
</code></pre>
</div>
<p>TJ Holowaychuk pointed this out to me in the comments.</p>
<p>I&#8217;m not sure if a 400 <em>Bad Request</em> is the best way to respond though.  What about 406 Not Acceptable?  I&#8217;m sure there&#8217;s a standard convention, but I read through part of <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">rfc2616</a> and couldn&#8217;t decide.</p>
<p>An additional way to safeguard against hung connections is by using middleware to disconnect them after a period of time.  The <a href="https://github.com/LearnBoost/connect-timeout">Connect-timeout</a> middleware by Guillermo Rauch could be used to do this.  Long-running connections are still allowed with this middleware by using the <code>clearTimeout</code> method which gets added to the request objects.</p>
<p>It&#8217;s fairly easy to use:</p>
<div class="highlight"><pre><code class="javascript"><span class="kd">var</span> <span class="nx">connectTimeout</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;connect-timeout@0.0.1&#39;</span><span class="p">),</span>
    <span class="c1">// ...</span>

<span class="nx">app</span><span class="p">.</span><span class="nx">configure</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">connectTimeout</span><span class="p">({</span> <span class="nx">time</span><span class="o">:</span> <span class="mi">10000</span> <span class="p">}));</span>
  <span class="c1">// ...</span>
</code></pre>
</div>
<p>There are options for error code and time.</p>
<p>This week&#8217;s code is <a href="https://github.com/alexyoung/nodepad/tree/2fde2201b663d01ade803c8d76c66e329d6acef5">commit 2fde220</a>.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2011/04/18/node-tutorial-21/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

