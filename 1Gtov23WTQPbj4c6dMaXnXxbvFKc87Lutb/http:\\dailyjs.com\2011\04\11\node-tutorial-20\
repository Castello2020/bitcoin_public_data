http://dailyjs.com/2011/04/11/node-tutorial-20/
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 15:20:16 GMT
Server: Apache/2.2.16 (Debian) DAV/2 SVN/1.6.12 PHP/5.3.3-7+squeeze19 with Suhosin-Patch mod_python/3.3.1 Python/2.6.6 Phusion_Passenger/3.0.7
Last-Modified: Wed, 23 Jul 2014 16:36:54 GMT
ETag: "16c27f-706e-4fedef2a5f580"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 7345
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="readability-verification" content="WMMgm9NJRpLhScSjQYrbY8eang5M9LVB5RMtFNcU"/>
  <meta name="google-site-verification" content="8c4TegFWyWioqBSA_RyiKdOSR9g2JVNodKB4cmfXzcY" />
  <title>DailyJS: Node Tutorial Part 20: Backbone.js</title>
  <meta name="author" content="DailyJS Staff" />
  <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://feeds.feedburner.com/dailyjs" />
  <link rel="stylesheet" href="/stylesheets/syntax.css" type="text/css" />
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" />
  <script src="/javascripts/jquery-1.5.1.min.js" type="text/javascript"></script>
  <script src="/javascripts/all.js" type="text/javascript"></script>
  <link href="https://plus.google.com/110075199769457074728/" rel="publisher" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <script type="text/javascript">
    // var disqus_developer = 1; 
  </script>
  <script type="text/javascript">
  var disqus_shortname = 'dailyjs';
  (function () {
    var s = document.createElement('script'); s.async = true;
    s.src = 'http://disqus.com/forums/dailyjs/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
  </script>
  <script type="text/javascript">var _sf_startpt=(new Date()).getTime()</script>
  <script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-11413789-1");
  pageTracker._trackPageview();
  } catch(err) {}</script>
  <script type="text/javascript">
  /* <![CDATA[ */
      (function() {
          var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
          s.type = 'text/javascript';
          s.async = true;
          s.src = 'http://api.flattr.com/js/0.6/load.js?mode=auto';
          t.parentNode.insertBefore(s, t);
      })();
  /* ]]> */
  </script>
</head>
<body>
  <div class="navbar">
    <div class="navbar-inner">
      <div class="container">
        <a class="brand" href="http://dailyjs.com">
          DailyJS
        </a>
      </div>
      <ul class="nav">
        <li class="twitter-button"><a href="https://twitter.com/dailyjs" class="twitter-follow-button" data-show-count="false">@dailyjs</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></li>
        <li><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Ffacebook.com%2Fdailyjs&amp;layout=button_count&amp;show_faces=true&amp;width=90&amp;action=like&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></li>
        <li><script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script><div class="g-plusone" data-size="medium" data-annotation="none"></div></li>
        <li><a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed24.png" alt="Feed" /></a></li>
      </ul>
      <div class="nav-collapse">
        <form class="navbar-search" action="http://www.google.com/search" method="get">
          <input name="sitesearch" type="hidden" value="dailyjs.com" />
          <input type="text" class="search-query" name="q" placeholder="Search">
        </form>
      </div>
    </div>
  </div>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="/">Home</a></li>
      <li><a href="http://contact.dailyjs.com">Contact</a></li>
      <li><a href="/subscribe.html">Subscribe</a></li>
      <li><a href="/sponsored-content.html">Sponsorship</a></li>
    </ul>
  </div>
  <div id="container">
    <div id="content">
      <h2 class="post"><a href="/2011/04/11/node-tutorial-20">Node Tutorial Part 20: Backbone.js</a></h2>

<div class="meta">
  11 Apr 2011 |
  <span class="author">By Alex Young</span> |
  <span class="tags">
    <img alt="Tags" class="icon" src="/images/tag.gif" />
    
      <a href="/tags.html#server">server</a>
    
      <a href="/tags.html#node">node</a>
    
      <a href="/tags.html#tutorials">tutorials</a>
    
      <a href="/tags.html#lmawa">lmawa</a>
    
      <a href="/tags.html#nodepad">nodepad</a>
    
  </span>
</div>

<div id="post">
<p>Welcome to part 20 of <em>Let&#8217;s Make a Web App</em>, a tutorial series about building a web app with <a href="http://nodejs.org/">Node</a>.  This series will walk you through the major areas you&#8217;ll need to face when building your own applications.  These tutorials are tagged with <a href="/tags.html#lmawa">lmawa</a>.</p>
<p><a href="#" class="showPrevious">Click to show previous tutorials</a>.</p>
<div class="previous" style="display: none">
<ul>
	<li><a href="http://dailyjs.com/2010/11/01/node-tutorial/">Part 1: Introduction</a></li>
	<li><a href="http://dailyjs.com/2010/11/08/node-tutorial-2/">Part 2: Installation and Skeleton App</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/4ea936b4b426012528fc722c7576391b48d5a0b7">4ea936b</a></li>
	<li><a href="http://dailyjs.com/2010/11/15/node-tutorial-3/">Part 3: RESTful Methods and Testing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/39e66cb9d11a67044495beb0de1934ac4d9c4786">39e66cb</a></li>
	<li><a href="http://dailyjs.com/2010/11/22/node-tutorial-4/">Part 4: Templates, Partials, Creating and Editing Documents</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/commit/f66fdb5c3bebdf693f62884ffc06a40b93328bb5">f66fdb</a></li>
	<li><a href="http://dailyjs.com/2010/12/06/node-tutorial-5/">Part 5: Authentication, Sessions, Access Control Middleware</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/03fe9b272fea1beb98ffefcf5f7ed226c81c49fd">03fe9b</a></li>
	<li><a href="http://dailyjs.com/2010/12/20/node-tutorial-6/">Part 6: Interface Basics</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/f2261c510c987b35df1e6e000be6e1e591cd9d6d">f2261c</a></li>
	<li><a href="http://dailyjs.com/2010/12/27/node-tutorial-7/">Part 7: Node Library Versions, Jade Tricks, Error Pages</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/929f5642ca1b2fa664df517457e056c92490d892">929f5</a></li>
	<li><a href="http://dailyjs.com/2011/01/03/node-tutorial-8/">Part 8: Flash Messages and Helpers</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/841a493c03f0421dd1a2279fccac3fbcf1e17b1f">841a49</a></li>
	<li><a href="http://dailyjs.com/2011/01/10/node-tutorial-9/">Part 9: Remember Me</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/1904c6b7f95d708474a5d42e8cdfd40e96243a7a">1904c</a></li>
	<li><a href="http://dailyjs.com/2011/01/24/node-tutorial-10/">Part 10: Markdown</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/11d33e19066e76c8559857fb780ac9fd1ecf68ac">11d33</a></li>
	<li><a href="http://dailyjs.com/2011/01/31/node-tutorial-11/">Part 11: Better Testing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/6a269ce4ddb6c7dc78598b488c93b38828fb5763">6a269ce</a></li>
	<li><a href="http://dailyjs.com/2011/02/07/node-tutorial-12/">Part 12: Updating Mongoose</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/2a8725f089ef052ec8b4ccfed8f6fbece70a606a">2a8725</a></li>
	<li><a href="http://dailyjs.com/2011/02/14/node-tutorial-13/">Part 13: Stylus</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/0a70e40cafd982c1f2421ecf16caa887fc49ae39">0a70e40</a></li>
	<li><a href="http://dailyjs.com/2011/02/21/node-tutorial-14/">Part 14: Email</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/2e81a7b8a1863db75485e4c49af5753a21266178">2e81a7b</a></li>
	<li><a href="http://dailyjs.com/2011/02/28/node-tutorial-15/">Part 15: Node Versions, npm Publishing</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/89abea12171de333159ef2be89890e9c56eb86af">89abea1</a></li>
	<li><a href="http://dailyjs.com/2011/03/14/node-tutorial-16/">Part 16: Updating to Node 0.4.2 and Express 2</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/19fbb2e15dd2e247397e9d9d1caea3a4800a865e">19fbb2</a></li>
	<li><a href="http://dailyjs.com/2011/03/21/node-tutorial-17/">Part 17: UI Improvements</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/5c5fb5c5f5ad296f192dc5ca49c91aa340efe465">5c5fb5c</a></li>
	<li><a href="http://dailyjs.com/2011/03/28/node-tutorial-18/">Part 18: Full Text Search</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/ceb9b32a09dec3a52956bc9c631b68487b34bf23">ceb9b32</a></li>
	<li><a href="http://dailyjs.com/2011/04/04/node-tutorial-19/">Part 19: Backbone.js</a>, source code commit: <a href="https://github.com/alexyoung/nodepad/tree/8e8624073cc27fe377d8417159d69a9f3318cc22">8e86240</a><br />
</div></li>
</ul>
<h3>Backbone Persistence</h3>
<p>I haven&#8217;t yet hooked up our interface and models to Backbone&#8217;s persistence layer.  I generally work by relying on <code>model.save(attributes)</code> and <code>model.destroy()</code>.  The <code>save</code> method knows when to create or update based on if the <code>id</code> attribute has been set &#8212; remember this, because prior to this tutorial Nodepad was using <code>_id</code> which confuses Backbone.</p>
<p>The add/remove document toolbar could use a skeleton Backbone view like this:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">ListToolBar</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
  <span class="nx">el</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#left .toolbar&#39;</span><span class="p">),</span>

  <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
    <span class="s1">&#39;click #create-document&#39;</span><span class="o">:</span> <span class="s1">&#39;add&#39;</span><span class="p">,</span>
    <span class="s1">&#39;click #delete-document&#39;</span><span class="o">:</span> <span class="s1">&#39;remove&#39;</span>
  <span class="p">},</span>

  <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;add&#39;</span><span class="p">,</span> <span class="s1">&#39;remove&#39;</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">model</span> <span class="o">=</span> <span class="nx">model</span><span class="p">;</span>
  <span class="p">},</span>

  <span class="nx">add</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// TODO: Create a new document</span>
  <span class="p">},</span>

  <span class="nx">remove</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">confirm</span><span class="p">(</span><span class="s1">&#39;Are you sure you want to delete that document?&#39;</span><span class="p">))</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre>
</div>
<p>The <code>destroy</code> method will delete documents using a <span class="caps">HTTP</span> <code>DELETE</code>, the same way as my previous jQuery implementation.  We actually need to instantiate <code>ListToolBar</code> with a model though, so where should that happen?  I decided to put it in the <code>DocumentRow</code> view:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">open</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#document-list .selected&#39;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s1">&#39;selected&#39;</span><span class="p">);</span>
  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;selected&#39;</span><span class="p">);</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">display</span><span class="p">();</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">toolbar</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ListToolBar</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">);</span>
<span class="p">}</span>
</code></pre>
</div>
<p>Every time a document is selected, a toolbar will be instantiated.  Now there&#8217;s a relationship between the toolbar view and the current document.</p>
<p>We still need to create a new document when the <strong>+</strong> button is pressed&#8230; This is basically a case of instantiating a document and calling save:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">add</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
  <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Document</span><span class="p">({</span> <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Untitled Document&#39;</span><span class="p">,</span> <span class="nx">data</span><span class="o">:</span> <span class="s1">&#39;&#39;</span> <span class="p">});</span>
  <span class="nx">d</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>

  <span class="c1">// Add it to the collection</span>
  <span class="nx">Documents</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>

  <span class="c1">// addDocument is a new method I&#39;ve added to DocumentList which just appends</span>
  <span class="c1">// the right elements to the unordered list</span>
  <span class="nx">appView</span><span class="p">.</span><span class="nx">documentList</span><span class="p">.</span><span class="nx">addDocument</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span>

  <span class="c1">// Trigger an open</span>
  <span class="nx">d</span><span class="p">.</span><span class="nx">rowView</span><span class="p">.</span><span class="nx">open</span><span class="p">();</span>
<span class="p">}</span>
</code></pre>
</div>
<p>There&#8217;s some housekeeping going on there, but notice that we basically just call <code>save</code> to make Backbone do all the boring Ajax work for us.</p>
<h3><code>DocumentControls</code></h3>
<p>I&#8217;ve also added a view called <code>DocumentControls</code> which manages updating documents.  By now nothing in this should really surprise you:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">DocumentControls</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
  <span class="nx">el</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#controls&#39;</span><span class="p">),</span>

  <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
    <span class="s1">&#39;click #save-button&#39;</span><span class="o">:</span> <span class="s1">&#39;save&#39;</span>
  <span class="p">},</span>

  <span class="nx">initialize</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">model</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">_</span><span class="p">.</span><span class="nx">bindAll</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;save&#39;</span><span class="p">,</span> <span class="s1">&#39;showHTML&#39;</span><span class="p">);</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">model</span> <span class="o">=</span> <span class="nx">model</span><span class="p">;</span>
  <span class="p">},</span>

  <span class="nx">save</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">set</span><span class="p">({</span>
      <span class="nx">title</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;input.title&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
      <span class="nx">data</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#editor&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
    <span class="p">});</span>
    
    <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">save</span><span class="p">();</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">rowView</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
  <span class="p">},</span>

  <span class="nx">showHTML</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span>
    <span class="c1">// TODO</span>
  <span class="p">}</span>
<span class="p">});</span>
</code></pre>
</div>
<p>The line that reads <code>this.model.rowView.render()</code> is just triggering the <code>DocumentRow</code> to update its contents.  For clarity, it reads like this:</p>
<div class="highlight"><pre><code class="javascript"><span class="nx">render</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">({</span>
    <span class="nx">id</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span>
    <span class="nx">title</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">model</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;title&#39;</span><span class="p">)</span>
  <span class="p">}));</span>
  <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
</div>
<h3>Conclusion</h3>
<p>I hope it&#8217;s now clear that working with Backbone and <span class="caps">REST</span> APIs can be less work than a mess of Ajax calls and <span class="caps">CSS</span> selectors.</p>
<p>This week&#8217;s code was <a href="https://github.com/alexyoung/nodepad/tree/7d5cc3d4631efee86719e35522f514dbc302c193">commit 7d5cc3d</a>.</p>
</div>

<div id="related">
  <h2>Other Recent Posts</h2>
  <ul class="related-posts">
    
      <li>
        <div>23 Jul 2014</div>
        <a href="/2014/07/23/typeframework">TypeFramework: A TypeScript Web Framework</a>
      </li>
    
      <li>
        <div>22 Jul 2014</div>
        <a href="/2014/07/22/typescript">TypeScript Week</a>
      </li>
    
      <li>
        <div>21 Jul 2014</div>
        <a href="/2014/07/21/is">Simplifying Conditional Statements with Is</a>
      </li>
    
  </ul>
</div>



<div><br clear="all" /></div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    var disqus_shortname = 'dailyjs';
    var disqus_url = 'http://dailyjs.com/2011/04/11/node-tutorial-20/';
    // var disqus_identifier = 'unique_dynamic_id_1234';

    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


    </div>
    <div id="sidebar">
  <ul>
    <li>
      <div id="carbonads-container"><div class="carbonad"><div id="azcarbon"></div><script type="text/javascript">var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = "http://engine.carbonads.com/z/12104/azcarbon_2_1_0_VERT"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script></div></div>
    </li>
    <li class="itemlist">
      <h3>Support</h3>
      <ul class="support">
        <li class="if">
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
  wallet_address: "1Gtov23WTQPbj4c6dMaXnXxbvFKc87Lutb"
  , currency: "bitcoin"
  , counter: "count"
  , alignment: "bl"
  , qrcode: true
  , auto_show: false
  , lbl_button: "Donate"
  , lbl_address: "DailyJS:"
  , lbl_count: "donations"
  , lbl_amount: "BTC"
});
</script>
          <p>Support the authors by donating Bitcoins!</p>
        </li>
        <li class="flattr if">
          <a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="http://dailyjs.com"></a>
          <noscript><a href="http://flattr.com/thing/456257/DailyJS" target="_blank">
          <img src="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Subscribe</h3>
      <ul class="subscribe">
        <li class="links">
          <a class="social-button" href="http://twitter.com/dailyjs"><img src="/images/icons/twitter.png" alt="Twitter" /></a>
          <a class="social-button" href="https://www.facebook.com/dailyjs"><img src="/images/icons/facebook.png" alt="Facebook Page" /></a>
          <a class="social-button" href="https://plus.google.com/110075199769457074728/?prsrc=3&rel=author"><img src="/images/icons/google.png" alt="Google+ Page" /></a>
          <a class="social-button" href="http://feeds.feedburner.com/dailyjs"><img src="/images/icons/feed.png" alt="Feed" /></a>
          <a class="social-button" href="http://feedburner.google.com/fb/a/mailverify?uri=dailyjs&amp;loc=en_US"><img src="/images/icons/mail.png" alt="Email" /></a>
        </li>
        <li class="rss">
          <p><a href="http://feeds.feedburner.com/dailyjs"><img src="http://feeds.feedburner.com/~fc/dailyjs?bg=000000&amp;fg=FFFFFF&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
        </li>
      </ul>
    </li>
    <li class="itemlist staff">
      <h3>Staff</h3>
      <ul>
        <li>
          <h4>Editor-in-Chief</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/alex_young">
              <img width="48" height="48" src="/images/twitter/alex_young.png" alt="Alex R. Young" />
              <span class="meta">
                <strong class="fullname">Alex R. Young</strong>
                <s>@</s>alex_young
              </span>
            </a>
          </div>
          <h4>Proof-Reading</h4>
          <div class="twitter">
            <a href="http://twitter.com/#!/YukaYoung">
              <img width="48" height="48" src="/images/twitter/YukaYoung.png" alt="Yuka Young" />
              <span class="meta">
                <strong class="fullname">Yuka Young</strong>
                <s>@</s>YukaYoung
              </span>
            </a>
          </div>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Buy the Book</h3>
      <ul>
        <li>
          <p style="margin-top: 10px"><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343"><img src="/images/young_cover150.jpeg" alt="Node.js in Practice" /></a></p>
          <h4><a href="http://affiliate.manning.com/idevaffiliate.php?id=1259_343">Node.js in Practice</a></h4>
          <p><em>By Alex Young and Marc Harter</em></p>
        </li>
      </ul>
    </li>
    <li class="itemlist">
      <h3>Featured Series</h3>
      <ul>
        <li>
          <h4><a href="/sponsored-content.html">Sponsored Content</a></h4>
          <p>Advertise your JavaScript-related product or service through DailyJS.</p>
        <li>
          <h4><a href="/js101.html">JS101</a></h4>
          <p>New to JavaScript?  Get started here.</p>
        </li>
        <li>
          <h4><a href="/framework.html">Let's Make a Framework</a></h4>
          <p>Learn how client-side frameworks are built, and then build your own.</p>
        </li>
        <li>
          <h4><a href="/web-app.html">Let's Make a Web App</a></h4>
          <p>Build a Node web app.</p>
        </li>
        <li>
          <h4><a href="/history-of-javascript.html">History of JavaScript</a></h4>
          <p>Find out who created JavaScript, and why.</p>
        </li>
      </ul>
    </li>
  </ul>
</div>

    <div id="footer">
      <p>Copyright &copy; DailyJS. | <a href="http://github.com/alexyoung/dailyjs">Site Source</a> | <a href="http://www.glyphicons.com">Glyphicons</a>
      | <a href="/cookies.html">Cookies and Privacy</a></p>
    </div>
  </div>
<script type="text/javascript">
var _sf_async_config={uid:39178,domain:"dailyjs.com"};
(function(){
  function loadChartbeat() {
    window._sf_endpt=(new Date()).getTime();
    var e = document.createElement('script');
    e.setAttribute('language', 'javascript');
    e.setAttribute('type', 'text/javascript');
    e.setAttribute('src',
       (("https:" == document.location.protocol) ? "https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/" : "http://static.chartbeat.com/") +
       "js/chartbeat.js");
    document.body.appendChild(e);
  }
  var oldonload = window.onload;
  window.onload = (typeof window.onload != 'function') ?
     loadChartbeat : function() { oldonload(); loadChartbeat(); };
})();
</script>
</body>
</html>

