HTTP/1.1 200 OK
X-Pingback: http://murtada.nl/blog/xmlrpc.php
Last-Modified: Thu, 03 Jul 2014 16:22:10 GMT
ETag: "39c345040c3204b1a34e48ac313bfb69"
Cache-Control: max-age=0
Expires: Tue, 22 Jul 2014 15:25:37 GMT
Vary: Accept-Encoding,User-Agent
Content-Encoding: gzip
Content-Type: text/xml; charset=UTF-8
Server: Antagonist/1.3.37
Content-Length: 26749
Accept-Ranges: bytes
Date: Tue, 22 Jul 2014 15:25:39 GMT
X-Varnish: 1458411529
Age: 0
Via: 1.1 varnish
Connection: close
X-Cache: MISS

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Murtada.nl blog</title>
	<atom:link href="http://murtada.nl/blog/feed/" rel="self" type="application/rss+xml" />
	<link>http://murtada.nl/blog</link>
	<description>Thoughts and rambles of Murtada al Mousawy</description>
	<lastBuildDate>Thu, 03 Jul 2014 16:22:10 +0000</lastBuildDate>
	<language>en-US</language>
		<sy:updatePeriod>hourly</sy:updatePeriod>
		<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.9.1</generator>
	<item>
		<title>JavaScript: an intro to programming pt.1</title>
		<link>http://murtada.nl/blog/javascript-as-an-intro-to-programming-part-1/</link>
		<comments>http://murtada.nl/blog/javascript-as-an-intro-to-programming-part-1/#comments</comments>
		<pubDate>Fri, 20 Jun 2014 16:45:11 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[JavaScript]]></category>
		<category><![CDATA[Web]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog/?p=693</guid>
		<description><![CDATA[Hey there! If you&#8217;re here to get introduced to programming, you&#8217;re probably at the right place! I&#8217;m going to use JavaScript to teach you the very basics of modern day programming. If it&#8217;s something seen useful, I&#8217;d probably write another part to go more in-depth about the more complex things. But don&#8217;t worry, you won&#8217;t [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Hey there! If you&#8217;re here to get introduced to programming, you&#8217;re probably at the right place!<br />
I&#8217;m going to use JavaScript to teach you the very basics of modern day programming. If it&#8217;s something seen useful, I&#8217;d probably write another part to go more in-depth about the more complex things. But don&#8217;t worry, you won&#8217;t need any knowledge about anything in particular except for your high school maths and some basic computer skills.</p>
<p>So get yourself a cup of coffee, tea, water or whatever you fancy and let&#8217;s get things started!</p>
<h2>Why JavaScript?</h2>
<p>Programming is a little bit like cooking. For some programming languages you need specific tools to be able to prepare the ingredients. Some languages require you to have a lot of tools to maybe let you show a simple line of text on the screen.<br />
The reason I chose Javascript is because the tools you need are really simple to acquire and logically understandable. Basically JavaScript looked for me like the most simple language to work in, so you can go straight to learning the principles of programming and the language itself, rather than fiddling around to get things working in the first place.</p>
<h2>Tools you&#8217;ll need</h2>
<ul>
<li><b>A source code editor</b><br />
Get a simple flat text editor like Notepad (readily available on Windows), TextEdit (readily available on Mac) or choose a more robust and user-friendly program like <a href="http://notepad-plus-plus.org/" target="_blank">Notepad++</a> (open source for Windows only), <a href="http://www.barebones.com/products/textwrangler/" target="_blank">TextWrangler</a> (open source for Mac only).</p>
</li>
<li><b>A browser</b><br />
Any browser would do, but I&#8217;d prefer Chrome or Firefox since it&#8217;s really easy to find your way through their interfaces when you are writing and debugging JavaScript.</li>
</ul>
<h2>Familiarize yourself with your tools</h2>
<p>Open up your source code editor of choice and your preferred browser. Open up a new empty file in your editor and save it as <code>javascript1.html</code>.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/save-as.png" alt="save-as" width="502" height="373" class="alignnone size-full wp-image-701" />
<p>Make sure you save your file in the <code>All Files</code> type if you&#8217;re saving through Notepad on Windows.</p>
</div>
<p>Now go to your browser and open the file you just saved <code>javascript1.html</code> by pressing <code>Ctrl+O</code> on Windows and <code>&#8984;+O</code> on Mac. Browse to the folder you saved your file in, select <code>javascript1.html</code> and press <code>Open</code>.</p>
<p>If everything went right, you&#8217;ll see a white page in your browser. The next step will be to open up the in-browser console for debugging the code later. First press <code>F12</code> while your browser is active and it will pop-up the Developer Tools window. Now select the <code>Console</code> tab on the toolbar.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/developer.png" alt="developer" width="502" height="336" class="alignnone size-full wp-image-707" />
<p>This is the DevTools window in Chrome.</p>
</div>
<h2>Writing your first line of code</h2>
<p>To get your browser to run JavaScript code you will have to enclose our code with HTML tags.<br />
Go to your editor and let&#8217;s write down:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
&nbsp;
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>After each time you edit your code, you will have to manually save your file to see any changes in your browser. Your browser also does not magically know if the file has been changed, so you will have to refresh the page every time you have updated your code.</p>
<p>In an HTML file (a file that your browser will render as a webpage), you will need to define a tag around elements to give them a specific function. In this case <code>&lt;script&gt;</code> will define a script tag that will run as soon as the browser starts parsing your file. We will only use this once because this way of defining a specific object is a part of the HTML code, and not pure JavaScript. But since we want the browser to be able to actually do what we are going to write inside the <code>&lt;script&gt;</code> tags, we had to take this step first.</p>
<p>So in between the <code>&lt;script&gt;</code> tags, we are now able to write in the language JavaScript. As clich√© as it sounds, but as effective as it is, we are going to make the browser render a simple &#8220;Hello world&#8221; string on the screen. To make it interesting, we are going to do it in a few ways.</p>
<p>The simplest way to get JavaScript to write something, is to use the Console in the DevTools window of your browser, instead of the actual page:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
console.<span style="color: #660066;">log</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>This code on <code>line 2</code> will tell the <code>console</code> to <code>log</code> a specific string, in this case <code>"Hello world!"</code>. It will look like this in Chrome:</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/hello-world-console.png" alt="hello-world-console" width="502" height="336" class="alignnone size-full wp-image-717" />
<p>&#8220;Hello world!&#8221; logged in the console of Chrome</p>
</div>
<p>In the above code, <code>console</code> is an <code>object</code> with additional <code>methods</code> that you can call by referencing them through a dot(<code>.</code>). In this case we referenced the method <code>log()</code>. This method accepts a piece of text in the format of a <code>string</code>. In programming languages strings are usually written by starting and ending with single(<code>'</code>) or double(<code>"</code>) quotation marks. Another thing to notice is that in JavaScript a line of code is ended by a semi-colin(<code>;</code>). These rules are a part of a language <code>syntax</code>. Just like any other language, in programming you have specific rules to make written sentences readable and <em>understandable</em>, but this time for the computer!</p>
<p>But there&#8217;s also another way to write &#8220;Hello world!&#8221; in the browser. You can actually make the browser write it on the page itself by using another method. The benefit of this way is that people who don&#8217;t have the DevTools open, will be able to see it if they open the same <code>javascript1.html</code> file.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
console.<span style="color: #660066;">log</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/hello-world-document.png" alt="hello-world-document" width="502" height="336" class="alignnone size-full wp-image-722" />
<p>Now it&#8217;s also visible on the page!</p>
</div>
<h2>Variables and data types</h2>
<p>A lot of times you want to store a value or word temporarily, or even throughout the entire run of your code because it&#8217;s just easier than typing something over and over again. In these and other cases, <code>variables</code> really come in handy. Just like in algebra, in programming, variables are references to a value.</p>
<p>In JavaScript, a variable can hold the following values:</p>
<ul>
<li><code>String</code> &#8211; text or characters enclosed by quotation marks</li>
<li><code>Number</code> &#8211; any type of numerical value<br />(valid examples are: 4, 551, 3.14, 2.53e10, 0x3e7)</li>
<li><code>Boolean</code> &#8211; a true or false value (0 or 1)</li>
<li><code>Object</code> &#8211; data with added properties and methods</li>
<li><code>Array</code> &#8211; a list of values, these can be anything</li>
<li><code>Null</code> &#8211; an &#8220;empty&#8221; value</li>
<li><code>Undefined</code> &#8211; a value that shows up when the variable is undefined</li>
</ul>
<p>Great stuff! This opens up a lot of possibilities! Let&#8217;s try making a few variables and giving them values. Continuing our code where we left of, we add the following few lines:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
console.<span style="color: #660066;">log</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span>a <span style="color: #339933;">+</span> b <span style="color: #339933;">+</span> c<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>So the syntax for defining a variable is simple. You begin with <code>var</code>, followed by a space and then the name of the variable. You will assign a value by using the <code>=</code> <em>equals to</em> sign, followed by a value. Don&#8217;t forget to close the sentence with a semi-colon! Remember that variables are case-sensitive and must not be used interchangeably. For example: The variables <code>lastName</code> and <code>lastname</code>, are two different variables.<br />
The functions <code>myFunction()</code> and <code>myfunction()</code>, are two different methods.</p>
<p>Notice that we have not enclosed the numerical values with quotation marks, since otherwise they will become strings and not will not be recognized as real numbers that the browser can do mathematical things with.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/hello-world-2.png" alt="hello-world-2" width="502" height="336" class="alignnone size-full wp-image-730" />
<p>The result of the sum of variables a, b, c is indeed 14.5, but there&#8217;s no space between the ! and 14.5.</p>
</div>
<p>As the above image shows, there is no space between the previously written &#8220;Hello world!&#8221; and the newly added numerical value. This is because in programming, most things are not automated and you will have to manually do it yourself. This is a simple fix, and you can simply add a string with a spingle space <code>" "</code> in front of the formula <code>a + b + c</code>. Beware though, when adding a string to a numerical value with a <em>plus</em> <code>+</code> the code might cause errors because the browser will recognize the string is a numerical value. If in your code a string is connected to another string like <code>"he" + "llo"</code> it is called <code>concatenation</code>. To ensure that everything works like you intend, enclose the mathematical formula with brackets <code>()</code>, like so:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
console.<span style="color: #660066;">log</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot; &quot;</span><span style="color: #339933;">+</span><span style="color: #009900;">&#40;</span>a <span style="color: #339933;">+</span> b <span style="color: #339933;">+</span> c<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/hello-world-3.png" alt="hello-world-3" width="502" height="336" class="alignnone size-full wp-image-732" />
<p>That&#8217;s more like it! You can also add a new-line HTML tag <code>&lt;br&gt;</code> instead of the space to make the text jump to the next line on screen.</p>
</div>
<p>Awesome! But we can actually make &#8220;Hello world!&#8221; and the formula get written on the page from the same <code>write()</code> call, instead of using two calls. Simply remove <code>lines 2 and 3</code> and write &#8220;Hello world!&#8221; in between the quotation marks of the remaining <code>write()</code> method. Oh, and we might as well use a <code>&lt;br&gt;</code> tag instead of the space while we&#8217;re at it.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&lt;br&gt;&quot;</span> <span style="color: #339933;">+</span> <span style="color: #009900;">&#40;</span>a <span style="color: #339933;">+</span> b <span style="color: #339933;">+</span> c<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>Note: JavaScript ignores extra spaces and new lines after a semi-colon (<code>;</code>). You can add white space to your script to make it more readable. The following lines of code are equivalent to the above:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a<span style="color: #339933;">=</span><span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b<span style="color: #339933;">=</span><span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c<span style="color: #339933;">=</span><span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;Hello world!&lt;br&gt;&quot;</span><span style="color: #339933;">+</span><span style="color: #009900;">&#40;</span>a<span style="color: #339933;">+</span>b<span style="color: #339933;">+</span>c<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<h2>Statements</h2>
<p>Okay, now we got the basics of variables, how do you actually work with them, other than simple mathematical calculations? <code>Statements</code> are the answer in most programming languages. In JavaScript, statements are &#8220;commands&#8221; to the browser. The purpose of the statements is to tell the browser what to do. So technically the code we have written contains statements already! But these statements are really primitive and you are not able to change a lot about the result of the statement.</p>
<p>That&#8217;s why there are <code>statement identifiers</code>, reserved words that cannot be used as variable names (or any other things). Each identifier will tell the browser to perform a specific action. For this part of the tutorial, we will take a look at the <code>if ... else</code> statement.</p>
<p>Say, for example, we want to know if <code>a</code> is smaller in value (<em>less than</em> <code>&lt;</code>) than <code>b</code>. How do we do that? Well, let&#8217;s first get rid of <code>line 6</code> and start writing from there. We want to check <code>if</code> something is <code>true</code> or <code>false</code>, so we have to begin with the <code>if statement</code>:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span>  a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>The syntax for the <code>if statement</code> consists of the word &#8220;if&#8221;, followed by an opening and closing bracket <code>()</code>. After that we put down an opening accolade <code>{</code>. This signifies the beginning of what will happen once the <code>if statement</code> returns <code>true</code>. We close the statement with a closing accolade <code>}</code>.</p>
<p>We put the actual &#8220;question&#8221; that the <code>if statement</code> is going to check in between the brackets <code>()</code>. So in this case, we just want to simply check if <code>a</code> is <em>less than</em> <code>&lt;</code> <code>b</code>.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>a <span style="color: #339933;">&lt;</span> b<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>Now what would actually happen if <code>a &lt; b</code>? Let&#8217;s try simply put the formula with the answer on screen.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>a <span style="color: #339933;">&lt;</span> b<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;a &lt; b = true&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/statements-1.png" alt="statements-1" width="502" height="336" class="alignnone size-full wp-image-743" />
<p>I saved it, but it just shows an empty page!</code></div>
<p>As you might have guessed, the value of <code>a</code> is indeed bigger than <code>b</code>. Thus, the statement never runs the code inside the accolades. In order for our code to also present us with something on screen in the case the <code>if statement</code> returns <code>false</code>, we need the <code>else statement</code>. The <code>else statement</code> is a little different than the <code>if statement</code>: it does not work on its own. You need the <code>if</code> before you can use the <code>else</code>. The syntax goes as follows:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>a <span style="color: #339933;">&lt;</span> b<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;a &lt; b = true&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span> <span style="color: #000066; font-weight: bold;">else</span> <span style="color: #009900;">&#123;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>Fairly simple, right? Since you already know what you want the browser to check (<code>a < b</code>), you simply put <code>else</code> behind the closing <code>}</code> accolade of the <code>if statement</code>, followed up by yet another set of opening and closing accolades <code>{}</code>.<br />
Now let's try making our code say the formula is false in case it's not true.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>a <span style="color: #339933;">&lt;</span> b<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;a &lt; b = true&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span> <span style="color: #000066; font-weight: bold;">else</span> <span style="color: #009900;">&#123;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;a &lt; b = false&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/statements-2.png" alt="statements-2" width="502" height="336" class="alignnone size-full wp-image-744" />The value 5 is indeed not lower than 3.5; our code works!</div>
<p>You can actually try <code>concatenating</code> the sentence with the real values of the variables. It's fairly simple, but can be hard to see at first. You actually have to use the plus <code>+</code> sign to connect a piece of string to a variable. So we have for example variable <code>a</code> and the strings <code>"I have "</code> and <code>" apples"</code>, you can put the variable <code>a</code> in between the two strings like this: <code>"I have " + a + " apples"</code>. This will give you the concatenated string: <code>"I have 5 apples"</code>.</p>
<p>In our case we can concatenate our sentences like this:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #000066; font-weight: bold;">var</span> a <span style="color: #339933;">=</span> <span style="color: #CC0000;">5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> b <span style="color: #339933;">=</span> <span style="color: #CC0000;">3.5</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> c <span style="color: #339933;">=</span> <span style="color: #CC0000;">6</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>a <span style="color: #339933;">&lt;</span> b<span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span>a <span style="color: #339933;">+</span> <span style="color: #3366CC;">&quot; &lt; &quot;</span> <span style="color: #339933;">+</span> b <span style="color: #339933;">+</span> <span style="color: #3366CC;">&quot; = true&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span> <span style="color: #000066; font-weight: bold;">else</span> <span style="color: #009900;">&#123;</span>
document.<span style="color: #660066;">write</span><span style="color: #009900;">&#40;</span>a <span style="color: #339933;">+</span> <span style="color: #3366CC;">&quot; &lt; &quot;</span> <span style="color: #339933;">+</span> b <span style="color: #339933;">+</span> <span style="color: #3366CC;">&quot; = false&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/statements-3.png" alt="statements-3" width="502" height="336" class="alignnone size-full wp-image-745" />
<p>Now the actual values of the variables get written on the page.</p></div>
<p>Try experimenting with different names for variables, different values for the variables and different sentences as results of the <code>if ... else</code> statement.</p>
<h2>Conclusion</h2>
<p>Wow, you've made it! It wasn't that hard, was it?</p>
<p>In part 1, you've learned:</p>
<ul>
<li>how to set up an HTML page</li>
<li>working with the console of DevTools of your browser</li>
<li>how to set up a JavaScript tag to write code in</li>
<li>basic knowledge of variables</li>
<li>basic knowledge of JavaScript's syntax</li>
<li>working with the <code>if ... else</code> statement</li>
<li>concatenation of strings and variables</li>
</ul>
<p>There are going to be more parts of this tutorial in the future, so stay tuned.<br />
Meanwhile, experiment along and try some funny things with the what you've learned so far!</p>
<p>Have fun!</p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/javascript-as-an-intro-to-programming-part-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>The Bitcoin Adventure part 1</title>
		<link>http://murtada.nl/blog/the-bitcoin-adventure-part-1/</link>
		<comments>http://murtada.nl/blog/the-bitcoin-adventure-part-1/#comments</comments>
		<pubDate>Fri, 20 Jun 2014 11:24:03 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[General]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog/?p=658</guid>
		<description><![CDATA[The term Bitcoin has become such a big phenomenon by now, even small shops in my town (Delft) are accepting it as a payment method. Caf√© de Waag will accept bitcoins for food and drinks. While No13 has fashion clothes to offer for bitcoins. So what is Bitcoin? You might already have guessed it&#8217;s a [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>The term Bitcoin has become such a big phenomenon by now, even small shops in my town (<a href="http://en.wikipedia.org/wiki/Delft" target="_blank">Delft</a>) are accepting it as a payment method. <a href="http://www.de-waag.nl/" target="_blank">Caf√© de Waag</a> will accept bitcoins for food and drinks. While <a href="http://www.no13.nl/" target="_blank">No13</a> has fashion clothes to offer for bitcoins.</p>
<p><script type="text/javascript" src="http://omroepwest.bbvms.com/p/content_video/c/2138908.js?width=524&#038;height=295"></script></p>
<h2>So what is Bitcoin?</h2>
<p>You might already have guessed it&#8217;s a type of monetary system. It&#8217;s in fact the first decentralized digital currency. <b>Decentralized</b> means that there&#8217;s no bank, country, company or person that controls or owns the money. This works because the Bitcoin network uses peer-to-peer technology &mdash;like torrents&mdash; to operate, validate and secure the network. Now being decentralized also means there is no such thing as &quot;interest&quot;, there&#8217;s no &quot;loans&quot; and the value of bitcoin doesn&#8217;t depend on a country&#8217;s welfare.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/Bitcoin_Logo_Horizontal_Dark.png" alt="Bitcoin_Logo_Horizontal_Dark" />
<p>The official Bitcoin logo as seen on <a href="https://bitcoin.org" target="_blank">bitcoin.org</a></div>
<p><b>Fiat money</b> is money that has no entity backing it other than the issuer, usually a government. When the United States dollar finally disconnected from the gold standard in 1971 it became a fiat currency. Basically the USA declared, &#8220;The dollar has value because we are &#8216;Murica&#8221; and the world said, &#8220;OK&#8221;. In actuality, the US dollar has no intrinsic value other than the fact it is issued by the United States. Most modern currencies are fiat money.</p>
<p>Bitcoin follows the same principle, in that its value is determined by perception. Instead of the trust of some government entity being evaluated to determine the value of Bitcoin, other factors (the technology, widespread acceptance, understanding of e-money, etc.) are taken into consideration. When magazines and online entities write intriguing articles about Bitcoin, people take interest in it, the demand goes up and so does its value v. government-back currencies. Likewise when Mt. Gox is DDoSed, a Bitcoin service shutters, or $250,000 worth of bitcoins is stolen, people get nervous, demand drops, and so does Bitcoin value.</p>
<p>The <b>Bitcoin network</b> is a peer-to-peer payment network that operates on a cryptographic protocol. Users send bitcoins, the unit of currency, by broadcasting digitally signed messages to the network using <em >Bitcoin wallet</em> software. Transactions are recorded into a distributed public database known as the block chain, with consensus achieved by a proof-of-work system called <b>mining</b>. The block chain is distributed internationally using peer-to-peer file sharing technology similar to Bit Torrent. The protocol was designed in 2008 and released in 2009 as open source software by &#8220;Satoshi Nakamoto&#8221;, the pseudonym of the original developer or group of developers.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/network.png" alt="network" width="502" height="230" class="alignnone size-full wp-image-688" />
<p>The current real-time estimate of the Bitcoin network using <a href="https://github.com/ayeowch/bitnodes" target="_blank">Bitnodes</a> is 8000 to 10000 nodes that are reachable at any one time.</p>
</div>
<h2>Why should you use Bitcoin?</h2>
<p>There&#8217;s a lot of benefits to using bitcoin over existing currency. For starters, saving your money is safer since your bitcoins are saved on a medium of your own choice. And because the money is digital, it can be saved in a tiny container. A USB flash drive is a great solution, and if you encrypt your <b>wallet</b> you can even keep your money on Dropbox or a similar service for a backup.<br />
However, your bitcoins digital wallet can be lost. Just like with real wallets, if you lose your digital wallet, you lose your money.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/wallet-backup.png" alt="bitcoin-backup" />
<p>My wallet is encrypted and backed up on Dropbox.</p>
</div>
<p>Sending and receiving money is also considered safer because transactions are semi-anonymous. All Bitcoin transactions are public information. Anyone can know the amount, the time, and the wallet numbers of the two participants. They may not necessarily know who the human owners of the digital wallets are. So you may send and receive money without ever adding your name, address or account details. That being said, it&#8217;s still a risk to send bitcoins since transactions are not reversible. Bitcoin transactions cannot be undone, except by a second voluntary transaction of the same amount in the opposite direction. (This is unlike credit cards, where the merchant can lose the received money to a &#8220;chargeback&#8221; even after they have shipped the product.)</p>
<p>As a buyer using Bitcoin, keep in mind that there is likely nobody to petition for help should a seller not ship you a product (as governments and their courts will likely be quite unfriendly to Bitcoin, see below). For this reason, buyers would be wise to deal only with reputable sellers, or use escrow services.</p>
<p>Bitcoin transactions happen virtually instantaneously, and the transaction is then verified by the peer-to-peer network of Bitcoin users. The more positive confirmations you receive from the network, the more likely the transaction is valid and final. This can take a few minutes.</p>
<p>For big spenders there&#8217;s a benefit of really small transaction fees and no taxes. Transaction fees are actually still non-obligatory, but to ensure fast verification of transactions, small fees help mining pools to accept your transaction faster and verify it within minutes.</p>
<p>The benefit of almost no fees and instantaneous transaction makes the system very viable for larger global transactions since sending money through banks to the other side of the world may be a real hassle and includes lots of fees and taxes. Even PayPal has <a href="https://www.paypal.com/webapps/mpp/paypal-fees">fees</a> of 2.9% + $0.30 per sale and usually takes a few days to process the transaction.</p>
<h2>How does Bitcoin have value?</h2>
<p>Bitcoins have value because they are useful as a form of money. Bitcoin has the characteristics of money (durability, portability, fungibility, scarcity, divisibility, and recognizability) based on the properties of mathematics rather than relying on physical properties (like gold and silver) or trust in central authorities (like fiat currencies). In short, Bitcoin is backed by mathematics. With these attributes, all that is required for a form of money to hold value is trust and adoption. In the case of Bitcoin, this can be measured by its growing base of users, merchants, and startups. As with all currency, bitcoin&#8217;s value comes only and directly from people willing to accept them as payment.</p>
<div class="wp-caption"><a href="https://blockchain.info/charts/market-cap" target="_blank"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/bitcoin-capital.png" alt="bitcoin-capital" width="502" height="322" class="alignnone size-full wp-image-681" /></a>
<p>The Bitcoin Market Capitalization is shown above in a graph.<br />At the end of 2013, one bitcoin costed over a 1000 USD.</p>
</div>
<p>The price of a bitcoin is determined by supply and demand. When demand for bitcoins increases, the price increases, and when demand falls, the price falls. There is only a limited number of bitcoins in circulation and new bitcoins are created at a predictable and decreasing rate, which means that demand must follow this level of inflation to keep the price stable. Because Bitcoin is still a relatively small market compared to what it could be, it doesn&#8217;t take significant amounts of money to move the market price up or down, and thus the price of a bitcoin is still very volatile.</p>
<h2>To be continued&#8230;</h2>
<p>As I delve into the world of Bitcoin, I&#8217;ll update my blog with new findings and experiences. So far I&#8217;ve invested ‚Ç¨50,- in Bitcoin just as an experiment. I received 0.10421875 BTC for that amount of euros.<br />
If you&#8217;ve got any bitcoins to spare and would like to donate me a cup of coffee, I&#8217;d very much appreciate it! My donation address is: <a href="bitcoin:1BCC7Wu95u9AYo45dV33iHPyNFtDuqj5gj">1BCC7Wu95u9AYo45dV33iHPyNFtDuqj5gj</a></p>
<p><a href="bitcoin:1BCC7Wu95u9AYo45dV33iHPyNFtDuqj5gj" target="_blank"><img src="http://murtada.nl/blog/wp-content/uploads/2014/06/donate.png" alt="donate" width="502" height="175" class="alignnone size-full wp-image-677" /></a></p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/the-bitcoin-adventure-part-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Carnal</title>
		<link>http://murtada.nl/blog/carnal/</link>
		<comments>http://murtada.nl/blog/carnal/#comments</comments>
		<pubDate>Sat, 22 Feb 2014 00:02:47 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[Art]]></category>
		<category><![CDATA[Literature]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog2/?p=632</guid>
		<description><![CDATA[A divine path laid by nature Clashing in the winds of flesh and blood Anciently the flicker weakens With angst of the nameless flood &#160; Anchored to that peculiar point Indebted to the rest of terrene]]></description>
				<content:encoded><![CDATA[<p><img src="http://farm8.staticflickr.com/7348/12685590395_31bfb3d84d_b.jpg" alt="Carnal" /></p>
<blockquote><p>A divine path laid by nature<br />
Clashing in the winds of flesh and blood<br />
Anciently the flicker weakens<br />
With angst of the nameless flood<br />
&nbsp;<br />
Anchored to that peculiar point<br />
Indebted to the rest of terrene</p></blockquote>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/carnal/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Interpretation and interpolation</title>
		<link>http://murtada.nl/blog/interpretation-and-interpolation/</link>
		<comments>http://murtada.nl/blog/interpretation-and-interpolation/#comments</comments>
		<pubDate>Mon, 17 Feb 2014 13:47:59 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[General]]></category>
		<category><![CDATA[Thoughts]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog2/?p=611</guid>
		<description><![CDATA[I&#8217;ve always wondered why interpretation is such a big deal. Interpretation is used mostly to explain a phenomenon, story or object. Strangely it&#8217;s still a subjective way of defining something. You can use interpretation for putting things into context, but the opposite is even more important: you need context to have a correct interpretation. And [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve always wondered why interpretation is such a big deal. Interpretation is used mostly to explain a phenomenon, story or object. Strangely it&#8217;s still a subjective way of defining something. You can use interpretation for putting things into context, but the opposite is even more important: you need context to have a correct interpretation. And yes, the context is relevant, but you won&#8217;t necessarily need it to interpret anything. You can, and, are allowed to interpret something without knowing what context it relates to.</p>
<p>In some degree we all pick and choose our contextual references for interpretation. And it&#8217;s most of the times even necessary to limit the scope of your context in order to gradually interpret something. But when are you taking things out of context by doing so? It&#8217;s hard to see clear boundaries, in fact, there are countless of misinterpretations throughout the history of mankind that have risen from interpreting things that have been taken out of context.<br />
If the act of interpretation is so subjective and sensitive to errors, why is it so important for people to have their own interpretations? Does the need for people to have their own personal interpretation originate from the individualistic mindset that encourages people to not have faith or trust in other people? Individualism does heavily emphasize the worth of an individual. Are you considered a worthy individual if you do not have your own interpretation about a subject you&#8217;re asked about?<br />
In any case, having a personal interpretation is important for both you and the outside world. It&#8217;s basically the sieve that filters everything you intercept. Your interpretations are important to yourself to get an understanding of something. And the world will want to know your interpretation about that same thing one day.</p>
<p>Interpolation can be seen as a mathematical method of generating new points between set known points. Ever played connect the dots? Yeah, that&#8217;s basically what interpolation is: you draw a line between the dots that have been given to you at the start <em>[fig a.1]</em>.</p>
<div class="wp-caption"><img class="wp-image-329" alt="" src="http://static.fjcdn.com/large/pictures/ee/75/ee751f_2676345.gif" />
<p>fig a.1 &#8211; An example of a connect the dots game.</p>
</div>
<p>While this is a kid&#8217;s game, it can be made much harder by just making the final image more complex <em>[fig a.2]</em>.</p>
<div class="wp-caption"><img class="wp-image-329" alt="" src="http://www.girlsgetreal.com/wp-content/uploads/2012/02/connectthedotssimple2.gif" />
<p>fig a.2 &#8211; A more complex connect the dots figure.</p>
</div>
<p>When drawing the lines, you are actually doing a lot more things than just mindlessly drawing lines. You are creating the final image in your head. You&#8217;re trying to interpret the dots to form an image. Now imagine another version where there are no numbers for guidance <em>[fig b.1]</em>. Where do you start? Which is the following dot, and which thereafter?</p>
<div class="wp-caption"><img class="wp-image-329" alt="" src="http://murtada.nl/blog/wp-content/uploads/2014/02/interpolation.png" />
<p>fig b.1 &#8211; An example of a connect the dots figure without numbers. There is no clear start or end point.</p>
</div>
<p>To successfully interpolate an image, situation or story, you will have to use known facts, which can be seen as the points. You will also need to use any insight you might have on the subject that might help you find patterns or sequences. And lastly, interpretation is also a factor of a well-rounded interpolation. For example, in the previous figure you will need to translate solid fixed points into motion in order to form an image.</p>
<p>Interpolation is in my opinion a more complete method of <a href="http://en.wikipedia.org/wiki/Contextualism">contextualization</a> than subjective interpretation. It would mean there would be less subjective interpretation and more mathematically traceable paths to factual points that everybody could be able to see without needing to know the background of the specific person who interpolated. Compared to interpretation, you&#8217;d need to justify your interpretation by explaining personal experiences, share personal knowledge or hunches. This would be really easy to achieve if humans could be fully objective. But even the most disciplined judge will have to use subjective experience to decide a case in court.</p>
<p>Still, if life consists of formulas with given solid points which you could use to make an image, why not interpolate instead of interpret?</p>
<div class="wp-caption"><img class="wp-image-329" alt="" src="http://murtada.nl/blog/wp-content/uploads/2014/02/interpolation2.png" />
<p>fig b.2 &#8211; The previous figure could be interpolated to this final image. There are not many logical possibilities to this figure, but it is also not sporadic and seemingly random like life tends to be.</p>
</div>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/interpretation-and-interpolation/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Time travel &#8211; revisited</title>
		<link>http://murtada.nl/blog/time-travel-revisited/</link>
		<comments>http://murtada.nl/blog/time-travel-revisited/#comments</comments>
		<pubDate>Thu, 16 Jan 2014 12:17:48 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[Astronomy]]></category>
		<category><![CDATA[Physics]]></category>
		<category><![CDATA[Science]]></category>
		<category><![CDATA[Thoughts]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog2/?p=593</guid>
		<description><![CDATA[After having watched Primer, thoughts began to whirl wildly in my head. The movie made time travel seem so simple and physically possible, yet there were many catches that you will notice only after watching the movie. The movie gets a very clear summary in the following document: &#8220;Primer: The Perils and Paradoxes of Restricted [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>After having watched <a href="http://en.wikipedia.org/wiki/Primer_(film)" target="_blank">Primer</a>, thoughts began to whirl wildly in my head. The movie made time travel seem so simple and physically possible, yet there were many catches that you will notice only after watching the movie. The movie gets a very clear summary in the following document: <a href="http://www.nobleworld.biz/images/Gendler.pdf">&#8220;Primer: The Perils and Paradoxes of Restricted Time Travel Narration.&#8221;</a> (Spoilers!)</p>
<p><img src="http://murtada.nl/blog/wp-content/uploads/2014/01/primer-title.png" alt="primer-title" /></p>
<h2>Primer&#8217;s theory on time travel</h2>
<p>According to the theory in Primer, it is possible to time travel back in time but can only be done so by having the machine in which you are travelling ready to accept any material that is sent back. So this will also limit the time you can travel back to, to the moment when you first start the machine. More so, the machine has to have been continuously kept on from the point you want to go back to, to the moment you decide to go back in time. The biggest downside to the Primer theory is the fact that you&#8217;ll have to sit in the time machine as long as you want to go back in time.<br />
Imagine wanting to go back seven days in time, you&#8217;d have to stay in the machine for a whole week in order to come out of the machine to exactly 7 days back.</p>
<p>Travelling back in time in Primer actually brings you to an alternative or parallel universe, where the paradox of free. This means you&#8217;d be able to kill your old self and still exist as your new self in that universe. This eliminates most of the confusing and complex ideas of the <a href="http://en.wikipedia.org/wiki/Chaos_theory" target="_blank">chaos theory</a> that accompanies most time traveling theories.</p>
<h2>Anomalous and constant energies</h2>
<p>Let&#8217;s assume it is possible to time travel exactly like in Primer, what happens when you abruptly introduce new energy (the traveller) into a universe? Wouldn&#8217;t this cause problems with the constant energy in the universe?</p>
<p>According to physics, all of the energy in the universe existed in some form at the Big Bang. This means that the total energy in the universe has been constant ever since, and always will be consistent. Even though science seems to indicate that the universe is expanding, it is still plausible that the energy is constant.<br />
There are stars, planets, galaxies, globular clusters &#8211; everywhere, matter and energy seem to exist, and it&#8217;s constantly rushing off in all directions. But for starters, the expansion of the universe does not necessarily increase the total energy &#8211; as the universe expands, the distances between stars or galaxies increases. To compensate, the gravitational energy between them decreases.<br />
And more importantly, thermodynamics doesn&#8217;t state what value the total energy should have. It could be a huge, but constant, number (this is what&#8217;s known as an &#8220;open&#8221; universe, where the amount of matter/energy in the universe exceeds a certain &#8220;cut-off&#8221; density: see <a href="http://hyperphysics.phy-astr.gsu.edu/hbase/astro/denpar.html" target="_blank">Density Parameter, Œ©</a>). It could be, as most physicists now believe, zero (this is called a &#8220;flat&#8221; universe, where the matter density in the universe is equal to the cut-off density). It could be negative, even (a &#8220;closed&#8221; universe, where the amount of matter is less than the cut-off density). It could be anything, but whatever value it is now, it was at the very beginning!</p>
<h2>Is it still possible?</h2>
<p>So how does introducing &#8220;foreign&#8221; energy into a constant energy universe play out?</p>
<p>The first and most popular theory is that a universe would just collapse. The introduction of the new energy instantly blows the whole universe off balance, causing physics, time and space to behave differently and all matter would dissolve into a glorious slurry of mixed energy.</p>
<p>Another theory is that introducing new energy would cause a temporary local overload of energy that will distribute in the surrounding space-time, eventually reaching the outer part of the continuum, where it will reflect the disturbance back through the universe. You can see this as dropping a glass of water in a completely filled bathtub, but without it being able to overflow it will keep reflecting the ripples in the water infinitely. These disturbances can be anything &#8211; from little vibrations in space to temporary energy disturbances (heat, sound, atomic energy).</p>
<p>The latter theory actually makes it physically possible to introduce new energy in an existing universe, the only problem is that you will probably break a lot of things.</p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/time-travel-revisited/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>mkshare: a jQuery social media sharing plugin</title>
		<link>http://murtada.nl/blog/mkshare/</link>
		<comments>http://murtada.nl/blog/mkshare/#comments</comments>
		<pubDate>Mon, 25 Nov 2013 14:28:42 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[CSS]]></category>
		<category><![CDATA[jQuery]]></category>
		<category><![CDATA[Web]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog2/?p=558</guid>
		<description><![CDATA[Sharing is caring, especially on the web! That&#8217;s why I&#8217;ve made a tiny little sharing plugin for jQuery called: mkshare. To make use of this little plugin, just add the script to your page, just before or after your &#60;body&#62; tag. Don&#8217;t forget to replace twitterUserName with your own Twitter username! 1 2 &#60;script src=&#34;downloads/mkshare.js&#34;&#62;&#60;/script&#62; [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sharing is caring, especially on the web! That&#8217;s why I&#8217;ve made a tiny little sharing plugin for jQuery called: mkshare.</p>
<p><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/mkshare.png" /></p>
<p>To make use of this little plugin, just add the script to your page, just before or after your <code>&lt;body&gt;</code> tag. Don&#8217;t forget to replace <code>twitterUserName</code> with your own Twitter username!</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script src<span style="color: #339933;">=</span><span style="color: #3366CC;">&quot;downloads/mkshare.js&quot;</span><span style="color: #339933;">&gt;&lt;/</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>mkshare<span style="color: #009900;">&#40;</span><span style="color: #3366CC;">&quot;twitterUserName&quot;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>After that, you&#8217;ll need to add the class <code>mkshare</code> to your elements you want to be clickable. So for example:</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
</pre></td><td class="code"><pre class="php" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>div <span style="color: #000000; font-weight: bold;">class</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;mkshare&quot;</span><span style="color: #339933;">&gt;</span>Appreciate this<span style="color: #339933;">&lt;/</span>div<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p>That&#8217;s all there is to it!<br />
You&#8217;ll get a small overlay that&#8217;ll give you a choice to like, tweet and plus-one the page. It&#8217;ll automatically keep track of these as well.</p>
<p><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/mkshare2.png" /></p>
<p><a href="http://murtada.nl/downloads/mkshare.js">Download mkshare.js</a></p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/mkshare/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Goodbye Winamp</title>
		<link>http://murtada.nl/blog/goodbye-winamp/</link>
		<comments>http://murtada.nl/blog/goodbye-winamp/#comments</comments>
		<pubDate>Fri, 22 Nov 2013 12:56:58 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[General]]></category>
		<category><![CDATA[Thoughts]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog2/?p=533</guid>
		<description><![CDATA[Remember that player that &#8220;Whips the llama&#8217;s ass&#8221;? Well sadly, it&#8217;s going to be shut down next month, December 20th. I&#8217;ve used Winamp for many years and it was my primary audio media player. It was a fancy little program with the ability to fully customize the look and feel of it. Winamp was created [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Remember that player that &ldquo;Whips the llama&#8217;s ass&rdquo;? Well sadly, it&#8217;s going to be shut down next month, December 20th.</p>
<p><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/winamp-logo-1024x236.png" alt="" /></p>
<p>I&#8217;ve used <a href="http://en.wikipedia.org/wiki/Winamp" target="_blank">Winamp</a> for many years and it was my primary audio media player. It was a fancy little program with the ability to fully customize the look and feel of it.</p>
<p>Winamp was created when the trend of MP3 sharing was developing. It created a new space in the market of digital audio players, where simple and easy to use software got very popular due to the MP3 trend. A lot of other competitors joined the scene, including: <a href="http://en.wikipedia.org/wiki/Sonique_(media_player)" target="_blank">Sonique</a> and <a href="http://en.wikipedia.org/wiki/XMMS" target="_blank">XMMS</a>. More competitors joined the scene after AOL bought Winamp and former employees started creating their own software.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/MMD3.gif" />
<p>I loved the <a href="http://murtada.nl/downloads/MMD3.wal">MMD3 skin</a> and it even added new visualizations to the player.</p>
</div>
<p>Winamp was notorious for its awesome visualizations. With the Advanced Visualization Studio (AVS) you could even create your own visualizations with Winamp&#8217;s own visualization programming language. You could share them on Winamp&#8217;s site or put them on DeviantART. Download and paste in your visualizations folder and you&#8217;ve got new eye candy to munch on while listening to your favourite music!</p>
<p><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/WinampAVS.jpg" alt="" /></p>
<p>Nowadays I use <a href="http://www.foobar2000.org/" target="_blank">foobar2000</a> as an alternative to keep my music library clean and still have a decently customizable audio player. I do miss the &#8220;winshade&#8221; mode on Winamp though, makes your player a tiny horizontal line with all the necessary buttons and song title.</p>
<div class="wp-caption"><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/winamp-winshade.gif" alt="Winamp winshade functionality. Skins can change the look and feel of this too!" />
<p>Winamp winshade functionality. Skins can change the look and feel of this too!</p>
</div>
<p>I&#8217;ve got a lot of memories of this little program. Spent hours and days fiddling around with the AVS, trying to figure out how to reproduce those awesome visualizations. Listening to music and maintaining my first music library. Showing off my collections of skins and AVS presets. Ah yes, those were the good days!</p>
<p>We&#8217;ll miss you Winamp!</p>
<p><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/winamp_awesomeness.png" alt="" /></p>
<p><a href="http://filehippo.com/download_winamp/" target="_blank">Download Winamp here</a></p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/goodbye-winamp/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>mksnow: A snowy JavaScript canvas experiment</title>
		<link>http://murtada.nl/blog/mksnow/</link>
		<comments>http://murtada.nl/blog/mksnow/#comments</comments>
		<pubDate>Mon, 18 Nov 2013 08:49:12 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[JavaScript]]></category>
		<category><![CDATA[Web]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog2/?p=499</guid>
		<description><![CDATA[I&#8217;ve always loved making particle effects in Flash. ActionSript is well suited for drawing objects, but ever since all the new web technology started appearing, it began to fascinate me how you could easily create the same effect with JavaScript (no jQuery!). Here&#8217;s a live demo of the little project: Let it snow! 1. Winter [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve always loved making particle effects in Flash. ActionSript is well suited for drawing objects, but ever since all the new web technology started appearing, it began to fascinate me how you could easily create the same effect with JavaScript (no jQuery!).<br />
Here&#8217;s a live demo of the little project: <a href="http://murtada.nl/experiments/snowflakes2/">Let it snow!</a></p>
<h2>1. Winter is the season for particles!</h2>
<p>I&#8217;ve got a good excuse to start fiddling around with particles around winter: snowfall is beautiful and to recreate the motion and atmosphere on a digital canvas is a great exercise for a visual developer. So how do you start creating something like a particle-based snow-simulator?</p>
<h2>2. Be one with the snow</h2>
<p>The first thing you could do is watch how snow behaves while it elegantly whirls down. You&#8217;ll notice it almost never falls down in a straight or diagonal line (unlike rain).<br />
<a href="http://murtada.nl/blog/wp-content/uploads/2013/11/rain-snow.jpg"><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/rain-snow.jpg" alt="" /></a></p>
<p>Snowfall has some kind of a swirly, fluid and organic feeling to it. It&#8217;s fun to try and see how the snowflakes fall individually. Some have a clear wave pattern in them, possibly due to the fact that snowflakes are flat. This movement is really easily mathematically represented with a sine wave, so that&#8217;s going to be handy to know while we&#8217;re programming!<br />
<a href="http://murtada.nl/blog/wp-content/uploads/2013/11/sinewave.jpg"><img src="http://murtada.nl/blog/wp-content/uploads/2013/11/sinewave.jpg" alt="sinewave" /></a></p>
<h2>3. An empty canvas for the snowflakes</h2>
<p>First, let&#8217;s create an element to hold the snowflakes in the page. This will ensure the snowflakes stay on top of everything else on the website and do not mess up the layout of the existing page. Also, we&#8217;re creating an array that will keep track of all the snowflakes we are going to generate. We&#8217;re also putting the width and height of the inside of the browser in two variables.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #000066; font-weight: bold;">var</span> mksnow_snowflakes       <span style="color: #339933;">=</span> <span style="color: #009900;">&#91;</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> mksnow_SW               <span style="color: #339933;">=</span> document.<span style="color: #660066;">body</span>.<span style="color: #660066;">offsetWidth</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> mksnow_SH               <span style="color: #339933;">=</span> document.<span style="color: #660066;">body</span>.<span style="color: #660066;">offsetHeight</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #006600; font-style: italic;">// Create the canvas we're going to draw on</span>
mksnow_snowflakesHolder <span style="color: #339933;">=</span> document.<span style="color: #660066;">createElement</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">'canvas'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">width</span>               <span style="color: #339933;">=</span> mksnow_SW<span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">height</span>              <span style="color: #339933;">=</span> mksnow_SH<span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">style</span>.<span style="color: #660066;">zIndex</span>        <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;99999&quot;</span><span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">style</span>.<span style="color: #660066;">pointerEvents</span> <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;none&quot;</span><span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">style</span>.<span style="color: #660066;">position</span>      <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;fixed&quot;</span><span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">style</span>.<span style="color: #660066;">left</span>          <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;0&quot;</span><span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">style</span>.<span style="color: #660066;">top</span>           <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;0&quot;</span><span style="color: #339933;">;</span>
mksnow_snowflakesHolder.<span style="color: #660066;">className</span>           <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;snowflakeHolder&quot;</span><span style="color: #339933;">;</span>
context <span style="color: #339933;">=</span> mksnow_snowflakesHolder.<span style="color: #660066;">getContext</span><span style="color: #009900;">&#40;</span><span style="color: #3366CC;">'2d'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
document.<span style="color: #660066;">body</span>.<span style="color: #660066;">appendChild</span><span style="color: #009900;">&#40;</span>mksnow_snowflakesHolder<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span></pre></td></tr></table></div>

<h2>4. A loop that creates particles</h2>
<p>Snowflakes rarely fall alone, they&#8217;re accompanied by thousands of other snowflakes on their journey down to earth. To create more than one snowflake or particle, we&#8217;re going to use a loop to set them up them one by one.<br />
Inside this loop we&#8217;re prepping up the snowflakes by pre-positioning the snowflakes. After that we&#8217;re putting all the values inside the array. We&#8217;re using some randomized numbers for the sizes and start positions of the snowflakes. This will give us a nice variety for the flakes and makes it even more appealing to watch them!</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #000066; font-weight: bold;">var</span> mksnow_amountSnowflakes <span style="color: #339933;">=</span> <span style="color: #CC0000;">50</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> minSize <span style="color: #339933;">=</span> <span style="color: #CC0000;">4</span><span style="color: #339933;">;</span>
<span style="color: #000066; font-weight: bold;">var</span> maxSize <span style="color: #339933;">=</span> <span style="color: #CC0000;">8</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #006600; font-style: italic;">// Create as many snowflakes as mksnow_amountSnowflakes</span>
<span style="color: #000066; font-weight: bold;">for</span> <span style="color: #009900;">&#40;</span>mksnow_currentFlake <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span> mksnow_currentFlake <span style="color: #339933;">&lt;</span> mksnow_amountSnowflakes<span style="color: #339933;">;</span> mksnow_currentFlake<span style="color: #339933;">++</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	mksnow_snowflakes<span style="color: #009900;">&#91;</span>mksnow_currentFlake<span style="color: #009900;">&#93;</span> <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">new</span> <span style="">Object</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000066; font-weight: bold;">var</span> startPosX  <span style="color: #339933;">=</span> <span style="">Math</span>.<span style="color: #660066;">random</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*</span>mksnow_SW<span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">var</span> startPosY  <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span><span style="">Math</span>.<span style="color: #660066;">random</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*-</span>mksnow_SH<span style="color: #009900;">&#41;</span><span style="color: #339933;">-</span><span style="color: #CC0000;">100</span><span style="color: #339933;">;</span>
	<span style="color: #000066; font-weight: bold;">var</span> randomSize <span style="color: #339933;">=</span> <span style="">Math</span>.<span style="color: #660066;">round</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#40;</span><span style="">Math</span>.<span style="color: #660066;">random</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*</span><span style="color: #009900;">&#40;</span>mksnow_maxSize<span style="color: #339933;">-</span>mksnow_minSize<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">+</span>mksnow_minSize<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
	obj <span style="color: #339933;">=</span> mksnow_snowflakes<span style="color: #009900;">&#91;</span>mksnow_currentFlake<span style="color: #009900;">&#93;</span><span style="color: #339933;">;</span>
&nbsp;
	obj.<span style="color: #660066;">counter</span> <span style="color: #339933;">=</span> <span style="">Math</span>.<span style="color: #660066;">random</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*</span>mksnow_amountSnowflakes<span style="color: #339933;">;</span>
	obj.<span style="color: #660066;">x</span>       <span style="color: #339933;">=</span> startPosX<span style="color: #339933;">;</span>
	obj.<span style="color: #660066;">y</span>       <span style="color: #339933;">=</span> startPosY<span style="color: #339933;">;</span>
	obj.<span style="color: #660066;">speedX</span>  <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
	obj.<span style="color: #660066;">speedY</span>  <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
	obj.<span style="color: #660066;">size</span>    <span style="color: #339933;">=</span> randomSize<span style="color: #339933;">;</span>
	obj.<span style="color: #660066;">size2</span>   <span style="color: #339933;">=</span> randomSize<span style="color: #339933;">*</span><span style="color: #CC0000;">0.5</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span></pre></td></tr></table></div>

<h2>5. Time to make it snow!</h2>
<p>In order to make things move with JavaScript, we&#8217;ll need to use a timer function. In this case we&#8217;ll use <code>setInterval</code> with a 16 milliseconds interval (roughly 60 fps) because it&#8217;s going to be a continious render.<br />
The function below will use a for loop to go through all the snowflakes inside the array and apply gravity, wind and resets the snowflakes if they get out of the screen. We&#8217;re adding a sine wave value to the <code>x</code> position to simulate the swirling effect.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #006600; font-style: italic;">// Initialize the timer</span>
mksnow_snowflakeTimer <span style="color: #339933;">=</span> window.<span style="color: #660066;">setInterval</span><span style="color: #009900;">&#40;</span><span style="color: #000066; font-weight: bold;">function</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span> mksnow_renderSnowflakes<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> <span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">16</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #000066; font-weight: bold;">function</span> mksnow_renderSnowflakes<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
	mksnow_snowflakesHolder.<span style="color: #660066;">style</span>.<span style="color: #660066;">display</span> <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;block&quot;</span><span style="color: #339933;">;</span>
	mksnow_SW <span style="color: #339933;">=</span> document.<span style="color: #660066;">body</span>.<span style="color: #660066;">offsetWidth</span><span style="color: #339933;">;</span>
	mksnow_SH <span style="color: #339933;">=</span> document.<span style="color: #660066;">body</span>.<span style="color: #660066;">offsetHeight</span><span style="color: #339933;">;</span>
&nbsp;
	context.<span style="color: #660066;">clearRect</span><span style="color: #009900;">&#40;</span><span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> mksnow_SW<span style="color: #339933;">,</span> mksnow_SH<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	context.<span style="color: #660066;">fillStyle</span> <span style="color: #339933;">=</span> <span style="color: #3366CC;">&quot;#FFFFFF&quot;</span><span style="color: #339933;">;</span>
&nbsp;
	<span style="color: #000066; font-weight: bold;">for</span> <span style="color: #009900;">&#40;</span>mksnow_currentFlake <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>  mksnow_currentFlake <span style="color: #339933;">&lt;</span> mksnow_amountSnowflakes<span style="color: #339933;">;</span> mksnow_currentFlake<span style="color: #339933;">++</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
		mksnow_sn <span style="color: #339933;">=</span> mksnow_snowflakes<span style="color: #009900;">&#91;</span>mksnow_currentFlake<span style="color: #009900;">&#93;</span><span style="color: #339933;">;</span>
&nbsp;
		mksnow_sn.<span style="color: #660066;">speedX</span> <span style="color: #339933;">+=</span> mksnow_sn_wind<span style="color: #339933;">;</span>
		mksnow_sn.<span style="color: #660066;">speedY</span> <span style="color: #339933;">+=</span> mksnow_sn_gravity<span style="color: #339933;">*</span>mksnow_sn.<span style="color: #660066;">size</span><span style="color: #339933;">;</span>
&nbsp;
		mksnow_sn.<span style="color: #660066;">speedX</span> <span style="color: #339933;">*=</span> <span style="color: #CC0000;">0.99</span><span style="color: #339933;">;</span>
		mksnow_sn.<span style="color: #660066;">speedY</span> <span style="color: #339933;">*=</span> <span style="color: #CC0000;">0.99</span><span style="color: #339933;">;</span>
&nbsp;
		mksnow_sn.<span style="color: #660066;">counter</span><span style="color: #339933;">++;</span>
&nbsp;
		mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">+=</span> mksnow_sn.<span style="color: #660066;">speedX</span><span style="color: #339933;">;</span>
		mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">+=</span> <span style="">Math</span>.<span style="color: #660066;">sin</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#40;</span>mksnow_sn.<span style="color: #660066;">counter</span><span style="color: #339933;">+</span>mksnow_sn.<span style="color: #660066;">y</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*</span><span style="color: #CC0000;">0.03</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*</span><span style="color: #CC0000;">0.5</span><span style="color: #339933;">;</span>
		mksnow_sn.<span style="color: #660066;">y</span> <span style="color: #339933;">+=</span> mksnow_sn.<span style="color: #660066;">speedY</span><span style="color: #339933;">;</span>
&nbsp;
		<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>mksnow_sn.<span style="color: #660066;">y</span> <span style="color: #339933;">&gt;</span> mksnow_SH<span style="color: #339933;">+</span>mksnow_sn.<span style="color: #660066;">size2</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
			mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">=</span> <span style="">Math</span>.<span style="color: #660066;">random</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*</span>mksnow_SW<span style="color: #339933;">;</span>
			mksnow_sn.<span style="color: #660066;">y</span> <span style="color: #339933;">=</span> <span style="color: #009900;">&#40;</span><span style="">Math</span>.<span style="color: #660066;">random</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">*-</span><span style="color: #CC0000;">100</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">-</span>mksnow_sn.<span style="color: #660066;">size2</span><span style="color: #339933;">;</span>
&nbsp;
			mksnow_sn.<span style="color: #660066;">speedX</span> <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
			mksnow_sn.<span style="color: #660066;">speedY</span> <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
&nbsp;
		<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">&gt;</span> mksnow_SW<span style="color: #339933;">+</span>mksnow_sn.<span style="color: #660066;">size2</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
			mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">=</span> <span style="color: #339933;">-</span>mksnow_sn.<span style="color: #660066;">size2</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
		<span style="color: #000066; font-weight: bold;">if</span> <span style="color: #009900;">&#40;</span>mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">&lt;</span> <span style="color: #339933;">-</span>mksnow_sn.<span style="color: #660066;">size2</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
			mksnow_sn.<span style="color: #660066;">x</span> <span style="color: #339933;">=</span> mksnow_SW<span style="color: #339933;">+</span>mksnow_sn.<span style="color: #660066;">size2</span><span style="color: #339933;">;</span>
		<span style="color: #009900;">&#125;</span>
&nbsp;
		<span style="color: #006600; font-style: italic;">// Draw the circles for the snowflakes</span>
		context.<span style="color: #660066;">beginPath</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		context.<span style="color: #660066;">arc</span><span style="color: #009900;">&#40;</span>mksnow_sn.<span style="color: #660066;">x</span><span style="color: #339933;">,</span> mksnow_sn.<span style="color: #660066;">y</span><span style="color: #339933;">,</span> mksnow_sn.<span style="color: #660066;">size</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> <span style="">Math</span>.<span style="color: #660066;">PI</span><span style="color: #339933;">*</span><span style="color: #CC0000;">2</span><span style="color: #339933;">,</span> <span style="color: #003366; font-weight: bold;">true</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span> 
		context.<span style="color: #660066;">closePath</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
		context.<span style="color: #660066;">fill</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
	<span style="color: #009900;">&#125;</span>
<span style="color: #009900;">&#125;</span></pre></td></tr></table></div>

<h2>6. Download mksnow.js</h2>
<p>I&#8217;ve made an easy to use script that will do all the above. Including the script into your site is very easy. Just use the code below and paste it at the end of, or after your <code>&lt;body&gt;</code> tag.</p>

<div class="wp_syntax"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #339933;">&lt;</span>script src<span style="color: #339933;">=</span><span style="color: #3366CC;">&quot;http://murtada.nl/downloads/mksnow.js&quot;</span><span style="color: #339933;">&gt;&lt;/</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #339933;">&lt;</span>script<span style="color: #339933;">&gt;</span>
<span style="color: #006600; font-style: italic;">/* Usage:                                                                              */</span>
<span style="color: #006600; font-style: italic;">/*      mksnow_startSnowfall(amountSnowflakes, gravity, wind, minSize, maxSize)        */</span>
<span style="color: #006600; font-style: italic;">/*      mksnow_stopSnowfall()                                                          */</span>
mksnow_startSnowfall<span style="color: #009900;">&#40;</span><span style="color: #CC0000;">100</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">1</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">2</span><span style="color: #339933;">,</span> <span style="color: #CC0000;">4</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">&lt;/</span>script<span style="color: #339933;">&gt;</span></pre></td></tr></table></div>

<p><a class='download-link' href="http://murtada.nl/downloads/mksnow.js">Download mksnow.js</a></p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/mksnow/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Smite game review</title>
		<link>http://murtada.nl/blog/smite-game-review/</link>
		<comments>http://murtada.nl/blog/smite-game-review/#comments</comments>
		<pubDate>Mon, 14 Oct 2013 20:24:45 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[Gaming]]></category>
		<category><![CDATA[Reviews]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog/?p=416</guid>
		<description><![CDATA[Smite is a MOBA (Multiplayer Online Battle Arena) like many other MOBAs out there (League of Legends, Heroes of Newerth, Dota, etc). The game is played from a third person perspective and offers a great team- and skill-based combat driven gameplay. Concept I like the game&#8217;s main idea, the concept is really good and even [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Smite is a MOBA (Multiplayer Online Battle Arena) like many other MOBAs out there (League of Legends, Heroes of Newerth, Dota, etc). The game is played from a third person perspective and offers a great team- and skill-based combat driven gameplay.</p>
<p><img class="aligncenter size-full wp-image-417" style="color: #333333; font-style: normal; line-height: 24px; margin-top: 0.4em;" alt="" src="http://murtada.nl/blog/wp-content/uploads/2013/10/Smite_logo_final_Flat.png" /></p>
<h2>Concept</h2>
<p>I like the game&#8217;s main idea, the concept is really good and even though it is simpler than Dota 2, it still has a feeling of complexity throughout the game. Each of your team selects a God from the weekly randomized pool (√† la League of Legends) and face off 5 other players who have selected a God of their own. All Gods are designed off of myths of classical and exotic religions. Norse, Hindu, Egyptian, Chinese, Roman and Mayan Gods are abound in the pool, and are fun and intriguing to see in full 3D.</p>
<p><img class="aligncenter size-large wp-image-433" alt="" src="http://murtada.nl/blog/wp-content/uploads/2013/10/godselection-1024x576.jpg" /></p>
<h2>Basic gameplay</h2>
<p>In most MOBA games there are &#8220;minions&#8221; or &#8220;creeps&#8221; that spawn on the main lanes between the two bases, these will walk straight to the enemy base and attack everything that is in their way. It&#8217;s not any different in this game. Minions will also aggro a God if a God on their team is being attacked. The same goes for towers and phoenixes along the way. Phoenixes are basically the &#8220;barracks&#8221; or &#8220;inhibitors&#8221; of this game, and will grant your team&#8217;s minions extra damage and health if you are able to destroy it. The phoenix will respawn after a short period of time of being destroyed.</p>
<p>Maintaining your lanes by keeping minions and enemy players away from your towers is essential to victory in this genre. At low levels, if you are not certain that you can finish off an enemy player, don&#8217;t take an unnecessary risk. Losing ground to your opponents in levels, gold, or towers can create a snowball effect that you may never recover from.</p>
<p>Jungle areas can be found in any area of the map that is not a lane or a team base. These areas contain small camps of neutral minions that can be killed for experience, gold and temporary buffs to your character&#8217;s stats. Some of these minions are very powerful and in turn provide powerful bonuses when killed.</p>
<p>Jungling in this game has never really seemed like a popular nor really beneficial thing. If your team positions itself good enough and is not too far behind, all heavy pushing from the opposing teams can be stopped effectively without the need of temporary jungle buffs.</p>
<p><img class="aligncenter size-full wp-image-421" alt="" src="http://murtada.nl/blog/wp-content/uploads/2013/10/smitephoenix.jpg" /></p>
<h2>Mechanics</h2>
<p>Like in almost all other MOBAs, your God has 4 mana-draining abilities that are unique to the God.¬†The first three skills are your basic skills that you will use most frequently in game. The fourth skill is your &#8220;ultimate&#8221; and is typically your most powerful skill.</p>
<p>Starting at level 1 you are allotted 1 skill point per level which can be spent on leveling up your skills. Spending 1 point in a skill will make it available for use, and each additional point will increase its effectiveness. Your ultimate skill can only be unlocked once your character reaches level 5, and a new skill point can be added every 5th additional level.</p>
<p>Once you reach the max level of 20, you will have earned the maximum number of skill points.</p>
<p><img class="aligncenter size-large wp-image-434" alt="" src="http://murtada.nl/blog/wp-content/uploads/2013/10/Untitled3-1024x576.jpg" /></p>
<p>The ability to auto-level and auto-buy items is a little too boring, and should only be allowed in the first few games (for starters). Later, it should only highlight the items (like in Dota 2), which will give you a reason to look at what other options of items you have.</p>
<p>The items themselves are too vague to really know what they are for, there is no clear separation between Gods that will tell you which items are best for which Gods, you got to read up on that (and the auto-buy function also does not allow you to experiment in that field).</p>
<h2>Free to play &#8230; with a hook</h2>
<p>Smite is free to play, yet more than 75% of the characters are not directly playable. At the moment of writing this review 10 out of 43 available Gods are in the free rotation.</p>
<p>To unlock these characters, you either have to play for a long time to get in-game currency, called &#8220;favor&#8221;, or pay for &#8220;gems&#8221; which you can exchange for in-game items playable characters. You can freely practice versus bots with characters you have not yet unlocked. At least you won&#8217;t be buying characters without knowing how they play.</p>
<p><img class="aligncenter size-full wp-image-429" alt="" src="http://murtada.nl/blog/wp-content/uploads/2013/10/buyinggod.jpg" /></p>
<p>Most of the characters costs either 5500 favor or 200 gems. 5500 favor equals roughly 15 hours of gameplay, and 200 gems cost from ‚Ç¨3.20 to ‚Ç¨2.25, depending on which pack you buy.</p>
<p>As of time of writing, there is a limited &#8220;Get all Gods&#8221; pack which will include all existing and future Gods for ‚Ç¨23.99. This is a pretty good deal, considering every God would end up costing ‚Ç¨0.56.</p>
<p><img class="aligncenter size-full wp-image-427" alt="" src="http://murtada.nl/blog/wp-content/uploads/2013/10/godpacks.jpg" /></p>
<h2>Matchmaking and immersion</h2>
<p>Matchmaking works okay, but sometimes one team has a clear advantage over the other, and the match becomes boring too quickly. I&#8217;ve also had a lot of deserters on the God selection screen (5 out of 20 games or so), which is tedious for starting players.</p>
<p>The overall feeling of immersion is a little hard to find, even though the 3rd person perspective gives a great feeling of depth and you never know if someone&#8217;s coming from behind. The game still lacks in the overall feeling of &#8220;polishedness&#8221;. I cannot quite put my finger on it, but I won&#8217;t be intrigued to read up items and try a lot of different heroes since they all seem too bland to my taste (all first skills do basically the same thing, then there&#8217;s an area of effect skills, and your ultimate skill is something unique but not special looking on most heroes).</p>
<p>As far as sound goes, there&#8217;s not a lot going on. The music is forgettably basic and does not offer much variety. Though the worst part for me was the quality of voice-acting. It seemed like it was done by semi-professionals, and it almost sounds like that all the male Gods have the same voice actor. This really breaks the immersion of different Gods having their own personality.</p>
<p>I did recommend this game to friends, but I myself would not play it a lot more. After a few games I kinda knew what the game was about, and it didn&#8217;t offer me the satisfaction like Dota 2 does.</p>
<p>Final verdict: 6 out of 10</p>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/smite-game-review/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Time travel</title>
		<link>http://murtada.nl/blog/time-travel/</link>
		<comments>http://murtada.nl/blog/time-travel/#comments</comments>
		<pubDate>Thu, 12 Jan 2012 19:49:39 +0000</pubDate>
		<dc:creator><![CDATA[Murtada al Mousawy]]></dc:creator>
				<category><![CDATA[Astronomy]]></category>
		<category><![CDATA[Physics]]></category>
		<category><![CDATA[Science]]></category>

		<guid isPermaLink="false">http://murtada.nl/blog/?p=317</guid>
		<description><![CDATA[So, time travel is possible after all! No, you&#8217;re not going to step inside a time machine to get physically shredded and transported as tiny packages only to be reassembled in another era where you can wreak havoc by just showing the local people of 1542 BC that you have an iPad 2. Though it [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><script type="text/javascript" src="experiments/newton/js/script.js" defer="defer"></script>So, time travel is possible after all!</p>
<p>No, you&#8217;re not going to step inside a time machine to get physically shredded and transported as tiny packages only to be reassembled in another era where you can wreak havoc by just showing the local people of 1542 BC that you have an iPad 2. Though it might sound very alluring for the aspiring evil scientists among us, it still is possible the <em>other</em> way: traveling <em>forward</em> in time.<br />
Yes yes &#8211; not quite that exciting as you&#8217;d hoped, but very interesting nonetheless!</p>
<h2>The law of universal gravitation</h2>
<p>We all know Newton&#8217;s laws from high school physics class. Still, for most of us, the equations remained highly abstract and we didn&#8217;t get the chance to apply them to real life scenarios. Though the equations were basic, some laws are highly applicable to an enormous amount of the universe. With the first law of Newton: <code>Newton's law of</code> <code>universal gravitation</code> we can have a simple planetary orbit system by applying the equation to the bodies <em>[fig a.1]</em>.</p>
<div class="wp-caption"><canvas class="size-full" style="display: block; max-width: 550px; max-height: 400px; background: #CCCCCC url(http://murtada.nl/experiments/newton/img/gravity_grid3.png);" id="canvas-1" width="550" height="400"></canvas>
<p>fig a.1 &#8211; A real-time rendered image of two bodies of mass being attracted whilst having their own velocity, sometimes resulting in a spiraling orbit motion. This is a basic simulation of real planetary orbit physics. By applying a gravity field around the bodies, the bodies will attract each other, and keep in an never-ending orbit motion. Click image to restart with different parameters.</p>
</div>
<p>The basic principle behind this confirmed idea is that any form of mass &#8211; a <code>body</code> &#8211; has <code>gravity</code>. You can simply imagine <code>gravity</code> as a force surrounding a body, pulling other bodies to its center. That is the reason we don&#8217;t fall off the Earth when we jump!</p>
<p>Newton was convinced that gravity worked instantaniously. For example: if the sun would suddenly evaporate and disappear, the Earth would fall out of orbit immediately and gets hurled into space. This was later proven to be a misconception of how gravity works.</p>
<h2>Unification of theories</h2>
<p>So now we know that all bodies &#8211; or just mass &#8211; has its own <code>gravitational well</code> that pulls other bodies towards the center of the body. This theory was the basis for further research on the matter by scientists such as Albert Einstein.</p>
<p>Albert Einstein was working on a theory about light in his early twenties. At the age of 26, he released a paper that proved that the speed of light was the absolute barrier of everything. Yet, light also travels at a certain speed. For example: the time for the rays of light to travel the distance from the sun to the surface of the Earth (150 million kilometers) is approximately 8 minutes. Einstein said that <em>nothing</em> can go faster than light, not even gravity. Yet, Newton&#8217;s theory told a different story.<br />
When Einstein noticed this flaw in <code>Newton's law of universal gravitation</code>, he started working on a solution for this problem &#8211; in which he succeeded and revolutioninzed the picture of the universe.</p>
<p>Though to understand what Einstein did, we have to take a big jump through time and go back to 1632, when Galileo Galilei came up with the idea of a coordinate system in which objects, where no force at work, are completely still or make a <abbr title="constant">uniform</abbr> <abbr title="straight">rectilinear</abbr> motion. So if you&#8217;d spill coffee or drop a ball while on an airplane or while sitting on a couch at home, the same laws apply. Even though, in an airplane, you are traveling at 1000km per hour! This effect is called the <code>Galilean invariance</code>.<br />
Einstein unified this theory with <code>Newton's universal gravitation</code> theory to end up with a coordination grid that simplifies the calculations for measuring the amount of deflection of gravity, amongst other physical changes caused by the mass of an object.</p>
<p>After nearly ten years of racking his brain, he found the answer in a new kind of unification. Einstein came to think of the three dimensions of space (length, width and depth) and the single dimension of time, as bound together as a single fabric of space-time.<br />
Like the surface of a trampoline, is warped and stretched by heavy objects like planets or stars <em>[fig b.2]</em>. And it&#8217;s this warping or curving of space-time that creates what we feel as gravity. A planet like the Earth is kept in orbit not because the sun reaches out and instantaneously grabs hold of it as of Newton&#8217;s theory. Bodies no longer have a force that pulls other bodies towards them. The reason why the Earth orbits the sun is merely because the Earth follows curves in the space-time fabric caused by the sun&#8217;s presence.<br />
This theory is named <code>general relativity</code>.</p>
<div class="wp-caption"><img class="wp-image-329" alt="" src="http://murtada.nl/blog/wp-content/uploads/2012/01/gravitational_well_02.png" />
<p>fig b.2 &#8211; A symmetric spherical body on a two-dimensional grid that illustrates the space-time universe. <code>body A</code> is surrounded by its <code>gravitational well</code>, defined by an outer ring and a gradient.</p>
</div>
<p>You can simply imagine a <code>gravitational well</code> as a ring or more specifically, a funnel surrounding a body <em>[fig b.3]</em> of mass that depicts the curvature of space-time.</p>
<div class="wp-caption"><img class="size-full wp-image-322" alt="" src="http://murtada.nl/blog/wp-content/uploads/2012/01/gravitational_well_03.png" />
<p>fig b.3 &#8211; The same scene as fig a.2 illustrated from the side with the forces of the <code>gravitational well</code> of <code>body A</code> applied to the grid. The gravity well shows an exponential distribution (hyperboloid) of the force in this situation, since <code>body A</code> is a symmetric spherical mass. Therefore, there can also be noted that the gravitational force exponentially increases as you get closer to the center of mass of the body, and will theoretically have an endless reach.</p>
</div>
<blockquote><p>So what does time have to do with gravity?</p></blockquote>
<p>The current state of the <code>general relativity</code> theory also describes the <abbr title="expansion">dilation</abbr> and <abbr title="slowing down">delay</abbr> of time, affected by the curvature of space-time.</p>
<p>When <code>general relativity</code> was introduced in 1915, it had no solid empirical foundation (it did not depend on evidence or consequences that are observable by the senses). This lead to a quest for proof, obtainable through experiments and testing.</p>
<h2>General relativity at its best</h2>
<p>A very good example of <code>general relativity</code> is a natural phenomenon called <code>gravitational redshifting</code>. It describes how light has to &#8220;climb&#8221; uphill a <code>gravitational well</code> and thereby losing some energy, shifting the light-waves to a lower energetic frequency and longer in wavelength, resulting in the optical color red <em>[fig c.4]</em>.</p>
<div class="wp-caption"><img class="size-full wp-image-322" alt="" src="http://murtada.nl/blog/wp-content/uploads/2012/01/gravitational_well_04.png" />
<p>fig c.4 &#8211; The gravitational redshift of a light wave as it moves uphill against a gravitational field (caused by the yellow star <code>body C</code>).</p>
</div>
<p>The deflection of light caused by bodies with great mass was already foretold by John Michell in 1783 and Pierre-Simon Laplace in 1796, who predicted that some stars could have a gravity force so strong that light would not be able to escape. It was in 1801 that Johann Georg von Soldner calculated the amount of deflection of a light from a distant star, by the sun. He arrived at the Newtonian answer which is half the value predicted by <code>general relativity</code>. All of this early work assumed that light was a particle, a corpuscle with kinetic energy, which was inconsistent with the modern understanding of light waves.</p>
<p>In 1861 when James Clerk Maxwell published his paper, it was clear that light is in fact an electromagnetic wave rather than a particle. Einstein&#8217;s theory on light told that light does not simply &#8220;slow down&#8221; and combined with the fact that light is an electromagnetic wave, it all made sense. One way around this conclusion would be if time itself was altered &#8211; if clocks at different points had different rates! This effect is called <code>time dilation</code>.</p>
<h2>What about special relativity</h2>
<p>When Einstein came up with <code>general relativity</code>, a problem popped up when he faced calculations in the vacuum of space (or, hypothetically far from all gravitational mass). He did not have a reference of time nor space to make his calculations. So <code>special relativity</code> (<code>SR</code>) was his second invention: a way to make space-time calculations based on a &#8220;the inertial frame of reference&#8221;. This basically means that you will refer to a force that <em>does</em> exist in that space-time field you are doing calculations in, but only to measure differences between the two forces.</p>
<p>This also means that when making calculations in <code>SR</code>, you are excluding every practical cause of errors in measurements or formulas for a better understanding of what is happening.</p>
<p>Being able to make calculations like that gave a lot of new ways for calculating space-time ratios for different velocities. Now imagine two clocks that get shot into outer space to orbit the Earth. Clock A gets launched to orbit Earth with a velocity of almost the speed of light, while clock B gets launched to orbit at the speed of a regular space shuttle <em>[fig d.5]</em>.</p>
<div class="wp-caption"><img class="size-full wp-image-404" alt="" src="http://murtada.nl/blog/wp-content/uploads/2012/01/time_travel.png" />
<p>fig d.5 &#8211; Both clocks are launched at 00:00 hours and are measured 00:21, revealing that clock A has spent less time in space due to its high velocity compared to earth and clock B.</p>
</div>
<p>After one year, the time on both clocks would be measured and compared to one another. You would see that clock A would be far behind on clock B. This does not mean that clock A is broken, but simply that the speed time would pass depends on how fast the subject is moving. So clock A would have spent <em>less</em> time in space than clock B, even though they both spent a year in outer space. (Yes, the measurement of a year would be also relative, since the Earth is moving at a different velocity too!)</p>
<h2>Welcome on board</h2>
<p>In theory, time dilation is the key for travelling into the future without spending the same amount of time you normally would, compared to the speed time moves on Earth. You would need a very, very fast vehicle to have a dramatic difference. For example, one year of travel might correspond to ten years at home. A constant 1g acceleration would permit humans to travel through the entire known Universe in one human lifetime. The space travellers could return to Earth billions of years in the future. A scenario based on this idea was presented in the novel Planet of the Apes by Pierre Boulle, which&#8230; really didn&#8217;t give hope for having a nice welcome home party.</p>
<div class="wp-caption"><img class="size-full wp-image-392" title="Monkey business" alt="" src="http://murtada.nl/blog/wp-content/uploads/2012/01/monkeybusiness.jpg" width="550" height="344" />
<p>&quot;YOU! Get off my planet!&quot;</p>
</div>
]]></content:encoded>
			<wfw:commentRss>http://murtada.nl/blog/time-travel/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>

