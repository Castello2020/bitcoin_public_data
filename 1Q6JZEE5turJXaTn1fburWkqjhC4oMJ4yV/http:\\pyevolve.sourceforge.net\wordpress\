http://pyevolve.sourceforge.net/wordpress/
HTTP/1.1 200 OK
Server: Apache/2.2.15 (CentOS)
Vary: Host
X-Pingback: http://pyevolve.sourceforge.net/wordpress/xmlrpc.php
Cache-Control: max-age=172800
Expires: Thu, 24 Jul 2014 23:36:51 GMT
Content-Type: text/html; charset=UTF-8
Content-Length: 125201
Date: Tue, 22 Jul 2014 23:36:52 GMT
X-Varnish: 525215118
Age: 0
Via: 1.1 varnish
Connection: close

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 
	<title>Pyevolve</title>
	<link type="text/css" rel="stylesheet" media="screen" href="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/style.css" />
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://pyevolve.sourceforge.net/wordpress/?feed=rss2" />
	<link rel="pingback" href="http://pyevolve.sourceforge.net/wordpress/xmlrpc.php" />

	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js" type="text/javascript"></script>
	
		<!-- Cufon: Custom Font Replacement -->
	<script src="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/js/cufon/cufon-yui.js" type="text/javascript"></script>
	<script src="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/js/cufon/typoslabserif-light-300.font.js" type="text/javascript"></script>
	<script src="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/js/cufon/cufon-replace.js" type="text/javascript"></script>
	
	<!--[if lte IE 7]>
	<style type="text/css">
	body {
		behavior: url("http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/hover.htc");
	}
	#nav ul li ul {
		top: 48px;
	}
	</style>
	<![endif]-->
	<link type="text/css" rel="stylesheet" media="screen" href="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/custom-colors.php?colors=ba954f-dabc83" />
	<link rel='stylesheet' id='cptchStylesheet-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/captcha/css/style.css?ver=3.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='codecolorer-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/codecolorer/codecolorer.css?ver=0.9.9' type='text/css' media='screen' />
<link rel='stylesheet' id='socialize-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/socialize/frontend/css/socialize.css?ver=3.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='codebox-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wp-codebox/css/codebox.css?ver=0.1' type='text/css' media='screen' />
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/prototype/1.7.1.0/prototype.js?ver=1.7.1'></script>
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/scriptaculous/1.9.0/scriptaculous.js?ver=1.9.0'></script>
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/scriptaculous/1.9.0/effects.js?ver=1.9.0'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/lightbox-2/lightbox.js?ver=1.8'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wp-codebox/js/codebox.js?ver=0.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://pyevolve.sourceforge.net/wordpress/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://pyevolve.sourceforge.net/wordpress/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.7.1" />

<!-- All in One SEO Pack 1.6.14.5 by Michael Torbert of Semper Fi Web Design[254,294] -->
<link rel="publisher" href="https://plus.google.com/118258566074039785562" />
<meta name="description" content="By Christian S. Perone" />
<meta name="keywords" content="pyevolve,python,genetic algorithms,genetic programming,philosophy,science,programming,math" />
<!-- /all in one seo pack -->
<!-- Google Analytics Tracking by Google Analyticator: http://cavemonkey50.com/code/google-analyticator/ -->
	<script type="text/javascript">
		var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
		document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</script>

	<script type="text/javascript">
		try {
		var pageTracker = _gat._getTracker("UA-7117443-2");
		pageTracker._initData();
		pageTracker._trackPageview();
	} catch(err) {}</script>

	<!-- begin lightbox scripts -->
	<script type="text/javascript">
    //<![CDATA[
    document.write('<link rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/lightbox-2/Themes/Black/lightbox.css" type="text/css" media="screen" />');
    //]]>
    </script>
	<!-- end lightbox scripts -->


<!-- Google Fonts -->
<link href='http://fonts.googleapis.com/css?family=Crushed' rel='stylesheet' type='text/css' />
<style type="text/css" media="screen">
     
</style>
<!-- fonts delivered by Wordpress Google Fonts, a plugin by Adrian3.com -->


<!-- Start Of Script Generated By WP-PageNavi 2.40 -->
<link rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wp-pagenavi/pagenavi-css.css" type="text/css" media="screen" />
<!-- End Of Script Generated By WP-PageNavi 2.40 -->
<link type="text/css" rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/about-me/stylesheet.css" />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>

<!-- Wordpress Popular Posts v2.1.4 -->
<link rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wordpress-popular-posts/style/wpp.css" type="text/css" media="screen" />
<!-- End Wordpress Popular Posts v2.1.4 -->
<style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>
</head>

<body class="home blog">
	<div id="wrap">

		<!-- Start: Header -->
		<div id="header">
			<div class="top-options">
								<div class="rss-link left"><a href="http://feeds2.feedburner.com/pyevolve" title="Subscribe to feed">Subscribe to RSS Feed</a></div>
				<div class="search-wrap right">
					<form method="get" id="searchform" name="searchform" action="http://pyevolve.sourceforge.net/wordpress/">
						<input type="text" value="Site Search" name="s" id="s" onblur="if (this.value == '') {this.value = 'Site Search';}" onfocus="if (this.value == 'Site Search') {this.value = '';}" />  
						<button type="submit" class="searchsubmit">Go</button>
					</form>
				</div>
				<div class="clear"></div>
			</div>
			<div id="nav">
				<div class="menu"><ul><li class="page_item page-item-36"><a href="http://pyevolve.sourceforge.net/wordpress/?page_id=36">Project</a></li><li class="page_item page-item-12"><a href="http://pyevolve.sourceforge.net/wordpress/?page_id=12">About</a></li></ul></div>
			</div>

			<div id="sitename">
				<a href="http://pyevolve.sourceforge.net/wordpress/" title="Pyevolve - by Christian S. Perone">Pyevolve</a><br /><span>&#126; by Christian S. Perone &#126;</span>			</div>
		</div>
		<!-- End: Header -->
		<!-- Start: Content -->
		<div id="content">
							<div class="post-2711 post type-post status-publish format-standard hentry category-programming-2 category-python tag-coins tag-computer-vision tag-contour-finding tag-image-segmentation tag-morphology tag-opencv tag-opencv-bindings tag-programming tag-python" id="post-2711">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2711" title="Permanent Link to Simple and effective coin segmentation using Python and OpenCV">Simple and effective coin segmentation using Python and OpenCV</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2711" data-text="Simple and effective coin segmentation using Python and OpenCV" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2711&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2711";
			reddit_title = "Simple and effective coin segmentation using Python and OpenCV";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2711" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2711"></g:plusone></div></div><p><iframe width="420" height="315" src="//www.youtube.com/embed/jWERV5Y0FwU?rel=0" frameborder="0" allowfullscreen></iframe></p>
<p>The new generation of OpenCV bindings for Python are getting better and better with the hard work of the community. The new bindings, called &#8220;cv2&#8243; are the replacement of the old &#8220;cv&#8221; bindings; in this new generation of bindings, almost all operations returns now native Python objects or Numpy objects, which is pretty nice since it simplified a lot and also improved performance on some areas due to the fact that you can now also use the optimized operations from Numpy and also enabled the integration with other frameworks like the <a href="http://scikit-image.org/" title="Scikit-Image" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-image.org');">scikit-image</a> which also uses Numpy arrays for image representation.</p>
<p>In this example, I&#8217;ll show how to segment coins present in images or even real-time video capture with a simple approach using thresholding, morphological operators and contour approximation. This approach is a lot simpler than the approach using Otsu&#8217;s thresholding and Watershed segmentation <a href="http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_watershed/py_watershed.html#watershed" title="OpenCV Python Tutorial" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/opencv-python-tutroals.readthedocs.org');">here in OpenCV Python tutorials</a>, which I highly recommend you to read due to its robustness. Unfortunatelly, the approach using Otsu&#8217;s thresholding is highly dependent on a illumination normalization. One could extract small patches of the image to implement something similar to an adaptive Otsu&#8217;s binarization (like the one implemented in Letptonica &#8211; the framework used by Tesseract OCR) to overcome this problem, but let&#8217;s see another approach. For reference, see the output of the Otsu&#8217;s thresholding using an image taken with my webcam with a non-normalized illumination:</p>
<p>&nbsp;</p>
<div id="attachment_2715" style="width: 1023px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/original_vs_otsu1.png" rel="lightbox[2711]"><img class="size-full wp-image-2715" alt="Original image vs Otsu binarization" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/original_vs_otsu1.png" width="1013" height="493" /></a><p class="wp-caption-text">Original image vs Otsu binarization</p></div>
<h2></h2>
<h2>1. Setting the Video Capture configuration</h2>
<p>The first step to create a real-time Video Capture using the Python bindings is to instantiate the VideoCapture class, set the properties and then start reading frames from the camera:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="python codecolorer"><span class="kw1">import</span> numpy <span class="kw1">as</span> np<br />
<span class="kw1">import</span> cv2<br />
<br />
cap = cv2.<span class="me1">VideoCapture</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />
cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_WIDTH</span>, <span class="nu0">1280</span><span class="br0">&#41;</span><br />
cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_HEIGHT</span>, <span class="nu0">720</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>In newer versions (unreleased yet), the constants for CV_CAP_PROP_FRAME_WIDTH are now in the <strong>cv2</strong> module, for now let&#8217;s just use the <strong>cv2.cv</strong> module.</p>
<h2>2. Reading image frames</h2>
<p>The next step is to use the VideoCapture object to read the frames and then convert them to gray color (we are not going to use color information to segment the coins):</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br /></div></td><td><div class="python codecolorer"><span class="kw1">while</span> <span class="kw2">True</span>:<br />
&nbsp; &nbsp; ret, frame = cap.<span class="me1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; roi = frame<span class="br0">&#91;</span><span class="nu0">0</span>:<span class="nu0">500</span>, <span class="nu0">0</span>:<span class="nu0">500</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; gray = cv2.<span class="me1">cvtColor</span><span class="br0">&#40;</span>roi, cv2.<span class="me1">COLOR_BGR2GRAY</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Note that here I&#8217;m extracting a smal portion of the complete image (where the coins are located), but you don&#8217;t have to do that if you have only coins on your image. At this moment, we have the following gray image:</p>
<div id="attachment_2728" style="width: 504px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_image.png" rel="lightbox[2711]"><img class="size-full wp-image-2728" alt="The original Gray image captured." src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_image.png" width="494" height="492" /></a><p class="wp-caption-text">The original Gray image captured.</p></div>
<h2>3. Applying adaptive thresholding</h2>
<p>In this step we will apply the Adaptive Thresholding after applying a Gaussian Blur kernel to eliminate the noise that we have in the image:</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br /></div></td><td><div class="text codecolorer">gray_blur = cv2.GaussianBlur(gray, (15, 15), 0)<br />
thresh = cv2.adaptiveThreshold(gray_blur, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C,<br />
&nbsp; &nbsp; cv2.THRESH_BINARY_INV, 11, 1)</div></td></tr></tbody></table></div>
<p>See the effect of the Gaussian Kernel in the image:</p>
<div id="attachment_2725" style="width: 1023px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_vs_gaussian.png" rel="lightbox[2711]"><img class="size-full wp-image-2725" alt="The original gray image and the image after applying the Gaussian Kernel." src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_vs_gaussian.png" width="1013" height="492" /></a><p class="wp-caption-text">The original gray image and the image after applying the Gaussian Kernel.</p></div>
<p>And now the effect of the Adaptive Thresholding with the blurry image:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gaussian_vs_adaptive.png" rel="lightbox[2711]"><img class="aligncenter size-full wp-image-2726" alt="The effect of the adaptive thresholding into the blurry image" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gaussian_vs_adaptive.png" width="1015" height="498" /></a></p>
<p>Note that at that moment we already have the coins segmented except for the small noisy inside the center of the coins and also in some places around them.</p>
<h2>4. Morphology</h2>
<p>The <a href="http://en.wikipedia.org/wiki/Mathematical_morphology" title="Wikipedia: Mathematical Morphology" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Morphological Operators</a> are used to dilate, erode and other operations on the pixels of the image. Here, due to the fact that sometimes the camera can present some artifacts we will use the Morphological Operation of Closing to make sure that the borders of the coins are always close, otherwise we may found a coin with a semi circle or something like that. To understand the effect of the Closing operation (which is the operation of erosion of the pixels already dilated) see the image below:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/FiltersMorphologicalClosing.jpg" rel="lightbox[2711]"><img class="aligncenter size-full wp-image-2729" alt="Morphological Closing" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/FiltersMorphologicalClosing.jpg" width="582" height="190" /></a></p>
<p>You can see that after some iterations of the operation, the circles starts to become filled. To use the Closing operation, we&#8217;ll use the <strong>morphologyEx</strong> function from the OpenCV Python bindings:</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br /></div></td><td><div class="text codecolorer">kernel = np.ones((3, 3), np.uint8)<br />
closing = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel, iterations=4)</div></td></tr></tbody></table></div>
<p>See now the effect of the Closing operation on our coins:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/closing.png" rel="lightbox[2711]"><img class="aligncenter size-full wp-image-2731" alt="Closing Operation in the coins" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/closing.png" width="1011" height="500" /></a></p>
<p>The operations of Morphological Operators are very simple, the main principle is the application of a element (in our case we have a block element of 3&#215;3) into the pixels of the image. If you want to understand it, please see <a href="https://www.youtube.com/watch?v=fmyE7DiaIYQ" title="Youtube: Erosion" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.youtube.com');">this animation explaning the operation of Erosion</a>.</p>
<h2>5. Contour detection and filtering</h2>
<p>After applying the morphological operators, all we have to do is to find the contour of each coin and then filter the contours having an area smaller or larger than a coin area. You can imagine the procedure of finding contours in OpenCV as the operation of finding connected components and their boundaries. To do that, we&#8217;ll use the OpenCV <strong>findContours </strong>function.</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br /></div></td><td><div class="python codecolorer">cont_img = closing.<span class="kw3">copy</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
contours, hierarchy = cv2.<span class="me1">findContours</span><span class="br0">&#40;</span>cont_img, cv2.<span class="me1">RETR_EXTERNAL</span>,<br />
&nbsp; &nbsp; cv2.<span class="me1">CHAIN_APPROX_SIMPLE</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Note that we made a copy of the closing image because the function findContours will change the image passed as the first parameter, we&#8217;re also using the <strong>RETR_EXTERNAL</strong> flag, which means that the contours returned are only the extreme outer contours. The parameter <strong>CHAIN_APPROX_SIMPLE</strong> will also return a compact representation of the contour, for more information <a href="http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_contours/py_contours_begin/py_contours_begin.html#contour-approximation-method" title="OpenCV Python Tutorials - Approximation Method" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/opencv-python-tutroals.readthedocs.org');">see here</a>.</p>
<p>After finding the contours, we need to iterate into each one and check the area of them to filter the contours containing an area greater or smaller than the area of a coin. We also need to fit an ellipse to the contour found. We could have done this using the minimum enclosing circle, but since my cameara isn&#8217;t perfectly above the coins, the coins appear with a small inclination describing an ellipse.</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br /></div></td><td><div class="python codecolorer"><span class="kw1">for</span> cnt <span class="kw1">in</span> contours:<br />
&nbsp; &nbsp; area = cv2.<span class="me1">contourArea</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> area <span class="sy0">&lt;</span> <span class="nu0">2000</span> <span class="kw1">or</span> area <span class="sy0">&gt;</span> <span class="nu0">4000</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="kw2">len</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">5</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; ellipse = cv2.<span class="me1">fitEllipse</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; cv2.<span class="me1">ellipse</span><span class="br0">&#40;</span>roi, ellipse, <span class="br0">&#40;</span><span class="nu0">0</span>,<span class="nu0">255</span>,<span class="nu0">0</span><span class="br0">&#41;</span>, <span class="nu0">2</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Note that in the code above we are iterating on each contour, filtering coins with area smaller than 2000 or greater than 4000 (these are hardcoded values I found for the brazilian coins at this distance from the camera), later we check for the number of points of the contour because the function <strong>fitEllipse</strong> needs a number of points greater or equal than 5 and finally we use the <strong>ellipse</strong> function to draw the ellipse in green over the original image.</p>
<p>To show the final image with the contours we just use the imshow function to show a new window with the image:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br /></div></td><td><div class="python codecolorer">cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">'final result'</span>, roi<span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>And finally, this is the result in the end of all steps described above:</p>
<div id="attachment_2736" style="width: 503px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/final_result.png" rel="lightbox[2711]"><img class="size-full wp-image-2736" alt="The final image with the contours detected" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/final_result.png" width="493" height="491" /></a><p class="wp-caption-text">The final image with the contours detected</p></div>
<p>The complete source-code:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;height:400px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br />25<br />26<br />27<br />28<br />29<br />30<br />31<br />32<br />33<br />34<br />35<br />36<br />37<br />38<br />39<br />40<br />41<br />42<br />43<br />44<br />45<br />46<br />47<br />48<br /></div></td><td><div class="python codecolorer"><span class="kw1">import</span> numpy <span class="kw1">as</span> np<br />
<span class="kw1">import</span> cv2<br />
<br />
<span class="kw1">def</span> run_main<span class="br0">&#40;</span><span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; cap = cv2.<span class="me1">VideoCapture</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_WIDTH</span>, <span class="nu0">1280</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_HEIGHT</span>, <span class="nu0">720</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; <span class="kw1">while</span><span class="br0">&#40;</span><span class="kw2">True</span><span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; ret, frame = cap.<span class="me1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; roi = frame<span class="br0">&#91;</span><span class="nu0">0</span>:<span class="nu0">500</span>, <span class="nu0">0</span>:<span class="nu0">500</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; gray = cv2.<span class="me1">cvtColor</span><span class="br0">&#40;</span>roi, cv2.<span class="me1">COLOR_BGR2GRAY</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; gray_blur = cv2.<span class="me1">GaussianBlur</span><span class="br0">&#40;</span>gray, <span class="br0">&#40;</span><span class="nu0">15</span>, <span class="nu0">15</span><span class="br0">&#41;</span>, <span class="nu0">0</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; thresh = cv2.<span class="me1">adaptiveThreshold</span><span class="br0">&#40;</span>gray_blur, <span class="nu0">255</span>, cv2.<span class="me1">ADAPTIVE_THRESH_GAUSSIAN_C</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">THRESH_BINARY_INV</span>, <span class="nu0">11</span>, <span class="nu0">1</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; kernel = np.<span class="me1">ones</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3</span>, <span class="nu0">3</span><span class="br0">&#41;</span>, np.<span class="me1">uint8</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; closing = cv2.<span class="me1">morphologyEx</span><span class="br0">&#40;</span>thresh, cv2.<span class="me1">MORPH_CLOSE</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; kernel, iterations=<span class="nu0">4</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; cont_img = closing.<span class="kw3">copy</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; contours, hierarchy = cv2.<span class="me1">findContours</span><span class="br0">&#40;</span>cont_img, cv2.<span class="me1">RETR_EXTERNAL</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">CHAIN_APPROX_SIMPLE</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">for</span> cnt <span class="kw1">in</span> contours:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; area = cv2.<span class="me1">contourArea</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> area <span class="sy0">&lt;</span> <span class="nu0">2000</span> <span class="kw1">or</span> area <span class="sy0">&gt;</span> <span class="nu0">4000</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="kw2">len</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">5</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ellipse = cv2.<span class="me1">fitEllipse</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">ellipse</span><span class="br0">&#40;</span>roi, ellipse, <span class="br0">&#40;</span><span class="nu0">0</span>,<span class="nu0">255</span>,<span class="nu0">0</span><span class="br0">&#41;</span>, <span class="nu0">2</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">&quot;Morphological Closing&quot;</span>, closing<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">&quot;Adaptive Thresholding&quot;</span>, thresh<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">'Contours'</span>, roi<span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> cv2.<span class="me1">waitKey</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">&amp;</span> 0xFF == <span class="kw2">ord</span><span class="br0">&#40;</span><span class="st0">'q'</span><span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><br />
<br />
&nbsp; &nbsp; cap.<span class="me1">release</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; cv2.<span class="me1">destroyAllWindows</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
<br />
<span class="kw1">if</span> __name__ == <span class="st0">&quot;__main__&quot;</span>:<br />
&nbsp; &nbsp; run_main<span class="br0">&#40;</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>June 22nd, 2014</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2711#comments">1 Comment</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=coins" rel="tag">Coins</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=computer-vision" rel="tag">Computer Vision</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=contour-finding" rel="tag">Contour Finding</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=image-segmentation" rel="tag">Image Segmentation</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=morphology" rel="tag">Morphology</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=opencv" rel="tag">OpenCV</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=opencv-bindings" rel="tag">OpenCV Bindings</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=programming" rel="tag">programming</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2703 post type-post status-publish format-standard hentry category-open-data tag-benford-law tag-open-data-2 tag-porto-alegre tag-statistics" id="post-2703">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2703" title="Permanent Link to Despesas de Custeio e Lei de Benford">Despesas de Custeio e Lei de Benford</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2703" data-text="Despesas de Custeio e Lei de Benford" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2703&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2703";
			reddit_title = "Despesas de Custeio e Lei de Benford";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2703" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2703"></g:plusone></div></div><p><strong><em>* This post is in Portuguese.</em></strong></p>
<p>Há poucos dias, a prefeitura de Porto Alegre liberou os <em>datasets </em>com os dados de despesas de custeio de vários órgãos municipais (Secretaria Municipal de Saúde, Secretaria Municipal de Cultura, Gabinete do Prefeito, etc.).  O plot abaixo mostra a quantidade de empenhos para cada órgão municipal:</p>
<div id="attachment_2707" style="width: 632px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/download-2.png" rel="lightbox[2703]"><img class="size-full wp-image-2707" alt="Plot - Qtd Empenhos vs Órgãos" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/download-2.png" width="622" height="588" /></a><p class="wp-caption-text">Plot &#8211; Qtd Empenhos vs Órgãos</p></div>
<p>Uma das maneiras utilizadas geralmente para verificar fraudes é o uso da <a href="http://en.wikipedia.org/wiki/Benford's_law" title="Wikipedia: Benford's Law" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Lei de Benford</a> <a href="http://pyevolve.sourceforge.net/wordpress/?p=572" title="Benford’s Law and the Iran’s election">[1]</a> <a href="http://pyevolve.sourceforge.net/wordpress/?p=485" title="Delicious.com, checking user numbers against Benford’s Law">[2]</a> <a href="http://pyevolve.sourceforge.net/wordpress/?p=457" title="Benford’s Law meets Python and Apple Stock Prices">[3]</a>, que fala sobre a distribuição das frequências de dígitos em vários <em>datasets </em>da vida real, incluindo valores de ações, número de populações, tamanhos de rios, etc.</p>
<p>Ao correlacionar a distribuição de números dos primeiros digitos dos valores de empenhos dos dados de Despesas de Custeio do 2º bimestre de 2014 com a distribuição da Lei de Benford,  a correlação ficou muito clara:</p>
<p>&nbsp;</p>
<div id="attachment_2705" style="width: 511px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/download-1.png" rel="lightbox[2703]"><img class="size-full wp-image-2705" alt="Lei de Benford vs Despesas de Custeio (Empenho)" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/download-1.png" width="501" height="556" /></a><p class="wp-caption-text">Lei de Benford vs Despesas de Custeio (Empenho)</p></div>
<p>Segue aí mais um exemplo de correlação da Lei de Benford. Um sistema legal para ser construído seria um monitor de despesas que verificasse a correlação da Lei de Benford automaticamente e alertasse a cada anomalia encontrada.</p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>June 9th, 2014</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2703#comments">2 Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=benford-law" rel="tag">benford law</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=open-data-2" rel="tag">open data</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=porto-alegre" rel="tag">porto alegre</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=statistics" rel="tag">statistics</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2676 post type-post status-publish format-standard hentry category-math tag-amusing-mathematics tag-arecibo tag-arecibo-message tag-communication tag-m13 tag-math tag-primes tag-space tag-universality" id="post-2676">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2676" title="Permanent Link to Universality, primes and space communication">Universality, primes and space communication</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2676" data-text="Universality, primes and space communication" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2676&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2676";
			reddit_title = "Universality, primes and space communication";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2676" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2676"></g:plusone></div></div><p>So, in mathematics we have the concept of <strong>universality</strong> in which we have laws like the <a href="http://en.wikipedia.org/wiki/Law_of_large_numbers" title="Wikipedia: Law of Large Numbers" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">law of large numbers</a>, the <a href="http://en.wikipedia.org/wiki/Benford's_law" title="Wikipedia: Benford's Law" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Benford&#8217;s law</a> (that I cited a lot in previous posts), the <a href="http://en.wikipedia.org/wiki/Central_limit_theorem" title="Wikipedia: Central Limit Theorem" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">central limit theorem</a> and many other laws that acts like laws of physics for the world of mathematics. These laws are not our inventions, I mean, the concepts are our inventions but the laws <em>per se</em> are universal, they are true no matter where you are on the earth or if you live far away on the universe. And that is why <a href="http://en.wikipedia.org/wiki/Frank_Drake" title="Wikipedia: Frank Drake" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Frank Drake</a>, one of the founders of SETI and also one of the pioneers in search for extraterrestrial intelligence came with this brilliant idea of using prime numbers (another example of universality) to communicate with distant worlds. The idea that Frank Drake had was the use of prime numbers to hide (not actually hide, but to make self evident, you&#8217;ll understand later) the dimension of a transmitted image in the image size itself.</p>
<p>So, imagine you are receiving a message that is a sequence of dashes and dots like &#8220;&#8212;.-.&#8212;.-.&#8212;&#8212;&#8211;&#8230;-.&#8212;&#8221; that repeats after a short pause and then again and again. Let&#8217;s suppose that this message has the size of 1679 symbols. So you begin analyzing the number, which is in fact a <a href="http://en.wikipedia.org/wiki/Semiprime" title="Wikipedia: Semiprime" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">semiprime number</a> (the same used in cryptography, a number that is a product of two prime numbers) that can be factored in prime factors as <strong>23</strong>*<strong>73</strong>=1679, and this is the only way to factor it in prime factors (actually all numbers have only a single set of prime factors that are unique, see <a href="http://en.wikipedia.org/wiki/Fundamental_theorem_of_arithmetic" title="Wikipedia: Fundamental theorem of arithmetic" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Fundamental theorem of arithmetic</a>). So, since there are only two prime factors, you will try to reshape the signal in a 2D image and this image can have the dimension of 23&#215;73 or 73&#215;23, when you arrange the image in one of these dimensions you&#8217;ll see that the image makes sense and the other will be just a random and strange sequence. By using prime numbers (or semiprimes) you just used the total image size to define the only two possible ways of arranging the image dimension.</p>
<div style="width: 298px" class="wp-caption aligncenter"><img alt="" src="http://www.naic.edu/public/images/aerial1.jpg" width="288" height="207" /><p class="wp-caption-text">Arecibo Radio Telescope</p></div>
<p>This idea was actually used in reality in 1974 by the <a href="http://en.wikipedia.org/wiki/Arecibo_Observatory" title="Wikipedia: Arecibo Observatory" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Arecibo radio telescope</a> when a <a href="http://en.wikipedia.org/wiki/Arecibo_message" title="Wikipedia: Arecibo Message" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">message was broadcast</a> in frequency modulation (FM) aiming the M13 globular star cluster at 25.000 light-years away:</p>
<div style="width: 550px" class="wp-caption aligncenter"><img alt="" src="http://3.bp.blogspot.com/-6ddwaCNloDw/UdsO42b92MI/AAAAAAAADWg/NqKHyfTKQdU/s1600/540px-Hercules_constellation_map.png" width="540" height="599" /><p class="wp-caption-text">M13 Globular Star Cluster</p></div>
<p>This message had the size (surprise) of 1679 binary digits and carried a lot of information of your world like: a graphical representation of an human, numbers from 1 to 10, a graphical representation of the Arecibo radio telescope, etc.</p>
<p>The message decoded as 23 rows and 73 columns is this:</p>
<div style="width: 740px" class="wp-caption aligncenter"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/c/cc/AreciboMessageShifted.svg" width="730" height="230" /><p class="wp-caption-text">Arecibo Message Shifted (Source: Wikipedia)</p></div>
<p>As you can see, the message looks a lot nonsensical, but when it is decoded as an image with 73 rows and 23 columns, it will show its real significance:</p>
<div style="width: 385px" class="wp-caption aligncenter"><img alt="" src="http://upload.wikimedia.org/wikipedia/commons/5/55/Arecibo_message.svg" width="375" height="1125" /><p class="wp-caption-text">Arecibo Message with the correct dimension (Source: Wikipedia)</p></div>
<p>Amazing, don&#8217;t you think ? I hope you liked it !</p>
<p><em>- Christian S. Perone</em></p>
<p>&nbsp;</p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>January 9th, 2014</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2676#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=amusing-mathematics" rel="tag">amusing mathematics</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=arecibo" rel="tag">arecibo</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=arecibo-message" rel="tag">arecibo message</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=communication" rel="tag">communication</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=m13" rel="tag">m13</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=math" rel="tag">Math</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=primes" rel="tag">primes</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=space" rel="tag">space</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=universality" rel="tag">universality</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2654 post type-post status-publish format-standard hentry category-bitcoin-2 category-programming-2 category-python tag-bitcoin tag-getaddr tag-network tag-nodes tag-p2p tag-protocoin tag-python tag-ubigraph tag-visualization" id="post-2654">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2654" title="Permanent Link to The beauty of Bitcoin P2P network">The beauty of Bitcoin P2P network</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2654" data-text="The beauty of Bitcoin P2P network" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2654&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2654";
			reddit_title = "The beauty of Bitcoin P2P network";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2654"></g:plusone></div></div><p>So, in the last days I just released <a href="http://protocoin.readthedocs.org/" title="Protocoin Documentation" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/protocoin.readthedocs.org');">Protocoin</a>, a framework in pure Python with a Bitcoin P2P network implementation. While I&#8217;m in process of development of the v.0.2 of the framework (with new and nice features like Bitcoin keys management &#8211; you can see some <a href="http://protocoin.readthedocs.org/en/latest/getstarted.html#bitcoin-keys-creating-exporting-importing-and-conversions" title="Protocoin Latest Documentation" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/protocoin.readthedocs.org');">preview here</a>) I would like to show a real-time visualization I&#8217;ve made with Protocoin and <a href="http://ubietylab.net/ubigraph" title="Ubigraph" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/ubietylab.net');">Ubigraph</a> of a node connecting to a seed node and then issuing GetAddr message for each node and connecting on the received nodes in a breadth-first search fashion. I&#8217;ll release the code used to create this visualization in the next release of Protocoin as soon as possible. I hope you enjoy it !</p>
<h3>Color legend</h3>
<p><strong><span style="color: #000000;">Yellow</span></strong> = Connecting<br />
<span style="color: #000000;"><strong>Green</strong></span> = Connected<br />
<span style="color: #000000;"><strong>Blue</strong></span> = Disconnected after connection</p>
<h3>Video</h3>
<p><iframe src="http://www.youtube.com/embed/bIOLJUKOJkw?rel=0" height="360" width="640" allowfullscreen="" frameborder="0"></iframe></p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>December 13th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2654#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=bitcoin" rel="tag">bitcoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=getaddr" rel="tag">getaddr</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=network" rel="tag">network</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=nodes" rel="tag">nodes</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=p2p" rel="tag">p2p</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=protocoin" rel="tag">protocoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=ubigraph" rel="tag">ubigraph</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=visualization" rel="tag">visualization</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2649 post type-post status-publish format-standard hentry category-programming-2 category-python tag-bitcoin tag-protocoin tag-python" id="post-2649">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2649" title="Permanent Link to Protocoin &#8211; a pure Python Bitcoin protocol implementation">Protocoin &#8211; a pure Python Bitcoin protocol implementation</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2649" data-text="Protocoin &#8211; a pure Python Bitcoin protocol implementation" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2649&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2649";
			reddit_title = "Protocoin &#8211; a pure Python Bitcoin protocol implementation";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2649" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2649"></g:plusone></div></div><p>Just release the first version of Protocoin, a pure Python Bitcoin protocol implementation, for more information see the <a href="http://protocoin.readthedocs.org/" title="Protocoin" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/protocoin.readthedocs.org');">documentation</a> or the <a href="https://github.com/perone/protocoin" title="Github - Protocoin" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/github.com');">project</a> in Github.</p>
<p>If you want to donate for the project, my Bitcoin address is: 1Q6JZEE5turJXaTn1fburWkqjhC4oMJ4yV.</p>
<p>I hope you like it !</p>
<p>- Christian S. Perone</p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>November 22nd, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2649#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=bitcoin" rel="tag">bitcoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=protocoin" rel="tag">protocoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2640 post type-post status-publish format-standard hentry category-programming-2 category-python tag-django tag-django-gis-brasil tag-gis tag-heatmap tag-plotting tag-porto-alegre tag-python tag-rs" id="post-2640">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2640" title="Permanent Link to Mapa de calor dos dados de acidentes de transito do DataPoa">Mapa de calor dos dados de acidentes de transito do DataPoa</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2640" data-text="Mapa de calor dos dados de acidentes de transito do DataPoa" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2640&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2640";
			reddit_title = "Mapa de calor dos dados de acidentes de transito do DataPoa";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2640" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2640"></g:plusone></div></div><p>Esta semana será disponibilzada a nova versão do <a href="http://django-gis-brasil.readthedocs.org/" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/django-gis-brasil.readthedocs.org');">Django GIS Brasil</a>, segue abaixo um exemplo de mapa criado usando os novos dados do <a href="http://django-gis-brasil.readthedocs.org/" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/django-gis-brasil.readthedocs.org');">Django GIS Brasil</a> importados do <a href="http://datapoa.com.br/" title="DataPoa" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/datapoa.com.br');">DataPoa</a>.</p>
<p>O exemplo abaixo é um mapa de calor utilizando os dados de acidentes de trânsito em Porto Alegre /RS durante os anos de 2000 até 2012. Os eixos (ruas, avenidas, etc.) também estarão presentes no Django GIS Brasil.</p>
<p>&nbsp;</p>
<div id="attachment_2643" style="width: 310px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/heatmap1.png" rel="lightbox[2640]"><img class="size-medium wp-image-2643 " alt="Heatmap POA" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/heatmap1-300x203.png" width="300" height="203" /></a><p class="wp-caption-text">Mapa de Acidentes de Trânsito em PoA/RS. Clique para ampliar.</p></div>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>November 16th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2640#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=django" rel="tag">django</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=django-gis-brasil" rel="tag">django-gis-brasil</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=gis" rel="tag">gis</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=heatmap" rel="tag">heatmap</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=plotting" rel="tag">plotting</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=porto-alegre" rel="tag">porto alegre</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=rs" rel="tag">rs</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2630 post type-post status-publish format-standard hentry category-uncategorized" id="post-2630">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2630" title="Permanent Link to Book Suggestion: Codex Seraphinianus">Book Suggestion: Codex Seraphinianus</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2630" data-text="Book Suggestion: Codex Seraphinianus" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2630&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2630";
			reddit_title = "Book Suggestion: Codex Seraphinianus";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2630" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2630"></g:plusone></div></div><p>Today the <a href="http://en.wikipedia.org/wiki/Codex_Seraphinianus" title="Wikipedia: Codex Seraphinianus" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Codex Seraphinianus</a> just arrived (after months waiting in the pre-order state). I bought <a href="http://www.amazon.com/gp/product/0847842134/ref=oh_details_o00_s00_i00?ie=UTF8&amp;psc=1" title="Amazon: Codex Seraphinianus" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.amazon.com');">it from Amazon</a> and I really recommend this edition for those who are interested because this is a very large edition with high quality textured paper and beautiful printing style. The book has also in the end a pocket with a small brochure called &#8220;Decodex&#8221; with a letter from Luigi Serafini.</p>
<p>The book is a very impressive creation by Luigi Serafini (or by the cat) dating from 1981 and presenting an impossible world that will cause to you the most strange feelings. See the photo of the cover and some pages below.</p>
<p><em>- Christian S. Perone</em></p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/codex2.jpg" rel="lightbox[2630]"><img class="alignright size-medium wp-image-2634" alt="Codex Page" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/codex2-221x300.jpg" width="221" height="300" /></a></p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/codex.jpg" rel="lightbox[2630]"><img class="size-medium wp-image-2631 alignleft" alt="Codex Title" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/codex-225x300.jpg" width="225" height="300" /></a></p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>November 5th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2630#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2497 post type-post status-publish format-standard hentry category-machine-learning category-programming-2 category-python tag-cosine tag-cosine-similarity tag-machine-learning-2 tag-python tag-sklearn tag-tf-idf tag-vector-space-model tag-vsm" id="post-2497">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2497" title="Permanent Link to Machine Learning :: Cosine Similarity for Vector Space Models (Part III)">Machine Learning :: Cosine Similarity for Vector Space Models (Part III)</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2497" data-text="Machine Learning :: Cosine Similarity for Vector Space Models (Part III)" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2497&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2497";
			reddit_title = "Machine Learning :: Cosine Similarity for Vector Space Models (Part III)";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2497" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2497"></g:plusone></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">var dzone_url = "http://pyevolve.sourceforge.net/wordpress/?p=2497";</script>
		<script type="text/javascript">var dzone_title = "Machine Learning :: Cosine Similarity for Vector Space Models (Part III)";</script>
		<script type="text/javascript">
			<!-- 
			var dzone_style = "1";
			//-->
		</script><script language="javascript" src="http://widgets.dzone.com/links/widgets/zoneit.js"></script></div></div><p>* It has been a long time since I wrote the TF-IDF tutorial (<a href="http://pyevolve.sourceforge.net/wordpress/?p=1589" title="Machine Learning :: Text feature extraction (tf-idf) – Part I">Part I</a> and <a href="http://pyevolve.sourceforge.net/wordpress/?p=1747" title="Machine Learning :: Text feature extraction (tf-idf) – Part II">Part II</a>) and as I promissed, here is the continuation of the tutorial. Unfortunately I had no time to fix the previous tutorials for the newer versions of the <a href="http://scikit-learn.org/stable/" title="scikit-learn" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-learn.org');">scikit-learn (sklearn)</a> package nor to answer all the questions, but I hope to do that in a close future.</p>
<p>So, on the previous tutorials we learned how a document can be modeled in the Vector Space, how the TF-IDF transformation works and how the TF-IDF is calculated, now what we are going to learn is how to use a well-known similarity measure (Cosine Similarity) to calculate the similarity between different documents.</p>
<h2>The Dot Product</h2>
<p>Let&#8217;s begin with the definition of the dot product for two vectors: <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Ba%7D%20%3D%20%28a_1%2C%20a_2%2C%20a_3%2C%20%5Cldots%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{a} = (a_1, a_2, a_3, \ldots)' title='\vec{a} = (a_1, a_2, a_3, \ldots)' class='latex' /> and <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D%20%3D%20%28b_1%2C%20b_2%2C%20b_3%2C%20%5Cldots%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b} = (b_1, b_2, b_3, \ldots)' title='\vec{b} = (b_1, b_2, b_3, \ldots)' class='latex' />, where <img src='http://s.wordpress.com/latex.php?latex=a_n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='a_n' title='a_n' class='latex' /> and <img src='http://s.wordpress.com/latex.php?latex=b_n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='b_n' title='b_n' class='latex' /> are the components of the vector (features of the document, or TF-IDF values for each word of the document in our example) and the <img src='http://s.wordpress.com/latex.php?latex=%5Cmathit%7Bn%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\mathit{n}' title='\mathit{n}' class='latex' /> is the dimension of the vectors:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5Csum_%7Bi%3D1%7D%5En%20a_ib_i%20%3D%20a_1b_1%20%2B%20a_2b_2%20%2B%20%5Ccdots%20%2B%20a_nb_n%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='  \vec{a} \cdot \vec{b} = \sum_{i=1}^n a_ib_i = a_1b_1 + a_2b_2 + \cdots + a_nb_n   ' title='  \vec{a} \cdot \vec{b} = \sum_{i=1}^n a_ib_i = a_1b_1 + a_2b_2 + \cdots + a_nb_n   ' class='latex' />
<p>As you can see, the definition of the dot product is a simple multiplication of each component from the both vectors added together. See an example of a dot product for two vectors with 2 dimensions each (2D):</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%5Cvec%7Ba%7D%20%3D%20%280%2C%203%29%20%5C%5C%20%20%20%5Cvec%7Bb%7D%20%3D%20%284%2C%200%29%20%5C%5C%20%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%200%2A4%20%2B%203%2A0%20%3D%200%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='  \vec{a} = (0, 3) \\   \vec{b} = (4, 0) \\   \vec{a} \cdot \vec{b} = 0*4 + 3*0 = 0  ' title='  \vec{a} = (0, 3) \\   \vec{b} = (4, 0) \\   \vec{a} \cdot \vec{b} = 0*4 + 3*0 = 0  ' class='latex' />
<p>The first thing you probably noticed is that the result of a dot product between two vectors isn&#8217;t another vector but a single value, a scalar.</p>
<p>This is all very simple and easy to understand, but what is a dot product ? What is the intuitive idea behind it ? What does it mean to have a dot product of zero ? To understand it, we need to understand what is the geometric definition of the dot product:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%5Ccos%7B%5Ctheta%7D%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='  \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta}  ' title='  \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta}  ' class='latex' />
<p>Rearranging the equation to understand it better using the commutative property, we have:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5C%7C%5Cvec%7Bb%7D%5C%7C%5C%7C%5Cvec%7Ba%7D%5C%7C%5Ccos%7B%5Ctheta%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \vec{a} \cdot \vec{b} = \|\vec{b}\|\|\vec{a}\|\cos{\theta}   ' title='   \vec{a} \cdot \vec{b} = \|\vec{b}\|\|\vec{a}\|\cos{\theta}   ' class='latex' />
<p>So, what is the term <img src='http://s.wordpress.com/latex.php?latex=%5Cdisplaystyle%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5Ccos%7B%5Ctheta%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\displaystyle \|\vec{a}\|\cos{\theta}' title='\displaystyle \|\vec{a}\|\cos{\theta}' class='latex' /> ? This term is the projection of the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Ba%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{a}' title='\vec{a}' class='latex' /> into the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b}' title='\vec{b}' class='latex' /> as shown on the image below:</p>
<div id="attachment_2560" style="width: 310px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/Dot_Product.png" rel="lightbox[2497]"><img class="size-full wp-image-2560" title="Dot_Product" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/Dot_Product.png" alt="" width="300" height="240" /></a><p class="wp-caption-text">The projection of the vector A into the vector B. By Wikipedia.</p></div>
<p>Now, what happens when the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Ba%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{a}' title='\vec{a}' class='latex' /> is orthogonal (with an angle of 90 degrees) to the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b}' title='\vec{b}' class='latex' /> like on the image below ?</p>
<div id="attachment_2580" style="width: 249px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vectors1.gif" rel="lightbox[2497]"><img class="size-full wp-image-2580" title="vectors1" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vectors1.gif" alt="" width="239" height="238" /></a><p class="wp-caption-text">Two orthogonal vectors (with 90 degrees angle).</p></div>
<p>There will be no adjacent side on the triangle, it will be equivalent to zero, the term <img src='http://s.wordpress.com/latex.php?latex=%5Cdisplaystyle%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5Ccos%7B%5Ctheta%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\displaystyle \|\vec{a}\|\cos{\theta}' title='\displaystyle \|\vec{a}\|\cos{\theta}' class='latex' /> will be zero and the resulting multiplication with the magnitude of the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b}' title='\vec{b}' class='latex' /> will also be zero. Now you know that, when the dot product between two different vectors is zero, they are orthogonal to each other (they have an angle of 90 degrees), this is a very neat way to check the orthogonality of different vectors. It is also important to note that we are using 2D examples, but the most amazing fact about it is that we can also calculate angles and similarity between vectors in higher dimensional spaces, and that is why math let us see far than the obvious even when we can&#8217;t visualize or imagine what is the angle between two vectors with twelve dimensions for instance.</p>
<h2>The Cosine Similarity</h2>
<p>The cosine similarity between two vectors (or two documents on the Vector Space) is a measure that calculates the cosine of the angle between them. This metric is a measurement of orientation and not magnitude, it can be seen as a comparison between documents on a normalized space because we&#8217;re not taking into the consideration only the magnitude of each word count (tf-idf) of each document, but the angle between the documents. What we have to do to build the cosine similarity equation is to solve the equation of the dot product for the <img src='http://s.wordpress.com/latex.php?latex=%5Ccos%7B%5Ctheta%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\cos{\theta}' title='\cos{\theta}' class='latex' />:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Cdisplaystyle%20%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%5Ccos%7B%5Ctheta%7D%20%5C%5C%20%20%20%5Ccos%7B%5Ctheta%7D%20%3D%20%5Cfrac%7B%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%7D%7B%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \displaystyle   \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta} \\   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' title='   \displaystyle   \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta} \\   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' class='latex' />
<p>And that is it, this is the cosine similarity formula. Cosine Similarity will generate a metric that says how related are two documents by looking at the angle instead of magnitude, like in the examples below:</p>
<div id="attachment_2599" style="width: 900px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/cosinesimilarityfq1.png" rel="lightbox[2497]"><img class="size-full wp-image-2599" title="cosinesimilarityfq1" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/cosinesimilarityfq1.png" alt="" width="890" height="250" /></a><p class="wp-caption-text">The Cosine Similarity values for different documents, 1 (same direction), 0 (90 deg.), -1 (opposite directions).</p></div>
<p>Note that even if we had a vector pointing to a point far from another vector, they still could have an small angle and that is the central point on the use of Cosine Similarity, the measurement tends to ignore the higher term count on documents. Suppose we have a document with the word &#8220;sky&#8221; appearing 200 times and another document with the word &#8220;sky&#8221; appearing 50, the Euclidean distance between them will be higher but the angle will still be small because they are pointing to the same direction, which is what matters when we are comparing documents.</p>
<p>Now that we have a Vector Space Model of documents (like on the image below) modeled as vectors (with TF-IDF counts) and also have a formula to calculate the similarity between different documents in this space, let&#8217;s see now how we do it in practice using <a href="http://scikit-learn.org" title="Scikit-Learn" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-learn.org');">scikit-learn (sklearn)</a>.</p>
<div id="attachment_2582" style="width: 514px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vector_space.png" rel="lightbox[2497]"><img class=" wp-image-2582 " title="vector_space" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vector_space.png" alt="" width="504" height="378" /></a><p class="wp-caption-text">Vector Space Model</p></div>
<h2>Practice Using Scikit-learn (sklearn)</h2>
<p>* In this tutorial I&#8217;m using the Python 2.7.5 and Scikit-learn 0.14.1.</p>
<p>The first thing we need to do is to define our set of example documents:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="python codecolorer">documents = <span class="br0">&#40;</span><br />
<span class="st0">&quot;The sky is blue&quot;</span>,<br />
<span class="st0">&quot;The sun is bright&quot;</span>,<br />
<span class="st0">&quot;The sun in the sky is bright&quot;</span>,<br />
<span class="st0">&quot;We can see the shining sun, the bright sun&quot;</span><br />
<span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>And then we instantiate the Sklearn TF-IDF Vectorizer and transform our documents into the TF-IDF matrix:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br /></div></td><td><div class="python codecolorer"><span class="kw1">from</span> sklearn.<span class="me1">feature_extraction</span>.<span class="me1">text</span> <span class="kw1">import</span> TfidfVectorizer<br />
tfidf_vectorizer = TfidfVectorizer<span class="br0">&#40;</span><span class="br0">&#41;</span><br />
tfidf_matrix = tfidf_vectorizer.<span class="me1">fit_transform</span><span class="br0">&#40;</span>documents<span class="br0">&#41;</span><br />
<span class="kw1">print</span> tfidf_matrix.<span class="me1">shape</span><br />
<span class="br0">&#40;</span><span class="nu0">4</span>, <span class="nu0">11</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Now we have the TF-IDF matrix (<strong>tfidf_matrix</strong>) for each document (the number of rows of the matrix) with 11 tf-idf terms (the number of columns from the matrix), we can calculate the Cosine Similarity between the first document (&#8220;The sky is blue&#8221;) with each of the other documents of the set:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br /></div></td><td><div class="python codecolorer"><span class="kw1">from</span> sklearn.<span class="me1">metrics</span>.<span class="me1">pairwise</span> <span class="kw1">import</span> cosine_similarity<br />
cosine_similarity<span class="br0">&#40;</span>tfidf_matrix<span class="br0">&#91;</span><span class="nu0">0</span>:<span class="nu0">1</span><span class="br0">&#93;</span>, tfidf_matrix<span class="br0">&#41;</span><br />
<span class="kw3">array</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="br0">&#91;</span> <span class="nu0">1</span>.        ,  <span class="nu0">0.36651513</span>,  <span class="nu0">0.52305744</span>,  <span class="nu0">0.13448867</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>The <strong>tfidf_matrix[0:1] </strong>is the Scipy operation to get the first row of the sparse matrix and the resulting array is the Cosine Similarity between the first document with all documents in the set. Note that the first value of the array is 1.0 because it is the Cosine Similarity between the first document with itself. Also note that due to the presence of similar words on the third document (&#8220;The sun in the sky is bright&#8221;), it achieved a better score.</p>
<p>If you want, you can also solve the Cosine Similarity for the angle between vectors:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Ccos%7B%5Ctheta%7D%20%3D%20%5Cfrac%7B%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%7D%7B%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' title='   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' class='latex' />
<p>We only need to isolate the angle (<img src='http://s.wordpress.com/latex.php?latex=%5Ctheta&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\theta' title='\theta' class='latex' />) and move the <img src='http://s.wordpress.com/latex.php?latex=%5Ccos&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\cos' title='\cos' class='latex' /> to the right hand of the equation:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Ctheta%20%3D%20%5Carccos%7B%5Cfrac%7B%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%7D%7B%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%7D%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \theta = \arccos{\frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}}   ' title='   \theta = \arccos{\frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}}   ' class='latex' />
<p>The <img src='http://s.wordpress.com/latex.php?latex=%5Carccos&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\arccos' title='\arccos' class='latex' /> is the same as the inverse of the cosine (<img src='http://s.wordpress.com/latex.php?latex=%5Ccos%5E-1&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\cos^-1' title='\cos^-1' class='latex' />).</p>
<div> Lets for instance, check the angle between the first and third documents:</div>
<div></div>
<div>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="python codecolorer"><span class="kw1">import</span> <span class="kw3">math</span><br />
<span class="co1"># This was already calculated on the previous step, so we just use the value</span><br />
cos_sim = <span class="nu0">0.52305744</span><br />
angle_in_radians = <span class="kw3">math</span>.<span class="me1">acos</span><span class="br0">&#40;</span>cos_sim<span class="br0">&#41;</span><br />
<span class="kw1">print</span> <span class="kw3">math</span>.<span class="me1">degrees</span><span class="br0">&#40;</span>angle_in_radians<span class="br0">&#41;</span><br />
<span class="nu0">58.462437107432784</span></div></td></tr></tbody></table></div>
<div> And that angle of ~58.5 is the angle between the first and the third document of our document set.</div>
</div>
<div></div>
<div>That is it, I hope you liked this third tutorial !</div>
<div></div>
<h2>Related Material</h2>
<p><a href="https://www.khanacademy.org/math/linear-algebra/vectors_and_spaces/dot_cross_products/v/dot-and-cross-product-comparison-intuition" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.khanacademy.org');">A video about Dot Product on The Khan Academy</a></p>
<p><a href="http://en.wikipedia.org/wiki/Dot_product" title="Wikipedia :: Dot Product" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Wikipedia: Dot Product</a></p>
<p><a href="http://en.wikipedia.org/wiki/Cosine_similarity" title="Wikipedia: Cosine Similarity" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Wikipedia: Cosine Similarity</a></p>
<p><a href="http://scikit-learn.org" title="Scikit-Learn Site" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-learn.org');">Scikit-learn (sklearn)</a> &#8211; The <em>de facto</em> Machine Learning package for Python</p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>September 12th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2497#comments">5 Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=cosine" rel="tag">cosine</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=cosine-similarity" rel="tag">cosine similarity</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=machine-learning-2" rel="tag">machine learning</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=sklearn" rel="tag">sklearn</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=tf-idf" rel="tag">tf-idf</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=vector-space-model" rel="tag">vector space model</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=vsm" rel="tag">vsm</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2433 post type-post status-publish format-standard hentry category-raspberry-pi tag-ads-b tag-adsb tag-radio tag-raspberry-pi-2 tag-rt820 tag-rtl2832u tag-sdr tag-uhf" id="post-2433">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2433" title="Permanent Link to Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)">Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2433" data-text="Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2433&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2433";
			reddit_title = "Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2433" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2433"></g:plusone></div></div><p>* This post is in <strong>Portuguese</strong>.</p>
<h3>SDR (<em>Software-Defined Radio</em>)</h3>
<p><a href="http://en.wikipedia.org/wiki/Software-defined_radio" title="Wikipedia :: SDR" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">SDR</a> é uma área de radiocomunicação baseada em uma ideia muito simples: implementar em software o que antes era implementado em hardware (ex: mod/demod, filtros, etc). O fato do SDR estar se tornando uma tendência hoje se dá principalmente pelo baixo custo de alguns receptores como por exemplo o RTL2832U (mais sobre ele depois) que hoje você pode encontrar facilmente por uns U$ 20.00, preço este muito barato se você levar em consideração o intervalo de cobertura das frequências de 22Mhz até 2200Mhz (dependendo do tuner). Neste intervalo dá pra se ter uma ampla cobertura de sinais de rádio AM/FM, rádio da polícia, TV, GSM, GPS, ADSB (este post é sobre o ADSB), comunicação marítma, LTE (ainda em definição no Brasil) e outras aplicações que estão inseridas neste intervalo de frequência.</p>
<p>Um sistema SDR é composto geralmente por: um receptor ligado ao computador ou qualquer outro dispositivo embarcado com um poder de processamento razoável (por meio de placa de captura de áudio, USB, etc) e um software que irá fazer o tratamento do sinal recebido. Neste <em>post</em> eu vou utilizar o Raspberry Pi como dispositivo embarcado para capturar e demodular os dados enviados pelos transponders presentes em aeronaves comerciais e domésticas.</p>
<h3>ADS-B (<em>Automatic dependent surveillance-broadcast</em>)</h3>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/02/adsb_op1.png" rel="lightbox[2433]"><img class="aligncenter size-full wp-image-2452" title="ADS-B" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/02/adsb_op1.png" alt="" width="640" height="361" /></a></p>
<p>Grande parte dos aviões modernos estão sendo equipados com <a href="http://en.wikipedia.org/wiki/Automatic_dependent_surveillance-broadcast" title="Wikipedia :: ADS-B" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">um dispositivo</a> que tem o objetivo de substituir os radares que existem hoje. Até o ano de 2020 todos os aviões que entrarem no espaço aéreo estadunidense deverão ter como item obrigatório um dispositivo compatível com ADS-B. O dispositivo ADS-B faz com que as aeronaves sejam visíveis aos radares em terra e também para outros aviões através do broadcast de mensagens com sua altura, velocidade, posição e muitas outras informações relevantes. A transmissão destas mensagens se dá através da frequência 1090Mhz, uma frequência dentro do intervalo de captura de maioria dos receptores SDR usando o chipset RTL2832U. A ideia deste post é usar o Raspberry Pi para receber este broadcast enviado diretamente pelo transponder dos aviões, demodular os frames e então utilizar um software para decodificar/interpretar os frames e plotar em um mapa a posição atual dos aviões em Porto Alegre / RS.</p>
<h3>Realtek RTL2832U</h3>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/02/dongle_rpi.png" rel="lightbox[2433]"><img src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/02/dongle_rpi.png" alt="" title="dongle_rpi" width="367" height="490" class="aligncenter size-full wp-image-2474" /></a><br />
Alguns receptores de TV digital USB utilizam o chipset da Realtek RTL2832U, como este meu acima. Em 2012 <a href="http://thread.gmane.org/gmane.linux.drivers.video-input-infrastructure/44461/focus=44461" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/thread.gmane.org');">foi descoberto</a> que este chipset permitia o envio de dados brutos do receptor para o host, permitindo assim seu uso para SDR. Existem alguns projetos com drivers para se comunicar com o dispositivo e receber estes dados (Linux e Windows), entre os quais o mais utilizado em Linux é o projeto <a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr" title="Osmocom :: rtl-sdr" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/sdr.osmocom.org');">rtl-sdr</a>, que agrega além do driver alguns utilitários de linha de comando como por exemplo o &#8220;rtl_adsb&#8221; que utilizarei no Raspberry Pi para demodular o sinal ADS-B enviado pelas aeronaves; outro componente importante nos receptores USB é o tuner, que é responsável pelo ajuste da frequencia do rádio, no caso do meu dongle USB ele é o R820T que tem uma ótima sensibilidade mas tem um intervalo menor de cobertura do espectro quando comparado ao E4000 (da Elonics), veja a <a href="http://sdr.osmocom.org/trac/wiki/rtl-sdr" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/sdr.osmocom.org');">tabela no site</a> do projeto para saber o intervalo de cobertura de cada tuner e de outros hardwares suportados pelo rtl-sdr.</p>
<h3>Compilando o rtl-sdr no Raspberry Pi</h3>
<p>Estou utilizando o Raspberry Pi como host do dongle USB porque ele é um aparelho barato e o consumo de energia é muito baixo, ou seja, você pode deixá-lo ligado capturando o sinal ADS-B por quanto tempo quiser sem se preocupar com um gasto maior que 5 watts no pior caso.</p>
<p><strong>Baixando repositório</strong></p>
<div class="codecolorer-container bash default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br /></div></td><td><div class="bash codecolorer"><span class="kw2">git</span> clone <span class="kw2">git</span>:<span class="sy0">//</span>git.osmocom.org<span class="sy0">/</span>rtl-sdr.git</div></td></tr></tbody></table></div>
<p><strong>Dependências</strong>: libusb-1.0-0-dev, cmake, compilador (gcc)</p>
<div> <strong>Criando arquivos para compilação e compilando</strong>:</div>
<div class="codecolorer-container bash default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br /></div></td><td><div class="bash codecolorer"><span class="kw3">cd</span> rtl-sdr<span class="sy0">/</span><br />
<span class="kw2">mkdir</span> build<br />
<span class="kw3">cd</span> build<br />
cmake ..<span class="sy0">/</span><br />
<span class="kw2">make</span><br />
<span class="kw2">sudo</span> <span class="kw2">make</span> <span class="kw2">install</span><br />
<span class="kw2">sudo</span> ldconfig</div></td></tr></tbody></table></div>
<div>E pronto, já estamos com o rtl-sdr instalado (driver a aplicativos extras).</div>
<h3>Recebendo sinal ADS-B</h3>
<p>Antes de mais nada, um pequeno teste para verificar se o rtl-sdr está encontrando corretamente o dongle USB:</p>
<div class="codecolorer-container bash default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br /></div></td><td><div class="bash codecolorer">pi<span class="sy0">@</span>raspberrypi ~ $ rtl_test <span class="re5">-t</span><br />
Found <span class="nu0">1</span> device<span class="br0">&#40;</span>s<span class="br0">&#41;</span>:<br />
&nbsp;<span class="nu0">0</span>: ezcap USB <span class="nu0">2.0</span> DVB-T<span class="sy0">/</span>DAB<span class="sy0">/</span>FM dongle<span class="sy0">&lt;/</span>pre<span class="sy0">&gt;</span><br />
<span class="sy0">&lt;</span>pre<span class="sy0">&gt;</span>Using device <span class="nu0">0</span>: ezcap USB <span class="nu0">2.0</span> DVB-T<span class="sy0">/</span>DAB<span class="sy0">/</span>FM dongle<br />
Found Rafael Micro R820T tuner<br />
Supported gain values <span class="br0">&#40;</span><span class="nu0">29</span><span class="br0">&#41;</span>: <span class="nu0">0.0</span> <span class="nu0">0.9</span> <span class="nu0">1.4</span> <span class="nu0">2.7</span> <span class="nu0">3.7</span> <span class="nu0">7.7</span><br />
<span class="nu0">8.7</span> <span class="nu0">12.5</span> <span class="nu0">14.4</span> <span class="nu0">15.7</span> <span class="nu0">16.6</span> <span class="nu0">19.7</span> <span class="nu0">20.7</span> <span class="nu0">22.9</span> <span class="nu0">25.4</span> <span class="nu0">28.0</span><br />
<span class="nu0">29.7</span> <span class="nu0">32.8</span> <span class="nu0">33.8</span> <span class="nu0">36.4</span> <span class="nu0">37.2</span> <span class="nu0">38.6</span> <span class="nu0">40.2</span> <span class="nu0">42.1</span> <span class="nu0">43.4</span> <span class="nu0">43.9</span><br />
<span class="nu0">44.5</span> <span class="nu0">48.0</span> <span class="nu0">49.6</span><br />
No E4000 tuner found, aborting.<br />
pi<span class="sy0">@</span>raspberrypi ~ $</div></td></tr></tbody></table></div>
<p>Note que o meu dongle é um RTL2832U com o tuner R820T, ao executar o &#8220;rtl_test -t&#8221; é também exibida uma lista com os ganhos suportados pelo dongle.</p>
<p>Como a frequência utilizada pelo ADS-B é de <strong>1090MHz</strong>, uma antena boa seria uma <strong>discone </strong>ou uma <strong>dipolo </strong>confeccionada com as dimensões corretas para esta frequência. Como ainda não tenho os plugs adequados tive que utiliar a antena que veio junto com o dongle, que mesmo sendo de baixa qualidade e não relacionada com a frequência do ADS-B ainda consegue receber os sinais (<em>de fato, mesmo desconectando a antena eu consigo receber os frames das aeronaves</em>), mesmo com o dongle em um ambiente fechado (minha casa fica há uns 6-10km do aeroporto de Porto Alegre / RS).</p>
<p>Para receber e demodular os frames eu utilizei o utilitário &#8220;rtl_adsb&#8221; (ele vem junto com o pacote do rtl-sdr). Ao ser executado, ele ajustará o tuner para a frequência do transponder das aeronaves em 1090MHz e logo após fará a demodulação dos frames para o formato hexadecimal:</p>
<div class="codecolorer-container bash default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br /></div></td><td><div class="bash codecolorer">pi<span class="sy0">@</span>raspberrypi ~ $ rtl_adsb<br />
Found <span class="nu0">1</span> device<span class="br0">&#40;</span>s<span class="br0">&#41;</span>:<br />
&nbsp; <span class="nu0">0</span>: &nbsp;Realtek, RTL2838UHIDIR, SN: 00000013<br />
<br />
Using device <span class="nu0">0</span>: ezcap USB <span class="nu0">2.0</span> DVB-T<span class="sy0">/</span>DAB<span class="sy0">/</span>FM dongle<br />
Found Rafael Micro R820T tuner<br />
Tuner gain <span class="kw1">set</span> to automatic.<br />
Tuned to <span class="nu0">1090000000</span> Hz.<br />
Sampling at <span class="nu0">2000000</span> Hz.<br />
Exact sample rate is: <span class="nu0">2000000.052982</span> Hz<br />
<span class="sy0">*</span>825566cf477b3124c64b17e74b15;<br />
<span class="sy0">*</span>e6c7d7fdb34c855db6972204ea14;<br />
<span class="sy0">*</span>d1e27bb95df2454ca547c87718a2;<br />
<span class="sy0">*</span>906bc5a59b5c5053226fb94f3460;<br />
<span class="sy0">*</span>a6f51dc76353efeeabfbfe6946cb;<br />
<span class="sy0">*</span>e78ed3aaf547fcd87e8e4f41cea3;<br />
<span class="sy0">*</span>d26a5ecacdb7051f2ebe18efc613;</div></td></tr></tbody></table></div>
<p>Cada frame inicia sempre com um asterisco na frente e cada um destes frames foi enviado diretamente por um transponder de um avião ou é uma requisição terra->ar de alguma base em terra. O que precisamos agora é fazer a decodificação destes frames para poder extrair o tipo do frame, latitude, longitude, callsign, origem e destino do avião, etc. Não existem hoje muitas alternativas open-source para fazer o plot dos aviões em um mapa, o melhor que eu encontrei foi o <a href="http://www.virtualradarserver.co.uk/Screenshots.aspx" title="Virtual Radar Server :: Screenshots" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.virtualradarserver.co.uk');">Virtual Radar Server</a> que é open-source e roda também em Linux, além de ter uma interface web bem amigável e plotar as aeronaves usando o Google Maps.<br />
Para fazer com que o Virtual Radar Server conecte no Raspberry Pi, primeiramente precisamos fazer o streaming via TCP dos frames que o &#8220;rtl_adsb&#8221; está recebendo no Raspberry Pi, o que dá para resolver utilizando o &#8220;netcat&#8221; mesmo:</p>
<div class="codecolorer-container bash default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br /></div></td><td><div class="bash codecolorer">rtl_adsb <span class="sy0">|</span> netcat <span class="re5">-lp</span> <span class="nu0">8080</span></div></td></tr></tbody></table></div>
<p>Neste caso ele irá escutar na porta 8080 e enviar os frames ADS-B para o cliente que conectar nele. Logo após é só especificar o IP/porta do Raspberry Pi no Virtual Radar Server e se tudo der certo e você conseguir receber algum frame de algum transponder, você verá uma tela parecida com esta mostrada abaixo com o <strong>rastreamento dos aviões em tempo real</strong>:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/02/three.png" rel="lightbox[2433]"><img src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/02/three.png" alt="" title="three" width="950" height="458" class="aligncenter size-full wp-image-2479" /></a></p>
<p>No screenshot você pode ver um avião da GOL (GOL1446) se dirigindo ao aeroporto (logo a frente onde diz São João) a uma velocidade de 250km/h e descendo a uma velocidade de 195 metros por minuto. Geralmente os aviões enviam o broadcast da mensagem com a posição a cada segundo, tudo vai depender da sua antena, receptor e condições de difusão. Com a minha antena pequena e no meio de prédios eu consegui capturar o broadcast de aviõe em até uns 80km de distância, espero melhorar isto com uma outra antena, só preciso achar o material agora =)</p>
<p><em>- Christian S. Perone</em></p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>February 5th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2433#comments">16 Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=ads-b" rel="tag">ads-b</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=adsb" rel="tag">adsb</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=radio" rel="tag">radio</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=raspberry-pi-2" rel="tag">raspberry pi</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=rt820" rel="tag">rt820</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=rtl2832u" rel="tag">rtl2832u</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=sdr" rel="tag">sdr</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=uhf" rel="tag">uhf</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2383 post type-post status-publish format-standard hentry category-python category-raspberry-pi tag-arduino tag-gpio tag-laser tag-ldr tag-raspberry-pi-2 tag-rpi tag-sigmoid tag-voltage-divider" id="post-2383">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2383" title="Permanent Link to Raspberry Pi &amp; Arduino: a laser pointer communication and a LDR voltage sigmoid">Raspberry Pi &#038; Arduino: a laser pointer communication and a LDR voltage sigmoid</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2383" data-text="Raspberry Pi &#038; Arduino: a laser pointer communication and a LDR voltage sigmoid" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2383&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2383";
			reddit_title = "Raspberry Pi &#038; Arduino: a laser pointer communication and a LDR voltage sigmoid";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2383" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2383"></g:plusone></div><div class="socialize-in-button socialize-in-button-right"><su:badge layout="5" location="http://pyevolve.sourceforge.net/wordpress/?p=2383"></su:badge></div></div><p>So I finally got some more time to play with my Raspberry Pi GPIOs and Arduino, this post will explain how to use a <a href="http://en.wikipedia.org/wiki/Photoresistor" title="Wikipedia :: LDR" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">LDR</a> (<em>Photoresistor, Light Dependent Resistor</em>) on the Raspberry Pi to detect a laser light emitted by an Arduino.</p>
<p> <a href="http://pyevolve.sourceforge.net/wordpress/?p=2383#more-2383" class="more-link">Read more&#8230;</a></p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>August 19th, 2012</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2383#comments">9 Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=arduino" rel="tag">arduino</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=gpio" rel="tag">gpio</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=laser" rel="tag">laser</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=ldr" rel="tag">ldr</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=raspberry-pi-2" rel="tag">raspberry pi</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=rpi" rel="tag">rpi</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=sigmoid" rel="tag">sigmoid</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=voltage-divider" rel="tag">voltage divider</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

			
			<div class="page-navigation">
				<div class="left"></div>
				<div class="right"><a href="http://pyevolve.sourceforge.net/wordpress/?paged=2" >Older entries</a></div>
				<div class="clear"></div>
			</div>

					</div>
		<!-- End: Content -->

		<!-- Start: Widget area -->
		<div class="widget-area">
			<div class="widgets-wrap">
				<div id="widget-box-1" class="footer-widget-box">
					<ul>
						<li class="widget"><h2 class="widgettitle">Author</h2>			<div class="textwidget"><img src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2010/05/myself_thumb.png" style="margin:7px;"><br />
My name is Christian S. Perone, I'm currently living in Porto Alegre, Brasil.<br>This blog is the result of my personal research on some of my interest areas.<br><br></div>
		</li><!-- Wordpress Popular Posts Plugin v2.1.4 [W] [monthly] [regular] -->
<li class="widget">
<h2 class="widgettitle">Popular Posts</h2><ul>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=1589" title="Machine Learning :: Text feature extraction (tf-idf) - Part I"><span class="wpp-post-title">Machine Learning :: Text feature extraction (tf-idf) - Part I</span></a>  <span class="post-stats"><span class="wpp-comments">46  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2497" title="Machine Learning :: Cosine Similarity for Vector Space Models (Part III)"><span class="wpp-post-title">Machine Learning :: Cosine Similarity for Vector Space Models (Part III)</span></a>  <span class="post-stats"><span class="wpp-comments">5  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2711" title="Simple and effective coin segmentation using Python and OpenCV"><span class="wpp-post-title">Simple and effective coin segmentation using Python and OpenCV</span></a>  <span class="post-stats"><span class="wpp-comments">1  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=1747" title="Machine Learning :: Text feature extraction (tf-idf) - Part II"><span class="wpp-post-title">Machine Learning :: Text feature extraction (tf-idf) - Part II</span></a>  <span class="post-stats"><span class="wpp-comments">40  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2383" title="Raspberry Pi &amp; Arduino: a laser pointer communication and a LDR voltage sigmoid"><span class="wpp-post-title">Raspberry Pi &amp; Arduino: a laser pointer communication and a LDR voltage sigmoid</span></a>  <span class="post-stats"><span class="wpp-comments">9  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=549" title="Genetic Programming meets Python"><span class="wpp-post-title">Genetic Programming meets Python</span></a>  <span class="post-stats"><span class="wpp-comments">45  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2433" title="Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)"><span class="wpp-post-title">Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)</span></a>  <span class="post-stats"><span class="wpp-comments">16  comment(s)</span></span> </li>

</ul>
</li>
<!-- End Wordpress Popular Posts Plugin v2.1.4 -->
					</ul>
				</div>

				<div id="widget-box-2" class="footer-widget-box">
					<ul>
						<li class="widget"><h2 class="widgettitle">Blogroll</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://acodersmusings.blogspot.com" title="A Coder&#8217;s Musings" target="_blank">A Coder&#8217;s Musings</a></li>
<li><a href="http://automatinginvention.com/" target="_blank">Automating Invetion</a></li>
<li><a href="http://bgarber.notapipe.org/blog/feed/" title="Bryan Garber&#8217;s Blog" target="_blank">Bryan Garber&#039;s Blog</a></li>
<li><a href="http://geneticargonaut.blogspot.com/" target="_blank">Genetic Argonaut</a></li>
<li><a href="http://www.illigal.uiuc.edu/web/blog/" target="_blank">IlliGAL Blog</a></li>
<li><a href="http://www.inthehaystack.com" rel="friend" title="Boris Gorelik on data visualization and presentation" target="_blank">In the haystack</a></li>
<li><a href="http://leandron.wordpress.com" title="Leandro Nunes Blog" target="_blank">Leandro Nunes Blog</a></li>
<li><a href="http://lorenzoriano.wordpress.com/" rel="friend" title="Lorenzo Riano &#8211; Fantastic Machines" target="_blank">Lorenzo Riano &#8211; Fantastic Machines</a></li>
<li><a href="http://www.sigevolution.org/" title="SIGEVOlution Newsletter" target="_blank">SIGEVOlution Newsletter</a></li>
<li><a href="http://togelius.blogspot.com/" target="_blank">Togelius</a></li>
<li><a href="http://www.xavierllora.net/" target="_blank">Xavier Llora</a></li>
<li><a href="http://blogs.nyu.edu/blogs/agc282/zia/" target="_blank">Zero Intelligence Agents Blog</a></li>

	</ul>
</li>
<li class="widget"><h2 class="widgettitle">Pyevolve</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://pyevolve.sourceforge.net" title="Pyevolve Documentation Site">Pyevolve Documentation Site</a></li>

	</ul>
</li>
		<li class="widget">		<h2 class="widgettitle">Recent Posts</h2>		<ul>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2711">Simple and effective coin segmentation using Python and OpenCV</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2703">Despesas de Custeio e Lei de Benford</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2676">Universality, primes and space communication</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2654">The beauty of Bitcoin P2P network</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2649">Protocoin &#8211; a pure Python Bitcoin protocol implementation</a>
						</li>
				</ul>
		</li><li class="widget"><h2 class="widgettitle">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments">Karthik on <a href="http://pyevolve.sourceforge.net/wordpress/?p=1747&#038;cpage=1#comment-17349">Machine Learning :: Text feature extraction (tf-idf) &#8211; Part II</a></li><li class="recentcomments"><a href="http://google.com" rel='external nofollow' class='url' onclick="javascript:pageTracker._trackPageview ('/outbound/google.com');">John Anderton</a> on <a href="http://pyevolve.sourceforge.net/wordpress/?p=1747&#038;cpage=1#comment-17347">Machine Learning :: Text feature extraction (tf-idf) &#8211; Part II</a></li><li class="recentcomments">purna on <a href="http://pyevolve.sourceforge.net/wordpress/?p=1589&#038;cpage=1#comment-17345">Machine Learning :: Text feature extraction (tf-idf) &#8211; Part I</a></li><li class="recentcomments"><a href="http://pytools.codeplex.com" rel='external nofollow' class='url' onclick="javascript:pageTracker._trackPageview ('/outbound/pytools.codeplex.com');">sm</a> on <a href="http://pyevolve.sourceforge.net/wordpress/?p=2711&#038;cpage=1#comment-17344">Simple and effective coin segmentation using Python and OpenCV</a></li><li class="recentcomments">Jonathan on <a href="http://pyevolve.sourceforge.net/wordpress/?p=2383&#038;cpage=1#comment-17342">Raspberry Pi &#038; Arduino: a laser pointer communication and a LDR voltage sigmoid</a></li></ul></li>					</ul>
				</div>

				<div id="widget-box-3" class="footer-widget-box">
					<ul>
						<li class="widget"><h2 class="widgettitle">Meta</h2>			<ul>
						<li><a href="http://pyevolve.sourceforge.net/wordpress/wp-login.php">Log in</a></li>
			<li><a href="http://pyevolve.sourceforge.net/wordpress/?feed=rss2" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://pyevolve.sourceforge.net/wordpress/?feed=comments-rss2" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>						</ul>
</li><li class="widget"><form role="search" method="get" id="searchform" class="searchform" action="http://pyevolve.sourceforge.net/wordpress/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li class="widget"><h2 class="widgettitle">Categories</h2>		<ul>
	<li class="cat-item cat-item-9"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=9" title="View all posts filed under Article">Article</a>
</li>
	<li class="cat-item cat-item-282"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=282" title="View all posts filed under Bitcoin">Bitcoin</a>
</li>
	<li class="cat-item cat-item-132"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=132" title="View all posts filed under c">c</a>
</li>
	<li class="cat-item cat-item-224"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=224" title="View all posts filed under CPP">CPP</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=5" title="View all posts filed under Genetic Algorithms">Genetic Algorithms</a>
</li>
	<li class="cat-item cat-item-63"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=63" title="View all posts filed under genetic programming">genetic programming</a>
</li>
	<li class="cat-item cat-item-83"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=83" title="View all posts filed under java">java</a>
</li>
	<li class="cat-item cat-item-170"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=170" title="View all posts filed under LLVM">LLVM</a>
</li>
	<li class="cat-item cat-item-213"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=213" title="View all posts filed under Machine Learning">Machine Learning</a>
</li>
	<li class="cat-item cat-item-180"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=180" title="View all posts filed under Math">Math</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=6" title="View all posts filed under News">News</a>
</li>
	<li class="cat-item cat-item-295"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=295" title="View all posts filed under Open Data">Open Data</a>
</li>
	<li class="cat-item cat-item-18"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=18" title="View all posts filed under Philosophy">Philosophy</a>
</li>
	<li class="cat-item cat-item-200"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=200" title="View all posts filed under Programming">Programming</a>
</li>
	<li class="cat-item cat-item-3"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=3" title="View all posts filed under Pyevolve">Pyevolve</a>
</li>
	<li class="cat-item cat-item-101"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=101" title="View all posts filed under pys60">pys60</a>
</li>
	<li class="cat-item cat-item-4"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=4" title="View all posts filed under Python">Python</a>
</li>
	<li class="cat-item cat-item-245"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=245" title="View all posts filed under Raspberry Pi">Raspberry Pi</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=7" title="View all posts filed under Science">Science</a>
</li>
	<li class="cat-item cat-item-67"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=67" title="View all posts filed under Time Waste">Time Waste</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=1" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
		</ul>
</li>					</ul>
				</div>
			</div>
		</div>
		<!-- End: Widget area -->

		<!-- Start: Footer -->
		<div id="footer">
			<div class="left">&copy;2014 Copyright by Pyevolve<br />All rights reserved</div>
			<div class="right"><a href="http://blogsessive.com/blogging-tools/typominima-typography-minimal-wordpress-theme/" title="Typominima WordPress Theme" target="_blank">Typominima</a> theme by <a href="http://qbkl.net" target="_blank" title="Blog design studio">QBKL</a> &amp; <a href="http://blogsessive.com" target="_blank" title="Blog tips">Blogsessive</a><br />Built with <a href="http://cufon.shoqolate.com/" target="_blank">Cuf&#243;n</a> &amp; <a href="http://www.fontsquirrel.com/fonts/TypoSlabserif-Light" target="_blank">TypoSlabserif</a></div>
			<div class="clear"></div>
		</div>
		<!-- End: Footer -->

	</div>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.7.1'></script>
<script type='text/javascript' src='http://platform.linkedin.com/in.js?ver=3.7.1'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/socialize/frontend/js/plusone.js?ver=3.7.1'></script>
<script type="text/javascript">
          (function() {
            var li = document.createElement('script'); li.type = 'text/javascript'; li.async = true;
            li.src = 'https://platform.stumbleupon.com/1/widgets.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(li, s);
          })();
        </script></body>
</html>
