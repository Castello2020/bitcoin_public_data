http://pyevolve.sourceforge.net/wordpress/?cat=200
HTTP/1.1 200 OK
Server: Apache/2.2.15 (CentOS)
Vary: Host
X-Pingback: http://pyevolve.sourceforge.net/wordpress/xmlrpc.php
Cache-Control: max-age=172800
Expires: Thu, 24 Jul 2014 07:18:39 GMT
Content-Type: text/html; charset=UTF-8
Content-Length: 106784
Date: Tue, 22 Jul 2014 07:18:40 GMT
X-Varnish: 1631416411
Age: 0
Via: 1.1 varnish
Connection: close

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> 
	<title>Programming | Pyevolve</title>
	<link type="text/css" rel="stylesheet" media="screen" href="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/style.css" />
	<link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://pyevolve.sourceforge.net/wordpress/?feed=rss2" />
	<link rel="pingback" href="http://pyevolve.sourceforge.net/wordpress/xmlrpc.php" />

	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js" type="text/javascript"></script>
	
		<!-- Cufon: Custom Font Replacement -->
	<script src="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/js/cufon/cufon-yui.js" type="text/javascript"></script>
	<script src="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/js/cufon/typoslabserif-light-300.font.js" type="text/javascript"></script>
	<script src="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/js/cufon/cufon-replace.js" type="text/javascript"></script>
	
	<!--[if lte IE 7]>
	<style type="text/css">
	body {
		behavior: url("http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/hover.htc");
	}
	#nav ul li ul {
		top: 48px;
	}
	</style>
	<![endif]-->
	<link type="text/css" rel="stylesheet" media="screen" href="http://pyevolve.sourceforge.net/wordpress/wp-content/themes/typominima/custom-colors.php?colors=ba954f-dabc83" />
	<link rel="alternate" type="application/rss+xml" title="Pyevolve &raquo; Programming Category Feed" href="http://pyevolve.sourceforge.net/wordpress/?feed=rss2&#038;cat=200" />
<link rel='stylesheet' id='cptchStylesheet-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/captcha/css/style.css?ver=3.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='codecolorer-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/codecolorer/codecolorer.css?ver=0.9.9' type='text/css' media='screen' />
<link rel='stylesheet' id='socialize-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/socialize/frontend/css/socialize.css?ver=3.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='codebox-css'  href='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wp-codebox/css/codebox.css?ver=0.1' type='text/css' media='screen' />
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/prototype/1.7.1.0/prototype.js?ver=1.7.1'></script>
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/scriptaculous/1.9.0/scriptaculous.js?ver=1.9.0'></script>
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/scriptaculous/1.9.0/effects.js?ver=1.9.0'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/lightbox-2/lightbox.js?ver=1.8'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wp-codebox/js/codebox.js?ver=0.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://pyevolve.sourceforge.net/wordpress/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://pyevolve.sourceforge.net/wordpress/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.7.1" />

<!-- All in One SEO Pack 1.6.14.5 by Michael Torbert of Semper Fi Web Design[254,285] -->
<link rel="author" href="https://plus.google.com/118258566074039785562" />
<meta name="robots" content="noindex,follow" />
<!-- /all in one seo pack -->
<!-- Google Analytics Tracking by Google Analyticator: http://cavemonkey50.com/code/google-analyticator/ -->
	<script type="text/javascript">
		var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
		document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</script>

	<script type="text/javascript">
		try {
		var pageTracker = _gat._getTracker("UA-7117443-2");
		pageTracker._initData();
		pageTracker._trackPageview();
	} catch(err) {}</script>

	<!-- begin lightbox scripts -->
	<script type="text/javascript">
    //<![CDATA[
    document.write('<link rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/lightbox-2/Themes/Black/lightbox.css" type="text/css" media="screen" />');
    //]]>
    </script>
	<!-- end lightbox scripts -->


<!-- Google Fonts -->
<link href='http://fonts.googleapis.com/css?family=Crushed' rel='stylesheet' type='text/css' />
<style type="text/css" media="screen">
     
</style>
<!-- fonts delivered by Wordpress Google Fonts, a plugin by Adrian3.com -->


<!-- Start Of Script Generated By WP-PageNavi 2.40 -->
<link rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wp-pagenavi/pagenavi-css.css" type="text/css" media="screen" />
<!-- End Of Script Generated By WP-PageNavi 2.40 -->
<link type="text/css" rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/about-me/stylesheet.css" />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>

<!-- Wordpress Popular Posts v2.1.4 -->
<link rel="stylesheet" href="http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/wordpress-popular-posts/style/wpp.css" type="text/css" media="screen" />
<!-- End Wordpress Popular Posts v2.1.4 -->
<style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>
</head>

<body class="archive category category-programming-2 category-200">
	<div id="wrap">

		<!-- Start: Header -->
		<div id="header">
			<div class="top-options">
								<div class="rss-link left"><a href="http://feeds2.feedburner.com/pyevolve" title="Subscribe to feed">Subscribe to RSS Feed</a></div>
				<div class="search-wrap right">
					<form method="get" id="searchform" name="searchform" action="http://pyevolve.sourceforge.net/wordpress/">
						<input type="text" value="Site Search" name="s" id="s" onblur="if (this.value == '') {this.value = 'Site Search';}" onfocus="if (this.value == 'Site Search') {this.value = '';}" />  
						<button type="submit" class="searchsubmit">Go</button>
					</form>
				</div>
				<div class="clear"></div>
			</div>
			<div id="nav">
				<div class="menu"><ul><li class="page_item page-item-36"><a href="http://pyevolve.sourceforge.net/wordpress/?page_id=36">Project</a></li><li class="page_item page-item-12"><a href="http://pyevolve.sourceforge.net/wordpress/?page_id=12">About</a></li></ul></div>
			</div>

			<div id="sitename">
				<a href="http://pyevolve.sourceforge.net/wordpress/" title="Pyevolve - by Christian S. Perone">Pyevolve</a><br /><span>&#126; by Christian S. Perone &#126;</span>			</div>
		</div>
		<!-- End: Header -->
		<!-- Start: Content -->
		<div id="content">
		
				<div class="archive-title">
			<h5>Programming</h5>
		</div>
		
					<div class="post-2711 post type-post status-publish format-standard hentry category-programming-2 category-python tag-coins tag-computer-vision tag-contour-finding tag-image-segmentation tag-morphology tag-opencv tag-opencv-bindings tag-programming tag-python" id="post-2711">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2711" title="Permanent Link to Simple and effective coin segmentation using Python and OpenCV">Simple and effective coin segmentation using Python and OpenCV</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2711" data-text="Simple and effective coin segmentation using Python and OpenCV" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2711&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2711";
			reddit_title = "Simple and effective coin segmentation using Python and OpenCV";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2711" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2711"></g:plusone></div></div><p><iframe width="420" height="315" src="//www.youtube.com/embed/jWERV5Y0FwU?rel=0" frameborder="0" allowfullscreen></iframe></p>
<p>The new generation of OpenCV bindings for Python are getting better and better with the hard work of the community. The new bindings, called &#8220;cv2&#8243; are the replacement of the old &#8220;cv&#8221; bindings; in this new generation of bindings, almost all operations returns now native Python objects or Numpy objects, which is pretty nice since it simplified a lot and also improved performance on some areas due to the fact that you can now also use the optimized operations from Numpy and also enabled the integration with other frameworks like the <a href="http://scikit-image.org/" title="Scikit-Image" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-image.org');">scikit-image</a> which also uses Numpy arrays for image representation.</p>
<p>In this example, I&#8217;ll show how to segment coins present in images or even real-time video capture with a simple approach using thresholding, morphological operators and contour approximation. This approach is a lot simpler than the approach using Otsu&#8217;s thresholding and Watershed segmentation <a href="http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_watershed/py_watershed.html#watershed" title="OpenCV Python Tutorial" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/opencv-python-tutroals.readthedocs.org');">here in OpenCV Python tutorials</a>, which I highly recommend you to read due to its robustness. Unfortunatelly, the approach using Otsu&#8217;s thresholding is highly dependent on a illumination normalization. One could extract small patches of the image to implement something similar to an adaptive Otsu&#8217;s binarization (like the one implemented in Letptonica &#8211; the framework used by Tesseract OCR) to overcome this problem, but let&#8217;s see another approach. For reference, see the output of the Otsu&#8217;s thresholding using an image taken with my webcam with a non-normalized illumination:</p>
<p>&nbsp;</p>
<div id="attachment_2715" style="width: 1023px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/original_vs_otsu1.png" rel="lightbox[2711]"><img class="size-full wp-image-2715" alt="Original image vs Otsu binarization" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/original_vs_otsu1.png" width="1013" height="493" /></a><p class="wp-caption-text">Original image vs Otsu binarization</p></div>
<h2></h2>
<h2>1. Setting the Video Capture configuration</h2>
<p>The first step to create a real-time Video Capture using the Python bindings is to instantiate the VideoCapture class, set the properties and then start reading frames from the camera:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="python codecolorer"><span class="kw1">import</span> numpy <span class="kw1">as</span> np<br />
<span class="kw1">import</span> cv2<br />
<br />
cap = cv2.<span class="me1">VideoCapture</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />
cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_WIDTH</span>, <span class="nu0">1280</span><span class="br0">&#41;</span><br />
cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_HEIGHT</span>, <span class="nu0">720</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>In newer versions (unreleased yet), the constants for CV_CAP_PROP_FRAME_WIDTH are now in the <strong>cv2</strong> module, for now let&#8217;s just use the <strong>cv2.cv</strong> module.</p>
<h2>2. Reading image frames</h2>
<p>The next step is to use the VideoCapture object to read the frames and then convert them to gray color (we are not going to use color information to segment the coins):</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br /></div></td><td><div class="python codecolorer"><span class="kw1">while</span> <span class="kw2">True</span>:<br />
&nbsp; &nbsp; ret, frame = cap.<span class="me1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; roi = frame<span class="br0">&#91;</span><span class="nu0">0</span>:<span class="nu0">500</span>, <span class="nu0">0</span>:<span class="nu0">500</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; gray = cv2.<span class="me1">cvtColor</span><span class="br0">&#40;</span>roi, cv2.<span class="me1">COLOR_BGR2GRAY</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Note that here I&#8217;m extracting a smal portion of the complete image (where the coins are located), but you don&#8217;t have to do that if you have only coins on your image. At this moment, we have the following gray image:</p>
<div id="attachment_2728" style="width: 504px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_image.png" rel="lightbox[2711]"><img class="size-full wp-image-2728" alt="The original Gray image captured." src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_image.png" width="494" height="492" /></a><p class="wp-caption-text">The original Gray image captured.</p></div>
<h2>3. Applying adaptive thresholding</h2>
<p>In this step we will apply the Adaptive Thresholding after applying a Gaussian Blur kernel to eliminate the noise that we have in the image:</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br /></div></td><td><div class="text codecolorer">gray_blur = cv2.GaussianBlur(gray, (15, 15), 0)<br />
thresh = cv2.adaptiveThreshold(gray_blur, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C,<br />
&nbsp; &nbsp; cv2.THRESH_BINARY_INV, 11, 1)</div></td></tr></tbody></table></div>
<p>See the effect of the Gaussian Kernel in the image:</p>
<div id="attachment_2725" style="width: 1023px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_vs_gaussian.png" rel="lightbox[2711]"><img class="size-full wp-image-2725" alt="The original gray image and the image after applying the Gaussian Kernel." src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gray_vs_gaussian.png" width="1013" height="492" /></a><p class="wp-caption-text">The original gray image and the image after applying the Gaussian Kernel.</p></div>
<p>And now the effect of the Adaptive Thresholding with the blurry image:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gaussian_vs_adaptive.png" rel="lightbox[2711]"><img class="aligncenter size-full wp-image-2726" alt="The effect of the adaptive thresholding into the blurry image" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/gaussian_vs_adaptive.png" width="1015" height="498" /></a></p>
<p>Note that at that moment we already have the coins segmented except for the small noisy inside the center of the coins and also in some places around them.</p>
<h2>4. Morphology</h2>
<p>The <a href="http://en.wikipedia.org/wiki/Mathematical_morphology" title="Wikipedia: Mathematical Morphology" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Morphological Operators</a> are used to dilate, erode and other operations on the pixels of the image. Here, due to the fact that sometimes the camera can present some artifacts we will use the Morphological Operation of Closing to make sure that the borders of the coins are always close, otherwise we may found a coin with a semi circle or something like that. To understand the effect of the Closing operation (which is the operation of erosion of the pixels already dilated) see the image below:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/FiltersMorphologicalClosing.jpg" rel="lightbox[2711]"><img class="aligncenter size-full wp-image-2729" alt="Morphological Closing" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/FiltersMorphologicalClosing.jpg" width="582" height="190" /></a></p>
<p>You can see that after some iterations of the operation, the circles starts to become filled. To use the Closing operation, we&#8217;ll use the <strong>morphologyEx</strong> function from the OpenCV Python bindings:</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br /></div></td><td><div class="text codecolorer">kernel = np.ones((3, 3), np.uint8)<br />
closing = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel, iterations=4)</div></td></tr></tbody></table></div>
<p>See now the effect of the Closing operation on our coins:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/closing.png" rel="lightbox[2711]"><img class="aligncenter size-full wp-image-2731" alt="Closing Operation in the coins" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/closing.png" width="1011" height="500" /></a></p>
<p>The operations of Morphological Operators are very simple, the main principle is the application of a element (in our case we have a block element of 3&#215;3) into the pixels of the image. If you want to understand it, please see <a href="https://www.youtube.com/watch?v=fmyE7DiaIYQ" title="Youtube: Erosion" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.youtube.com');">this animation explaning the operation of Erosion</a>.</p>
<h2>5. Contour detection and filtering</h2>
<p>After applying the morphological operators, all we have to do is to find the contour of each coin and then filter the contours having an area smaller or larger than a coin area. You can imagine the procedure of finding contours in OpenCV as the operation of finding connected components and their boundaries. To do that, we&#8217;ll use the OpenCV <strong>findContours </strong>function.</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br /></div></td><td><div class="python codecolorer">cont_img = closing.<span class="kw3">copy</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
contours, hierarchy = cv2.<span class="me1">findContours</span><span class="br0">&#40;</span>cont_img, cv2.<span class="me1">RETR_EXTERNAL</span>,<br />
&nbsp; &nbsp; cv2.<span class="me1">CHAIN_APPROX_SIMPLE</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Note that we made a copy of the closing image because the function findContours will change the image passed as the first parameter, we&#8217;re also using the <strong>RETR_EXTERNAL</strong> flag, which means that the contours returned are only the extreme outer contours. The parameter <strong>CHAIN_APPROX_SIMPLE</strong> will also return a compact representation of the contour, for more information <a href="http://opencv-python-tutroals.readthedocs.org/en/latest/py_tutorials/py_imgproc/py_contours/py_contours_begin/py_contours_begin.html#contour-approximation-method" title="OpenCV Python Tutorials - Approximation Method" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/opencv-python-tutroals.readthedocs.org');">see here</a>.</p>
<p>After finding the contours, we need to iterate into each one and check the area of them to filter the contours containing an area greater or smaller than the area of a coin. We also need to fit an ellipse to the contour found. We could have done this using the minimum enclosing circle, but since my cameara isn&#8217;t perfectly above the coins, the coins appear with a small inclination describing an ellipse.</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br /></div></td><td><div class="python codecolorer"><span class="kw1">for</span> cnt <span class="kw1">in</span> contours:<br />
&nbsp; &nbsp; area = cv2.<span class="me1">contourArea</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> area <span class="sy0">&lt;</span> <span class="nu0">2000</span> <span class="kw1">or</span> area <span class="sy0">&gt;</span> <span class="nu0">4000</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="kw2">len</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">5</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; ellipse = cv2.<span class="me1">fitEllipse</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; cv2.<span class="me1">ellipse</span><span class="br0">&#40;</span>roi, ellipse, <span class="br0">&#40;</span><span class="nu0">0</span>,<span class="nu0">255</span>,<span class="nu0">0</span><span class="br0">&#41;</span>, <span class="nu0">2</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Note that in the code above we are iterating on each contour, filtering coins with area smaller than 2000 or greater than 4000 (these are hardcoded values I found for the brazilian coins at this distance from the camera), later we check for the number of points of the contour because the function <strong>fitEllipse</strong> needs a number of points greater or equal than 5 and finally we use the <strong>ellipse</strong> function to draw the ellipse in green over the original image.</p>
<p>To show the final image with the contours we just use the imshow function to show a new window with the image:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br /></div></td><td><div class="python codecolorer">cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">'final result'</span>, roi<span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>And finally, this is the result in the end of all steps described above:</p>
<div id="attachment_2736" style="width: 503px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/final_result.png" rel="lightbox[2711]"><img class="size-full wp-image-2736" alt="The final image with the contours detected" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2014/06/final_result.png" width="493" height="491" /></a><p class="wp-caption-text">The final image with the contours detected</p></div>
<p>The complete source-code:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;height:400px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br />25<br />26<br />27<br />28<br />29<br />30<br />31<br />32<br />33<br />34<br />35<br />36<br />37<br />38<br />39<br />40<br />41<br />42<br />43<br />44<br />45<br />46<br />47<br />48<br /></div></td><td><div class="python codecolorer"><span class="kw1">import</span> numpy <span class="kw1">as</span> np<br />
<span class="kw1">import</span> cv2<br />
<br />
<span class="kw1">def</span> run_main<span class="br0">&#40;</span><span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; cap = cv2.<span class="me1">VideoCapture</span><span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_WIDTH</span>, <span class="nu0">1280</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; cap.<span class="kw2">set</span><span class="br0">&#40;</span>cv2.<span class="me1">cv</span>.<span class="me1">CV_CAP_PROP_FRAME_HEIGHT</span>, <span class="nu0">720</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; <span class="kw1">while</span><span class="br0">&#40;</span><span class="kw2">True</span><span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; ret, frame = cap.<span class="me1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; roi = frame<span class="br0">&#91;</span><span class="nu0">0</span>:<span class="nu0">500</span>, <span class="nu0">0</span>:<span class="nu0">500</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; gray = cv2.<span class="me1">cvtColor</span><span class="br0">&#40;</span>roi, cv2.<span class="me1">COLOR_BGR2GRAY</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; gray_blur = cv2.<span class="me1">GaussianBlur</span><span class="br0">&#40;</span>gray, <span class="br0">&#40;</span><span class="nu0">15</span>, <span class="nu0">15</span><span class="br0">&#41;</span>, <span class="nu0">0</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; thresh = cv2.<span class="me1">adaptiveThreshold</span><span class="br0">&#40;</span>gray_blur, <span class="nu0">255</span>, cv2.<span class="me1">ADAPTIVE_THRESH_GAUSSIAN_C</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">THRESH_BINARY_INV</span>, <span class="nu0">11</span>, <span class="nu0">1</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; kernel = np.<span class="me1">ones</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="nu0">3</span>, <span class="nu0">3</span><span class="br0">&#41;</span>, np.<span class="me1">uint8</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; closing = cv2.<span class="me1">morphologyEx</span><span class="br0">&#40;</span>thresh, cv2.<span class="me1">MORPH_CLOSE</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; kernel, iterations=<span class="nu0">4</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; cont_img = closing.<span class="kw3">copy</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; contours, hierarchy = cv2.<span class="me1">findContours</span><span class="br0">&#40;</span>cont_img, cv2.<span class="me1">RETR_EXTERNAL</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">CHAIN_APPROX_SIMPLE</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">for</span> cnt <span class="kw1">in</span> contours:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; area = cv2.<span class="me1">contourArea</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> area <span class="sy0">&lt;</span> <span class="nu0">2000</span> <span class="kw1">or</span> area <span class="sy0">&gt;</span> <span class="nu0">4000</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="kw2">len</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">5</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">continue</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ellipse = cv2.<span class="me1">fitEllipse</span><span class="br0">&#40;</span>cnt<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">ellipse</span><span class="br0">&#40;</span>roi, ellipse, <span class="br0">&#40;</span><span class="nu0">0</span>,<span class="nu0">255</span>,<span class="nu0">0</span><span class="br0">&#41;</span>, <span class="nu0">2</span><span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">&quot;Morphological Closing&quot;</span>, closing<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">&quot;Adaptive Thresholding&quot;</span>, thresh<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; cv2.<span class="me1">imshow</span><span class="br0">&#40;</span><span class="st0">'Contours'</span>, roi<span class="br0">&#41;</span><br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> cv2.<span class="me1">waitKey</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span> <span class="sy0">&amp;</span> 0xFF == <span class="kw2">ord</span><span class="br0">&#40;</span><span class="st0">'q'</span><span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span><br />
<br />
&nbsp; &nbsp; cap.<span class="me1">release</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; cv2.<span class="me1">destroyAllWindows</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
<br />
<span class="kw1">if</span> __name__ == <span class="st0">&quot;__main__&quot;</span>:<br />
&nbsp; &nbsp; run_main<span class="br0">&#40;</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>June 22nd, 2014</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2711#comments">1 Comment</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=coins" rel="tag">Coins</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=computer-vision" rel="tag">Computer Vision</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=contour-finding" rel="tag">Contour Finding</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=image-segmentation" rel="tag">Image Segmentation</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=morphology" rel="tag">Morphology</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=opencv" rel="tag">OpenCV</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=opencv-bindings" rel="tag">OpenCV Bindings</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=programming" rel="tag">programming</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2654 post type-post status-publish format-standard hentry category-bitcoin-2 category-programming-2 category-python tag-bitcoin tag-getaddr tag-network tag-nodes tag-p2p tag-protocoin tag-python tag-ubigraph tag-visualization" id="post-2654">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2654" title="Permanent Link to The beauty of Bitcoin P2P network">The beauty of Bitcoin P2P network</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2654" data-text="The beauty of Bitcoin P2P network" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2654&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2654";
			reddit_title = "The beauty of Bitcoin P2P network";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2654"></g:plusone></div></div><p>So, in the last days I just released <a href="http://protocoin.readthedocs.org/" title="Protocoin Documentation" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/protocoin.readthedocs.org');">Protocoin</a>, a framework in pure Python with a Bitcoin P2P network implementation. While I&#8217;m in process of development of the v.0.2 of the framework (with new and nice features like Bitcoin keys management &#8211; you can see some <a href="http://protocoin.readthedocs.org/en/latest/getstarted.html#bitcoin-keys-creating-exporting-importing-and-conversions" title="Protocoin Latest Documentation" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/protocoin.readthedocs.org');">preview here</a>) I would like to show a real-time visualization I&#8217;ve made with Protocoin and <a href="http://ubietylab.net/ubigraph" title="Ubigraph" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/ubietylab.net');">Ubigraph</a> of a node connecting to a seed node and then issuing GetAddr message for each node and connecting on the received nodes in a breadth-first search fashion. I&#8217;ll release the code used to create this visualization in the next release of Protocoin as soon as possible. I hope you enjoy it !</p>
<h3>Color legend</h3>
<p><strong><span style="color: #000000;">Yellow</span></strong> = Connecting<br />
<span style="color: #000000;"><strong>Green</strong></span> = Connected<br />
<span style="color: #000000;"><strong>Blue</strong></span> = Disconnected after connection</p>
<h3>Video</h3>
<p><iframe src="http://www.youtube.com/embed/bIOLJUKOJkw?rel=0" height="360" width="640" allowfullscreen="" frameborder="0"></iframe></p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>December 13th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2654#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=bitcoin" rel="tag">bitcoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=getaddr" rel="tag">getaddr</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=network" rel="tag">network</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=nodes" rel="tag">nodes</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=p2p" rel="tag">p2p</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=protocoin" rel="tag">protocoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=ubigraph" rel="tag">ubigraph</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=visualization" rel="tag">visualization</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2649 post type-post status-publish format-standard hentry category-programming-2 category-python tag-bitcoin tag-protocoin tag-python" id="post-2649">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2649" title="Permanent Link to Protocoin &#8211; a pure Python Bitcoin protocol implementation">Protocoin &#8211; a pure Python Bitcoin protocol implementation</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2649" data-text="Protocoin &#8211; a pure Python Bitcoin protocol implementation" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2649&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2649";
			reddit_title = "Protocoin &#8211; a pure Python Bitcoin protocol implementation";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2649" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2649"></g:plusone></div></div><p>Just release the first version of Protocoin, a pure Python Bitcoin protocol implementation, for more information see the <a href="http://protocoin.readthedocs.org/" title="Protocoin" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/protocoin.readthedocs.org');">documentation</a> or the <a href="https://github.com/perone/protocoin" title="Github - Protocoin" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/github.com');">project</a> in Github.</p>
<p>If you want to donate for the project, my Bitcoin address is: 1Q6JZEE5turJXaTn1fburWkqjhC4oMJ4yV.</p>
<p>I hope you like it !</p>
<p>- Christian S. Perone</p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>November 22nd, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2649#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=bitcoin" rel="tag">bitcoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=protocoin" rel="tag">protocoin</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2640 post type-post status-publish format-standard hentry category-programming-2 category-python tag-django tag-django-gis-brasil tag-gis tag-heatmap tag-plotting tag-porto-alegre tag-python tag-rs" id="post-2640">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2640" title="Permanent Link to Mapa de calor dos dados de acidentes de transito do DataPoa">Mapa de calor dos dados de acidentes de transito do DataPoa</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2640" data-text="Mapa de calor dos dados de acidentes de transito do DataPoa" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2640&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2640";
			reddit_title = "Mapa de calor dos dados de acidentes de transito do DataPoa";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2640" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2640"></g:plusone></div></div><p>Esta semana será disponibilzada a nova versão do <a href="http://django-gis-brasil.readthedocs.org/" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/django-gis-brasil.readthedocs.org');">Django GIS Brasil</a>, segue abaixo um exemplo de mapa criado usando os novos dados do <a href="http://django-gis-brasil.readthedocs.org/" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/django-gis-brasil.readthedocs.org');">Django GIS Brasil</a> importados do <a href="http://datapoa.com.br/" title="DataPoa" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/datapoa.com.br');">DataPoa</a>.</p>
<p>O exemplo abaixo é um mapa de calor utilizando os dados de acidentes de trânsito em Porto Alegre /RS durante os anos de 2000 até 2012. Os eixos (ruas, avenidas, etc.) também estarão presentes no Django GIS Brasil.</p>
<p>&nbsp;</p>
<div id="attachment_2643" style="width: 310px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/heatmap1.png" rel="lightbox[2640]"><img class="size-medium wp-image-2643 " alt="Heatmap POA" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/11/heatmap1-300x203.png" width="300" height="203" /></a><p class="wp-caption-text">Mapa de Acidentes de Trânsito em PoA/RS. Clique para ampliar.</p></div>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>November 16th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2640#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=django" rel="tag">django</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=django-gis-brasil" rel="tag">django-gis-brasil</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=gis" rel="tag">gis</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=heatmap" rel="tag">heatmap</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=plotting" rel="tag">plotting</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=porto-alegre" rel="tag">porto alegre</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=rs" rel="tag">rs</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2497 post type-post status-publish format-standard hentry category-machine-learning category-programming-2 category-python tag-cosine tag-cosine-similarity tag-machine-learning-2 tag-python tag-sklearn tag-tf-idf tag-vector-space-model tag-vsm" id="post-2497">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2497" title="Permanent Link to Machine Learning :: Cosine Similarity for Vector Space Models (Part III)">Machine Learning :: Cosine Similarity for Vector Space Models (Part III)</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2497" data-text="Machine Learning :: Cosine Similarity for Vector Space Models (Part III)" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2497&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2497";
			reddit_title = "Machine Learning :: Cosine Similarity for Vector Space Models (Part III)";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2497" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2497"></g:plusone></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">var dzone_url = "http://pyevolve.sourceforge.net/wordpress/?p=2497";</script>
		<script type="text/javascript">var dzone_title = "Machine Learning :: Cosine Similarity for Vector Space Models (Part III)";</script>
		<script type="text/javascript">
			<!-- 
			var dzone_style = "1";
			//-->
		</script><script language="javascript" src="http://widgets.dzone.com/links/widgets/zoneit.js"></script></div></div><p>* It has been a long time since I wrote the TF-IDF tutorial (<a href="http://pyevolve.sourceforge.net/wordpress/?p=1589" title="Machine Learning :: Text feature extraction (tf-idf) – Part I">Part I</a> and <a href="http://pyevolve.sourceforge.net/wordpress/?p=1747" title="Machine Learning :: Text feature extraction (tf-idf) – Part II">Part II</a>) and as I promissed, here is the continuation of the tutorial. Unfortunately I had no time to fix the previous tutorials for the newer versions of the <a href="http://scikit-learn.org/stable/" title="scikit-learn" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-learn.org');">scikit-learn (sklearn)</a> package nor to answer all the questions, but I hope to do that in a close future.</p>
<p>So, on the previous tutorials we learned how a document can be modeled in the Vector Space, how the TF-IDF transformation works and how the TF-IDF is calculated, now what we are going to learn is how to use a well-known similarity measure (Cosine Similarity) to calculate the similarity between different documents.</p>
<h2>The Dot Product</h2>
<p>Let&#8217;s begin with the definition of the dot product for two vectors: <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Ba%7D%20%3D%20%28a_1%2C%20a_2%2C%20a_3%2C%20%5Cldots%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{a} = (a_1, a_2, a_3, \ldots)' title='\vec{a} = (a_1, a_2, a_3, \ldots)' class='latex' /> and <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D%20%3D%20%28b_1%2C%20b_2%2C%20b_3%2C%20%5Cldots%29&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b} = (b_1, b_2, b_3, \ldots)' title='\vec{b} = (b_1, b_2, b_3, \ldots)' class='latex' />, where <img src='http://s.wordpress.com/latex.php?latex=a_n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='a_n' title='a_n' class='latex' /> and <img src='http://s.wordpress.com/latex.php?latex=b_n&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='b_n' title='b_n' class='latex' /> are the components of the vector (features of the document, or TF-IDF values for each word of the document in our example) and the <img src='http://s.wordpress.com/latex.php?latex=%5Cmathit%7Bn%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\mathit{n}' title='\mathit{n}' class='latex' /> is the dimension of the vectors:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5Csum_%7Bi%3D1%7D%5En%20a_ib_i%20%3D%20a_1b_1%20%2B%20a_2b_2%20%2B%20%5Ccdots%20%2B%20a_nb_n%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='  \vec{a} \cdot \vec{b} = \sum_{i=1}^n a_ib_i = a_1b_1 + a_2b_2 + \cdots + a_nb_n   ' title='  \vec{a} \cdot \vec{b} = \sum_{i=1}^n a_ib_i = a_1b_1 + a_2b_2 + \cdots + a_nb_n   ' class='latex' />
<p>As you can see, the definition of the dot product is a simple multiplication of each component from the both vectors added together. See an example of a dot product for two vectors with 2 dimensions each (2D):</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%5Cvec%7Ba%7D%20%3D%20%280%2C%203%29%20%5C%5C%20%20%20%5Cvec%7Bb%7D%20%3D%20%284%2C%200%29%20%5C%5C%20%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%200%2A4%20%2B%203%2A0%20%3D%200%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='  \vec{a} = (0, 3) \\   \vec{b} = (4, 0) \\   \vec{a} \cdot \vec{b} = 0*4 + 3*0 = 0  ' title='  \vec{a} = (0, 3) \\   \vec{b} = (4, 0) \\   \vec{a} \cdot \vec{b} = 0*4 + 3*0 = 0  ' class='latex' />
<p>The first thing you probably noticed is that the result of a dot product between two vectors isn&#8217;t another vector but a single value, a scalar.</p>
<p>This is all very simple and easy to understand, but what is a dot product ? What is the intuitive idea behind it ? What does it mean to have a dot product of zero ? To understand it, we need to understand what is the geometric definition of the dot product:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%5Ccos%7B%5Ctheta%7D%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='  \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta}  ' title='  \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta}  ' class='latex' />
<p>Rearranging the equation to understand it better using the commutative property, we have:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5C%7C%5Cvec%7Bb%7D%5C%7C%5C%7C%5Cvec%7Ba%7D%5C%7C%5Ccos%7B%5Ctheta%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \vec{a} \cdot \vec{b} = \|\vec{b}\|\|\vec{a}\|\cos{\theta}   ' title='   \vec{a} \cdot \vec{b} = \|\vec{b}\|\|\vec{a}\|\cos{\theta}   ' class='latex' />
<p>So, what is the term <img src='http://s.wordpress.com/latex.php?latex=%5Cdisplaystyle%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5Ccos%7B%5Ctheta%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\displaystyle \|\vec{a}\|\cos{\theta}' title='\displaystyle \|\vec{a}\|\cos{\theta}' class='latex' /> ? This term is the projection of the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Ba%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{a}' title='\vec{a}' class='latex' /> into the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b}' title='\vec{b}' class='latex' /> as shown on the image below:</p>
<div id="attachment_2560" style="width: 310px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/Dot_Product.png" rel="lightbox[2497]"><img class="size-full wp-image-2560" title="Dot_Product" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/Dot_Product.png" alt="" width="300" height="240" /></a><p class="wp-caption-text">The projection of the vector A into the vector B. By Wikipedia.</p></div>
<p>Now, what happens when the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Ba%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{a}' title='\vec{a}' class='latex' /> is orthogonal (with an angle of 90 degrees) to the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b}' title='\vec{b}' class='latex' /> like on the image below ?</p>
<div id="attachment_2580" style="width: 249px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vectors1.gif" rel="lightbox[2497]"><img class="size-full wp-image-2580" title="vectors1" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vectors1.gif" alt="" width="239" height="238" /></a><p class="wp-caption-text">Two orthogonal vectors (with 90 degrees angle).</p></div>
<p>There will be no adjacent side on the triangle, it will be equivalent to zero, the term <img src='http://s.wordpress.com/latex.php?latex=%5Cdisplaystyle%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5Ccos%7B%5Ctheta%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\displaystyle \|\vec{a}\|\cos{\theta}' title='\displaystyle \|\vec{a}\|\cos{\theta}' class='latex' /> will be zero and the resulting multiplication with the magnitude of the vector <img src='http://s.wordpress.com/latex.php?latex=%5Cvec%7Bb%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\vec{b}' title='\vec{b}' class='latex' /> will also be zero. Now you know that, when the dot product between two different vectors is zero, they are orthogonal to each other (they have an angle of 90 degrees), this is a very neat way to check the orthogonality of different vectors. It is also important to note that we are using 2D examples, but the most amazing fact about it is that we can also calculate angles and similarity between vectors in higher dimensional spaces, and that is why math let us see far than the obvious even when we can&#8217;t visualize or imagine what is the angle between two vectors with twelve dimensions for instance.</p>
<h2>The Cosine Similarity</h2>
<p>The cosine similarity between two vectors (or two documents on the Vector Space) is a measure that calculates the cosine of the angle between them. This metric is a measurement of orientation and not magnitude, it can be seen as a comparison between documents on a normalized space because we&#8217;re not taking into the consideration only the magnitude of each word count (tf-idf) of each document, but the angle between the documents. What we have to do to build the cosine similarity equation is to solve the equation of the dot product for the <img src='http://s.wordpress.com/latex.php?latex=%5Ccos%7B%5Ctheta%7D&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\cos{\theta}' title='\cos{\theta}' class='latex' />:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Cdisplaystyle%20%20%20%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%20%3D%20%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%5Ccos%7B%5Ctheta%7D%20%5C%5C%20%20%20%5Ccos%7B%5Ctheta%7D%20%3D%20%5Cfrac%7B%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%7D%7B%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \displaystyle   \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta} \\   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' title='   \displaystyle   \vec{a} \cdot \vec{b} = \|\vec{a}\|\|\vec{b}\|\cos{\theta} \\   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' class='latex' />
<p>And that is it, this is the cosine similarity formula. Cosine Similarity will generate a metric that says how related are two documents by looking at the angle instead of magnitude, like in the examples below:</p>
<div id="attachment_2599" style="width: 900px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/cosinesimilarityfq1.png" rel="lightbox[2497]"><img class="size-full wp-image-2599" title="cosinesimilarityfq1" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/cosinesimilarityfq1.png" alt="" width="890" height="250" /></a><p class="wp-caption-text">The Cosine Similarity values for different documents, 1 (same direction), 0 (90 deg.), -1 (opposite directions).</p></div>
<p>Note that even if we had a vector pointing to a point far from another vector, they still could have an small angle and that is the central point on the use of Cosine Similarity, the measurement tends to ignore the higher term count on documents. Suppose we have a document with the word &#8220;sky&#8221; appearing 200 times and another document with the word &#8220;sky&#8221; appearing 50, the Euclidean distance between them will be higher but the angle will still be small because they are pointing to the same direction, which is what matters when we are comparing documents.</p>
<p>Now that we have a Vector Space Model of documents (like on the image below) modeled as vectors (with TF-IDF counts) and also have a formula to calculate the similarity between different documents in this space, let&#8217;s see now how we do it in practice using <a href="http://scikit-learn.org" title="Scikit-Learn" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-learn.org');">scikit-learn (sklearn)</a>.</p>
<div id="attachment_2582" style="width: 514px" class="wp-caption aligncenter"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vector_space.png" rel="lightbox[2497]"><img class=" wp-image-2582 " title="vector_space" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2013/09/vector_space.png" alt="" width="504" height="378" /></a><p class="wp-caption-text">Vector Space Model</p></div>
<h2>Practice Using Scikit-learn (sklearn)</h2>
<p>* In this tutorial I&#8217;m using the Python 2.7.5 and Scikit-learn 0.14.1.</p>
<p>The first thing we need to do is to define our set of example documents:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="python codecolorer">documents = <span class="br0">&#40;</span><br />
<span class="st0">&quot;The sky is blue&quot;</span>,<br />
<span class="st0">&quot;The sun is bright&quot;</span>,<br />
<span class="st0">&quot;The sun in the sky is bright&quot;</span>,<br />
<span class="st0">&quot;We can see the shining sun, the bright sun&quot;</span><br />
<span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>And then we instantiate the Sklearn TF-IDF Vectorizer and transform our documents into the TF-IDF matrix:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br /></div></td><td><div class="python codecolorer"><span class="kw1">from</span> sklearn.<span class="me1">feature_extraction</span>.<span class="me1">text</span> <span class="kw1">import</span> TfidfVectorizer<br />
tfidf_vectorizer = TfidfVectorizer<span class="br0">&#40;</span><span class="br0">&#41;</span><br />
tfidf_matrix = tfidf_vectorizer.<span class="me1">fit_transform</span><span class="br0">&#40;</span>documents<span class="br0">&#41;</span><br />
<span class="kw1">print</span> tfidf_matrix.<span class="me1">shape</span><br />
<span class="br0">&#40;</span><span class="nu0">4</span>, <span class="nu0">11</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>Now we have the TF-IDF matrix (<strong>tfidf_matrix</strong>) for each document (the number of rows of the matrix) with 11 tf-idf terms (the number of columns from the matrix), we can calculate the Cosine Similarity between the first document (&#8220;The sky is blue&#8221;) with each of the other documents of the set:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br /></div></td><td><div class="python codecolorer"><span class="kw1">from</span> sklearn.<span class="me1">metrics</span>.<span class="me1">pairwise</span> <span class="kw1">import</span> cosine_similarity<br />
cosine_similarity<span class="br0">&#40;</span>tfidf_matrix<span class="br0">&#91;</span><span class="nu0">0</span>:<span class="nu0">1</span><span class="br0">&#93;</span>, tfidf_matrix<span class="br0">&#41;</span><br />
<span class="kw3">array</span><span class="br0">&#40;</span><span class="br0">&#91;</span><span class="br0">&#91;</span> <span class="nu0">1</span>.        ,  <span class="nu0">0.36651513</span>,  <span class="nu0">0.52305744</span>,  <span class="nu0">0.13448867</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>The <strong>tfidf_matrix[0:1] </strong>is the Scipy operation to get the first row of the sparse matrix and the resulting array is the Cosine Similarity between the first document with all documents in the set. Note that the first value of the array is 1.0 because it is the Cosine Similarity between the first document with itself. Also note that due to the presence of similar words on the third document (&#8220;The sun in the sky is bright&#8221;), it achieved a better score.</p>
<p>If you want, you can also solve the Cosine Similarity for the angle between vectors:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Ccos%7B%5Ctheta%7D%20%3D%20%5Cfrac%7B%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%7D%7B%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' title='   \cos{\theta} = \frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}   ' class='latex' />
<p>We only need to isolate the angle (<img src='http://s.wordpress.com/latex.php?latex=%5Ctheta&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\theta' title='\theta' class='latex' />) and move the <img src='http://s.wordpress.com/latex.php?latex=%5Ccos&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\cos' title='\cos' class='latex' /> to the right hand of the equation:</p>
<img src='http://s.wordpress.com/latex.php?latex=%20%20%20%5Ctheta%20%3D%20%5Carccos%7B%5Cfrac%7B%5Cvec%7Ba%7D%20%5Ccdot%20%5Cvec%7Bb%7D%7D%7B%5C%7C%5Cvec%7Ba%7D%5C%7C%5C%7C%5Cvec%7Bb%7D%5C%7C%7D%7D%20%20%20&#038;bg=ffffff&#038;fg=000000&#038;s=1' alt='   \theta = \arccos{\frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}}   ' title='   \theta = \arccos{\frac{\vec{a} \cdot \vec{b}}{\|\vec{a}\|\|\vec{b}\|}}   ' class='latex' />
<p>The <img src='http://s.wordpress.com/latex.php?latex=%5Carccos&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\arccos' title='\arccos' class='latex' /> is the same as the inverse of the cosine (<img src='http://s.wordpress.com/latex.php?latex=%5Ccos%5E-1&#038;bg=ffffff&#038;fg=000000&#038;s=0' alt='\cos^-1' title='\cos^-1' class='latex' />).</p>
<div> Lets for instance, check the angle between the first and third documents:</div>
<div></div>
<div>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="python codecolorer"><span class="kw1">import</span> <span class="kw3">math</span><br />
<span class="co1"># This was already calculated on the previous step, so we just use the value</span><br />
cos_sim = <span class="nu0">0.52305744</span><br />
angle_in_radians = <span class="kw3">math</span>.<span class="me1">acos</span><span class="br0">&#40;</span>cos_sim<span class="br0">&#41;</span><br />
<span class="kw1">print</span> <span class="kw3">math</span>.<span class="me1">degrees</span><span class="br0">&#40;</span>angle_in_radians<span class="br0">&#41;</span><br />
<span class="nu0">58.462437107432784</span></div></td></tr></tbody></table></div>
<div> And that angle of ~58.5 is the angle between the first and the third document of our document set.</div>
</div>
<div></div>
<div>That is it, I hope you liked this third tutorial !</div>
<div></div>
<h2>Related Material</h2>
<p><a href="https://www.khanacademy.org/math/linear-algebra/vectors_and_spaces/dot_cross_products/v/dot-and-cross-product-comparison-intuition" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.khanacademy.org');">A video about Dot Product on The Khan Academy</a></p>
<p><a href="http://en.wikipedia.org/wiki/Dot_product" title="Wikipedia :: Dot Product" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Wikipedia: Dot Product</a></p>
<p><a href="http://en.wikipedia.org/wiki/Cosine_similarity" title="Wikipedia: Cosine Similarity" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/en.wikipedia.org');">Wikipedia: Cosine Similarity</a></p>
<p><a href="http://scikit-learn.org" title="Scikit-Learn Site" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/scikit-learn.org');">Scikit-learn (sklearn)</a> &#8211; The <em>de facto</em> Machine Learning package for Python</p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>September 12th, 2013</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2497#comments">5 Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=cosine" rel="tag">cosine</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=cosine-similarity" rel="tag">cosine similarity</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=machine-learning-2" rel="tag">machine learning</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=sklearn" rel="tag">sklearn</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=tf-idf" rel="tag">tf-idf</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=vector-space-model" rel="tag">vector space model</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=vsm" rel="tag">vsm</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-2232 post type-post status-publish format-standard hentry category-programming-2 category-python tag-hp-cloud tag-hpcloud tag-nova tag-openstack tag-programming tag-python tag-requests" id="post-2232">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=2232" title="Permanent Link to Accessing HP Cloud OpenStack Nova using Python and Requests">Accessing HP Cloud OpenStack Nova using Python and Requests</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2232" data-text="Accessing HP Cloud OpenStack Nova using Python and Requests" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D2232&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=2232";
			reddit_title = "Accessing HP Cloud OpenStack Nova using Python and Requests";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=2232" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=2232"></g:plusone></div></div><p>So, my request to enter on the free and private beta season of the new HP Cloud Services was gently accepted by the <a href="https://twitter.com/hpcloud" title="Twitter :: hpcloud" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/twitter.com');">HP Cloud team</a>, and today I finally got some time to play with the OpenStack API at HP Cloud. I&#8217;ll start with the first impressions I had with the service:</p>
<p>The user interface of the management is very user-friendly, the design is much like of the Twitter Bootstrap, see the screenshot below of the &#8220;Compute&#8221; page from the &#8220;Manage&#8221; section:</p>
<p style="text-align: center;"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/compute_images_xss.png" rel="lightbox[2232]"><img class="aligncenter size-full wp-image-2248" title="compute_images_xss" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/compute_images_xss.png" alt="" width="540" height="307" /></a></p>
<p>As you can see, they have a set of 4 Ubuntu images and a CentOS, I think that since they are still in the beta period, soon we&#8217;ll have more default images to use.</p>
<p>Here is a screenshot of the instance size set:</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/compute_sizes_ss.png" rel="lightbox[2232]"><img class="aligncenter size-full wp-image-2239" title="compute_sizes_ss" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/compute_sizes_ss.png" alt="" width="428" height="178" /></a></p>
<p>Since they are using OpenStack, I really think that they should have imported the vocabulary of the OpenStack into the user interface, and instead of calling it &#8220;Size&#8221;, it would be more sensible to use &#8220;<a href="http://docs.openstack.org/cactus/openstack-compute/developer/openstack-compute-api-1.1/content/ch04s04.html" title="OpenStack :: Wiki :: Flavour" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/docs.openstack.org');">Flavour</a>&#8220;.</p>
<p>The user interface still doesn&#8217;t have many features, something that I would really like to have is a &#8220;Stop&#8221; or something like that for the instances, only the &#8220;Terminate&#8221; function is present on the Manage interface, but those are details that they should be still working on since they&#8217;re only in beta.</p>
<p>Another important info to cite is that the access to the instances are done through SSH using a generated RSA key that they provide to you.</p>
<p>Let&#8217;s dig into the OpenStack API now.</p>
<h2>OpenStack API</h2>
<p>To access the OpenStack API you&#8217;ll need the credentials for the authentication, HP Cloud services provide these keys on the Manage interface for each zone/service you have, see the screenshot below (with keys <em>anonymized</em> of course):</p>
<p><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/api_keys_ss.png" rel="lightbox[2232]"><img class="aligncenter size-full wp-image-2255" title="api_keys_ss" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/api_keys_ss.png" alt="" width="672" height="187" /></a>Now, <a href="http://docs.openstack.org/api/openstack-compute/1.1/content/Authentication-d1e444.html" title="OpenStack :: Authentication" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/docs.openstack.org');">OpenStack authentication</a> could be done in different schemes, the scheme that I know that HP supports is the token authentication. I know that there is a lot of clients already supporting the OpenStack API (some have no documentation, some have weird API design, etc.), but the aim of this post is to show how easy would be to create a simple interface to access the OpenStack API using Python and <a href="http://docs.python-requests.org/" title="Python Requests" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/docs.python-requests.org');">Requests</a> (HTTP for Humans !).</p>
<p>Let&#8217;s start defining our authentication scheme by sub-classing Requests <strong>AuthBase</strong>:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br /></div></td><td><div class="python codecolorer"><span class="kw1">class</span> OpenStackAuth<span class="br0">&#40;</span>AuthBase<span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; <span class="kw1">def</span> <span class="kw4">__init__</span><span class="br0">&#40;</span><span class="kw2">self</span>, auth_user, auth_key<span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">self</span>.<span class="me1">auth_key</span> = auth_key<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">self</span>.<span class="me1">auth_user</span> = auth_user<br />
<br />
<span class="kw1">def</span> <span class="kw4">__call__</span><span class="br0">&#40;</span><span class="kw2">self</span>, r<span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; r.<span class="me1">headers</span><span class="br0">&#91;</span><span class="st0">'X-Auth-User'</span><span class="br0">&#93;</span> = <span class="kw2">self</span>.<span class="me1">auth_user</span><br />
&nbsp; &nbsp; r.<span class="me1">headers</span><span class="br0">&#91;</span><span class="st0">'X-Auth-Key'</span><span class="br0">&#93;</span> = <span class="kw2">self</span>.<span class="me1">auth_key</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> r</div></td></tr></tbody></table></div>
<p>As you can see, we&#8217;re defining the X-Auth-User and the X-Auth-Key in the header of the request with the parameters. These parameters are respectively your Account ID and  Access Key we cited earlier. Now, all you have to do is to make the request itself using the authentication scheme, which is pretty easy using Requests:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br /></div></td><td><div class="python codecolorer">ENDPOINT_URL = <span class="st0">'https://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/'</span><br />
ACCESS_KEY = <span class="st0">'Your Access Key'</span><br />
ACCOUNT_ID = <span class="st0">'Your Account ID'</span><br />
response = requests.<span class="me1">get</span><span class="br0">&#40;</span>ENDPOINT_URL, auth=OpenStackAuth<span class="br0">&#40;</span>ACCOUNT_ID, ACCESS_KEY<span class="br0">&#41;</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p>And that is it, you&#8217;re done with the authentication mechanism using just a few lines of code, and this is how the request is going to be sent to the HP Cloud service server:</p>
<p style="text-align: center;"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/auth_request.png" rel="lightbox[2232]"><img class="aligncenter size-full wp-image-2260" style="border: 0pt none;" title="auth_request" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/auth_request.png" alt="" width="464" height="314" /></a></p>
<p> This request is sent to the HP Cloud Endpoint URL (https://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/). Let&#8217;s see now how the server answered this authentication request:</p>
<p style="text-align: center;"><a href="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/auth_response.png" rel="lightbox[2232]"><img class="aligncenter size-full wp-image-2264" style="border: 0pt none;" title="auth_response" src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2012/02/auth_response.png" alt="" width="478" height="314" /></a></p>
<p style="text-align: left;">You can show this authentication response using Requests by printing the <strong>header</strong> attribute of the request Response object. You can see that the server answered our request with two important header items: X-Server-Management-URL and the X-Auth-Token. The management URL is now our new endpoint, is the URL we should use to do further requests to the HP Cloud services and the X-Auth-Token is the authentication Token that the server generated based on our credentials, these tokens are usually valid for 24 hours, although I haven&#8217;t tested it.</p>
<p style="text-align: left;">What we need to do now is to sub-class the Requests AuthBase class again but this time defining only the authentication token that we need to use on each new request we&#8217;re going to make to the management URL:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br /></div></td><td><div class="python codecolorer"><span class="kw1">class</span> OpenStackAuthToken<span class="br0">&#40;</span>AuthBase<span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; <span class="kw1">def</span> <span class="kw4">__init__</span><span class="br0">&#40;</span><span class="kw2">self</span>, request<span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw2">self</span>.<span class="me1">auth_token</span> = request.<span class="me1">headers</span><span class="br0">&#91;</span><span class="st0">'x-auth-token'</span><span class="br0">&#93;</span><br />
<br />
<span class="kw1">def</span> <span class="kw4">__call__</span><span class="br0">&#40;</span><span class="kw2">self</span>, r<span class="br0">&#41;</span>:<br />
&nbsp; &nbsp; r.<span class="me1">headers</span><span class="br0">&#91;</span><span class="st0">'X-Auth-Token'</span><span class="br0">&#93;</span> = <span class="kw2">self</span>.<span class="me1">auth_token</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> r</div></td></tr></tbody></table></div>
<p style="text-align: left;">Note that the OpenStackAuthToken is receiving now a response request as parameter, copying the X-Auth-Token and setting it on the request.</p>
<p style="text-align: left;">Let&#8217;s consume a service from the OpenStack API v.1.1, I&#8217;m going to call the <a href="http://docs.openstack.org/api/openstack-compute/1.1/content/List_Servers-d1e2078.html" title="OpenStack :: API :: List Servers" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/docs.openstack.org');">List Servers API</a> function, parse the results using JSON and then show the results on the screen:</p>
<div class="codecolorer-container python default" style="overflow:auto;white-space:nowrap;width:590px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br /></div></td><td><div class="python codecolorer"><span class="co1"># Get the management URL from the response header</span><br />
mgmt_url = response.<span class="me1">headers</span><span class="br0">&#91;</span><span class="st0">'x-server-management-url'</span><span class="br0">&#93;</span><br />
<br />
<span class="co1"># Create a new request to the management URL using the /servers path</span><br />
<span class="co1"># and the OpenStackAuthToken scheme we created</span><br />
r_server = requests.<span class="me1">get</span><span class="br0">&#40;</span>mgmt_url + <span class="st0">'/servers'</span>, auth=OpenStackAuthToken<span class="br0">&#40;</span>response<span class="br0">&#41;</span><span class="br0">&#41;</span><br />
<br />
<span class="co1"># Parse the response and show it to the screen</span><br />
json_parse = json.<span class="me1">loads</span><span class="br0">&#40;</span>r_server.<span class="me1">text</span><span class="br0">&#41;</span><br />
<span class="kw1">print</span> json.<span class="me1">dumps</span><span class="br0">&#40;</span>json_parse, indent=<span class="nu0">4</span><span class="br0">&#41;</span></div></td></tr></tbody></table></div>
<p style="text-align: left;">And this is what we get in response to this request:</p>
<div class="codecolorer-container text default" style="overflow:auto;white-space:nowrap;width:590px;height:400px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td class="line-numbers"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br />25<br />26<br />27<br />28<br />29<br />30<br />31<br />32<br />33<br />34<br /></div></td><td><div class="text codecolorer">{<br />
&nbsp; &nbsp; &quot;servers&quot;: [<br />
&nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;id&quot;: 22378,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;uuid&quot;: &quot;e2964d51-fe98-48f3-9428-f3083aa0318e&quot;,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;links&quot;: [<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;href&quot;: &quot;https://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/20817201684751/servers/22378&quot;,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;rel&quot;: &quot;self&quot;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;href&quot;: &quot;https://az-1.region-a.geo-1.compute.hpcloudsvc.com/20817201684751/servers/22378&quot;,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;rel&quot;: &quot;bookmark&quot;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;name&quot;: &quot;Server 22378&quot;<br />
&nbsp; &nbsp; &nbsp; &nbsp; },<br />
&nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;id&quot;: 11921,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;uuid&quot;: &quot;312ff473-3d5d-433e-b7ee-e46e4efa0e5e&quot;,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;links&quot;: [<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;href&quot;: &quot;https://az-1.region-a.geo-1.compute.hpcloudsvc.com/v1.1/20817201684751/servers/11921&quot;,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;rel&quot;: &quot;self&quot;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;href&quot;: &quot;https://az-1.region-a.geo-1.compute.hpcloudsvc.com/20817201684751/servers/11921&quot;,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;rel&quot;: &quot;bookmark&quot;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ],<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;name&quot;: &quot;Server 11921&quot;<br />
&nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; ]<br />
}</div></td></tr></tbody></table></div>
<p style="text-align: left;">And that is it, now you know how to use Requests and Python to consume OpenStack API. If you wish to read more information about the API and how does it works, you can read the <a href="http://docs.openstack.org/" title="OpenStack :: Documentation" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/docs.openstack.org');">documentation here</a>.</p>
<p style="text-align: left;"><em>- Christian S. Perone</em></p>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>February 2nd, 2012</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=2232#comments">5 Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=hp-cloud" rel="tag">HP Cloud</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=hpcloud" rel="tag">hpcloud</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=nova" rel="tag">Nova</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=openstack" rel="tag">OpenStack</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=programming" rel="tag">programming</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=python" rel="tag">Python</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=requests" rel="tag">Requests</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

						<div class="post-1549 post type-post status-publish format-standard hentry category-programming-2 tag-c tag-c0x tag-cpp" id="post-1549">
				<div class="post-title"><h2><a href="http://pyevolve.sourceforge.net/wordpress/?p=1549" title="Permanent Link to C++0x :: Introduction to some amazing features">C++0x :: Introduction to some amazing features</a></h2></div>
				
				<div class="post-content">
					<div class="socialize-in-content" style="float:right;"><div class="socialize-in-button socialize-in-button-right"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://pyevolve.sourceforge.net/wordpress/?p=1549" data-text="C++0x :: Introduction to some amazing features" data-count="vertical" data-via="socializeWP" ><!--Tweetter--></a></div><div class="socialize-in-button socialize-in-button-right"><iframe src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpyevolve.sourceforge.net%2Fwordpress%2F%3Fp%3D1549&amp;send=false&amp;layout=box_count&amp;width=50&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=arial&amp;height=65" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:50px; height:65px;" allowTransparency="true"></iframe></div><div class="socialize-in-button socialize-in-button-right"><script type="text/javascript">
			<!-- 
			reddit_url = "http://pyevolve.sourceforge.net/wordpress/?p=1549";
			reddit_title = "C++0x :: Introduction to some amazing features";	//-->
		</script><script type="text/javascript" src="http://www.reddit.com/static/button/button2.js"></script></div><div class="socialize-in-button socialize-in-button-right"><script type="in/share" data-url="http://pyevolve.sourceforge.net/wordpress/?p=1549" data-counter="top"></script></div><div class="socialize-in-button socialize-in-button-right"><g:plusone size="tall" href="http://pyevolve.sourceforge.net/wordpress/?p=1549"></g:plusone></div></div><p>I&#8217;ve made those slides in March of this year to a training session, I was expecting to get time to update it to cover more features but I wasn&#8217;t able to do that yet, so I&#8217;m publishing it here for those who are interested in some of the new language features.</p>
<div style="width:510px" id="__ss_8719467"> <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/perone/c0x-introduction-to-some-amazing-features" title="C++0x :: Introduction to some amazing features" target="_blank" onclick="javascript:pageTracker._trackPageview ('/outbound/www.slideshare.net');">C++0x :: Introduction to some amazing features</a></strong> <iframe src="http://www.slideshare.net/slideshow/embed_code/8719467?rel=0" width="510" height="426" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe> </div>
									</div>

				<div class="post-metas">
					<dl>
						<dt><span>Author name:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?author=1" title="Posts by Christian S. Perone" rel="author">Christian S. Perone</a></dd>
						
												<dt><span>Publish date:</span></dt>
						<dd>July 28th, 2011</dd>						
						
												<dt><span>Discussion:</span></dt>
						<dd>
														<a href="http://pyevolve.sourceforge.net/wordpress/?p=1549#respond">No Comments</a>
						</dd>
						
						
												<dt><span>Tags:</span></dt>
						<dd><a href="http://pyevolve.sourceforge.net/wordpress/?tag=c" rel="tag">c</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=c0x" rel="tag">c++0x</a><br /><a href="http://pyevolve.sourceforge.net/wordpress/?tag=cpp" rel="tag">cpp</a> </dd>
											</dl>

									</div>

				<div class="clear"></div>
			</div>

			
			<div class="page-navigation">
				<div class="left"></div>
				<div class="right"></div>
				<div class="clear"></div>
			</div>

					</div>
		<!-- End: Content -->

		<!-- Start: Widget area -->
		<div class="widget-area">
			<div class="widgets-wrap">
				<div id="widget-box-1" class="footer-widget-box">
					<ul>
						<li class="widget"><h2 class="widgettitle">Author</h2>			<div class="textwidget"><img src="http://pyevolve.sourceforge.net/wordpress/wp-content/uploads/2010/05/myself_thumb.png" style="margin:7px;"><br />
My name is Christian S. Perone, I'm currently living in Porto Alegre, Brasil.<br>This blog is the result of my personal research on some of my interest areas.<br><br></div>
		</li><!-- Wordpress Popular Posts Plugin v2.1.4 [W] [monthly] [regular] -->
<li class="widget">
<h2 class="widgettitle">Popular Posts</h2><ul>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=1589" title="Machine Learning :: Text feature extraction (tf-idf) - Part I"><span class="wpp-post-title">Machine Learning :: Text feature extraction (tf-idf) - Part I</span></a>  <span class="post-stats"><span class="wpp-comments">46  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2497" title="Machine Learning :: Cosine Similarity for Vector Space Models (Part III)"><span class="wpp-post-title">Machine Learning :: Cosine Similarity for Vector Space Models (Part III)</span></a>  <span class="post-stats"><span class="wpp-comments">5  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2711" title="Simple and effective coin segmentation using Python and OpenCV"><span class="wpp-post-title">Simple and effective coin segmentation using Python and OpenCV</span></a>  <span class="post-stats"><span class="wpp-comments">1  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=1747" title="Machine Learning :: Text feature extraction (tf-idf) - Part II"><span class="wpp-post-title">Machine Learning :: Text feature extraction (tf-idf) - Part II</span></a>  <span class="post-stats"><span class="wpp-comments">40  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2383" title="Raspberry Pi &amp; Arduino: a laser pointer communication and a LDR voltage sigmoid"><span class="wpp-post-title">Raspberry Pi &amp; Arduino: a laser pointer communication and a LDR voltage sigmoid</span></a>  <span class="post-stats"><span class="wpp-comments">9  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=549" title="Genetic Programming meets Python"><span class="wpp-post-title">Genetic Programming meets Python</span></a>  <span class="post-stats"><span class="wpp-comments">45  comment(s)</span></span> </li>
<li><a href="http://pyevolve.sourceforge.net/wordpress/?p=2433" title="Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)"><span class="wpp-post-title">Rastreamento em tempo real de avioes em Porto Alegre utilizando Raspberry Pi + Radio UHF (SDR RTL2832U)</span></a>  <span class="post-stats"><span class="wpp-comments">16  comment(s)</span></span> </li>

</ul>
</li>
<!-- End Wordpress Popular Posts Plugin v2.1.4 -->
					</ul>
				</div>

				<div id="widget-box-2" class="footer-widget-box">
					<ul>
						<li class="widget"><h2 class="widgettitle">Blogroll</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://acodersmusings.blogspot.com" title="A Coder&#8217;s Musings" target="_blank">A Coder&#8217;s Musings</a></li>
<li><a href="http://automatinginvention.com/" target="_blank">Automating Invetion</a></li>
<li><a href="http://bgarber.notapipe.org/blog/feed/" title="Bryan Garber&#8217;s Blog" target="_blank">Bryan Garber&#039;s Blog</a></li>
<li><a href="http://geneticargonaut.blogspot.com/" target="_blank">Genetic Argonaut</a></li>
<li><a href="http://www.illigal.uiuc.edu/web/blog/" target="_blank">IlliGAL Blog</a></li>
<li><a href="http://www.inthehaystack.com" rel="friend" title="Boris Gorelik on data visualization and presentation" target="_blank">In the haystack</a></li>
<li><a href="http://leandron.wordpress.com" title="Leandro Nunes Blog" target="_blank">Leandro Nunes Blog</a></li>
<li><a href="http://lorenzoriano.wordpress.com/" rel="friend" title="Lorenzo Riano &#8211; Fantastic Machines" target="_blank">Lorenzo Riano &#8211; Fantastic Machines</a></li>
<li><a href="http://www.sigevolution.org/" title="SIGEVOlution Newsletter" target="_blank">SIGEVOlution Newsletter</a></li>
<li><a href="http://togelius.blogspot.com/" target="_blank">Togelius</a></li>
<li><a href="http://www.xavierllora.net/" target="_blank">Xavier Llora</a></li>
<li><a href="http://blogs.nyu.edu/blogs/agc282/zia/" target="_blank">Zero Intelligence Agents Blog</a></li>

	</ul>
</li>
<li class="widget"><h2 class="widgettitle">Pyevolve</h2>
	<ul class='xoxo blogroll'>
<li><a href="http://pyevolve.sourceforge.net" title="Pyevolve Documentation Site">Pyevolve Documentation Site</a></li>

	</ul>
</li>
		<li class="widget">		<h2 class="widgettitle">Recent Posts</h2>		<ul>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2711">Simple and effective coin segmentation using Python and OpenCV</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2703">Despesas de Custeio e Lei de Benford</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2676">Universality, primes and space communication</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2654">The beauty of Bitcoin P2P network</a>
						</li>
					<li>
				<a href="http://pyevolve.sourceforge.net/wordpress/?p=2649">Protocoin &#8211; a pure Python Bitcoin protocol implementation</a>
						</li>
				</ul>
		</li><li class="widget"><h2 class="widgettitle">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments">Karthik on <a href="http://pyevolve.sourceforge.net/wordpress/?p=1747&#038;cpage=1#comment-17349">Machine Learning :: Text feature extraction (tf-idf) &#8211; Part II</a></li><li class="recentcomments"><a href="http://google.com" rel='external nofollow' class='url' onclick="javascript:pageTracker._trackPageview ('/outbound/google.com');">John Anderton</a> on <a href="http://pyevolve.sourceforge.net/wordpress/?p=1747&#038;cpage=1#comment-17347">Machine Learning :: Text feature extraction (tf-idf) &#8211; Part II</a></li><li class="recentcomments">purna on <a href="http://pyevolve.sourceforge.net/wordpress/?p=1589&#038;cpage=1#comment-17345">Machine Learning :: Text feature extraction (tf-idf) &#8211; Part I</a></li><li class="recentcomments"><a href="http://pytools.codeplex.com" rel='external nofollow' class='url' onclick="javascript:pageTracker._trackPageview ('/outbound/pytools.codeplex.com');">sm</a> on <a href="http://pyevolve.sourceforge.net/wordpress/?p=2711&#038;cpage=1#comment-17344">Simple and effective coin segmentation using Python and OpenCV</a></li><li class="recentcomments">Jonathan on <a href="http://pyevolve.sourceforge.net/wordpress/?p=2383&#038;cpage=1#comment-17342">Raspberry Pi &#038; Arduino: a laser pointer communication and a LDR voltage sigmoid</a></li></ul></li>					</ul>
				</div>

				<div id="widget-box-3" class="footer-widget-box">
					<ul>
						<li class="widget"><h2 class="widgettitle">Meta</h2>			<ul>
						<li><a href="http://pyevolve.sourceforge.net/wordpress/wp-login.php">Log in</a></li>
			<li><a href="http://pyevolve.sourceforge.net/wordpress/?feed=rss2" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://pyevolve.sourceforge.net/wordpress/?feed=comments-rss2" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>						</ul>
</li><li class="widget"><form role="search" method="get" id="searchform" class="searchform" action="http://pyevolve.sourceforge.net/wordpress/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li class="widget"><h2 class="widgettitle">Categories</h2>		<ul>
	<li class="cat-item cat-item-9"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=9" title="View all posts filed under Article">Article</a>
</li>
	<li class="cat-item cat-item-282"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=282" title="View all posts filed under Bitcoin">Bitcoin</a>
</li>
	<li class="cat-item cat-item-132"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=132" title="View all posts filed under c">c</a>
</li>
	<li class="cat-item cat-item-224"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=224" title="View all posts filed under CPP">CPP</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=5" title="View all posts filed under Genetic Algorithms">Genetic Algorithms</a>
</li>
	<li class="cat-item cat-item-63"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=63" title="View all posts filed under genetic programming">genetic programming</a>
</li>
	<li class="cat-item cat-item-83"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=83" title="View all posts filed under java">java</a>
</li>
	<li class="cat-item cat-item-170"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=170" title="View all posts filed under LLVM">LLVM</a>
</li>
	<li class="cat-item cat-item-213"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=213" title="View all posts filed under Machine Learning">Machine Learning</a>
</li>
	<li class="cat-item cat-item-180"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=180" title="View all posts filed under Math">Math</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=6" title="View all posts filed under News">News</a>
</li>
	<li class="cat-item cat-item-295"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=295" title="View all posts filed under Open Data">Open Data</a>
</li>
	<li class="cat-item cat-item-18"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=18" title="View all posts filed under Philosophy">Philosophy</a>
</li>
	<li class="cat-item cat-item-200 current-cat"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=200" title="View all posts filed under Programming">Programming</a>
</li>
	<li class="cat-item cat-item-3"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=3" title="View all posts filed under Pyevolve">Pyevolve</a>
</li>
	<li class="cat-item cat-item-101"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=101" title="View all posts filed under pys60">pys60</a>
</li>
	<li class="cat-item cat-item-4"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=4" title="View all posts filed under Python">Python</a>
</li>
	<li class="cat-item cat-item-245"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=245" title="View all posts filed under Raspberry Pi">Raspberry Pi</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=7" title="View all posts filed under Science">Science</a>
</li>
	<li class="cat-item cat-item-67"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=67" title="View all posts filed under Time Waste">Time Waste</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://pyevolve.sourceforge.net/wordpress/?cat=1" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
		</ul>
</li>					</ul>
				</div>
			</div>
		</div>
		<!-- End: Widget area -->

		<!-- Start: Footer -->
		<div id="footer">
			<div class="left">&copy;2014 Copyright by Pyevolve<br />All rights reserved</div>
			<div class="right"><a href="http://blogsessive.com/blogging-tools/typominima-typography-minimal-wordpress-theme/" title="Typominima WordPress Theme" target="_blank">Typominima</a> theme by <a href="http://qbkl.net" target="_blank" title="Blog design studio">QBKL</a> &amp; <a href="http://blogsessive.com" target="_blank" title="Blog tips">Blogsessive</a><br />Built with <a href="http://cufon.shoqolate.com/" target="_blank">Cuf&#243;n</a> &amp; <a href="http://www.fontsquirrel.com/fonts/TypoSlabserif-Light" target="_blank">TypoSlabserif</a></div>
			<div class="clear"></div>
		</div>
		<!-- End: Footer -->

	</div>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.7.1'></script>
<script type='text/javascript' src='http://platform.linkedin.com/in.js?ver=3.7.1'></script>
<script type='text/javascript' src='http://pyevolve.sourceforge.net/wordpress/wp-content/plugins/socialize/frontend/js/plusone.js?ver=3.7.1'></script>
</body>
</html>
