http://gary-rowe.com/agilestack/2012/10/09/how-to-deploy-a-dropwizard-project-to-heroku/
HTTP/1.1 200 OK
Server: GitHub.com
Date: Thu, 24 Jul 2014 04:20:51 GMT
Content-Type: text/html; charset=utf-8
Last-Modified: Sat, 19 Jul 2014 08:20:54 GMT
Connection: close
Expires: Thu, 24 Jul 2014 04:30:51 GMT
Cache-Control: max-age=600
Vary: Accept-Encoding
Content-Encoding: gzip

<html lang="en">
<head>
  <meta charset="utf-8">

<title>How to deploy a Dropwizard project to Heroku
</title>

<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="">
<meta name="author" content="">

<link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css" rel="stylesheet">
<link href="/css/docs.css" rel="stylesheet">
<link href="/css/syntax.css" rel="stylesheet">

<link rel="shortcut icon" href="/favicon.ico">
<link rel="author" href="https://plus.google.com/u/0/115295932487523951663/posts">
</head>

<body data-spy="scroll" data-target=".subnav" data-offset="50">
<div class="navbar navbar-fixed-top">
  <div class="navbar-inner">
	<div class="container">
	  <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
		<span class="icon-bar"></span>
		<span class="icon-bar"></span>
		<span class="icon-bar"></span>
	  </a>
	  <a class="brand" href="http://gary-rowe.github.com">Building better development techniques</a>
	  <div class="nav-collapse">
		<ul class="nav">		  
		  <li class="">
			<a href="/"><i class="icon-home"></i> Home</a>
		  </li>
		  <li class="dropdown">
			<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-comment"></i> Social <b class="caret"></b></a>
				<ul class="dropdown-menu">										
					<li class=""><a href="http://www.twitter.com/agilestack" rel="tooltip" title="Go to twitter.com/agilestack" target="_blank">Twitter</a></li>
					<li class=""><a href="http://github.com/gary-rowe" rel="tooltip" title="Go to github.com/gary-rowe" target="_blank">GitHub</a></li>
					
					<li class=""><a href="http://www.linkedin.com/in/froot" rel="tooltip" title="Go to LinkedIn profile" target="_blank">LinkedIn</a></li>										
					<li class=""><a href="http://stackexchange.com/users/170199/gary-rowe" rel="tooltip" title="Go to Stack Exchange/gary-rowe" target="_blank">Stack Exchange</a></li>
					<li class="divider"></li>
					<li class=""><a href="http://feeds.feedburner.com/agilestack" rel="tooltip" title="Go to feedburner" target="_blank">RSS</a></li>
				</ul>
			 </li>
		<li class="dropdown">
			<a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-list"></i> Projects <b class="caret"></b></a>
				<ul class="dropdown-menu">					
					<li class=""><a href="http://multibit.org" rel="tooltip" title="Go to MultiBit">MultiBit</a></li>
					<li class=""><a href="https://github.com/gary-rowe/MultiBitMerchant" rel="tooltip" title="Go to MultiBit Merchant on GitHub" target="_blank">MultiBit Merchant</a></li>
					<li class=""><a href="https://github.com/gary-rowe/DropwizardOpenID" rel="tooltip" title="Go to Dropwizard OpenID">Dropwizard with OpenID</a></li>
          <li class=""><a href="https://github.com/gary-rowe/DropwizardEmberData" rel="tooltip" title="Go to Dropwizard Ember Data">Dropwizard with Ember Data</a></li>
          <li class=""><a href="https://github.com/timmolter/XChange" rel="tooltip" title="Go to XChange">XChange</a></li>
					<li class=""><a href="http://www.growers-nation.org/" rel="tooltip" title="Go to Growers' Nation">Growers' Nation</a></li>
				</ul>
			 </li>			
		</ul>		
	  </div>
	</div>
  </div>
</div>
<div class="container">
  <div class="content">
	<div class="row">	
	<div class="span12 column">
		<p><h1>How to deploy a Dropwizard project to Heroku
</h1></p>	
	</div>
</div>		
<div class="row">	
	<div class="span3 column">
		<h5><strong>October  9, 2012 <small> | <a href="/agilestack/2012/10/09/how-to-deploy-a-dropwizard-project-to-heroku#disqus_thread" data-disqus-identifier="/agilestack/2012/10/09/how-to-deploy-a-dropwizard-project-to-heroku">Comments</a></small></strong>
		<br/><small>Tags:  <a href="/tags/Dropwizard" target="_blank" title="View posts tagged with &quot;Dropwizard&quot;"><u>Dropwizard</u></a>     <a href="/tags/Heroku" target="_blank" title="View posts tagged with &quot;Heroku&quot;"><u>Heroku</u></a>     <a href="/tags/HowTo" target="_blank" title="View posts tagged with &quot;HowTo&quot;"><u>HowTo</u></a>     <a href="/tags/Tutorial" target="_blank" title="View posts tagged with &quot;Tutorial&quot;"><u>Tutorial</u></a>    </small><br/><br/>
		<!-- Twitter share -->
		<a href="https://twitter.com/share" class="twitter-share-button" data-via="gary-rowe">Tweet</a> 
		<!-- Google+ share -->
		<div class="g-plusone" data-size="medium"></div>
	</div>		
	<div class="span9 column">
		<p class="pull-right"> <a href="/agilestack/2012/09/04/multibit-merchant-cheaper-in-bitcoins" title="Previous Post: MultiBit Merchant: Cheaper in bitcoins"><i class="icon-chevron-left"></i></a> 	    	<a href="/agilestack/2012/10/12/a-gitignore-file-for-intellij-and-eclipse-with-maven" title="Next Post: A .gitignore file for Intellij and Eclipse with Maven
"><i class="icon-chevron-right"></i></a> 	 </p>  
	</div>	
</div>
<div class="row">
	<div class="span12 column">
		<hr>
	</div>
</div>
    <p>The other day I needed to deploy <a href="https://github.com/gary-rowe/MultiBitMerchant">MultiBit Merchant</a> (a <a href="http://dropwizard.codahale.com/">Dropwizard</a> project) on to <a href="http://www.heroku.com/">Heroku</a>. This is all part of <a href="http://gary-rowe.com/agilestack/2012/06/06/multibit-merchant-deployment-driven-design/" title="MultiBit Merchant: Deployment Driven Design?">my continuous deployment strategy</a> and I thought it would be helpful to others if I posted how I managed to get it is all to work.</p>

<h3>Core concepts</h3>

<p>For those not aware of Heroku, here is a quick summary of what it is all about from a Java perspective. </p>

<p>With Heroku you don’t think of deployment in terms of a target cluster, instead you just treat it as a fully automatic deployment script triggered from a git push. If you want to scale your application up then you add more <a href="https://devcenter.heroku.com/articles/dynos">Dynos</a> which are either Web Dynos for application serving the public, or Data Dynos for handling your backend end processes like batch jobs and queue slurping. You can think of a Dyno as a container for a single command with 512Mb of memory available to it by default. For more information you should refer to the excellent <a href="https://devcenter.heroku.com/articles/java">Heroku developer support pages</a> which provide a lot of detail on each process.</p>

<p>So, if you can design your application to run from the command line you’re all good. Fortunately, Dropwizard provides exactly this kind of behaviour out of the box.</p>

<h3>Getting started for the first time</h3>

<p>Most of the time, you will be driving Heroku from the command line. This is done by their <a href="https://devcenter.heroku.com/articles/quickstart">toolkit application <code>heroku</code></a> which provides a lot of handy functionality – it’s a lot quicker than clicking around a website. </p>

<p>In the sections that follow I’m assuming that you’ve got a working Maven build for your Java project (it could be a reactor build) and that you’re working from the command line. Since I work with Unix, I’ll prefix all the commands with the usual $ symbol and assume that you’ve got a working git repository with a Maven build of Dropwizard that works locally.</p>

<h4>1) Add your Heroku SSH keys</h4>

<p>Since this is probably the first time you’ve used Heroku on the local machine, ensure the SSH public key is added to the heroku application:</p>
<div class="highlight"><pre><code class="text language-text">$ heroku keys:add ~/.ssh/id_rsa.pub`
</code></pre></div>
<h4>2) Create Heroku git repo</h4>

<p>This provides the link between Heroku and the local app:</p>
<div class="highlight"><pre><code class="text language-text">$ heroku create`
</code></pre></div>
<h4>3) Rename to something sensible</h4>

<p>At this stage, you’ll want to rename the app. You can do this through the command line, or through the website. If done remotely, you need to resync the local heroku with the remote repo:  </p>
<div class="highlight"><pre><code class="text language-text">$ git remote rm heroku
$ heroku git:remote -a &lt;newname&gt;
</code></pre></div>
<p>See <a href="https://devcenter.heroku.com/articles/renaming-apps">this article about renaming apps</a>.</p>

<h4>4) Add Procfile with $PORT and $JAVA_OPTS</h4>

<p>Ensure the project has a <a href="https://devcenter.heroku.com/articles/procfile">Procfile entry</a> that looks like this for a Dropwizard project:  </p>
<div class="highlight"><pre><code class="text language-text">web    java $JAVA_OPTS -Ddw.http.port=$PORT -Ddw.http.adminPort=$PORT -jar path/to/dw/module/target/example-develop-SNAPSHOT.jar server path/to/dw/module/config-heroku.yml
</code></pre></div>
<p>The Procfile tells Heroku what to do with the project after it has been built (Heroku will assume a Java build if it finds a pom.xml in the project root). You’ll notice that the configuration indicates a single web Dyno and a command line to execute. </p>

<p>Heroku will provide various parameters, such as the (single) server port <strong>and various JVM parameters</strong> through environment variables. This last setting is critical since if not included Heroku will configure the JVM to use the maximum 8Gb heap space. This conflicts with the hard limit of 1.5Gb set by Heroku’s internal watchdog so you end up with the situation that your Java process does not see the need to garbage collect, but gets killed for exceeding its memory allocation. Hat tip to Michael Fairley for pointing this out. </p>

<p>One feature of Dropwizard is that during startup the configuration is read in from a YAML file. Normally this works very well since a different configuration file can be specified for each environment on the command line. However, in the case of Heroku <a href="https://devcenter.heroku.com/articles/config-vars">all parameters are provided as environment variables</a> which require specialised command line handling.</p>

<p>Dropwizard has a feature that <a href="http://dropwizard.codahale.com/manual/core/#id5">allows command line parameters to override the YAML configuration</a> so long as the property paths are prefixed with dw. This comes in handy when it is used in combination with the <code>$VARIABLE</code> notation for Unix environment variables.</p>

<h4>5) Set any custom environment variables</h4>

<p>If you need to add any custom environment variables of your own, the command line is:  </p>
<div class="highlight"><pre><code class="text language-text">heroku config:add FOO=bar
</code></pre></div>
<h3>Standard workflow</h3>

<p>Now that you’re all configured and prepared. This is the normal workflow that you will follow to deploy your application on to Heroku. </p>

<h4>1) Login and update</h4>
<div class="highlight"><pre><code class="text language-text">$ heroku login
$ heroku update
</code></pre></div>
<h4>2) Verify the Maven build</h4>

<p>Ensure that the correct branch is selected, the project will pass verification and nothing is waiting to be committed (staged). If you’re not <a href="http://nvie.com/posts/a-successful-git-branching-model/">using the “master-develop” branching strategy</a>, you should ask yourself why not.  </p>
<div class="highlight"><pre><code class="text language-text">$ git -b develop
$ git status
$ mvn clean verify
</code></pre></div>
<h4>3) Push to Heroku</h4>

<p>Deployment is achieved by pushing the release candidate branch to the Heroku repo master branch. This triggers the Java detection process and if you are using master as your deployment branch then the command would be:  </p>
<div class="highlight"><pre><code class="text language-text">$ git push heroku master
</code></pre></div>
<p>When staging (testing a release candidate), you might choose to deploy direct from your local “develop” branch in which case you should use this git command to push your local branch to Heroku’s master:  </p>
<div class="highlight"><pre><code class="text language-text">$ git push heroku develop:master
</code></pre></div>
<p>If all goes well, you’ll see your usual Maven build occurring – this is continuous deployment in action. A simple git push and your app is potentially out there.</p>

<h4>4) Scale appropriately</h4>

<p>At this stage you are ready to go, but you have not allocated any Dyno resources to actually run your app. The command line for this is:  </p>
<div class="highlight"><pre><code class="text language-text">  $ heroku ps:scale web=1
</code></pre></div>
<h4>5) Check the processes</h4>

<p>Always check your processes are doing what you expect them to be doing:  </p>
<div class="highlight"><pre><code class="text language-text">$ heroku ps
</code></pre></div>
<h4>6) Check the logs</h4>

<p>Even though your application is running, it is always worth checking the logs. For a quick dump of the most recent logs use:  </p>
<div class="highlight"><pre><code class="text language-text">$ heroku logs
</code></pre></div>
<p>Or to monitor continuously with tail -f behaviour use:  </p>
<div class="highlight"><pre><code class="text language-text">$ heroku logs --tail
</code></pre></div>
<h4>7) Open a browser onto the application</h4>

<p>Finally, you can view your masterpiece. Issuing  </p>
<div class="highlight"><pre><code class="text language-text">$ heroku open
</code></pre></div>
<p>will launch your default browser at the appropriate website for your application.</p>

<h3>Conclusion</h3>

<p>The world of continuous deployment is now just a git push away thanks to the great infrastructure put in place by the Heroku team. Gone are the days of faffing about with endless configuration settings and arcane XML – now it’s just as it should be – simple and scriptable.</p>
		
</div>

<!-- Twitter share -->
<a href="https://twitter.com/share" class="twitter-share-button" data-via="gary-rowe">Tweet</a> 
<!-- Google+ share -->
<div class="g-plusone" data-size="medium"></div>

<h3>Related Posts</h3>
<p><strong>Useful?</strong> Consider a small donation: <a href="bitcoin:1KzTSfqjF2iKCduwz59nv2uqh1W2JsTxZH?amount=0.01&label=Agile%20Stack">1KzTSfqjF2iKCduwz59nv2uqh1W2JsTxZH</a></p>
<p><strong>Got an opinion?</strong> Comments are welcome!</p>
<p><strong>Want more?</strong> Take a look at the following:</p>

  <a href="/agilestack/2012/12/12/dropwizard-with-openid">Dropwizard with OpenID</a><br />

  <a href="/agilestack/2012/12/14/how-to-deploy-static-sites-with-git">How to deploy static sites with git</a><br />

  <a href="/agilestack/2012/01/09/how-to-accept-bitcoins-on-your-blog-with-no-code">How to accept bitcoins on your blog with no code
</a><br />

  <a href="/agilestack/2010/01/14/how-to-be-agile-when-all-about-you-are-not-part-5">How to be agile when all about you are not - part 5</a><br />

  <a href="/agilestack/2013/05/11/dropwizard-with-ember-data">Dropwizard with Ember Data demo
</a><br />

  <a href="/agilestack/2012/11/05/how-to-include-markdown-with-freemarker-in-dropwizard">How to include Markdown with Freemarker in Dropwizard
</a><br />

  <a href="/agilestack/2012/10/23/how-to-implement-a-runtimeexceptionmapper-for-dropwizard">How to implement a RuntimeExceptionMapper for Dropwizard
</a><br />

  <a href="/agilestack/2012/10/23/multibit-merchant-implementing-hmac-authentication-in-dropwizard">MultiBit Merchant: Implementing HMAC authentication in Dropwizard</a><br />

  <a href="/agilestack/2012/06/06/multibit-merchant-deployment-driven-design">MultiBit Merchant: Deployment Driven Design?</a><br />

  <a href="/agilestack/2013/08/08/how-to-create-a-deterministic-jar">How to create a deterministic JAR
</a><br />

  <a href="/agilestack/2013/07/03/preventing-dependency-chain-attacks-in-maven">Preventing Dependency Chain Attacks in Maven
</a><br />

  <a href="/agilestack/2013/02/14/how-to-deploy-dynamic-sites-with-git">How to deploy dynamic sites with git
</a><br />

  <a href="/agilestack/2012/08/17/how-to-recover-your-bitcoins-from-a-failed-hard-drive">How to recover your bitcoins from a failed hard drive
</a><br />

  <a href="/agilestack/2012/07/11/how-to-build-a-builder">How to build a Builder</a><br />

</div>


<hr/>
<div id="disqus_thread"></div>
<script type="text/javascript">
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'agilestack';

  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function () {
    var dsq = document.createElement('script');
    dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a>
</noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>



<footer class="footer">
  <div class="container">
	<p class="pull-right"> <a href="/agilestack/2012/09/04/multibit-merchant-cheaper-in-bitcoins" title="Previous Post: MultiBit Merchant: Cheaper in bitcoins">&laquo; Previous Blog Post</a> 	  |  <a href="#">Back to top</a>  |   	<a href="/agilestack/2012/10/12/a-gitignore-file-for-intellij-and-eclipse-with-maven" title="Next Post: A .gitignore file for Intellij and Eclipse with Maven
">Next Blog Post &raquo; </a> 	 </p>        
	<p>Page last generated on September  3, 2013</p>
	<p>To get in touch you should <a href="https://github.com/gary-rowe/Feedback/issues/new" title="Leave feedback for Gary"  target="_blank" >leave me some feedback</a>.</p>	
	<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>	
  </div>
</footer>

<!-- jQuery -->
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>

<!-- Bootstrap -->
<script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js"></script>

<!-- Twitter -->
<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>    

<!-- Google +1 -->
<script type="text/javascript">
  window.___gcfg = {lang: 'en-GB'};

  (function() {
    var po = document.createElement('script'); 
    po.type = 'text/javascript'; 
    po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; 
    s.parentNode.insertBefore(po, s);
  })();
</script>

<!-- Google Analytics -->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-900130-2']);
  _gaq.push(['_trackPageview']);

  (function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script> 


</body>
</html>
