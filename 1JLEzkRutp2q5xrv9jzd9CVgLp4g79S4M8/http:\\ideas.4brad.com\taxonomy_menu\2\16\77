HTTP/1.1 200 OK
Date: Tue, 22 Jul 2014 14:25:31 GMT
Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.27 with Suhosin-Patch
X-Powered-By: PHP/5.2.4-2ubuntu5.27
Set-Cookie: SESSfa27e05c481b61e5aec16640621db299=7d40d61fbb7f162a2f6915e32c958453; expires=Thu, 14 Aug 2014 17:58:51 GMT; path=/; domain=.ideas.4brad.com
Expires: Sun, 19 Nov 1978 05:00:00 GMT
Last-Modified: Tue, 22 Jul 2014 14:25:31 GMT
Cache-Control: store, no-cache, must-revalidate
Cache-Control: post-check=0, pre-check=0
Connection: close
Content-Type: text/html; charset=utf-8

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
  <title>Sysadmin | Brad Ideas</title>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="alternate" type="application/rss+xml" title="All comments" href="http://ideas.4brad.com/crss" />

<link rel="alternate" type="application/rss+xml" title="" href="/taxonomy/term/77/all/feed" />

<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
  <style type="text/css" media="all">@import "/modules/node/node.css";</style>
<style type="text/css" media="all">@import "/modules/poll/poll.css";</style>
<style type="text/css" media="all">@import "/modules/system/defaults.css";</style>
<style type="text/css" media="all">@import "/modules/system/system.css";</style>
<style type="text/css" media="all">@import "/modules/user/user.css";</style>
<style type="text/css" media="all">@import "/sites/all/modules/archive/archive.css";</style>
<style type="text/css" media="all">@import "/sites/all/modules/cck/content.css";</style>
<style type="text/css" media="all">@import "/sites/all/themes/bradideas/style.css";</style>
    <script type="text/javascript"> </script>
</head>

<body>

<table border="0" cellpadding="0" cellspacing="0" id="header">
  <tr>
    <td id="logo">
      <a href="/" title="Home"><img src="/mepic.jpg" alt="Home" /></a>      <h1 class='site-name'><a href="/" title="Home">Brad Ideas</a></h1>      <div class='site-slogan'>Crazy ideas, inventions, essays and links from Brad Templeton.<p>Computers, Transportation, Civil Rights, Photography and more.</div>    </td>
    <td id="menu">
      <ul class="links" id="subnavlist"><li class="first menu-1-1-124"><a href="http://pic.templetons.com/brad/pano/" title="Galleries of Panoramic Photos" class="menu-1-1-124">Panoramics</a></li>
<li class="menu-1-2-124"><a href="http://pic.templetons.com/brad/photo" title="Galleries of Photos and Photo-journals" class="menu-1-2-124">Photos</a></li>
<li class="menu-1-3-124"><a href="http://www.netfunny.com/rhf/" title="RHF collection of 10,000 hand-picked jokes" class="menu-1-3-124">Rec.humor.funny Joke Site</a></li>
<li class="menu-1-4-124"><a href="/topic/robocars" title="Sub-blog on self-driving cars" class="menu-1-4-124">Robocar Bog</a></li>
<li class="last menu-1-5-124"><a href="http://www.twitter.com/bradtem" title="My twitter feed" class="menu-1-5-124">Twitter</a></li>
</ul>      <ul class="links" id="navlist"><li class="first menu-1-1-121"><a href="/archives/cat_best_of_blog.html" title="Best and most popular items on the blog" class="menu-1-1-121">Best of Blog</a></li>
<li class="menu-1-2-121"><a href="http://www.templetons.com/brad/" title="Non-blog home page for Brad Templeton" class="menu-1-2-121">Brad&#039;s Home</a></li>
<li class="last menu-1-3-121"><a href="http://robocars.com" title="Robocar essay home page" class="menu-1-3-121">Robocars.com</a></li>
</ul>      <form action="/search/node"  method="post" id="search-theme-form">
<div><div id="search" class="container-inline"><div class="form-item">
 <input type="text" maxlength="128" name="search_theme_form_keys" id="edit-search-theme-form-keys"  size="15" value="" title="Enter the terms you wish to search for." class="form-text" />
</div>
<input type="submit" name="op" id="edit-submit" value="Search"  class="form-submit" />
<input type="hidden" name="form_id" id="edit-search-theme-form" value="search_theme_form"  />
</div>
</div></form>
    </td>
  </tr>
  <tr>
    <td colspan="2"><div></div></td>
  </tr>
</table>

<table border="0" cellpadding="0" cellspacing="0" id="content">
  <tr>
        <td valign="top">
            <table align=right cellpadding=12>
      <tr><td align=right width=314 height=270>
      <script type="text/javascript"><!--
      google_ad_client = "pub-5397334057241462";
      google_ad_width = 300;
      google_ad_height = 250;
      google_ad_format = "300x250_as";
      google_ad_channel ="9708581121";
      google_color_border = "FFFFFF";
      google_color_bg = "FFFFFF";
      google_color_link = "0000CC";
      google_color_url = "666666";
      google_color_text = "000000";
      //--></script>
      <script type="text/javascript"
        src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
	  </script>
	    </td></tr></table>
      <div id="main">
        <div class="breadcrumb"><a href="/">Home</a> » <a href="/taxonomy_menu/2">Topic</a> » <a href="/taxonomy_menu/2/16">Technology</a></div>        <h1 class="title">Sysadmin</h1>
        <div class="tabs"></div>
                          <div class="node">
        <h2 class="title"><a href="/we-need-security-standard-usb-and-other-plug-devices">We need a security standard for USB and other plug-in devices</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Thu, 2013-05-16 23:53.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_13"><a href="/archives/cat_privacy.html" rel="tag" title="" class="taxonomy_term_13">Privacy</a></li>
<li class="taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_16"><a href="/archives/cat_technology.html" rel="tag" title="" class="taxonomy_term_16">Technology</a></li>
</ul></span>
    <div class="content"><p>Studies have shown that if you leave USB sticks on the ground outside an office building, 60% of them will get picked up and plugged into a computer in the building.   If you put the company logo on the sticks, closer to 90% of them will get picked up and plugged in.</p>

<p>USB sticks, as you probably know, can pretend to be CD-ROMs and that means on many Windows systems, the computer will execute an &#8220;autorun&#8221; binary on the stick, giving it control of your machine.  (And many people run as administrator.)   While other systems may not do this, almost every system allows a USB stick to pretend to be a keyboard, and as a keyboard it also can easily take full control of your machine, waiting for the machine to be idle so you won&#8217;t see it if need be.   Plugging malicious sticks into computers is how Stuxnet took over Iranian centrifuges, and yet we all do this.</p>

<p>I wish we could trust unknown USB and bluetooth devices, but we can&#8217;t, not when they can be pointing devices and mice and drives we might run code from.</p>

<p>New OS generations have to create a trust framework for plug-in hardware, which includes USB and firewire and to a lesser degree even eSata.</p>

<p>When we plug in any device that might have power over the machine, the system should ask us if we wish to trust it, and how much.   By default, we would give minimum trust to drives, and no trust to pointing devices or keyboards and the like.   CD-Roms would not get the ability to autorun, though it could be granted by those willing to take this risk, poor a choice as it is.</p>

<p>Once we grant the trust, the devices should be able to store a provided key.  After that, the device can then use this key to authenticate itself and regain that trust when plugged in again.  Going forward all devices should do this.</p>

<p>The problem is they currently don&#8217;t, and people won&#8217;t accept obsoleting all their devices.  Fortunately devices that look like writable drives can just have a token placed on the drive.  This token would change every time, making it hard to clone.</p>

<p>Some devices can be given a unique identifier, or a semi-unique one.   For devices that have any form of serial number, this can be remembered and the trust level associated with it.   Most devices at least have a lot of identifiers related to the make and model of device.  Trusting this would mean that once you trusted a keyboard, any keyboard of the same make and model would also be trusted.   This is not super-secure but prevents generic attacks &#8212; attacks would have to be directly aimed at you.    To avoid a device trying to pretend to be every type of keyboard until one is accepted, the attempted connection of too many devices without a trust confirmation should lock out the port until a confirmation is given.</p>

<p>The protocol for verification should be simple so it can be placed on an inexpensive chip that can be mass produced.  In particular, the industry would mass produce small USB pass-through authentication devices that should cost no more than $1.   These devices could be stuck on the plugs of old devices to make it possible for them to authenticate.  They could look like hubs, or be truly pass-through.</p>

<p>All of this would make USB attacks harder.  In the other direction, I believe as I have <a href="/using-phone-its-own-mouse-and-trusting-keyboard">written before</a> that there is value in creating classes of untrusted or less trusted hardware.   For example, an untrusted USB drive might be marked so that executable code can&#8217;t be loaded from it, only classes of files and archives that are well understood by the OS.   And an untrusted keyboard would only be allowed to type in boxes that say they will accept input from an untrusted keyboard.  You could write the text of emails with the untrusted keyboard, but not enter URLs into the URL bar or passwords into password boxes.   (Browser forms would have to indicate that an untrusted keyboard could be used.)  In all cases, a mini text-editor would be available for use with the untrusted keyboard, from where one could cut and paste using a trusted device into other boxes.</p>

<p>A computer that as yet has no trusted devices of a given class would have to trust the first one plugged in.  Ie. if you have a new computer that&#8217;s never had a keyboard, it has to trust its first keyboard unless there is another way to confirm trust when that first keyboard is plugged in.  Fortunately mobile devices all have built in input hardware that can be trusted at manufacture, avoiding this issue.   If a computer has lost all its input devices and needs a new one, you could either trust implicitly, or provide a pairing code to type on the new keyboard (would not work for mouse) to show you are really there.  But this is only a risk on systems that normally have no input device at all.</p>

<p>For an even stronger level of trust, we might want to be able to encrypt the data going through.   This stops the insertion of malicious hubs or other MITM intercepts that might try to log keystrokes or other data.  Encryption may not be practical in low power devices that need to be drives and send data very fast, but it would be fine for all low speed devices.</p>

<p>Of course, we should not trust our networks, even our home networks.  Laptops and mobile devices constantly roam outside the home network where they are not protected, and then come back inside able to attack if trusted.   However, some security designers know this and design for this.</p>

<p>Yes, this adds some extra UI the first time you plug something in.  But that&#8217;s hopefully rare and this is a big gaping hole in the security of most of our devices, because people are always plugging in USB drives, dongles and more.</p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_add"><a href="/comment/reply/1236#comment-form" title="Add a new comment to this page." class="comment_add">Add new comment</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/bios-and-os-designed-very-fast-booting-and-aborting">A BIOS and OS designed for very fast booting (and aborting)</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Thu, 2010-02-18 19:53.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first last taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
</ul></span>
    <div class="content"><p>We all know how annoying it is that today&#8217;s much faster computers take such a long time to boot, and OS developers are working on speeding it up.   Some time ago I proposed a <a href="/node/290">defragmenter that notice what blocks were read in what order at boot</a> and put the contiguous on the disk.  I was told that experiments with this had not had much success, but more recently I read reports of how the latest Linux distributions will boot as much a 3 times faster on solid state disks as on rotating ones.  There are some SSDs with performance that high (and higher) but typical ones range more in the 120 mb/second rate, better than 80 mb/second HDDs but getting more wins from the complete lack of latency.</p>

<p>However, today I want to consider something which is a large portion of the boot time, namely the power-on-self-test or &#8220;POST.&#8221;  This is what the BIOS does before it gets ready to load the real OS.  It&#8217;s important, but on many systems is quite slow.</p>

<p>I propose an effort to make the POST multitask with the loading of the real OS.   Particularly on dual-core systems, this would be done by having one core do the POST and other BIOS (after testing all the cores of course) and other cores be used by the OS for loading.  There are ways to do all this with one core I will discuss below, but this one is simple and almost all new computers have multiple cores.</p>

<p>Of course, the OS has to know it&#8217;s not supposed to touch certain hardware until after the BIOS is done initializing it and testing it.  And so, there should be BIOS APIs to allow the OS to ask about this and get events as BIOS operations conclude.   The OS, until given ownership of the screen, would output its status updates to the screen via a BIOS call.  In fact, it would do that with all hardware, though the screen, keyboard and primary hard disk are the main items.    When I say the OS, I actually mean both the bootloader that loads the OS and the OS itself once it is handed off to.</p>

<p>Next, the BIOS should, as soon as it has identified that the primary boot hard disks are ready, begin transferring data from the boot area into RAM.   Almost all machines have far more RAM than they need to boot, and so pre-loading all blocks needed for boot into a cache, done in optimal order, will mean that by the time the OS kernal takes over, many of the disk blocks it will want to read will already be sitting in ram.  Ideally, as I noted, the blocks should have been pre-stored in contiguous zones on the disk by an algorithm that watched the prior boots to see what was accessed and when.</p>

<p>Indeed, if there are multiple drives, the pre-loader could be configured to read from all of them, in a striping approach.  Done properly, a freshly booted computer, once the drives had spun up, would start reading the few hundred megabytes of files it needs to boot from multiple drives into ram.   All of this should be doable in just a few seconds on RAID style machines, where 3 disks striped can deliver 200mb/second or more of disk read performance.   But even on a single drive, it should be quick.   It would begin with the OS kernel and boot files, but then pre-cache all the pages from files used in typical boots.  For any special new files, only a few seeks will be required after this is done. <span class='read-more'><a href="http://ideas.4brad.com/bios-and-os-designed-very-fast-booting-and-aborting">&nbsp;read&nbsp;more&nbsp;&raquo;</a></span></p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_comments"><a href="/bios-and-os-designed-very-fast-booting-and-aborting#comments" title="Jump to the first comment of this posting." class="comment_comments">7 comments</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/do-we-need-time-delay-after-password-failures">Do we need a time delay after password failures?</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Wed, 2007-10-17 01:44.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_43"><a href="/taxonomy/term/43" rel="tag" title="I&#039;m spouting" class="taxonomy_term_43">Brad&#039;s Rant</a></li>
<li class="last taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
</ul></span>
    <div class="content"><p>Most programs that ask for a password will put in a delay if you get it wrong.  They do this to stop password crackers from quickly trying lots of passwords.  The delay makes brute force attacks impossible, in theory.</p>
<p>But what does it really do?   There are two situations.  In one situation, you have some state on the party entering the password, such as IP address, or a shell session, or terminal.   So you can slow them down later.    For example, you could let a user have 3 or 4 quick tries at a password with no delay, and then put in a very long delay on the 5th, even if they close off the login session and open another one.   Put all the delay at the end of the 4 tries (or at the start of the next 4) rather than between each try.   It's all the same to a cracking program.</p>
<p>Alternately, you have no way to identify them, in which case rather than sit through a delay, they can just open another session.  But you can put a delay on that other session or any other attempt to log into that user.  Once again you don't have to make things slow for the user who just made a typo.   And of course, typos are common since most programs don't show you what you're typing.   (This turns out to be very frustrating when logging in from a mobile device where the keyboards are highly unreliable and you can't see what you are typing!)</p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_comments"><a href="/do-we-need-time-delay-after-password-failures#comments" title="Jump to the first comment of this posting." class="comment_comments">4 comments</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/package-packager-compartmentalize-my-system-changes">A Package packager to compartmentalize my system changes</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Mon, 2007-05-07 18:49.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_74"><a href="/tags/whofig" rel="tag" title="" class="taxonomy_term_74">whofig</a></li>
</ul></span>
    <div class="content"><p>First, let me introduce a new blog topic, <a href="/taxonomy_menu/2/16/77">Sysadmin</a> where I will cover computer system administration and OS design issues, notably in Linux and related systems.</p>

<p>My goal is to reduce the nightmare that is system administration and upgrading.</p>

<p>One step that goes partway in my plan would be a special software system that would build for a user a specialized operating system &#8220;package&#8221; or set of packages.   This magic package would, when applied to a virgin distribution of the operating system, convert it into the customized form that the user likes.</p>

<p>The program would work from a modified system, and a copy of a map (with timestamps and hashes) of the original virgin OS from which the user began.    First, it would note what packages the user had installed, and declare dependencies for these packages.   Thus, installing this magic package would cause the installation of all the packages the user likes, and all that they depend on.</p>

<p>In order to do this well, it would try to determine which packages the user actually used (with access or file change times) and perhaps consider making two different dependency setups &#8212; one for the core packages that are frequently used, and another for packages that were probably just tried and never used.   A GUI to help users sort packages into those classes would be handy.   It must also determine that those packages are still available, dealing with potential conflicts and name change concerns.    Right now, most package managers insist that all dependencies be available or they will abort the entire install.   To get around this, many of the packages might well be listed as &#8220;recommended&#8221; rather than required, or options to allow install of the package with missing 1st level (but not 2nd level) dependencies would be used. <span class='read-more'><a href="http://ideas.4brad.com/package-packager-compartmentalize-my-system-changes">&nbsp;read&nbsp;more&nbsp;&raquo;</a></span></p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_add"><a href="/comment/reply/596#comment-form" title="Add a new comment to this page." class="comment_add">Add new comment</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/posix-universal-api-package-management">A Posix (universal API) for package management</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Wed, 2007-04-25 23:54.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_74"><a href="/tags/whofig" rel="tag" title="" class="taxonomy_term_74">whofig</a></li>
</ul></span>
    <div class="content"><p>As part of my series on the horrors of modern system administration and upgrading, let me propose the need for a universal API, over all operating systems, for accessing data from, and some control of the package management system.</p>

<p>There have been many efforts in the past to standardize programming APIs within all the unix-like operating systems, some of them extending into MS Windows, such as Posix.   Posix is a bit small to write very complex programs fully portably but it&#8217;s a start.  Any such API can make your portability easier if it can&#8217;t make it trivial the way it&#8217;s supposed to.</p>

<p>But there has been little effort to standardize the next level, machine administration and configuration.  Today a large part of that is done with the package manager.  Indeed, the package manager is the soul (and curse) of most major OS distributions.   One of the biggest answers to &#8220;what&#8217;s the difference between debian and Fedora&#8221; is &#8220;dpkg and apt, vs. rpm and yum.&#8221;  (Yes you can, and I do, use apt with rpm.)</p>

<p>Now the truth is that from a user perspective, these package managers don&#8217;t actually look very different.  They all install and remove packages by name, perform upgrades, handle dependencies etc.   Add-ons like apt and GUI package managers help users search and auto-install all dependencies.   To the user, the most common requests are to find and install a package, and to upgrade it or the system. <span class='read-more'><a href="http://ideas.4brad.com/posix-universal-api-package-management">&nbsp;read&nbsp;more&nbsp;&raquo;</a></span></p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_comments"><a href="/posix-universal-api-package-management#comments" title="Jump to the first comment of this posting." class="comment_comments">2 comments</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/upgrading-ask-me-few-questions-and-ask-them-together">Upgrading: ask me few questions, and ask them together</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Sun, 2007-03-25 13:56.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_60"><a href="/tags/upgrading" rel="tag" title="" class="taxonomy_term_60">upgrading</a></li>
</ul></span>
    <div class="content"><p>One of my current peeves is just how much time we spend maintaining and upgrading computer operating systems, even as ordinary users.  The workload for this is unacceptably high, though it&#8217;s not as though people are unaware of the problem.</p>

<p>Right now I&#8217;m updating one system to the beta of the new Ubuntu Feisty Fawn.  (Ubuntu is the Linux distro I currently recommend.) They have done some work on building a single upgrader, which is good, but I was shocked to see an old problem resurface.  In a 2 hour upgrade process, it asked me questions it didn&#8217;t need to ask me, and worse, it asked them at different times in the process. <span class='read-more'><a href="http://ideas.4brad.com/upgrading-ask-me-few-questions-and-ask-them-together">&nbsp;read&nbsp;more&nbsp;&raquo;</a></span></p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_add"><a href="/comment/reply/544#comment-form" title="Add a new comment to this page." class="comment_add">Add new comment</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/sysadmin-services-trading">Sysadmin services trading</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Mon, 2007-03-12 19:08.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_56"><a href="/tags/system-administration" rel="tag" title="" class="taxonomy_term_56">system administration</a></li>
</ul></span>
    <div class="content"><p>I've ranted before about just how hard it has become to configure and administer computers.  And there are services where you can hire sysadmins to help you, primarily aimed at novice users.</p>
<p>But we advanced users often need help today, too.  Mostly when we run into problems we go to message boards, or do web searches and find advice on what to do.   And once we get good on a package we can generally fix problems with it in no time.</p>
<p>I would love a service where I can trade my skill with some packages for help from others on other packages.   There are some packages I know well, and could probably install for you or fix for you in a jiffy.  Somebody else can do the same favour for me.   In both cases we would explain what we did so the other person learned.</p>
<p>All of this would take place remotely, with VNC or ssh.   Of course, this opens up a big question about trust.   A reputation system would be a big start, but might not be enough.   Of course you would want a complete log of all files changed, and how they were changed -- this service might apply more to just editing scripts and not compiling new binaries.   Best of all, you could arrange to have a virtualized version of your machine around for the helper to use.  After examining the differences you could apply to them to your real machine.   Though in the end, you still need reputations so that people wanting to hack machines would not get into the system.   They might have to be vetted as much as any outside consultant you would hire for money. </p>
<p>There seems a real efficiency to be had if this could be made to work.  How often have you pounded for hours on something that a person skilled with the particular software could fix in minutes?  How often could you do the same for others?   Indeed, in many cases the person helping you might well be one of the developers of a system, who also would be learning about user problems.  (Admittedly those developers would quickly earn enough credit to not have to maintain any other part of their system.)</p>
<p>The real tool would be truly secure operating systems where you can trust a stranger to work on one component.</p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_add"><a href="/comment/reply/537#comment-form" title="Add a new comment to this page." class="comment_add">Add new comment</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/now-virtualizers-are-here-lets-default-letting-you-run-your-old-system">Now that virtualizers are here, let&#039;s default to letting you run your old system</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Wed, 2007-02-14 20:12.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first last taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
</ul></span>
    <div class="content"><p>Virtualizer technology, that lets you create a virtual machine in which to run another &#8220;guest&#8221; operating system on top of your own, seems to have arrived.  It&#8217;s common for servers (for security) and for testing, as well as things like running Windows on linux or a Mac.  There are several good free ones.   One, kvm, is built into the lastest Linux kernel (2.6.20).  Microsoft offers their own.</p>

<p>I propose that when an OS distribution does a major upgrade, it encapsulate your old environment as much as possible in a compressed virtualizer disk image.   Then it should allow you to bring up your old environment on demand in a virtual machine.  This way you can be confident that you can always get back to programs and files from your old machine &#8212; in effect, you are keeping it around, virtualized.  If things break, you can see how they broke.  In an emergency, you can go back and do things within your old machine.   It can also allow you to migrate functions from your old machine to your new one more gradually.   Virtual machines can have their own IP address (or even have the original one.  While they can&#8217;t access all the hardware they can do quite a bit.</p>

<p>Of course this takes lots of disk space, but disk space is cheap, and the core of an OS (ie. not including personal user files like photo archives and videos) is usually only a few gigabytes &#8212; peanuts by today&#8217;s standards.   There is a risk here, that if you run the old system and give it access to those personal files (for example run your photo organizer) you could do some damage.   OSs don&#8217;t get do a great division between &#8220;your&#8221; files for OS and program config and &#8220;your&#8221; large data repositories.   One could imagine an overlay filesystem which can only read the real files, and puts any writes into an overlay only seen by the virtual mount.</p>

<p>One can also do it the other way &#8212; run the new OS in the virtual machine until you have it tested and working, and then &#8220;flip the switch&#8221; to make the new OS be native and the old OS be virtual at the next boot.   However, that means the new OS won&#8217;t get native hardware access, which you usually want when installing and configuring an OS upgrade or update.</p>

<p>All this would be particuarly handing if doing an &#8220;upgrade&#8221; that moves from, say, Fedora to Ubuntu, or more extreme, Windows to Linux.  In such cases it is common to just leave the old hard disk partition alone and make a new one, but one must dual boot.  Having the automatic ability to virtualize the old OS would be very handy for doing the transition.   Microsoft could do the same trick for upgrades from old versions to Vista.</p>

<p>Of course, one must be careful the two machines don&#8217;t look too alike.  They must not use the same MAC address or IP if they run internet services.  They must, temporarily at least, have a different hostname.  And they must not make incompatible changes, as I noted, to the same files if they&#8217;re going to share any.</p>

<p>Since hard disks keep getting bigger with every upgrade, it&#8217;s not out of the question that you might not keep your entire machine history behind as a series of virtual machine images.  You could imagine going back to the computer environment you had 20 years ago, on demand, just for fun, or to recover old data formats &#8212; you name it.  With disks growing as they are, we should not throw anything away, even entire computer environments.</p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_add"><a href="/comment/reply/519#comment-form" title="Add a new comment to this page." class="comment_add">Add new comment</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/first-solution-linux-dependencies-part-2-yes-service-packs">A first solution to linux dependencies part 2 -- yes, service packs</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Fri, 2006-12-08 23:34.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_60"><a href="/tags/upgrading" rel="tag" title="" class="taxonomy_term_60">upgrading</a></li>
</ul></span>
    <div class="content"><p>Last week I <a href="/node/486">wrote about linux&#8217;s problems with dependencies and upgrades</a> and promised some suggestions this week.</p>

<p>There are a couple of ideas here to be stolen from (sacrilige) windows which could be a start here, though they aren&#8217;t my long term solution.</p>

<p>Microsoft takes a different approach to updates, which consists of
little patches and big service packs.  The service packs integrate a lot
of changes, including major changes, into one upgrade.   They are not
very frequent, and in some ways akin to the major distribution releases
of systems like Ubuntu (but not its parent Debian ), Fedora Core and
SuSE.</p>

<p>Installing a service pack is certainly not without risks, but
the very particular combination of new libraries and changed apps in
a service pack is extensively tested together, as is also the case for
a major revision of a linux distribution.   Generally installing one of
these packs has been a safe procedure.    Most windows programs also do not
use hand-edited configuration files for local changes, and so don&#8217;t suffer
from the upgrade problems associated with this particular technique nearly
as much. <span class='read-more'><a href="http://ideas.4brad.com/first-solution-linux-dependencies-part-2-yes-service-packs">&nbsp;read&nbsp;more&nbsp;&raquo;</a></span></p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_comments"><a href="/first-solution-linux-dependencies-part-2-yes-service-packs#comments" title="Jump to the first comment of this posting." class="comment_comments">4 comments</a></li>
</ul></div>  </div>
  <div class="node">
        <h2 class="title"><a href="/linux-package-upgrade-nightmare-part-1">The linux package upgrade nightmare, part 1</a></h2>    <span class="submitted">Submitted by <a href="/user/brad" title="View user profile." rel="nofollow">brad</a> on Sat, 2006-12-02 01:13.</span>
    <span class="taxonomy"><ul class="links inline"><li class="first taxonomy_term_77"><a href="/topic/technology/sysadmin" rel="tag" title="System Administration and Upgrading issues" class="taxonomy_term_77">Sysadmin</a></li>
<li class="last taxonomy_term_74"><a href="/tags/whofig" rel="tag" title="" class="taxonomy_term_74">whofig</a></li>
</ul></span>
    <div class="content"><p>We all spend far too much of our time doing sysadmin.  I&#8217;m upgrading and it&#8217;s as usual far more work than it should be.  I have a long term plan for this but right now I want to talk about one of Linux&#8217;s greatest flaws &#8212; the dependencies in the major distributions.</p>

<p>When Unix/Linux began, installing free software consisted of downloading it, getting it to compile on your machine, and then installing it, hopefully with its install scripts.   This always works but much can go wrong.  It&#8217;s also lots of work and it&#8217;s too disconnected a process.  Linuxes, starting with Red Hat, moved to the idea of precompiled binary packages and a package manager.   That later was developed into an automated system where you can just say, &#8220;I want package X&#8221; and it downloads and installs that program and everything else it needs to run with a single command.  When it works, it &#8220;just works&#8221; which is great.</p>

<p>When you have a fresh, recent OS, that is.  Because when packagers build packages, they usually do so on a recent machine, typically fully updated.  And the package tools then decide the new package &#8220;depends&#8221; on the latest version of all the libraries and other tools it uses.  You can&#8217;t install it without upgrading all the other tools, if you can do this at all.</p>

<p>This would make sense if the packages really depended on the very latest libraries.  Sometimes they do, but more often they don&#8217;t.  However, nobody wants to test extensively with old libraries, and serious developers don&#8217;t want to run old distributions, so this is what you get.</p>

<p>So as your system ages, if you don&#8217;t keep it fully up to date, you run into a serious problem.  At first you will find that if you want to install some new software, or upgrade to the lastest version to get a fix, you also have to upgrade a lot of other stuff that you don&#8217;t know much about.   Most of the time, this works.  But sometimes the other upgrades are hard, or face a problem, one you don&#8217;t have time to deal with.</p>

<p>However, as your system ages more, it gets worse.  Once you are no longer running the most recent distribution release, nobody is even compiling for your old release any more.   If you need the latest release of a program you care about, in order to fix a bug or get a new feature, the package system will no longer help you.   Running that new release or program requires a much more serious update of your computer, with major libraries and more &#8212; in many ways the entire system.   And so you do that, but you need to be careful.  This often goes wrong in one way or another, so you must only do it at a time when you would be OK not having your system for a day, and taking a day or more to work on things.   No, it doesn&#8217;t usually take a day &#8212; but it <em>might</em>.  And you have to be ready for that rare contingency.   Just to get the latest version of a program you care about.</p>

<p>Compare this to Windows.  By and large, most binary software packages for windows will install on very old versions of Windows.  Quite often they will still run on Windows 95, long ago abandoned by Microsoft.   Win98 is still supported.   Of late, it has been more common to get packages that insist on 7 year old Windows 2000.  It&#8217;s fairly rare to get something that insists on 5-year-old Windows XP, except from Microsoft itself, which wants everybody to need to buy upgrades.</p>

<p>Getting a new program for your 5 year old Linux is very unlikley.  This is tolerated because Linux is free.  There is no financial reason not to have the latest version of any package.   Windows coders won&#8217;t make their program demand Windows XP because they don&#8217;t want to force you to buy a whole new OS just to run their program.   Linux coders forget that the price of the OS is often a fairly small part of the cost of an upgrade.</p>

<p>Systems have gotten better at automatic upgrades over time, but still most people I know don&#8217;t trust them.  Actively used systems acquire bit-rot over time, things start going wrong.  If they&#8217;re really wrong you fix them, but after a while the legacy problems pile up.  In many cases a fresh install is the best solution.  Even though a fresh install means a lot of work recreating your old environment.   Windows fresh installs are terrible, and only recently got better.</p>

<p>Linux has been much better at the incremental upgrade, but even there fresh installs are called for from time to time.  Debian and its children, in theory, should be able to just upgrade forever, but in practice only a few people are that lucky.</p>

<p>One of the big curses (one I hope to have a fix for) is the configuration file.   Programs all have their configuration files.  However, most software authors pre-load the configuration file with helpful comments and default configurations.   The user, after installing, edits the configuration file to get things as they like, either by hand, or with a GUI in the program.   When a new version of the program comes along, there is a new version of the &#8220;default&#8221; configuration file, with new comments, and new default configuration.   Often it&#8217;s wrong to run your old version, or doing so will slowly build more bit-rot, so your version doesn&#8217;t operate as nicely as a fresh one.  You have to go in and manually merge the two files.</p>

<p>Some of the better software packages have realized they must divide the configuration &#8212; and even the comments &#8212; made by the package author or the OS distribution editor from the local changes made by the user.   Better programs have their configuration file &#8220;include&#8221; a normally empty local file, or even better all files in a local directory.  This does not allow comments but it&#8217;s a start.</p>

<p>Unfortunately the programs that do this are few, and so any major upgrade can be scary.  And unfortunately, the more you hold off on upgrading the scarier it will be.   Most individual package upgrades go smoothly, most of the time.  But if you leave it so you need to upgrade 200 packages at once, the odds of some problem that diverts you increase, and eventually they become close to 100%.</p>

<p>Ubuntu, which is probably my favourite distribution, has announced that their &#8220;Dapper Drake&#8221; distribution, from mid 2006, will be supported for desktop use for 3 years, and 5 years for server use.  I presume that means they will keep compiling new packages to run on the older base of Dapper, and test all upgrades.  This is great, but it&#8217;s thanks to the generousity of Mark Shuttleworth, who uses his internet wealth to be a fabulous sugar daddy to the Linux and Ubuntu movements.   Already the next release is out, &#8220;Edgy&#8221; and it&#8217;s newer and better than Dapper, but with half the support promise.  It will be interesting to see what people choose.</p>

<p>When it comes to hardware, Linux is even worse.   Each driver works with precisely one kernel it is compiled for.  Woe onto you once you decide to support some non-standard hardware in your Linux box that needs a special driver.    Compiling a new driver isn&#8217;t hard once, until you realize you must do it all again any time you would like to slightly upgrade your kernel.   Most users simply don&#8217;t upgrade their kernels unless they face a screaming need, like fixing a major bug, or buying some new hardware.   Linux kernels come out every couple of weeks for the eager, but few are so eager.</p>

<p>As I get older, I find I don&#8217;t have the time to compile everything from source, or to sysadmin every piece of software I want to use.  I think there are solutions to some of these problems, and a simple first one will be talked about in the next installment, namely an <a href="/node/489">analog of Service Packs</a></p>
</div>
    <div class="links">&raquo; <ul class="links inline"><li class="first blog_usernames_blog"><a href="/blog/brad" title="Read brad&#039;s latest blog entries." class="blog_usernames_blog">brad&#039;s blog</a></li>
<li class="last comment_comments"><a href="/linux-package-upgrade-nightmare-part-1#comments" title="Jump to the first comment of this posting." class="comment_comments">4 comments</a></li>
</ul></div>  </div>
        <a href="/taxonomy/term/77/all/feed" class="feed-icon"><img src="/misc/feed.png" alt="Syndicate content" title="Syndicate content" width="16" height="16" /></a>      </div>
    </td>
    <td id="sidebar-right">
        <div class="block block-user" id="block-user-1">
    <h2 class="title">Navigation</h2>
    <div class="content">
<ul class="menu">
<li class="expanded"><a href="/taxonomy_menu/2">Topic</a>
<ul class="menu">
<li class="leaf"><a href="/taxonomy_menu/2/19">Best Of Blog</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/34">Air Travel</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/5">Announcements</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/43">Brad&#039;s Rant</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/86">Burning Man</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/2">Comedy</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/4">Free Speech</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/3">Futurism</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/44">Going Green</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/37">Governance</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/20">Health</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/7">Intellectual Property</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/40">Internet</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/8">Inventions</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/9">Media</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/10">New Democracy</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/11">Observations</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/1">Photography</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/12">Politics</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/13">Privacy</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/14">Random Ideas</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/41">Review</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/95" title="Self-driving cars">Robocars</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/36">Solve this</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/15">Spam</a></li>
<li class="expanded"><a href="/taxonomy_menu/2/16">Technology</a>
<ul class="menu">
<li class="leaf"><a href="/taxonomy_menu/2/16/77" class="active">Sysadmin</a></li>

</ul>
</li>
<li class="leaf"><a href="/taxonomy_menu/2/17">Telecom</a></li>
<li class="collapsed"><a href="/taxonomy_menu/2/18">Transportation</a></li>
<li class="leaf"><a href="/taxonomy_menu/2/35">What a great idea</a></li>

</ul>
</li>
<li class="leaf"><a href="/archive">Archives</a></li>
<li class="leaf"><a href="/battlestar">Battlestar Blog</a></li>
<li class="leaf"><a href="/forum">Forums</a></li>
<li class="leaf"><a href="/tracker">Recent posts</a></li>
<li class="collapsed"><a href="/taxonomy_menu/6">Tags</a></li>
<li class="leaf"><a href="http://www.templetons.com/etc/privacy.html" title="Privacy Policy">Privacy</a></li>

</ul>
</div>
 </div>
  <div class="block block-user" id="block-user-0">
    <h2 class="title">User login</h2>
    <div class="content"><form action="/taxonomy_menu/2/16/77?destination=taxonomy_menu%2F2%2F16%2F77"  method="post" id="user-login-form">
<div><div class="form-item">
 <label for="edit-name">Username: <span class="form-required" title="This field is required.">*</span></label>
 <input type="text" maxlength="60" name="name" id="edit-name"  size="15" value="" class="form-text required" />
</div>
<div class="form-item">
 <label for="edit-pass">Password: <span class="form-required" title="This field is required.">*</span></label>
 <input type="password" name="pass" id="edit-pass"  maxlength="60"  size="15"  class="form-text required" />
</div>
<input type="submit" name="op" id="edit-submit" value="Log in"  class="form-submit" />
<div class="item-list"><ul><li><a href="/user/password" title="Request new password via e-mail.">Request new password</a></li></ul></div><input type="hidden" name="form_id" id="edit-user-login-block" value="user_login_block"  />

</div></form>
</div>
 </div>
  <div class="block block-block" id="block-block-5">
    <h2 class="title"></h2>
    <div class="content"><p>If you like this blog, do me a favour and start your Amazon shopping (especially a <a href= http://www.amazon.com/gp/product/B0015T963C/?tag=templetonscom-20>kindle</a>) from this link, and I'll get a cut.<br />
<iframe src="http://rcm.amazon.com/e/cm?t=templetonscom-20&amp;o=1&amp;p=27&amp;l=qs1&amp;f=ifr" width="180" height="150" frameborder="0" scrolling="no"></iframe><!-- ukey="7AF91DA9" --></p>
</div>
 </div>
  <div class="block block-views" id="block-views-comments_recent">
    <h2 class="title">Recent comments</h2>
    <div class="content"><div class='view view-comments-recent'><div class='view-content view-content-comments-recent'><div class="item-list"><ul><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/can-we-stop-loud-beep-backing#comment-15362">Are there any statistics?</a></div><div class='view-field view-data-comments-name'>Gogo6969.com (not verified)</div><div class='view-field view-data-comments-timestamp'>Jul 20 2014 - 04:34</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/small-startup-cruise-plans-sell-modification-kits-highway-driving#comment-15360">Truck drivers not interested - Trucking companies maybe?</a></div><div class='view-field view-data-comments-name'>stuart (not verified)</div><div class='view-field view-data-comments-timestamp'>Jul 16 2014 - 12:04</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/solar-freaking-roadways-do-math#comment-15355">Very poor economics</a></div><div class='view-field view-data-comments-name'>JCreasey (not verified)</div><div class='view-field view-data-comments-timestamp'>Jul 12 2014 - 14:10</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/solar-freaking-roadways-do-math#comment-15354">solar roads</a></div><div class='view-field view-data-comments-name'>Michael Ward (not verified)</div><div class='view-field view-data-comments-timestamp'>Jul 12 2014 - 13:14</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/tide-surveys-gets-worse-would-you-please-rate-our-survey#comment-15326">True enough</a></div><div class='view-field view-data-comments-name'><a href="/user/brad" title="View user profile." rel="nofollow">brad</a></div><div class='view-field view-data-comments-timestamp'>Jun 25 2014 - 08:56</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/tide-surveys-gets-worse-would-you-please-rate-our-survey#comment-15325">Hate Customer Surveys</a></div><div class='view-field view-data-comments-name'>James (not verified)</div><div class='view-field view-data-comments-timestamp'>Jun 25 2014 - 05:39</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/tide-surveys-gets-worse-would-you-please-rate-our-survey#comment-15324">Heisenberg</a></div><div class='view-field view-data-comments-name'>Nikita Borisov (not verified)</div><div class='view-field view-data-comments-timestamp'>Jun 25 2014 - 02:40</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/small-startup-cruise-plans-sell-modification-kits-highway-driving#comment-15322">Trucks come later</a></div><div class='view-field view-data-comments-name'>xed (not verified)</div><div class='view-field view-data-comments-timestamp'>Jun 24 2014 - 13:26</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/live-google-transit-directions-seriously-changes-value-transit#comment-15321">Local and global</a></div><div class='view-field view-data-comments-name'><a href="/user/brad" title="View user profile." rel="nofollow">brad</a></div><div class='view-field view-data-comments-timestamp'>Jun 24 2014 - 12:00</div></div>
</li><li><div class='view-item view-item-comments-recent'><div class='view-field view-data-comments-subject'><a href="/live-google-transit-directions-seriously-changes-value-transit#comment-15317">hmm</a></div><div class='view-field view-data-comments-name'>Anonymous (not verified)</div><div class='view-field view-data-comments-timestamp'>Jun 23 2014 - 21:24</div></div>
</li></ul></div></div></div>
</div>
 </div>
  <div class="block block-block" id="block-block-4">
    <h2 class="title">Top Essays</h2>
    <div class="content"><p><a href="http://www.templetons.com/brad/copymyths.html">Copyright</a><br />
<a href="http://www.templetons.com/brad/robocars/">Robocars</a><br />
<a href="http://www.templetons.com/brad/copysolve.html">Solving the copyright crisis</a><br />
<a href="http://www.templetons.com/brad/spam">Spam</a><br />
<a href="http://www.templetons.com/brad/spamterm.html">Spam History</a><br />
<a href="http://www.templetons.com/brad/gmail.html">GMail</a><br />
<a href="http://www.templetons.com/brad/dns/">DNS</a><br />
<a href="http://www.templetons.com/brad/dontpay.html">Microrefunds</a><br />
<a href="http://www.templetons.com/brad/billg.html">Bill Gates Wealth</a><br />
<a href="http://www.templetons.com/brad/dardar.html">Darth Darth Binks</a><br />
<a href="http://www.templetons.com/brad/tvfuture.html">Future of TV Ads</a>  </p>

<p><a href="http://www.templetons.com/brad/#faqs">Complete Set</a></p>
</div>
 </div>
  <div class="block block-block" id="block-block-7">
    <h2 class="title"></h2>
    <div class="content"><p>Donate Bitcoin<br />
<img width=140 height=140 src="/files/give-bitcoin.png" /></p>
<p class="tiny">1JLEzkRutp2q5xrv9jzd9CVgLp4g79S4M8</p>
</div>
 </div>
  <div class="block block-blog" id="block-blog-0">
    <h2 class="title">Recent blog posts</h2>
    <div class="content"><div class="item-list"><ul><li><a href="/robotics-science-and-systems-and-automated-vehicles-symposium-week">Robotics: Science and Systems and Automated Vehicles Symposium this week</a></li><li><a href="/solar-freaking-roadways-do-math">Solar freaking roadways?  Do the math</a></li><li><a href="/paradox-bitcoin-proof-work-mining">The paradox of Bitcoin proof-of-work mining</a></li><li><a href="/tide-surveys-gets-worse-would-you-please-rate-our-survey">The tide of surveys gets worse -- &quot;would you please rate our survey?&quot;</a></li><li><a href="/robocars-101-big-think-npr-interview-and-many-talks">Robocars 101 on Big Think, NPR Interview and many talks</a></li><li><a href="/small-startup-cruise-plans-sell-modification-kits-highway-driving">Small startup &quot;Cruise&quot; plans to sell modification kits for highway driving</a></li><li><a href="/live-google-transit-directions-seriously-changes-value-transit">Live Google transit directions seriously changes the value of transit</a></li><li><a href="/conan-obriens-google-car-nissan-2018-and-more">Conan O&#039;Brien&#039;s Google Car, Nissan in 2018 and more</a></li><li><a href="/reflections-25th-anniversary-clarinet-and-dot-com">Reflections on the 25th anniversary of ClariNet and the dot-com</a></li><li><a href="/hotel-rooms-and-temporary-apartments-need-adapt-better-digital-nomad">Hotel rooms and temporary apartments need to adapt better for the digital nomad</a></li></ul></div><div class="more-link"><a href="/blog" title="Read the latest blog entries.">more</a></div></div>
 </div>
  <div class="block block-block" id="block-block-3">
    <h2 class="title">Blogroll</h2>
    <div class="content">Fellow EFF Folks<br/>
<a href="http://www.boingboing.net/">Cory Doctorow</a><br/>
<a href="http://www.lessig.org/blog/">Larry Lessig</a><br/>
<a href=http://www.freedom-to-tinker.com/>Ed Felten</a><br/>
<a href="http://www.interesting-people.org/archives/interesting-people/">Dave Farber</a><br/>
<a href="http://blog.barlowfriendz.net/">John Perry Barlow</a><br/>
<a href="http://www.eff.org/deeplinks/">EFF Deep Links</a><br/>
<P/>
<a href="http://www.sifry.com/alerts/">Dave Sifry</a><br/>
</div>
 </div>
  <div class="block block-node" id="block-node-0">
    <h2 class="title">Syndicate</h2>
    <div class="content"><a href="/index.rdf" class="feed-icon"><img src="/misc/feed.png" alt="Syndicate content" title="Syndicate content" width="16" height="16" /></a></div>
 </div>
    </td>  </tr>
</table>

<div id="footer">
  
</div>
</body>
</html>

