http://pascoal.net/tag/teambuild/
HTTP/1.1 200 OK
Cache-Control: no-cache, must-revalidate, max-age=0
Pragma: no-cache
Content-Type: text/html; charset=UTF-8
Expires: Tue, 15 Jul 2014 09:17:45 GMT
Last-Modified: Tue, 22 Jul 2014 09:17:45 GMT
Server: Microsoft-IIS/8.5
X-Powered-By: PHP/5.2.17
X-Pingback: http://pascoal.net/xmlrpc.php
Date: Tue, 22 Jul 2014 09:17:45 GMT
Connection: close
Content-Length: 98094

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head profile="http://gmpg.org/xfn/11">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>  TeamBuild | Tiago Pascoal</title>
		<link rel="stylesheet" type="text/css" media="all" href="http://pascoal.net/wp-content/themes/zbench/style.css" />
	<link rel="pingback" href="http://pascoal.net/xmlrpc.php" />
	<style type='text/css' media='screen' >.socialwrap li.icon_text a img, .socialwrap li.iconOnly a img, .followwrap li.icon_text a img, .followwrap li.iconOnly a img{border-width:0 !important;background-color:none;}#follow.right {width:32px;position:fixed; right:0; top:100px;background-color:#878787;padding:10px 0;font-family:impact,charcoal,arial, helvetica,sans-serif;-moz-border-radius-topleft: 5px;-webkit-border-top-left-radius:5px;-moz-border-radius-bottomleft:5px;-webkit-border-bottom-left-radius:5px;border:2px solid #fff;border-right-width:0}#follow.right ul {padding:0; margin:0; list-style-type:none !important;font-size:24px;color:black;}
#follow.right ul li {padding-bottom:10px;list-style-type:none !important;padding-left:4px;padding-right:4px}
#follow img{border:none;}#follow.right ul li.follow {margin:0 4px;}
#follow.right ul li.follow img {border-width:0;display:block;overflow:hidden; background:transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/images/impact/follow-right.png) no-repeat -0px 0px;height:79px;width:20px;}
#follow.right ul li a {display:block;}
#follow.right ul li.follow span, #follow ul li a span {display:none}.share {margin:0 2px 2px 0;}
ul.row li {float:left;list-style-type:none;list-style:none;}
li.iconOnly a span.head {display:none}
#follow.left ul.size16 li.follow{margin:0px auto !important}
li.icon_text a {padding-left:0;margin-right:2px}
li.text_only a {background-image:none !important;padding-left:0;}
li.text_only a img {display:none;}
li.icon_text a span{background-image:none !important;padding-left:0 !important; }
li.iconOnly a span.head {display:none}
ul.socialwrap li {margin:0 2px 2px 0 !important;}
ul.socialwrap li a {text-decoration:none;}ul.row li {float:left;line-height:auto !important;}
ul.row li a img {padding:0}.size16 li a,.size24 li a,.size32 li a, .size48 li a, .size60 li a {display:block}ul.socialwrap {list-style-type:none !important;margin:0; padding:0;text-indent:0 !important;}
ul.socialwrap li {list-style-type:none !important;background-image:none;padding:0;list-style-image:none !important;}
ul.followwrap {list-style-type:none !important;margin:0; padding:0}
ul.followwrap li {margin-right:2px;margin-bottom:2px;list-style-type:none !important;}
#follow.right ul.followwrap li, #follow.left ul.followwrap li {margin-right:0px;margin-bottom:0px;}
.shareinpost {clear:both;padding-top:0px}.shareinpost ul.socialwrap {list-style-type:none !important;margin:0 !important; padding:0 !important}
.shareinpost ul.socialwrap li {padding-left:0 !important;background-image:none !important;margin-left:0 !important;list-style-type:none !important;text-indent:0 !important}
.socialwrap li.icon_text a img, .socialwrap li.iconOnly a img{border-width:0}ul.followrap li {list-style-type:none;list-style-image:none !important;}
div.clean {clear:left;}
div.display_none {display:none;}
.button_holder_bottom,.button_holder_left{margin-right:5px;display:inline}.button_holder_right{margin-left:5px;display:inline}.button_holder_show_interactive {display:inline;margin-right:5px;}.button_holder_bottom iframe,.button_holder_left iframe,.button_holder_right iframe,.button_holder_show_interactive iframe{vertical-align:top}.tall *[id*='___plusone']{position:relative;top:-12px}</style><style type='text/css' media='print' >.socialwrap li.icon_text a img, .socialwrap li.iconOnly a img, .followwrap li.icon_text a img, .followwrap li.iconOnly a img{border-width:0 !important;background-color:none;}#follow.right {width:32px;position:fixed; right:0; top:100px;background-color:#878787;padding:10px 0;font-family:impact,charcoal,arial, helvetica,sans-serif;-moz-border-radius-topleft: 5px;-webkit-border-top-left-radius:5px;-moz-border-radius-bottomleft:5px;-webkit-border-bottom-left-radius:5px;border:2px solid #fff;border-right-width:0}#follow.right ul {padding:0; margin:0; list-style-type:none !important;font-size:24px;color:black;}
#follow.right ul li {padding-bottom:10px;list-style-type:none !important;padding-left:4px;padding-right:4px}
#follow img{border:none;}#follow.right ul li.follow {margin:0 4px;}
#follow.right ul li.follow img {border-width:0;display:block;overflow:hidden; background:transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/images/impact/follow-right.png) no-repeat -0px 0px;height:79px;width:20px;}
#follow.right ul li a {display:block;}
#follow.right ul li.follow span, #follow ul li a span {display:none}.share {margin:0 2px 2px 0;}
ul.row li {float:left;list-style-type:none;list-style:none;}
li.iconOnly a span.head {display:none}
#follow.left ul.size16 li.follow{margin:0px auto !important}
li.icon_text a {padding-left:0;margin-right:2px}
li.text_only a {background-image:none !important;padding-left:0;}
li.text_only a img {display:none;}
li.icon_text a span{background-image:none !important;padding-left:0 !important; }
li.iconOnly a span.head {display:none}
ul.socialwrap li {margin:0 2px 2px 0 !important;}
ul.socialwrap li a {text-decoration:none;}ul.row li {float:left;line-height:auto !important;}
ul.row li a img {padding:0}.size16 li a,.size24 li a,.size32 li a, .size48 li a, .size60 li a {display:block}ul.socialwrap {list-style-type:none !important;margin:0; padding:0;text-indent:0 !important;}
ul.socialwrap li {list-style-type:none !important;background-image:none;padding:0;list-style-image:none !important;}
ul.followwrap {list-style-type:none !important;margin:0; padding:0}
ul.followwrap li {margin-right:2px;margin-bottom:2px;list-style-type:none !important;}
#follow.right ul.followwrap li, #follow.left ul.followwrap li {margin-right:0px;margin-bottom:0px;}
.shareinpost {clear:both;padding-top:0px}.shareinpost ul.socialwrap {list-style-type:none !important;margin:0 !important; padding:0 !important}
.shareinpost ul.socialwrap li {padding-left:0 !important;background-image:none !important;margin-left:0 !important;list-style-type:none !important;text-indent:0 !important}
.socialwrap li.icon_text a img, .socialwrap li.iconOnly a img{border-width:0}ul.followrap li {list-style-type:none;list-style-image:none !important;}
div.clean {clear:left;}
div.display_none {display:none;}
.button_holder_bottom,.button_holder_left{margin-right:5px;display:inline}.button_holder_right{margin-left:5px;display:inline}.button_holder_show_interactive {display:inline;margin-right:5px;}.button_holder_bottom iframe,.button_holder_left iframe,.button_holder_right iframe,.button_holder_show_interactive iframe{vertical-align:top}.tall *[id*='___plusone']{position:relative;top:-12px}</style><link rel="alternate" type="application/rss+xml" title="Tiago Pascoal &raquo; Feed" href="http://pascoal.net/feed/" />
<link rel="alternate" type="application/rss+xml" title="Tiago Pascoal &raquo; Comments Feed" href="http://pascoal.net/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Tiago Pascoal &raquo; TeamBuild Tag Feed" href="http://pascoal.net/tag/teambuild/feed/" />
<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='http://pascoal.net/?mcsf_action=main_css&#038;ver=3.9.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='http://pascoal.net/wp-content/plugins/mailchimp/css/ie.css?ver=3.9.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='jetpack-widgets-css'  href='http://pascoal.net/wp-content/plugins/jetpack/modules/widgets/widgets.css?ver=20121003' type='text/css' media='all' />
<script type='text/javascript' src='http://pascoal.net/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://pascoal.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://pascoal.net/wp-content/plugins/mailchimp/js/scrollTo.js?ver=1.3'></script>
<script type='text/javascript' src='http://pascoal.net/wp-includes/js/jquery/jquery.form.min.js?ver=3.37.0'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var mailchimpSF = {"ajax_url":"http:\/\/pascoal.net\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://pascoal.net/wp-content/plugins/mailchimp/js/mailchimp.js?ver=1.3'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://pascoal.net/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://pascoal.net/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-1314012-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<style type='text/css'>img#wpstats{display:none}</style></head>
<body class="archive tag tag-teambuild tag-20">
<div id="nav">
	<div id="menus">
		<ul><li><a href="http://pascoal.net">Home</a></li></ul>
		<ul id="menu-home" class="menu"><li id="menu-item-498" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-498"><a href="http://pascoal.net/contact/">Contact</a></li>
</ul>	</div>
	<div id="search">
		<form id="searchform" method="get" action="http://pascoal.net/">
<input type="text" value="Search: type, hit enter" onfocus="if (this.value == 'Search: type, hit enter') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search: type, hit enter';}" size="35" maxlength="50" name="s" id="s" />
<input type="submit" id="searchsubmit" value="SEARCH" />
</form>	</div>
</div>
<div id="wrapper">
	<div id="header">
		<h1><a href="http://pascoal.net">Tiago Pascoal</a></h1>
		<h2></h2>
		<div class="clear"></div>
				<div id="header_image">
			<div id="header_image_border">
				<img src="http://pascoal.net/wp-content/uploads/2011/03/header41.png" width="950" height="180" alt="" />
			</div>
		</div>
			</div>
<hr />
<div id="content">
		<div class="page-title">
					<h1>Tag Archives: <span>TeamBuild</span></h1>
			</div>		<div class="post-228 post type-post status-publish format-standard hentry category-uncategorized tag-teambuild tag-tfs" id="post-228"><!-- post div -->
		<h2 class="title"><a href="http://pascoal.net/2011/11/team-foundation-build-sharing-parameters-between-several-build-definitions/">Team Foundation Build: Sharing parameters between several build definitions</a></h2>
		<div class="post-info-top">
			<span class="post-info-date">Posted by Tiago Pascoal on November 15, 2011 </span>
			<span id="gotocomments"><a href="http://pascoal.net/2011/11/team-foundation-build-sharing-parameters-between-several-build-definitions/#respond" title="Comment on Team Foundation Build: Sharing parameters between several build definitions">None comments</a></span>
		</div>
		<div class="clear"></div>
		<div class="entry">
			<div style="float:right;padding: 0 0 10px 10px" class="interactive_right"><div class='button_holder_right'><iframe allowtransparency='true' frameborder='0' scrolling='no' src='//platform.twitter.com/widgets/tweet_button.html?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;text=Team Foundation Build: Sharing parameters between several build definitions&amp;count=vertical&amp;lang=' style='width:65px; height:65px;' ></iframe></div><div class='button_holder_right'><iframe src='//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;layout=box_count&amp;show_faces=false&amp;width=65&amp;action=like&amp;font=arial&amp;colorscheme=light&amp;height=65' scrolling='no' frameborder='0' style='border:none; overflow:hidden; width:65px; height:65px;' allowTransparency='true'></iframe></div></div><p>&#160;</p>
<p>Team Foundation Build provides us with a nice editor where we can define parameters (both at design time and queue time) to influence the behavior of our builds and it is really easy to change them.</p>
<p>However sometimes we need to have a parameter shared across several build definitions. Using out of the box features we are forced to place the same value on all build definitions and if we wish to change the value we have to manually change all of them (we can always write some one off code that will replace the value in bulk).</p>
<p>If we want to share a parameter value across more than one build definition we have several choices at our disposal</p>
<ol>
<li>“hard code” the value in the build definition template, and when we need to change the value we just have to update the build definition template once. Simple, effective but not very visible since the value is hidden inside the build definition (not to mention it cannot be easily changed by non-power users) </li>
<li>Store the parameters in a file stored in source control (for example an XML file or a file with an easy to manage format using a simple text editor). This way when the configuration file is changed every build definition that uses will pick it up immediately. This requires that you change your build definition to get the file from source control (you can use the built in activity <strong><a href="http://msdn.microsoft.com/en-us/library/gg265783.aspx#Activity_DownloadFiles">DownloadFiles</a></strong>) and read the parameters from the file. This also has the traceability advantage&#160; (by having the parameters stored in source control, we have history, auditability and the ability to easily revert to previous versions).</li>
<li>Store the configuration an a SQL database. For this you can write your own activity or use the SQL Server activities from the <a href="http://tfsbuildextensions.codeplex.com/">Community TFS Build Extensions</a> </li>
<li>Store the configuration on an external system accessible via Web Services (WF has built in support for this) </li>
<li>Store the configuration in the TFS Registry, I’m not talking about the windows registry. I’m talking about the TFS registry, which is a feature that allows you to store settings (in a hierarchical manner) on a registry. There are two scopes for the registry, a collection registry or a server wide registry (also known as the configuration registry). The advantage of the registry is that it’s stored within TFS. Everything is integrated, when the database is backed so are your settings, everything is self-contained. The disadvantage of this approach is the fact there are no tool (out of the box) to read and write settings into the registry. </li>
</ol>
<p>This post is all about option 5), to read values stored in the registry from your own build definition templates, you can use an activity that I’ve just committed to the <a href="http://tfsbuildextensions.codeplex.com/">Community TFS Build Extensions</a>. The activity is called <strong>GetValueFromRegistry</strong></p>
<p><a href="http://pascoal.net/wp-content/uploads/2011/11/SNAGHTML42e8aec4.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="SNAGHTML42e8aec4" border="0" alt="SNAGHTML42e8aec4" src="http://pascoal.net/wp-content/uploads/2011/11/SNAGHTML42e8aec4_thumb.png" width="380" height="234" /></a></p>
<p>To use the activity all you have to do is drag it to the canvas and provide two parameters (one of them being optional).</p>
<p><a href="http://pascoal.net/wp-content/uploads/2011/11/image.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://pascoal.net/wp-content/uploads/2011/11/image_thumb.png" width="458" height="239" /></a></p>
<p>The <strong>Path </strong>parameter is mandatory and represents the path of the value you wish to read (for example TFS email notification address (if notifications are enabled) is stored in <strong>/Service/Integration/Settings/EmailNotificationFromAddress</strong>)</p>
<p>There are no rules regarding the use of paths, but it is wise to use a convention (but using /Configuration or /Service is not recommended).</p>
<p>You can use for example /Extensions/&lt;CompanyName&gt;/&#160; as the base <em>path</em> for all your key values.</p>
<p>The&#160; Default Value parameter contains the default value that will be returned if the value is not defined (or if the user doesn’t have permission to read it).</p>
<p>The registry value or the default value will be returned on the Result parameter.</p>
<p>All parameters (including return) are strings.</p>
<p>Please notice registry reading as a little quirk. If the user doesn’t has permissions to read a given value no error will be returned, but no value will be returned either. So if the build user doesn’t has permissions to read a given value it will return the default value (or an error if no default value has been defined, see error below). Which means the build may fail if you can’t read a value and if have set the <strong>FailBuildOnError</strong> parameter to true.</p>
<p><a href="http://pascoal.net/wp-content/uploads/2011/11/image1.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://pascoal.net/wp-content/uploads/2011/11/image_thumb1.png" width="609" height="121" /></a></p>
<p>The activity will first attempt to read the value from the collection registry, if no value is found then the server registry is attempted and if not found it will returned the default value (if defined).</p>
<p><strong>Note:</strong> this activity is not yet available on the latest released version (v&#160; 1.1 released on <a href="http://tfsbuildextensions.codeplex.com/releases/view/67139">September 2011</a>), so if you want to use it you will need to download the source code and compile it yourself or wait for the next public release (v 1.2) that is scheduled for <a href="http://tfsbuildextensions.codeplex.com/releases/view/75159">December</a></p>
<p>If you want to learn more about the TFS Registry, some of its semantics and how you can store values on the registry you can read more about on these two posts:</p>
<p><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-ii-the-api/">Using Team Foundation Server Registry–Part I The concepts</a></p>
<p><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-ii-the-api/">Using Team Foundation Server Registry–Part II the API</a></p>
<p>Thanks to <a href="http://mikefourie.wordpress.org">Mike Fourie</a>&#160; for proofreading and suggesting some improvements to this post.</p>
<div class='shareinpost'><ul class="socialwrap row"><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Foundation Build: Sharing parameters between several build definitions on Blogger'  href='http://www.blogger.com/blog_this.pyra?t&amp;u=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;n=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions&amp;pli=1'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='blogger'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-75px 0px'   /> <span class="head">Blog this!</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Bookmark this post : Team Foundation Build: Sharing parameters between several build definitions on Delicious'  href='http://delicious.com/post?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;title=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='delicious'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-175px 0px'   /> <span class="head">Bookmark on Delicious</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Recommend this post : Team Foundation Build: Sharing parameters between several build definitions on Facebook'  href='http://www.facebook.com/sharer.php?u=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;t=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='facebook'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-300px 0px'   /> <span class="head">Recommend on Facebook</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title=''  href='https://plusone.google.com/_/+1/confirm?hl=en&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;title=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='gplus'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-625px 0px'   /> <span class="head"></span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Foundation Build: Sharing parameters between several build definitions on Linkedin'  href='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;title=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions&amp;summary=%26%23160%3B++Team+Foundation+Build+provides+us+with+a+nice+editor+where+we+can+define+parameters+%28both+at+design+time+and+queue+time%29+to+influence+the+behavior+of+our+builds+and+it+is+really+easy+to+change+them.++However+sometimes+we+need+to+have+a+parameter+shared+across+several+build+definitions.+Using+out+of+the+box+feat'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='linkedin'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-850px 0px'   /> <span class="head">Share on Linkedin</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Foundation Build: Sharing parameters between several build definitions on Posterous'  href='http://posterous.com/share?linkto=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;title=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions&amp;selection=%26%23160%3B++Team+Foundation+Build+provides+us+with+a+nice+editor+where+we+can+define+parameters+%28both+at+design+time+and+queue+time%29+to+influence+the+behavior+of+our+builds+and+it+is+really+easy+to+change+them.++However+sometimes+we+need+to+have+a+parameter+shared+across+several+build+definitions.+Using+out+of+the+box+feat'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='posterous'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1275px 0px'   /> <span class="head">Share on Posterous</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Foundation Build: Sharing parameters between several build definitions on Reddit'  href='http://www.reddit.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;title=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='reddit'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1325px 0px'   /> <span class="head">share via Reddit</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Foundation Build: Sharing parameters between several build definitions with Stumblers'  href='http://www.stumbleupon.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;title=Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='stumble'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1500px 0px'   /> <span class="head">Share with Stumblers</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Tweet this post : Team Foundation Build: Sharing parameters between several build definitions on Twitter'  href="http://twitter.com/share?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F&amp;text="  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='twitter'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1625px 0px'   /> <span class="head">Tweet about it</span></a></li><li class="iconOnly"><a rel="_self" href="http://pascoal.net/2011/11/team-foundation-build-sharing-parameters-between-several-build-definitions/feed" title="Follow this post : Team Foundation Build: Sharing parameters between several build definitions comments"><img src="http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif" height="24"  width="24" style="background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1350px 0px" class="image-24"  alt="rss" /> <span class="head">Subscribe to the comments on this post</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Print this post : Team Foundation Build: Sharing parameters between several build definitions for reading later'  href='javascript:window.print();'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='print'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1300px 0px'   /> <span class="head">Print for later</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Bookmark this post : Team Foundation Build: Sharing parameters between several build definitions'  href='javascript:window.bookMark("http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fteam-foundation-build-sharing-parameters-between-several-build-definitions%2F", "Team+Foundation+Build%3A+Sharing+parameters+between+several+build+definitions", BrowserDetect.browser);'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='bookmark'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-100px 0px'   /> <span class="head">Bookmark in Browser</span></a></li></ul><div class="clean"></div> </div>		</div><!-- END entry -->
	</div><!-- END post -->
		<div class="post-206 post type-post status-publish format-standard hentry category-uncategorized tag-teambuild tag-tfs" id="post-206"><!-- post div -->
		<h2 class="title"><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-ii-the-api/">Using Team Foundation Server Registry&ndash;Part II the API</a></h2>
		<div class="post-info-top">
			<span class="post-info-date">Posted by Tiago Pascoal on November 13, 2011 </span>
			<span id="gotocomments"><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-ii-the-api/#comments" title="Comment on Using Team Foundation Server Registry&ndash;Part II the API">2 comments</a></span>
		</div>
		<div class="clear"></div>
		<div class="entry">
			<div style="float:right;padding: 0 0 10px 10px" class="interactive_right"><div class='button_holder_right'><iframe allowtransparency='true' frameborder='0' scrolling='no' src='//platform.twitter.com/widgets/tweet_button.html?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;text=Using Team Foundation Server Registry&ndash;Part II the API&amp;count=vertical&amp;lang=' style='width:65px; height:65px;' ></iframe></div><div class='button_holder_right'><iframe src='//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;layout=box_count&amp;show_faces=false&amp;width=65&amp;action=like&amp;font=arial&amp;colorscheme=light&amp;height=65' scrolling='no' frameborder='0' style='border:none; overflow:hidden; width:65px; height:65px;' allowTransparency='true'></iframe></div></div><p>&#160;</p>
<p><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-i-the-concepts">On the first part of this series</a> I talked about what is the registry and some basic scenarios usage, on this post I want to talk about how you manipulate registry entries.</p>
<p>You have two choices, using an utility to manipulate entries or using TFS object model (or <a href="http://archive.msdn.microsoft.com/TfsSdk">SDK as it is officially called</a>) using a .Net language or Powershell</p>
<h1>Using an utility</h1>
<p><a href="http://blog.nenoloje.com/">Neno Loje</a> wrote tfsreg.exe that you can use to manipulate (both read and write) registry values.</p>
<p>You can see an example of how to use it on a <a href="http://msmvps.com/blogs/vstsblog/archive/2011/02/01/change-notification-delay-setting-in-tfs-2010.aspx">blog post</a>&#160; where Neno explains how to change the email notification delay (a setting that is stored in the configuration registry)</p>
<p>You can download the tool from the mentioned post.</p>
<p>Note: Although it is not clear on the post or on the utility itself, this tool only allows you to manipulate registry entries from the configuration registry (at least for now <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://pascoal.net/wp-content/uploads/2011/11/wlEmoticon-smile1.png" />) .</p>
<h1>Reading/Writing values</h1>
<p>All code is using the client object model, but most (if not all) calls also have a counterpart server object model that can be used on server scenarios.</p>
<p>You can manipulate registry entries using the <a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.framework.client.iteamfoundationregistry.aspx">ITeamFoundationRegistry</a> interface. </p>
<p>Assuming you are already connected to TFS and have in your possession a valid reference to </p>
<p><a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.client.tfsteamprojectcollection.aspx">TfsTeamProjectCollection</a> object all you need to do to get a value is this (assuming you have enough permissions)</p>
<pre>ITeamFoundationRegistry service = tfs.GetService&lt;ITeamFoundationRegistry&gt;();
 
service.GetValue(key);</pre>
<p>You can also have at your disposal the generic methods <a href="http://msdn.microsoft.com/en-us/library/ff738281.aspx">GetValue&lt;T&gt;</a> there are also overloads that can return a default value if the key is not found (OR you don’t have permissions to read it)</p>
<p>To write a value all you need is to use the <a href="http://msdn.microsoft.com/en-us/library/ff732877.aspx">SetValue</a> member.</p>
<p>Pretty simple huh?</p>
<p>This is to access the a project collection registry, if you want to access the configuration registration instead you (if you have a connection to a project collection) you can get a reference like this</p>
<pre>var regService = tfs.ConfigurationServer.GetService&lt;ITeamFoundationRegistry&gt;();</pre>
<p>All the rest remains equal (you can also connect directly to the server using the class <a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.client.tfsconfigurationserver.aspx">TfsConfigurationServer</a> and then obtaining a reference to <a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.framework.client.iteamfoundationregistry.aspx">ITeamFoundationRegistry</a> </p>
<h1>Setting Permissions</h1>
<p>Setting permissions requires a bit of more work,since there are (that I know of) not utilities to do this. It is still simple anyways. In order to read/set/remove a permission you need to use SecurityNamespace to manipulate objects from <a href="http://msdn.microsoft.com/pt-br/library/microsoft.teamfoundation.framework.common.frameworksecurity.registrynamespaceid.aspx">Registry Namepace</a>, we can obtain it&#160; via <a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.framework.client.isecurityservice.aspx">ISecurityService</a>.</p>
<p>So in order to get a security namespace that can manipulate permissions from registry objects you need to something like this snippet:</p>
<pre>var server = tfs.GetService&lt;ISecurityService&gt;();
var securityNamespace = server.GetSecurityNamespace(FrameworkSecurity.RegistryNamespaceId);</pre>
<p>We can then use the <a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.framework.client.securitynamespace.setpermissions.aspx">SetPermissions</a> method to set out permission, the following snippet </p>
<pre class="csharpcode">securityNamespace.SetPermissions(<span class="str">&quot;/&quot;</span>, identity.Descriptor ,RegistryServicePermissions.AllPermissions, 0, <span class="kwrd">true</span>);</pre>
<p>Now to dissect these parameters.</p>
<p>The signature for the method is:</p>
<pre class="csharpcode"><span class="kwrd">public</span> <span class="kwrd">abstract</span> AccessControlEntry SetPermissions(
    <span class="kwrd">string</span> token,
    IdentityDescriptor descriptor,
    <span class="kwrd">int</span> allow,
    <span class="kwrd">int</span> deny,
    <span class="kwrd">bool</span> merge
)</pre>
<style type="text/css">
<p>.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }</style>
<p>&#160;</p>
<ul>
<li>token paremeter we will pass <strong>/</strong> which means we will be granting access to the entire registry. If you want to grant just access to a part of the tree, this is the place to do it </li>
<li>identityDescriptor we will pass the account/group for which we will be granting the parameter (more on this later) </li>
<li>allow parameter we pass the value the value RegistryServicePermissions.AllPermissions since we want to grant read/write access </li>
<li>deny parameter we will pass 0 since we don’t wan to deny anything </li>
<li>merge we will pass true, since we want this permissions to be merged with existing ones (just in case) </li>
</ul>
<p>Note: the value 1 and 2 on the allow/deny parameter depends on the type of security namespace we are dealing with, and it can be obtained from the security catalog.</p>
<p>To get and identity descriptor you need to use <a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.framework.client.iidentitymanagementservice.aspx">IIdentityManagementService</a>, this snippet will allow you to get the identity of the group <strong>[DefaultCollection]\Project Collection Build Service Accounts</strong></p>
<pre class="csharpcode"><p>var identityService = tfs.GetService&lt;IIdentityManagementService&gt;();</p><p>var identity = identityService.ReadIdentity(
    IdentitySearchFactor.DisplayName,
    <span class="str">@&quot;[DefaultCollection]\Project Collection Build Service Accounts&quot;</span>, 
    MembershipQuery.Direct, 
    ReadIdentityOptions.None);
</p></pre>
<p>Notice the first parameter is key to the search, you can either search the user by it’s display name or by account name (IdentitySearchFactor.AccountName), but if you use Account name, the account will have to be in the format</p>
<p>vstfs:///Framework/IdentityDomain/&lt;ID&gt;\\&lt;Name&gt;</p>
<p>so using the same example the account name would be</p>
<p>String.Format(&quot;vstfs:///Framework/IdentityDomain/{0}\\Project Collection Build Service Accounts&quot;, tfs.InstanceId.ToString());</p>
<p>It is very important that specify the searchFactorValue in the right format or you won’t find the identity descriptor you are looking for.</p>
<div class='shareinpost'><ul class="socialwrap row"><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part II the API on Blogger'  href='http://www.blogger.com/blog_this.pyra?t&amp;u=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;n=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API&amp;pli=1'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='blogger'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-75px 0px'   /> <span class="head">Blog this!</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Bookmark this post : Using Team Foundation Server Registry&ndash;Part II the API on Delicious'  href='http://delicious.com/post?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='delicious'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-175px 0px'   /> <span class="head">Bookmark on Delicious</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Recommend this post : Using Team Foundation Server Registry&ndash;Part II the API on Facebook'  href='http://www.facebook.com/sharer.php?u=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;t=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='facebook'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-300px 0px'   /> <span class="head">Recommend on Facebook</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title=''  href='https://plusone.google.com/_/+1/confirm?hl=en&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='gplus'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-625px 0px'   /> <span class="head"></span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part II the API on Linkedin'  href='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API&amp;summary=%26%23160%3B++On+the+first+part+of+this+series+I+talked+about+what+is+the+registry+and+some+basic+scenarios+usage%2C+on+this+post+I+want+to+talk+about+how+you+manipulate+registry+entries.++You+have+two+choices%2C+using+an+utility+to+manipulate+entries+or+using+TFS+object+model+%28or+SDK+as+it+is+officially+called%29+using+a+.Net+lan'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='linkedin'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-850px 0px'   /> <span class="head">Share on Linkedin</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part II the API on Posterous'  href='http://posterous.com/share?linkto=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API&amp;selection=%26%23160%3B++On+the+first+part+of+this+series+I+talked+about+what+is+the+registry+and+some+basic+scenarios+usage%2C+on+this+post+I+want+to+talk+about+how+you+manipulate+registry+entries.++You+have+two+choices%2C+using+an+utility+to+manipulate+entries+or+using+TFS+object+model+%28or+SDK+as+it+is+officially+called%29+using+a+.Net+lan'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='posterous'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1275px 0px'   /> <span class="head">Share on Posterous</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part II the API on Reddit'  href='http://www.reddit.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='reddit'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1325px 0px'   /> <span class="head">share via Reddit</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part II the API with Stumblers'  href='http://www.stumbleupon.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='stumble'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1500px 0px'   /> <span class="head">Share with Stumblers</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Tweet this post : Using Team Foundation Server Registry&ndash;Part II the API on Twitter'  href="http://twitter.com/share?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F&amp;text="  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='twitter'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1625px 0px'   /> <span class="head">Tweet about it</span></a></li><li class="iconOnly"><a rel="_self" href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-ii-the-api/feed" title="Follow this post : Using Team Foundation Server Registry&ndash;Part II the API comments"><img src="http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif" height="24"  width="24" style="background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1350px 0px" class="image-24"  alt="rss" /> <span class="head">Subscribe to the comments on this post</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Print this post : Using Team Foundation Server Registry&ndash;Part II the API for reading later'  href='javascript:window.print();'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='print'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1300px 0px'   /> <span class="head">Print for later</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Bookmark this post : Using Team Foundation Server Registry&ndash;Part II the API'  href='javascript:window.bookMark("http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-ii-the-api%2F", "Using+Team+Foundation+Server+Registry%E2%80%93Part+II+the+API", BrowserDetect.browser);'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='bookmark'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-100px 0px'   /> <span class="head">Bookmark in Browser</span></a></li></ul><div class="clean"></div> </div>		</div><!-- END entry -->
	</div><!-- END post -->
		<div class="post-204 post type-post status-publish format-standard hentry category-uncategorized tag-teambuild tag-tfs" id="post-204"><!-- post div -->
		<h2 class="title"><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-i-the-concepts/">Using Team Foundation Server Registry&ndash;Part I The concepts</a></h2>
		<div class="post-info-top">
			<span class="post-info-date">Posted by Tiago Pascoal on November 13, 2011 </span>
			<span id="gotocomments"><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-i-the-concepts/#comments" title="Comment on Using Team Foundation Server Registry&ndash;Part I The concepts">1 comments</a></span>
		</div>
		<div class="clear"></div>
		<div class="entry">
			<div style="float:right;padding: 0 0 10px 10px" class="interactive_right"><div class='button_holder_right'><iframe allowtransparency='true' frameborder='0' scrolling='no' src='//platform.twitter.com/widgets/tweet_button.html?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;text=Using Team Foundation Server Registry&ndash;Part I The concepts&amp;count=vertical&amp;lang=' style='width:65px; height:65px;' ></iframe></div><div class='button_holder_right'><iframe src='//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;layout=box_count&amp;show_faces=false&amp;width=65&amp;action=like&amp;font=arial&amp;colorscheme=light&amp;height=65' scrolling='no' frameborder='0' style='border:none; overflow:hidden; width:65px; height:65px;' allowTransparency='true'></iframe></div></div><p>&#160;</p>
<p>Since the beginning Team Foundation Server uses a registry to store it’s settings (like Sharepoint location,external address,database configuration, etc), with the introduction of the 2010 version, the registry has been revamped to be much easier to use (pre 2010 it was a XML file that you had to manager yourself. Including the values that didn’t pertain you).</p>
<p>So starting with 2010, we have a nice API to manipulate the registry in a easier way. The registry is not only used by TFS to store it’s settings but it can also be used to store your settings. </p>
<p>There are many scenarios for which you can use the registry. If you need to store metadata that is project related and needs to be shared globally among several users you can use the registry to store those values instead of storing them on your own database.</p>
<p>The advantages are obvious, no need to manage an external storage mechanism, the data is contained within TFS with all the associated advantages (backup/restore, if you move a collection to another server they follow the collection, etc.).</p>
<p>The registry is not a database, you don’t (formally) define a schema for your settings. The registry is an hierarchical key/value database. You can define your keys in an hierarchical manner and the registry is agnostic about your data values (so you can use it to store, .Net types (being string the most common) or XML).</p>
<p>For example TFS uses the registry to store the email notifications settings on the following keys:</p>
<ul>
<li>/Service/Integration/Settings/EmailEnabled </li>
<li>/Service/Integration/Settings/SmtpServer </li>
<li>/Service/Integration/Settings/EmailNotificationFromAddress </li>
</ul>
<p>Notice the trend? Service –&gt; Integration –&gt; Settings stores a bunch of TFS related settings.</p>
<p>The API is public and you are free to use the registry, unfortunately the registry is not widely documented. I hope with this post demystify the registry, it’s semantics and how you can manipulate it.</p>
<p>There are two types of values in the registry. values and user values. </p>
<p>The values are registry scoped and anyone can read/write them (as long as they have the appropriate permissions), so it is appropriate to use when you have a setting that is going to be shared among all users.</p>
<p>User values are scoped to the user, they are private to the user and only the user can read/write them. This is great if you want to store settings for a user independent of it’s location, so you can store values in the user registry and he/she can roam around machines having the same settings everywhere (when you say application you can also say Fat client (eg: <a href="http://www.microsoft.com/visualstudio">visual studio</a>) and web. In fact this is exactly what Web Access does, it stores user preferences in the user registry.</p>
<p>There are two different registry storages, the project collection registry and the server registry (stored on the configuration database). The collection registry is stored along with all data of the project collection, so if you detach the collection and move it to another server the registry follows the collection, the configuration registry is stored on the configuration database, so you should use it to store parameters that are server related. If you move collection to another server and you are relying on some values on the configuration registry, it will be your responsibility to recreate them on the other server.</p>
<p>There are two kinds of security constraints applied to the registry. To read/write registry (depending on the registry) enters you need the following permissions</p>
<ul>
<li><strong>View collection-level information </strong>for a collection registry </li>
<li><strong>View instance-level information</strong> for a configuration registry </li>
</ul>
<p>These permissions are the first barrier, then you need permission to access the object itself (but since this is hierarchical you can grant/deny permission to a branch of tree). By default these are permissions to registry keys.</p>
<p>For the configuration registry</p>
<table border="1" cellspacing="0" cellpadding="2" width="510">
<tbody>
<tr>
<td valign="top" width="359">Permission</td>
<td valign="top" width="66"><strong>Path</strong></td>
<td valign="top" width="49"><strong>Read</strong></td>
<td valign="top" width="34"><strong>Write</strong></td>
</tr>
<tr>
<td valign="top" width="359">Team Foundation Service Accounts</td>
<td valign="top" width="66">
<p align="center">/</p>
</td>
<td valign="top" width="49">
<p align="center">X</p>
</td>
<td valign="top" width="34">
<p align="center">X</p>
</td>
</tr>
<tr>
<td valign="top" width="359">SharePoint Web Application Services</td>
<td valign="top" width="66">
<p align="center">/</p>
</td>
<td valign="top" width="49">
<p align="center">X</p>
</td>
<td valign="top" width="34">&#160;</td>
</tr>
<tr>
<td valign="top" width="359">Team Foundation Administrators</td>
<td valign="top" width="66">
<p align="center">/</p>
</td>
<td valign="top" width="49">
<p align="center">X</p>
</td>
<td valign="top" width="34">
<p align="center">X</p>
</td>
</tr>
</tbody>
</table>
<p>For a collection registry</p>
<table border="1" cellspacing="0" cellpadding="2" width="625">
<tbody>
<tr>
<td valign="top" width="424">Permission</td>
<td valign="top" width="10"><strong>Path</strong></td>
<td valign="top" width="49"><strong>Read</strong></td>
<td valign="top" width="140"><strong>Write</strong></td>
</tr>
<tr>
<td valign="top" width="424">Project Collection Service Accounts</td>
<td valign="top" width="10">
<p align="center">/</p>
</td>
<td valign="top" width="49">
<p align="center">X</p>
</td>
<td valign="top" width="140">
<p align="center">X</p>
</td>
</tr>
<tr>
<td valign="top" width="424">Project Collection Administrators</td>
<td valign="top" width="10">
<p align="center">/</p>
</td>
<td valign="top" width="49">
<p align="center">X</p>
</td>
<td valign="top" width="140">
<p align="center">X</p>
</td>
</tr>
<tr>
<td valign="top" width="424">Project Collection Valid Users</td>
<td valign="top" width="10">
<p align="center">/Service/Registration/RegistrationExtendedAttribute/</p>
</td>
<td valign="top" width="49">
<p align="center">X</p>
</td>
<td valign="top" width="140">
<p align="center"></p>
</td>
</tr>
</tbody>
</table>
<p>&#160;</p>
<p><strong>Note</strong>: reading the registry has a semantic that is not common, if don’t you have first level of permissions (View collection-level information for example) the operation will fail with an exception. If you don’t have permission at the object level any read operation will not fail with an exception but it won’t return anything (even if the object exists).</p>
<p>This happens to avoid disclosing information that a node exists (it’s mere existence) to people who do not have access to it. It’s a typical technique of multilevel security systems to avoid leakage of information with inference atacks. For example if you have a value with a key <strong>/Settinga/OnToBeFiredList/JohnDoe </strong>I may not have access to it’s value due to lack of permission but if an error was flagged we could know it exists. Sometimes the mere acknowledge of the existence of information is reason enough to be denied. </p>
<p>It is debatable if the existence of such semantics doesn’t out weight the costs of not having errors being flagged when we don’t have access to information that we want to access. But such discussion is pointless since that the way things are. <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://pascoal.net/wp-content/uploads/2011/11/wlEmoticon-smile.png" /></p>
<p><strong>As of today (to be read, it is like it is today it can change tomorrow) access to the registry on Team Foundation Services (AKA as tfspreview.com or TFS on Azure)&#160; has been hardened so you can’t read/write no matter what kind of permissions you have.</strong></p>
<p><a href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-ii-the-api/">On the second part of this series I will delve into the registry API, how we can read/write values to the registry and now we can manage permissions to it.</a></p>
<div class='shareinpost'><ul class="socialwrap row"><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Blogger'  href='http://www.blogger.com/blog_this.pyra?t&amp;u=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;n=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts&amp;pli=1'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='blogger'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-75px 0px'   /> <span class="head">Blog this!</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Bookmark this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Delicious'  href='http://delicious.com/post?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='delicious'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-175px 0px'   /> <span class="head">Bookmark on Delicious</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Recommend this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Facebook'  href='http://www.facebook.com/sharer.php?u=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;t=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='facebook'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-300px 0px'   /> <span class="head">Recommend on Facebook</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title=''  href='https://plusone.google.com/_/+1/confirm?hl=en&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='gplus'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-625px 0px'   /> <span class="head"></span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Linkedin'  href='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts&amp;summary=%26%23160%3B++Since+the+beginning+Team+Foundation+Server+uses+a+registry+to+store+it%E2%80%99s+settings+%28like+Sharepoint+location%2Cexternal+address%2Cdatabase+configuration%2C+etc%29%2C+with+the+introduction+of+the+2010+version%2C+the+registry+has+been+revamped+to+be+much+easier+to+use+%28pre+2010+it+was+a+XML+file+that+you+had+to+manager+your'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='linkedin'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-850px 0px'   /> <span class="head">Share on Linkedin</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Posterous'  href='http://posterous.com/share?linkto=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts&amp;selection=%26%23160%3B++Since+the+beginning+Team+Foundation+Server+uses+a+registry+to+store+it%E2%80%99s+settings+%28like+Sharepoint+location%2Cexternal+address%2Cdatabase+configuration%2C+etc%29%2C+with+the+introduction+of+the+2010+version%2C+the+registry+has+been+revamped+to+be+much+easier+to+use+%28pre+2010+it+was+a+XML+file+that+you+had+to+manager+your'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='posterous'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1275px 0px'   /> <span class="head">Share on Posterous</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Reddit'  href='http://www.reddit.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='reddit'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1325px 0px'   /> <span class="head">share via Reddit</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Using Team Foundation Server Registry&ndash;Part I The concepts with Stumblers'  href='http://www.stumbleupon.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;title=Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='stumble'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1500px 0px'   /> <span class="head">Share with Stumblers</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Tweet this post : Using Team Foundation Server Registry&ndash;Part I The concepts on Twitter'  href="http://twitter.com/share?url=http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F&amp;text="  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='twitter'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1625px 0px'   /> <span class="head">Tweet about it</span></a></li><li class="iconOnly"><a rel="_self" href="http://pascoal.net/2011/11/using-team-foundation-server-registrypart-i-the-concepts/feed" title="Follow this post : Using Team Foundation Server Registry&ndash;Part I The concepts comments"><img src="http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif" height="24"  width="24" style="background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1350px 0px" class="image-24"  alt="rss" /> <span class="head">Subscribe to the comments on this post</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Print this post : Using Team Foundation Server Registry&ndash;Part I The concepts for reading later'  href='javascript:window.print();'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='print'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1300px 0px'   /> <span class="head">Print for later</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Bookmark this post : Using Team Foundation Server Registry&ndash;Part I The concepts'  href='javascript:window.bookMark("http%3A%2F%2Fpascoal.net%2F2011%2F11%2Fusing-team-foundation-server-registrypart-i-the-concepts%2F", "Using+Team+Foundation+Server+Registry%E2%80%93Part+I+The+concepts", BrowserDetect.browser);'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='bookmark'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-100px 0px'   /> <span class="head">Bookmark in Browser</span></a></li></ul><div class="clean"></div> </div>		</div><!-- END entry -->
	</div><!-- END post -->
		<div class="post-201 post type-post status-publish format-standard hentry category-uncategorized tag-teambuild tag-tfs" id="post-201"><!-- post div -->
		<h2 class="title"><a href="http://pascoal.net/2011/10/team-build-building-code-with-visual-studio/">Team Build: Building code with Visual Studio</a></h2>
		<div class="post-info-top">
			<span class="post-info-date">Posted by Tiago Pascoal on October 4, 2011 </span>
			<span id="gotocomments"><a href="http://pascoal.net/2011/10/team-build-building-code-with-visual-studio/#respond" title="Comment on Team Build: Building code with Visual Studio">None comments</a></span>
		</div>
		<div class="clear"></div>
		<div class="entry">
			<div style="float:right;padding: 0 0 10px 10px" class="interactive_right"><div class='button_holder_right'><iframe allowtransparency='true' frameborder='0' scrolling='no' src='//platform.twitter.com/widgets/tweet_button.html?url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;text=Team Build: Building code with Visual Studio&amp;count=vertical&amp;lang=' style='width:65px; height:65px;' ></iframe></div><div class='button_holder_right'><iframe src='//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;layout=box_count&amp;show_faces=false&amp;width=65&amp;action=like&amp;font=arial&amp;colorscheme=light&amp;height=65' scrolling='no' frameborder='0' style='border:none; overflow:hidden; width:65px; height:65px;' allowTransparency='true'></iframe></div></div><p>&#160;</p>
<p>Little Synopse (so you don’t give up on the first boring paragraph <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://pascoal.net/wp-content/uploads/2011/10/wlEmoticon-smile.png" />). On this post I’m intend to explain how you can build your code in Team Build using <a href="http://www.microsoft.com/visualstudio">Visual Studio</a>, for project types or for solutions that contains projects not supported by <a href="http://msdn.microsoft.com/en-us/library/0k6kkbsd.aspx">MSBuild</a>.</p>
<p>A few months ago (ok more than a few) I wrote two posts (<a title="Getting Visual Studio installation directory" href="http://pascoal.net/2011/04/getting-visual-studio-installation-directory/">Getting Visual Studio installation directory</a> and <a title="Getting Visual Studio version of a Solution file" href="http://pascoal.net/2011/05/getting-visual-studio-version-of-a-solution-file/">Getting Visual Studio version of a Solution file</a>) where I explained how we could get the installation folder of a given version of Visual Studio and how you can determine the version of Visual Studio (solution) file.</p>
<p>This was part of a bigger plan, and at the time I promised this would culminate in a post where I would develop a team build workflow activity that could be leveraged to build solutions using Visual Studio.</p>
<p>At first sight it may seem strange to use Visual Studio to build a solution, when Team Build supports building solutions out of the box using <a href="http://msdn.microsoft.com/en-us/library/0k6kkbsd.aspx">MSBuild</a> (which requires no further installations since it’s part of the .Net Framework). That is the recommended way to go, unfortunately not all project types are supported by MSBuild. So we need to resort to Visual Studio to build them (which is a pain since it requires installing Visual Studio on the build agent machine(s)).</p>
<p>There a bunch of project types that are not buildable with MSBuild, to name just a few</p>
<ul>
<li>Setup Projects (vdproj) (which are no longer part of Visual Studio starting from (not yet released) dev11) </li>
<li>Biztalk 2004, 2006 and 2006R2 </li>
<li>Business Intelligence Studio Projects (reports, analysis services, etc) (commonly known as BIDS) </li>
</ul>
<p>If you need to build a solution which contains one or more of these project types you will need to compile your code with Visual Studio (<a href="http://msdn.microsoft.com/en-us/library/xee0c8y7(v=VS.80).aspx">devenv</a>). The easiest approach is call devenv.exe by using the activity <strong><a href="http://msdn.microsoft.com/en-us/library/microsoft.teamfoundation.build.workflow.activities.invokeprocess.aspx">InvokeProcess</a></strong>. This requires you to know the installation path of Visual Studio&#160; (which varies on 32 and 64 bit machines), the correct version to use (you may have more one version installed), you lose logging of errors and output, the open the log file experience from the build logs….</p>
<p>There is plenty of literature on the web how to achieve this, for example example <a href="http://geekswithblogs.net/jakob/archive/2010/05/14/building-visual-studio-setup-projects-with-tfs-2010-team-build.aspx">here</a> , <a href="http://blogs.objectsharp.com/cs/blogs/dave/archive/2011/03/31/tfs-build-invoke-process-activity.aspx">here</a> or <a href="http://donovanbrown.com/post/I-need-to-build-a-project-that-is-not-supported-by-MSBuild.aspx">here</a></p>
<p>In order to help with this task, I had promised a post with working code for an activity that would easily allow you to do this. But I’ve reconsidered, instead of providing with a sample on the blog, I’ve proposed the maintainers of <a href="http://tfsbuildextensions.codeplex.com/">Community TFS Build Extensions</a> to let me add this activity the already big arsenal of activities that they have. Since they were foolish enough to accept my code, you can use this activity along with other great activities in a single install.</p>
<p>So this post, will not get into great details of the code itself, but will focus how you can use this activity. You can download it in binary form from the Codeplex site or the source code (also from codeplex) if you wish to dissect it. (be sure to download the latest version, I’ve replaced the previous version of the activity (with the same name). It has more features than the previous one, but it also breaks backward compatibility).</p>
<p>When I designed the activity I had the following objectives</p>
<ul>
<li>Support all VS build related actions (clean, build, rebuild and deploy)
<ul>
<li>This can be useful not only for compilation but also for deployment which needs to be done using Visual Studio (eg: Biztalk or SQL Server Reports) </li>
</ul>
</li>
<li>Automatic detection of the version of Visual Studio to use (with the opportunity for manual fallback). This allows building using several Visual Studio Versions in a single box (e.g.: use VS2005 for Biztalk projects and VS2008 for SQL2008 BIDS projects) </li>
<li>Control the level of logging (separate from the general level) to include in the build logs itself the output of Visual Studio invocation results </li>
<li>The Log should also be stored in the in the drops folder, this log should be easily accessible from the logs build with a link for easy inspection </li>
<li>Support activity cancellation. For activities that may take a long time, it is advisable that then can be cancellable. Otherwise if the user tries to cancel them and they don’t respond in two minutes it may (not necessarily but it may) leave the agent in an inconsistent state. </li>
</ul>
<p>The activity aims for simplicity of use. As with all Community TFS Build Extensions the activity appears in the Workflow activity toolbox</p>
<p>&#160;<a href="http://pascoal.net/wp-content/uploads/2011/10/wfactivitytoolbox.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="wfactivitytoolbox" border="0" alt="wfactivitytoolbox" src="http://pascoal.net/wp-content/uploads/2011/10/wfactivitytoolbox_thumb.png" width="189" height="244" /></a></p>
<p>To use the activity just drag it into to WF canvas, it has the following parameters that you can use to define it’s behavior (I will only comment on this activity specific parameter. I will omit all parameters that are common to all activities present in the Community TFS Build Extensions. </p>
<p><a href="http://pascoal.net/wp-content/uploads/2011/10/VSDenvActivity-Parameters.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="VSDenvActivity-Parameters" border="0" alt="VSDenvActivity-Parameters" src="http://pascoal.net/wp-content/uploads/2011/10/VSDenvActivity-Parameters_thumb.png" width="469" height="291" /></a></p>
<ul>
<li><strong>Action</strong> – The action you want Visual Studio to perform. Possible values
<ul>
<li>Build </li>
<li>Rebuild </li>
<li>Clean </li>
<li>Deploy </li>
</ul>
</li>
<li><strong>Configuration – </strong>The configuration definition it will be used by VS to perform this action. (eg: <strong>Debug</strong>, <strong>Release</strong>,etc.) </li>
<li><strong>Platform</strong> –The platform definition it will be used by VS to perform this action (eg: <strong>.Net</strong>, <strong>Any CPU</strong>,etc.) </li>
<li><strong>FilePath</strong> – The complete path of the file we wish to perform the action upon. Either a VS solution file (<strong>.sln</strong>) or a project file (eg: <strong>.csproj</strong>, <strong>.vbproj</strong>, etc.) (this is a local path on disk)</li>
<li><strong>Version</strong> –The Visual Studio version used to perform the action on the selected file. The are the market values for which the VS versions are known. Possible Values
<ul>
<li>Auto – Automatically use the appropriate VS version for performing the requested action&#160; (Note: This can be only be used for .sln files) </li>
<li>VSNet2002 </li>
<li>VSNet2003 </li>
<li>VS2005 </li>
<li>VS2008 </li>
<li>VS2010 </li>
<li>Dev11 – Yes we already support <a href="http://msdn.microsoft.com/en-us/vstudio/hh127353">Visual Studio Dev11 Preview</a> </li>
</ul>
</li>
<li><strong>OutputFile</strong> – the complete path (including filename) where the execution log file will be store. Use only this for a very specific reason. If you leave this parameter empty the system will automatically write the output to a file called &lt;filebeingbuilt&gt;&lt;configuration&gt;&lt;platform&gt;.log that will be stored in the logs folder of the drops folder. </li>
<li><strong>OutputLoggingLevel</strong> –The minimum logging level to log the output of visual studio in the builds logs details (the log fill will still hold the output). </li>
</ul>
<p>I think this is enough to get you started. Let me know if you have any suggestions or suggestions to improve the activity.</p>
<p><strong>Future Plans</strong>: Add an activity that will allow to determine if a given solution can be built with MSBuild or it requires Visual Studio. This will allow to use a single template to build solutions with msbuild (as the out of the box template does) as well as solutions that require Visual Studio without having to parameterize it.</p>
<div class='shareinpost'><ul class="socialwrap row"><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Build: Building code with Visual Studio on Blogger'  href='http://www.blogger.com/blog_this.pyra?t&amp;u=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;n=Team+Build%3A+Building+code+with+Visual+Studio&amp;pli=1'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='blogger'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-75px 0px'   /> <span class="head">Blog this!</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Bookmark this post : Team Build: Building code with Visual Studio on Delicious'  href='http://delicious.com/post?url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;title=Team+Build%3A+Building+code+with+Visual+Studio'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='delicious'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-175px 0px'   /> <span class="head">Bookmark on Delicious</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Recommend this post : Team Build: Building code with Visual Studio on Facebook'  href='http://www.facebook.com/sharer.php?u=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;t=Team+Build%3A+Building+code+with+Visual+Studio'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='facebook'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-300px 0px'   /> <span class="head">Recommend on Facebook</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title=''  href='https://plusone.google.com/_/+1/confirm?hl=en&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;title=Team+Build%3A+Building+code+with+Visual+Studio'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='gplus'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-625px 0px'   /> <span class="head"></span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Build: Building code with Visual Studio on Linkedin'  href='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;title=Team+Build%3A+Building+code+with+Visual+Studio&amp;summary=%26%23160%3B++Little+Synopse+%28so+you+don%E2%80%99t+give+up+on+the+first+boring+paragraph+%29.+On+this+post+I%E2%80%99m+intend+to+explain+how+you+can+build+your+code+in+Team+Build+using+Visual+Studio%2C+for+project+types+or+for+solutions+that+contains+projects+not+supported+by+MSBuild.++A+few+months+ago+%28ok+more+than+a+few%29+I+wrote+two+posts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='linkedin'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-850px 0px'   /> <span class="head">Share on Linkedin</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Build: Building code with Visual Studio on Posterous'  href='http://posterous.com/share?linkto=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;title=Team+Build%3A+Building+code+with+Visual+Studio&amp;selection=%26%23160%3B++Little+Synopse+%28so+you+don%E2%80%99t+give+up+on+the+first+boring+paragraph+%29.+On+this+post+I%E2%80%99m+intend+to+explain+how+you+can+build+your+code+in+Team+Build+using+Visual+Studio%2C+for+project+types+or+for+solutions+that+contains+projects+not+supported+by+MSBuild.++A+few+months+ago+%28ok+more+than+a+few%29+I+wrote+two+posts'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='posterous'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1275px 0px'   /> <span class="head">Share on Posterous</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Build: Building code with Visual Studio on Reddit'  href='http://www.reddit.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;title=Team+Build%3A+Building+code+with+Visual+Studio'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='reddit'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1325px 0px'   /> <span class="head">share via Reddit</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Share this post : Team Build: Building code with Visual Studio with Stumblers'  href='http://www.stumbleupon.com/submit?url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;title=Team+Build%3A+Building+code+with+Visual+Studio'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='stumble'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1500px 0px'   /> <span class="head">Share with Stumblers</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_blank'  title='Tweet this post : Team Build: Building code with Visual Studio on Twitter'  href="http://twitter.com/share?url=http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F&amp;text="  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='twitter'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1625px 0px'   /> <span class="head">Tweet about it</span></a></li><li class="iconOnly"><a rel="_self" href="http://pascoal.net/2011/10/team-build-building-code-with-visual-studio/feed" title="Follow this post : Team Build: Building code with Visual Studio comments"><img src="http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif" height="24"  width="24" style="background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1350px 0px" class="image-24"  alt="rss" /> <span class="head">Subscribe to the comments on this post</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Print this post : Team Build: Building code with Visual Studio for reading later'  href='javascript:window.print();'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='print'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-1300px 0px'   /> <span class="head">Print for later</span></a></li><li class="iconOnly"><a  rel='nofollow'  target='_self'  title='Bookmark this post : Team Build: Building code with Visual Studio'  href='javascript:window.bookMark("http%3A%2F%2Fpascoal.net%2F2011%2F10%2Fteam-build-building-code-with-visual-studio%2F", "Team+Build%3A+Building+code+with+Visual+Studio", BrowserDetect.browser);'  ><img  src='http://pascoal.net/wp-content/plugins/share-and-follow/images/blank.gif'  height='24' width='24'  class='image-24' alt='bookmark'  style='background: transparent url(http://pascoal.net/wp-content/plugins/share-and-follow/default/24/sprite-feb-24.png) no-repeat;padding:0;margin:0;height:24px;width:24px;background-position:-100px 0px'   /> <span class="head">Bookmark in Browser</span></a></li></ul><div class="clean"></div> </div>		</div><!-- END entry -->
	</div><!-- END post -->
	<div id="pagination"><a href="http://pascoal.net/tag/teambuild/page/2/" >Next page &raquo;</a></div></div><!--content-->
<div id="sidebar-border">
		<div id="rss"><a href="http://pascoal.net/feed/" rel="nofollow" title="RSS Feed">RSS Feed</a></div>
			<div id="sidebar">

<div id="text-2" class="widget widget_text"><h3 class="widgettitle">Task Board Enhancer</h3>			<div class="textwidget">You can always find information and download the latest version of Task Board Enhancer <a href="http://pascoal.net/task-board-enhancer/">here</a></div>
		</div><div id="text-4" class="widget widget_text"><h3 class="widgettitle">Me</h3>			<div class="textwidget"><a href="http://mvp.support.microsoft.com/">
<img src="/wp-content/uploads/2011/03/mvp.png"/></a>
<br/>
<br/>
<br/>
<a href="http://msdn.microsoft.com/en-us/vstudio/ee358786">
<img src="/wp-content/uploads/2011/03/ALMRangersLogo.png" /></a>
<br/>
<br/>
<a href="http://twitter.com/#!/tspascoal"><img src="/wp-content/uploads/2011/03/follow_me-a.png" /></a>
<br/>
<br/>
<a href="http://pt.linkedin.com/in/tiagopascoal"><img src="/wp-content/uploads/2011/03/LinkedIn_WebLogo_LowResExample.jpg"/></a>
<br/>
<br/>
<img src="http://pascoal.net/wp-content/uploads/2013/10/bitcoin_logo_plain.png" />
<a href="bitcoin:17k4viqGLJH3aPzYZaScngvem1cTPYzkdP?label=tspascoal">17k4viqGLJH3aPzYZaScngvem1cTPYzkdP</a></div>
		</div><div id="archives-3" class="widget widget_archive"><h3 class="widgettitle">Archive</h3>		<ul>
	<li><a href='http://pascoal.net/2014/06/'>June 2014</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2014/05/'>May 2014</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2014/03/'>March 2014</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2014/01/'>January 2014</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2013/11/'>November 2013</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2013/10/'>October 2013</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2013/07/'>July 2013</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2013/06/'>June 2013</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2013/05/'>May 2013</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2013/04/'>April 2013</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2013/02/'>February 2013</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2013/01/'>January 2013</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2012/12/'>December 2012</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2012/09/'>September 2012</a>&nbsp;(4)</li>
	<li><a href='http://pascoal.net/2012/08/'>August 2012</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2012/04/'>April 2012</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2012/02/'>February 2012</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2011/12/'>December 2011</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2011/11/'>November 2011</a>&nbsp;(3)</li>
	<li><a href='http://pascoal.net/2011/10/'>October 2011</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2011/09/'>September 2011</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2011/08/'>August 2011</a>&nbsp;(2)</li>
	<li><a href='http://pascoal.net/2011/07/'>July 2011</a>&nbsp;(1)</li>
	<li><a href='http://pascoal.net/2011/06/'>June 2011</a>&nbsp;(4)</li>
	<li><a href='http://pascoal.net/2011/05/'>May 2011</a>&nbsp;(6)</li>
	<li><a href='http://pascoal.net/2011/04/'>April 2011</a>&nbsp;(9)</li>
	<li><a href='http://pascoal.net/2011/03/'>March 2011</a>&nbsp;(1)</li>
		</ul>
</div><div id="calendar-4" class="widget widget_calendar"><h3 class="widgettitle">Posts</h3><div id="calendar_wrap"><table id="wp-calendar">
	<caption>July 2014</caption>
	<thead>
	<tr>
		<th scope="col" title="Monday">M</th>
		<th scope="col" title="Tuesday">T</th>
		<th scope="col" title="Wednesday">W</th>
		<th scope="col" title="Thursday">T</th>
		<th scope="col" title="Friday">F</th>
		<th scope="col" title="Saturday">S</th>
		<th scope="col" title="Sunday">S</th>
	</tr>
	</thead>

	<tfoot>
	<tr>
		<td colspan="3" id="prev"><a href="http://pascoal.net/2014/06/" title="View posts for June 2014">&laquo; Jun</a></td>
		<td class="pad">&nbsp;</td>
		<td colspan="3" id="next" class="pad">&nbsp;</td>
	</tr>
	</tfoot>

	<tbody>
	<tr>
		<td colspan="1" class="pad">&nbsp;</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td>
	</tr>
	<tr>
		<td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td>
	</tr>
	<tr>
		<td>14</td><td>15</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td>
	</tr>
	<tr>
		<td>21</td><td id="today">22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td>
	</tr>
	<tr>
		<td>28</td><td>29</td><td>30</td><td>31</td>
		<td class="pad" colspan="3">&nbsp;</td>
	</tr>
	</tbody>
	</table></div></div><div id="tag_cloud-3" class="widget widget_tag_cloud"><h3 class="widgettitle">Tag Cloud</h3><div class="tagcloud"><a href='http://pascoal.net/tag/alm-rangers/' class='tag-link-19' title='2 topics' style='font-size: 10pt;'>ALM Rangers</a>
<a href='http://pascoal.net/tag/book/' class='tag-link-17' title='1 topic' style='font-size: 8pt;'>Book</a>
<a href='http://pascoal.net/tag/community/' class='tag-link-27' title='1 topic' style='font-size: 8pt;'>Community</a>
<a href='http://pascoal.net/tag/labmanagement/' class='tag-link-12' title='1 topic' style='font-size: 8pt;'>LabManagement</a>
<a href='http://pascoal.net/tag/odata/' class='tag-link-16' title='1 topic' style='font-size: 8pt;'>OData</a>
<a href='http://pascoal.net/tag/talk/' class='tag-link-18' title='1 topic' style='font-size: 8pt;'>Talk</a>
<a href='http://pascoal.net/tag/task-board-enhancer/' class='tag-link-22' title='17 topics' style='font-size: 18.666666666667pt;'>Task Board Enhancer</a>
<a href='http://pascoal.net/tag/teambuild/' class='tag-link-20' title='7 topics' style='font-size: 14.666666666667pt;'>TeamBuild</a>
<a href='http://pascoal.net/tag/tfs/' class='tag-link-3' title='35 topics' style='font-size: 22pt;'>TFS</a>
<a href='http://pascoal.net/tag/visualstudio/' class='tag-link-8' title='6 topics' style='font-size: 14.111111111111pt;'>VisualStudio</a>
<a href='http://pascoal.net/tag/visualstudio2010/' class='tag-link-13' title='3 topics' style='font-size: 11.333333333333pt;'>VisualStudio2010</a>
<a href='http://pascoal.net/tag/visualstudio2010-tfs/' class='tag-link-10' title='1 topic' style='font-size: 8pt;'>VisualStudio2010 TFS</a>
<a href='http://pascoal.net/tag/vs2010/' class='tag-link-5' title='1 topic' style='font-size: 8pt;'>VS2010</a>
<a href='http://pascoal.net/tag/vso-enhancer/' class='tag-link-28' title='2 topics' style='font-size: 10pt;'>VSO Enhancer</a>
<a href='http://pascoal.net/tag/wp7/' class='tag-link-15' title='2 topics' style='font-size: 10pt;'>WP7</a></div>
</div>

	</div><!-- end: #sidebar -->
</div><!-- end: #sidebar-border --></div><!--wrapper-->
<div class="clear"></div>
<div id="footer">
	<div id="footer-inside">
		<p>
			Copyright&nbsp;&copy;&nbsp;2014&nbsp;Tiago Pascoal			&nbsp;|&nbsp;Powered by <a href="http://wordpress.org/">WordPress</a> 
			&nbsp;|&nbsp;Theme <a href="http://zww.me" title="designed by zwwooooo">zBench</a>
		</p>
		<span id="back-to-top">&Delta; <a href="#nav" rel="nofollow" title="Back to top">Top</a></span>
	</div>
</div><!--footer-->
	<div style="display:none">
	</div>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://pascoal.net/wp-content/plugins/jetpack/modules/wpgroho.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://pascoal.net/wp-content/plugins/share-and-follow/js/browser-check-for-bookmarks.js?ver=1'></script>

	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:2.2.7',blog:'40723683',post:'0',tz:'1'});
	var load_cmc = function(){linktracker_init(40723683,0,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script></body>
</html>
<!-- This Quick Cache file was built for (  pascoal.net/tag/teambuild/ ) in 1.40471 seconds, on Jul 22nd, 2014 at 9:17 am UTC. -->
<!-- This Quick Cache file will automatically expire ( and be re-built automatically ) on Jul 22nd, 2014 at 10:17 am UTC -->
