http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/
HTTP/1.0 200 OK
Date: Tue, 22 Jul 2014 15:25:15 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.3.3
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Pragma: no-cache
Set-Cookie: PHPSESSID=bm7of8oev2v7m7ohj19ev2ck26; path=/
X-Pingback: http://www.wildbunny.co.uk/blog/xmlrpc.php
Link: <http://www.wildbunny.co.uk/blog/?p=1846>; rel=shortlink
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 16904
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Understanding binary | Wildbunny blog</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.wildbunny.co.uk/blog/wp-content/themes/twentyten/style.css?v=0" />
<link rel="pingback" href="http://www.wildbunny.co.uk/blog/xmlrpc.php" />

<!-- BEGIN Metadata added by Add-Meta-Tags WordPress plugin
Get the plugin at: http://www.g-loaded.eu/2006/01/05/add-meta-tags-wordpress-plugin/ -->
<meta name="description" content="Hello and welcome back to my blog! In a kind of follow up to 10 steps to becoming a better programmer, this time I wanted to write about binary and binary operations, because I've been rather surprised by the number of people (some even running highly successful tech businesses) who simply don't understand such a useful tool." />
<meta name="keywords" content="self improvement, technical, beginner, tutorial" />
<meta name="blogcatalog" content="9BC10671562" />
<div id="ScribCode634274886"></div>
<!-- END Metadata added by Add-Meta-Tags WordPress plugin -->

<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Feed" href="http://www.wildbunny.co.uk/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Comments Feed" href="http://www.wildbunny.co.uk/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Understanding binary Comments Feed" href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/feed/" />
<link rel='stylesheet' id='bm-author-donations-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/bitmate-author-donations/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cntctfrm_stylesheet-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/contact-form-plugin/css/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-table-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-tables.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='oikCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/oik.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='bwlinkCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/bwlink.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp125style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp125/wp125.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='thsp-sticky-header-plugin-styles-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/css/public.css?ver=1.0.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='featured-post-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/featured-post.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='ws-plugin--s2member-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_css=1&#038;qcABC=1&#038;ver=140105-140105-2848662513' type='text/css' media='all' />
<link rel='stylesheet' id='mr_social_sharing-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/style.css?ver=3.8.2' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/swfobject.js?ver=2.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/comment-reply.min.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/jquery.cookie.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/cookielawinfo.js?ver=3.8.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var StickyHeaderParams = {"show_at":"200","hide_if_narrower":"600"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/js/public.js?ver=1.0.0'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/script.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/googleplus.js.php?lang=en_US&#038;ver=3.8.2'></script>
<script type='text/javascript' src='http://apis.google.com/js/plusone.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://connect.facebook.net/en_US/all.js?ver=3.8.2#xfbml=1'></script>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildbunny.co.uk/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildbunny.co.uk/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Fixing security sandbox violation in Flash AS3' href='http://www.wildbunny.co.uk/blog/2012/11/05/fixing-security-sandbox-violation-in-flash-as3/' />
<link rel='next' title='Next Post' href='http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/' />
<meta name="generator" content="WordPress 3.8.2" />
<link rel='canonical' href='http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/' />
<link rel='shortlink' href='http://www.wildbunny.co.uk/blog/?p=1846' />
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/js/bubble.js"></script>
<link rel="stylesheet" type="text/css" href="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/css/style.css" />
<style type="text/css">
<!-- Silverlight WordPress Plugin -->
#silverlightControlHost{height:100%;}
</style>
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS BEGIN -->
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/js/wpsfv2-js.php"></script> 
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS END -->

		<style type="text/css">
			#thsp-sticky-header {
				background-color: #181818;
			}
			#thsp-sticky-header,
			#thsp-sticky-header a {
				color: #f9f9f9 !important;
			}
											</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #EAEAEA; }
</style>
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">window.google_analytics_uacct = "ca-pub-4897461488762721";</script>
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-16999711-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="single single-post postid-1846 single-format-standard custom-background">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">Wildbunny blog</a>
					</span>
				</div>
				<div id="site-description">Developer knowledge centre</div>

										<img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/02/bunnyWP1.gif" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-flowhub-header" class="menu"><li id="menu-item-272" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li id="menu-item-1302" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li id="menu-item-319" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li id="menu-item-2072" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li id="menu-item-446" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li id="menu-item-466" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li id="menu-item-1183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li id="menu-item-1694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">


				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2012/11/05/fixing-security-sandbox-violation-in-flash-as3/" rel="prev"><span class="meta-nav">&larr;</span> Fixing security sandbox violation in Flash AS3</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/" rel="next">How to make a multi-player game � part 2 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-1846" class="post-1846 post type-post status-publish format-standard hentry category-self-improvement category-technical tag-beginner-2 tag-tutorial">
					<h1 class="entry-title">Understanding binary</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/" title="3:12 pm" rel="bookmark"><span class="entry-date">November 7, 2012</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://www.wildbunny.co.uk/blog/author/paulfirth/" title="View all posts by Paul Firth">Paul Firth</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<img width="150" height="118" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-171-150x118.png" class="attachment-single-post-thumbnail wp-post-image" alt="figure-17" />						
				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/";
							  reddit_title = "Understanding binary";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/" data-count="horizontal" data-text="Understanding binary">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2012%2F11%2F07%2Funderstanding-binary%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2012%2F11%2F07%2Funderstanding-binary%2F&amp;title=Understanding+binary" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><p>Hello and welcome back to my blog!</p>
<p>In a kind of follow up to <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/">10 steps to becoming a better programmer</a>, this time I wanted to write about binary and binary operations, because I&#8217;ve been rather surprised by the number of people (some even running highly successful tech businesses) who simply don&#8217;t understand such a useful tool.</p>
<p>If you&#8217;ve seen this kind of thing before and been confused, this article is for you:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>
&nbsp;
<span style="color: #6666cc; font-weight: bold;">uint</span> flags <span style="color: #008000;">=</span> Wait<span style="color: #008000;">&#40;</span>kSignal<span style="color: #008000;">|</span>kBreak<span style="color: #008000;">|</span>kWait<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span>
&nbsp;
flags <span style="color: #008000;">&amp;=</span> ~kWait<span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>I&#8217;m going to be talking about the binary representation of unsigned integers in this article.</p>
<h2>What is binary?</h2>
<p>The binary numeral system is a way of representing numbers, in the same way that the decimal system that humans use every day is. The difference between the two is the &#8216;<a href="http://en.wikipedia.org/wiki/Radix">base</a>&#8216;, which is simply a count of the unique number of digits representable in the system, including 0. So binary is base 2 (since we have 0 and 1 as the full set of digits) and decimal is base 10 (since we have from 0-9).</p>
<p>We wouldn&#8217;t get very far in life as humans if we could only count up to 9, though. We needed a way to count the number of tens while still being able to accumulate units, which we solved by pre-pending the tens count to the start of the number and resetting the units to zero. So 9+1 = one ten and 0 units or 10. Obvious right? With binary it&#8217;s a similar thing:</p>
<div id="attachment_1849" style="width: 107px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure2.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure2.png" alt="" title="figure2" width="97" height="49" class="size-full wp-image-1849" /></a><p class="wp-caption-text">Highest possible single digit number: one...</p></div>
<div id="attachment_1850" style="width: 107px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure3.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure3.png" alt="" title="figure3" width="97" height="49" class="size-full wp-image-1850" /></a><p class="wp-caption-text">...plus one = one two, plus zero units</p></div>
<h2>Bits</h2>
<p>In binary, each one of the digits is called a <a href="http://en.wikipedia.org/wiki/Bit">bit</a> which is short for <strong>b</strong>inary dig<strong>it</strong>. Bits can be numbered, like so (always starting from 0):</p>
<div id="attachment_1870" style="width: 395px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-4.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-4.png" alt="" title="figure-4" width="385" height="73" class="size-full wp-image-1870" /></a><p class="wp-caption-text">8 bit binary number</p></div>
<p>Computers usually deal with bits a chunk at a time, either 8, 16, 32, 64, 128 bits etc depending on the register size. For the rest of this article I&#8217;m going to be assuming a fictional register size of 4 bits (known as a <a href="http://en.wikipedia.org/wiki/Nibble">nibble</a>), for the sake of clarity.</p>
<h2>Converting from binary to decimal</h2>
<p>It&#8217;s useful to be able to covert from binary to decimal. To see how we can do this, it&#8217;s helpful to explore the composition of numbers in base ten and base two.</p>
<p>Decimal numbers which represent tens, hundreds, thousands and so on can be called &#8216;<a href="http://en.wikipedia.org/wiki/Powers_of_10">powers of ten</a>&#8216;:</p>
<p><strong>10<sup>x</sup> in decimal:</strong></p>
<p><code>10<sup>0</sup> = &nbsp;&nbsp;&nbsp;1<br />
10<sup>1</sup> = &nbsp;&nbsp;10<br />
10<sup>2</sup> = &nbsp;100<br />
10<sup>3</sup> = 1000</code></p>
<p>Looking at them in this way, it&#8217;s clear to see that when we raise ten to the power of an integer x, we can write it as: <strong>one</strong> appended with x <strong>zeros</strong>. In binary it&#8217;s a very similar thing, except we&#8217;re now dealing with base two, instead of base ten:</p>
<p><strong>2<sup>x</sup> in binary:</strong></p>
<p><code>2<sup>0</sup> = &nbsp;&nbsp;&nbsp;1<br />
2<sup>1</sup> = &nbsp;&nbsp;10<br />
2<sup>2</sup> = &nbsp;100<br />
2<sup>3</sup> = 1000</code></p>
<p>This time, it&#8217;s binary <strong>one</strong> appended with x binary <strong>zeros</strong>. If we do the same thing but convert to decimal:</p>
<p><strong>2<sup>x</sup> in decimal:</strong></p>
<p><code>2<sup>0</sup> = 1<br />
2<sup>1</sup> = 2<br />
2<sup>2</sup> = 4<br />
2<sup>3</sup> = 8</code></p>
<p>The individual powers of two above correspond to a particular bit in a binary number. The bit which is &#8216;set&#8217; (filled with a one) is the bit numbered with the corresponding power: </p>
<div id="attachment_1871" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-5.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-5.png" alt="" title="figure-5" width="193" height="73" class="size-full wp-image-1871" /></a><p class="wp-caption-text">2<sup>0</sup>=1</p></div>
<div id="attachment_1872" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-6.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-6.png" alt="" title="figure-6" width="193" height="73" class="size-full wp-image-1872" /></a><p class="wp-caption-text">2<sup>1</sup>=2</p></div>
<div id="attachment_1873" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-7.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-7.png" alt="" title="figure-7" width="193" height="73" class="size-full wp-image-1873" /></a><p class="wp-caption-text">2<sup>2</sup>=4</p></div>
<div id="attachment_1874" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-8.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-8.png" alt="" title="figure-8" width="193" height="73" class="size-full wp-image-1874" /></a><p class="wp-caption-text">2<sup>3</sup>=8</p></div>
<p>So, now we have a way to calculate the value of any particular binary digit. In order to convert an arbitrary binary number into decimal, all we have to do is add the powers of two together:</p>
<div id="attachment_1877" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-9.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-9.png" alt="" title="figure-9" width="193" height="73" class="size-full wp-image-1877" /></a><p class="wp-caption-text">2<sup>0</sup> + 2<sup>2</sup> + 2<sup>3</sup></p></div>
<p>Adding together only the powers of two which have a corresponding 1 in the bit:</p>
<p>2<sup>0</sup> + 2<sup>2</sup> + 2<sup>3</sup> = </p>
<p>&#8230;we arrive at the decimal equivalent</p>
<p>1 + 4 + 8 = <strong>13</strong></p>
<h2>Bitwise operations</h2>
<p>Since a computer is built out of transistors (which have two states, on or off) binary is the natural language of the computer. As such, <a href="http://en.wikipedia.org/wiki/Bitwise_operation">bitwise</a> operations are often the fastest possible performing operations since there is no need to mess about dealing with the human&#8217;s silly decimal system.</p>
<h3>Logical left shift</h3>
<p>The logical left shift operator, or <strong><<</strong> (in most programming languages) simply takes a binary number and moves every digit left by the number of bits in the 2nd argument, filling the bottom most bit(s) with zero. Here is the binary representation of decimal one:</p>
<div id="attachment_1879" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-51.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-51.png" alt="" title="figure-5" width="193" height="73" class="size-full wp-image-1879" /></a><p class="wp-caption-text">Decimal one in binary</p></div>
<p>Shifting this left by two bits:</p>
<div id="attachment_1880" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-71.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-71.png" alt="" title="figure-7" width="193" height="73" class="size-full wp-image-1880" /></a><p class="wp-caption-text">1<<2=4</p></div>
<p>The astute among you will recognise this as left shift of one by two as being equivalent of multiplying by two and then multiplying by two again. Indeed, every time we left-shift a number by one, it&#8217;s equivalent to multiplying it by two. This is usually much faster than actually multiplying the number by two.</p>
<h3>Logical right shift</h3>
<p>Logical right shift, or >> is the opposite of left shift. Instead of it being equivalent to multiply, it&#8217;s equivalent to divide:</p>
<div id="attachment_1884" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-10.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-10.png" alt="" title="figure-10" width="193" height="73" class="size-full wp-image-1884" /></a><p class="wp-caption-text">Decimal 12</p></div>
<div id="attachment_1885" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-11.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-11.png" alt="" title="figure-11" width="193" height="73" class="size-full wp-image-1885" /></a><p class="wp-caption-text">12&gt;&gt;2 = 3</p></div>
<p>12 >> 2 = 12 / 4 = 3</p>
<h3>Underflow and overflow</h3>
<p>What happens when we take a binary number, shift it and some of the digits get shifted off one end or the other? In this example we only have 4 bits of storage for our numbers.</p>
<div id="attachment_1887" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-111.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-111.png" alt="" title="figure-11" width="193" height="73" class="size-full wp-image-1887" /></a><p class="wp-caption-text">Decimal 3</p></div>
<div id="attachment_1888" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-52.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-52.png" alt="" title="figure-5" width="193" height="73" class="size-full wp-image-1888" /></a><p class="wp-caption-text">3&gt;&gt;1=1</p></div>
<!-- Easy AdSense V2.79 -->
<!-- Post[count: 1] -->
<div class="ezAdsense adsense adsense-midtext" style="text-align:center;margin:12px; "><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- medi -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-4897461488762721"
     data-ad-slot="9797433564"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div><p>Above, decimal three has been right shifted by one and we&#8217;ve lost a digit off the end:</p>
<p>3>>1 = 3/2 = 1</p>
<p>As you can see, this is equivalent to the integer decimal operation 3/2. We lost a bit of information, hence the approximation. This is called <a href="http://en.wikipedia.org/wiki/Arithmetic_underflow">underflow</a>. </p>
<p><a href="http://en.wikipedia.org/wiki/Arithmetic_overflow">Overflow</a> is arguably worse:</p>
<div id="attachment_1890" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-101.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-101.png" alt="" title="figure-10" width="193" height="73" class="size-full wp-image-1890" /></a><p class="wp-caption-text">Decimal 12</p></div>
<div id="attachment_1891" style="width: 203px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-81.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-81.png" alt="" title="figure-8" width="193" height="73" class="size-full wp-image-1891" /></a><p class="wp-caption-text">In only 4 bits, 12&lt;&lt;1 = 8</p></div>
<p>This time we don&#8217;t end up with an approximate answer, it&#8217;s just plain wrong! This is why it&#8217;s very important to understand the <strong>storage capacity</strong> of variables that we are working with. It&#8217;s worth noting that this result is no different to what we would end up with if we performed the equivalent decimal multiply operator in the same storage capacity.</p>
<h3>Bitwise Or</h3>
<p>Bitwise or, represented by | in most languages &#8216;combines&#8217; the two binary numbers together. The resulting binary number has a <strong>one</strong> in each bit where either of the two source numbers have a <strong>one</strong>, and only has a <strong>zero</strong> where both of the two source numbers have <strong>zero</strong>.</p>
<div id="attachment_1893" style="width: 675px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-12.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-12.png" alt="" title="figure-12" width="665" height="73" class="size-full wp-image-1893" /></a><p class="wp-caption-text">1010 | 1001 = 1011 </p></div>
<p>This is incredibly useful when dealing with binary numbers which represent a set of &#8216;flags&#8217;. Such numbers are called <a href="http://en.wikipedia.org/wiki/Bit_field">bitfields</a>.  <a href="http://en.wikipedia.org/wiki/Flag_(computing)">Flags</a> are pieces of state information which can either be set or clear, which is a nice fit for binary. Flags are often defined like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span></pre></td></tr></table></div>

<p>Each flag is given a meaningful name and assigned the <strong>unique</strong> binary bit which represents it. Because a bitfield is designed to hold many such flags together, it&#8217;s often useful to be able to set multiple flags together, which is where <strong>bitwise or</strong> comes into play:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// 0011 = 0001 | 0010</span>
<span style="color: #008080; font-style: italic;">// bitField = 0011</span>
<span style="color: #6666cc; font-weight: bold;">uint</span> bitField <span style="color: #008000;">=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>Above we have composed a new bitfield containing the flags <em>kSignal</em> and <em>kBreak</em> but not <em>kWait</em>. Because our flags are unique, when we <strong>or</strong> them together we end up with the combination of both flags set in our bitfield.</p>
<div id="attachment_1919" style="width: 235px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-16.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-16.png" alt="" title="figure-16" width="225" height="177" class="size-full wp-image-1919" /></a><p class="wp-caption-text">Truth table for |</p></div>
<h3>Bitwise And</h3>
<p>Bitwise and, represented by &#038; in most languages combines the two input numbers in a different way. The resulting binary number has a <strong>one</strong> in each bit <strong>only</strong> where both source numbers have a <strong>one</strong>, and has a <strong>zero</strong> in all other locations. </p>
<div id="attachment_1895" style="width: 675px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-13.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-13.png" alt="" title="figure-13" width="665" height="73" class="size-full wp-image-1895" /></a><p class="wp-caption-text">1010 &#038; 1001 = 1000</p></div>
<p><strong>Bitwise and</strong> is also very useful when dealing with flags. For example, what if we want to tell if a given bitfield contains a particular flag?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// 0011 = 0001 | 0010</span>
<span style="color: #008080; font-style: italic;">// bitField = 0011</span>
<span style="color: #6666cc; font-weight: bold;">uint</span> bitField <span style="color: #008000;">=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// (0011 &amp; 0100) = 0, so</span>
<span style="color: #008080; font-style: italic;">// containsWait = false</span>
<span style="color: #6666cc; font-weight: bold;">bool</span> containsWait <span style="color: #008000;">=</span> <span style="color: #008000;">&#40;</span>bitField <span style="color: #008000;">&amp;</span> kWait<span style="color: #008000;">&#41;</span> <span style="color: #008000;">!=</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>Here, <em>containsWait</em> will be false because our bitfield does not have the bit represented by <em>kWait</em> set, so when it gets <strong>bitwise anded</strong> with the flag kWait (which of course only contains one particular bit) the resulting integer will be zero. You can also write that like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #6666cc; font-weight: bold;">bool</span> containsWait <span style="color: #008000;">=</span> <span style="color: #008000;">&#40;</span>bitField <span style="color: #008000;">&amp;</span> kWait<span style="color: #008000;">&#41;</span> <span style="color: #008000;">==</span> kWait<span style="color: #008000;">;</span></pre></td></tr></table></div>

<div id="attachment_1920" style="width: 235px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-17.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-17.png" alt="" title="figure-17" width="225" height="177" class="size-full wp-image-1920" /></a><p class="wp-caption-text">Truth table for &#038;</p></div>
<h3>Bitwise not</h3>
<p>Bitwise not, represented by ~ in most languages, simply takes each bit in a single number and flips it.</p>
<div id="attachment_1900" style="width: 471px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-14.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-14.png" alt="" title="figure-14" width="461" height="73" class="size-full wp-image-1900" /></a><p class="wp-caption-text">~1101 = 0010</p></div>
<p>This is useful in conjunction with <strong>bitwise and</strong> when we&#8217;d like to remove a flag from a bitfield:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// 0011 = 0001 | 0010</span>
<span style="color: #008080; font-style: italic;">// bitField = 0011</span>
<span style="color: #6666cc; font-weight: bold;">uint</span> bitField <span style="color: #008000;">=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// clear kBreak</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// ~kBreak = ~0010 = 1101</span>
<span style="color: #008080; font-style: italic;">// 0011 &amp; 1101 = 0001</span>
<span style="color: #008080; font-style: italic;">// bitField = 0001</span>
bitField <span style="color: #008000;">&amp;=</span> ~kBreak<span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>Because ~ flips every bit, performing that operation on a flag forms a <a href="http://en.wikipedia.org/wiki/Mask_(computing)">mask</a> which represents every possible flag except the given one. When this mask is then <strong>bitwise anded</strong> with a bitfield, it clears the bit from the bitfield which is zero in the mask, thus removing it.</p>
<p>Multiple flags can be cleared at the same time by combining all three operators:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// 0011 = 0001 | 0010</span>
<span style="color: #008080; font-style: italic;">// bitField = 0011</span>
<span style="color: #6666cc; font-weight: bold;">uint</span> bitField <span style="color: #008000;">=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// clear kBreak and kSignal</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// kBreak|kSignal = 0010 | 0001 = 0011</span>
<span style="color: #008080; font-style: italic;">// ~(kBreak|kSignal) = ~0011 = 1100</span>
<span style="color: #008080; font-style: italic;">// 0011 &amp; 1100 = 0</span>
<span style="color: #008080; font-style: italic;">// bitField = 0</span>
bitField <span style="color: #008000;">&amp;=</span> ~<span style="color: #008000;">&#40;</span>kBreak<span style="color: #008000;">|</span>kSignal<span style="color: #008000;">&#41;</span><span style="color: #008000;">;</span></pre></td></tr></table></div>

<div id="attachment_1922" style="width: 163px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-19.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-19.png" alt="" title="figure-19" width="153" height="113" class="size-full wp-image-1922" /></a><p class="wp-caption-text">Truth table for ~</p></div>
<h3>Exclusive or</h3>
<p>Exclusive or, represented by ^ in most languages takes two numbers and produces a <strong>one</strong> for each bit which is set in one number but <strong>not</strong> the other and <strong>zero</strong> elsewhere.</p>
<div id="attachment_1904" style="width: 675px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-15.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-15.png" alt="" title="figure-15" width="665" height="73" class="size-full wp-image-1904" /></a><p class="wp-caption-text">1010 ^ 1111 = 0101</p></div>
<p>This operator is useful with flags if we want to toggle a flag:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// 0011 = 0001 | 0010</span>
<span style="color: #008080; font-style: italic;">// bitField = 0011</span>
<span style="color: #6666cc; font-weight: bold;">uint</span> bitField <span style="color: #008000;">=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// toggle kSignal</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// bitField = bitField ^ kSignal</span>
<span style="color: #008080; font-style: italic;">// 0010 = 0011 ^ 0001</span>
<span style="color: #008080; font-style: italic;">// bitField = 0010</span>
bitField <span style="color: #008000;">^=</span> kSignal<span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>Again, we can use it with a mask to toggle various flags together:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kSignal <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">0</span><span style="color: #008000;">;</span> <span style="color: #008080; font-style: italic;">// binary 0001</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kBreak <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>  <span style="color: #008080; font-style: italic;">// binary 0010</span>
<span style="color: #0600FF; font-weight: bold;">const</span> <span style="color: #6666cc; font-weight: bold;">uint</span> kWait <span style="color: #008000;">=</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&lt;&lt;</span><span style="color: #FF0000;">2</span><span style="color: #008000;">;</span>   <span style="color: #008080; font-style: italic;">// binary 0100</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// 0011 = 0001 | 0010</span>
<span style="color: #008080; font-style: italic;">// bitField = 0011</span>
<span style="color: #6666cc; font-weight: bold;">uint</span> bitField <span style="color: #008000;">=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// toggle kSignal and kBreak</span>
&nbsp;
<span style="color: #008080; font-style: italic;">// bitField = bitField ^ (kSignal | kBreak)</span>
<span style="color: #008080; font-style: italic;">// 0000 = 0011 ^ 0011</span>
<span style="color: #008080; font-style: italic;">// bitField = 0</span>
bitField <span style="color: #008000;">^=</span> kSignal <span style="color: #008000;">|</span> kBreak<span style="color: #008000;">;</span></pre></td></tr></table></div>

<div id="attachment_1921" style="width: 235px" class="wp-caption aligncenter"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-18.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/figure-18.png" alt="" title="figure-18" width="225" height="177" class="size-full wp-image-1921" /></a><p class="wp-caption-text">Truth table for ^</p></div>
<h2>Maintainability</h2>
<p>Because it&#8217;s more difficult to read the true meaning of bitwise operations on a set of flags you should consider very carefully whether you need the extra level of compactness offered by using these techniques before writing new code. It might be just as easy to use multiple boolean variable types, which will be much easier to read and maintain. </p>
<p>Understanding bitwise operations will, however, set you in good stead should you encounter them in legacy code and a good programmer should be able to fully understand all the tools at his disposal.</p>
<p>That&#8217;s it for now, hope this has helped you get a better understanding of how binary works! </p>
<p>Until next time, have fun!</p>
<p>Cheers, Paul.</p>

				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/";
							  reddit_title = "Understanding binary";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/" data-count="horizontal" data-text="Understanding binary">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2012%2F11%2F07%2Funderstanding-binary%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2012%2F11%2F07%2Funderstanding-binary%2F&amp;title=Understanding+binary" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><span style="clear:both;display:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/img/wpsf-img.php" width="0" height="0" alt="" style="border-style:none;width:0px;height:0px;display:none;" /></span>											</div><!-- .entry-content -->

					<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=60&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>About Paul Firth</h2>
							A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp							<div id="author-link">
								<a href="http://www.wildbunny.co.uk/blog/author/paulfirth/">
									View all posts by Paul Firth <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

					<div class="entry-utility">
						This entry was posted in <a href="http://www.wildbunny.co.uk/blog/category/self-improvement/" title="View all posts in Self improvement" rel="category tag">Self improvement</a>, <a href="http://www.wildbunny.co.uk/blog/category/technical/" title="View all posts in Technical" rel="category tag">Technical</a> and tagged <a href="http://www.wildbunny.co.uk/blog/tag/beginner-2/" rel="tag">beginner</a>, <a href="http://www.wildbunny.co.uk/blog/tag/tutorial/" rel="tag">tutorial</a>. Bookmark the <a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/" title="Permalink to Understanding binary" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2012/11/05/fixing-security-sandbox-violation-in-flash-as3/" rel="prev"><span class="meta-nav">&larr;</span> Fixing security sandbox violation in Flash AS3</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/" rel="next">How to make a multi-player game � part 2 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">5 Responses to <em>Understanding binary</em></h3>


			<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="li-comment-1693">
		<div id="comment-1693">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/32764428e1a8811006b69dd71278a124?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">nshen</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/comment-page-1/#comment-1693">
			November 9, 2012 at 6:44 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>very useful ,thanks very much!!!!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2012/11/07/understanding-binary/?replytocom=1693#respond' onclick='return addComment.moveForm("comment-1693", "1693", "respond", "1846")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1718">
		<div id="comment-1718">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/fae2f161a6cf1bd898469ed3340d0332?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Andy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/comment-page-1/#comment-1718">
			November 20, 2012 at 3:33 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This article is so useful I read it 0010 times <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_wink.gif" alt=";-)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2012/11/07/understanding-binary/?replytocom=1718#respond' onclick='return addComment.moveForm("comment-1718", "1718", "respond", "1846")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-1771">
		<div id="comment-1771">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8e8a5107ea15f2b39b3219f7161d0996?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.avedo.net' rel='external nofollow' class='url'>Andreas</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/comment-page-1/#comment-1771">
			December 7, 2012 at 12:04 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>There are just 10 sorts of people. The ones who understand binary and the one who don&#8217;t. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_biggrin.gif" alt=":-D" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2012/11/07/understanding-binary/?replytocom=1771#respond' onclick='return addComment.moveForm("comment-1771", "1771", "respond", "1846")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mr6c9rpi9n odd alt thread-even depth-1" id="li-comment-3220">
		<div id="comment-3220">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/f2c276ffc7608a9c86fcc556245a46db?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">MUSSA</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/comment-page-1/#comment-3220">
			September 11, 2013 at 4:25 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This is really really helpful thanks a lot for the hard work <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2012/11/07/understanding-binary/?replytocom=3220#respond' onclick='return addComment.moveForm("comment-3220", "3220", "respond", "1846")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3221">
		<div id="comment-3221">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2012/11/07/understanding-binary/comment-page-1/#comment-3221">
			September 11, 2013 at 4:26 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>No problem <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2012/11/07/understanding-binary/?replytocom=3221#respond' onclick='return addComment.moveForm("comment-3221", "3221", "respond", "1846")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>



								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2012/11/07/understanding-binary/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.wildbunny.co.uk/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='1846' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
							<script type='text/javascript'>
	<!--
	refJS = escape( document[ 'referrer' ] );
	document.write("<input type='hidden' name='refJS' value='"+refJS+"'>");
	// -->
	</script>
	<p style="font-size:9px;clear:both;">WP-SpamFree by <a rel="nofollow" href="http://www.polepositionmarketing.com/library/wp-spamfree/" title="WP-SpamFree WordPress Anti-Spam Plugin" >Pole Position Marketing</a>

					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="search-3" class="widget-container widget_search"><h3 class="widget-title">Search</h3><form role="search" method="get" id="searchform" class="searchform" action="http://www.wildbunny.co.uk/blog/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li id="categories-3" class="widget-container widget_categories"><h3 class="widget-title">Choose a category</h3><select name='cat' id='cat' class='postform' >
	<option value='-1'>Select Category</option>
	<option class="level-0" value="104">Algorithmic trading&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="7">Animal Army&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="35">AS3&nbsp;&nbsp;(19)</option>
	<option class="level-0" value="44">Beginner&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="114">Bitcoin&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="6">Business&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="73">Chip tunes&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="71">Circles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="40">Collision Detection&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="53">Developer love&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="117">Entity systems&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="103">Finance&nbsp;&nbsp;(6)</option>
	<option class="level-0" value="101">Full games&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="67">Geometry&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="58">Graphics&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="100">JSON&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="42">Ladders and AI&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="96">learning-to-program&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="28">Making angry birds&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="47">Micro-transactions&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="90">Multi-player&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="72">Music&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="118">Optimisation&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="41">Parallax and Tiles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="65">paypal&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="97">Physics&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="36">Platform game&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="68">Polygons&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="98">Portals&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="52">Promotion&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="93">Self improvement&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="66">Server side&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="99">Silverlight&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="45">Stencyl&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="5">Technical&nbsp;&nbsp;(28)</option>
	<option class="level-0" value="1">Uncategorized&nbsp;&nbsp;(1)</option>
</select>

<script type='text/javascript'>
/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://www.wildbunny.co.uk/blog/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script>

</li>			</ul>
		</div><!-- #primary .widget-area -->


		<div id="secondary" class="widget-area" role="complementary">
			<ul class="xoxo">
				<li id="user_bio-2" class="widget-container widget_user_bio"><h3 class="widget-title"><div style="text-align:center">About the author</div></h3><div class="ub-grav" style="margin:5px 5px 0px 5px;text-align:center;"><img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=128&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D128&amp;r=G' class='avatar avatar-128 photo' height='128' width='128' /></div>A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp
</li><li id="widget_featured-posts-2" class="widget-container widget_featured-posts"><h3 class="widget-title">Featured Posts</h3>	
	<ul id="yiw-featured-post">
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/03/toi1.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Speculative Contacts &#8211; a continuous collision engine approach" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/">Speculative Contacts &#8211; a continuous collision engine approach</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/stencylRules.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="10 steps to becoming a better programmer" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/">10 steps to becoming a better programmer</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/01/06/how-to-make-games/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/12/flashLogo.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make games" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/01/06/how-to-make-games/">How to make games</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Collision detection for dummies" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/">Collision detection for dummies</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Physics engines for dummies" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/">Physics engines for dummies</a>
	       </h4>
	   </li>
	</ul>
	
	</li><li id="advanced-featured-page-widget-3" class="widget-container widget_advanced-featured-page-widget"><h3 class="widget-title">Tutorials with code to buy</h3><div class="post-2295 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-multiplayer-asteroids-engine/" title="Buy multiplayer asteroids engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/multiplayer.jpg" class="attachment-200 by 200 image" alt="multiplayer" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-2" class="widget-container widget_advanced-featured-page-widget"><div class="post-2299 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-angrybirds-alike-engine/" title="Buy Angrybirds-alike engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/birds.jpg" class="attachment-200 by 200 image" alt="birds" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-4" class="widget-container widget_advanced-featured-page-widget"><div class="post-2301 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-platform-game-engine/" title="Buy platform game engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/platform.png" class="attachment-200 by 200 image" alt="platform" /></a></div><!--end post_class()-->

</li><li id="wp125" class="widget-container wp125_write_ads_widget">
<h3 class="widget-title">Affiliates</h3><div id="wp125adwrap_1c">
<div class="wp125ad odd"><a href="index.php?adclick=10" title="plus500" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/03/plus500-200x200.gif" alt="plus500" /></a></div>
<div class="wp125ad even"><a href="https://www.cavirtex.com/Z/50680" title="cavirtex" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/caVirtex.gif" alt="cavirtex" /></a></div>
<div class="wp125ad odd"><a href="http://www.freelancer.co.uk/affiliates/wildbunny2/" title="freelancer" rel="nofollow"target='_blank'><img src="/images/freelancer.png" alt="freelancer" /></a></div>
<div class="wp125ad even"><a href="http://www.shareasale.com/r.cfm?b=531904&u=949687&m=41388&urllink=&afftrack=" title="wp engine" rel="nofollow"target='_blank'><img src="http://www.shareasale.com/image/41388/sas_banner_250x250.jpg" alt="wp engine" /></a></div>
<div class="wp125ad odd"><a href="http://www.wildbunny.co.uk/blog/advertise-here/" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/images/blankAdvert.png" alt="" /></a></div>
</div>
</li><li id="ezadswidget-4" class="widget-container ezAdsWidget"><h3 class="widget-title">My MetaTrader 5 products</h3><!-- Easy AdSense V2.79 -->
<!-- Widg[count: 2] -->
<div class="ezAdsense adsense adsense-widget"><div style="text-align:center;margin:0px; "><div style="width:350px">
<a target="_blank" href="http://mql5.com/dzz" title="Download VWAP technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/925/mid" alt="Buy VWAP customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e08" title="Download Average Spread technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/951/mid" alt="Buy Average Spread customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e09" title="Download Bid Ask Volumes technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/950/mid" alt="Buy Bid Ask Volumes customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/po9" title="Download Market Activity technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/963/mid" alt="Buy Market Activity customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/poa" title="Download Precision Scalper trading system from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/972/mid" alt="Buy Precision Scalper trading application in the store of automated robot systems" width="400" height="60"></a>
</div></div></div></li>			</ul>
		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">
					Wildbunny blog				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/"
						title="Semantic Personal Publishing Platform" rel="generator">
					Proudly powered by WordPress.				</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

		
		<script type="text/javascript">
			//<![CDATA[
			jQuery(document).ready(function() {
				var a = '<div id="cookie-law-info-bar"><span>This website uses cookies to improve your experience. We\'ll assume you\'re ok with this, but you can opt-out if you wish.<a href=\"#\" id=\"cookie_action_close_header\"  class=\"medium cli-plugin-button cli-plugin-main-button\" >Accept</a> <a href=\"http://www.wildbunny.co.uk/blog/privacy-policy/\" id=\"CONSTANT_OPEN_URL\" target=\"_new\"  class=\"cli-plugin-main-link\"  >Read More</a></span></div>';
				var b = '{"animate_speed_hide":"500","animate_speed_show":"500","background":"#fff","border":"#444","border_on":true,"button_1_button_colour":"#000","button_1_button_hover":"#000000","button_1_link_colour":"#fff","button_1_as_button":true,"button_2_button_colour":"#333","button_2_button_hover":"#292929","button_2_link_colour":"#444","button_2_as_button":false,"font_family":"inherit","notify_animate_hide":true,"notify_animate_show":false,"notify_div_id":"#cookie-law-info-bar","notify_position_horizontal":"right","notify_position_vertical":"bottom","showagain_tab":false,"showagain_background":"#fff","showagain_border":"#000","showagain_div_id":"#cookie-law-info-again","showagain_x_position":"50%","text":"#000"}';
				cli_show_cookiebar(a,b);
				
							});
			//]]>
		</script>
		
		 
			<a id="FollowMeTabLeftLg" onClick="showFollowMe()" href="#" style="border-bottom:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/leftlg.gif" border="0" /></a>	

<div id="FollowMeBubbleBG" style="visibility:hidden;"></div>
<div id="FollowMeBubble" style="visibility:hidden;border-bottom:none;">


<div class="top" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_top.gif');width:329px;height:60px;float:left;display:block;border-bottom:none;">
<a id="close" onClick="hideFollowMe()" href="#" style="border-bottom:none"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/close.png" border="0" /> </a>
<!-- <a id="grab" target="_blank" title="grab this" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>--></div>
<div class="mid" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_mid.gif');width:329px;background-repeat:repeat-y;float:left;">
<div id="stretch">
<span><a title="
Twitter" target="_blank" href="http://twitter.com/paul_m_firth" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
twitter.png" border="0" alt="
Twitter" /> 
Twitter</a></span>
<span><a title="
Facebook" target="_blank" href="http://www.facebook.com/WildbunnyLtd" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
facebook.png" border="0" alt="
Facebook" /> 
Facebook</a></span>
<span><a title="
RSS" target="_blank" href="http://wildbunny.co.uk/blog/feed" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
rss.png" border="0" alt="
RSS" /> 
RSS</a></span>
</div></div>
<div class="bottom" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_bottom.gif');height:34px;width:329px;clear:both;float:left;">
<a id="grab" target="_blank" title="grab this" style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>
</div>
<div class="grab" style="width:329px;clear:both;float:left;"><a style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_grab.gif" /></a></div>
</div>







<div id="thsp-sticky-header">
	<div id="thsp-sticky-header-inner">
		<div id="thsp-sticky-header-title">
			<a href="http://www.wildbunny.co.uk/blog" title="Developer knowledge centre">Wildbunny blog</a>
		</div>
		
		<ul id="thsp-sticky-header-menu" class="menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul>	</div><!-- #thsp-sticky-header-inner -->
</div><!-- #thsp-sticky-header --><script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_js_w_globals=1&#038;qcABC=1&#038;ver=140105-140105-2848662513'></script>
</body>
</html>

