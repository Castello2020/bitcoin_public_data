http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/
HTTP/1.0 200 OK
Date: Tue, 22 Jul 2014 23:14:28 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.3.3
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Pragma: no-cache
Set-Cookie: PHPSESSID=hqu8vodsdcro0297r9epe8hau2; path=/
X-Pingback: http://www.wildbunny.co.uk/blog/xmlrpc.php
Link: <http://www.wildbunny.co.uk/blog/?p=327>; rel=shortlink
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 40190
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Physics engines for dummies | Wildbunny blog</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.wildbunny.co.uk/blog/wp-content/themes/twentyten/style.css?v=0" />
<link rel="pingback" href="http://www.wildbunny.co.uk/blog/xmlrpc.php" />

<!-- BEGIN Metadata added by Add-Meta-Tags WordPress plugin
Get the plugin at: http://www.g-loaded.eu/2006/01/05/add-meta-tags-wordpress-plugin/ -->
<meta name="description" content="Hello and welcome back to my blog! This time i'm going to talk about the basic components that make up a physics engine and how to put them together; this tutorial is aimed at programmers who have a basic grasp of maths and geometry but would like to step into the world of simulation." />
<meta name="keywords" content="as3, beginner, collision detection, geometry, graphics, physics, technical, collision detection, constraint, contact, game engine, joint, physics, pong, simulation" />
<meta name="blogcatalog" content="9BC10671562" />
<div id="ScribCode634274886"></div>
<!-- END Metadata added by Add-Meta-Tags WordPress plugin -->

<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Feed" href="http://www.wildbunny.co.uk/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Comments Feed" href="http://www.wildbunny.co.uk/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Physics engines for dummies Comments Feed" href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/feed/" />
<link rel='stylesheet' id='bm-author-donations-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/bitmate-author-donations/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cntctfrm_stylesheet-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/contact-form-plugin/css/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-table-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-tables.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='oikCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/oik.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='bwlinkCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/bwlink.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp125style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp125/wp125.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='thsp-sticky-header-plugin-styles-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/css/public.css?ver=1.0.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='featured-post-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/featured-post.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='ws-plugin--s2member-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_css=1&#038;qcABC=1&#038;ver=140105-140105-2848662513' type='text/css' media='all' />
<link rel='stylesheet' id='mr_social_sharing-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/style.css?ver=3.8.2' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/swfobject.js?ver=2.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/comment-reply.min.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/jquery.cookie.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/cookielawinfo.js?ver=3.8.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var StickyHeaderParams = {"show_at":"200","hide_if_narrower":"600"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/js/public.js?ver=1.0.0'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/script.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/googleplus.js.php?lang=en_US&#038;ver=3.8.2'></script>
<script type='text/javascript' src='http://apis.google.com/js/plusone.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://connect.facebook.net/en_US/all.js?ver=3.8.2#xfbml=1'></script>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildbunny.co.uk/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildbunny.co.uk/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Client-&gt;server communication using json, silverlight and php' href='http://www.wildbunny.co.uk/blog/2011/03/31/client-server-communication-using-json-silverlight-php/' />
<link rel='next' title='Blog micro-transactions &#8211; a viable business model?' href='http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/' />
<meta name="generator" content="WordPress 3.8.2" />
<link rel='canonical' href='http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comments' />
<link rel='shortlink' href='http://www.wildbunny.co.uk/blog/?p=327' />
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/js/bubble.js"></script>
<link rel="stylesheet" type="text/css" href="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/css/style.css" />
<style type="text/css">
<!-- Silverlight WordPress Plugin -->
#silverlightControlHost{height:100%;}
</style>
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS BEGIN -->
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/js/wpsfv2-js.php"></script> 
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS END -->

		<style type="text/css">
			#thsp-sticky-header {
				background-color: #181818;
			}
			#thsp-sticky-header,
			#thsp-sticky-header a {
				color: #f9f9f9 !important;
			}
											</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #EAEAEA; }
</style>
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">window.google_analytics_uacct = "ca-pub-4897461488762721";</script>
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-16999711-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="single single-post postid-327 single-format-standard custom-background">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">Wildbunny blog</a>
					</span>
				</div>
				<div id="site-description">Developer knowledge centre</div>

										<img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/02/bunnyWP1.gif" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-flowhub-header" class="menu"><li id="menu-item-272" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li id="menu-item-1302" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li id="menu-item-319" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li id="menu-item-2072" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li id="menu-item-446" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li id="menu-item-466" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li id="menu-item-1183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li id="menu-item-1694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">


				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/03/31/client-server-communication-using-json-silverlight-php/" rel="prev"><span class="meta-nav">&larr;</span> Client->server communication using json, silverlight and php</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/" rel="next">Blog micro-transactions &#8211; a viable business model? <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-327" class="post-327 post type-post status-publish format-standard hentry category-as3 category-beginner category-collision-detection-platform-game category-geometry category-graphics category-physics-2 category-technical tag-collision-detection tag-constraint tag-contact tag-game-engine tag-joint tag-physics tag-pong tag-simulation">
					<h1 class="entry-title">Physics engines for dummies</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" title="5:29 pm" rel="bookmark"><span class="entry-date">April 6, 2011</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://www.wildbunny.co.uk/blog/author/paulfirth/" title="View all posts by Paul Firth">Paul Firth</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<img width="150" height="116" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong.jpg" class="attachment-single-post-thumbnail wp-post-image" alt="Can you code this?" />						
				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/";
							  reddit_title = "Physics engines for dummies";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" data-count="horizontal" data-text="Physics engines for dummies">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;title=Physics+engines+for+dummies" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><p>Hello and welcome back to my blog!</p>
<p>This time i&#8217;m going to talk about the basic components that make up a physics engine and how to put them together; this tutorial is aimed at programmers who have a basic grasp of maths and geometry but would like to step into the world of simulation.</p>
<p>It is my hope that if, at the beginning of this article, you are able to code the physics behind the 1972 game <a href="http://en.wikipedia.org/wiki/Pong">Pong</a>,  by the end of the article you will be equally happy writing your own constraints to use in your own physics solver!</p>
<div id="attachment_370" style="width: 310px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong.jpg"><img class="size-medium wp-image-370" title="real-pong" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong-300x232.jpg" alt="" width="300" height="232" /></a><p class="wp-caption-text">Can you code this?</p></div>
<p>I&#8217;ve always found the title of those books of from the &#8216;&#8230;for dummies&#8217; series reassuring; after all, if a dummy can learn this stuff you should stand a good chance, right?</p>
<div id="attachment_328" style="width: 210px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/quantumdummies.jpg"><img class="size-full wp-image-328" title="quantumdummies" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/quantumdummies.jpg" alt="" width="200" height="252" /></a><p class="wp-caption-text">...for dummies?</p></div>
<p>Hence the title of this article.</p>
<h2>Plan of action</h2>
<p>Ok, so i&#8217;m going to cover a few of the things you might want in a physics engine:</p>
<ul>
<li><span style="font-size: small;">Rigid bodies</span></li>
<li><span style="font-size: small;">Collisions</span></li>
<li><span style="font-size: small;">Resting contact</span></li>
<li><span style="font-size: small;">Constraints (Joints)</span></li>
</ul>
<h2>Simulation</h2>
<p>Bear with me, this is going to start out really basically, but hopefully later on it will become clear why.</p>
<p>Starting out with particles, which we assume will have a position�<em>P</em> and a velocity�<em>V. </em>Each frame we advance the position of�<em>P</em> by adding the velocity�<em>V</em> on to it. This is called�<em>integration</em>.</p>
<p>You can use whatever units you like for you simulation; the usual choice is one unit/meter which is what i&#8217;m using here &#8211; the screen is two metres by two metres (in our world), so our velocities are specified in metres/second. To make this work, we must know how many seconds there are per frame, then we can do�<em>P += V*dt</em> in our integration to advance the particles properly, where <em>dt</em> is the number of seconds per frame.</p>
<p>We can simulate multiple particles by storing an array of positions and velocities, and looping over integrating each one. To prevent our particles going off screen we would like to collide them against the screen&#8217;s edges.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_0" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/ParticlesAxis.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/ParticlesAxis.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>To bounce the particles off the edges we simply detect collisions against the edges and reverse the velocity in the offending axis, thus:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">for</span> all i
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span><span style="color: #008000;">;</span>
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>The first condition of each case checks for intersection of the particle in space and the second checks that the particle is actually heading towards the edge. The second condition is important otherwise we would do the collision response again next frame erronusly should the particles move more than one pixel per frame. This second condition carries though all of impulse based rigid body simulation and is what separates inequality contraints (e.g contacts) and equality constraints (most joints).</p>
<p>This is the kind of example code you will no doubt have written a long time ago when you first started getting interested in simulation. I&#8217;m including it here because I think there is a natural progression from this easy example to more complex physics code.</p>
<p><strong>Whats going on in this simple simulation?</strong></p>
<p>Well, without knowing it, we have assumed a physical matieral type for our particles including the <a href="http://scienceworld.wolfram.com/physics/CoefficientofRestitution.html">coefficient of restituition</a> and followed Newton&#8217;s principle of <a href="http://scienceworld.wolfram.com/physics/ConservationofMomentum.html">conservation of momentum</a>. We have also chosen that the world have infinite mass such that it doesn&#8217;t feel a collision response when the particles impact on it. By choosing to reflect particles on impact we are also preseving their momentum (even though we have ignored their mass in our calculations), indicating that we have chosen a coefficient of restitution of 1, i.e. perfectly elastic &#8211; like a super-ball. Additionally, we have chosen an impulse/velocity model for the collision response, rather than a force/acceleration model &#8211; we did this simply by changing the velocity instantaneously, rather than over a period of time.</p>
<p>What we have here is actually a highly optimised special case physics simulation. Optimised how, you ask? Well, let me explain:</p>
<p>If we were to code the above &#8220;properly&#8221;, not taking any short cuts, we would have to assume the following. Our environment is defined by its boundaries which are four axis aligned planes (actually, they&#8217;re lines because we are in 2d). Each one has a normal (which points inwards) and a distance to the origin. They look like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">Planes<span style="color: #008000;">&#91;</span><span style="color: #FF0000;">4</span><span style="color: #008000;">&#93;</span> <span style="color: #008000;">=</span>
<span style="color: #008000;">&#123;</span>
   <span style="color: #008000;">&#40;</span><span style="color: #FF0000;">1</span>,  <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>,
   <span style="color: #008000;">&#40;</span><span style="color: #FF0000;">0</span>, <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>,
   <span style="color: #008000;">&#40;</span><span style="color: #008000;">-</span><span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>,
   <span style="color: #008000;">&#40;</span><span style="color: #FF0000;">0</span>,  <span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>So, now we have to detect our collisions as we did before, but we can&#8217;t take any shortcuts this time. In order to detect if our particles have penetrated the planes we must perform a <a href="/blog/vector-maths-a-primer-for-games-programmers/vector/#Dot">dot product</a> and add the plane&#8217;s distance to origin:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">for</span> all particles i
<span style="color: #008000;">&#123;</span>
  <span style="color: #0600FF; font-weight: bold;">for</span> all planes j
  <span style="color: #008000;">&#123;</span>
    distance <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span>Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">a</span> <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span>Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">b</span> <span style="color: #008000;">+</span> Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">c</span><span style="color: #008000;">;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>distance <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
      <span style="color: #008080; font-style: italic;">// collision responce</span>
    <span style="color: #008000;">&#125;</span>
  <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>What this code is doing is finding, by <a href="/blog/vector-maths-a-primer-for-games-programmers/vector/#Projection">projection</a>, how much of the vector from the plane to the particle is in the direction of the plane normal. Because our plane&#8217;s normals are unit length, this is a measure of the closest <strong>distance from the particle to the plane</strong>. Obviously, if this distance is less than 0, our particle has penetrated the plane and we need to take action to perform the collision response.</p>
<p>Now, if we take a closer look at that distance check above, including each plane&#8217;s coefficents:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">plane0dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span><span style="color: #FF0000;">1</span>  <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane1dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane2dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane3dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span><span style="color: #FF0000;">1</span>  <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>If we simplify that down a bit:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">plane0dist <span style="color: #008000;">=</span>   P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane1dist <span style="color: #008000;">=</span>  <span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane2dist <span style="color: #008000;">=</span>  <span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane3dist <span style="color: #008000;">=</span>   P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>Re-arranging slightly we get these plane tests conditions:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>  <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>  <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span></pre></td></tr></table></div>

<p>Which are exactly the same as those which we used in our first simple example. The second condition for each plane must also be satisfied so we only do the collision response once per collision. This can be done by performing a dot product between the particle&#8217;s velocity and the normal for each plane;</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span>�N<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span> <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span></pre></td></tr></table></div>

<p>We call this the <em>normal velocity</em> since its the particle&#8217;s velocity in the direction of the normal. If this results in a value less than zero then the particle is moving towards the plane and we allow the collision. Once the collision is resolved, the normal velocity will be &gt;= 0 depending on the coefficient of restitution. I could perform the same analysis on the second condition as i did the first to prove that this general solution is the same as the first specific version, but i will leave that as an excercise for the reader.</p>
<p>This shows our two approaches are physically the same.</p>
<p>Ok, so what do we do now for the collision response?</p>
<p>We need a solution which achieves the same result as the�original program but is more general. We can do this using the�<em><a href="https://en.wikipedia.org/wiki/Reflection_(physics)">reflection vector</a></em> from the�<em><a href="http://scienceworld.wolfram.com/physics/LawofReflection.html">law of reflection</a></em>. The reflection vector is calculated thus:</p>
<p><em>R = V &#8211; 2*N*(V</em>�<em>N)</em></p>
<p>Where�<em>V</em> is the velocity vector and�<em>N</em> the surface normal. We need to do a similar comparison with this operator as we did with the collision checks:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">plane0vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>   <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane0vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">0</span>      <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>
plane1vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">0</span>      <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane1vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>  <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>
plane2vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>  <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane2vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>                <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>
plane3vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>                <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane3vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>  <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span></pre></td></tr></table></div>

<p>Which, you should be able to see, are the exact same resulting velocities after collision with each plane in the first simple example.</p>
<p>You will have noticed that mass has been ignored in our calculations so far, this is because it just drops right out of the equations when you are dealing with collision against a body of infinite mass (i.e. our simple world).</p>
<p>So what does this new version look like so far in pseudo-code?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">for</span> all particles i
<span style="color: #008000;">&#123;</span>
  <span style="color: #0600FF; font-weight: bold;">for</span> all planes j
  <span style="color: #008000;">&#123;</span>
    N <span style="color: #008000;">=</span> <span style="color: #008000;">&#123;</span>Planes<span style="color: #008000;">.</span><span style="color: #0000FF;">a</span>, Planes<span style="color: #008000;">.</span><span style="color: #0000FF;">b</span><span style="color: #008000;">&#125;</span><span style="color: #008000;">;</span>
    distance <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span>�N <span style="color: #008000;">+</span> Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">c</span><span style="color: #008000;">;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>distance <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span>�N <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
      <span style="color: #008080; font-style: italic;">// collision response, reflect particle</span>
      V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span> <span style="color: #008000;">-=</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>N<span style="color: #008000;">*</span>N�V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
  <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>Great, so we&#8217;ve turned a nice simple example into one that&#8217;s far more complicated than it needs to be. Why?</p>
<p>Firstly, to demonstrate that the roots of all our inital assumptions were grounded in physics and secondly, to demonstrate the advantages of the more complex implementation. Because we now have a way to deal with arbitrary 2d planes instead of axis aligned planes, it means we can rotate our world and still have the simulation work correctly:</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_1" width="320" height="320">
      <param name="movie" value="http://www.wildbunny.co.uk/media/ParticlesPlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/ParticlesPlane.swf" width="320" height="320">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Move the mouse over the demo to rotate the planes. Note that in this demo, i have done some correction to the points as the planes are rotated to make sure the points still lie within the planes.</p>
<p>Ok, so this is all very well but its not a very real world simulation. There is no gravity and the coefficient of restistution is far too high &#8211; in the real world, most everyday things have a near plastic coefficient of restitution, i.e near 0.</p>
<p>So, adding gravity is pretty simple, we just�subtract gravity from our particle&#8217;s velocities before we do any collision, remembering to account for the fact that gravity is an�acceleration:</p>
<p><em>V[i] += G*dt</em></p>
<p>In this case�<em>G</em> is the vector {0, -9.8} and<em> dt</em> is the number of seconds per frame as before.</p>
<p>We would also like to use a different coefficient of restitution as well�because our particles might not be made of super-rubber. Recall the�<em><a href="https://en.wikipedia.org/wiki/Reflection_(physics)">reflection vector</a></em> equation that we used earlier:</p>
<p><em>R = V &#8211; 2*N*(V</em>�<em>N)</em></p>
<p>We can actually re-write this equation to include the coefficient of restitution:</p>
<p><em>R = V &#8211; (1+e)*N*(V</em>�<em>N)</em></p>
<p>Where�<em>e</em> is the coefficient of restitution which varies from 0 (totally plastic) to 1 (totally elastic). You can see that these two equations are equivelent; if we set�<em>e</em> to 1, we get the original equation. The particles in this example have coefficients of restitution varying from 0 to 1.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_2" width="320" height="320">
      <param name="movie" value="http://www.wildbunny.co.uk/media/ParticlesPlaneGravity.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/ParticlesPlaneGravity.swf" width="320" height="320">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>The only thing we can now do to this particle simulation to make it more realistic (without going to a full rigid body simulation with rotation) is to handle masses in our collisions. To accomplish this, we will have to use circles instead of particles, since its quite unlikely that two particles will ever collide what with them having no actual size!</p>
<div id="attachment_337" style="width: 271px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure1.png"><img class="size-full wp-image-337" title="figure1" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure1.png" alt="" width="261" height="153" /></a><p class="wp-caption-text">Figure 1</p></div>
<p>As per Figure 1, two circles <em>A </em>and <em>B </em>intersect if the distance between them is less than the sum of their radii. The collision normal is simply the vector <em>d </em>between the two, but normalised.</p>
<p>In order to deal with the masses of our particles we need to do some thinking regarding the reflection equation that we already have. What we really need is some kind of mass ratio to apply a bias to the equation so that lighter particles get pushed out of the way by heavier particles, but we need it to conserve momentum as well.</p>
<p><em>ratio<sub>a</sub> = M<sub>b</sub> / (M<sub>a</sub> + M<sub>b</sub>)</em><br />
<em>ratio<sub>b</sub> = M<sub>a</sub> / (M<sub>a</sub> + M<sub>b</sub>)</em></p>
<p>The above two ratios will do the trick. Here is an example:</p>
<p><em>M<sub>a</sub> = 1.0<br />
M<sub>b</sub> = 0.5</em></p>
<p><em>ratio<sub>a</sub> = 0.5 / (1.0 + 0.5) = 1/3<br />
ratio<sub>b</sub> = 1.0 / (1.0 + 0.5) = 2/3</em></p>
<p>Obviously 1/3 + 2/3 = 1, so you can see that this conserves momentum correctly, and since body�<em>b</em> is half the mass of body�<em>a</em>, it should experience twice the reaction upon collision, which it does.</p>
<p>So we can plug these two ratios into our reflection vector equation to obtain two new equations for the reflected velocity of each body after collision:</p>
<p><em>V<sub>a</sub> = V<sub>a</sub> &#8211; (1+e)*N*((V<sub>b</sub>-V<sub>a</sub>) </em><span style="font-family: Courier; font-size: x-small;">�</span><em> N)*(M<sub>b</sub> / (M<sub>a</sub>+M<sub>b</sub>))<br />
V<sub>b</sub> = V<sub>b</sub> &#8211; (1+e)*-N*((V<sub>b</sub>-V<sub>a</sub>)  </em><span style="font-family: Courier; font-size: x-small;">�</span><em> -N)*(M<sub>a</sub> / (M<sub>a</sub>+M<sub>b</sub>))</em></p>
<p>Our collision code gives us the normal pointing from body�<em>b</em> towards body�<em>a</em>, so we must reverse the normal to calculate�body�<em>b</em>&#8216;s reflected velocity. You will have noticed that there�are a lot of duplicated calculations in the two equations above. We would like to simplify this down a bit. What we can do is use the�<em>relative velocity</em> of the two objects in question:</p>
<p><em>V<sub>r</sub> = V<sub>a </sub>- V<sub>b</sub></em></p>
<p>Now that we have only one velocity to deal with the equation gets simpiler.</p>
<p><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N)</em></p>
<p><em>V<sub>a</sub> = -I*(M<sub>b</sub> / (M<sub>a</sub>+M<sub>b</sub>))<br />
V<sub>b</sub> = +I*(M<sub>a</sub> / (M<sub>a</sub>+M<sub>b</sub>))</em></p>
<p>What we are doing here is to treat one object as being stationary relative to the other moving object. But there is still more we can do here to simplify these equations:</p>
<p><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N)*(M<sub>a</sub>*M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>)</em></p>
<p><em><em>V<sub>a</sub> &#8211; = I /��M<sub>a</sub><br />
V<sub>b</sub> + = I /�M<sub>b</sub></em></em></p>
<p>By combining the ratios we can save some more calculation�and reduce the final step to a simple divide though by the mass of the objects in question to produce the final velocities for those objects. You can see this works because</p>
<!-- Easy AdSense V2.79 -->
<!-- Post[count: 1] -->
<div class="ezAdsense adsense adsense-midtext" style="text-align:center;margin:12px; "><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- medi -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-4897461488762721"
     data-ad-slot="9797433564"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div><p><em>(M<sub>a</sub>*M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>) / M<sub>a </sub>=�<strong>M<sub>b</sub>/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>)</strong></em></p>
<p>and</p>
<p><em>(M<sub>a</sub>*M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>) / M<sub>b </sub>=<sub> </sub><strong>M<sub>a</sub> / (M<sub>a</sub>+M<sub>b</sub>)</strong></em></p>
<p>Finally we can show that (from fractions)</p>
<p><em>(M<sub>a</sub>+M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>*M<sub>b</sub>) = 1/M<sub>a </sub>+ 1/M<sub>b</sub></em></p>
<p>Which means we can re-write the final linear impulse equation</p>
<p><strong><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N) / (1/M<sub>a </sub>+ 1/M<sub>b</sub>)</em></strong></p>
<p>This is handy because we can just store�<em>1/M<sub>a </sub></em>and<em> 1/M<sub>b</sub></em> inside the definition of our circle rigid bodies so we don&#8217;t have to re-calculate. It also means that we now have a way to represent infinitly massive objects, such as our world (by storing the inverse mass as 0).</p>
<p><em><strong>V<sub>a</sub> &#8211; = I *�1/M<sub>a</sub></strong><br />
<strong>V<sub>b</sub> + = I *�1/M<sub>b</sub></strong></em></p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_3" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/SingleCirclePlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/SingleCirclePlane.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>In these demos you can manipulate the circles with the mouse.</p>
<p>Ok, so you probably already noticed we are starting to see problems due to penetration caused by the collision detection system detecting the collision after its already too late. This problem only gets more severe as we add more rigid-bodies, and is compounded by the fact that the system is currently doing nothing to correct the penetration:</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_4" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/CirclesSinkPlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/CirclesSinkPlane.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>To combat this problem, we need to be able to detect collisions before they actually happen and deal with penetration. Luckily i&#8217;ve covered this technique already in a <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/">previous article</a> which i suggest you read.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_5" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/CirclesPlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/CirclesPlane.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Once this technique is applied the problem just goes away; and there are only a few lines of code required. The only caveat is that we have to assume that the coefficient of restitution is never required to be non-0; in the majority of real-world cases this isn&#8217;t too much of a limitation, especially given the benefits.</p>
<h2>Software engineering</h2>
<p>In physics engines, the mathsy part is only half the story; the second half is how you organise your physics engine in terms of classes�hierarchy and how you actually code it.</p>
<p>I&#8217;m going to present one possible solution here which has worked for me in the past; it may be over-simplified for your requirements but it should give you an idea. The language here is actionscript, but the principles apply to any OO language.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RigidBody
<span style="color: #66cc66;">&#123;</span>
	protected <span style="color: #000000; font-weight: bold;">var</span> m_pos:Vector2;
	protected <span style="color: #000000; font-weight: bold;">var</span> m_vel:Vector2;
	protected <span style="color: #000000; font-weight: bold;">var</span> m_invMass:<span style="color: #0066CC;">Number</span>;
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> RigidBody<span style="color: #66cc66;">&#40;</span> pos:Vector2, vel:Vector2, invMass:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
	        m_pos=pos;
		m_vel=vel;
		m_invMass=invMass;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> GenerateContact<span style="color: #66cc66;">&#40;</span> rb:RigidBody <span style="color: #66cc66;">&#41;</span>:Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;Not implemented on base class&quot;</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Integrate<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		m_pos=m_pos.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> m_vel.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>So, i&#8217;ve defined a <em>RigidBody </em>base class containing the three parameters that we need so far in our example. There is an integrate function to move foward in time and (what should be a virtual) function called <em>GenerateContact()</em> which will generate a collision normal and distance between any two <em>RigidBody</em>s.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Circle <span style="color: #0066CC;">extends</span> RigidBody
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_radius:<span style="color: #0066CC;">Number</span>;
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Circle<span style="color: #66cc66;">&#40;</span> pos:Vector2, radius:<span style="color: #0066CC;">Number</span>, invMass:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_radius = radius;
		<span style="color: #0066CC;">super</span><span style="color: #66cc66;">&#40;</span>pos, <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>, invMass<span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> GenerateContact<span style="color: #66cc66;">&#40;</span> rb:RigidBody <span style="color: #66cc66;">&#41;</span> :Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rb is Circle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
                <span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span>rb is ...<span style="color: #66cc66;">&#41;</span>
                <span style="color: #66cc66;">&#123;</span>
                        ...
                <span style="color: #66cc66;">&#125;</span>
                <span style="color: #b1b100;">else</span>
		<span style="color: #66cc66;">&#123;</span>
		    <span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;unahandled case!&quot;</span><span style="color: #66cc66;">&#41;</span>;
                <span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>And we have a <em>Circle </em>which derives from <em>RigidBody </em>and extends its functionality by having a radius parameter. Also, we have implemented the <em>GenerateContact()</em> function to return the required information when needed.</p>
<p>By separating functionality out into base class and concrete implementations we will be able to deal with multiple RigidBodys in the same lists, which greatly simplifies the code.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Plane <span style="color: #0066CC;">extends</span> RigidBody
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_n:Vector2;
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_d:<span style="color: #0066CC;">Number</span>
&nbsp;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Plane<span style="color: #66cc66;">&#40;</span>n:Vector2, d:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_n=n;
		m_d=d;
&nbsp;
		<span style="color: #0066CC;">super</span><span style="color: #66cc66;">&#40;</span>n.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>-d<span style="color: #66cc66;">&#41;</span>, <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>, <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> GenerateContact<span style="color: #66cc66;">&#40;</span> rb:RigidBody <span style="color: #66cc66;">&#41;</span>:Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rb is Particle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
		<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rb is Circle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
	        <span style="color: #b1b100;">else</span>
                <span style="color: #66cc66;">&#123;</span>
			<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;unhandled case!&quot;</span><span style="color: #66cc66;">&#41;</span>;
                <span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is another concrete implementation, this time representing an infinite plane (our screen edges).</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Contact
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_normal:Vector2;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_dist:<span style="color: #0066CC;">Number</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Contact<span style="color: #66cc66;">&#40;</span> n:Vector2, dist:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_normal = n;
		m_dist = dist;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is the definition for the <em>Contact </em>class, which represents the information the system will need to resolve one collision.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">function</span> Update<span style="color: #66cc66;">&#40;</span> <span style="color: #0066CC;">e</span>:GameLoopEvent <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
<span style="color: #66cc66;">&#123;</span>
	const dt:<span style="color: #0066CC;">Number</span> = <span style="color: #0066CC;">Math</span>.<span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">e</span>.<span style="color: #006600;">m_elapsed</span>, <span style="color: #cc66cc;">1.0</span><span style="color: #66cc66;">/</span><span style="color: #cc66cc;">15.0</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// apply gravity</span>
	<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> p:RigidBody <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> p.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			p.<span style="color: #006600;">m_vel</span>=p.<span style="color: #006600;">m_vel</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> Constants.<span style="color: #006600;">kGravity</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">// collide</span>
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">||</span>rbj.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		const c:Contact=rbi.<span style="color: #006600;">GenerateContact</span><span style="color: #66cc66;">&#40;</span> rbj <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		...
&nbsp;
		<span style="color: #808080; font-style: italic;">//resolve collision</span>
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">// integrate</span>
	<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> p <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		p.<span style="color: #006600;">Integrate</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is what our update loop currently looks like. The order here is fairly important;</p>
<ol>
<li>Firstly, external forces are applied &#8211; i.e. gravity.</li>
<li>Then, all the collision detection is done to generate a contact which needs to be resolved for each pair of interacting rigid bodies.</li>
<li>Finally, each RigidBody is integrated forward in time.</li>
</ol>
<p>The time-step clamping at the beginning is so that as we debug the code, we don&#8217;t end up with such a massive time-step the next frame that everything explodes!</p>
<h2>Constraints</h2>
<p>Ok, so we have a pile of spheres up and running and our physics engine is starting to take shape quite nicely, what about constraints?</p>
<p>Before i talk about this, i feel i should introduce some concepts needed to understand the problem.</p>
<p><strong>Constraint</strong></p>
<p>Loosely, this is something which enforces a condition between two rigid bodies. So, when there is a collision we create a constraint which enforces the rule that the colliding rigid body may not move through the object it collides with but also that it do this by only pushing. We already derrived the code for this above (not taking into account rotation yet):</p>
<p><strong><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N) / (1/M<sub>a </sub>+ 1/M<sub>b</sub>)</em></strong></p>
<p>All the constraints i&#8217;m going to work with are impulse velocity level constraints. Forces and accellerations will not come into it.</p>
<p><strong>Inequality constraint</strong></p>
<p>This is a constraint which only acts in one direction. So a collision constraint is an inequality constraint because it is only allowed to push and never pull. If it were allowed to pull, it would stick the rigid body to the object it collided with. The way we enforce this inequality is simply the check i mentioned at the beginning:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>V�N <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
<span style="color: #008000;">&#123;</span>
   <span style="color: #008080; font-style: italic;">// handle constaint</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>Little Big Planet contained a lot of constraints of this type; winch, piston, string are a few examples &#8211; they only allowed motion in one direction within the limits of the constraint. So a piston, for example was a length constraint with lower and upper bounds on the allowed length.</p>
<p><strong>Equality constraint</strong></p>
<p>This constraint type is allowed to pull and push equally. An example is a point to point constraint, where two rigid bodies are connected by a single point &#8211; one point on each body is forced to lie in the same place. With a hinge constraint the whole hinge axis is constrained to lie in the same place on both rigid bodies. A rod constraint would be a a length constraint where the length is never allowed to change.</p>
<h2>Designing a constraint</h2>
<p>The way to approach how to design a particular constraint is to think about what restricting effect it has on the two rigid-bodies its connected between.</p>
<p>For example, a distance constraint (a rod in LBP) simply prevents the two end points of the rod getting any closer than (or any further away from) the specified distance. Putting the end points exactly at the centre of mass of each rigid body, as we are about to describe keeps simple circular rigid bodies at a constant distance from each other, while still allowing both of them to continue to move around in 2d space.</p>
<div id="attachment_351" style="width: 271px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure2.png"><img class="size-full wp-image-351" title="figure2" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure2.png" alt="" width="261" height="153" /></a><p class="wp-caption-text">Figure 2</p></div>
<p>In <em>Figure 2</em>, bodies <em>A </em>and <em>B </em>must not get any closer than distance <em>d</em>, but are still allowed to move around independently otherwise &#8211; this resolves as each body being able to orbit the other as they fly through space.</p>
<p><strong>Impulse/velocity level</strong></p>
<p>As mentioned previously, the simulator i&#8217;m describing is an impulse/velocity level simulator, rather than a force/acceleration level one. This means that all the constraints must only be solved by applying impulses to change velocities of bodies.</p>
<p>What this means when designing a constraint is that once you&#8217;ve worked out how it behaves on a position/distance level (i.e. on paper, with a diagram), you need to then think about how that translates into velocities.</p>
<p>So, to recap: our distance constraint stops the end points getting any closer or further away from each other. In velocity terms this is describing a one dimensional constraint; the relative velocity of the bodies is constrained to be zero in one particular axis. That axis is defined by vector between the end points.</p>
<div id="attachment_353" style="width: 271px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure3.png"><img class="size-full wp-image-353" title="figure3" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure3.png" alt="" width="261" height="153" /></a><p class="wp-caption-text">Figure 3</p></div>
<p>In <em>Figure 3</em>, <em>A </em>and <em>B </em>have starting velocities which violate the length constraint that we&#8217;ve placed between them (from <em>Figure 2</em>). The first step in solving a constraint is to figure out where that velocity actually is. In this case you can see its the projection of <em>A<sub>v</sub></em> and <em>B<sub>v</sub></em> on to the length constraint axis.</p>
<p>Once we have the velocities we want to remove, we convert into a single, <em>relative velocity</em> (as we did before with the contact constraint) and we already derived the maths required to solve one dimensional constraints (from the contact constraint):</p>
<p><strong>I = (1+e)*N*(Vr���N) / (1/Ma�+ 1/Mb)</strong></p>
<p>Lets re-write that so it becomes less of a mouth-full:</p>
<p><strong>I = RelativeVelocityMagnitudeToRemove / (1/Ma�+ 1/Mb)</strong></p>
<p>In addition to the velocity part, there will also be some positional fix-up to do, since with more than one constraint acting in the system simultaneously it will often fail to be resolved with one one solver iteration. In this simple example we just add an artificial correction to the velocity (current length &#8211; desired length) / time-step.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_6" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/DistanceConstraint.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/DistanceConstraint.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Above is the result &#8211; you can manipulate the circles with the mouse as before, although one is fixed in place to demonstrate the constraint chain.</p>
<p><strong>Software engineering</strong></p>
<p>So, lets cover the additions to the code.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Constraint
<span style="color: #66cc66;">&#123;</span>
	protected <span style="color: #000000; font-weight: bold;">var</span> m_bodyA:RigidBody;
	protected <span style="color: #000000; font-weight: bold;">var</span> m_bodyB:RigidBody;
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Constraint<span style="color: #66cc66;">&#40;</span> bodyA:RigidBody, bodyB:RigidBody <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_bodyA = bodyA;
		m_bodyB = bodyB;
&nbsp;
		Assert<span style="color: #66cc66;">&#40;</span> m_bodyA.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">||</span>m_bodyB.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span>, <span style="color: #ff0000;">&quot;Constraint between two infinite mass bodies not allowed&quot;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> ApplyImpulse<span style="color: #66cc66;">&#40;</span> I:Vector2 <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		m_bodyA.<span style="color: #006600;">m_vel</span> = m_bodyA.<span style="color: #006600;">m_vel</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> I.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
		m_bodyB.<span style="color: #006600;">m_vel</span> = m_bodyB.<span style="color: #006600;">m_vel</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span> I.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>m_bodyB.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Solve<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;base class doesn't implement!&quot;</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above you can see we&#8217;ve added another base class; this one defines the basic part of a constraint but doesn&#8217;t actually define any concrete details &#8211; as before, we leave this to the derived classes. It does however provide a framework for us &#8211; each constraint must implement the <em>Solve()</em> function which does the meat of the work. Additionally, there is an <em>ApplyImpulse()</em> function defined to save us some work in the concrete implementations.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> DistanceConstraint <span style="color: #0066CC;">extends</span> Constraint
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_distance:<span style="color: #0066CC;">Number</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> DistanceConstraint<span style="color: #66cc66;">&#40;</span> bodyA:RigidBody, bodyB:RigidBody, distance:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">super</span><span style="color: #66cc66;">&#40;</span>bodyA, bodyB<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		m_distance = distance;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> Solve<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #808080; font-style: italic;">// get some information that we need</span>
		const axis:Vector2 = m_bodyB.<span style="color: #006600;">m_Pos</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_Pos</span><span style="color: #66cc66;">&#41;</span>;
		const currentDistance:<span style="color: #0066CC;">Number</span> = axis.<span style="color: #006600;">m_Len</span>;
		const unitAxis:Vector2 = axis.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">/</span>currentDistance<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// calculate relative velocity in the axis, we want to remove this</span>
		const relVel:<span style="color: #0066CC;">Number</span> = m_bodyB.<span style="color: #006600;">m_vel</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_vel</span><span style="color: #66cc66;">&#41;</span>.<span style="color: #006600;">Dot</span><span style="color: #66cc66;">&#40;</span>unitAxis<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		const relDist:<span style="color: #0066CC;">Number</span> = currentDistance-m_distance;
&nbsp;
		<span style="color: #808080; font-style: italic;">// calculate impulse to solve</span>
		const remove:<span style="color: #0066CC;">Number</span> = relVel+relDist<span style="color: #66cc66;">/</span>dt;
		const impulse:<span style="color: #0066CC;">Number</span> = remove <span style="color: #66cc66;">/</span> <span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_InvMass</span> + m_bodyB.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// generate impulse vector</span>
		const I:Vector2 = unitAxis.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>impulse<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// apply</span>
		ApplyImpulse<span style="color: #66cc66;">&#40;</span>I<span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is the implementation for the actual distance constraint, it does the work as described above.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_joints:Vector.<span style="color: #66cc66;">&lt;</span>Constraint<span style="color: #66cc66;">&gt;</span>;</pre></td></tr></table></div>

<p>In the solver we define a list of constraints &#8211; they are different to contacts in that they&#8217;re more permanent, so they get their own list.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;">const dt:<span style="color: #0066CC;">Number</span> = <span style="color: #0066CC;">Math</span>.<span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">e</span>.<span style="color: #006600;">m_elapsed</span>, <span style="color: #cc66cc;">1.0</span><span style="color: #66cc66;">/</span><span style="color: #cc66cc;">15.0</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
<span style="color: #808080; font-style: italic;">// apply gravity</span>
<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> p:RigidBody <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	...
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">// collide</span>
<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>m_rigidBodies.<span style="color: #006600;">length</span>-<span style="color: #cc66cc;">1</span>; i++ <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	const rbi:RigidBody=m_rigidBodies<span style="color: #66cc66;">&#91;</span>i<span style="color: #66cc66;">&#93;</span>;
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> j:<span style="color: #0066CC;">int</span>=i+<span style="color: #cc66cc;">1</span>; j<span style="color: #66cc66;">&lt;</span>m_rigidBodies.<span style="color: #0066CC;">length</span>; j++ <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		const rbj:RigidBody=m_rigidBodies<span style="color: #66cc66;">&#91;</span>j<span style="color: #66cc66;">&#93;</span>;
&nbsp;
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rbi.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">||</span>rbj.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">// solve constraints</span>
<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span><span style="color: #66cc66;">&#40;</span><span style="color: #000000; font-weight: bold;">var</span> jt:Constraint <span style="color: #b1b100;">in</span> m_joints<span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	jt.<span style="color: #006600;">Solve</span><span style="color: #66cc66;">&#40;</span>dt<span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span> 
&nbsp;
<span style="color: #808080; font-style: italic;">// integrate</span>
<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> p <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	p.<span style="color: #006600;">Integrate</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>The solver loop now looks like the above &#8211; we have gained a little loop for solving the constraints &#8211; i&#8217;ve chosen to do that after solving for contacts which makes the joints &#8216;stronger&#8217; than the contacts (in that because they&#8217;re resolved last, they will be more correct than the contacts which are done first), you can do it the other way around if you like.</p>
<h2>Conclusion</h2>
<p>This article has uncovered the physics lurking behind the most simple of 2d games (pong), shown that the principles therein are grounded in physics and expanded on the technique used in that game step by step all the way up to the point where designing a constraint in a physics engine can be seen as a simple extension of colliding two objects.</p>
<p>I hope this article has whet your appetite for physics simulation while also being easy to understand. I have run out of time with this article, but depending on its popularity i can write a lot more on the subject. Register your interest by posting in the comments! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<h2>Source code</h2>
<p>As ever, if you enjoyed reading this article and would like to see more, please consider buying the source code which accompanies it; this will allow an indie developer like me to pay the rent and buy more food to eat! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>You will receive all the framework code that i&#8217;ve laid out in this article, including the code behind the demos on this page which should serve as a good base to expand upon. They are written in actionscript 3.0 but the techniques are applicable to all OO languages.</p>
<p>After purchasing, you will be redirected to a page where you can download the source immediately.</p>
<p>USD 14.99<br />
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
 <input type="hidden" name="business" value="paypal@wildbunny.co.uk" />
 <input type="hidden" name="cmd" value="_xclick" />
 <!-- Instant Payment Notification & Return Page Details -->
 <input type="hidden" name="notify_url" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_notify=1" />
 <input type="hidden" name="cancel_return" value="http://www.wildbunny.co.uk/blog/" />
 <input type="hidden" name="return" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_return=1" />
 <input type="hidden" name="rm" value="2" />
 <!-- Configures Basic Checkout Fields -->
 <input type="hidden" name="lc" value="" />
 <input type="hidden" name="no_shipping" value="1" />
 <input type="hidden" name="no_note" value="1" />
 <input type="hidden" name="custom" value="www.wildbunny.co.uk" />
 <input type="hidden" name="currency_code" value="USD" />
 <input type="hidden" name="page_style" value="paypal" />
 <input type="hidden" name="charset" value="utf-8" />
 <input type="hidden" name="item_name" value="Physics engines for dummies source" />
 <input type="hidden" name="item_number" value="sp:414:72" />
 <input type="hidden" name="amount" value="14.99" />
 <!-- Configures s2Member's Unique Invoice ID/Code  -->
 <input type="hidden" name="invoice" value="53cef05470c2b~54.87.134.74" />
 <!-- Associates Purchase With A User/Member (when/if applicable) -->
 <input type="hidden" name="on0" value="Originating Domain" />
 <input type="hidden" name="os0" value="www.wildbunny.co.uk" />
 <!-- Identifies The Customer's IP Address For Tracking -->
 <input type="hidden" name="on1" value="Customer IP Address" />
 <input type="hidden" name="os1" value="54.87.134.74" />
 <!-- Displays The PayPal Image Button -->
 <input type="image" src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" style="width:auto; height:auto; border:0;" alt="PayPal" />
</form></p>
<p><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Subscribers can access the source here</a></p>
<p>Until next time, have fun!</p>
<p>Cheers, Paul.</p>

				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/";
							  reddit_title = "Physics engines for dummies";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" data-count="horizontal" data-text="Physics engines for dummies">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;title=Physics+engines+for+dummies" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><span style="clear:both;display:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/img/wpsf-img.php" width="0" height="0" alt="" style="border-style:none;width:0px;height:0px;display:none;" /></span>											</div><!-- .entry-content -->

					<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=60&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>About Paul Firth</h2>
							A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp							<div id="author-link">
								<a href="http://www.wildbunny.co.uk/blog/author/paulfirth/">
									View all posts by Paul Firth <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

					<div class="entry-utility">
						This entry was posted in <a href="http://www.wildbunny.co.uk/blog/category/as3/" title="View all posts in AS3" rel="category tag">AS3</a>, <a href="http://www.wildbunny.co.uk/blog/category/beginner/" title="View all posts in Beginner" rel="category tag">Beginner</a>, <a href="http://www.wildbunny.co.uk/blog/category/platform-game/collision-detection-platform-game/" title="View all posts in Collision Detection" rel="category tag">Collision Detection</a>, <a href="http://www.wildbunny.co.uk/blog/category/geometry/" title="View all posts in Geometry" rel="category tag">Geometry</a>, <a href="http://www.wildbunny.co.uk/blog/category/graphics/" title="View all posts in Graphics" rel="category tag">Graphics</a>, <a href="http://www.wildbunny.co.uk/blog/category/physics-2/" title="View all posts in Physics" rel="category tag">Physics</a>, <a href="http://www.wildbunny.co.uk/blog/category/technical/" title="View all posts in Technical" rel="category tag">Technical</a> and tagged <a href="http://www.wildbunny.co.uk/blog/tag/collision-detection/" rel="tag">collision detection</a>, <a href="http://www.wildbunny.co.uk/blog/tag/constraint/" rel="tag">constraint</a>, <a href="http://www.wildbunny.co.uk/blog/tag/contact/" rel="tag">contact</a>, <a href="http://www.wildbunny.co.uk/blog/tag/game-engine/" rel="tag">game engine</a>, <a href="http://www.wildbunny.co.uk/blog/tag/joint/" rel="tag">joint</a>, <a href="http://www.wildbunny.co.uk/blog/tag/physics/" rel="tag">physics</a>, <a href="http://www.wildbunny.co.uk/blog/tag/pong/" rel="tag">pong</a>, <a href="http://www.wildbunny.co.uk/blog/tag/simulation/" rel="tag">simulation</a>. Bookmark the <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" title="Permalink to Physics engines for dummies" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/03/31/client-server-communication-using-json-silverlight-php/" rel="prev"><span class="meta-nav">&larr;</span> Client->server communication using json, silverlight and php</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/" rel="next">Blog micro-transactions &#8211; a viable business model? <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">185 Responses to <em>Physics engines for dummies</em></h3>

			<div class="navigation">
				<div class="nav-previous"></div>
				<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/#comments" >Newer Comments <span class="meta-nav">&rarr;</span></a></div>
			</div> <!-- .navigation -->

			<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="li-comment-195">
		<div id="comment-195">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e1f20ba9240c3e043dd94e876fc09fad?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://theindiestone.com/nick' rel='external nofollow' class='url'>Nick Cowen (Nickenstein)</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-195">
			April 7, 2011 at 9:35 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Another superb article, Paul!</p>
<p>Love it!  <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_biggrin.gif" alt=":D" class="wp-smiley" /> </p>
<p>(Seriously, people &#8211; These aren&#8217;t the ramblings of some deranged hobo, Paul is one clever muffin indeed!)</p>
<p>Keep posting this stuff Paul. You will have enough for a book soon enough!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=195#respond' onclick='return addComment.moveForm("comment-195", "195", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-2" id="li-comment-205">
		<div id="comment-205">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/891e4cbc1cbaa608a267e6070519ad40?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">nip</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-205">
			April 7, 2011 at 9:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>You sure? I read:<br />
 &#8220;this will allow an indie developer like me to pay the rent and buy more food to eat! &#8221;<br />
 as<br />
&#8220;will code for food&#8221;.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=205#respond' onclick='return addComment.moveForm("comment-205", "205", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-235">
		<div id="comment-235">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/0cceb767289daffbdbe272b678e26e52?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">val</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-235">
			April 8, 2011 at 6:46 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Any indie developer able to live off his own business has to be clever. Working for food so he can follow his passion is a common start, even after experience on big companies.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=235#respond' onclick='return addComment.moveForm("comment-235", "235", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-196">
		<div id="comment-196">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3996b7edd399ba6934e73f4cce41e73f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">questor</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-196">
			April 7, 2011 at 10:31 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>thanks for the article, it&#8217;s a really great introduction!</p>
<p>I&#8217;ve also read your previous article and really like little big planet, but I have the feeling that the physics in lbp are a bit &#8220;fluffy&#8221;. I can&#8217;t really describe it, but I have the feeling that something is a really tiny bit off. May it be because of the speculative contacts and the missing energy?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=196#respond' onclick='return addComment.moveForm("comment-196", "196", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-197">
		<div id="comment-197">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-197">
			April 7, 2011 at 10:36 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi questor,</p>
<p>Thanks!</p>
<p>Regarding the fluffy feeling physics in LBP &#8211; this might be down to the character controller (the thing which drives sackboy&#8217;s motion); this came in for a bit of criticism after the game was launched. In the PSP version we changed that a bit to make sackboy feel more solid&#8230; Could that be what you&#8217;re experiencing? <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=197#respond' onclick='return addComment.moveForm("comment-197", "197", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-200">
		<div id="comment-200">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a0c2d0b538ba33a57cee055a97eb4546?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.metanetsoftware.com/blog/' rel='external nofollow' class='url'>raigan</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-200">
			April 7, 2011 at 2:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Awesome!</p>
<p>I&#8217;ve got a question about the position correction; you&#8217;re doing &#8220;error = relVel + relDist/dt&#8221; which seems like a Baumgarte factor of 1&#8230; surely this is way too much and would result in lots of noticeable added velocity?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=200#respond' onclick='return addComment.moveForm("comment-200", "200", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-202">
		<div id="comment-202">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-202">
			April 7, 2011 at 2:58 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi raigan,</p>
<p>Yes, this is probably true &#8211; it worked ok in the sample on the page though, which was only running 1 iteration. It may need some tweaking when deployed in production code, of course <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>In LBP PSP we were using split impulses for this, but i wanted to keep the tutorial as simple as possible&#8230;</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=202#respond' onclick='return addComment.moveForm("comment-202", "202", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-204">
		<div id="comment-204">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a0c2d0b538ba33a57cee055a97eb4546?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.metanetsoftware.com/blog/' rel='external nofollow' class='url'>raigan</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-204">
			April 7, 2011 at 8:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ah, good &#8212; I was worried that I was missing something and/or doing it wrong! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=204#respond' onclick='return addComment.moveForm("comment-204", "204", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.turtleheads.co.uk/?p=43' rel='external nofollow' class='url'>fizix &raquo; Turtlehead Blag</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-207">
		<div id="comment-207">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/705fd29691a9200f05e203b5243210aa?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.skylife4ever.com' rel='external nofollow' class='url'>The SkyLife</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-207">
			April 8, 2011 at 12:05 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I happen to be a physicist and have done some programming in my day&#8230; excellent write from both fields of study. good job.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=207#respond' onclick='return addComment.moveForm("comment-207", "207", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-208">
		<div id="comment-208">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/20cdf24d7249020e74b81dbdeff0c307?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://kevs.biz' rel='external nofollow' class='url'>kevin</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-208">
			April 8, 2011 at 12:20 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Cheers man, you just made my multi media class so much simpler.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=208#respond' onclick='return addComment.moveForm("comment-208", "208", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-209">
		<div id="comment-209">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a75031d0ad7c41ea0c49166b7e1a7402?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ralph Dratman</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-209">
			April 8, 2011 at 12:42 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks for this article. It&#8217;s very lucid and non-threatening. </p>
<p>I used to write code like this. Yours are good principles to follow. But at the time, I wanted to make a rigid body, and could never figure out how to do it. Real rigid bodies consist of about 10^23 little masses coupled to each other with springs. Since I never quite grasped the whole Hamiltonian thing, I just stuck with the masses and springs I understood. Unfortunately, that is the long, slow way to create a quasi-rigid body.</p>
<p>Can the methods you use here be extended to make something 2-D or 3-D and rigid?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=209#respond' onclick='return addComment.moveForm("comment-209", "209", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-219">
		<div id="comment-219">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-219">
			April 8, 2011 at 9:37 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Ralph,</p>
<p>Yes, these methods extend into 3d very easily <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>The masses and springs model is very like what Jacobsen talked about in his early article about rigid bodies composed of length constrants: </p>
<p><a href="http://www.gamasutra.com/resource_guide/20030121/jacobson_01.shtml" rel="nofollow">http://www.gamasutra.com/resource_guide/20030121/jacobson_01.shtml</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=219#respond' onclick='return addComment.moveForm("comment-219", "219", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-252">
		<div id="comment-252">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a75031d0ad7c41ea0c49166b7e1a7402?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ralph Dratman</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-252">
			April 9, 2011 at 11:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>That looks like a good article by Jacobsen. I used to build all kinds of little computable objects from masses and springs. You can get interesting effects by varying  individual masses and spring constants, and of course gravity is easy to add. </p>
<p>I used to worry about approximating the square root. Eventually I decided it wasn&#8217;t worth it to over-optimize.  Especially with today&#8217;s processors there is almost no speed penalty for using floating point and square roots. Writing code for fixed point is not a great way to enjoy life.</p>
<p>Spring models are outstandingly stable, and objects can in principle be made very realistic (with some work), but it&#8217;s a lot of computation. </p>
<p>The simplest spring has zero equilibrium length, but it&#8217;s easy to give them non-zero length. I never did very much with collisions. With lots of little masses and springs, fully general collision tests would take far too much time. I will study Jacobsen&#8217;s method for making that practical.</p>
<p>Thanks again for your article.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=252#respond' onclick='return addComment.moveForm("comment-252", "252", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-256">
		<div id="comment-256">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-256">
			April 10, 2011 at 11:51 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Ralph,</p>
<p>I was very excited when i first read that Jacobsen article and indeed the way he pushes the constraint solver onto the geometry that make up the interacting rigid bodies is an amazing idea <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  However, when it comes to modelling rigid bodies with this technique i ran into so many problems trying to maintain the rigidness, and with objects flipping inside out on fast collisions that i eventually abandoned the technique in favour of traditional rigid body dynamics but adopting the relaxation technique for solving the constraints <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=256#respond' onclick='return addComment.moveForm("comment-256", "256", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://physics.latest-mp3.net/science/physics-engines-for-dummies-pauls-blogwildbunny.html' rel='external nofollow' class='url'>Physics engines for dummies | Paul&#039;s blog@Wildbunny</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://popular.econsultant.com/physics-engines-for-dummies-pauls-blogwildbunny/' rel='external nofollow' class='url'>Physics engines for dummies | Paul&#8217;s blog@Wildbunny : Popular Links : eConsultant</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://wobbits.net/?p=4479' rel='external nofollow' class='url'>Physics Engines for Dummies &laquo; Wobbits</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://null8.com/2011/04/07/physics-engines-for-dummies-pauls-blogwildbunny/' rel='external nofollow' class='url'>Physics engines for dummies | Pauls blog@Wildbunny</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://futilefiles.com/blog/?p=240' rel='external nofollow' class='url'>futilefiles &raquo; Blog Archive &raquo; Physics Engines for Dummies</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://learningaforeignlanguage.rosettastoneinfo.com/2011/04/08/learning-a-foreign-language-hebrew-for-dummies/' rel='external nofollow' class='url'>Learning A Foreign Language: Hebrew For Dummies</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://wind333.wordpress.com/2011/04/08/my-daily-readings-04082011/' rel='external nofollow' class='url'>My daily readings 04/08/2011 &laquo; Strange Kite</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-224">
		<div id="comment-224">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/95f6ec98179e486b99021cb32ba613ba?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://8bitmemories.blogspot.com' rel='external nofollow' class='url'>Vikram</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-224">
			April 8, 2011 at 1:25 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Wow! Amazin tuts.. Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=224#respond' onclick='return addComment.moveForm("comment-224", "224", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-225">
		<div id="comment-225">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7aee58de3a50c13e688140bc06d60225?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://switchb.org/kpreid/' rel='external nofollow' class='url'>Kevin Reid</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-225">
			April 8, 2011 at 1:34 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Nice article! I might pass it on to the next person asking about how to do simulations.</p>
<p>One suggestion: In �The collision normal is simply the vector d between the two, but normalised� it might be worth explaining what �normalised� means and that it&#8217;s different from �normal vector�.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=225#respond' onclick='return addComment.moveForm("comment-225", "225", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-227">
		<div id="comment-227">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-227">
			April 8, 2011 at 1:47 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks for the feedback, Kevin <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=227#respond' onclick='return addComment.moveForm("comment-227", "227", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-226">
		<div id="comment-226">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/2c77bb7dee262b4bfbe2143e368f5a01?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Latika patil</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-226">
			April 8, 2011 at 1:40 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I dont like PHYSICS&#8230;!!!!  <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=226#respond' onclick='return addComment.moveForm("comment-226", "226", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-230">
		<div id="comment-230">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/b8189859ee0ea5f25a74e99e28740ceb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">LoveIt</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-230">
			April 8, 2011 at 4:08 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey, lovely write-up!<br />
I&#8217;ve got 2 weeks off, and writing my own one of these is just what I need to keep me entertained!  </p>
<p>One type I noticed: &#8220;You can use whatever units you like for you simulation; the usual choice is one unit/meter &#8221; &#8211; I think you meant unit/second or unit/frame.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=230#respond' onclick='return addComment.moveForm("comment-230", "230", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-232">
		<div id="comment-232">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-232">
			April 8, 2011 at 4:33 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>The units thing &#8211; i was referring to units of space, rather than speed <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=232#respond' onclick='return addComment.moveForm("comment-232", "232", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-231">
		<div id="comment-231">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a0b853da212a0e7a96e6c3a3c0cfead2?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">ScreamingMage</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-231">
			April 8, 2011 at 4:21 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Outstanding. </p>
<p>Thanks you for putting this up!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=231#respond' onclick='return addComment.moveForm("comment-231", "231", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://jsmag.com/blog/2011/04/ios-viewport-fixes-mobile-boilerplate-communityjs-enderjs/' rel='external nofollow' class='url'>JavaScript Magazine Blog for JSMag &raquo; Blog Archive &raquo; News roundup: iOS viewport fixes, Mobile Boilerplate, CommunityJS, Ender.js</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://mpiaskowski.com/archives/56/links-for-2011-04-08/' rel='external nofollow' class='url'>Links for 2011-04-08 &laquo; Micha? Piaskowski</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-245">
		<div id="comment-245">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/980ec84e831e7763a5e6982a352f49ff?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">m_eiman</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-245">
			April 9, 2011 at 9:42 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Consider adding flattr.com to your sources of revenue, I&#8217;d have clicked that button right away!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=245#respond' onclick='return addComment.moveForm("comment-245", "245", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-247">
		<div id="comment-247">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-247">
			April 9, 2011 at 12:13 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Mikeal,</p>
<p>Thanks for pointing that site out! I will definitely take a look at that <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=247#respond' onclick='return addComment.moveForm("comment-247", "247", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://robertmcghee.co.uk/2011/april-9th/' rel='external nofollow' class='url'>Robert McGhee &raquo; April 9th</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-259">
		<div id="comment-259">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c193b9e5822e9c38cb8cf0781fb04820?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://codeflow.org/' rel='external nofollow' class='url'>Florian</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-259">
			April 10, 2011 at 2:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Your physics simulations have some issues with oscillations and constraint enforcements, and because of that you made them really &#8220;soft&#8221;. There is a solution to solve these problems without making everything feel packed in wool, which is verlet integration. I&#8217;ve <a href="http://codeflow.org/entries/2010/nov/29/verlet-collision-with-impulse-preservation/" rel="nofollow">written</a> two <a href="http://codeflow.org/entries/2010/sep/01/hard-constraints-easy-solutions/" rel="nofollow">articles</a> about that (including examples and code as well). I also discuss a hybrid approach to verlet integration with impulse preservation and stable at-rest acceleration.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=259#respond' onclick='return addComment.moveForm("comment-259", "259", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-261">
		<div id="comment-261">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-261">
			April 10, 2011 at 5:43 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Florian,</p>
<p>The reason things look &#8216;soft&#8217; as you say, is that the solver is only running 1 iteration <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  Nothing to do with the integration method&#8230;. Thanks for the links, though <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=261#respond' onclick='return addComment.moveForm("comment-261", "261", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt depth-2" id="li-comment-470">
		<div id="comment-470">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/da67174e3aa4cc2a866a31577e8adc2e?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Mike</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-470">
			April 24, 2011 at 5:59 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there Florian, your sim looks very good. How many iterations are you using for the &#8220;bridge builder&#8221; style steel girder sim?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=470#respond' onclick='return addComment.moveForm("comment-470", "470", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-263">
		<div id="comment-263">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/fab59425334ecee5e427243122d26ad4?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Wolter</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-263">
			April 10, 2011 at 8:12 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>You lost me at the &#8220;Planes[4] =&#8221; part.</p>
<p>What do all the 1, 0, and -1 values mean? Why are there 12 numbers there?</p>
<p>&#8220;Each one has a normal (which points inwards)&#8221; &#8212; What does this mean?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=263#respond' onclick='return addComment.moveForm("comment-263", "263", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-265">
		<div id="comment-265">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-265">
			April 10, 2011 at 10:17 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Wolter,</p>
<p>The planes array is describing the planes which make up the edges of the screen, the values {x,y, d} in each plane are {direction x, direction y, distance to plane}.</p>
<p>The first two components describe a unit length direction vector (also called a normal, sometimes), the third represents the distance from the plane to the origin <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  The normals point inwards so that everything inside the screen is a positive distance to each plane&#8230;</p>
<p>Hope that makes sense,</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=265#respond' onclick='return addComment.moveForm("comment-265", "265", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-554">
		<div id="comment-554">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/89da0f4023b4a65973944e99b568855e?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jake Boxer</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-554">
			May 1, 2011 at 11:00 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks for this clarification. There is one point that I&#8217;m still a little unclear on. Maybe you can confirm my understanding.</p>
<p>At first, I thought that the origin point of each of these normals was the middle of the screen. If that were the case, I think Planes[0] would represent the right plane, Planes[1] would represent the bottom plane, and so on (clockwise).</p>
<p>However, after re-reading &#8220;the normals point inwards&#8221;, it seems to me that the middle of the screen is actually the endpoint of each normal. If this is the case, then Planes[0] would represent the left plane, Planes[1] would represent the top plane, and so on (still clockwise).</p>
<p>Is my second interpretation correct? It makes sense, but it&#8217;s a bit different from other vector representations I&#8217;ve seen, so I want to make sure I&#8217;m understanding correctly.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=554#respond' onclick='return addComment.moveForm("comment-554", "554", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-556">
		<div id="comment-556">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-556">
			May 2, 2011 at 1:54 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Jake,</p>
<p>The planes are</p>
<p>Planes[] =<br />
{<br />
    left,<br />
    bottom,<br />
    right,<br />
    top<br />
}</p>
<p>The coordinate system in flash has down the screen = positive, which is why 0,-1 points up (and is hence the bottom plane).</p>
<p>Try not to think about the end-points of the normals &#8211; they&#8217;re just a unit length direction vector, so they would all exist exactly in the middle of the screen (0,0), except that we add the distance parameter which &#8216;pushes&#8217; them out along their direction vector by the distance to origin. e.g:</p>
<p>point on plane = direction vector * -distance</p>
<p>For the left plane (1, 0, 1):</p>
<p><strong>point on plane = (1,0) * -distance = -1,0</strong></p>
<p>For the right plane (-1, 0, 1):</p>
<p><strong>point on plane = (-1,0) * -distance = 1,0</strong></p>
<p>We use negative distance because the planes are all pointing inwards, so to approach them we must move against their direction vectors <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=556#respond' onclick='return addComment.moveForm("comment-556", "556", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://learnalanguage.rosettastoneinfo.com/2011/04/11/learn-a-language-copyediting-and-proofreading-for-dummies/' rel='external nofollow' class='url'>Learn A Language: Copyediting and Proofreading For Dummies</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://eric-blue.com/2011/04/10/weekly-lifestream-for-april-10th/' rel='external nofollow' class='url'>Eric Blue&#8217;s Blog &raquo; Weekly Lifestream for April 10th</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-274">
		<div id="comment-274">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/ff78e842956e15155d883b70558340df?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.profeval.com' rel='external nofollow' class='url'>Derrick</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-274">
			April 11, 2011 at 2:12 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Paul,<br />
   I&#8217;ve been enjoying your tutorials so far. </p>
<p>I&#8217;ve noticed in some of the demos that the circles go outside of the bounding boxes (or overlap, etc).    When the change in x,y is greater than 1 pixel, this can happen.  What can be done to fix this ?</p>
<p>Thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=274#respond' onclick='return addComment.moveForm("comment-274", "274", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-276">
		<div id="comment-276">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-276">
			April 11, 2011 at 2:57 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Derrick,</p>
<p>Glad you&#8217;ve been enjoying the tutorials <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Did you happen to read my article on continuous collision detection? </p>
<p><a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/" rel="nofollow">http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/</a> </p>
<p>This covers a simple technique you can use to solve these issues <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=276#respond' onclick='return addComment.moveForm("comment-276", "276", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://bertas.be.funpic.de/wordpress/?p=116' rel='external nofollow' class='url'>BertaS&#039; Blog&raquo; Blogarchiv &raquo; Physik Engine f�r Dummies</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-311">
		<div id="comment-311">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/9b8a47fe0ece93d54dfbb0fa17e15384?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Volgogradetzzz</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-311">
			April 14, 2011 at 8:01 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello, Paul. Thanks for tutorials. Sadly that you didn&#8217;t mention friction. Or maybe there will be separate tutorial?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=311#respond' onclick='return addComment.moveForm("comment-311", "311", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-312">
		<div id="comment-312">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-312">
			April 14, 2011 at 9:37 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Volgogradetzzz,</p>
<p>I didn&#8217;t get around to friction yet &#8211; but don&#8217;t worry it will get covered eventually <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=312#respond' onclick='return addComment.moveForm("comment-312", "312", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-318">
		<div id="comment-318">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://osa1.net' rel='external nofollow' class='url'>Sinan</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-318">
			April 14, 2011 at 5:26 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><blockquote><p> i have done some correction to the points as the planes are rotated to make sure the points still lie within the planes`</p></blockquote>
<p>Can you give us information about corrections you&#8217;ve done to make sure the points still lie within the planes?</p>
<p>I&#8217;m trying to code this examples in Pygame(Python), and having difficult times to hold points between planes.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=318#respond' onclick='return addComment.moveForm("comment-318", "318", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-320">
		<div id="comment-320">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-320">
			April 14, 2011 at 7:05 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><pre>
if ( dist&lt;0 )
{
	if ( relNv&lt;0 )
	{
		p.m_vel = p.m_vel.Sub( n.MulScalar( 2*relNv ) );
	}
	p.m_correct = n.MulScalar( -dist );
}
</pre>
<p>p.m_correct is added on in the integration phase, then zeroed <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  This corrects for penetartion...</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=320#respond' onclick='return addComment.moveForm("comment-320", "320", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-322">
		<div id="comment-322">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/04fa8b0cca5a7dfef2d281be67a2b7a2?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://osa1.net' rel='external nofollow' class='url'>Sinan</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-322">
			April 14, 2011 at 7:29 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Can you please more explanatory? What is relNv, p.m_vel, Sub(), m_correct, etc.</p>
<p>Actually it would be better if you just tell me the way you correct the positions of points <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  .</p>
<p>Thanks.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=322#respond' onclick='return addComment.moveForm("comment-322", "322", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-323">
		<div id="comment-323">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-323">
			April 14, 2011 at 7:51 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Sorry, I find the penetration distance for each point, multiply by the contact normal, store that value and then add it on to the position in the integration phase&#8230; <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=323#respond' onclick='return addComment.moveForm("comment-323", "323", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://newsninja.it/2011/04/physics-engines-for-dummies/' rel='external nofollow' class='url'>Physics engines for dummies | News Ninja</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/' rel='external nofollow' class='url'>Collision detection for dummies | Paul&#039;s blog@Wildbunny</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-404">
		<div id="comment-404">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e1b7ea11d5fac04149c334a12049ab30?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ben</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-404">
			April 21, 2011 at 2:59 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This is a very informative and well written article.</p>
<p>Thank you for spending the time to educate us!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=404#respond' onclick='return addComment.moveForm("comment-404", "404", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.jschweiss.de/blog/post/2011/04/23/Physics-engine.aspx' rel='external nofollow' class='url'>Blog J.Schweiss | Physics engine</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-459">
		<div id="comment-459">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8da4b275071719ee3b3dde0ab3e55aad?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://cgi.cs.arizona.edu/~bmf/physical/' rel='external nofollow' class='url'>Brandon</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-459">
			April 23, 2011 at 11:10 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This is a great article, it really made the math easy enough to implement.  However, I although I have it implemented up to the coefficient of restitution, I don&#8217;t really understand how the math relates to the macroscopic representation (i.e. the simulation).  I&#8217;ve never taken linear algebra so although I can manipulate the math I don&#8217;t comprehend how it relates.  If you are looking for more material for articles in the future I would be extremely grateful if you would cover that topic.</p>
<p>Here is my (rudimentary) implementation of this in Javascript / HTML 5:<br />
<a href="http://cgi.cs.arizona.edu/~bmf/physical/" rel="nofollow">http://cgi.cs.arizona.edu/~bmf/physical/</a></p>
<p>Click to make bunches of balls that float around.  Press r to make them random colors.  Press g to turn on gravity and watch them bounce.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=459#respond' onclick='return addComment.moveForm("comment-459", "459", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-471">
		<div id="comment-471">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-471">
			April 24, 2011 at 6:32 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Brandon,</p>
<p>When you ask how the maths relates to the simulation, which part are you talking about? Is it just a software engineering question, or more of a mathsy one? <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>You demo look good, though!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=471#respond' onclick='return addComment.moveForm("comment-471", "471", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-504">
		<div id="comment-504">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a84bf8b98335adda5bab82a9de413e0b?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ivan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-504">
			April 26, 2011 at 7:18 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul. Thanks for the article &#8211; really inspiring. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>One thing I would like to ask you to clarify is why add distance to the origin in &#8220;In order to detect if our particles have penetrated the planes we must perform a dot product and add the plane�s distance to origin &#8230;&#8221; instead of subtracting from it?</p>
<p>Given that the normals are inverted as in originating at the origin and pointing toward the planes; the dot product, assuming normals are of unit length, gives component of particle vector onto one of the normals. Why not subtract it from plane&#8217;s distance to the origin? In this case if a particle is closer to plane A than to plane B, distance to plane A is 1 &#8211; comp_<b>An</b>_ <b>p</b> and distance to plane B is 1 + comp_<b>Bn</b>_ <b>p</b> because the component is negative now. Here <b>An</b>, <b>An</b> are normals to planes A and B respectively, <b>p</b> is a particle&#8217;s position vector.</p>
<p>Since your demos work and no-one complained about this part, I&#8217;m probably just rushing through the article and it is misunderstanding on my side (hope I didn&#8217;t make a fool of myself here <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  ), but still, could you (or anyone) explain why we are adding but not subtracting the component.</p>
<p>Thanks a bunch!</p>
<p>Cheers.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=504#respond' onclick='return addComment.moveForm("comment-504", "504", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-507">
		<div id="comment-507">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-507">
			April 26, 2011 at 8:07 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Ivan,</p>
<p>The reason the distance is added on to the dot of the particle and the plane is that the planes all have their normals pointing towards the origin (so the world appears to be an inside out box, with all normals pointing inwards):</p>
<p>Consider the left plane, at distance d=1 from the origin with the normal 1,0. It actually sits at -1 in the x axis, since its on the left.</p>
<p>Particle P at -0.5, 0.5 is 0.5 units distance from this plane.</p>
<p>P . N = -0.5<br />
P . N + 1 = -0.5 + 1 = 0.5<br />
 <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Hope that helps,</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=507#respond' onclick='return addComment.moveForm("comment-507", "507", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.realtimerendering.com/blog/seven-things-for-may-4th-2011/' rel='external nofollow' class='url'>Real-Time Rendering &middot; Seven Things for May 4th, 2011</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-564">
		<div id="comment-564">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d1df40438bfc3a8444f35a09c3857ca3?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.theforkliftcompany.net' rel='external nofollow' class='url'>David</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-564">
			May 9, 2011 at 10:59 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This is a great article, it really made the math easy enough to implement. (with some work). Keep posting this kind of material . And i can&#8217;t wait to buy your book in the future.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=564#respond' onclick='return addComment.moveForm("comment-564", "564", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-568">
		<div id="comment-568">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/f9d17201e4f2c8952898d4be36d4ceda?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://rhodesy.acsv.net' rel='external nofollow' class='url'>Stephen</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-568">
			May 10, 2011 at 3:40 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Great article Paul, really takes alot of the confusion out of the whole collision &amp; response ideas that I&#8217;ve been stuck on.</p>
<p>One question I have though, (and I don&#8217;t know if this would be compatible with this style of engine) would be to have bodies with bounding shapes made up of squares &amp; circles, forming a custom collision shape&#8230; how would this be done? or is it something completely different?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=568#respond' onclick='return addComment.moveForm("comment-568", "568", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-569">
		<div id="comment-569">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-569">
			May 10, 2011 at 3:48 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Stephen,</p>
<p>Glad you enjoyed the article <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>If you want a custom collision shape it should be quite easy to add one &#8211; for example you could add another class which extends RigidBody called CompoundObject which would actually contain a list of other shapes &#8211; it might be worth separating the direct relationship of Shape-&gt;RigidBody so that you can have a list of shapes corresponding to only one RigidBody (which is what you want).</p>
<p>Then you can just query the individual shapes within the CompoundObject to generate your contact information as before <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=569#respond' onclick='return addComment.moveForm("comment-569", "569", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-597">
		<div id="comment-597">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1fca6a607cae0d5d1cbd10286d0325e9?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.cantilever-parasol.com' rel='external nofollow' class='url'>Henry</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-597">
			May 25, 2011 at 4:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Great article Paul.  I have a few friends who are physicists and I think they would really enjoy this.  I will have to share this with them.  </p>
<p>Thanks,<br />
Henry</p>
<p><a href="http://www.cantilever-parasol.com" rel="nofollow">cantilever parasol&lt;/a</a></p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=597#respond' onclick='return addComment.moveForm("comment-597", "597", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.cyberhades.com/2011/06/06/programando-la-fisica-del-movimiento-con-ejemplos/' rel='external nofollow' class='url'>Programando la f�sica del movimiento (con ejemplos) | CyberHades</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.iphonedevsdk.com/forum/iphone-sdk-development/82382-iphone-programming-book-physics-engine.html#post342797' rel='external nofollow' class='url'>iPhone Programming Book and a physics engine - iPhone Dev SDK Forum</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/' rel='external nofollow' class='url'>How to make Angry Birds &#8211; part 2 | Paul&#039;s blog@Wildbunny</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-664">
		<div id="comment-664">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/afcbfe5e648e1729854c79bbf3e13382?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">walter</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-664">
			June 24, 2011 at 5:19 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi!<br />
First of all, thanks for the great article. I&#8217;m new to game development and this article helped a lot.</p>
<p>Now for my newbie question, you said:</p>
<p>&#8220;GenerateContact() will generate a collision normal and distance between any two RigidBodys&#8221;</p>
<p>Then you have this code:<br />
<code><br />
// collide<br />
	for ( var i:int=0; i0 )<br />
	{<br />
		const c:Contact=rbi.GenerateContact( rbj );</p>
<p>		...</p>
<p>		//resolve collision<br />
	}<br />
</code></p>
<p>In your 1st example collision of a particle in a plane, what is the collision normal and the distance?</p>
<p>Is the collision normal equal to the vector perpendicular to the plane? (which is always pointing to the origin (0, 0))?</p>
<p>Is the distance equal to 1? Is it because you declared the planes to be:</p>
<p>(1,  0, 1),<br />
(0, -1, 1),<br />
(-1, 0, 1),<br />
(0,  1, 1)</p>
<p>Again, thanks a lot!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=664#respond' onclick='return addComment.moveForm("comment-664", "664", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-665">
		<div id="comment-665">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-665">
			June 24, 2011 at 9:39 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Walter,</p>
<p>Yes, you have it exactly right <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=665#respond' onclick='return addComment.moveForm("comment-665", "665", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-672">
		<div id="comment-672">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/afcbfe5e648e1729854c79bbf3e13382?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">walter</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-672">
			June 28, 2011 at 3:47 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul, </p>
<p>Another question regarding the &#8220;GenerateContact&#8221; method, say you have a class Plane and a class Circle, in its GenerateContact method, will it have the same logic? Please see code below:</p>
<p><code><br />
public class Plane extends RigidBody {<br />
...</p>
<p>public override function GenerateContact( rb:RigidBody ):Contact {<br />
    if ( rb is Plane )<br />
        ...<br />
	else if ( rb is Circle )<br />
        //is the logic here the same as in the class Circle?<br />
    else if ( rb is Particle )<br />
        ...<br />
	else<br />
	    throw new Error("unhandled case!");<br />
}<br />
}</p>
<p>public class Circle extends RigidBody {<br />
...</p>
<p>public override function GenerateContact( rb:RigidBody ):Contact {<br />
    if ( rb is Plane )<br />
        //is the logic here the same as in the class Plane?<br />
	else if ( rb is Circle )<br />
        ...<br />
    else if ( rb is Particle )<br />
        ...<br />
	else<br />
	    throw new Error("unhandled case!");<br />
}<br />
}<br />
</code></p>
<p>Thanks again!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=672#respond' onclick='return addComment.moveForm("comment-672", "672", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-673">
		<div id="comment-673">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-673">
			June 28, 2011 at 9:37 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi walter,</p>
<p>The logic is the same, but the objects ra and rb are swapped around&#8230; This is what I do in the 2nd case:</p>
<p>if (rb is Plane)<br />
{<br />
   var contact:Contact = rb-&gt;GenerateContact(this);<br />
   // flip normal, and A and B references around<br />
   contact.flip();<br />
}</p>
<p>So I avoid having to write the same code twice by simply swapping the inputs around <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=673#respond' onclick='return addComment.moveForm("comment-673", "673", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-674">
		<div id="comment-674">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/5f10fcda5909fd6c0d67c9368ba42fb9?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Liy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-674">
			June 29, 2011 at 1:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,<br />
Thank you for this great article!</p>
<p>I have a question about your equations for the reflected velocity of two objects after collision:</p>
<p>Va = Va � (1+e)*N*(Va � N)*(Mb / (Ma+Mb))<br />
Vb = Vb � (1+e)*-N*(Vb � -N)*(Ma / (Ma+Mb))</p>
<p>If Va=[1,0], Vb=[-1,0], N=[1,0], Ma=1, Mb=1, e=1.<br />
I imagine the two objects&#8217; velocity should be [-1,0] and [1,0] after collision, but your equation always returns 0.  Am I doing something wrong? </p>
<p>Could you also explain a bit more about the equations below. Why there is a minus sign in Va and opposite in Vb?<br />
I = (1+e)*N*(Vr � N)<br />
Va = -I*(Mb / (Ma+Mb))<br />
Vb = +I*(Ma / (Ma+Mb))</p>
<p>Excuse my poor English&#8230;<br />
Thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=674#respond' onclick='return addComment.moveForm("comment-674", "674", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-675">
		<div id="comment-675">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-675">
			June 29, 2011 at 2:11 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Liy,</p>
<p>I think you found a mistake! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>I think it should be:</p>
<p>Va = Va � (1+e)*N*((Vb-Va) � N)*(Mb / (Ma+Mb))<br />
Vb = Vb � (1+e)*-N*((Vb-Va) � -N)*(Ma / (Ma+Mb))<br />
 <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>But I would use the equations just below in the article; they are less complex to follow&#8230;</p>
<p>There is a &#8211; + here</p>
<p>Va = -I*(Mb / (Ma+Mb))<br />
Vb = +I*(Ma / (Ma+Mb))</p>
<p>because we&#8217;re applying an impulse equal and oppositely to each object <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=675#respond' onclick='return addComment.moveForm("comment-675", "675", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-677">
		<div id="comment-677">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/5f10fcda5909fd6c0d67c9368ba42fb9?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Liy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-677">
			June 29, 2011 at 4:44 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;ll use your final impulse equations.<br />
But I&#8217;m trying to understand your two equations:</p>
<p>Va = Va � (1+e)*N*((Vb-Va) � N)*(Mb / (Ma+Mb))<br />
Vb = Vb � (1+e)*-N*((Vb-Va) � -N)*(Ma / (Ma+Mb))</p>
<p>Still quite confusing&#8230; </p>
<p>Can you show me how you plug the mass ratio into original R = V � (1+e)*N*(V�N) and formed up the two equations? Any hints will be much appreciated!<br />
Thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=677#respond' onclick='return addComment.moveForm("comment-677", "677", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-678">
		<div id="comment-678">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-678">
			June 29, 2011 at 5:06 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>The mass ratios are Mb / (Ma+Mb) and Ma / (Ma+Mb), and simply scale the response for each body based on the relative masses. That&#8217;s why the reflection vector equation is multiplied by the individual ratio for each. I guess they don&#8217;t &#8216;plug in&#8217; exactly because there is no mass-ratio term in the reflection vector equation <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=678#respond' onclick='return addComment.moveForm("comment-678", "678", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-tryz odd alt thread-even depth-1" id="li-comment-676">
		<div id="comment-676">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/581d0927721240ec53d3394c66814b1c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-676">
			June 29, 2011 at 4:41 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Great articles.  I have a couple of questions.</p>
<p>1. In modeling physics using constraints, is the reflection of a ball off of a wall or floor  considered a &#8216;constraint&#8217;?  I wasn&#8217;t sure if I simply used the reflection math at the collision or if I should turn it into a constraint and solve it with the other constraints.</p>
<p>2. In the formula for reflection, there is &#8220;(1+e)&#8221;.  I understand that e=coefficient of restitution of one of the objects.  Does that mean &#8220;1&#8243; is the COR of the other?  So, if I wanted a floor that deadened the reflection some, would I do &#8220;&#8230;(0.5+e)&#8230;&#8221;.</p>
<p>Thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=676#respond' onclick='return addComment.moveForm("comment-676", "676", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-679">
		<div id="comment-679">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-679">
			June 29, 2011 at 5:10 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Tim,</p>
<p>1) Reflection of a ball off a wall would be considered a contact, which is like a transient constraint which only exists for one frame <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
2) (1+e) is from the original reflection vector equation (well, it was 2 originally)&#8230; You need to combine the two CORs into one &#8211; how you combine the COR of two objects during a collision is a bit hand-wavey and vague&#8230; I *think* in previous engines, I&#8217;ve just picked the minimum of the two <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=679#respond' onclick='return addComment.moveForm("comment-679", "679", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-tryz odd alt depth-3" id="li-comment-680">
		<div id="comment-680">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/581d0927721240ec53d3394c66814b1c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-680">
			June 29, 2011 at 7:12 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks.  That helps.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=680#respond' onclick='return addComment.moveForm("comment-680", "680", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.quora.com/What-is-a-good-tutorial-for-learning-how-basic-game-physics-for-an-experienced-programmer#ans620064' rel='external nofollow' class='url'>Quora</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-707">
		<div id="comment-707">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/581d0927721240ec53d3394c66814b1c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-707">
			July 17, 2011 at 3:24 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>I&#8217;ve been working with the impulse based physics engine, but I&#8217;m a little stuck.  What I noticed with the &#8220;contact&#8221; is that things seem to come to a stop instead of bounce (when not rotating). </p>
<p>I wanted to make a ball bounce, so I created a new type of contact called &#8220;bounce&#8221;.  The challenge I had was that if I simply applied the reflection equation at the point where the motion bounding-box collides, it doesn&#8217;t look like the ball hits the ground.  </p>
<p>So, in my &#8220;bounce&#8221; contact, I modified the velocity based on your original &#8220;contact&#8221; to get the ball to the ground this frame and then I take the remaining reflection velocity and apply it the next frame.  </p>
<p>95% of the time, it works perfectly.  However, every once in a while my &#8220;delayed velocity&#8221; adds a little extra jump to the ball.  I started looking at the original &#8220;contact&#8221; again and noticed that the ball does bounce, but only if it&#8217;s rotating.</p>
<p>I was hoping you could enlighten me a bit on the best way to get a ball to bounce (whether it&#8217;s rotating or not) while still having it look like it impacts the ground.</p>
<p>I hope this all makes sense.  <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Thanks,<br />
Tim</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=707#respond' onclick='return addComment.moveForm("comment-707", "707", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-708">
		<div id="comment-708">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comment-708">
			July 17, 2011 at 5:00 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Tim,</p>
<p>Which source code are you using? <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  The physics engine for dummies code didn&#8217;t handle rotation at all&#8230;</p>
<p>Having a non 0 coefficient of restitution is hard if you want to use speculative contacts. I&#8217;d recommend against trying to use them together because they&#8217;re not really suited&#8230;</p>
<p>At a push I would suggest you try and do what you have already attempted &#8211; though I&#8217;ve never done this myself!</p>
<p>Sorry I can&#8217;t be more help,</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/?replytocom=708#respond' onclick='return addComment.moveForm("comment-708", "708", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>

			<div class="navigation">
				<div class="nav-previous"></div>
				<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/#comments" >Newer Comments <span class="meta-nav">&rarr;</span></a></div>
			</div><!-- .navigation -->


								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.wildbunny.co.uk/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='327' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
							<script type='text/javascript'>
	<!--
	refJS = escape( document[ 'referrer' ] );
	document.write("<input type='hidden' name='refJS' value='"+refJS+"'>");
	// -->
	</script>
	<p style="font-size:9px;clear:both;">WP-SpamFree by <a rel="nofollow" href="http://www.polepositionmarketing.com/library/wp-spamfree/" title="WP-SpamFree WordPress Anti-Spam Plugin" >Pole Position Marketing</a>

					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="search-3" class="widget-container widget_search"><h3 class="widget-title">Search</h3><form role="search" method="get" id="searchform" class="searchform" action="http://www.wildbunny.co.uk/blog/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li id="categories-3" class="widget-container widget_categories"><h3 class="widget-title">Choose a category</h3><select name='cat' id='cat' class='postform' >
	<option value='-1'>Select Category</option>
	<option class="level-0" value="104">Algorithmic trading&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="7">Animal Army&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="35">AS3&nbsp;&nbsp;(19)</option>
	<option class="level-0" value="44">Beginner&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="114">Bitcoin&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="6">Business&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="73">Chip tunes&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="71">Circles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="40">Collision Detection&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="53">Developer love&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="117">Entity systems&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="103">Finance&nbsp;&nbsp;(6)</option>
	<option class="level-0" value="101">Full games&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="67">Geometry&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="58">Graphics&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="100">JSON&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="42">Ladders and AI&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="96">learning-to-program&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="28">Making angry birds&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="47">Micro-transactions&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="90">Multi-player&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="72">Music&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="118">Optimisation&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="41">Parallax and Tiles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="65">paypal&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="97">Physics&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="36">Platform game&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="68">Polygons&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="98">Portals&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="52">Promotion&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="93">Self improvement&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="66">Server side&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="99">Silverlight&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="45">Stencyl&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="5">Technical&nbsp;&nbsp;(28)</option>
	<option class="level-0" value="1">Uncategorized&nbsp;&nbsp;(1)</option>
</select>

<script type='text/javascript'>
/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://www.wildbunny.co.uk/blog/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script>

</li>			</ul>
		</div><!-- #primary .widget-area -->


		<div id="secondary" class="widget-area" role="complementary">
			<ul class="xoxo">
				<li id="user_bio-2" class="widget-container widget_user_bio"><h3 class="widget-title"><div style="text-align:center">About the author</div></h3><div class="ub-grav" style="margin:5px 5px 0px 5px;text-align:center;"><img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=128&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D128&amp;r=G' class='avatar avatar-128 photo' height='128' width='128' /></div>A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp
</li><li id="widget_featured-posts-2" class="widget-container widget_featured-posts"><h3 class="widget-title">Featured Posts</h3>	
	<ul id="yiw-featured-post">
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/01/06/how-to-make-games/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/12/flashLogo.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make games" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/01/06/how-to-make-games/">How to make games</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/03/toi1.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Speculative Contacts &#8211; a continuous collision engine approach" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/">Speculative Contacts &#8211; a continuous collision engine approach</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Collision detection for dummies" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/">Collision detection for dummies</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/04/stop-loss.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Algorithmic trading for dummies &#8211; part 2" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/">Algorithmic trading for dummies &#8211; part 2</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/shop.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make a multi-player game � part 2" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/">How to make a multi-player game � part 2</a>
	       </h4>
	   </li>
	</ul>
	
	</li><li id="advanced-featured-page-widget-3" class="widget-container widget_advanced-featured-page-widget"><h3 class="widget-title">Tutorials with code to buy</h3><div class="post-2295 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-multiplayer-asteroids-engine/" title="Buy multiplayer asteroids engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/multiplayer.jpg" class="attachment-200 by 200 image" alt="multiplayer" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-2" class="widget-container widget_advanced-featured-page-widget"><div class="post-2299 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-angrybirds-alike-engine/" title="Buy Angrybirds-alike engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/birds.jpg" class="attachment-200 by 200 image" alt="birds" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-4" class="widget-container widget_advanced-featured-page-widget"><div class="post-2301 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-platform-game-engine/" title="Buy platform game engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/platform.png" class="attachment-200 by 200 image" alt="platform" /></a></div><!--end post_class()-->

</li><li id="wp125" class="widget-container wp125_write_ads_widget">
<h3 class="widget-title">Affiliates</h3><div id="wp125adwrap_1c">
<div class="wp125ad odd"><a href="index.php?adclick=10" title="plus500" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/03/plus500-200x200.gif" alt="plus500" /></a></div>
<div class="wp125ad even"><a href="https://www.cavirtex.com/Z/50680" title="cavirtex" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/caVirtex.gif" alt="cavirtex" /></a></div>
<div class="wp125ad odd"><a href="http://www.freelancer.co.uk/affiliates/wildbunny2/" title="freelancer" rel="nofollow"target='_blank'><img src="/images/freelancer.png" alt="freelancer" /></a></div>
<div class="wp125ad even"><a href="http://www.shareasale.com/r.cfm?b=531904&u=949687&m=41388&urllink=&afftrack=" title="wp engine" rel="nofollow"target='_blank'><img src="http://www.shareasale.com/image/41388/sas_banner_250x250.jpg" alt="wp engine" /></a></div>
<div class="wp125ad odd"><a href="http://www.wildbunny.co.uk/blog/advertise-here/" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/images/blankAdvert.png" alt="" /></a></div>
</div>
</li><li id="ezadswidget-4" class="widget-container ezAdsWidget"><h3 class="widget-title">My MetaTrader 5 products</h3><!-- Easy AdSense V2.79 -->
<!-- Widg[count: 2] -->
<div class="ezAdsense adsense adsense-widget"><div style="text-align:center;margin:0px; "><div style="width:350px">
<a target="_blank" href="http://mql5.com/dzz" title="Download VWAP technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/925/mid" alt="Buy VWAP customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e08" title="Download Average Spread technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/951/mid" alt="Buy Average Spread customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e09" title="Download Bid Ask Volumes technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/950/mid" alt="Buy Bid Ask Volumes customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/po9" title="Download Market Activity technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/963/mid" alt="Buy Market Activity customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/poa" title="Download Precision Scalper trading system from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/972/mid" alt="Buy Precision Scalper trading application in the store of automated robot systems" width="400" height="60"></a>
</div></div></div></li>			</ul>
		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">
					Wildbunny blog				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/"
						title="Semantic Personal Publishing Platform" rel="generator">
					Proudly powered by WordPress.				</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

		
		<script type="text/javascript">
			//<![CDATA[
			jQuery(document).ready(function() {
				var a = '<div id="cookie-law-info-bar"><span>This website uses cookies to improve your experience. We\'ll assume you\'re ok with this, but you can opt-out if you wish.<a href=\"#\" id=\"cookie_action_close_header\"  class=\"medium cli-plugin-button cli-plugin-main-button\" >Accept</a> <a href=\"http://www.wildbunny.co.uk/blog/privacy-policy/\" id=\"CONSTANT_OPEN_URL\" target=\"_new\"  class=\"cli-plugin-main-link\"  >Read More</a></span></div>';
				var b = '{"animate_speed_hide":"500","animate_speed_show":"500","background":"#fff","border":"#444","border_on":true,"button_1_button_colour":"#000","button_1_button_hover":"#000000","button_1_link_colour":"#fff","button_1_as_button":true,"button_2_button_colour":"#333","button_2_button_hover":"#292929","button_2_link_colour":"#444","button_2_as_button":false,"font_family":"inherit","notify_animate_hide":true,"notify_animate_show":false,"notify_div_id":"#cookie-law-info-bar","notify_position_horizontal":"right","notify_position_vertical":"bottom","showagain_tab":false,"showagain_background":"#fff","showagain_border":"#000","showagain_div_id":"#cookie-law-info-again","showagain_x_position":"50%","text":"#000"}';
				cli_show_cookiebar(a,b);
				
							});
			//]]>
		</script>
		
		 
			<a id="FollowMeTabLeftLg" onClick="showFollowMe()" href="#" style="border-bottom:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/leftlg.gif" border="0" /></a>	

<div id="FollowMeBubbleBG" style="visibility:hidden;"></div>
<div id="FollowMeBubble" style="visibility:hidden;border-bottom:none;">


<div class="top" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_top.gif');width:329px;height:60px;float:left;display:block;border-bottom:none;">
<a id="close" onClick="hideFollowMe()" href="#" style="border-bottom:none"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/close.png" border="0" /> </a>
<!-- <a id="grab" target="_blank" title="grab this" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>--></div>
<div class="mid" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_mid.gif');width:329px;background-repeat:repeat-y;float:left;">
<div id="stretch">
<span><a title="
Twitter" target="_blank" href="http://twitter.com/paul_m_firth" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
twitter.png" border="0" alt="
Twitter" /> 
Twitter</a></span>
<span><a title="
Facebook" target="_blank" href="http://www.facebook.com/WildbunnyLtd" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
facebook.png" border="0" alt="
Facebook" /> 
Facebook</a></span>
<span><a title="
RSS" target="_blank" href="http://wildbunny.co.uk/blog/feed" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
rss.png" border="0" alt="
RSS" /> 
RSS</a></span>
</div></div>
<div class="bottom" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_bottom.gif');height:34px;width:329px;clear:both;float:left;">
<a id="grab" target="_blank" title="grab this" style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>
</div>
<div class="grab" style="width:329px;clear:both;float:left;"><a style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_grab.gif" /></a></div>
</div>







<div id="thsp-sticky-header">
	<div id="thsp-sticky-header-inner">
		<div id="thsp-sticky-header-title">
			<a href="http://www.wildbunny.co.uk/blog" title="Developer knowledge centre">Wildbunny blog</a>
		</div>
		
		<ul id="thsp-sticky-header-menu" class="menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul>	</div><!-- #thsp-sticky-header-inner -->
</div><!-- #thsp-sticky-header --><script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_js_w_globals=1&#038;qcABC=1&#038;ver=140105-140105-2848662513'></script>

			<!-- SwfObj: Register SWFs on this page. -->
			<script type="text/javascript">
					swfobject.registerObject("swfobj_0", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_1", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_2", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_3", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_4", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_5", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_6", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
			</script>
</body>
</html>

