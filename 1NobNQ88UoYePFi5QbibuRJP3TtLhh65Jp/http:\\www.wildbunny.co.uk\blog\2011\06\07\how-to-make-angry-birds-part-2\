http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/
HTTP/1.0 200 OK
Date: Thu, 24 Jul 2014 12:20:21 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.3.3
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Pragma: no-cache
Set-Cookie: PHPSESSID=jneth9dl1illvean5tfnd9g7l7; path=/
X-Pingback: http://www.wildbunny.co.uk/blog/xmlrpc.php
Link: <http://www.wildbunny.co.uk/blog/?p=590>; rel=shortlink
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 32163
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>How to make Angry Birds &#8211; part 2 | Wildbunny blog</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.wildbunny.co.uk/blog/wp-content/themes/twentyten/style.css?v=0" />
<link rel="pingback" href="http://www.wildbunny.co.uk/blog/xmlrpc.php" />

<!-- BEGIN Metadata added by Add-Meta-Tags WordPress plugin
Get the plugin at: http://www.g-loaded.eu/2006/01/05/add-meta-tags-wordpress-plugin/ -->
<meta name="description" content="Hello and welcome back to my blog! This is the 2nd part of my series on how to make a game like Angry Birds by Rovio - and its been a while coming... You can read the first part here." />
<meta name="keywords" content="as3, collision detection, graphics, making angry birds, physics, technical, adobe flash, angry birds, game developement, games, physics engine, programming" />
<meta name="blogcatalog" content="9BC10671562" />
<div id="ScribCode634274886"></div>
<!-- END Metadata added by Add-Meta-Tags WordPress plugin -->

<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Feed" href="http://www.wildbunny.co.uk/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Comments Feed" href="http://www.wildbunny.co.uk/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; How to make Angry Birds &#8211; part 2 Comments Feed" href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/feed/" />
<link rel='stylesheet' id='bm-author-donations-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/bitmate-author-donations/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cntctfrm_stylesheet-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/contact-form-plugin/css/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-table-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-tables.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='oikCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/oik.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='bwlinkCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/bwlink.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp125style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp125/wp125.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='thsp-sticky-header-plugin-styles-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/css/public.css?ver=1.0.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='featured-post-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/featured-post.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='ws-plugin--s2member-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_css=1&#038;qcABC=1&#038;ver=140105-140105-2848662513' type='text/css' media='all' />
<link rel='stylesheet' id='mr_social_sharing-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/style.css?ver=3.8.2' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/swfobject.js?ver=2.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/comment-reply.min.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/jquery.cookie.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/cookielawinfo.js?ver=3.8.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var StickyHeaderParams = {"show_at":"200","hide_if_narrower":"600"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/js/public.js?ver=1.0.0'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/script.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/googleplus.js.php?lang=en_US&#038;ver=3.8.2'></script>
<script type='text/javascript' src='http://apis.google.com/js/plusone.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://connect.facebook.net/en_US/all.js?ver=3.8.2#xfbml=1'></script>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildbunny.co.uk/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildbunny.co.uk/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='How to make Angry Birds &#8211; part 1' href='http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/' />
<link rel='next' title='mouseEnabled vs dropTarget in AS3' href='http://www.wildbunny.co.uk/blog/2011/07/07/mouseenabled-vs-droptarget-in-as3/' />
<meta name="generator" content="WordPress 3.8.2" />
<link rel='canonical' href='http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/' />
<link rel='shortlink' href='http://www.wildbunny.co.uk/blog/?p=590' />
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/js/bubble.js"></script>
<link rel="stylesheet" type="text/css" href="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/css/style.css" />
<style type="text/css">
<!-- Silverlight WordPress Plugin -->
#silverlightControlHost{height:100%;}
</style>
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS BEGIN -->
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/js/wpsfv2-js.php"></script> 
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS END -->

		<style type="text/css">
			#thsp-sticky-header {
				background-color: #181818;
			}
			#thsp-sticky-header,
			#thsp-sticky-header a {
				color: #f9f9f9 !important;
			}
											</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #EAEAEA; }
</style>
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">window.google_analytics_uacct = "ca-pub-4897461488762721";</script>
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-16999711-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="single single-post postid-590 single-format-standard custom-background">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">Wildbunny blog</a>
					</span>
				</div>
				<div id="site-description">Developer knowledge centre</div>

										<img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/02/bunnyWP1.gif" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-flowhub-header" class="menu"><li id="menu-item-272" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li id="menu-item-1302" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li id="menu-item-319" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li id="menu-item-2072" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li id="menu-item-446" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li id="menu-item-466" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li id="menu-item-1183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li id="menu-item-1694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">


				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/" rel="prev"><span class="meta-nav">&larr;</span> How to make Angry Birds &#8211; part 1</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/07/07/mouseenabled-vs-droptarget-in-as3/" rel="next">mouseEnabled vs dropTarget in AS3 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-590" class="post-590 post type-post status-publish format-standard hentry category-as3 category-collision-detection-platform-game category-graphics category-making-angry-birds category-physics-2 category-technical tag-adobe-flash tag-angry-birds tag-game-developement tag-games tag-physics-engine tag-programming">
					<h1 class="entry-title">How to make Angry Birds &#8211; part 2</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" title="6:12 pm" rel="bookmark"><span class="entry-date">June 7, 2011</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://www.wildbunny.co.uk/blog/author/paulfirth/" title="View all posts by Paul Firth">Paul Firth</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<img width="150" height="48" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/ABpt2.png" class="attachment-single-post-thumbnail wp-post-image" alt="ABpt2" />						
				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/";
							  reddit_title = "How to make Angry Birds – part 2";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" data-count="horizontal" data-text="How to make Angry Birds – part 2">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F06%2F07%2Fhow-to-make-angry-birds-part-2%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F06%2F07%2Fhow-to-make-angry-birds-part-2%2F&amp;title=How+to+make+Angry+Birds+%E2%80%93+part+2" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><p>Hello and welcome back to my blog!</p>
<p>This is the 2nd part of my series on how to make a game like Angry Birds by <a href="http://www.rovio.com/">Rovio </a>- and its been a while coming&#8230; <a href="http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/">You can read the first part here</a>.</p>
<h2>The Game</h2>
<p>Ok, so here is the game so far; there are three demo levels to show the level progress system and some simple looking characters and block types. Apologies for the programmer art <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_0" width="640" height="360">
      <param name="movie" value="http://www.wildbunny.co.uk/media/angrybirds/pt2.swf?v=0" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/angrybirds/pt2.swf?v=0" width="640" height="360">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<h2>Catch up</h2>
<p>Ok, so last time I had covered how to draw the background graphics and made a start on how the world is going to be composed in terms of collision.</p>
<p>What I&#8217;m going to cover in this article is the physics part; stability and optimisations. The physics engine that I&#8217;ve created for this game is based on the technology I&#8217;ve discussed in my previous articles:</p>
<p><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/">Physics engines for dummies</a><br />
<a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/">Collision detection for dummies</a><br />
<a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/">Speculative contacts &#8211; a continuous collision engine approach</a></p>
<h2>Level</h2>
<p>A level is defined as a bunch of <em>instances </em>of static rigid bodies and dynamic rigid bodies plus a visual layer which covers up the statics &#8211; I use this other layer because otherwise there would be a slight visible gap between�adjacent�static blocks, which we don&#8217;t want since the texture is supposed to be continuous.</p>
<p>A level must inherit the base class <em>Code.Level</em>. I&#8217;ve done this so I can predefine certain things about each level &#8211; such as the instance names for the hero characters, and the sling-shot which I need to reference in code.</p>
<h2>Characters and blocks</h2>
<p>Each of the two characters and every block used in the game are designed in the Flash IDE, and each of them references a base class that I&#8217;ve defined in the code. This is so that I can parse the children of a level at runtime and create the appropriate rigid bodies at the correct mapped locations for the physics engine.</p>
<div id="attachment_591" style="width: 430px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/rigidbodies.png"><img class="size-full wp-image-591" title="rigidbodies" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/rigidbodies.png" alt="" width="420" height="79" /></a><p class="wp-caption-text">Rigid-bodies</p></div>
<p>There are the following base classes (stone and wood use the same base class):</p>
<ul>
<li>HeroCharacter</li>
<li>EnemyCharacter</li>
<li>ProxyRectangleIce</li>
<li>ProxyRectangle</li>
<li>ProxyRectangleStatic</li>
<li>ProxyTriangleStaticDown</li>
<li>ProxyTriangleStaticUp</li>
</ul>
<p>These are interpreted at level creation time, using a loop similar to this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #808080; font-style: italic;">// create physics objects to go with the render objects in level</span>
<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span> = <span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span><span style="color: #0066CC;">level</span>.<span style="color: #006600;">numChildren</span>; i++ <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">var</span> child:DisplayObject = <span style="color: #0066CC;">level</span>.<span style="color: #006600;">getChildAt</span><span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> child is Character <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		...
	<span style="color: #66cc66;">&#125;</span>
	<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> child is ProxyRectangleStatic <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		...
	<span style="color: #66cc66;">&#125;</span>
	<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> child is ProxyRectangle <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		...
	<span style="color: #66cc66;">&#125;</span>
	<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> child is ProxyRectangleIce <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		...
	<span style="color: #66cc66;">&#125;</span>
	<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> child is ProxyTriangleStaticDown <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		...
	<span style="color: #66cc66;">&#125;</span>
	<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> child is ProxyTriangleStaticUp <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		...
	<span style="color: #66cc66;">&#125;</span>
	child.<span style="color: #006600;">cacheAsBitmap</span> = <span style="color: #000000; font-weight: bold;">true</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>In each part of the if-else ladder I create the appropriate rigid body to match the proxy, and these get added to the physics engine.</p>
<h2>Level sequence</h2>
<p>Thanks to Flash&#8217;s neat way of storing class types as variables, I represent the level sequence as a simple array of class types:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_currentLevel:<span style="color: #0066CC;">int</span>;
<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_levelSequence:<span style="color: #0066CC;">Array</span> =
<span style="color: #66cc66;">&#91;</span>
	Level3Fla,
	Level2Fla,
	LevelFla
<span style="color: #66cc66;">&#93;</span>;</pre></td></tr></table></div>

<p>Every time a level is completed, I can pick the new one from the array and instantiate it like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #808080; font-style: italic;">// create new level</span>
m_level = <span style="color: #000000; font-weight: bold;">new</span> m_levelSequence<span style="color: #66cc66;">&#91;</span>m_currentLevel<span style="color: #66cc66;">&#93;</span>;</pre></td></tr></table></div>

<p>It then gets passed to the <em>SetupLevel</em> function which handles all the rigid body instantiation that I talked about above.</p>
<h2>Physics engine</h2>
<p>The physics engine is similar in design to the one I laid out in <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/">Physics engines for dummies</a>, except this one is a lot more advanced.</p>
<p>It now has the concepts of <em>angular-velocity</em>, <em>polygon contact set generation</em>, <em>contact group generation</em>, <em>object sleeping</em>, <em>collision callbacks</em> and <em>persistent contacts</em>. All these components were necessary to create the game.</p>
<h2>Physics engine &#8211; angular velocity</h2>
<p>Angular velocity is handled in a very similar way to linear velocity, except its a scalar and not a vector, since we&#8217;re in 2d and it gets integrated the same way. Where it gets more tricky is in the actual impulse equations.</p>
<p>I&#8217;m going to refer the reader to the following set of articles by Chris Hecker which describe the impulse equations for angular and linear velocity rather well: <a href="http://chrishecker.com/Rigid_Body_Dynamics">http://chrishecker.com/Rigid_Body_Dynamics</a>.</p>
<p>I do intend to write a more in depth follow up on this subject at some point.</p>
<h2>Physics engine &#8211; polygon contact set generation</h2>
<p>Although, technically when two convex shapes collide there are only two closest points (one on each object) this is not enough for the physics engine to produce a stable simulation with anything more than circles. As soon as you have a rectangle or a polygon you need to have the full contact-set between both objects.</p>
<div id="attachment_594" style="width: 300px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure1.png"><img class="size-full wp-image-594" title="figure1" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure1.png" alt="" width="290" height="362" /></a><p class="wp-caption-text">Figure 1</p></div>
<p><em>Figure 1</em> shows the full contact set between two polygons A and B. To generate this we need to start with the <em>feature-pair</em> returned by our collision system (vertex and edge, or edge and vertex).</p>
<div id="attachment_595" style="width: 299px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure2.png"><img class="size-full wp-image-595" title="figure2" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure2.png" alt="" width="289" height="362" /></a><p class="wp-caption-text">Figure 2</p></div>
<p><em>Figure 2</em> shows one such possible case: a vertex from B and an edge from A were returned as the closest features. Starting with this information we can then do a local search of the the vertices adjacent to the red point on B (one on either side) to find which edge has a normal that is most opposed to our collision normal (the edge normal).</p>
<div id="attachment_596" style="width: 309px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure3.png"><img class="size-full wp-image-596" title="figure3" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure3.png" alt="" width="299" height="362" /></a><p class="wp-caption-text">Figure 3</p></div>
<p><em>Figure 3</em> shows the correct edge and the other edge which was considered from B. Once we have these two edges we have all the information we need to generate the contact set. What we do is to project each vertex from each edge onto the other edge, making sure to clamp the projections so they lie wholly within the bounds of the edge.</p>
<div id="attachment_597" style="width: 216px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure4.png"><img class="size-full wp-image-597" title="figure4" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure4.png" alt="" width="206" height="176" /></a><p class="wp-caption-text">Figure 4</p></div>
<p><em>Figure 4</em> shows the red vertices of the edge from A being projected onto the green edge of B. The first vertex becomes projected point <em>b0 </em>and the second becomes <em>b1</em>.</p>
<div id="attachment_599" style="width: 214px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure5.png"><img class="size-full wp-image-599" title="figure5" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure5.png" alt="" width="204" height="176" /></a><p class="wp-caption-text">Figure 5</p></div>
<p>In Figure 5 we can see the same process repeated for the other edge; note how both projections of the green vertices would lie outside the bounds of the red edge. Because this would lead to an invalid contact we must clamp these at the bounds of the red edge. Vertices <em>a0 </em>and <em>a1 </em>result and this is the completed contact set!</p>
<div id="attachment_600" style="width: 299px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure6.png"><img class="size-full wp-image-600" title="figure6" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure6.png" alt="" width="289" height="362" /></a><p class="wp-caption-text">Figure 6</p></div>
<p>Here is the code for projecting a point onto an edge and clamping against the edge bounds:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> ProjectPointOntoEdge<span style="color: #66cc66;">&#40;</span>p:Vector2, e0:Vector2, e1:Vector2<span style="color: #66cc66;">&#41;</span>:Vector2
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #808080; font-style: italic;">// vector from edge to point</span>
	<span style="color: #000000; font-weight: bold;">var</span> v:Vector2 = p.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>e0<span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// edge vector</span>
	<span style="color: #000000; font-weight: bold;">var</span> <span style="color: #0066CC;">e</span>:Vector2 = e1.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>e0<span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// time along edge</span>
	<span style="color: #000000; font-weight: bold;">var</span> t:<span style="color: #0066CC;">Number</span> = <span style="color: #0066CC;">e</span>.<span style="color: #006600;">Dot</span><span style="color: #66cc66;">&#40;</span>v<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">/</span> <span style="color: #0066CC;">e</span>.<span style="color: #006600;">m_LenSqr</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// clamp to edge bounds</span>
	t = Scalar.<span style="color: #006600;">Clamp</span><span style="color: #66cc66;">&#40;</span>t, <span style="color: #cc66cc;">0</span>, <span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// form point and return</span>
	<span style="color: #b1b100;">return</span> e0.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> <span style="color: #0066CC;">e</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>t<span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<h2>Contact group generation and object sleeping</h2>
<p>The game logic for angry birds relies on being able to tell when all the movement in the level is stopped, because otherwise you would never know when an individual try is over since objects may yet fall down crushing an enemy character.</p>
<p>In order to facilitate this and also to act as an optimisation an object sleeping system is required. What this does is to deactivate or &#8216;sleep&#8217; any rigid bodies which have become sufficiently still for a set period of time, thereby saving CPU cycles and also giving us an indication about the state of the game.</p>
<p>For this to be possible we first have to be able to generate <em>contact groups</em>. A contact group is a collection of rigid bodies which are all touching each other.</p>
<div id="attachment_602" style="width: 310px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure7.png"><img class="size-medium wp-image-602" title="figure7" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure7-300x167.png" alt="" width="300" height="167" /></a><p class="wp-caption-text">Figure 7</p></div>
<p><em>Figure 7</em> shows two contact groups.</p>
<p>In order to generate these, the simplest way is to use recursion. Each object must maintain a list of every object that&#8217;s touching it. An outer loop over all rigid bodies generates individual contact group containers and then recurses within adding objects which are touching to the given contact group. </p>
<p>Static objects are not followed because we don&#8217;t want to include them in any contact group &#8211; they would link the entire level together into one giant, inefficient contact group!</p>
<p>The code looks like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">function</span> BuildContactGroup<span style="color: #66cc66;">&#40;</span> r:RigidBody, cg:ContactGroup, dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">!</span>r.<span style="color: #006600;">m_visited</span> <span style="color: #66cc66;">&amp;&amp;</span> <span style="color: #66cc66;">!</span>r.<span style="color: #006600;">m_Static</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		r.<span style="color: #006600;">m_visited</span> = <span style="color: #000000; font-weight: bold;">true</span>;
		r.<span style="color: #006600;">m_contactGroup</span> = cg;
&nbsp;
		<span style="color: #808080; font-style: italic;">// add the object</span>
		cg.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> r <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span> = <span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>r.<span style="color: #006600;">m_rbsTouching</span>.<span style="color: #006600;">m_Num</span>; i++ <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			BuildContactGroup<span style="color: #66cc66;">&#40;</span> r.<span style="color: #006600;">m_rbsTouching</span>.<span style="color: #0066CC;">Get</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>, cg, dt <span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">///</span>
<span style="color: #808080; font-style: italic;">/// Go through and build all the contact groups in the world</span>
<span style="color: #808080; font-style: italic;">///</span>
internal <span style="color: #000000; font-weight: bold;">function</span> BuildAllContactGroups<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span>, rigidBodies:ReferenceArray <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
<span style="color: #66cc66;">&#123;</span>
	Reset<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// start with a new group</span>
	<span style="color: #000000; font-weight: bold;">var</span> cg:ContactGroup=<span style="color: #000000; font-weight: bold;">null</span>;
&nbsp;
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>rigidBodies.<span style="color: #006600;">m_Num</span>; i++ <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #000000; font-weight: bold;">var</span> r:RigidBody = rigidBodies.<span style="color: #0066CC;">Get</span><span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// if this object isn't static and hasn't yet been visited...</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">!</span>r.<span style="color: #006600;">m_Static</span> <span style="color: #66cc66;">&amp;&amp;</span> r.<span style="color: #006600;">m_visited</span>==<span style="color: #000000; font-weight: bold;">false</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> cg==<span style="color: #000000; font-weight: bold;">null</span> <span style="color: #66cc66;">||</span> cg.<span style="color: #006600;">m_NumRigidBodies</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>
			<span style="color: #66cc66;">&#123;</span>
				<span style="color: #808080; font-style: italic;">// get new contact group</span>
				cg = GetNewContactGroup<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
			<span style="color: #66cc66;">&#125;</span>
&nbsp;
			<span style="color: #808080; font-style: italic;">// go an recursivly add objects to this new contact group</span>
			BuildContactGroup<span style="color: #66cc66;">&#40;</span>r, cg, dt<span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">// sleep check the contact groups</span>
	SleepCheck<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<!-- Easy AdSense V2.79 -->
<!-- Post[count: 1] -->
<div class="ezAdsense adsense adsense-midtext" style="text-align:center;margin:12px; "><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- medi -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-4897461488762721"
     data-ad-slot="9797433564"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div><p>Its actually quite simple and works rather well, taking minimal CPU time. </p>
<p>To enable the sleeping of rigid bodies, each rigid body maintains a counter which counts the number of seconds that rigid body has had angular and linear velocities below some threshold values. Then, once all the rigid bodies in a contact group have counter values over a threshold (1 second in this game&#8217;s case), the entire contact group is sent to sleep. Likewise, if any rigid body in a sleeping contact group wakes up, the entire contact group must wake up with it.</p>
<h2>Physics engine &#8211; collision callbacks</h2>
<p>For some objects the game needs to know about any collisions that happen between those objects and the hero character, or the world. To facilitate this, each rigid body has a collision callback delegate which can be set at runtime. Then, the physics engine will call this delegate whenever it detects a collision, passing the callback information about the collision including which objects were hit and what the relative normal velocities were at the time of collision. This information allows to game logic to kill enemies and smash blocks of ice.</p>
<p><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/smash.jpg"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/smash.jpg" alt="" title="smash" width="216" height="239" class="alignnone size-full wp-image-615" /></a></p>
<h2>Physics engine &#8211; persistent contacts</h2>
<p>This physics engine feature is absolutely essential to the stability of the physics; without it, the game would not be possible with as much creative freedom in level design.</p>
<p>So, what are persistent contacts?</p>
<p>Regular contacts are the things which stop two rigid bodies from falling through each other &#8211; they are generated by the collision detection system and used by the physics solver but they are temporary and exist for the current frame only. </p>
<p>The impulses generated by the physics solver converge the entire simulation towards stability, but there are not enough CPU cycles for it to be resolved completely in one frame&#8230; So rather than throw away all of last frames impulses we would like to be able to remember them and then apply them next frame in order to &#8216;warm start&#8217; the engine. This leads to massive stability improvements.</p>
<p>Persistent contacts are a way of caching the impulses between frames by identifying contacts which are logically the same across a series of frames. By logically I mean rather than using something crude like the position of two contacts, we want to use something which identifies contacts uniquely. To do this we can use feature pair indicies; so for example, the index of the vertex from object A combined with the index of the edge from object B. These will be combined together into one uint hash value which can be looked up and compared across frames. When the hash tags match, we have a cache hit and can copy the impulses across.</p>
<p>The code I use for caching the impulses looks like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> TouchingContact
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_featurePairKey:uint;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_accumulatedNormalImpulse:<span style="color: #0066CC;">Number</span>;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_accumulatedTangentImpulse:<span style="color: #0066CC;">Number</span>;
&nbsp;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> TouchingContact<span style="color: #66cc66;">&#40;</span> featurePairKey:<span style="color: #0066CC;">int</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_featurePairKey = featurePairKey;
		m_accumulatedNormalImpulse = <span style="color: #cc66cc;">0</span>;
		m_accumulatedTangentImpulse = <span style="color: #cc66cc;">0</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// Something to identify this contact uniquely</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">static</span> <span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> GenerateFeaturePairKey<span style="color: #66cc66;">&#40;</span> featureToUse:FeaturePair, supportIndex:<span style="color: #0066CC;">int</span> <span style="color: #66cc66;">&#41;</span>:uint
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">return</span> featureToUse.<span style="color: #006600;">m_fp</span><span style="color: #66cc66;">|</span><span style="color: #66cc66;">&#40;</span> featureToUse.<span style="color: #006600;">m_face</span><span style="color: #66cc66;">&lt;&lt;</span><span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">|</span><span style="color: #66cc66;">&#40;</span> supportIndex<span style="color: #66cc66;">&lt;&lt;</span><span style="color: #cc66cc;">16</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>When two objects touch for the first time, a persistent contact entry is generated for the collision and stored on the lower indexed object, so that I avoid duplicating data. When objects stop touching, these contact entries are deleted again. During the time when they are touching, I cache up to 4 feature pairs for later lookup &#8211; the reason I chose 4 and not 2 (which would be the logical choice) is that I noticed there was a fair amount of flip-flop over the course of a few frames in certain contact configurations; one frame two contacts would be generated from a certain feature pair, the next frame another two contacts from a different feature pair and then repeat forever. Rather than throw away and regenerating, storing 4 allowed me to catch this case and achieve a 100% cache hit rate for stable contact configurations.</p>
<h2>Optimisation</h2>
<p>After I had implemented all these features and gotten the engine stable enough to be able to run angry birds, I noticed that it was in fact, far too slow to actually use. This made me sad, but a little digging into action-script optimisation techniques netted me the answer.</p>
<p><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/pile.jpg"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/pile-300x206.jpg" alt="" title="pile" width="300" height="206" class="alignnone size-medium wp-image-618" /></a></p>
<p><b>References</b></p>
<p>In action-script, every complex type is passed by reference and there are no complex types which can be put on the stack, unlike c# or c++. This is particularly irksome if you have something like a Vector2 class for doing all your geometric calculations, because it means every time you do a new(), an allocation is made on the <strong>heap</strong>, which of course means you risk the slowness of the garbage collector when doing temporary calculations.</p>
<p>This is an absolute killer in terms of performance &#8211; I found I was doing something on the order of <strong>7k-12k</strong> such temporary allocations every single frame!</p>
<p><b>The solution &#8211; pools</b></p>
<p>Of course, the internet informed me that the accepted solution here is to employ an <em>object pool</em> for complex types &#8211; pre-allocated up-front with a known fixed capacity. Allocations can then be made and freed using the pool, thereby avoiding the garbage collector.</p>
<p>I couldn&#8217;t find an implementation that did exactly what I wanted, so I wrote my own:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;">package Code.<span style="color: #0066CC;">System</span>
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">import</span> Code.<span style="color: #006600;">Assert</span>;
	<span style="color: #0066CC;">import</span> Code.<span style="color: #0066CC;">System</span>.<span style="color: #006600;">UnexpectedCaseException</span>;
&nbsp;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Pool
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_counter:<span style="color: #0066CC;">int</span>;
		<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_maxObjects:<span style="color: #0066CC;">int</span>;
		<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_pool:<span style="color: #0066CC;">Array</span>;
		<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_type:<span style="color: #000000; font-weight: bold;">Class</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
		<span style="color: #808080; font-style: italic;">/// </span>
		<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
		<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Pool<span style="color: #66cc66;">&#40;</span> maxObjects:<span style="color: #0066CC;">int</span>, <span style="color: #0066CC;">type</span>:<span style="color: #000000; font-weight: bold;">Class</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			m_pool = <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Array</span><span style="color: #66cc66;">&#40;</span> maxObjects <span style="color: #66cc66;">&#41;</span>;
&nbsp;
			<span style="color: #808080; font-style: italic;">// construct all objects</span>
			<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span><span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>maxObjects; i++<span style="color: #66cc66;">&#41;</span>
			<span style="color: #66cc66;">&#123;</span>
				m_pool<span style="color: #66cc66;">&#91;</span>i<span style="color: #66cc66;">&#93;</span> = <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">type</span><span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>;
			<span style="color: #66cc66;">&#125;</span>
&nbsp;
			m_counter=<span style="color: #cc66cc;">0</span>;
			m_type=<span style="color: #0066CC;">type</span>;
			m_maxObjects=maxObjects;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
		<span style="color: #808080; font-style: italic;">/// </span>
		<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
		<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Allocate<span style="color: #66cc66;">&#40;</span> ...<span style="color: #006600;">args</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #66cc66;">*</span>
		<span style="color: #66cc66;">&#123;</span>
			Assert<span style="color: #66cc66;">&#40;</span> m_counter<span style="color: #66cc66;">&lt;</span>m_maxObjects, <span style="color: #ff0000;">&quot;Pool.GetObject(): pool out of space!&quot;</span> <span style="color: #66cc66;">&#41;</span>;
&nbsp;
			<span style="color: #000000; font-weight: bold;">var</span> obj:<span style="color: #66cc66;">*</span> = m_pool<span style="color: #66cc66;">&#91;</span>m_counter++<span style="color: #66cc66;">&#93;</span>;
&nbsp;
			<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #006600;">length</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
			<span style="color: #66cc66;">&#123;</span>
				<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">2</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">3</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">4</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">5</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">6</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">5</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> args.<span style="color: #0066CC;">length</span>==<span style="color: #cc66cc;">7</span> <span style="color: #66cc66;">&#41;</span>
				<span style="color: #66cc66;">&#123;</span>
					obj.<span style="color: #006600;">Initialise</span><span style="color: #66cc66;">&#40;</span> args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">3</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">4</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">5</span><span style="color: #66cc66;">&#93;</span>, args<span style="color: #66cc66;">&#91;</span><span style="color: #cc66cc;">6</span><span style="color: #66cc66;">&#93;</span> <span style="color: #66cc66;">&#41;</span>;
				<span style="color: #66cc66;">&#125;</span>
				<span style="color: #b1b100;">else</span> 
				<span style="color: #66cc66;">&#123;</span>
					<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> UnexpectedCaseException;
				<span style="color: #66cc66;">&#125;</span>
			<span style="color: #66cc66;">&#125;</span>
&nbsp;
			<span style="color: #b1b100;">return</span> obj;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
		<span style="color: #808080; font-style: italic;">/// </span>
		<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
		<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Deallocate<span style="color: #66cc66;">&#40;</span> obj:<span style="color: #66cc66;">*</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
		<span style="color: #66cc66;">&#123;</span>
			Assert<span style="color: #66cc66;">&#40;</span> <span style="color: #0066CC;">typeof</span><span style="color: #66cc66;">&#40;</span> obj <span style="color: #66cc66;">&#41;</span>==<span style="color: #0066CC;">typeof</span><span style="color: #66cc66;">&#40;</span> m_type <span style="color: #66cc66;">&#41;</span>, <span style="color: #ff0000;">&quot;Pool.Deallocate(): object doesn't belong to this pool!&quot;</span> <span style="color: #66cc66;">&#41;</span>;
			Assert<span style="color: #66cc66;">&#40;</span> m_counter<span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span>, <span style="color: #ff0000;">&quot;Pool.Deallocate(): too many deallocations!&quot;</span><span style="color: #66cc66;">&#41;</span>;
			m_pool<span style="color: #66cc66;">&#91;</span>--m_counter<span style="color: #66cc66;">&#93;</span> = obj;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
		<span style="color: #808080; font-style: italic;">/// </span>
		<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
		<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> <span style="color: #0066CC;">get</span> m_Num<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">int</span>
		<span style="color: #66cc66;">&#123;</span>
			<span style="color: #b1b100;">return</span> m_counter;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
		<span style="color: #808080; font-style: italic;">/// </span>
		<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
		<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> <span style="color: #0066CC;">Get</span><span style="color: #66cc66;">&#40;</span>i:<span style="color: #0066CC;">int</span><span style="color: #66cc66;">&#41;</span>:<span style="color: #66cc66;">*</span>
		<span style="color: #66cc66;">&#123;</span>
			Assert<span style="color: #66cc66;">&#40;</span>i<span style="color: #66cc66;">&lt;</span>m_counter, <span style="color: #ff0000;">&quot;Pool.Get(): index out of range!&quot;</span><span style="color: #66cc66;">&#41;</span>;
			<span style="color: #b1b100;">return</span> m_pool<span style="color: #66cc66;">&#91;</span>i<span style="color: #66cc66;">&#93;</span>;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
		<span style="color: #808080; font-style: italic;">/// </span>
		<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
		<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> <span style="color: #0066CC;">Clear</span><span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
		<span style="color: #66cc66;">&#123;</span>
			m_counter=<span style="color: #cc66cc;">0</span>;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>This one allows you to construct a pool with runtime type checking and also allows you to call an Initialise() function on the object being allocated. I couldn&#8217;t find a way of calling the object&#8217;s constructor in AS3, which would have been the ideal case &#8211; something like placement new in c++ would be nice. Equally, I couldn&#8217;t find a way of passing all the parameters directly to the function without manually indexing them or calling apply() which I&#8217;ve read is very slow. However, it works well in practice.</p>
<p>For the temporary calculations involving Vector2&#8242;s I used a large pool of Vector2s which only exists for one frame. The only caveat is that you need to be very careful not to persist a reference to one of these across frames because it will be overwritten. I really wish AS3 had struct like c# does to avoid having to do this.</p>
<p>I used the following profiler (which I highly recommend) to identify the slow parts of the engine:<a href="http://manuel.bit-fire.com/2007/10/17/an-as3-profiler/"> http://manuel.bit-fire.com/2007/10/17/an-as3-profiler/</a></p>
<p>Once I had identified all the slow parts and made pools for all the temporary objects I was still a little discouraged because it wasn&#8217;t running quite as fast as I&#8217;d have liked on my old desktop that I have here. I worked hard at it but eventually reached the point of diminishing returns and I was in danger of making the source code too hard to follow.</p>
<p>In desperation I fired up <a href="http://chrome.angrybirds.com/">the real angry birds in my chrome browser</a> to see how quickly that would run on my machine. I was shocked and relieved to discover that it actually ran a lot slower than my implementation did! Happy days.</p>
<p><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/smash2.jpg"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/smash2-300x195.jpg" alt="" title="smash2" width="300" height="195" class="alignnone size-medium wp-image-620" /></a></p>
<h2>Particles and blinking</h2>
<p>Some little items of polish that I added to the game were a simple particle system which used Sprites defined in the Flash IDE as the particles and a simple blink controller that used named instances inside each character for the open eyes and the closed eyes and then animated them in code depending on a random waiting period to judge when to toggle the visibility of each.</p>
<div id="attachment_605" style="width: 218px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure8.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/06/figure8.png" alt="" title="figure8" width="208" height="180" class="size-full wp-image-605" /></a><p class="wp-caption-text">Figure 8</p></div>
<p><em>Figure 8</em> shows an example character with blinked and open eyes and the corresponding eye shapes for each.</p>
<h2>Conclusion</h2>
<p>Of course the game contains many more little things which I don&#8217;t possibly have time to write about now, but if there is enough interest I can write another article of course! In this article I have covered some of the things which are necessary to turn theory into practice when it comes to talking about physics engines in games.</p>
<p>If you would like to do so, please purchase the source code and assets which go with this article; its very close to being a completed game which can be easily used as a template for your own 2d physics game, complete with editor (in the form of flash) which is delightfully easy to use. </p>
<p>This one is a little more expensive than my regular example code, but take into consideration that it took me two solid weeks of work which if I were contracted would be significantly more than this for one days work and also that what you are getting represents 10 years of industry experience and knowledge &#8211; if you think of it like that it really is a bargain&#8230; Remeber, Roivo spent $120k developing the original angry birds!</p>
<p>The only thing I ask is that no one just releases this as a game as it stands &#8211; please use it as a template for your own games! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  As ever, the licence allows you to use all the code and assets for commercial purposes or otherwise as long as you don&#8217;t just release it as it stands and that you don&#8217;t simply give the entire thing to anyone else.</p>
<p>Note: requires Flash CS4+ and builds with Amethyst or FlashDevelop.</p>
<p>49.99USD<br />
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
 <input type="hidden" name="business" value="paypal@wildbunny.co.uk" />
 <input type="hidden" name="cmd" value="_xclick" />
 <!-- Instant Payment Notification & Return Page Details -->
 <input type="hidden" name="notify_url" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_notify=1" />
 <input type="hidden" name="cancel_return" value="http://www.wildbunny.co.uk/blog/" />
 <input type="hidden" name="return" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_return=1" />
 <input type="hidden" name="rm" value="2" />
 <!-- Configures Basic Checkout Fields -->
 <input type="hidden" name="lc" value="" />
 <input type="hidden" name="no_shipping" value="1" />
 <input type="hidden" name="no_note" value="1" />
 <input type="hidden" name="custom" value="www.wildbunny.co.uk" />
 <input type="hidden" name="currency_code" value="USD" />
 <input type="hidden" name="page_style" value="paypal" />
 <input type="hidden" name="charset" value="utf-8" />
 <input type="hidden" name="item_name" value="Source code for angry birds pt2 article" />
 <input type="hidden" name="item_number" value="sp:609:72" />
 <input type="hidden" name="amount" value="49.99" />
 <!-- Configures s2Member's Unique Invoice ID/Code  -->
 <input type="hidden" name="invoice" value="53d0fa05ee4a3~54.205.189.156" />
 <!-- Associates Purchase With A User/Member (when/if applicable) -->
 <input type="hidden" name="on0" value="Originating Domain" />
 <input type="hidden" name="os0" value="www.wildbunny.co.uk" />
 <!-- Identifies The Customer's IP Address For Tracking -->
 <input type="hidden" name="on1" value="Customer IP Address" />
 <input type="hidden" name="os1" value="54.205.189.156" />
 <!-- Displays The PayPal Image Button -->
 <input type="image" src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" style="width:auto; height:auto; border:0;" alt="PayPal" />
</form></p>
<p>I hope you make some exciting games with this and I look forward to playing them!</p>
<p>Until next time, have fun!</p>
<p>Cheers, Paul.</p>
<p>p.s. in the game if you get bored of playing by the rules, you can simply pick up any object with the mouse and smash it around for fun!</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_1" width="640" height="360">
      <param name="movie" value="http://www.wildbunny.co.uk/media/angrybirds/pt2.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/angrybirds/pt2.swf" width="640" height="360">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>


				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/";
							  reddit_title = "How to make Angry Birds – part 2";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" data-count="horizontal" data-text="How to make Angry Birds – part 2">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F06%2F07%2Fhow-to-make-angry-birds-part-2%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F06%2F07%2Fhow-to-make-angry-birds-part-2%2F&amp;title=How+to+make+Angry+Birds+%E2%80%93+part+2" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><span style="clear:both;display:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/img/wpsf-img.php" width="0" height="0" alt="" style="border-style:none;width:0px;height:0px;display:none;" /></span>											</div><!-- .entry-content -->

					<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=60&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>About Paul Firth</h2>
							A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp							<div id="author-link">
								<a href="http://www.wildbunny.co.uk/blog/author/paulfirth/">
									View all posts by Paul Firth <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

					<div class="entry-utility">
						This entry was posted in <a href="http://www.wildbunny.co.uk/blog/category/as3/" title="View all posts in AS3" rel="category tag">AS3</a>, <a href="http://www.wildbunny.co.uk/blog/category/platform-game/collision-detection-platform-game/" title="View all posts in Collision Detection" rel="category tag">Collision Detection</a>, <a href="http://www.wildbunny.co.uk/blog/category/graphics/" title="View all posts in Graphics" rel="category tag">Graphics</a>, <a href="http://www.wildbunny.co.uk/blog/category/making-angry-birds/" title="View all posts in Making angry birds" rel="category tag">Making angry birds</a>, <a href="http://www.wildbunny.co.uk/blog/category/physics-2/" title="View all posts in Physics" rel="category tag">Physics</a>, <a href="http://www.wildbunny.co.uk/blog/category/technical/" title="View all posts in Technical" rel="category tag">Technical</a> and tagged <a href="http://www.wildbunny.co.uk/blog/tag/adobe-flash/" rel="tag">adobe flash</a>, <a href="http://www.wildbunny.co.uk/blog/tag/angry-birds/" rel="tag">angry birds</a>, <a href="http://www.wildbunny.co.uk/blog/tag/game-developement/" rel="tag">game developement</a>, <a href="http://www.wildbunny.co.uk/blog/tag/games/" rel="tag">games</a>, <a href="http://www.wildbunny.co.uk/blog/tag/physics-engine/" rel="tag">physics engine</a>, <a href="http://www.wildbunny.co.uk/blog/tag/programming/" rel="tag">programming</a>. Bookmark the <a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" title="Permalink to How to make Angry Birds &#8211; part 2" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/" rel="prev"><span class="meta-nav">&larr;</span> How to make Angry Birds &#8211; part 1</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/07/07/mouseenabled-vs-droptarget-in-as3/" rel="next">mouseEnabled vs dropTarget in AS3 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">145 Responses to <em>How to make Angry Birds &#8211; part 2</em></h3>

			<div class="navigation">
				<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div>
				<div class="nav-next"></div>
			</div> <!-- .navigation -->

			<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="li-comment-1512">
		<div id="comment-1512">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3340b5e36a3a1cf7a4b9815f3837609?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">codeBeast</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1512">
			July 20, 2012 at 1:29 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>captcha &#8211; or my maths is crap which it isn&#8217;t or the software has a bug.<br />
I will try again now (bet it works first time :D) NO<br />
Error: You entered in the wrong CAPTCHA phrase. Press your browser&#8217;s back button and try again<br />
times tried: 15 (now I&#8217;m starting to sweat)</p>
<p>Flash IDE. I have added the swc BUT the assets.fla is not pointing to it&#8217;s doc class and the classes are also in other folders so they would have to be named appropriately ie: where it says package com.assets etc&#8230; If that&#8217;s the case I&#8217;ll get down to it.</p>
<p>FlashDevelop &#8211; know nothing about it &#8211; you point FD to &#8211; from where &#8211; ie: could you just tell me like from the menu -<br />
Cheers</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1512#respond' onclick='return addComment.moveForm("comment-1512", "1512", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1514">
		<div id="comment-1514">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1514">
			July 20, 2012 at 1:45 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ok, I&#8217;ve made you a FlashDevelop project file for this:</p>
<p><a href="http://wildbunny.co.uk/media/angrybirds/AngryBirds.as3proj" rel="nofollow">http://wildbunny.co.uk/media/angrybirds/AngryBirds.as3proj</a></p>
<p>Download this and place it in the same directory as the Code folder, then load the project into FD, compile and away you go <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1514#respond' onclick='return addComment.moveForm("comment-1514", "1514", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1513">
		<div id="comment-1513">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3340b5e36a3a1cf7a4b9815f3837609?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">codeBeast</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1513">
			July 20, 2012 at 1:30 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Changed my browser to firefox and went through first time. I was using chrome before.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1513#respond' onclick='return addComment.moveForm("comment-1513", "1513", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1515">
		<div id="comment-1515">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3340b5e36a3a1cf7a4b9815f3837609?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">codeBeast</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1515">
			July 20, 2012 at 1:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi &#8211; that&#8217;s quick service.<br />
I have clicked the link but nothing is happening.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1515#respond' onclick='return addComment.moveForm("comment-1515", "1515", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1516">
		<div id="comment-1516">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1516">
			July 20, 2012 at 2:15 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Its xml, right click, save as <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1516#respond' onclick='return addComment.moveForm("comment-1516", "1516", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1517">
		<div id="comment-1517">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3340b5e36a3a1cf7a4b9815f3837609?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">codeBeast</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1517">
			July 20, 2012 at 2:18 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks a lot for your effort &#8211; appreciated.<br />
Gerry</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1517#respond' onclick='return addComment.moveForm("comment-1517", "1517", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-bozzy even thread-even depth-1" id="li-comment-1535">
		<div id="comment-1535">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a84515c15efa412c1e43090ba56747db?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Isak</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1535">
			August 11, 2012 at 9:37 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul, </p>
<p>Thanks for the great source. I have been attempting to setup all the dependencies in VS, but I am getting many errors and when I run the previous build it just takes me to the browser. </p>
<p>I have installed Amethyst and the Flex SDK and I have attempted to follow all the tutorials for setup. I still am not able to build the project. </p>
<p>I would appreciate if you can point to me to a blog or step by step on how to configure the project in Visual Studio 2010. </p>
<p>Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1535#respond' onclick='return addComment.moveForm("comment-1535", "1535", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1536">
		<div id="comment-1536">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1536">
			August 11, 2012 at 9:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Isak,</p>
<p>Sorry you are having problems &#8211; what errors are you getting specifically?</p>
<p>Have you told amethyst where the flex sdk is installed on your machine?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1536#respond' onclick='return addComment.moveForm("comment-1536", "1536", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-bozzy even thread-odd thread-alt depth-1" id="li-comment-1537">
		<div id="comment-1537">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a84515c15efa412c1e43090ba56747db?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Isak</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1537">
			August 11, 2012 at 10:05 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul, </p>
<p>Thank you for the quick response. Yes I have pointed the SDK in the project properties.</p>
<p>The errors are all code related, I have posted them below:</p>
<p>Error	1	Call to a possibly undefined method BrokenIceFla<br />
Error	2	Call to a possibly undefined method EnemyFeatherFla<br />
Error	3	Access of undefined property Level3Fla.<br />
Error	4	Access of undefined property Level2Fla.<br />
Error	5	Access of undefined property LevelFla.<br />
Error	6	Call to a possibly undefined method TextFla.<br />
Error	7	Definition Level2Fla could not be found.<br />
Error	8	Compile failed. Exit code was 10</p>
<p>I appreciate your help as I am very familiar with VS but I&#8217;m struggling to get this configured. </p>
<p>Regards, </p>
<p>Isak</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1537#respond' onclick='return addComment.moveForm("comment-1537", "1537", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1538">
		<div id="comment-1538">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1538">
			August 11, 2012 at 10:09 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Isak,</p>
<p>Those all sound like errors related to the compiler not being able to locate and link against assets.swc as those symbol names are all defined in that file. Have you re-exported that file from CS4 yourself, or are you using the one which came in the zip file?</p>
<p>Just check that the &#8216;references&#8217; in the project explorer include assets.swc?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1538#respond' onclick='return addComment.moveForm("comment-1538", "1538", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-bozzy even depth-3" id="li-comment-1539">
		<div id="comment-1539">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a84515c15efa412c1e43090ba56747db?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Isak</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1539">
			August 11, 2012 at 10:34 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ha, I knew it was something simple. </p>
<p>Lifesaver thanks. I&#8217;m looking forward to working through the tutorial. </p>
<p>I was hoping you could help me with some advice. I am proficient with C++ and am looking to use this rather than AS. I know you have said in previous posts that the principles are ambiguous to languages. </p>
<p>However I am struggling to figure out how to transfer how you have put together the graphics. </p>
<p>Can I still use your graphics method with Flash as I am not clear if I could do that using C++. If not can you recommend any similar graphics engine or method for use with VS and C++? </p>
<p>I am thinking about usig Marmalade SDK for all mobile development. </p>
<p>Or would you recommend learning AS?</p>
<p>Once again I appreciate your advice and recommendations and for the help with compilation.</p>
<p>Regards,  </p>
<p>Isak</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1539#respond' onclick='return addComment.moveForm("comment-1539", "1539", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-1540">
		<div id="comment-1540">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1540">
			August 11, 2012 at 10:41 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>No problem, glad you got it working ok in the end! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>As for c++ &#8211; perfectly possible to get it working, you just have to handle the graphics differently. Most of the graphics would be replaced by straight bitmaps; probably on textured polygons using a 3d engine in 2d.</p>
<p>Should be a simple matter to get them exported from flash into bitmap form, then just a question of getting them into your engine of choice.</p>
<p>However, if you&#8217;re thinking about mobile, you might consider adobe air, as that will let you cross compile the code as it stands and have it running on mobile in no time at all &#8211; of course, that means learning AS3, but its really quite similar to c++ in a lot of ways, sans the stack objects for complex types.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1540#respond' onclick='return addComment.moveForm("comment-1540", "1540", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-bozzy even depth-5" id="li-comment-1541">
		<div id="comment-1541">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a84515c15efa412c1e43090ba56747db?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Isak</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1541">
			August 11, 2012 at 10:48 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Brilliant! </p>
<p>Thanks a lot!!!</p>
<p>Isak</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-ddechow odd alt thread-even depth-1" id="li-comment-1580">
		<div id="comment-1580">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c8d32e0688d337df91cf341ce7fb38d1?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">David</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1580">
			September 7, 2012 at 8:38 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I am trying to change the characters in angry birds. Am I correct in thionking that I mak e the changes to the asset.fla then export it to an .swc to get them to appear when I rebuild in Visual Studio? If so I cannot seem to get the .swc to export from the original source files, and I am wondering if it is due to some of the conflicts that are popping up:</p>
<p>Symbol &#8216;Level2&#8242;	1152: A conflict exists with inherited definition Code:Level.m_flaSlingshot in namespace public.<br />
Symbol &#8216;Level2&#8242;	1152: A conflict exists with inherited definition Code:Level.m_flaBird2 in namespace public.<br />
Symbol &#8216;Level2&#8242;	1152: A conflict exists with inherited definition Code:Level.m_flaSlingshotBack in namespace public.<br />
Symbol &#8216;Level2&#8242;	1152: A conflict exists with inherited definition Code:Level.m_flaBird3 in namespace public.<br />
Symbol &#8216;Level2&#8242;	1152: A conflict exists with inherited definition Code:Level.m_flaBird1 in namespace public.</p>
<p>any help is appreciated I have tried every thing I can think of ( file permissions , file paths). I am out of ideas. Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1580#respond' onclick='return addComment.moveForm("comment-1580", "1580", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1583">
		<div id="comment-1583">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1583">
			September 10, 2012 at 4:09 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>Yes you are correct about the export process. Were you able to build the project before you exported from flash?</p>
<p>Have you set the class-paths up in the Flash IDE to point to the location you unzipped your files?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1583#respond' onclick='return addComment.moveForm("comment-1583", "1583", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1581">
		<div id="comment-1581">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/36dd5c1aac00bfd7b410171cc0cf9334?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Emanuel Warzel</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1581">
			September 8, 2012 at 10:36 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey,<br />
can you help me with creating a similar game like this for android? I really wanna learn!<br />
Please,I have tried so many times,also is there a Script so when all baddies are destroyed theres like a score and next level? Another suggestion is achievements&#8230;<br />
THANKS YOU! Your tutorials are awesome.<br />
regards<br />
Emanuel</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1581#respond' onclick='return addComment.moveForm("comment-1581", "1581", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1584">
		<div id="comment-1584">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1584">
			September 10, 2012 at 4:10 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>You should be able to use Adobe AIR to build this source code for android have you tried that?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1584#respond' onclick='return addComment.moveForm("comment-1584", "1584", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1703">
		<div id="comment-1703">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a05ff3b4d3c6e5ef35d903e88bf76162?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jose</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1703">
			November 14, 2012 at 7:16 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Can i use this development to use it in a tablet (iOS, Android)?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1703#respond' onclick='return addComment.moveForm("comment-1703", "1703", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1704">
		<div id="comment-1704">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1704">
			November 14, 2012 at 8:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Sure <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  Use Adobe Air.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1704#respond' onclick='return addComment.moveForm("comment-1704", "1704", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1744">
		<div id="comment-1744">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/06f317cc0f246402761a192410232bb0?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Kyle</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1744">
			November 26, 2012 at 3:23 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul, thanks a lot for the tutorial, just getting into games programming now and this is the perfect app to start off on.</p>
<p>again very much appreciated</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1744#respond' onclick='return addComment.moveForm("comment-1744", "1744", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1831">
		<div id="comment-1831">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c2514569bf5a5bc39ae6987dc1f51e45?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Antony</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1831">
			December 21, 2012 at 7:46 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>how to replace the text with the movie clip at the end of the game?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1831#respond' onclick='return addComment.moveForm("comment-1831", "1831", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1985">
		<div id="comment-1985">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e447a1c7b340ed16f310f8afb787d272?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1985">
			February 10, 2013 at 10:00 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Sorry to bother but what is the difference between &#8216;point of contact&#8217; and &#8216;contact set&#8217;?<br />
I&#8217;m also wondering how is the closest feature-pair computed?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1985#respond' onclick='return addComment.moveForm("comment-1985", "1985", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1987">
		<div id="comment-1987">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-1987">
			February 11, 2013 at 7:51 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>Point of contact is a single pair of points (closest points), whereas the contact set is at least two pairs of contact points, which make up all points of contact between objects.</p>
<p>This article contains details about computing the feature pairs: <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" rel="nofollow">http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=1987#respond' onclick='return addComment.moveForm("comment-1987", "1987", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2026">
		<div id="comment-2026">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8019e672b88ea2362eea29b25a17bb9e?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Derek</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2026">
			February 27, 2013 at 9:56 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello, Can it support Flash CS6?<br />
I want to purchase &amp; download this source fla to research.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2026#respond' onclick='return addComment.moveForm("comment-2026", "2026", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2027">
		<div id="comment-2027">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2027">
			February 27, 2013 at 10:15 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Derek,</p>
<p>The project needs FlashDevelop in order to build the code. The assets will be importable into CS6, but you must have FD to build the game.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2027#respond' onclick='return addComment.moveForm("comment-2027", "2027", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2053">
		<div id="comment-2053">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/adaed58bc2d218db002a535d30486da6?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">John</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2053">
			March 9, 2013 at 11:21 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Paul,</p>
<p>You say that Flash CS4+ is required; I use FlashDevelop, can I use this without CS4+?</p>
<p>Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2053#respond' onclick='return addComment.moveForm("comment-2053", "2053", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2054">
		<div id="comment-2054">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2054">
			March 9, 2013 at 11:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi John,</p>
<p>CS4 is required if you want to change the assets, FD is required to actually build the project. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2054#respond' onclick='return addComment.moveForm("comment-2054", "2054", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2216">
		<div id="comment-2216">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1f3e0ecf42fadb48bd315b5e2d3076bb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jon Slater</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2216">
			April 18, 2013 at 7:45 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,<br />
As always, thanks for a fascinating article, and I briefly wanted to make a request of your knowledge and experience.<br />
In the section entitled &#8216;Persistent Contacts&#8217;, you mention &#8216;When two objects touch for the first time, a persistent contact entry is generated for the collision and stored on the lower indexed object, so that I avoid duplicating data&#8217;, sounds good.<br />
So but lets imagine A is the lower indexed object, so you get the entry for that, but then presumably you then have to find object B under this object A entry. so im a bit confused -do you have a list of lists?<br />
would it be better to hash together A and B indices (lets say the key is something like: iA &gt; iB ? iA &lt;&lt; 16 | iB &amp; 0xffff : iB &lt;&lt; 16 | iA &amp; 0xffff), and put the objects ptrs in a chained map?<br />
..but then i&#039;ve still got to find the feature pair:-(</p>
<p>my question is: whats the best type of structure for this?</p>
<p>thanks for your articles:)<br />
Jon</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2216#respond' onclick='return addComment.moveForm("comment-2216", "2216", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2217">
		<div id="comment-2217">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2217">
			April 18, 2013 at 9:06 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Jon,</p>
<p>I had to look at the code since its been a while since I&#8217;ve worked on this! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Touching contacts are indeed stored only on the lower indexed object and within the touching contacts the feature pairs are stored by key (just in a short, dumb list inside the touching contact). Whenever touching contacts need to be accessed I always have a pair of objects &#8211; for example when two objects first touch, there are we have access to both objects and when the contacts are solved for there is a reference to each object stored inside the contact so we never need to look one object up via the other, if that makes sense?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2217#respond' onclick='return addComment.moveForm("comment-2217", "2217", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2218">
		<div id="comment-2218">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1f3e0ecf42fadb48bd315b5e2d3076bb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jon Slater</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2218">
			April 18, 2013 at 10:27 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks for your reply Paul:) </p>
<p>so when you determine that a contact is indeed touching, presumably have to check that it&#8217;s not already in your list before you can add it.<br />
so before you add a new touching contact, say you have your 2 objects, and you find an entry in your table using the lower index. but then lets say that the other object is not referenced in the touching contact at that index.<br />
do you then add another touching contact after the (incorrect) found one? if so, isn&#8217;t this basically a chained hash table?</p>
<p>thanks very much for your thoughts on this<br />
Jon</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2218#respond' onclick='return addComment.moveForm("comment-2218", "2218", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-2219">
		<div id="comment-2219">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2219">
			April 18, 2013 at 10:37 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Jon,</p>
<p>When two objects first touch, the lower indexed object has its touching contact list searched to see if it contains an entry for the other object, if not one is created&#8230; I&#8217;m not quite sure what you mean when you refer to the incorrectly found one?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2219#respond' onclick='return addComment.moveForm("comment-2219", "2219", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-5" id="li-comment-2220">
		<div id="comment-2220">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1f3e0ecf42fadb48bd315b5e2d3076bb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jon Slater</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2220">
			April 18, 2013 at 11:17 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>ok, i got it; sorry for seeming obtuse!:) so this appears similar to box2d, where the contact list (although owned by the world) is accessed in lists maintained in the b2Body class, so that a linear search is done at object level to find the other body once you got the first one.<br />
I was attempting to speed this up in my own project, for objects with potentially large numbers of contacts/feature pairs; i think i may use a hash table possibly using a std::pair as a key or something.<br />
thanks a lot for this info; i have found your site inspiring.<br />
cheers, Jon</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-5" id="li-comment-2225">
		<div id="comment-2225">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2225">
			April 19, 2013 at 8:00 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>No problem, happy to help <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2268">
		<div id="comment-2268">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/0eb58dc5e7561c09f448b09abcda2375?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">cristian</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2268">
			April 26, 2013 at 8:46 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>hello, wanted to know if this project is very complicated to change the resolution?<br />
I consult you because as you can physically altering the game to change the size of the stage. The project brings the graph?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2268#respond' onclick='return addComment.moveForm("comment-2268", "2268", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2269">
		<div id="comment-2269">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2269">
			April 26, 2013 at 8:48 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Cristian,</p>
<p>No, its quite simple, you&#8217;d need to recompile the code, though because the resolution for the swf is specified at a metatag around the entry-point.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2269#respond' onclick='return addComment.moveForm("comment-2269", "2269", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2288">
		<div id="comment-2288">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d5d9b4dac38f9c93c9df6bde50c4739d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.fragileinc.com' rel='external nofollow' class='url'>Nic Rodriquez</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2288">
			April 29, 2013 at 3:31 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Before I buy this, can I compile this using Flash CS6? I don&#8217;t know what FlashDevelop is and I am on Mac so no Visual Studio. I am in a Flash class right now where we are to build a game based on what is in our book and I would rather learn something more up to date. Any help would definitely be appreciated.</p>
<p>Nic</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2288#respond' onclick='return addComment.moveForm("comment-2288", "2288", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2292">
		<div id="comment-2292">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2292">
			April 29, 2013 at 8:18 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Nic,</p>
<p>No you can&#8217;t I&#8217;m afraid, the project has been designed to be built in FD.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2292#respond' onclick='return addComment.moveForm("comment-2292", "2292", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2302">
		<div id="comment-2302">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d5d9b4dac38f9c93c9df6bde50c4739d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.fragileinc.com' rel='external nofollow' class='url'>Nic Rodriquez</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2302">
			April 30, 2013 at 1:30 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>So there is no way to do this on a Mac minus loading Windows and FD? Flash Builder from Adobe can&#8217;t handle it?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2302#respond' onclick='return addComment.moveForm("comment-2302", "2302", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-4" id="li-comment-2303">
		<div id="comment-2303">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d5d9b4dac38f9c93c9df6bde50c4739d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.fragileinc.com' rel='external nofollow' class='url'>Nic Rodriquez</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2303">
			April 30, 2013 at 1:31 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Might I add this is not for mobile use, just wrapping it up in html for a school project.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2303#respond' onclick='return addComment.moveForm("comment-2303", "2303", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-2304">
		<div id="comment-2304">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2304">
			April 30, 2013 at 1:40 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Nic,</p>
<p>Flash Builder probably is capable of building the code, but there is no project file for FB so you&#8217;d be on your own as far as getting that part to work &#8211; I don&#8217;t have a copy of FB.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2304#respond' onclick='return addComment.moveForm("comment-2304", "2304", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment byuser comment-author-traps even thread-odd thread-alt depth-1" id="li-comment-2364">
		<div id="comment-2364">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/34639e81ffb7b928d9f5e341547ac82f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Samuel</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2364">
			May 13, 2013 at 11:55 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi!<br />
First of all, thank you for the awesome tutorials!<br />
Your blog spiked my interest in game physics, and I&#8217;ve been playing with the speculative contacts concept for some time now. Recently I bought your code, which was very helpful for finding stupid mistakes in my code <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /> </p>
<p>Now I&#8217;m having a small issue with the solver, which I&#8217;m tempted to consider as a side effect of speculative contacts rather than a bug of mine. Maybe you can tell me if what I&#8217;m experiencing is normal:<br />
- I&#8217;m moving a fast Rectangle against a fixed Circle (with infinite mass). This is a controlled test case, with penetration correction turned off.<br />
- The goal was to check whether the separation distance is correctly calculated, and if the solver really leaves the objects &#8220;just touching&#8221; at the beginning of the next frame.<br />
- However, although the point of contact is indeed left &#8220;just touching&#8221;, since the Rectangle rotates due to the collision, the neighbouring points end up penetrating the circle.<br />
- This is quite visible over time, since penetration keeps increasing as the rectangle rotates over the circle.</p>
<p>Of course, the problem goes away if I enable penetration correction, but I was expecting that penetration should only occur if there are more bodies pushing each other in the system. I&#8217;m also wondering if there is something I&#8217;m missing here? Does it make any sense to generate an approximated contact set for the Rectangle vs. Circle case? Or am I just being paranoid?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2364#respond' onclick='return addComment.moveForm("comment-2364", "2364", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-2370">
		<div id="comment-2370">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2370">
			May 14, 2013 at 8:12 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Samuel,</p>
<p>Fast rotation can cause penetration to occur since this is only an approximate method &#8211; you can see this in the article with the thin rotating rectangle vs the small cube. You shouldn&#8217;t need any kind of extended contact set between a circle and a rectangle &#8211; there is only one collision point. I wouldn&#8217;t worry about it; such penetration will be unnoticeable in practice because of the fast moving nature of the objects and with penetration resolution even less so.</p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2370#respond' onclick='return addComment.moveForm("comment-2370", "2370", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-traps even depth-3" id="li-comment-2372">
		<div id="comment-2372">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/34639e81ffb7b928d9f5e341547ac82f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Samuel</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2372">
			May 14, 2013 at 8:58 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi again!<br />
Thanks for the fast reply, it helped indeed. Now I can close this test case and move to the next one.<br />
I&#8217;m testing each collision detection case individually, because I decided to try SAT instead of the Minkowsky difference&#8230; and I have a bunch of stupid bugs which I&#8217;m fixing step by step <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /> </p>
<p>This question about the penetration between circles and rotating polygons was just something that had me confused meanwhile..</p>
<p>Again, thanks for the help, and congratulations for the awesome blog!</p>
<p>Samuel.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2372#respond' onclick='return addComment.moveForm("comment-2372", "2372", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2987">
		<div id="comment-2987">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3d44a8d4926fdb2461be5f3210c42ce5?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">finscn</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-2987">
			July 29, 2013 at 12:11 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>$49.99 is too expensive for a chinese guy &#8230;  TEARS  :&#8217;(</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=2987#respond' onclick='return addComment.moveForm("comment-2987", "2987", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-3159">
		<div id="comment-3159">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1aaeb9f90fe2e77dc4769b2f52f3dfec?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">bohr</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3159">
			August 29, 2013 at 3:59 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>very nice information&#8230;<br />
i&#8217;m quite interest to develop an agent to solve this game&#8230; (gameplay)<br />
any idea which one is the best algorithm to apply ?.. thanks&#8230;</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3159#respond' onclick='return addComment.moveForm("comment-3159", "3159", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3160">
		<div id="comment-3160">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3160">
			August 29, 2013 at 4:10 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Some kind of greedy algorithm might work best.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3160#respond' onclick='return addComment.moveForm("comment-3160", "3160", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-3458">
		<div id="comment-3458">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3458">
			October 23, 2013 at 5:17 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Thanks for the effort you put into this excellent article! </p>
<p>But I am having a question about angular momentum, even after reading Chris Hecker&#8217;s articles, who suggested a force/acceleration model rather than your impluse/momentum model. In my little demo I have the contact point/normal/velocity, radius vector(from contact point to rotation center), inertia and inverse mass. Is it sufficient to get the change of angular velocity from the above information?</p>
<p>Thanks <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
Xiaoyu</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3458#respond' onclick='return addComment.moveForm("comment-3458", "3458", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3459">
		<div id="comment-3459">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3459">
			October 23, 2013 at 5:53 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Xiaoyu,</p>
<p>As long as you have inverse masses and inverse moments of inertia for both bodies in contact, it is possible to compute an impulse which will give both change in linear and angular velocity.</p>
<p>The equation itself is rather large and unwieldy, though. Equation 9 in Chris&#8217; article here: <a href="http://chrishecker.com/images/e/e7/Gdmphys3.pdf" rel="nofollow">http://chrishecker.com/images/e/e7/Gdmphys3.pdf</a> gives you the impulse J, which you then multiply by the inverse mass (to get change in linear velocity) and inverse moment of inertia (to get change in angular velocity).</p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3459#respond' onclick='return addComment.moveForm("comment-3459", "3459", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-3461">
		<div id="comment-3461">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3461">
			October 23, 2013 at 6:16 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul, </p>
<p>I just read the Part 2 where velocity is integrated from accl, then jump to that hasty conclusion&#8230;</p>
<p>Thanks for your help! I think I have to dig more into Chris  Hecker&#8217;s good old articles <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Xiaoyu</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3461#respond' onclick='return addComment.moveForm("comment-3461", "3461", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3598">
		<div id="comment-3598">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/b1ba6b5afd0e2ecc45ba1ffa54f2aa9c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ian</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3598">
			December 23, 2013 at 8:07 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Why did it cost 140,000$ to make angry birds?  Couldnt a skilled programmer make an app from scratch just using their skills.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3598#respond' onclick='return addComment.moveForm("comment-3598", "3598", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3599">
		<div id="comment-3599">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-2/#comment-3599">
			December 24, 2013 at 11:20 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Ian,</p>
<p>Because writing the code is != the entire product. There is artwork and the all important marketing to think about!</p>
<p>Cheers, Paul</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/06/07/how-to-make-angry-birds-part-2/?replytocom=3599#respond' onclick='return addComment.moveForm("comment-3599", "3599", "respond", "590")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>

			<div class="navigation">
				<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div>
				<div class="nav-next"></div>
			</div><!-- .navigation -->


								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2011/06/07/how-to-make-angry-birds-part-2/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.wildbunny.co.uk/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='590' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
							<script type='text/javascript'>
	<!--
	refJS = escape( document[ 'referrer' ] );
	document.write("<input type='hidden' name='refJS' value='"+refJS+"'>");
	// -->
	</script>
	<p style="font-size:9px;clear:both;">WP-SpamFree by <a rel="nofollow" href="http://www.polepositionmarketing.com/library/wp-spamfree/" title="WP-SpamFree WordPress Anti-Spam Plugin" >Pole Position Marketing</a>

					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="search-3" class="widget-container widget_search"><h3 class="widget-title">Search</h3><form role="search" method="get" id="searchform" class="searchform" action="http://www.wildbunny.co.uk/blog/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li id="categories-3" class="widget-container widget_categories"><h3 class="widget-title">Choose a category</h3><select name='cat' id='cat' class='postform' >
	<option value='-1'>Select Category</option>
	<option class="level-0" value="104">Algorithmic trading&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="7">Animal Army&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="35">AS3&nbsp;&nbsp;(19)</option>
	<option class="level-0" value="44">Beginner&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="114">Bitcoin&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="6">Business&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="73">Chip tunes&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="71">Circles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="40">Collision Detection&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="53">Developer love&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="117">Entity systems&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="103">Finance&nbsp;&nbsp;(6)</option>
	<option class="level-0" value="101">Full games&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="67">Geometry&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="58">Graphics&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="100">JSON&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="42">Ladders and AI&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="96">learning-to-program&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="28">Making angry birds&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="47">Micro-transactions&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="90">Multi-player&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="72">Music&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="118">Optimisation&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="41">Parallax and Tiles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="65">paypal&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="97">Physics&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="36">Platform game&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="68">Polygons&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="98">Portals&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="52">Promotion&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="93">Self improvement&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="66">Server side&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="99">Silverlight&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="45">Stencyl&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="5">Technical&nbsp;&nbsp;(28)</option>
	<option class="level-0" value="1">Uncategorized&nbsp;&nbsp;(1)</option>
</select>

<script type='text/javascript'>
/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://www.wildbunny.co.uk/blog/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script>

</li>			</ul>
		</div><!-- #primary .widget-area -->


		<div id="secondary" class="widget-area" role="complementary">
			<ul class="xoxo">
				<li id="user_bio-2" class="widget-container widget_user_bio"><h3 class="widget-title"><div style="text-align:center">About the author</div></h3><div class="ub-grav" style="margin:5px 5px 0px 5px;text-align:center;"><img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=128&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D128&amp;r=G' class='avatar avatar-128 photo' height='128' width='128' /></div>A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp
</li><li id="widget_featured-posts-2" class="widget-container widget_featured-posts"><h3 class="widget-title">Featured Posts</h3>	
	<ul id="yiw-featured-post">
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/shop.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make a multi-player game � part 2" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/11/20/how-to-make-a-multi-player-game-part-2/">How to make a multi-player game � part 2</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2014/03/03/what-is-a-bitcoin/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/Bitcoin_Mining_Farm_Logo.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="What is a Bitcoin?" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2014/03/03/what-is-a-bitcoin/">What is a Bitcoin?</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Physics engines for dummies" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/">Physics engines for dummies</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/12/11/how-to-make-a-2d-platform-game-part-1/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/12/giantStar.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make a 2d Platform Game &#8211; part 1" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/12/11/how-to-make-a-2d-platform-game-part-1/">How to make a 2d Platform Game &#8211; part 1</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/04/stop-loss.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Algorithmic trading for dummies &#8211; part 2" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/">Algorithmic trading for dummies &#8211; part 2</a>
	       </h4>
	   </li>
	</ul>
	
	</li><li id="advanced-featured-page-widget-3" class="widget-container widget_advanced-featured-page-widget"><h3 class="widget-title">Tutorials with code to buy</h3><div class="post-2295 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-multiplayer-asteroids-engine/" title="Buy multiplayer asteroids engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/multiplayer.jpg" class="attachment-200 by 200 image" alt="multiplayer" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-2" class="widget-container widget_advanced-featured-page-widget"><div class="post-2299 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-angrybirds-alike-engine/" title="Buy Angrybirds-alike engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/birds.jpg" class="attachment-200 by 200 image" alt="birds" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-4" class="widget-container widget_advanced-featured-page-widget"><div class="post-2301 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-platform-game-engine/" title="Buy platform game engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/platform.png" class="attachment-200 by 200 image" alt="platform" /></a></div><!--end post_class()-->

</li><li id="wp125" class="widget-container wp125_write_ads_widget">
<h3 class="widget-title">Affiliates</h3><div id="wp125adwrap_1c">
<div class="wp125ad odd"><a href="index.php?adclick=10" title="plus500" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/03/plus500-200x200.gif" alt="plus500" /></a></div>
<div class="wp125ad even"><a href="https://www.cavirtex.com/Z/50680" title="cavirtex" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/caVirtex.gif" alt="cavirtex" /></a></div>
<div class="wp125ad odd"><a href="http://www.freelancer.co.uk/affiliates/wildbunny2/" title="freelancer" rel="nofollow"target='_blank'><img src="/images/freelancer.png" alt="freelancer" /></a></div>
<div class="wp125ad even"><a href="http://www.shareasale.com/r.cfm?b=531904&u=949687&m=41388&urllink=&afftrack=" title="wp engine" rel="nofollow"target='_blank'><img src="http://www.shareasale.com/image/41388/sas_banner_250x250.jpg" alt="wp engine" /></a></div>
<div class="wp125ad odd"><a href="http://www.wildbunny.co.uk/blog/advertise-here/" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/images/blankAdvert.png" alt="" /></a></div>
</div>
</li><li id="ezadswidget-4" class="widget-container ezAdsWidget"><h3 class="widget-title">My MetaTrader 5 products</h3><!-- Easy AdSense V2.79 -->
<!-- Widg[count: 2] -->
<div class="ezAdsense adsense adsense-widget"><div style="text-align:center;margin:0px; "><div style="width:350px">
<a target="_blank" href="http://mql5.com/dzz" title="Download VWAP technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/925/mid" alt="Buy VWAP customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e08" title="Download Average Spread technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/951/mid" alt="Buy Average Spread customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e09" title="Download Bid Ask Volumes technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/950/mid" alt="Buy Bid Ask Volumes customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/po9" title="Download Market Activity technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/963/mid" alt="Buy Market Activity customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/poa" title="Download Precision Scalper trading system from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/972/mid" alt="Buy Precision Scalper trading application in the store of automated robot systems" width="400" height="60"></a>
</div></div></div></li>			</ul>
		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">
					Wildbunny blog				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/"
						title="Semantic Personal Publishing Platform" rel="generator">
					Proudly powered by WordPress.				</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

		
		<script type="text/javascript">
			//<![CDATA[
			jQuery(document).ready(function() {
				var a = '<div id="cookie-law-info-bar"><span>This website uses cookies to improve your experience. We\'ll assume you\'re ok with this, but you can opt-out if you wish.<a href=\"#\" id=\"cookie_action_close_header\"  class=\"medium cli-plugin-button cli-plugin-main-button\" >Accept</a> <a href=\"http://www.wildbunny.co.uk/blog/privacy-policy/\" id=\"CONSTANT_OPEN_URL\" target=\"_new\"  class=\"cli-plugin-main-link\"  >Read More</a></span></div>';
				var b = '{"animate_speed_hide":"500","animate_speed_show":"500","background":"#fff","border":"#444","border_on":true,"button_1_button_colour":"#000","button_1_button_hover":"#000000","button_1_link_colour":"#fff","button_1_as_button":true,"button_2_button_colour":"#333","button_2_button_hover":"#292929","button_2_link_colour":"#444","button_2_as_button":false,"font_family":"inherit","notify_animate_hide":true,"notify_animate_show":false,"notify_div_id":"#cookie-law-info-bar","notify_position_horizontal":"right","notify_position_vertical":"bottom","showagain_tab":false,"showagain_background":"#fff","showagain_border":"#000","showagain_div_id":"#cookie-law-info-again","showagain_x_position":"50%","text":"#000"}';
				cli_show_cookiebar(a,b);
				
							});
			//]]>
		</script>
		
		 
			<a id="FollowMeTabLeftLg" onClick="showFollowMe()" href="#" style="border-bottom:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/leftlg.gif" border="0" /></a>	

<div id="FollowMeBubbleBG" style="visibility:hidden;"></div>
<div id="FollowMeBubble" style="visibility:hidden;border-bottom:none;">


<div class="top" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_top.gif');width:329px;height:60px;float:left;display:block;border-bottom:none;">
<a id="close" onClick="hideFollowMe()" href="#" style="border-bottom:none"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/close.png" border="0" /> </a>
<!-- <a id="grab" target="_blank" title="grab this" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>--></div>
<div class="mid" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_mid.gif');width:329px;background-repeat:repeat-y;float:left;">
<div id="stretch">
<span><a title="
Twitter" target="_blank" href="http://twitter.com/paul_m_firth" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
twitter.png" border="0" alt="
Twitter" /> 
Twitter</a></span>
<span><a title="
Facebook" target="_blank" href="http://www.facebook.com/WildbunnyLtd" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
facebook.png" border="0" alt="
Facebook" /> 
Facebook</a></span>
<span><a title="
RSS" target="_blank" href="http://wildbunny.co.uk/blog/feed" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
rss.png" border="0" alt="
RSS" /> 
RSS</a></span>
</div></div>
<div class="bottom" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_bottom.gif');height:34px;width:329px;clear:both;float:left;">
<a id="grab" target="_blank" title="grab this" style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>
</div>
<div class="grab" style="width:329px;clear:both;float:left;"><a style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_grab.gif" /></a></div>
</div>







<div id="thsp-sticky-header">
	<div id="thsp-sticky-header-inner">
		<div id="thsp-sticky-header-title">
			<a href="http://www.wildbunny.co.uk/blog" title="Developer knowledge centre">Wildbunny blog</a>
		</div>
		
		<ul id="thsp-sticky-header-menu" class="menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul>	</div><!-- #thsp-sticky-header-inner -->
</div><!-- #thsp-sticky-header --><script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_js_w_globals=1&#038;qcABC=1&#038;ver=140105-140105-2848662513'></script>

			<!-- SwfObj: Register SWFs on this page. -->
			<script type="text/javascript">
					swfobject.registerObject("swfobj_0", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_1", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
			</script>
</body>
</html>

