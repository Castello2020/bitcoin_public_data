http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/
HTTP/1.0 200 OK
Date: Tue, 22 Jul 2014 07:20:17 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.3.3
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Pragma: no-cache
Set-Cookie: PHPSESSID=k1jame429rbig7nsim5ragfjq1; path=/
X-Pingback: http://www.wildbunny.co.uk/blog/xmlrpc.php
Link: <http://www.wildbunny.co.uk/blog/?p=457>; rel=shortlink
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 44119
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Collision detection for dummies | Wildbunny blog</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.wildbunny.co.uk/blog/wp-content/themes/twentyten/style.css?v=0" />
<link rel="pingback" href="http://www.wildbunny.co.uk/blog/xmlrpc.php" />

<!-- BEGIN Metadata added by Add-Meta-Tags WordPress plugin
Get the plugin at: http://www.g-loaded.eu/2006/01/05/add-meta-tags-wordpress-plugin/ -->
<meta name="description" content="Hello and welcome back to my blog! This article is a kind of companion article to Physics engines for dummies and talks about the act of actually detecting a collision between two shapes. This article assumes the reader has a basic grasp of maths and geometry." />
<meta name="keywords" content="as3, collision detection, geometry, physics, technical, bounding box, collision detection, conservative advancement, continuous, discrete, physics, simulation" />
<meta name="blogcatalog" content="9BC10671562" />
<div id="ScribCode634274886"></div>
<!-- END Metadata added by Add-Meta-Tags WordPress plugin -->

<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Feed" href="http://www.wildbunny.co.uk/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Comments Feed" href="http://www.wildbunny.co.uk/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Collision detection for dummies Comments Feed" href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/feed/" />
<link rel='stylesheet' id='bm-author-donations-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/bitmate-author-donations/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cntctfrm_stylesheet-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/contact-form-plugin/css/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-table-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-tables.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='oikCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/oik.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='bwlinkCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/bwlink.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp125style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp125/wp125.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='thsp-sticky-header-plugin-styles-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/css/public.css?ver=1.0.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='featured-post-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/featured-post.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='ws-plugin--s2member-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_css=1&#038;qcABC=1&#038;ver=140105-140105-2848662513' type='text/css' media='all' />
<link rel='stylesheet' id='mr_social_sharing-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/style.css?ver=3.8.2' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/swfobject.js?ver=2.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/comment-reply.min.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/jquery.cookie.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/cookielawinfo.js?ver=3.8.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var StickyHeaderParams = {"show_at":"200","hide_if_narrower":"600"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/js/public.js?ver=1.0.0'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/script.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/googleplus.js.php?lang=en_US&#038;ver=3.8.2'></script>
<script type='text/javascript' src='http://apis.google.com/js/plusone.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://connect.facebook.net/en_US/all.js?ver=3.8.2#xfbml=1'></script>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildbunny.co.uk/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildbunny.co.uk/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Blog micro-transactions &#8211; a viable business model?' href='http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/' />
<link rel='next' title='How to make Angry Birds &#8211; part 1' href='http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/' />
<meta name="generator" content="WordPress 3.8.2" />
<link rel='canonical' href='http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comments' />
<link rel='shortlink' href='http://www.wildbunny.co.uk/blog/?p=457' />
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/js/bubble.js"></script>
<link rel="stylesheet" type="text/css" href="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/css/style.css" />
<style type="text/css">
<!-- Silverlight WordPress Plugin -->
#silverlightControlHost{height:100%;}
</style>
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS BEGIN -->
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/js/wpsfv2-js.php"></script> 
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS END -->

		<style type="text/css">
			#thsp-sticky-header {
				background-color: #181818;
			}
			#thsp-sticky-header,
			#thsp-sticky-header a {
				color: #f9f9f9 !important;
			}
											</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #EAEAEA; }
</style>
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">window.google_analytics_uacct = "ca-pub-4897461488762721";</script>
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-16999711-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="single single-post postid-457 single-format-standard custom-background">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">Wildbunny blog</a>
					</span>
				</div>
				<div id="site-description">Developer knowledge centre</div>

										<img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/02/bunnyWP1.gif" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-flowhub-header" class="menu"><li id="menu-item-272" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li id="menu-item-1302" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li id="menu-item-319" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li id="menu-item-2072" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li id="menu-item-446" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li id="menu-item-466" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li id="menu-item-1183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li id="menu-item-1694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">


				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/" rel="prev"><span class="meta-nav">&larr;</span> Blog micro-transactions &#8211; a viable business model?</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/" rel="next">How to make Angry Birds &#8211; part 1 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-457" class="post-457 post type-post status-publish format-standard hentry category-as3 category-collision-detection-platform-game category-geometry category-physics-2 category-technical tag-bounding-box tag-collision-detection tag-conservative-advancement tag-continuous tag-discrete tag-physics tag-simulation">
					<h1 class="entry-title">Collision detection for dummies</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" title="1:21 pm" rel="bookmark"><span class="entry-date">April 20, 2011</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://www.wildbunny.co.uk/blog/author/paulfirth/" title="View all posts by Paul Firth">Paul Firth</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<img width="150" height="98" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png" class="attachment-single-post-thumbnail wp-post-image" alt="Figure 6" />						
				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/";
							  reddit_title = "Collision detection for dummies";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" data-count="horizontal" data-text="Collision detection for dummies">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F20%2Fcollision-detection-for-dummies%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F20%2Fcollision-detection-for-dummies%2F&amp;title=Collision+detection+for+dummies" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><p>Hello and welcome back to my blog!</p>
<p>This article is a kind of companion article to <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/">Physics engines for dummies</a> and talks about the act of actually detecting a collision between two shapes.</p>
<p>This article assumes the reader has a basic grasp of maths and geometry.</p>
<p><strong>Definitions</strong></p>
<p>I will define�<a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/matrices/">matrices </a>in bold uppercase,�<a href="http://www.wildbunny.co.uk/blog/vector">vectors </a>in uppercase and scalars in lowercase. The�<a href="http://www.wildbunny.co.uk/blog/vector#Dot">dot product </a>will be shown as . and�<a href="http://www.wildbunny.co.uk/blog/vector#Cross">cross product </a>as x.</p>
<p>||A|| means the�<a href="http://www.wildbunny.co.uk/blog/vector#Magnitude">magnitude </a>of A. </p>
<p>|A| means the absolute value of A.</p>
<p>When I want to express individual components of a vector, I will write A_x to mean the x component of A.</p>
<p>I will use * to denote multiplication, but also note that�sV might be used to show the scalar s multiplied by the vector V.</p>
<h2>Collision Detection</h2>
<p>Briefly, collision detection is the process of detecting when two shapes are about to collide or have already collided. There is a distinction there because there are chiefly two different types of collision detection methods:</p>
<p><strong>Discrete</strong></p>
<p>This type will only tell you whether two shapes are intersecting at the current time.</p>
<div id="attachment_458" style="width: 211px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure11.png"><img class="size-full wp-image-458" title="figure1" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure11.png" alt="" width="201" height="127" /></a><p class="wp-caption-text">Frame 1</p></div>
<div id="attachment_459" style="width: 183px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure21.png"><img class="size-full wp-image-459" title="figure2" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure21.png" alt="" width="173" height="127" /></a><p class="wp-caption-text">Frame 2</p></div>
<p>At frame 1, the objects are not colliding, but by frame 2 they are.</p>
<p><strong>Continuous</strong></p>
<p>This type tries to predict the exact point and time of collision between the two objects.</p>
<div id="attachment_460" style="width: 211px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure31.png"><img class="size-full wp-image-460" title="figure3" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure31.png" alt="" width="201" height="127" /></a><p class="wp-caption-text">Frame 1</p></div>
<div id="attachment_461" style="width: 193px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure4.png"><img class="size-full wp-image-461" title="figure4" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure4.png" alt="" width="183" height="127" /></a><p class="wp-caption-text">Frame 2</p></div>
<p>At frame 1, the objects are <em>predicted</em> to collide before frame 2 arrives. The system estimates the point and time of the collision so that when frame 2 does arrive the objects are not intersecting.</p>
<p>Obviously the continuous method seems the better choice, since we don&#8217;t want our objects to be intersecting on screen &#8211; however before we can understand the way this method works, we must first explore the other method.</p>
<h2>Discrete collision detection</h2>
<p><strong>Penetration distance</strong></p>
<p>In discrete collision detection, it&#8217;s very important to know exactly how much one shape has penetrated into another and what the shortest direction to push the two apart again is.</p>
<p>This is important because we will need to be able to <em>resolve </em>the collision and push the two shapes apart so they are just touching.</p>
<div id="attachment_467" style="width: 252px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure51.png"><img class="size-full wp-image-467" title="figure5" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure51.png" alt="" width="242" height="193" /></a><p class="wp-caption-text">Figrue 1</p></div>
<p>In Figure 1, the penetration distance is <em>d</em> and the direction to push is <em>n</em>.</p>
<p>Let&#8217;s start having a look at some common collision detection cases.</p>
<p><strong>Circle vs circle</strong></p>
<p>Two circles <em>A </em>and <em>B </em>are defined as having a centre and a radius. They collide when the distance between the two centres is less than the sum of their radii:</p>
<p>||A-B|| &lt; (r1+r2)</p>
<p>Of course you can speed this up by not having the compute the magnitude�||A-B|| which involves a sqrt by squaring both sides of the equation:</p>
<p>||A-B||� &lt; (r1+r2)�</p>
<p>So to calculate a measure of the penetration we can say:</p>
<p>p = ||A-B|| &#8211; (r1+r2)</p>
<p>You�can�see that this is a simple rearrangement of the collision test inequality</p>
<p>||A-B|| &lt; (r1+r2)</p>
<p>=</p>
<p>||A-B|| &#8211; (r1+r2) &lt; 0</p>
<p>All I have done is to subtract (r1+r2) from both sides of the inequality which is handily also the measure of penetration between the two circles. So, when</p>
<p>p &lt; 0</p>
<p>The two spheres are penetrating by distance p. We would also like the�<em>penetration vector </em>so that we can correct the penetration once we discover it. This is the vector that moves both circles to the point where they just touch, correcting the penetration. Importantly it is not only just a vector that does this, it is the�<em>only </em>vector which corrects the penetration by moving the minimum amount. This is important because we only want to correct the error, not introduce more by moving too much when we correct, or too little.</p>
<p>N�= (A-B) / ||A-B||</p>
<p>P = N*p</p>
<p>Here we have calculated the�<a href="http://www.wildbunny.co.uk/blog/vector#Unit">normalised </a>vector N between the two centres and the penetration vector P by multiplying our unit direction by the penetration distance.</p>
<p>At this point you may have noticed that I haven&#8217;t tried to optimise this part of the calculation by using squared lengths etc. This is generally ok because we can still do the initial intersection test using�squared maths and then once we have detected an intersection, we can go for the heavier maths since it will happen far less often.</p>
<p>You may also have noticed that during our calculations we have calculated the collision�<a href="http://www.wildbunny.co.uk/blog/vector#Unit">normal </a>N.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_0" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/CircleCircle.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/CircleCircle.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p><strong>AABB vs AABB</strong></p>
<p>Similarly as useful as the mighty circle, the Axis Aligned Bounding Box, or AABB is defined by its corner points and represents a un-rotatable rectangle in 2d. These are generally used to bound more complex objects so that a simple overlap check can be done to determine broad overlap, and then a more expensive fine grained check can be performed later.</p>
<div id="attachment_477" style="width: 200px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure6.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure6.png" alt="" title="figure6" width="190" height="152" class="size-full wp-image-477" /></a><p class="wp-caption-text">Figure 2</p></div>
<p><em>Figure 2</em> shows complex object <em>A </em>bounded by its AABB.</p>
<p>For two AABBs <em>A </em>and <em>B </em>defined by their centres and half-extents (half width, half height), overlap can be determined quite simply:</p>
<p>D = |centreB-centreA| &#8211; (halfExtentsA+halfExtentsB)</p>
<p>binary overlap = D_x < 0 &#038;&#038; D_y < 0;</p>
<p>In the example below the half extents are shown in red.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_1" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/AABBs.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/AABBs.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Fun AABB facts:</p>
<p>To build an AABB from a complex object, just loop through all the vertices keeping a track of the minimum and maximum coordinate in each axis:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
<span style="color: #808080; font-style: italic;">/// </span>
<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;	</span>
<span style="color: #0066CC;">static</span> <span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> BuildAABB<span style="color: #66cc66;">&#40;</span>points:Vector.<span style="color: #66cc66;">&lt;</span>Vector2<span style="color: #66cc66;">&gt;</span><span style="color: #66cc66;">&#41;</span>:AABB
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #000000; font-weight: bold;">var</span> <span style="color: #0066CC;">min</span>:Vector2 = <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">Number</span>.<span style="color: #0066CC;">MAX_VALUE</span>, <span style="color: #0066CC;">Number</span>.<span style="color: #0066CC;">MAX_VALUE</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #000000; font-weight: bold;">var</span> <span style="color: #0066CC;">max</span>:Vector2 = <span style="color: #0066CC;">min</span>.<span style="color: #006600;">m_Neg</span>;
&nbsp;
	<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span><span style="color: #66cc66;">&#40;</span><span style="color: #000000; font-weight: bold;">var</span> p:Vector2 <span style="color: #b1b100;">in</span> points<span style="color: #66cc66;">&#41;</span> 
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">min</span> = p.<span style="color: #0066CC;">Min</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#41;</span>;
		<span style="color: #0066CC;">max</span> = p.<span style="color: #0066CC;">Max</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">max</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #b1b100;">return</span> <span style="color: #000000; font-weight: bold;">new</span>	AABB
			<span style="color: #66cc66;">&#40;</span>
				<span style="color: #0066CC;">min</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">max</span><span style="color: #66cc66;">&#41;</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0.5</span><span style="color: #66cc66;">&#41;</span>, 
				<span style="color: #0066CC;">max</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#41;</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0.5</span><span style="color: #66cc66;">&#41;</span>
			<span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>To build an AABB from two separate AABBs, do the same thing, but form the min and max points of each AABB and use them as the vertices:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">static</span> <span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> CombineAABBs<span style="color: #66cc66;">&#40;</span>a:AABB, b:AABB<span style="color: #66cc66;">&#41;</span>:AABB
<span style="color: #66cc66;">&#123;</span>
	const minA:Vector2 = a.<span style="color: #006600;">m_centre</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span> a.<span style="color: #006600;">m_halfExtents</span> <span style="color: #66cc66;">&#41;</span>;
	const maxA:Vector2 = a.<span style="color: #006600;">m_centre</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> a.<span style="color: #006600;">m_halfExtents</span> <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	const minB:Vector2 = b.<span style="color: #006600;">m_centre</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span> b.<span style="color: #006600;">m_halfExtents</span> <span style="color: #66cc66;">&#41;</span>;
	const maxB:Vector2 = b.<span style="color: #006600;">m_centre</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> b.<span style="color: #006600;">m_halfExtents</span> <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	const <span style="color: #0066CC;">min</span>:Vector2 = minA.<span style="color: #0066CC;">Min</span><span style="color: #66cc66;">&#40;</span>minB<span style="color: #66cc66;">&#41;</span>;
	const <span style="color: #0066CC;">max</span>:Vector2 = maxA.<span style="color: #0066CC;">Max</span><span style="color: #66cc66;">&#40;</span>maxB<span style="color: #66cc66;">&#41;</span>;
&nbsp;
	const centre:Vector2 = <span style="color: #0066CC;">min</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">max</span><span style="color: #66cc66;">&#41;</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0.5</span><span style="color: #66cc66;">&#41;</span>;
	const halfExtents:Vector2 = <span style="color: #0066CC;">max</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#41;</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">0.5</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #b1b100;">return</span> <span style="color: #000000; font-weight: bold;">new</span> AABB<span style="color: #66cc66;">&#40;</span> centre, halfExtents <span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p><strong>Circle vs AABB</strong></p>
<p>Not terribly useful in the real world, but very useful as tool for understanding, the circle vs AABB test is also reasonably simple &#8211; the trick is to convert this problem into the simpler problem of circle vs circle. For an AABB A and a circle B:</p>
<div id="attachment_480" style="width: 207px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure7.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure7.png" alt="" title="figure7" width="197" height="203" class="size-full wp-image-480" /></a><p class="wp-caption-text">Figure 3</p></div>
<p>The first step is to get the centre of the circle and project it on to the boundary of the AABB. Fortunately this is as easy as forming the vector <em>V </em>between AABB and circle and simply clamping it against the half extents of the AABB. This yields point B<sub>c</sub>. In <em>Figure 2</em>, the clamped x, y region of V is shown in red.</p>
<!-- Easy AdSense V2.79 -->
<!-- Post[count: 1] -->
<div class="ezAdsense adsense adsense-midtext" style="text-align:center;margin:12px; "><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- medi -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-4897461488762721"
     data-ad-slot="9797433564"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div><p>B<sub>c</sub> is actually the closest point on the AABB to the circle, which means the distance from the AABB to the circle is simply the length of the vector from B<sub>c</sub> to B minus the radius of the circle.</p>
<p>D = B &#8211; B<sub>c</sub></p>
<p>distance = ||D|| &#8211; radius</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_2" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/CircleAABB.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/CircleAABB.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p><strong>Circle vs OBB</strong></p>
<p>Circle vs Oriented Bounding Box or OBB is much more useful in the real world, but more tricky because the box now has an orientation to worry about. But, once again we can convert this problem into a simpler one, that of circle vs AABB by simply transforming the circle <a href="http://www.wildbunny.co.uk/blog/matrices#TransformPointInto">into the space of the</a> OBB first.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> OBB
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #808080; font-style: italic;">/// &lt;summary&gt;</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">/// &lt;/summary&gt;</span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> Collide<span style="color: #66cc66;">&#40;</span> vis:Visual <span style="color: #66cc66;">&#41;</span>:Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> vis is Circle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			const c:Circle = Circle<span style="color: #66cc66;">&#40;</span> vis <span style="color: #66cc66;">&#41;</span>;
&nbsp;
			<span style="color: #808080; font-style: italic;">// transform circle into OBB space</span>
			const v:Vector2 = m_matrix.<span style="color: #006600;">TransformIntoSpaceOf</span><span style="color: #66cc66;">&#40;</span> c.<span style="color: #006600;">m_Pos</span> <span style="color: #66cc66;">&#41;</span>;
			const clamped:Vector2 = v.<span style="color: #006600;">Clamp</span><span style="color: #66cc66;">&#40;</span> m_halfExtents.<span style="color: #006600;">m_Neg</span>, m_halfExtents <span style="color: #66cc66;">&#41;</span>;
&nbsp;
			<span style="color: #808080; font-style: italic;">// form point on OBB</span>
			const point:Vector2 = m_matrix.<span style="color: #006600;">TransformBy</span><span style="color: #66cc66;">&#40;</span> clamped <span style="color: #66cc66;">&#41;</span>;
&nbsp;
			<span style="color: #808080; font-style: italic;">// get distance to circle</span>
			const d:Vector2 = c.<span style="color: #006600;">m_Pos</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span> point <span style="color: #66cc66;">&#41;</span>;
			const dist:<span style="color: #0066CC;">Number</span> = d.<span style="color: #006600;">m_Len</span> - c.<span style="color: #006600;">m_Radius</span>;
&nbsp;
			<span style="color: #b1b100;">return</span> <span style="color: #000000; font-weight: bold;">new</span> Contact<span style="color: #66cc66;">&#40;</span> d.<span style="color: #006600;">m_Unit</span>, dist, point <span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
		<span style="color: #b1b100;">else</span> 
		<span style="color: #66cc66;">&#123;</span>
			<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> NotImplementedException<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>That&#8217;s the code snippet.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_3" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/CircleOBB.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/CircleOBB.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p><strong>OBB vs OBB</strong></p>
<p>Now we&#8217;re starting to get into the interesting stuff. Oriented Bounding Box vs Oriented Bounding Box is actually pretty much the same complexity as convex polygon vs convex polygon. A lot of people advocate using the <a href="http://en.wikipedia.org/wiki/Separating_axis_theorem">Separating Axis Test</a> in order to solve this problem, but personally I&#8217;ve never been able to visualise it and generally, if I can&#8217;t visualise something, I&#8217;m not going to use it as a solution.</p>
<p>A concept I have been able to visualise and the one I&#8217;m going to demonstrate here is that of the <a href="http://en.wikipedia.org/wiki/Minkowski_addition">Minkowski Difference</a>. Once again the idea behind using this technique is that it enables us to covert this difficult problem into a more simple one.</p>
<p>The Minkowski Difference consists of the convex hull of every point on the boundary of one shape <em>subtracted</em> from every point on the boundary of the other shape. Its easier to imagine this as shrinking one of the shapes down until it becomes a point, and expanding the other shape by the shape of the first. <em>Configuration space</em> is the space that the Minkowski difference resides within &#8211; the set of vector differences of two objects.</p>
<div id="attachment_485" style="width: 179px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure8.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure8.png" alt="" title="figure8" width="169" height="222" class="size-full wp-image-485" /></a><p class="wp-caption-text">Figure 4</p></div>
<p><em>Figure 4</em> shows objects <em>A </em>and <em>B</em>, and then also shows object <em>B </em>shrunk down to a point, while <em>A </em>grows by the shape of <em>B</em>. Of course, because its a subtraction of one from the other, the position of the resulting shape changes, and it&#8217;s the relationship with the origin (0,0) which then becomes very interesting. </p>
<p>It turns out that when the Minkowski Difference (written <em>MD </em>from now on) of two shapes contains the origin, the two shapes are intersecting. Furthermore, the distance from the origin to the MD is actually the distance between the two shapes, and the vector between the two gives you the <em>Minimum Translational Distance</em> which is the globally shortest distance you can move either shape from penetration until they both just touch.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_4" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/OBBs.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/OBBs.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>In the above demo, you can manipulate the OBBs <em>A </em>and <em>B </em>by moving them, or you can drag the handles to rotate them. Note the MD <em>B-A</em> shown and how it reacts as the objects are moved. The origin is shown as the black dot in the centre &#8211; note that when <em>A </em>and <em>B </em>intersect, the MD contains the origin. The <em>Minimum Translational Distance</em> between the two shapes is shown as the blue line.</p>
<p>The observant among you will also notice the coloured edges in the MD &#8211; these represent the shape they originated from; red edges come from the red shape <em>A </em>and green from <em>B</em>.</p>
<p>So, how do you build this MD for two OBBs, then? Each edge in the MD is made up of a vertex from one shape subtracted from an edge from the other. In order to know which vertices we subtract from which edges, we need to define the concept of a <em>supporting vertex</em>.</p>
<p>A <em>supporting vertex</em> is simply a vertex which is &#8220;most in the direction of&#8221; a given direction vector. Mathematically, this can be found as the vertex which has the greatest dot product with a given direction vector.</p>
<p>Once we have this we can simply loop through all the edges of <em>A</em>, finding the supporting vertex in B for each edge by using reversed edge normal. The edge normal is reversed because we want to find the vertex &#8220;most opposite&#8221; this edge. As we do so, we project the origin onto each edge, and keep track of the distance &#8211; we&#8217;re looking for the least negative distance, which will be the <em>Minimum Translational Distance</em>.</p>
<p>Once we&#8217;ve gone through edges of <em>A</em>, we do the same thing with <em>B</em>, this time using supporting vertices from A, again tracking the least negative distance. If we&#8217;re only concerned about penetration we can terminate our search as soon as we find a positive distance &#8211; since this represents a separating axis.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #000000; font-weight: bold;">var</span> p0:Vector2 = <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
<span style="color: #000000; font-weight: bold;">var</span> p1:Vector2 = <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
<span style="color: #000000; font-weight: bold;">var</span> leastPenetratingDist:<span style="color: #0066CC;">Number</span> = -<span style="color: #0066CC;">Number</span>.<span style="color: #0066CC;">MAX_VALUE</span>;
<span style="color: #000000; font-weight: bold;">var</span> leastPositiveDist:<span style="color: #0066CC;">Number</span> = <span style="color: #0066CC;">Number</span>.<span style="color: #0066CC;">MAX_VALUE</span>;
&nbsp;
<span style="color: #808080; font-style: italic;">// face of A, vertices of B</span>
<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span> = <span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>A.<span style="color: #006600;">m_numPoints</span>; i++ <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #808080; font-style: italic;">// get world space normal</span>
	<span style="color: #000000; font-weight: bold;">var</span> wsN:Vector2 = A.<span style="color: #006600;">GetWorldSpaceNormal</span><span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// world space edge</span>
	<span style="color: #000000; font-weight: bold;">var</span> wsV0:Vector2 = A.<span style="color: #006600;">GetWorldSpacePoint</span><span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #000000; font-weight: bold;">var</span> wsV1:Vector2 = A.<span style="color: #006600;">GetWorldSpacePoint</span><span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#40;</span> i+<span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">%</span>A.<span style="color: #006600;">m_numPoints</span> <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// get supporting vertices of B, most opposite face normal</span>
	<span style="color: #000000; font-weight: bold;">var</span> s:Vector.<span style="color: #66cc66;">&lt;</span>SupportVertex<span style="color: #66cc66;">&gt;</span> = B.<span style="color: #006600;">GetSupportVertices</span><span style="color: #66cc66;">&#40;</span>wsN.<span style="color: #006600;">m_Neg</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span><span style="color: #000000; font-weight: bold;">var</span> j:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; j<span style="color: #66cc66;">&lt;</span>s.<span style="color: #0066CC;">length</span>; j++<span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #808080; font-style: italic;">// form point on plane of minkowski face</span>
		<span style="color: #000000; font-weight: bold;">var</span> mfp0:Vector2 = s<span style="color: #66cc66;">&#91;</span>j<span style="color: #66cc66;">&#93;</span>.<span style="color: #006600;">m_v</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>wsV0<span style="color: #66cc66;">&#41;</span>;
		<span style="color: #000000; font-weight: bold;">var</span> mfp1:Vector2 = s<span style="color: #66cc66;">&#91;</span>j<span style="color: #66cc66;">&#93;</span>.<span style="color: #006600;">m_v</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>wsV1<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #000000; font-weight: bold;">var</span> faceDist:<span style="color: #0066CC;">Number</span> = mfp0.<span style="color: #006600;">Dot</span><span style="color: #66cc66;">&#40;</span> wsN <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// project onto minkowski edge</span>
		<span style="color: #000000; font-weight: bold;">var</span> p:Vector2 = ProjectPointOntoEdge<span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>, mfp0, mfp1 <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// get distance</span>
		<span style="color: #000000; font-weight: bold;">var</span> dist:<span style="color: #0066CC;">Number</span> = p.<span style="color: #006600;">m_Len</span><span style="color: #66cc66;">*</span>Scalar.<span style="color: #006600;">Sign</span><span style="color: #66cc66;">&#40;</span>faceDist<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// track negative</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> dist<span style="color: #66cc66;">&gt;</span>leastPenetratingDist <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			p0 = p;
			leastPenetratingDist = dist;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">// track positive</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> dist <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&amp;&amp;</span> dist<span style="color: #66cc66;">&lt;</span>leastPositiveDist <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			p1 = p;
			leastPositiveDist = dist;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">// face of B, vertices of A</span>
<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> i = <span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>B.<span style="color: #006600;">m_numPoints</span>; i++ <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #808080; font-style: italic;">// get world space normal</span>
	wsN = B.<span style="color: #006600;">GetWorldSpaceNormal</span><span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// world space edge</span>
	wsV0 = B.<span style="color: #006600;">GetWorldSpacePoint</span><span style="color: #66cc66;">&#40;</span> i <span style="color: #66cc66;">&#41;</span>;
	wsV1 = B.<span style="color: #006600;">GetWorldSpacePoint</span><span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#40;</span> i+<span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#41;</span><span style="color: #66cc66;">%</span>B.<span style="color: #006600;">m_numPoints</span> <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// get supporting vertices of A, most opposite face normal</span>
	s = A.<span style="color: #006600;">GetSupportVertices</span><span style="color: #66cc66;">&#40;</span>wsN.<span style="color: #006600;">m_Neg</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span>j=<span style="color: #cc66cc;">0</span>; j<span style="color: #66cc66;">&lt;</span>s.<span style="color: #0066CC;">length</span>; j++<span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #808080; font-style: italic;">// form point on plane of minkowski face</span>
		mfp0 = wsV0.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>s<span style="color: #66cc66;">&#91;</span>j<span style="color: #66cc66;">&#93;</span>.<span style="color: #006600;">m_v</span><span style="color: #66cc66;">&#41;</span>;
		mfp1 = wsV1.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>s<span style="color: #66cc66;">&#91;</span>j<span style="color: #66cc66;">&#93;</span>.<span style="color: #006600;">m_v</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
		faceDist = -mfp0.<span style="color: #006600;">Dot</span><span style="color: #66cc66;">&#40;</span> wsN <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// project onto minkowski edge</span>
		p = ProjectPointOntoEdge<span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>, mfp0, mfp1 <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// get distance</span>
		dist = p.<span style="color: #006600;">m_Len</span><span style="color: #66cc66;">*</span>Scalar.<span style="color: #006600;">Sign</span><span style="color: #66cc66;">&#40;</span>faceDist<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// track negative</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> dist<span style="color: #66cc66;">&gt;</span>leastPenetratingDist <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			p0 = p;
			leastPenetratingDist = dist;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">// track positive</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> dist <span style="color: #66cc66;">&gt;</span> <span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&amp;&amp;</span> dist<span style="color: #66cc66;">&lt;</span>leastPositiveDist <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			p1 = p;
			leastPositiveDist = dist;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> leastPenetratingDist<span style="color: #66cc66;">&lt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #808080; font-style: italic;">// penetration by leastPenetratingDist</span>
<span style="color: #66cc66;">&#125;</span>
<span style="color: #b1b100;">else</span> 
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #808080; font-style: italic;">// separated by leastPositiveDist</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>The above snippet also tracks positive distance so can be simplified if you only want to track penetration. One caveat to watch out for is the case where the two shapes are exactly aligned &#8211; as they are in the demo above. In this case, you have to deal with the possibility of there being two supporting vertices for an edge instead of one, and it&#8217;s important to re-project onto the edge from the origin to make sure you don&#8217;t accidentally pick the wrong edge-vertex pair. The above code deals with this case.</p>
<p><strong>Poly vs Poly</strong></p>
<p>The really good thing about this technique is that it applies directly to arbitrary convex polygons as well.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_5" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/Polys.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/Polys.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Again, manipulate the live demo by dragging the shapes and their handles&#8230;</p>
<p>So, we can now calculate the penetration distance for two arbitrary convex polygons.</p>
<h2>Continuous</h2>
<p>So, finally we get around to talking about continuous collision detection. Now we start to be able to reap the rewards of all this <em>Minkowski Difference</em> nonsense <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p><strong>Continuous Linear</strong></p>
<p>It turns out that if all we want to do is a linear sweep of our shapes to find the first time of collision ignoring rotation, the only thing we have to do is to ray-cast from the origin towards the MD using the relative velocity of the two objects as the ray segment end!</p>
<div id="attachment_491" style="width: 179px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure9.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure9.png" alt="" title="figure9" width="169" height="225" class="size-full wp-image-491" /></a><p class="wp-caption-text">Figure 5</p></div>
<p>In <em>Figure 5</em>, the first time of collision of <em>B </em>with <em>A </em>can be found by shooting a ray from the origin towards the MD of <em>B-A</em>.</p>
<p>For polygons this is the same amount of work as calculating the penetration distance &#8211; you fire the ray at the edges of the MD, which you build as usual. You can even avoid testing edges if the ray is back-facing with respect to the edge normal.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_6" width="600" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/PolysLinear.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/PolysLinear.swf" width="600" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>In the above demo, A is being swept against B along A&#8217;s velocity; the pink A&#8217; shows where A hits B. The MD shows what this looks like in Configuration Space &#8211; don&#8217;t forget to rotate/move A and B to see what the result looks like. Notice how the ray at the origin fired against the MD corresponds exactly to when A hits B?</p>
<p>One caveat is that A must not intersect B to start with, or the test will fail. <a href="http://www.dtecta.com/papers/unpublished04raycast.pdf">Gino Van Den Bergen has generalised this approach to work with the GJK algorithm</a>, this is well worth taking a look at if you want to cast against non-polygonal shapes, like circles or capsules.</p>
<p>The basic idea is this:</p>
<div id="attachment_503" style="width: 342px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure12.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure12.png" alt="" title="figure12" width="332" height="161" class="size-full wp-image-503" /></a><p class="wp-caption-text">Figure 6</p></div>
<p>You provide a function which can return the closest distance between two shapes and the normal at that point. These two return values are also the distance from the MD to the origin and the direction that distance is in. In this example, the function used is returning distance and normal between two circles &#8211; shown in the diagram is the MD of two circles.</p>
<p>In <em>Figure 6</em>, two iterations of Gino Van Den Bergen&#8217;s algorithm are shown, I<sub>1</sub> and I<sub>2</sub>. The black point represents the current estimate, and starts at the origin in I<sub>1</sub> and moves along the velocity shown as the arrow. The green point represents part of the information returned by the function &#8211; the closest point on the MD, which is at the distance returned, also the normal at that point has been found as well (again, returned by the function).</p>
<p>The algorithm intersects the velocity ray against the returned normal and produces the red point shown in the diagram. Then it moves on to the next iteration. The red point becomes the new estimate and the function is queried again for the distance to the MD and the normal. The information returned results in the new red intersection point in I<sub>2</sub> and at this point the diagram becomes less useful because we&#8217;re so close to the visible tolerance. In practice the algorithm will terminate when the distance returned from the function is less than some predefined tolerance.</p>
<p>I&#8217;m describing this algorithm because it will be useful when we think about intersection including angular velocity.</p>
<p><strong>Continuous Angular/Linear</strong></p>
<p>Things start to get a little more tricky when we want to calculate the exact hit time where there is rotation present. To solve this problem, we must turn to the work of <a href="http://www.kuffner.org/james/software/dynamics/mirtich/mirtichThesis.pdf">Brian Mirtich</a>, <a href="http://www.dtecta.com/papers/unpublished04raycast.pdf">Gino Van Den Bergen</a> and <a href="http://www.continuousphysics.com/BulletContinuousCollisionDetection.pdf">Erwin Coumans</a>. </p>
<p>Brian Mitch&#8217;s thesis presents some of the fundamental building blocks used in solving this problem:</p>
<div id="attachment_495" style="width: 310px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure10.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure10.png" alt="" title="figure10" width="300" height="257" class="size-full wp-image-495" /></a><p class="wp-caption-text">Figure 7</p></div>
<p>In <em>Figure 7</em>, (lifted directly from his thesis) he shows two bodies, with their closest points shown and the two actual contact points <em>x1 </em>and <em>x2 </em>for this collision. Given the fact that these bodies are convex, he shows that the distance between the closest points represents the first possible time of collision between the two shapes under <strong>no rotation</strong>. Further, he shows that, given the point with the largest distance from the centre for each body, it&#8217;s possible to bound the earliest time of collision between two rotating shapes.</p>
<div id="attachment_497" style="width: 310px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png"><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png" alt="" title="figure11" width="300" height="196" class="size-full wp-image-497" /></a><p class="wp-caption-text">Figure 8</p></div>
<p>You can see why by looking at <em>Figure 8</em> &#8211; on the left, the thin rectangle rotates and extreme point p moves to p&#8217; following the rotation. The length of the arc travelled by p can be found by simply using the <a href="http://en.wikipedia.org/wiki/Arc_(geometry)">circular arc length formula</a> from geometry &#8211; L=theta*r as shown on the right in <em>Figure 8</em>. Therefore if we know the maximum distance from the origin of the shape, and we know the angular velocity, we can find an <em>upper bound</em> for the linear component of the angular rotation of a shape, and therefore we can simply add this linear distance value on to the bound that we had for non-rotating shapes.</p>
<p>Erwin Coumans took this idea and using a method similar to the linear cast of Gino Van Den Bergen, produced a new algorithm which determines the time of impact between translating/rotating bodies:</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_7" width="600" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/collisiondummies/PolysAngular.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/collisiondummies/PolysAngular.swf" width="600" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>The live demo above shows A and A&#8217;, the position of A after some linear and angular motion, 90 degrees to be precise. The various iterations of the MD are shown on the right. Don&#8217;t forget to move the shapes around!</p>
<p>The thing to note is that the <strong>shape </strong>of the MD changes under rotation of either body, unlike with linear only motion where it just translates.</p>
<p>Each of the MDs shown represent one iteration of the algorithm. The algorithm itself is exactly the same I described using Figure 6 above, except that there is an extra distance term added which means that instead of the ray intersecting the plane and the estimate getting moved directly there, it only approaches it instead &#8211; taking care not to advance more than the extra distance terms allows each iteration. This way, the correct result is approached each iteration, or the algorithm terminates with a miss.</p>
<p>The actual code behind the algorithm is quite small:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> AngularCast<span style="color: #66cc66;">&#40;</span> B:Polygon, velA:Vector2, velB:Vector2, avA:<span style="color: #0066CC;">Number</span>, avB:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:LinearCastResult
<span style="color: #66cc66;">&#123;</span>
	const A:Polygon = <span style="color: #0066CC;">this</span>;
	const origin:Vector2 = <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #000000; font-weight: bold;">var</span> t:<span style="color: #0066CC;">Number</span> = <span style="color: #cc66cc;">0</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// relative linear velocity</span>
	const ray:Vector2 = velB.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span> velA <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #000000; font-weight: bold;">var</span> mA:Matrix23 = <span style="color: #000000; font-weight: bold;">new</span> Matrix23<span style="color: #66cc66;">&#40;</span> A.<span style="color: #006600;">m_Pos</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> velA.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> t <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>, A.<span style="color: #006600;">m_angle</span>+avA<span style="color: #66cc66;">*</span>t <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #000000; font-weight: bold;">var</span> mB:Matrix23 = <span style="color: #000000; font-weight: bold;">new</span> Matrix23<span style="color: #66cc66;">&#40;</span> B.<span style="color: #006600;">m_Pos</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> velB.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> t <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>, B.<span style="color: #006600;">m_angle</span>+avB<span style="color: #66cc66;">*</span>t <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #000000; font-weight: bold;">var</span> contact:Contact = GetDistance<span style="color: #66cc66;">&#40;</span> B, mA, mB, parent, screenCentre <span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #b1b100;">while</span> <span style="color: #66cc66;">&#40;</span> contact.<span style="color: #006600;">m_dist</span><span style="color: #66cc66;">&gt;</span>kAngularTollerance <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #808080; font-style: italic;">// intersect velocity against normal</span>
		const rayN:<span style="color: #0066CC;">Number</span> = ray.<span style="color: #006600;">Dot</span><span style="color: #66cc66;">&#40;</span> contact.<span style="color: #006600;">m_normal</span> <span style="color: #66cc66;">&#41;</span>; 
		const dRel:<span style="color: #0066CC;">Number</span> = rayN + A.<span style="color: #006600;">m_r</span><span style="color: #66cc66;">*</span><span style="color: #0066CC;">Math</span>.<span style="color: #0066CC;">abs</span><span style="color: #66cc66;">&#40;</span>avA<span style="color: #66cc66;">&#41;</span> + B.<span style="color: #006600;">m_r</span><span style="color: #66cc66;">*</span><span style="color: #0066CC;">Math</span>.<span style="color: #0066CC;">abs</span><span style="color: #66cc66;">&#40;</span>avB<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// compute conservative advancement</span>
		t += contact.<span style="color: #006600;">m_dist</span><span style="color: #66cc66;">/</span>dRel;
&nbsp;
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> t<span style="color: #66cc66;">&lt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">||</span> t<span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">1</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			<span style="color: #808080; font-style: italic;">// never hit</span>
			<span style="color: #b1b100;">return</span> <span style="color: #000000; font-weight: bold;">new</span> LinearCastResult<span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">false</span>, t, <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span> <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
&nbsp;
		<span style="color: #808080; font-style: italic;">// interpolate</span>
		mA = <span style="color: #000000; font-weight: bold;">new</span> Matrix23<span style="color: #66cc66;">&#40;</span> A.<span style="color: #006600;">m_Pos</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> velA.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> t <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>, A.<span style="color: #006600;">m_angle</span>+avA<span style="color: #66cc66;">*</span>t <span style="color: #66cc66;">&#41;</span>;
		mB = <span style="color: #000000; font-weight: bold;">new</span> Matrix23<span style="color: #66cc66;">&#40;</span> B.<span style="color: #006600;">m_Pos</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> velB.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> t <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>, B.<span style="color: #006600;">m_angle</span>+avB<span style="color: #66cc66;">*</span>t <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// get distance again</span>
		contact = GetDistance<span style="color: #66cc66;">&#40;</span> B, mA, mB, parent, screenCentre <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #b1b100;">return</span> <span style="color: #000000; font-weight: bold;">new</span> LinearCastResult<span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">true</span>, t, contact.<span style="color: #006600;">m_normal</span> <span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>As you play around with the demo, you&#8217;ll notice it sometimes takes this algorithm a while to converge &#8211; in production code you would most likely limit the number of allowed iterations. Something like having it terminate if its not making &#8216;enough&#8217; progress in each iteration might be a good idea.</p>
<h2>Conclusion</h2>
<p>In this article, we have explored the various forms of collision detection and the algorithms behind them, from the simplest possible case of discrete circle vs circle to the complex case of continuous translating/rotating polygons. I hope this article has been intelligible and will inspire people to start diving in and exploring these techniques in more detail.</p>
<h2>Source code</h2>
<p>As always, you can buy the source-code accompanying this article if you wish &#8211; it is written in Actionscript 3.0 but the techniques are applicable to all OO languages. All purchases are very much appreciated and ensure that I can afford to make more like this one <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>You get code for every single demo on this page, containing useful functions for computing the distance between arbitrary convex polygons, penetrating or not, and for computing the exact time of contact between rotating/translating polygons and best of all, the licence allows you to use this code for commercial and non-commercial applications alike <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>USD 5.99<br />
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
 <input type="hidden" name="business" value="paypal@wildbunny.co.uk" />
 <input type="hidden" name="cmd" value="_xclick" />
 <!-- Instant Payment Notification & Return Page Details -->
 <input type="hidden" name="notify_url" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_notify=1" />
 <input type="hidden" name="cancel_return" value="http://www.wildbunny.co.uk/blog/" />
 <input type="hidden" name="return" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_return=1" />
 <input type="hidden" name="rm" value="2" />
 <!-- Configures Basic Checkout Fields -->
 <input type="hidden" name="lc" value="" />
 <input type="hidden" name="no_shipping" value="1" />
 <input type="hidden" name="no_note" value="1" />
 <input type="hidden" name="custom" value="www.wildbunny.co.uk" />
 <input type="hidden" name="currency_code" value="USD" />
 <input type="hidden" name="page_style" value="paypal" />
 <input type="hidden" name="charset" value="utf-8" />
 <input type="hidden" name="item_name" value="Source code for collision detection for dummies" />
 <input type="hidden" name="item_number" value="sp:518:72" />
 <input type="hidden" name="amount" value="5.99" />
 <!-- Configures s2Member's Unique Invoice ID/Code  -->
 <input type="hidden" name="invoice" value="53ce10b17f841~54.89.138.238" />
 <!-- Associates Purchase With A User/Member (when/if applicable) -->
 <input type="hidden" name="on0" value="Originating Domain" />
 <input type="hidden" name="os0" value="www.wildbunny.co.uk" />
 <!-- Identifies The Customer's IP Address For Tracking -->
 <input type="hidden" name="on1" value="Customer IP Address" />
 <input type="hidden" name="os1" value="54.89.138.238" />
 <!-- Displays The PayPal Image Button -->
 <input type="image" src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" style="width:auto; height:auto; border:0;" alt="PayPal" />
</form></p>
<p><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Subscribers can access the source here</a></p>
<p>Until next time, have fun!</p>
<p>Cheers, Paul.</p>

				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/";
							  reddit_title = "Collision detection for dummies";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" data-count="horizontal" data-text="Collision detection for dummies">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F20%2Fcollision-detection-for-dummies%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F20%2Fcollision-detection-for-dummies%2F&amp;title=Collision+detection+for+dummies" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><span style="clear:both;display:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/img/wpsf-img.php" width="0" height="0" alt="" style="border-style:none;width:0px;height:0px;display:none;" /></span>											</div><!-- .entry-content -->

					<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=60&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>About Paul Firth</h2>
							A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp							<div id="author-link">
								<a href="http://www.wildbunny.co.uk/blog/author/paulfirth/">
									View all posts by Paul Firth <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

					<div class="entry-utility">
						This entry was posted in <a href="http://www.wildbunny.co.uk/blog/category/as3/" title="View all posts in AS3" rel="category tag">AS3</a>, <a href="http://www.wildbunny.co.uk/blog/category/platform-game/collision-detection-platform-game/" title="View all posts in Collision Detection" rel="category tag">Collision Detection</a>, <a href="http://www.wildbunny.co.uk/blog/category/geometry/" title="View all posts in Geometry" rel="category tag">Geometry</a>, <a href="http://www.wildbunny.co.uk/blog/category/physics-2/" title="View all posts in Physics" rel="category tag">Physics</a>, <a href="http://www.wildbunny.co.uk/blog/category/technical/" title="View all posts in Technical" rel="category tag">Technical</a> and tagged <a href="http://www.wildbunny.co.uk/blog/tag/bounding-box/" rel="tag">bounding box</a>, <a href="http://www.wildbunny.co.uk/blog/tag/collision-detection/" rel="tag">collision detection</a>, <a href="http://www.wildbunny.co.uk/blog/tag/conservative-advancement/" rel="tag">conservative advancement</a>, <a href="http://www.wildbunny.co.uk/blog/tag/continuous/" rel="tag">continuous</a>, <a href="http://www.wildbunny.co.uk/blog/tag/discrete/" rel="tag">discrete</a>, <a href="http://www.wildbunny.co.uk/blog/tag/physics/" rel="tag">physics</a>, <a href="http://www.wildbunny.co.uk/blog/tag/simulation/" rel="tag">simulation</a>. Bookmark the <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" title="Permalink to Collision detection for dummies" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/" rel="prev"><span class="meta-nav">&larr;</span> Blog micro-transactions &#8211; a viable business model?</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/05/12/how-to-make-angry-birds-part-1/" rel="next">How to make Angry Birds &#8211; part 1 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">134 Responses to <em>Collision detection for dummies</em></h3>

			<div class="navigation">
				<div class="nav-previous"></div>
				<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/#comments" >Newer Comments <span class="meta-nav">&rarr;</span></a></div>
			</div> <!-- .navigation -->

			<ol class="commentlist">
					<li class="post pingback">
		<p>Pingback: <a href='http://www.netcrema.net/?p=81258' rel='external nofollow' class='url'>Collision detection for dummies | Paul&#8217;s blog@Wildbunny &laquo; Netcrema &#8211; creme de la social news via digg + delicious + stumpleupon + reddit</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-403">
		<div id="comment-403">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/5fc16c158c45cb9d1a7d9114a399b195?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.stephenspanner.com/' rel='external nofollow' class='url'>Stephen Spanner</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-403">
			April 20, 2011 at 10:18 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This is good stuff, im working on a twisted Pong game right now and can use a couple things learned from this thread as I won&#8217;t be using ordinary shapes.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=403#respond' onclick='return addComment.moveForm("comment-403", "403", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://robertmcghee.co.uk/2011/april-21st/' rel='external nofollow' class='url'>Robert McGhee &raquo; April 21st</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-416">
		<div id="comment-416">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d4cbb7318d664ea6629f6fbee9b5c452?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.stonegatesoftware.com' rel='external nofollow' class='url'>Patrick Dewane</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-416">
			April 21, 2011 at 1:43 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Interesting post, although I will have to read a bit more about the Minkowski Difference. The timing was interesting as well as I had just begun my own attempt at collision detection without any previous knowledge of the subject. While my implementation *works*, its far from perfect and this post will really help.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=416#respond' onclick='return addComment.moveForm("comment-416", "416", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-418">
		<div id="comment-418">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-418">
			April 21, 2011 at 2:18 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Excellent, glad it helped you, or at least inspired you to find out more <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=418#respond' onclick='return addComment.moveForm("comment-418", "418", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-427">
		<div id="comment-427">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7c151946e854d3269809d42f463dba08?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">nCrazed</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-427">
			April 22, 2011 at 1:06 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Article body seems to be gone o_O</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=427#respond' onclick='return addComment.moveForm("comment-427", "427", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-442">
		<div id="comment-442">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-442">
			April 22, 2011 at 1:23 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Yes, sorry its been restored now <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=442#respond' onclick='return addComment.moveForm("comment-442", "442", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-429">
		<div id="comment-429">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8da4b275071719ee3b3dde0ab3e55aad?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://github.com/SSSSSmokey/' rel='external nofollow' class='url'>Brandon</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-429">
			April 22, 2011 at 4:13 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you very much for writing this article.  I never took linear algebra, so sometimes it&#8217;s hard to conceptualize matrix transformations just reading through the math.  Your article (actually the Physics Engines For Dummies article) motivated me to bust out the javascript and see if I can make some sense of this stuff.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=429#respond' onclick='return addComment.moveForm("comment-429", "429", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-441">
		<div id="comment-441">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-441">
			April 22, 2011 at 1:23 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey great! No problem &#8211; I&#8217;m really happy it inspired you! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=441#respond' onclick='return addComment.moveForm("comment-441", "441", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-430">
		<div id="comment-430">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/28711b7be8a24349cef06c2836955eed?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Elephant Man</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-430">
			April 22, 2011 at 4:14 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>The content seems to be missing.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=430#respond' onclick='return addComment.moveForm("comment-430", "430", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-432">
		<div id="comment-432">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/4efe91374f9e2d4d47c74943a1fc2395?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Eric</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-432">
			April 22, 2011 at 5:02 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul just wanted to let you know that on my iPhone&#8217;s safari I can&#8217;t read your post. It just shows me the comments. And I want to read it!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=432#respond' onclick='return addComment.moveForm("comment-432", "432", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-440">
		<div id="comment-440">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-440">
			April 22, 2011 at 1:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Eric,</p>
<p>There was a horrible auto-save problem last night which overwrote the article with blank <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_neutral.gif" alt=":|" class="wp-smiley" />  Its been restored now <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=440#respond' onclick='return addComment.moveForm("comment-440", "440", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-437">
		<div id="comment-437">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/eba77488bd34e56cc6b9102ed5a8bfa4?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">mikeyc</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-437">
			April 22, 2011 at 12:36 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Where has this article gone? I can&#8217;t see it <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_sad.gif" alt=":-(" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=437#respond' onclick='return addComment.moveForm("comment-437", "437", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-439">
		<div id="comment-439">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-439">
			April 22, 2011 at 1:20 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Apologies, there was an auto-save problem last night apparently <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_neutral.gif" alt=":|" class="wp-smiley" />  Its been restored now <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=439#respond' onclick='return addComment.moveForm("comment-439", "439", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-452">
		<div id="comment-452">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3ca049389a932a8c3fa70db5fb86b878?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://sal-cnc.me.wisc.edu/index.php?option=com_content&#038;task=view&#038;id=155&#038;Itemid=202' rel='external nofollow' class='url'>Mikola Lysenko</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-452">
			April 23, 2011 at 5:59 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Your separating axis test is somewhat inefficient.  There is a linear time algorithm based on rotating calipers (at least for 2D).  What you do is find the tangent cone for the two polyhedra, then take any vector within the cone as your separating axis.</p>
<p><a href="http://cgm.cs.mcgill.ca/~orm/cslines.html" rel="nofollow">http://cgm.cs.mcgill.ca/~orm/cslines.html</a></p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=452#respond' onclick='return addComment.moveForm("comment-452", "452", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-472">
		<div id="comment-472">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-472">
			April 24, 2011 at 6:36 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Mikola,</p>
<p>I&#8217;ve not heard of rotating callipers before, I will definitely take a look &#8211; one point though, the test I describe is linear time already if you ignore the supporting vertex lookup which can be constant time in the case of regular solids.</p>
<p>The question is, does the rotating callipers technique cope with the case of penetrating polys? </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=472#respond' onclick='return addComment.moveForm("comment-472", "472", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-527">
		<div id="comment-527">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3ca049389a932a8c3fa70db5fb86b878?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Mikola Lysenko</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-527">
			April 27, 2011 at 9:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Yes, it should.  In fact, you can relate the rotating caliper test for the separating axis back to the Minkowski sum.  Implicitly, you should think about it as lazily traversing the hull of the configuration space obstacle, and searching for a pair of extremal vertices on the convex hull of the obstacle.  Taking the lines passing through these vertices and the origin determines a cone which is the space consisting of all separating axes.  If this cone is empty, which will happen if the origin is contained in the obstacle, then the two objects are colliding.  The main difference between doing it this way vs. explicitly evaluating the Minkowski sum is that you avoid having to explicitly compute the object or allocate any extra temporary memory.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=527#respond' onclick='return addComment.moveForm("comment-527", "527", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-4" id="li-comment-528">
		<div id="comment-528">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3ca049389a932a8c3fa70db5fb86b878?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Mikola Lysenko</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-528">
			April 27, 2011 at 9:51 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Edit:  I mean to say that it is the complement of the cone for the separating axis.  If the cone consists is empty entire space (ie if the origin is in the object), then there is no separating axis.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=528#respond' onclick='return addComment.moveForm("comment-528", "528", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-530">
		<div id="comment-530">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-530">
			April 27, 2011 at 10:08 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>According to their paper it doesn&#8217;t handle penetration&#8230;</p>
<p>Additionally, I&#8217;m confused why you think you need to allocate any extra memory when computing the MD, its just a loop over faces of each object <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=530#respond' onclick='return addComment.moveForm("comment-530", "530", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-500">
		<div id="comment-500">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/30abe53b87688280c54659c5838863af?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dan Weatherman</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-500">
			April 26, 2011 at 2:40 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Just saying&#8230; best collision detection post I&#8217;ve seen.  This is why the intertubes are awesome.  Thanks for sharing!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=500#respond' onclick='return addComment.moveForm("comment-500", "500", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-501">
		<div id="comment-501">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-501">
			April 26, 2011 at 2:46 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Dan,</p>
<p>Thanks, that means a lot <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  Glad you enjoyed it&#8230;</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=501#respond' onclick='return addComment.moveForm("comment-501", "501", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.realtimerendering.com/blog/seven-things-for-may-4th-2011/' rel='external nofollow' class='url'>Real-Time Rendering &middot; Seven Things for May 4th, 2011</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-666">
		<div id="comment-666">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/581d0927721240ec53d3394c66814b1c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-666">
			June 24, 2011 at 12:00 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Beautiful and easy to follow.  Thank you.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=666#respond' onclick='return addComment.moveForm("comment-666", "666", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-667">
		<div id="comment-667">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-667">
			June 24, 2011 at 12:15 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>No problem <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=667#respond' onclick='return addComment.moveForm("comment-667", "667", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-681">
		<div id="comment-681">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6359d0ba1d6676fe49673fb8c2ff4b93?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">shinyspoongod</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-681">
			July 1, 2011 at 8:51 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;m an absolute novice at best in the programming field and still harbor a phobia-grade fear of maths, but to critique your writing alone, it&#8217;s pretty decent. I rarely come across tech docs that read this easily. I wish half of the documentation I have attempted to read were this well voiced and explained, really.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=681#respond' onclick='return addComment.moveForm("comment-681", "681", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-682">
		<div id="comment-682">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-682">
			July 1, 2011 at 9:40 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you very much <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  Means a lot <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=682#respond' onclick='return addComment.moveForm("comment-682", "682", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-716">
		<div id="comment-716">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/cb129781d7e884dd80d1ee6682df9c25?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Murray</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-716">
			July 22, 2011 at 9:46 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>As a novice programmer I must say this is very well written. Clear for chumps like me to be able to translate and apply ourselves! One thing that I&#8217;m puzzled by though is how do you project the origin onto the edge of a shape (OBB vs OBB)? I&#8217;m familiar with projection using a unit vector, but unsure of how to project the origin onto an edge built by two vectors, something I can&#8217;t find explained on the internet.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=716#respond' onclick='return addComment.moveForm("comment-716", "716", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-719">
		<div id="comment-719">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-719">
			July 23, 2011 at 11:02 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Murray,</p>
<p>Glad you enjoyed it <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Projecting a point onto an edge is quite simple, you just do the regular maths that you&#8217;re familiar with to project onto a unit vector &#8211; if you do it right you end up with the coordinate of the point in edge space (0-&gt;1) so you can then clamp this against the bounds of the edge (0-&gt;1) and recompute the point on the edge.</p>
<p><a href="http://www.pfirth.co.uk/dotproduct.html#Projection" rel="nofollow">http://www.pfirth.co.uk/dotproduct.html#Projection</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=719#respond' onclick='return addComment.moveForm("comment-719", "719", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-3540">
		<div id="comment-3540">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3540">
			November 2, 2013 at 8:04 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul, </p>
<p>I have almost the same question. But seems your link is dead. I need your confirmation about this: given a point P and an edge consturcted from vertices V1 and V2, if the projected point P` is out of the edge, then the distance from the point to the edge is actually the length of the shorter vector of PV1 and PV2.</p>
<p>Is it right?</p>
<p>Thanks, Xiaoyu</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3540#respond' onclick='return addComment.moveForm("comment-3540", "3540", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-718">
		<div id="comment-718">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d764e9021086b58ec0959c4933ef793e?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Thankyou</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-718">
			July 23, 2011 at 10:12 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Your article help me a lot.  The sentence can&#8217;t present my appreciate!!<br />
I wish you can write more about this theme !!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=718#respond' onclick='return addComment.moveForm("comment-718", "718", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://blog.deguize.com/2011/08/collision-detect-tutorial-wild-bunny.html' rel='external nofollow' class='url'>Collision detect tutorial, Wild Bunny | Deguize</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/' rel='external nofollow' class='url'>How to make Angry Birds &#8211; part 2 | Paul&#039;s blog@Wildbunny</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.portablegaming.de/development-abteilung/45546-rennspiel-demo-nds-2.html#post1354055' rel='external nofollow' class='url'>Anonymous</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1014">
		<div id="comment-1014">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/afcbfe5e648e1729854c79bbf3e13382?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">walter</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1014">
			December 12, 2011 at 6:20 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>In the &#8216;Circle vs AABB&#8217; section, you said that</p>
<p>&#8220;The first step is to get the centre of the circle and project it on to the boundary of the AABB. Fortunately this is as easy as forming the vector V between AABB and circle and simply clamping it against the half extents of the AABB. This yields point Bc. In Figure 2, the clamped x, y region of V is shown in red&#8221;</p>
<p>How do you &#8220;simply clamp against the half extents&#8221;? What was the formula used there?<br />
Sorry for the newbie question <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1014#respond' onclick='return addComment.moveForm("comment-1014", "1014", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-1093">
		<div id="comment-1093">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/ca4283333c3716666e64102001979b17?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.talldreams.org' rel='external nofollow' class='url'>talrnu</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1093">
			January 9, 2012 at 7:56 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi walter,</p>
<p>I too was confused by this part of Paul&#8217;s article. I think the following explanation might be a little more clear:</p>
<p>Consider the components of V (see Fig. 3): the x component (Vx) is parallel to hx and the y component (Vy) is parallel to hy. The action Paul refers to as &#8220;clamping&#8221; is simply chopping the components of V so that they are at most equal to the corresponding h-values. In Fig. 3, both Vx and Vy are longer than hx and hy, respectively, so both must be cut down to size. Trimming the components of V in this way gives you a new vector which ends on the point Bc.</p>
<p>If the circle was situated such that a corner of the square was not the closest point (e.g. if the circle&#8217;s center point has the same y value as the square&#8217;s center point) then one of the components of V (in my example, it&#8217;s Vy) would be shorter than its corresponding h-value. This component of V wouldn&#8217;t need to be chopped down. As a result, the &#8220;clamped&#8221; version of V would point at a Bc which lies along the edge of the square instead of its corner.</p>
<p>It&#8217;s a troublesome concept to explain with words (which, I imagine, is why Paul was compelled to invent a term to describe it), but if you draw it on paper you may get a better understanding.</p>
<p>talrnu</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1093#respond' onclick='return addComment.moveForm("comment-1093", "1093", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-3" id="li-comment-1094">
		<div id="comment-1094">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1094">
			January 9, 2012 at 7:59 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Talrnu,</p>
<p>Nice explanation, thanks <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1094#respond' onclick='return addComment.moveForm("comment-1094", "1094", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even depth-3" id="li-comment-2630">
		<div id="comment-2630">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/adfe54316f363a4342cb9abe9827ff49?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Daniel</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2630">
			June 12, 2013 at 8:50 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>A bit late but anyway: Thanks! That helped me. I had hard time to understand it. In the end it were merely a few lines:</p>
<pre>function clamp(value, min, max) {
  if (value  max) return max;
  return value;
}
closestX = clamp(circle.x, rect.left, rect.right);
closestY = clamp(circle.y, rect.top, rect.bottom);</pre>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2630#respond' onclick='return addComment.moveForm("comment-2630", "2630", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.bustanutz.com/day-11-add-collision-detection-to-our-iphone-game/' rel='external nofollow' class='url'>Day 11: Add collision detection to iPhone game</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1101">
		<div id="comment-1101">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/f82c90f2316ba1ce0259d0cec9de366f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Morty</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1101">
			January 15, 2012 at 8:58 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul,<br />
thanks for this article. This helped a lot for my project.</p>
<p>I have a question regarding your code snippet for OOB vs OOB collision:<br />
Is it possible to convert that algorithm to handle OOBs in 3D space? I tried to implement it for the 3D scenario. The only difference I could think of is that for the 3D case we have to deal with planes instead of edges. So I changed the code to take that into account but it still doesn&#8217;t work correctly. Is there anything more that needs to be altered to get 3D OOBs working?</p>
<p>Best regards<br />
Morty</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1101#respond' onclick='return addComment.moveForm("comment-1101", "1101", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1102">
		<div id="comment-1102">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1102">
			January 15, 2012 at 9:48 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Morty,</p>
<p>Glad you enjoyed it <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>3d is a lot more complex than 2d when it comes to OBB vs OBB because there are now also edges to deal with &#8211; in fact every edge of one OBB crossed with every edge of the other give you the missing planes. Its a little more complex than that because some edge combinations can be optimised away. Its been a while since I&#8217;ve thought about this problem in 3d <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  It might be worth doing a google for some reference material <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1102#respond' onclick='return addComment.moveForm("comment-1102", "1102", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1103">
		<div id="comment-1103">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/f82c90f2316ba1ce0259d0cec9de366f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Morty</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1103">
			January 16, 2012 at 2:55 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks for your fast reply.</p>
<p>So, the problem lies in the construction of the MD?<br />
As far as I understood the algorithm, the premise holds that each edge of the MD is just a translated edge from one of the boxes (in 2D). At least thats what I extracted from the code snippet and the demo. So I assumed for the 3D case that each face of the MD is just a translated face from one of the boxes. Is that a false assumption? I have to admit that I have some problems to visualize the MD of two OBBs in 3D <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Unfortunately I can&#8217;t find any good reference material covering the MD approach AND the calculation of the minimum translational distance. And this distance is exactly what I am interested in.</p>
<p>Best regards<br />
Morty</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1103#respond' onclick='return addComment.moveForm("comment-1103", "1103", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-1104">
		<div id="comment-1104">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1104">
			January 16, 2012 at 3:13 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Morty,</p>
<p>Your assumption about how the 2d MD is computed are correct.</p>
<p>In 3d however, there are a bunch more faces to deal with; these extra faces come from the edges of the 3d shapes (in 2d, the &#8216;edges&#8217; are actually faces, so there is no equivalent).  The normal of these new faces is the cross product of edges from one shape and edges from the other.</p>
<p>For two objects P and Q, you can compute the vertices which make up the polygon of the new faces like this:</p>
<p>p = current_p_edge.a &#8211; current_q_edge.a;<br />
q = current_p_edge.b &#8211; current_q_edge.a;<br />
r = current_p_edge.b &#8211; current_q_edge.b;<br />
s = current_p_edge.a &#8211; current_q_edge.b;</p>
<p>where .a and .b are simply the start and end of each edge.  As for reference material, I found this paper, but I&#8217;m afraid I&#8217;ve not read it fully <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p><a href="http://www.cs.tau.ac.il/~danha/papers/exact_mink_3d.pdf" rel="nofollow">http://www.cs.tau.ac.il/~danha/papers/exact_mink_3d.pdf</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1104#respond' onclick='return addComment.moveForm("comment-1104", "1104", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1113">
		<div id="comment-1113">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a9b601c24d7c1dbaee6423b0fb1972dd?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Gareth</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1113">
			January 17, 2012 at 2:19 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Nice article. I&#8217;m having a problem with the OBBvsOBB code though. I don&#8217;t understand the A.GetSupportVertices() method exactly. The explanation mentions finding a singular vertex but the method returns a collection. Does this method sort the returned values in order of  dot product result (or some other way)?</p>
<p>I&#8217;m an artist by trade so sorry if i&#8217;ve been dumb and missed something.</p>
<p>Cheers, G.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1113#respond' onclick='return addComment.moveForm("comment-1113", "1113", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1114">
		<div id="comment-1114">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1114">
			January 17, 2012 at 2:38 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Gareth,</p>
<p>If you look at the last paragraph of the OBB vs OBB section you should find the answer <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" />  Its to handle a special case where the OBBs are exactly aligned, in which case there will be two support vertices for a given direction <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1114#respond' onclick='return addComment.moveForm("comment-1114", "1114", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1115">
		<div id="comment-1115">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a9b601c24d7c1dbaee6423b0fb1972dd?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Gareth</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1115">
			January 17, 2012 at 2:55 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks Paul, makes sense now :).</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1115#respond' onclick='return addComment.moveForm("comment-1115", "1115", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1313">
		<div id="comment-1313">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1f3e0ecf42fadb48bd315b5e2d3076bb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jon</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1313">
			March 31, 2012 at 2:48 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Fantastic article; curiously, I could only ever visualise SAT before -so i had the reverse experience.</p>
<p>I am wondering how, in the case of exact alignment, you get 2 contacts from an edge, as seems to me you only ever get one.. so to appear dense but am interested in your method.</p>
<p>Thanks a lot for this great article:) Jon</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1313#respond' onclick='return addComment.moveForm("comment-1313", "1313", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1315">
		<div id="comment-1315">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1315">
			March 31, 2012 at 11:27 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Jon,</p>
<p>I recommend you take a look at my angry-birds article which takes a close look at the contact generation following discovery of closest features <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p><a href="http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/" rel="nofollow">http://www.wildbunny.co.uk/blog/2011/06/07/how-to-make-angry-birds-part-2/</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1315#respond' onclick='return addComment.moveForm("comment-1315", "1315", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1314">
		<div id="comment-1314">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1f3e0ecf42fadb48bd315b5e2d3076bb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jon</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1314">
			March 31, 2012 at 6:28 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>As a quick addition.. should i use a poly clipping algorithm to accomplish this? or work with projecting the supporting vertices?</p>
<p>thanks again for your article<br />
Jon</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1314#respond' onclick='return addComment.moveForm("comment-1314", "1314", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1362">
		<div id="comment-1362">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1048d42a688ef650d545075d90c0296d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Zorobabel</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1362">
			April 9, 2012 at 5:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Paul, you save my day! The best article about CD. Thanks for share it.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1362#respond' onclick='return addComment.moveForm("comment-1362", "1362", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1363">
		<div id="comment-1363">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1363">
			April 9, 2012 at 5:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>No problem &#8211; glad it helped you! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1363#respond' onclick='return addComment.moveForm("comment-1363", "1363", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1501">
		<div id="comment-1501">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e00cd1e957dbde9648bedf3ed2f43b94?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Zachary</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1501">
			July 16, 2012 at 8:24 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Current student doing games for fun. Loved the article, thanks. Quick question:<br />
 &#8220;Fortunately this is as easy as forming the vector V between AABB and circle and simply clamping it against the half extents of the AABB&#8221;</p>
<p>More specifically the &#8220;clamping it against the half extents of the AABB&#8221; portion. Could you clarify this phrase at all? Thanks man!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1501#respond' onclick='return addComment.moveForm("comment-1501", "1501", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1502">
		<div id="comment-1502">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1502">
			July 16, 2012 at 8:40 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Zachary,</p>
<p>Sure, once you got your vector V</p>
<p>ensure that<br />
-halfExtents.x < V.x < +halfExtents.x<br />
and<br />
-halfExtents.y < V.y < +halfExtents.y</p>
<p>By clamping V so it lies between those values.<br />
 <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1502#respond' onclick='return addComment.moveForm("comment-1502", "1502", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1504">
		<div id="comment-1504">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/bfec6e9c5291cc5ea735b39fca5c57ab?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Alejandro Guillen B.</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1504">
			July 18, 2012 at 9:57 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Paul, what is a collision normal?<br />
The link that explains it is broken.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1504#respond' onclick='return addComment.moveForm("comment-1504", "1504", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1505">
		<div id="comment-1505">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1505">
			July 18, 2012 at 10:27 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Alejandro</p>
<p>A collision normal is a unit length vector representing the contact plane of the collision &#8211; for example a sphere resting on the floor, the contact normal would be perpendicular to the floor.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1505#respond' onclick='return addComment.moveForm("comment-1505", "1505", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1542">
		<div id="comment-1542">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/16ac4f81adb1f832c21b3946602a547b?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ibracadabra</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1542">
			August 13, 2012 at 12:00 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Thanks for the deep, accurate and yet simple explanation which show a certain element of mastery <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" />  Do you know an efficient way to compute the interpenetration (and especially the direction) with two convex objects of any form (a capsule for instance) please ? (Since you cant browse the edges and faces of the MD in this case to find the closest point I guess)</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1542#respond' onclick='return addComment.moveForm("comment-1542", "1542", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1543">
		<div id="comment-1543">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1543">
			August 13, 2012 at 12:08 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>You can compute the interpenetration of any two convex objects provided you know what the Minkowski Difference of those shapes is, then its simply a case of finding the direction to and distance from the origin to the MD.</p>
<p>In the case of two capsules, the MD is a rounded parallelogram, so the distance between them is the distance from a point to the &#8216;surface&#8217; of the parallelogram.</p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1543#respond' onclick='return addComment.moveForm("comment-1543", "1543", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1547">
		<div id="comment-1547">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/ad59c346d180cc97bb626d5d9faf51f0?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Ben</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1547">
			August 16, 2012 at 3:15 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you very much, however, the links seem to be broken. I had to google resources due to this fact: just bringing this to your attention.</p>
<p>In kinder words, this has helped me quite a bit with collision detection. Thank you!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1547#respond' onclick='return addComment.moveForm("comment-1547", "1547", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1549">
		<div id="comment-1549">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1549">
			August 16, 2012 at 10:16 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Ben,</p>
<p>Awww, I&#8217;d forgotten about those links when I let my personal website expire&#8230; Guess I&#8217;ll have to go fix them!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1549#respond' onclick='return addComment.moveForm("comment-1549", "1549", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1867">
		<div id="comment-1867">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/34e6a38147c1331042c207ec291f5f80?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Soso</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1867">
			December 31, 2012 at 8:36 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>What&#8217;s AABB?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1867#respond' onclick='return addComment.moveForm("comment-1867", "1867", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1882">
		<div id="comment-1882">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1882">
			January 4, 2013 at 9:33 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Axis Aligned Bounding Box <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1882#respond' onclick='return addComment.moveForm("comment-1882", "1882", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1879">
		<div id="comment-1879">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1879">
			January 3, 2013 at 12:04 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi my name is James and I am completely self taught in programming so I don&#8217;t necessarily understand everything.</p>
<p>The one thing I can&#8217;t wrap my head around is this function.</p>
<p>GetDistance( B, mA, mB, parent, screenCentre );</p>
<p>What am I trying to get the distance to, and from what? It looks like you have the Origin, new A, new B, old B, and something called &#8220;parent&#8221;?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1879#respond' onclick='return addComment.moveForm("comment-1879", "1879", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1883">
		<div id="comment-1883">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1883">
			January 4, 2013 at 10:06 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>GetDistance() gets the distance from &#8216;this&#8217; object which is effectively object A, to the given object B. parent and screenCentre are just for bookkeeping purposes and don&#8217;t feature in the calculation.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1883#respond' onclick='return addComment.moveForm("comment-1883", "1883", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1884">
		<div id="comment-1884">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1884">
			January 4, 2013 at 10:25 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>That makes much more sense. I assume distance refers to closest point of A to the closest point of B and not their centers?</p>
<p>I&#8217;ll figure it out.</p>
<p>Thanks. Very enlightening.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1884#respond' onclick='return addComment.moveForm("comment-1884", "1884", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-1885">
		<div id="comment-1885">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1885">
			January 4, 2013 at 10:27 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Yes, the closest points are on the surface of both polygons, not their centres <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1885#respond' onclick='return addComment.moveForm("comment-1885", "1885", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1902">
		<div id="comment-1902">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1902">
			January 12, 2013 at 2:41 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Well on the bright side I got it to work&#8230;<br />
On the dark side&#8230; It takes several hundred iterations to complete&#8230;</p>
<p>I guess the question is why? Im using this code.</p>
<p><code>rayN = getDot(rayx, rayy, (minDistX / minDist), (minDistY / minDist));<br />
dRel = rayN + (Ar * fabs(Aav)) + (Br * fabs(Bav));<br />
//Aav &amp; Bav (A/B Angular Velocity) are in degrees<br />
//Ar &amp; Br: Distance from body center to farthest point</code></p>
<p>I have also come to notice that dRel hugely depends on whether you are using degrees or radians for Angular Velocity. However, degrees iterate too slow and radians iterate too fast.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1902#respond' onclick='return addComment.moveForm("comment-1902", "1902", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1908">
		<div id="comment-1908">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1908">
			January 12, 2013 at 4:13 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>All my angular coordinates are in radians since that&#8217;s most natural for the maths.</p>
<p>100s of iterations sounds wrong in general &#8211; it can take a while to converge in edge cases, but in general it should be much faster than that. Sounds like you have a bug in either your distance code or the code which moves the iteration closer?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1908#respond' onclick='return addComment.moveForm("comment-1908", "1908", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1910">
		<div id="comment-1910">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1910">
			January 13, 2013 at 7:14 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Solved!</p>
<p>rayN is sometimes negative, adding absolute value &#8220;angular compensation&#8221; resulted in dRel getting smaller, not larger, aka producing the opposite effect than desired. A simple fabs(rayN) did the trick.</p>
<p>This still makes me question how your code works, because the dot product can be negative and the angular compensation is always positive&#8230;</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1910#respond' onclick='return addComment.moveForm("comment-1910", "1910", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-1911">
		<div id="comment-1911">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1911">
			January 13, 2013 at 10:28 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>If the rayN is negative, it means the closest point is already inside the object IIRC. On a convex shape it should only ever bring you closer to the surface, or terminate.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1911#respond' onclick='return addComment.moveForm("comment-1911", "1911", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-5" id="li-comment-1912">
		<div id="comment-1912">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1912">
			January 14, 2013 at 3:02 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Well I do not know, but it works 100% of the time now with correct iterations now that i added the fabs() and converted to radians.</p>
<p>A wise man once told me &#8220;If it ain&#8217;t  broke, don&#8217;t fix it.&#8221;</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-5" id="li-comment-1914">
		<div id="comment-1914">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1914">
			January 14, 2013 at 10:37 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hmmm, I&#8217;m not sure I approve of the use of fabs() &#8211; seems like you&#8217;re hiding the problem <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>It might bare further investigation &#8211; like I say, if rayN is negative its a sign the point is on the wrong side of the plane, i.e. the intersection point has &#8216;passed&#8217; the object.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1916">
		<div id="comment-1916">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1916">
			January 15, 2013 at 12:35 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>My &#8216;minDist&#8217; is always positive since it is a distance, and &#8216;minDistX/Y&#8217; are not since they represent the vector from A to B</p>
<p>Is this the problem? If so, then how do you determine a negative &#8216;minDist&#8217;</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1916#respond' onclick='return addComment.moveForm("comment-1916", "1916", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1917">
		<div id="comment-1917">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1917">
			January 15, 2013 at 9:41 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>No, that&#8217;s fine &#8211; but your distance function should be able to return a negative distance when the two objects are penetrating each other.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1917#respond' onclick='return addComment.moveForm("comment-1917", "1917", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1923">
		<div id="comment-1923">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1923">
			January 17, 2013 at 7:58 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>dot product is defined as <code>(x1 * x2) + (y1 * y2)</code></p>
<p>so, say for example, you have 2 non-intersecting objects A and B with the velocities  and  respectively. minDist is + (not intersecting) and (lets say) so are its components. Then&#8230;<br />
<code>rayx = 1 - 1 = 0<br />
rayy = -1 - 1 = -2<br />
rayN = (0 * minDistX) + (-2 * minDistY) = negative number</code></p>
<p>However if you switch A and B&#8217;s velocities, then rayy = 1 &#8211; (-1) = 2 and the dot becomes positive&#8230;<br />
Im clearly missing something and it is driving me insane.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1923#respond' onclick='return addComment.moveForm("comment-1923", "1923", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-4" id="li-comment-1924">
		<div id="comment-1924">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1924">
			January 17, 2013 at 7:59 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>the velocities didn&#8217;t show up properly&#8230;<br />
<code>A : (1,1)<br />
B : (1,-1)</code></p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1924#respond' onclick='return addComment.moveForm("comment-1924", "1924", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-1925">
		<div id="comment-1925">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1925">
			January 17, 2013 at 9:22 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>If the objects are non-intersecting and you still get a negative rayN it must mean they are heading away from each other.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1925#respond' onclick='return addComment.moveForm("comment-1925", "1925", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-5" id="li-comment-1929">
		<div id="comment-1929">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e3be5a090bb196d8da58eb301424617f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">James</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1929">
			January 17, 2013 at 7:31 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>u know, this entire problem is probably due to me neglecting to mention i used my own Distance Function&#8230;</p>
<p>I just found yours, it looks better&#8230;.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1991">
		<div id="comment-1991">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/fa90b639c8d9becebf3d849a9ccad9e6?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Fredrik</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1991">
			February 13, 2013 at 8:18 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul! Thank you for a great article and a great site! I really like the way you check AABB, but I was wondering if it�s possible to get a &#8220;minimum translation vector&#8221; out of it also? Somehow I got the idea that since you subtract the center of the box B with center of Box B (which puts it close to 0) and then subtract the half extents of both boxes, the negtive (=&#8221;overlapping&#8221;) result should be the translation vector. Or at least translation magnitude. But I can�t get it to work like that in my code, so perhaps it�s just a wild goose chase..? <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Keep up the good work!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1991#respond' onclick='return addComment.moveForm("comment-1991", "1991", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1997">
		<div id="comment-1997">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1997">
			February 17, 2013 at 9:58 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Fredrik,</p>
<p>Yes, you can get the minimum translation vector using something similar, although its slightly more involved. If you have a look at this site:</p>
<p><a href="http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm" rel="nofollow">http://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm</a></p>
<p>Particularly the signed distance to box function, that should give you some clues <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1997#respond' onclick='return addComment.moveForm("comment-1997", "1997", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1992">
		<div id="comment-1992">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/31515a64ce7897c182414887587e4bfc?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1992">
			February 16, 2013 at 5:32 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;m having a hard time on visualazing how to build the MD with the supporting vertex so I&#8217;d like to know if I&#8217;ve understood this right.</p>
<p>So we first start with an edge on a shape and find its normal pointing inward the shape? Then we look for the supporting vertex on the other shape most in the direction of the normal.</p>
<p>Once we have the supporting vertex how do you substract it from the edge? Do you substract it from the vertices that form the edge and does it mean moving the edge to the place where it belongs to on the MD?<br />
Why do we need to loop through the other shape? Do we like first construct the red edges of the shape and then the green ones, to reference a figure on the article?</p>
<p>Also how do I get the closest feature-pair from this? Is the edge with the Minimum Translational Distance to the origin on the pair? And what is the vertex on the pair?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1992#respond' onclick='return addComment.moveForm("comment-1992", "1992", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1999">
		<div id="comment-1999">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-1999">
			February 17, 2013 at 10:03 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>Yes you have it mostly right, you subtract the supporting vertex from the candidate edge&#8217;s vertices, and this operation transforms the resultant edge into configuration space in the MD. You need to loop through the other shape because the MD is composed of feature-pairs which are {vertex of A, edge of B} and {vertex of B, edge of A}. Without doing both you&#8217;d end up with only half the necessary edges in the MD.</p>
<p>The closest feature pair is simply the edge in the MD which is nearest the origin &#8211; you just do a little book-keeping to remember which pair on which objects formed that MD edge.</p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=1999#respond' onclick='return addComment.moveForm("comment-1999", "1999", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2001">
		<div id="comment-2001">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/4a71a85d83e5d157fc39c43edd42b707?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Anonymous</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2001">
			February 17, 2013 at 11:41 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Yes that helps a lot! Thank you very much!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2001#respond' onclick='return addComment.moveForm("comment-2001", "2001", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-4" id="li-comment-2021">
		<div id="comment-2021">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6f40a772f5b12d1acdcfd873edeade42?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2021">
			February 26, 2013 at 12:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Sorry to bother again but I forgot to ask about this one:</p>
<p>&#8220;As we do so, we project the origin onto each edge, and keep track of the distance � we�re looking for the least negative distance, which will be the Minimum Translational Distance.&#8221;</p>
<p>A totally elementary question but how do you get a negative distance? Isn&#8217;t a distance always positive?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2021#respond' onclick='return addComment.moveForm("comment-2021", "2021", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-5" id="li-comment-2022">
		<div id="comment-2022">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2022">
			February 26, 2013 at 1:01 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Well, its a signed distance; more like a 1D vector actually <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even depth-5" id="li-comment-2023">
		<div id="comment-2023">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/96d81ea61212bf945d0b3ef02270792c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2023">
			February 26, 2013 at 4:55 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I gave it a bit more thought. So is the sign of the distance determined by which side of the edgevector the origin lies on? The negative distance is on the left-hand side and the positive is on the  right-hand side of the vector?</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-5" id="li-comment-2024">
		<div id="comment-2024">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2024">
			February 26, 2013 at 5:46 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Yes, exactly &#8211; and in general it tells you whether the two shapes are inter-penetrating or not (negative final result = inter-penetrating by that distance).</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even depth-5" id="li-comment-2028">
		<div id="comment-2028">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/b03e73b37374f8774aeb30e4516c915d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2028">
			February 27, 2013 at 11:32 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ok. Thanks again!</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2033">
		<div id="comment-2033">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c19b0cacbcd1a215b93bdd69dc11969e?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2033">
			March 2, 2013 at 12:13 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Sorry for coming up with a question yet again.</p>
<p>Is the signed distance calculated so that you<br />
first divide the normal by its length making it a unit normal so that<br />
the dotproduct of the unit normal and the vector pointing from the closest point on the edge to the origin gives you the distance?<br />
Or should you calculate the distance with the ordinary magnitude formula and then<br />
get the sign of the distance from the dotproduct of the normal and the edge-origin vector?<br />
Or is there a better way to do it?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2033#respond' onclick='return addComment.moveForm("comment-2033", "2033", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2035">
		<div id="comment-2035">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2035">
			March 3, 2013 at 7:43 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>The normals are already unit length, so you calculate the signed distance as the dot between the normal and the vector from the origin to the edge.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2035#respond' onclick='return addComment.moveForm("comment-2035", "2035", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2037">
		<div id="comment-2037">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/ef87f2118bfeedc044093180a953f31d?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2037">
			March 4, 2013 at 11:36 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Why are they already unit length? Doesn&#8217;t perping of the vector keep its length the same? Or am I missing something?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2037#respond' onclick='return addComment.moveForm("comment-2037", "2037", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-2038">
		<div id="comment-2038">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2038">
			March 4, 2013 at 11:55 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>It does keeps it&#8217;s length the same yes, but the normals for the edges start out normalised, so the perp means they&#8217;re still unit length <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2038#respond' onclick='return addComment.moveForm("comment-2038", "2038", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-5" id="li-comment-2048">
		<div id="comment-2048">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a9d1a6ed877f6e1c55f136f2398ec62b?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2048">
			March 9, 2013 at 5:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I don&#8217;t understand why they start out normalised. Shouldn&#8217;t the perped vector be normalised to make it a unit length normal instead of just a normal?</p>
<p>Also is the ray-cast in practise a line-line intersection (or more specifically segment-segment intersection)  when tested against a polygon?</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-5" id="li-comment-2050">
		<div id="comment-2050">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2050">
			March 9, 2013 at 6:01 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>The edge normals are pre-calculated and normalised (and stored in local space), then whenever the object moves, these are rotated into world space. The perp operator doesn&#8217;t affect the length of the vector.</p>
<p>Raycast is indeed a segment vs segment test <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt depth-5" id="li-comment-2051">
		<div id="comment-2051">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/29e61b4c358d2284228e7121562e6070?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Dummy</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2051">
			March 9, 2013 at 6:17 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ah, now I understand! Many many thanks for helping me!</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-5" id="li-comment-2052">
		<div id="comment-2052">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2052">
			March 9, 2013 at 6:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Fantastic <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2177">
		<div id="comment-2177">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1f3e0ecf42fadb48bd315b5e2d3076bb?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jon Slater</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2177">
			April 13, 2013 at 8:59 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>I did buy the source code associated with this article, but i lost it during a hard-drive failure. is there any chance in retrieving the download?</p>
<p>Thanks for a great site.<br />
Jon</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2177#respond' onclick='return addComment.moveForm("comment-2177", "2177", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-2902">
		<div id="comment-2902">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/67026c97f45e74b998a090c9fe409845?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.justinmitchell.com.au' rel='external nofollow' class='url'>Justin</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-2902">
			July 20, 2013 at 5:13 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Congrats on an excellently prepared paper on continuous vs discrete collision detection. </p>
<p>I&#8217;ve started to get into game development and I started off with discrete collision detection without using Vectors, just the x/y co-ordinates and I checked to see if any objects shared the same area on screen, or if any co-ordinates penetrated the boundary planes (eg. posx &gt; screen.width ? true : false). Checking boundary penetration was easy, but checking object overlap was inefficient and didn&#8217;t work. I was trying to perform Point checks to see if any x,y co-ordinates for each point on a bounding box had any penetration for a target bounding box, without rotation. It failed, so I turned it off.</p>
<p>I started to read some articles about using Vectors to measure velocity, position and direction, and using algebra maths to calculate distances between objects for overlap. A small brainwave put me me very close to using the OBB method &#8211; calculate the vectors between the obb centre points, find the angle of the vector, clamp to the nearest vertex for obb a &amp; b according to the angle and if the distance from vertexes in the next step will be less than 0, then there&#8217;s a collision. I would then apply the methods you described in physics engines for dummies, applying impulse vectors to reduce to velocity enough to avoid impact.</p>
<p>However, the overlap would only work if the vertexes would overlap directly, and would only work with circle or square shapes, not ellipsis, rectangles, etc.</p>
<p>Hopefully I can solve these problems efficiently using the Minkowski difference theorem.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=2902#respond' onclick='return addComment.moveForm("comment-2902", "2902", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3001">
		<div id="comment-3001">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3d95373d974675046c88f74a0c092e5a?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Daniele</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3001">
			August 1, 2013 at 7:44 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello Paul.<br />
Great article. The interactive demos are really useful, for me it&#8217;s a lot easier to understand having visual support.</p>
<p>I&#8217;m having a little trouble in the part about OBB vs OBB. The edge normal is a vector perpendicular to the edge we&#8217;re checking right? How can I find it? I was only able to find a formula that requires the equation of a line (-1/m).</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3001#respond' onclick='return addComment.moveForm("comment-3001", "3001", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3002">
		<div id="comment-3002">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3002">
			August 1, 2013 at 8:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Daniele,</p>
<p>In 2d, edge normal can be found by using the perp operator on the edge vector, then normalising it:</p>
<p><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/vector/#Perp" rel="nofollow">http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/vector/#Perp</a></p>
<p>The direction the edge points (i.e A->B, or B->A) will determine the flip direction of the perp, so make sure it&#8217;s consistent in your calculations <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3002#respond' onclick='return addComment.moveForm("comment-3002", "3002", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-3021">
		<div id="comment-3021">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3d95373d974675046c88f74a0c092e5a?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Daniele</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3021">
			August 5, 2013 at 3:56 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>That&#8217;s exactly what I needed. Thank you very much!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3021#respond' onclick='return addComment.moveForm("comment-3021", "3021", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even depth-3" id="li-comment-3036">
		<div id="comment-3036">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3d95373d974675046c88f74a0c092e5a?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Daniele</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3036">
			August 9, 2013 at 6:44 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I don&#8217;t know if it&#8217;s relevant, but by doing some tests on paper I noticed that I need to use the reversed edge normal if the vertices of a shape are considered in counterclockwise order, and straight normal if considered in clockwise order.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3036#respond' onclick='return addComment.moveForm("comment-3036", "3036", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-3050">
		<div id="comment-3050">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3050">
			August 11, 2013 at 5:43 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Daniele,</p>
<p>Yes, that is relevant &#8211; a reversed winding order will flip the normals of a shape so its important to use a consistent order. You can detect flipped winding if the area calculation for a shape returns a negative number.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3050#respond' onclick='return addComment.moveForm("comment-3050", "3050", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-3042">
		<div id="comment-3042">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6f80b4941e900373f363c9aa116c473f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Gus Gustafson</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3042">
			August 10, 2013 at 9:20 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>A number of links are broken</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3042#respond' onclick='return addComment.moveForm("comment-3042", "3042", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3049">
		<div id="comment-3049">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3049">
			August 11, 2013 at 5:36 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks for letting me know &#8211; I&#8217;ve fixed them up <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3049#respond' onclick='return addComment.moveForm("comment-3049", "3049", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-3119">
		<div id="comment-3119">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/386b1c40de204ebb1f322f0795077b38?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Moad Azzuz</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3119">
			August 23, 2013 at 8:10 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul, </p>
<p>Brilliant article if I may say so myself. You&#8217;ve helped explained a great deal to me and although I cant quite visualise everything just yet I feel like I&#8217;m getting a grasp on it. </p>
<p>Just a quick question if I may, I&#8217;ve designed my game engine to 1) update object position, 2) check collisions then 3) draw objects; in that order. Essentially any collisions that would occur would not be visible to the player as it is rectified in stage 2. Is it OK for me to continue using discrete collisions or am I missing something here?</p>
<p>Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3119#respond' onclick='return addComment.moveForm("comment-3119", "3119", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3120">
		<div id="comment-3120">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3120">
			August 23, 2013 at 8:20 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Moad,</p>
<p>I would recommend the following integration order:</p>
<p>Integrate velocities<br />
Collision detection/resolution<br />
Integrate position<br />
Draw objects</p>
<p>Apparently, this is called semi-implicit euler and has served me very well in the past <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3120#respond' onclick='return addComment.moveForm("comment-3120", "3120", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-3126">
		<div id="comment-3126">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/386b1c40de204ebb1f322f0795077b38?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Moad Azzuz</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3126">
			August 24, 2013 at 9:11 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>That&#8217;s great thanks.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3126#respond' onclick='return addComment.moveForm("comment-3126", "3126", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-3267">
		<div id="comment-3267">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/f63c38ea4fdc4bb776ee39ade06722ce?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">tieTYT</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3267">
			September 18, 2013 at 9:47 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;ve skimmed this and I plan to read it later.  Will this article give me the knowledge needed to figure out if a semi-circle collides with circle OR if a semi-circle collides with a square?  I searched for your usage of the word &#8220;circle&#8221; throughout the article and nothing jumped out to me as a direct solution to this problem.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3267#respond' onclick='return addComment.moveForm("comment-3267", "3267", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3268">
		<div id="comment-3268">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3268">
			September 18, 2013 at 10:20 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This articles doesn&#8217;t, but an earlier one does give a good method for getting the distance from a point to an arc-length which you can adapt for your purposes. Check the bottom of this article:</p>
<p><a href="http://www.wildbunny.co.uk/blog/2011/02/23/2d-isometric-land-breaking-out-of-the-grid/" rel="nofollow">http://www.wildbunny.co.uk/blog/2011/02/23/2d-isometric-land-breaking-out-of-the-grid/</a></p>
<p>Hope that helps!</p>
<p>Cheers, Paull.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3268#respond' onclick='return addComment.moveForm("comment-3268", "3268", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-3269">
		<div id="comment-3269">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/f63c38ea4fdc4bb776ee39ade06722ce?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">tieTYT</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3269">
			September 19, 2013 at 1:30 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I read your link but I&#8217;m still not sure how to detect collision of these shapes.  I&#8217;d love it if you&#8217;d update your article with a section dedicated to this.  But I understand that might take a lot of time.  Either way, thanks for the article.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3269#respond' onclick='return addComment.moveForm("comment-3269", "3269", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-3419">
		<div id="comment-3419">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3419">
			October 19, 2013 at 12:50 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Thanks for this great article, really inspires me a lot:)</p>
<p>I have a question about finding supporting vertex for MD though, I am wondering if you can shed some light on this: by &#8220;vector V that is most in the direction of N&#8221;, are you talking about mimial projection of V onto N, or minimal angle between V and N? Or, more exactly, V.dot(N) or (V/|V|).dot(N)?</p>
<p>Best Regards,<br />
Xiaoyu</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3419#respond' onclick='return addComment.moveForm("comment-3419", "3419", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3422">
		<div id="comment-3422">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3422">
			October 19, 2013 at 4:15 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Its the vector which when dotted with N has the largest positive scalar result <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3422#respond' onclick='return addComment.moveForm("comment-3422", "3422", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-3436">
		<div id="comment-3436">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3436">
			October 21, 2013 at 3:37 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Oh, that makes sense. I didn&#8217;t reverse the normal so my supporting vertex is found by minimal dot production of V and N. Anyway it works in my little demo. </p>
<p>Thanks for your clarification <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3436#respond' onclick='return addComment.moveForm("comment-3436", "3436", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-3420">
		<div id="comment-3420">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3420">
			October 19, 2013 at 1:39 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ooops, I mean maximum projection of V onto N.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3420#respond' onclick='return addComment.moveForm("comment-3420", "3420", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-3421">
		<div id="comment-3421">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Xiaoyu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3421">
			October 19, 2013 at 2:30 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Okay, I figured it out, it&#8217;s the minimal projection.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3421#respond' onclick='return addComment.moveForm("comment-3421", "3421", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3463">
		<div id="comment-3463">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8754a7f303744e828ae886dc0827e9dc?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://kaeel.blogspot.it/' rel='external nofollow' class='url'>Kaeel</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3463">
			October 23, 2013 at 11:23 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul<br />
could I ask you what does the .m_v operation do?<br />
I see you used it 4 times but cannot figure out what could be its meaning.<br />
Thank you for the great articles!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3463#respond' onclick='return addComment.moveForm("comment-3463", "3463", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3464">
		<div id="comment-3464">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3464">
			October 24, 2013 at 8:02 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Kaeel,</p>
<p>That &#8216;m_&#8217; just means member variable and the &#8216;v&#8217; is its name. In this case denoting a vector. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3464#respond' onclick='return addComment.moveForm("comment-3464", "3464", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-3539">
		<div id="comment-3539">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/9746d812624d62762a39093dc2adcc53?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">emil</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3539">
			November 1, 2013 at 9:48 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Greast article Paul.<br />
 About OBBvsOBB, why the need to do the same test (BvsA), shouldn&#8217;t it return the same thing as AvsB, only with reversed contact normal? (also, why the &#8216;-&#8217; in faceDist = -mfp0.Dot( wsN ); should&#8217;n this calculation be exactly the same as with AvsB?).<br />
 Thanks.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3539#respond' onclick='return addComment.moveForm("comment-3539", "3539", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3543">
		<div id="comment-3543">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3543">
			November 5, 2013 at 9:18 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>This is because A (verts) vs B (faces) and B (verts) vs A (faces) do not produce the same results <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3543#respond' onclick='return addComment.moveForm("comment-3543", "3543", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3552">
		<div id="comment-3552">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7402cb8872c0ff140609c297cd5b5039?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Vince</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3552">
			November 16, 2013 at 7:33 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello Paul,I implemented the SAT in my 2d game (AABB vs Tile) for the detection and response to collisions and your tuto help me a lot. Now I would like to (AABB vs OBB), I detect, but I do not see how to apply the response for just move to the AABB, and later the two box, Thanks in advance, </p>
<p>sorry for my english level</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3552#respond' onclick='return addComment.moveForm("comment-3552", "3552", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3553">
		<div id="comment-3553">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3553">
			November 16, 2013 at 8:12 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Vince,</p>
<p>Easiest thing to do is to treat this as OBB vs OBB, there isn&#8217;t much advantage in having a special case to deal with AABB vs OBB.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3553#respond' onclick='return addComment.moveForm("comment-3553", "3553", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-3554">
		<div id="comment-3554">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7402cb8872c0ff140609c297cd5b5039?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Vince</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3554">
			November 17, 2013 at 4:33 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello, thanks. My code is ok for OBB VS OBB detection, but I don&#8217;t see how to deplace the OBB after detection.  I wanted to go through the rotation angle to determine the slope, but apparently this is not a good idea. Can you put me on the right path ?</p>
<p>thanks in advance</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3554#respond' onclick='return addComment.moveForm("comment-3554", "3554", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-3555">
		<div id="comment-3555">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3555">
			November 17, 2013 at 7:34 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>The minimum translational vector returned from the collision code is the minimum translation required to bring both bodies into touching contact.</p>
<p>However, I get the feeling you&#8217;re asking about physics simulation, rather than collision detection?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3555#respond' onclick='return addComment.moveForm("comment-3555", "3555", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-5" id="li-comment-3556">
		<div id="comment-3556">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7402cb8872c0ff140609c297cd5b5039?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Vince</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3556">
			November 17, 2013 at 10:12 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>You have a good feeling, it&#8217;s about the physics simulation. A logic for AABB VS AABB its ok, but OBB, I need help</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-5" id="li-comment-3557">
		<div id="comment-3557">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3557">
			November 17, 2013 at 11:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Have a read of my article on physics simulation if you&#8217;ve not explored it already: <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" rel="nofollow">http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-3558">
		<div id="comment-3558">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7402cb8872c0ff140609c297cd5b5039?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Vince</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3558">
			November 19, 2013 at 5:45 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello Paul, I have read your tuto physics engine, but I don&#8217;t see. If I buy it and speculative contacts, normally I would understand and will succeed my OBB VS OBB collision response ? As I would be happy and you can eat <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>thanks in advance</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3558#respond' onclick='return addComment.moveForm("comment-3558", "3558", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3559">
		<div id="comment-3559">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#comment-3559">
			November 19, 2013 at 5:47 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Vince,</p>
<p>I can&#8217;t say in advance whether you will be able to solve your problem if you buy the code. I would recommend reading through and trying the examples one by one to make sure you understand the process.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/?replytocom=3559#respond' onclick='return addComment.moveForm("comment-3559", "3559", "respond", "457")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>

			<div class="navigation">
				<div class="nav-previous"></div>
				<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/#comments" >Newer Comments <span class="meta-nav">&rarr;</span></a></div>
			</div><!-- .navigation -->


								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2011/04/20/collision-detection-for-dummies/comment-page-1/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.wildbunny.co.uk/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='457' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
							<script type='text/javascript'>
	<!--
	refJS = escape( document[ 'referrer' ] );
	document.write("<input type='hidden' name='refJS' value='"+refJS+"'>");
	// -->
	</script>
	<p style="font-size:9px;clear:both;">WP-SpamFree by <a rel="nofollow" href="http://www.polepositionmarketing.com/library/wp-spamfree/" title="WP-SpamFree WordPress Anti-Spam Plugin" >Pole Position Marketing</a>

					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="search-3" class="widget-container widget_search"><h3 class="widget-title">Search</h3><form role="search" method="get" id="searchform" class="searchform" action="http://www.wildbunny.co.uk/blog/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li id="categories-3" class="widget-container widget_categories"><h3 class="widget-title">Choose a category</h3><select name='cat' id='cat' class='postform' >
	<option value='-1'>Select Category</option>
	<option class="level-0" value="104">Algorithmic trading&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="7">Animal Army&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="35">AS3&nbsp;&nbsp;(19)</option>
	<option class="level-0" value="44">Beginner&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="114">Bitcoin&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="6">Business&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="73">Chip tunes&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="71">Circles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="40">Collision Detection&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="53">Developer love&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="117">Entity systems&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="103">Finance&nbsp;&nbsp;(6)</option>
	<option class="level-0" value="101">Full games&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="67">Geometry&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="58">Graphics&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="100">JSON&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="42">Ladders and AI&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="96">learning-to-program&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="28">Making angry birds&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="47">Micro-transactions&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="90">Multi-player&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="72">Music&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="118">Optimisation&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="41">Parallax and Tiles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="65">paypal&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="97">Physics&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="36">Platform game&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="68">Polygons&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="98">Portals&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="52">Promotion&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="93">Self improvement&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="66">Server side&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="99">Silverlight&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="45">Stencyl&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="5">Technical&nbsp;&nbsp;(28)</option>
	<option class="level-0" value="1">Uncategorized&nbsp;&nbsp;(1)</option>
</select>

<script type='text/javascript'>
/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://www.wildbunny.co.uk/blog/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script>

</li>			</ul>
		</div><!-- #primary .widget-area -->


		<div id="secondary" class="widget-area" role="complementary">
			<ul class="xoxo">
				<li id="user_bio-2" class="widget-container widget_user_bio"><h3 class="widget-title"><div style="text-align:center">About the author</div></h3><div class="ub-grav" style="margin:5px 5px 0px 5px;text-align:center;"><img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=128&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D128&amp;r=G' class='avatar avatar-128 photo' height='128' width='128' /></div>A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp
</li><li id="widget_featured-posts-2" class="widget-container widget_featured-posts"><h3 class="widget-title">Featured Posts</h3>	
	<ul id="yiw-featured-post">
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2014/03/03/what-is-a-bitcoin/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/Bitcoin_Mining_Farm_Logo.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="What is a Bitcoin?" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2014/03/03/what-is-a-bitcoin/">What is a Bitcoin?</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Collision detection for dummies" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/">Collision detection for dummies</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/stencylRules.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="10 steps to becoming a better programmer" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/">10 steps to becoming a better programmer</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/04/stop-loss.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Algorithmic trading for dummies &#8211; part 2" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/">Algorithmic trading for dummies &#8211; part 2</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/03/toi1.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Speculative Contacts &#8211; a continuous collision engine approach" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/">Speculative Contacts &#8211; a continuous collision engine approach</a>
	       </h4>
	   </li>
	</ul>
	
	</li><li id="advanced-featured-page-widget-3" class="widget-container widget_advanced-featured-page-widget"><h3 class="widget-title">Tutorials with code to buy</h3><div class="post-2295 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-multiplayer-asteroids-engine/" title="Buy multiplayer asteroids engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/multiplayer.jpg" class="attachment-200 by 200 image" alt="multiplayer" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-2" class="widget-container widget_advanced-featured-page-widget"><div class="post-2299 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-angrybirds-alike-engine/" title="Buy Angrybirds-alike engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/birds.jpg" class="attachment-200 by 200 image" alt="birds" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-4" class="widget-container widget_advanced-featured-page-widget"><div class="post-2301 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-platform-game-engine/" title="Buy platform game engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/platform.png" class="attachment-200 by 200 image" alt="platform" /></a></div><!--end post_class()-->

</li><li id="wp125" class="widget-container wp125_write_ads_widget">
<h3 class="widget-title">Affiliates</h3><div id="wp125adwrap_1c">
<div class="wp125ad odd"><a href="index.php?adclick=10" title="plus500" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/03/plus500-200x200.gif" alt="plus500" /></a></div>
<div class="wp125ad even"><a href="https://www.cavirtex.com/Z/50680" title="cavirtex" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/caVirtex.gif" alt="cavirtex" /></a></div>
<div class="wp125ad odd"><a href="http://www.freelancer.co.uk/affiliates/wildbunny2/" title="freelancer" rel="nofollow"target='_blank'><img src="/images/freelancer.png" alt="freelancer" /></a></div>
<div class="wp125ad even"><a href="http://www.shareasale.com/r.cfm?b=531904&u=949687&m=41388&urllink=&afftrack=" title="wp engine" rel="nofollow"target='_blank'><img src="http://www.shareasale.com/image/41388/sas_banner_250x250.jpg" alt="wp engine" /></a></div>
<div class="wp125ad odd"><a href="http://www.wildbunny.co.uk/blog/advertise-here/" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/images/blankAdvert.png" alt="" /></a></div>
</div>
</li><li id="ezadswidget-4" class="widget-container ezAdsWidget"><h3 class="widget-title">My MetaTrader 5 products</h3><!-- Easy AdSense V2.79 -->
<!-- Widg[count: 2] -->
<div class="ezAdsense adsense adsense-widget"><div style="text-align:center;margin:0px; "><div style="width:350px">
<a target="_blank" href="http://mql5.com/dzz" title="Download VWAP technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/925/mid" alt="Buy VWAP customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e08" title="Download Average Spread technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/951/mid" alt="Buy Average Spread customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e09" title="Download Bid Ask Volumes technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/950/mid" alt="Buy Bid Ask Volumes customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/po9" title="Download Market Activity technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/963/mid" alt="Buy Market Activity customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/poa" title="Download Precision Scalper trading system from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/972/mid" alt="Buy Precision Scalper trading application in the store of automated robot systems" width="400" height="60"></a>
</div></div></div></li>			</ul>
		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">
					Wildbunny blog				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/"
						title="Semantic Personal Publishing Platform" rel="generator">
					Proudly powered by WordPress.				</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

		
		<script type="text/javascript">
			//<![CDATA[
			jQuery(document).ready(function() {
				var a = '<div id="cookie-law-info-bar"><span>This website uses cookies to improve your experience. We\'ll assume you\'re ok with this, but you can opt-out if you wish.<a href=\"#\" id=\"cookie_action_close_header\"  class=\"medium cli-plugin-button cli-plugin-main-button\" >Accept</a> <a href=\"http://www.wildbunny.co.uk/blog/privacy-policy/\" id=\"CONSTANT_OPEN_URL\" target=\"_new\"  class=\"cli-plugin-main-link\"  >Read More</a></span></div>';
				var b = '{"animate_speed_hide":"500","animate_speed_show":"500","background":"#fff","border":"#444","border_on":true,"button_1_button_colour":"#000","button_1_button_hover":"#000000","button_1_link_colour":"#fff","button_1_as_button":true,"button_2_button_colour":"#333","button_2_button_hover":"#292929","button_2_link_colour":"#444","button_2_as_button":false,"font_family":"inherit","notify_animate_hide":true,"notify_animate_show":false,"notify_div_id":"#cookie-law-info-bar","notify_position_horizontal":"right","notify_position_vertical":"bottom","showagain_tab":false,"showagain_background":"#fff","showagain_border":"#000","showagain_div_id":"#cookie-law-info-again","showagain_x_position":"50%","text":"#000"}';
				cli_show_cookiebar(a,b);
				
							});
			//]]>
		</script>
		
		 
			<a id="FollowMeTabLeftLg" onClick="showFollowMe()" href="#" style="border-bottom:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/leftlg.gif" border="0" /></a>	

<div id="FollowMeBubbleBG" style="visibility:hidden;"></div>
<div id="FollowMeBubble" style="visibility:hidden;border-bottom:none;">


<div class="top" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_top.gif');width:329px;height:60px;float:left;display:block;border-bottom:none;">
<a id="close" onClick="hideFollowMe()" href="#" style="border-bottom:none"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/close.png" border="0" /> </a>
<!-- <a id="grab" target="_blank" title="grab this" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>--></div>
<div class="mid" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_mid.gif');width:329px;background-repeat:repeat-y;float:left;">
<div id="stretch">
<span><a title="
Twitter" target="_blank" href="http://twitter.com/paul_m_firth" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
twitter.png" border="0" alt="
Twitter" /> 
Twitter</a></span>
<span><a title="
Facebook" target="_blank" href="http://www.facebook.com/WildbunnyLtd" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
facebook.png" border="0" alt="
Facebook" /> 
Facebook</a></span>
<span><a title="
RSS" target="_blank" href="http://wildbunny.co.uk/blog/feed" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
rss.png" border="0" alt="
RSS" /> 
RSS</a></span>
</div></div>
<div class="bottom" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_bottom.gif');height:34px;width:329px;clear:both;float:left;">
<a id="grab" target="_blank" title="grab this" style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>
</div>
<div class="grab" style="width:329px;clear:both;float:left;"><a style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_grab.gif" /></a></div>
</div>







<div id="thsp-sticky-header">
	<div id="thsp-sticky-header-inner">
		<div id="thsp-sticky-header-title">
			<a href="http://www.wildbunny.co.uk/blog" title="Developer knowledge centre">Wildbunny blog</a>
		</div>
		
		<ul id="thsp-sticky-header-menu" class="menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul>	</div><!-- #thsp-sticky-header-inner -->
</div><!-- #thsp-sticky-header --><script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_js_w_globals=1&#038;qcABC=1&#038;ver=140105-140105-2848662513'></script>

			<!-- SwfObj: Register SWFs on this page. -->
			<script type="text/javascript">
					swfobject.registerObject("swfobj_0", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_1", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_2", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_3", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_4", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_5", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_6", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_7", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
			</script>
</body>
</html>

