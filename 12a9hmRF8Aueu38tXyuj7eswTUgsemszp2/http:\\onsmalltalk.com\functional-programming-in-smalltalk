http://onsmalltalk.com/functional-programming-in-smalltalk
HTTP/1.1 200 OK
Date: Tue, 22 Jul 2014 04:21:55 GMT
Server: KomHttpServer/7.1a (unix)
Expires: Wed, 11 Jun 1980 12:00:00 GMT
Pragma: no-cache
Author: Ramon Leon found at http://onsmalltalk.com
Cache-Control: no-cache, must-revalidate
Content-type: text/html;charset=utf-8
Set-Cookie: blog=C84zIB6S6uD4tLoT; path=/
Via: 1.0 onsmalltalk.com
Vary: Accept-Encoding
Content-Encoding: gzip
Connection: close

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><title>Functional Programming in Smalltalk</title><link rel="stylesheet" type="text/css" href="/seaside/files/WAStandardFiles/window.css"/><script type="text/javascript" src="/seaside/files/WAStandardFiles/externalAnchors.js"></script><script type="text/javascript" src="/seaside/files/WAStandardFiles/misc.js"></script><script type="text/javascript" src="/seaside/files/WAStandardFiles/shortcuts.js"></script><meta http-equiv="Content-Type" content="text/html;charset=utf-8; charset=utf-8"/><meta http-equiv="Content-Script-Type" content="text/javascript"/><link rel="alternate" type="application/atom+xml" title="On Smalltalk Atom Feed" href="/seaside/atomFeed"/><link rel="alternate" type="application/rss+xml" title="On Smalltalk RSS Feed" href="/seaside/rssFeed"/><link rel="stylesheet" type="text/css" href="/blogStyle.css"/><script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/prototype/1.6.0.2/prototype.js"></script><script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/scriptaculous/1.8.1/scriptaculous.js"></script><script type="text/javascript" src="/mainScript.js"></script><meta name="description" content="Smalltalk is generally considered to be an object oriented language but it's actually a mixture of object oriented and functional techniques that made it so great.  It's the functional stuff, closures..."/><meta name="keywords" content="Lisp Programming Ruby Smalltalk"/><link rel="stylesheet" type="text/css" href="/?_s=YzgcUg2QM03akBhC"/></head><body onload="onLoad()" onkeydown="onKeyDown(event)"><script type="text/javascript">/*<![CDATA[*/new PeriodicalExecuter(function(){new Ajax.Request('http://onsmalltalk.com/functional-programming-in-smalltalk',{'parameters':['_s=C84zIB6S6uD4tLoT','_k=8wQMWRgd','1'].join('&')})},81)/*]]>*/</script><div class="blog"><div id="header"><h1><a href="/">On Smalltalk</a></h1><div id="byLine">thoughts on Smalltalk and programming in general...</div></div><div id="commands" style="right: 2000px;"><a accesskey="l" href="http://onsmalltalk.com/functional-programming-in-smalltalk?_s=C84zIB6S6uD4tLoT&amp;_k=8wQMWRgd&amp;2">Login</a></div><table border="0" cellspacing="0" cellpadding="0" class="blogLayout"><tr><td valign="top" class="mainContent"><div id="posts"><div class="post"><h2><a href="/functional-programming-in-smalltalk">Functional Programming in Smalltalk</a></h2><p class="postMeta"> By Ramon Leon - 12 June 2007 under <a href="/lisp">Lisp</a>, <a href="/programming">Programming</a>, <a href="/ruby">Ruby</a>, <a href="/smalltalk">Smalltalk</a></p><div class="postBody"><p>Smalltalk is generally considered to be an object oriented language but it's actually a mixture of object oriented and functional techniques that made it so great.  It's the functional stuff, closures, anonymous functions, and higher order functions that make Smalltalk code so terse and easy to read.  The objects provide the overall structure, but the functional stuff glues them all together and makes Smalltalk what it is.</p><p>I was considering writing more about it but a quick Google search turned up this great reference <a href="http://www.exept.de:8080/doc/online/english/programming/stForLispers.html">Smalltalk for Lispers</a> from the Smalltalk/X Programmers Guide that gives an excellent introduction from a more functional point of view.</p><p>If you mix object oriented programming, manifest types, and procedural programming, you get Java or C#, not exactly a fun or flexible combination of language features.  Mix object oriented programming, dynamic types, and light functional programming and you get Smalltalk and Ruby, much more fun and much more flexible and productive.  </p><p>People often seem to forget "object" is meant as an abstract term that means "thing".  Object oriented programming is about programming with "things".  In that sense, functions are objects too.  Not all objects need be created with named classes, and all too often people who complain about OO are really complaining about their misguided view of OO and the often made newbie mistake of trying to model everything with a class.  It's not called class oriented programming, it's called object oriented programming.  Maybe approaching Smalltalk from a more functional point of view will shed some light on more interesting ways to solve problems.</p></div><div class="postInfo"></div><div class="relatedPosts"><h3>Related Posts</h3><ul><li><a href="/why-smalltalk">Why Smalltalk</a></li><li><a href="/on-the-smalltalk-browser">On the Smalltalk Browser</a></li><li><a href="/simple-file-based-application-configuration">Simple File Based Application Configuration</a></li><li><a href="/languages-of-the-gods">Languages of the Gods</a></li><li><a href="/sandstonedb-simple-activerecord-style-persistence-in-squeak">SandstoneDb, Simple ActiveRecord Style Persistence in Squeak</a></li></ul></div><a name="comments"></a><h3>Comments (automatically disabled after 1 year)</h3><div id="commentAjax"><div id="id3" class="comment"><div class="title"><a target="_new" href="http://peter-osburg.ehstpro.de/?p=32">Funktionale Programmierung mit Smalltalk | experienced WebProgramming</a>&nbsp;2596 days ago</div><div class="body"><p>[...] Functional Programming in Smalltalk (Ramon Leon) Link: Smalltalk/X Programmers [...] </p></div><div id="id4" class="meta"></div></div><div id="id5" class="comment"><div class="title"><a target="_new" href="http://www.systemsadvisers.com">hiren</a>&nbsp;2596 days ago</div><div class="body"><p>u use "#(1 2 3 4 5) collect:#odd" instead of "#(1 2 3 4 5) collect: [:x | x odd]" ? this is something i regularly use nowdays.</p><p>BTW Vassili have written nice entries about currying in Smalltalk :http://blog.3plus4.org/2007/03/23/currying-in-smalltalk/http://blog.3plus4.org/2007/03/24/currying-in-smalltalk-part-2/</p><p>Functional programming with "small" objects in Smalltalk is most fun :)</p><p>I feel very disgusted when some morons(some OO industry biggies included) talk that OO is biggest thing after Procedural programming and even dnt mention tht some most advanced techniques in OO are borrowed from functional programming.</p></div><div id="id6" class="meta"></div></div><div id="id7" class="comment"><div class="title"><a target="_new" href="http://www.systemsadvisers.com">hiren</a>&nbsp;2596 days ago</div><div class="body"><p>my mistake, please replace collect with select (was in sleeping mod)</p></div><div id="id8" class="meta"></div></div><div id="id9" class="comment"><div class="title"><strong>Jason</strong>&nbsp;2596 days ago</div><div class="body"><p>Good post.  I have been saying this for a while but I get a lot of disagreement from people.  But as you say, it is the high order functions that really make Smalltalk Smalltalk.</p><p>OO is basically a means of organizing code in a sensible, logical manner.  Mixed with procedural coding it does help, but mixed with functional programming.... now that's power.</p></div><div id="id10" class="meta"></div></div><div id="id11" class="comment"><div class="title"><a target="_new" href="http://onsmalltalk.com">Ramon Leon</a>&nbsp;2596 days ago</div><div class="body"><p>Yea, Vassili's blog is great, I wish he'd write more, I really enjoy his point of view on programming.</p><p>@hiren, that's called the symbol hack, it's pretty sweet, I use it as well, but it does have it's problems.  Vassili explains what they are pretty well on his blog.  Despites those rare issues, I dig and use that hack myself.</p><p>Most people don't realize how heavily inspired by Lisp Smalltalk was, that's too bad, they don't know what they're missing.  On the other hand... I don't exactly mind having that competitive advantage.  </p><p>If I see my competition using .Net or Java, I know I've got nothing to worry about.  Ruby, Python, or Pearl, OK, maybe they could be a little dangerous.  Smalltalk, Lisp, Haskell, or Erlang, OK, now that's real competition.</p></div><div id="id12" class="meta"></div></div><div id="id13" class="comment"><div class="title"><strong></strong>&nbsp;2596 days ago</div><div class="body"><p>ha ha u sounds liek PG. But consequence of that advantage is as Gilad says [1] poor fellows like me are forced to work with bad technology.</p><p>yaa i know about problems with symbol hack, but for unary selectors "Symbol &gt;&gt; value:" is perfectly fine.I just read about sections in Vassili's blog, it seems pretty cool for keyword selectors.</p><p>[1] http://gbracha.blogspot.com/2007/05/message-based-programming.html last comment</p></div><div id="id14" class="meta"></div></div><div id="id15" class="comment"><div class="title"><strong>hiren</strong>&nbsp;2596 days ago</div><div class="body"><p>Its me as Anonymous</p></div><div id="id16" class="meta"></div></div><div id="id17" class="comment"><div class="title"><a target="_new" href="http://www.surveymonkey.com/s.aspx?sm=H3Tk7Ho1186wC3taRdYZuw_3d_3d">MCOM graduate student</a>&nbsp;2578 days ago</div><div class="body"><p>Please take a moment to help with a quick six question survey about programmers and blogs.http://www.surveymonkey.com/s.aspx?sm=H3Tk7Ho1186wC3taRdYZuw<em>3d</em>3d</p></div><div id="id18" class="meta"></div></div></div></div></div></td><td valign="top" class="navigation"><div id="extras"><form accept-charset="utf-8" method="post" action="http://onsmalltalk.com/functional-programming-in-smalltalk" id="searchForm"><div><input tabindex="-1" value="Default" name="19" style="position: absolute; top: -100em" type="submit" class="submit"/></div><div id="search"><input onfocus="if(value=='Search'){value='';style.color=null}" style="color: #aaa" value="Search" name="20" type="text" class="text"/></div><div><input name="_s" value="C84zIB6S6uD4tLoT" type="hidden" class="hidden"/><input name="_k" value="8wQMWRgd" type="hidden" class="hidden"/></div></form><div id="categories"><h3>Topics</h3><ul><li><a href="/ajax">Ajax</a>&nbsp;(6)</li><li><a href="/apache">Apache</a>&nbsp;(5)</li><li><a href="/databases">Databases</a>&nbsp;(12)</li><li><a href="/gemstone">Gemstone</a>&nbsp;(2)</li><li><a href="/linux">Linux</a>&nbsp;(6)</li><li><a href="/lisp">Lisp</a>&nbsp;(9)</li><li><a href="/magritte">Magritte</a>&nbsp;(10)</li><li><a href="/performance">Performance</a>&nbsp;(8)</li><li><a href="/profiling">Profiling</a>&nbsp;(1)</li><li><a href="/programming">Programming</a>&nbsp;(39)</li><li><a href="/ruby">Ruby</a>&nbsp;(25)</li><li><a href="/seaside">Seaside</a>&nbsp;(64)</li><li><a href="/smalltalk">Smalltalk</a>&nbsp;(82)</li><li><a href="/sql">Sql</a>&nbsp;(13)</li><li><a href="/squeak">Squeak</a>&nbsp;(6)</li><li><a href="/updates">Updates</a>&nbsp;(9)</li></ul></div></div></td></tr></table><div id="pages"><a href="/about">about me</a>|<a href="/books-worth-reading">good books</a>|<a href="/top-posts">popular posts</a>|<a href="/seaside/atomFeed">atom</a>|<a href="/seaside/rssFeed">rss</a></div></div><div style="text-align: center" class="donate">Donate if you like this blog<br/><div>BTC: 12a9hmRF8Aueu38tXyuj7eswTUgsemszp2</div></div><script type="text/javascript">
		document.write(unescape("%3Cscript src='http://www.google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</script>
	<script type="text/javascript">	try {var pageTracker = _gat._getTracker("UA-118308-7"); pageTracker._trackPageview();} catch(err) {}</script><script type="text/javascript">/*<![CDATA[*/function onLoad(){}/*]]>*/</script></body></html>
