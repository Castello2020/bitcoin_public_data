http://www.theagricolas.org/craig/
HTTP/1.1 200 OK
Date: Tue, 22 Jul 2014 13:24:00 GMT
Server: Apache/2.2.20 (Ubuntu)
Last-Modified: Mon, 14 Jul 2014 01:27:15 GMT
ETag: "21d8cdc-45e7-4fe1d30ea22c0"
Accept-Ranges: bytes
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 6872
Connection: close
Content-Type: text/html

<html><head>
<title>Craig Agricola's Junk</title>
<meta name="keywords" content="Craig Agricola, Craig B. Agricola, Craig Barrett Agricola, Homepage"/>
</head><body>
<h2>Craig Agricola's Junk</h2>

Since <a href="http://theagricolas.org">theagricolas.org</a> has become our
family website, I need a place to put all the junk that has nowhere else to
go.  This is that place...

<p>

<table width="100%" cellpadding="0" cellspacing="0"><tr><td width="10%"/><td>
  <table width="100%" frame="border" rules="none">
    <tr><td align="center"><b>Sections</b></td></tr>
    <tr><td><ul>
      <li><a href="#Employment">Employment</a></li>
      <li><a href="#Crypto">Crypto</a></li>
      <li><a href="#Bitcoin">Bitcoin</a></li>
      <li><a href="#PatentApps">Patent Applications</a></li>
      <li><a href="#WebHacks">Web hacks for sharing</a></li>
      <li><a href="#PostscriptHacks">PostScript hacks for sharing</a></li>
      <li><a href="#SharingCode">Code for sharing</a></li>
      <li><a href="cheat_sheets">Cheat Sheets</a></li>
    </ul></td></tr>
  </table>
</td><td width="60%"/></tr></table>

<a name="Employment">
<h3>Employment</h3>
Should you be interested in hiring me, you may contact me at
<a href="mailto:craig (at) theagricolas.org">craig (at) theagricolas.org</a>.
<br>
If you would like to take a look at my resume, you can grab either the
<a href="Resume.pdf">PDF</a> or <a href="Resume.txt">TXT</a> format.

<a name="Crypto">
<h3>Crypto</h3>
My current public key can be grabbed <a href="gpg_public_key.asc">here</a>.
The key id is
<tt><a href="http://pool.sks-keyservers.net:11371/pks/lookup?op=index&search=0xE5ED38B154523D4D">
       0xE5ED38B154523D4D</a></tt>, and the fingerprint is
<tt>DDE1 71D7 C7E8 F1F0 1CED  4B8E E5ED 38B1 5452 3D4D</tt>.  If you have
something important enough to encrypt when sending it to me, or if you have
received something that I've signed, please
<a href="mailto:craig (at) theagricolas.org">email</a> me to confirm the
fingerprint and/or get a phone number where we can verify the fingerprint.

<a name="Bitcoin">
<h3>Bitcoin</h3>
<p>I'm hugely interested in <a href="http://bitcoin.org/">Bitcoin</a>, both as a
deployment of crypto, as well as a social movement.  I think the ability to
take control of the decision to
<a href="bitcoin/risk_mitigation_opt_out.html">not spend fees to mitigate risk in
online trades</a>, as well as the ability to trade much more anonymously is a
huge gap that Bitcoin is filling.</p>

<a name="btc_donate">
<p>If you find anything on this page useful, and are feeling charitable, I would be
delighted to receive BTC at my Bitcoin donation address:<br/>
<tt><a href="bitcoin:1AGriCoCBRbgca61ZJrqgVt78HJ94QXNcg?label=agricocb">
      1AGriCoCBRbgca61ZJrqgVt78HJ94QXNcg</a></tt>
(firstbits <a href="http://blockchain.info/address/1agricocb">1agricocb</a>)</p>

<p>Also, I participate in <a href="http://webchat.freenode.net/?channels=#bitcoin-otc">
#bitcoin-otc on Freenode</a>, and as part of the OTC Web of Trust, am registered
as
<a href="http://bitcoin-otc.com/viewratingdetail.php?nick=agricocb">agricocb</a>
with a separate GPG key id
<tt><a href="http://pool.sks-keyservers.net:11371/pks/lookup?op=vindex&search=0x0ADAC37F0E63E6E8">
      0x0ADAC37F0E63E6E8</a></tt>, and fingerprint<br/>
<tt>7A28 BF7E 5AF8 7D49 917E  4DE1 0ADA C37F 0E63 E6E8</a></tt>.</p>

<p>In the interest of promoting Bitcoin, I'm willing to act as a
<a href="bitcoin/BTV_BTC_exchanger.html">local exchanger</a> in the greater
Burlington, VT area.<br/>
I'm also listed on LocalBitcoins, if that's your poison, as
<a href="https://localbitcoins.com/accounts/profile/agricocb/">agricocb</a></p>

<a name="PatentApps">
<h3>Patent Applications</h3>
<table cellpadding="0" cellspacing="0"><tr><td width="2%"/><td>
  <table cellpadding="0" cellspacing="0"><tr><td>
    <table bgcolor="#ddeeff"><tr><td colspan="3">
      "A Method and Apparatus for Eliminating Instruction Pipeline Hardware
      Stall Logic Related to Data Access in a Central Processing Unit"
    </td></tr><tr><td width="5%"/><td align="center">
      <font size="-1"><i>I left IBM before this made it from IBM's lawyers to
                         the USPTO, and as far as I know, with nobody to follow
                         up on it, it was lost in the machine...</i></font>
    </td><td width="5%"/></tr></table>
  </td></tr><tr><td/></tr><tr><td>
    <table bgcolor="#ddf8f8"><tr><td colspan="3">
      "In the routing of data traffic to a common destination egress queue from
      a plurality of customer subscribers each contracting for respective
      allocations of bandwidth of data flow, a technique and system for fairly
      sharing any underutilized excess bandwidth and for data dropping amongst
      over-subscribers, while guaranteeing each subscriber its contracted-for
      bandwidth, and further enabling billing over-subscribers for their share
      of received excess bandwidth--all while maintaining the granularity of
      the contracted traffic flow."
    </td></tr><tr>
      <td align="center">
        <a href="Patent_US20050276219A1.pdf">Local copy of the PDF</a>
      </td><td align="center">
        <a href="http://appft1.uspto.gov/netacgi/nph-Parser?p=1&u=nobody&r=1&f=G&l=50&d=PG01&s1=20050276219">USPTO Database Lookup</a>
      </td><td width="40%"/>
    </tr></table>
  </td></tr></table>
</td><td width="25%"/></tr></table>

<a name="WebHacks">
<h3>Web hacks for sharing</h3>
<font size="-1">If you find any of this useful, please consider throwing a few BTC <a href="#btc_donate">my way</a>.<br/></font>
<table border="1" frame="border" rules="all" cellpadding="5">
<tr><td width="15%"><a href="zip4">zip4</a></td>
    <td>I have become addicted to <a href="http://www.mozilla.com/">Firefox</a>
        bookmark macros.  I love being able to type my search queries right
        into my URL bar.  For quite a while, I've wanted the same facility for
        the <a href="http://usps.com/zip4">USPS Zip+4 database</a>, but the
        only interface that they give to the database is a form that you have
        to fill out and submit.  Unfortunately, bookmark macros won't
        distribute the argument to multiple places in the target URL.  So, I
        created a tiny PHP script that parses it for you, and then redirects
        you to the appropriately constructed USPS URL.  Since
        <a href="http://yubnub.org">YubNub</a> provides bookmark macro
        functionality to all the other browsers too, I published the
        <tt>zip4</tt> command there too.<br>
        If you want to create a Firefox bookmark macro, click
        <a href="javascript:window.sidebar.addPanel('Zip+4 Lookup Macro',
                         'http://theagricolas.org/craig/zip4?%s','');">here</a>
        and select a spot to put the bookmark.  Then go into the "Bookmarks
        Manager", click on the bookmark, and then click on the "Properties..."
        button.  In the "Keyword:" field, put something like
        <tt>zip4</tt>.  Then you can enter things like
        <tt>zip4 1600 Ampitheatre Pkwy, Mountain View, CA</tt> into your URL
        bar and get the USPS Zip+4 lookup.</td></tr>
<tr><td><a href="image_bookmarklets.php">FireFox Image Bookmarklets</a></td>
    <td>A few quick and dirty bookmarklets for manipulating images in FireFox.
        They allow you to scale images to fit the width, height, or visible
        area of your browser, as well as rotate the images 90&deg; before
        scaling.  I threw them together because I find it to be a bit of
        a pain to view scanned documents in FireFox, since viewing them at
        full size requires a lot of side to side scrolling, and viewing them
        scaled to fit the window is usually too small to read.  But doing
        a Fit-to-Width is perfect, and if the page is layed out in a landscape
        format, rotating by 90&deg; and then doing a Fit-to-Width makes it
        much easier to read.</td></tr>
<!--<tr><td></td><td></td></tr>-->
</table>

<a name="PostscriptHacks">
<h3>PostScript hacks for sharing</h3>
<font size="-1">If you find any of this useful, please consider throwing a few BTC <a href="#btc_donate">my way</a>.<br/></font>
<table border="1" frame="border" rules="all" cellpadding="5">
<tr><td width="15%"><a href="RuledPrintingPaper/">Ruled Printing Paper</a></td>
    <td>This is just a simple PostScript hack that I threw together when I
	needed some paper for my kindergartener to practice her printing on.
	It has lines on it similar to what I remember from when I was a kid,
	with the two solid lines that define the top and bottom, and then a
	dashed line in between them to help guage the middle height.</td></tr>
<!--<tr><td></td><td></td></tr>-->
</table>

<a name="SharingCode">
<h3>Code for sharing</h3>
<font size="-1">If you find any of this useful, please consider throwing a few BTC <a href="#btc_donate">my way</a>.<br/></font>
<table border="1" frame="border" rules="all" cellpadding="5">
<tr><td width="15%"><a href="http://netjail.sourceforge.net">netjail</a></td>
    <td>My neglected SourceForge project.  Netjail is a pre-loadable library to
        foil outgoing net connections.  It's good for providing a sandbox
        to jail possible call-home software.</td></tr>
<tr><td><a href="http://search.cpan.org/~agricocb/X11-WM-Sawfish-0.03/">
        X11::WM::Sawfish</a></td>
    <td>My only contribution to CPAN so far, X11::WM::Sawfish provides access
        from Perl to the <a href="http://sawmill.sourceforge.net/">sawfish</a>
        window manager.  Both the X properties and the UNIX socket based methods
        are available, with the socket based mechanism falling back on the X
        properties method, so that you maintain the network transparency of
        X windows.  Since sawfish is controlled by evaluation of
        <a href="http://librep.sourceforge.net/">librep</a> (Lisp-based)
        forms, this simple module gives you complete control over the
        window manager, and should be future-proof, since all new functionality
        will still be accessible with the librep forms.</td></tr>
<tr><td><a href="code_sharing/bandwidth_monitor-1.4.tar.gz">bandwidth_monitor
        </a></td>
    <td>Polls /proc/net/dev (which probably limits its use to Linux) for the
        byte counts for a given network device, and calculates the RX and TX
        bandwidths.  Originally a shell script, then a Perl script, now
        rewritten in C so that it can easily be used on embedded devices like
        the Linksys WRT54G as well as.</td></tr>
<tr><td><a href="code_sharing/super_tee-1.5.tar.gz">super_tee</a></td>
    <td>Simply duplicates both the standard output and standard error streams
        from a command to a log file, while marking the lines in the log to
        indicate which stream the lines came from.  This is essentially the
        same idea as the standard UNIX <code>tee</code> command, except that in
        order to use the <code>tee</code> command for both streams requires
        that you lose the distinction between the two streams.
        <i>super_tee</i> solves this problem by invoking the command as a child
        of <i>super_tee</i>, rather than just piping the output of the command
        into it, as <code>tee</code> does.  Since the goal is to keep the
        differentiation in the output log between the two input streams,
        <i>super_tee</i> also has the nice property of untangling lines that
        may have been interleaved together from the two streams.  As an
        additional feature, timestamps can be added to each line as they are
        written to the log.</td></tr>
<tr><td><a href="code_sharing/x_idle_monitor-1.14.tar.gz">x_idle_monitor
        </a></td>
    <td>As I'm sure many other geeks do, I often find myself measuring my time
        by when I've taken breaks from the computer.  So, in order to know
        exactly when I've left the computer, I wrote this simple idle time
        monitor.  It uses the idle time from X windows, and when it exceeds
        a programable threshold, the time is logged.  When the idle time goes
        back to 0, the time is logged again.</td></tr>
<tr><td><a href="code_sharing/getopt_auto-1.3.tar.gz">getopt_auto</a></td>
    <td>A wrapper for the standard getopt_long() facility, just to make things
        that much easier.  It takes a data structure that describes the options
        and it takes care of the parsing of the values and printing of the
        help page.  Of course, with more things being taken care of, it adds
        additional limits, but for most of my quick n' dirty projects, this is
        all I need.</td></tr>
<tr><td><a href="code_sharing/raster2vector-1.25.tar.gz">raster2vector</a></td>
    <td>This project started because I wanted a scalable PostScript version
        of my signature, which I had scanned.  The tool takes an image in PNM
        format and creates PostScript code to trace over the non-white bits.
        This only really makes sense if the image input is an edge map (see
        canny_edge below to make an edge map from a regular image).  While
        writing this, it occurred to me that this is also a pretty good
        way to efficiently store scanned documents, assuming that you want
        a high resolution monochrome representation of the scanned page for
        storage.  The project still has plenty of room for improvement.
        Of course, after I had finished it to its current state, I found
        <a href="http://potrace.sourceforge.net/">potrace</a>, which is a very
        very similar, though much more mature, project.  As far as I can tell,
        the algorithms used are completely different however, so depending
        on the input and the desired use of the output, one might perform
        better than the other.  In my limited testing, my raster2vector
        produced significantly smaller output files, which is obviously better
        for archiving scanned documents, but it was by no means an exhaustive
        or objective study.
        </td></tr>
<tr><td><a href="code_sharing/canny_edge-1.3.tar.gz">canny_edge</a></td>
    <td>When looking for a piece of software to do Canny edge detection,
        I found <a href="http://www.arches.uga.edu/~yling/canny_src.txt">
        http://www.arches.uga.edu/~yling/canny_src.txt</a>, which seems to
        be a redistribution of <a href=
        "ftp://figment.csee.usf.edu/pub/Edge_Comparison/source_code/canny.src">
        ftp://figment.csee.usf.edu/pub/Edge_Comparison/source_code/canny.src</a>
        (linked from <a href=
        "http://marathon.csee.usf.edu/edge/edge_detection.html">
        http://marathon.csee.usf.edu/edge/edge_detection.html</a>),
        which has only two flaws, as far as my raster2vector project was
        concerned.  The first is that it is not implemented as a filter (image
        on stdin --&gt; edge map on stdout).  The second is that it is
        distributed as a few files concatenated in a text file, with no make
        file.  This is just a perl script to extract the source from the text
        file, patch it to function as a filter, and provide a
        Makefile.<br/>
        Update 2014Jul13: It appears that all of the above source links for
        canny.src seem to have disappeared over time, so I'm putting up the
        copy that I grabbed <a href="code_sharing/canny.src">here</a>.  If Mike
        Heath or Sudeep Sarkar, the original copyright holders, would like me
        to take this down, please contact me at <a href="mailto:craig (at)
        theagricolas.org">craig (at) theagricolas.org</a></td></tr>
<tr><td><a href="code_sharing/get_discover_ofx.pl">get_discover_ofx.pl</a></td>
    <td><a href="http://discovercard.com">Discover Card</a> has been
        intelligent enough to provide OFX (Online Financial Exchance standard)
        support for quite some time, though they expect you to use software
        like Microsoft Money or Quicken to access it.  The beauty of OFX,
        though, is that it is an open standard, and is based on XML, which
        means that there are plenty of ways to use the data without having to
        rely on a financial software package.  I wrote this so that I could get
        the raw OFX data.  If you are interested in actually looking at the
        returned OFX data, you might want to look below for PrettyPrintXML.pl,
        which will make it much easier to parse visually.</td></tr>
<tr><td><a href="code_sharing/PrettyPrintXML.pl">PrettyPrintXML.pl</a></td>
    <td>This is just a quick hack to format XML input with tags on their own
        lines (except for leaf tags, which are displayed on the same line as
        the data they contain) and indentation to make it easier to see
        containment.  This is a 5 line script, which uses
        XML::Grove::AsPrettyXML to do all the work.  XML::Grove::AsPrettyXML
        is almost entirely copied from Ken MacLeod's
        <a href="http://search.cpan.org/~kmacleod/XML-Grove-0.46alpha/lib/XML/Grove/AsCanonXML.pm">
        XML::Grove::AsCanonXML</a>, with only minor modifications, so instead
        of making it a new package, I just decided to include it with the
        application that I needed it for.</td></tr>
<!--<tr><td></td><td></td></tr>-->
</table>
<font size="-1">If you find any of this useful, please consider throwing a few BTC <a href="#btc_donate">my way</a>.<br/></font>

<br/>

<font size="-2">
  Since most search engines ignore META-keywords and comments now, I'll make
  sure to put all the combinations of my name, as well as the word "Homepage"
  here, in case anybody is interested in finding me.<br>
  Craig Agricola, Craig B. Agricola, Craig Barrett Agricola, Homepage
</font>

<p>All content on this page is copyright (C) 2001-2011 Craig B. Agricola</p>

</body></html>

