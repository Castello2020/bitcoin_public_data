http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/
HTTP/1.1 200 OK
Date: Wed, 23 Jul 2014 07:25:59 GMT
Server: Apache
Link: <http://wp.me/p20iQo-2w>; rel=shortlink
Expires: Wed, 23 Jul 2014 08:26:01 GMT
Pragma: public
Cache-Control: max-age=3600, public, must-revalidate, proxy-revalidate
X-Powered-By: W3 Total Cache/0.9.4
Content-Encoding: gzip
Vary: Accept-Encoding,User-Agent
X-Pingback: http://martin.ankerl.com/xmlrpc.php
Last-Modified: Wed, 23 Jul 2014 07:26:01 GMT
Etag: f2f4c750455c48860043f496f9a5df87
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html>
<!--[if IE 7]>
<html class="ie ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html class="ie ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 7) | !(IE 8) ]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<title>Two Word Anagram Finder Algorithm (in Ruby) | Martin Ankerl</title>
	<link rel="profile" href="http://gmpg.org/xfn/11">
	<link rel="pingback" href="http://martin.ankerl.com/xmlrpc.php">
	<!--[if lt IE 9]>
	<script src="http://martin.ankerl.com/wp-content/themes/twentyfourteen/js/html5.js?e08d73"></script>
	<![endif]-->
	<link rel="alternate" type="application/rss+xml" title="Martin Ankerl &raquo; Feed" href="http://martin.ankerl.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Martin Ankerl &raquo; Comments Feed" href="http://martin.ankerl.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Martin Ankerl &raquo; Two Word Anagram Finder Algorithm (in Ruby) Comments Feed" href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/feed/" />
<link rel='stylesheet' id='jetpack-subscriptions-css'  href="http://martin.ankerl.com/wp-content/plugins/jetpack/modules/subscriptions/subscriptions.css?e08d73" type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-widgets-css'  href="http://martin.ankerl.com/wp-content/plugins/jetpack/modules/widgets/widgets.css?e08d73" type='text/css' media='all' />
<link rel='stylesheet' id='twentyfourteen-lato-css'  href='//fonts.googleapis.com/css?family=Lato%3A300%2C400%2C700%2C900%2C300italic%2C400italic%2C700italic' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href="http://martin.ankerl.com/wp-content/plugins/jetpack/_inc/genericons/genericons.css?e08d73" type='text/css' media='all' />
<link rel='stylesheet' id='twentyfourteen-style-css'  href="http://martin.ankerl.com/wp-content/themes/twentyfourteen/style.css?e08d73" type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentyfourteen-ie-css'  href="http://martin.ankerl.com/wp-content/themes/twentyfourteen/css/ie.css?e08d73" type='text/css' media='all' />
<![endif]-->
<script type='text/javascript' src="http://martin.ankerl.com/wp-includes/js/jquery/jquery.js?e08d73"></script>
<script type='text/javascript' src="http://martin.ankerl.com/wp-includes/js/jquery/jquery-migrate.min.js?e08d73"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://martin.ankerl.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://martin.ankerl.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Job Interview Question: Sorting Records' href='http://martin.ankerl.com/2008/05/27/job-interview-question-sorting-records/' />
<link rel='next' title='ActionCam Damberg Kriterium' href='http://martin.ankerl.com/2008/08/30/actioncam-damberg-kriterium/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/' />
<link rel='shortlink' href='http://wp.me/p20iQo-2w' />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
	<style type="text/css" id="twentyfourteen-header-css">
			.site-title a {
			color: #81d742;
		}
		</style>
	
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Two Word Anagram Finder Algorithm (in Ruby)" />
<meta property="og:url" content="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/" />
<meta property="og:description" content="Today I have got some sourcecode for you. There is a little programming challenge named The Self-Documenting Code Contest that is quite fun, they try to find the cleanest and easiest to read code f..." />
<meta property="article:published_time" content="2008-08-09T19:32:30+00:00" />
<meta property="article:modified_time" content="2008-08-09T19:32:30+00:00" />
<meta property="article:author" content="http://martin.ankerl.com/author/martinus/" />
<meta property="og:site_name" content="Martin Ankerl" />
<meta property="og:image" content="http://wordpress.com/i/blank.jpg" />
<meta name="twitter:site" content="@jetpack" />
<meta name="twitter:card" content="summary" />
</head>

<body class="single single-post postid-156 single-format-standard custom-background header-image footer-widgets singular">
<div id="page" class="hfeed site">
		<div id="site-header">
		<a href="http://martin.ankerl.com/" rel="home">
			<img src="http://martin.ankerl.com/wp-content/uploads/2014/06/cropped-P1080410.jpg?e08d73" width="1260" height="409" alt="">
		</a>
	</div>
	
	<header id="masthead" class="site-header" role="banner">
		<div class="header-main">
			<h1 class="site-title"><a href="http://martin.ankerl.com/" rel="home">Martin Ankerl</a></h1>

			<div class="search-toggle">
				<a href="#search-container" class="screen-reader-text">Search</a>
			</div>

			<nav id="primary-navigation" class="site-navigation primary-navigation" role="navigation">
				<button class="menu-toggle">Primary Menu</button>
				<a class="screen-reader-text skip-link" href="#content">Skip to content</a>
				<div class="nav-menu"><ul><li class="page_item page-item-466"><a href="http://martin.ankerl.com/about/">About</a></li></ul></div>
			</nav>
		</div>

		<div id="search-container" class="search-box-wrapper hide">
			<div class="search-box">
				<form role="search" method="get" class="search-form" action="http://martin.ankerl.com/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" title="Search for:" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form>			</div>
		</div>
	</header><!-- #masthead -->

	<div id="main" class="site-main">

	<div id="primary" class="content-area">
		<div id="content" class="site-content" role="main">
			
<article id="post-156" class="post-156 post type-post status-publish format-standard hentry category-benchmark category-coding category-programming category-ruby category-tricks tag-programming tag-ruby">
	
	<header class="entry-header">
				<div class="entry-meta">
			<span class="cat-links"><a href="http://martin.ankerl.com/category/benchmark/" title="View all posts in benchmark" rel="category tag">benchmark</a>, <a href="http://martin.ankerl.com/category/coding/" title="View all posts in coding" rel="category tag">coding</a>, <a href="http://martin.ankerl.com/category/programming/" title="View all posts in programming" rel="category tag">programming</a>, <a href="http://martin.ankerl.com/category/ruby/" title="View all posts in ruby" rel="category tag">ruby</a>, <a href="http://martin.ankerl.com/category/tricks/" title="View all posts in tricks" rel="category tag">tricks</a></span>
		</div>
		<h1 class="entry-title">Two Word Anagram Finder Algorithm (in Ruby)</h1>
		<div class="entry-meta">
			<span class="entry-date"><a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/" rel="bookmark"><time class="entry-date" datetime="2008-08-09T20:32:30+00:00">August 9, 2008</time></a></span> <span class="byline"><span class="author vcard"><a class="url fn n" href="http://martin.ankerl.com/author/martinus/" rel="author">martinus</a></span></span>			<span class="comments-link"><a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comments" title="Comment on Two Word Anagram Finder Algorithm (in Ruby)">5 Comments</a></span>
					</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Today I have got some sourcecode for you. There is a little programming challenge named <a href="http://selfexplanatorycode.blogspot.com/">The Self-Documenting Code Contest</a> that is quite fun, they try to find the cleanest and easiest to read code for this task:</p>
<blockquote><p>
Write a program that generates all two-word anagrams of the string &#8220;documenting&#8221;. Here&#8217;s a word list you might want to use: <a href="http://martin.ankerl.com/wp-content/uploads/2008/08/wordlist.zip?e08d73">wordlist.zip</a>.</p>
<p>When you&#8217;re done, send the results to <a href="mailto:selfdocumenting@hotmail.com">selfdocumenting@hotmail.com</a>.</p>
<p>Good luck!
</p></blockquote>
<p>So this caught my interest and i wrote a little entry in Ruby that is 23 lines long with whitespace and very nice to read. But I won&#8217;t show you this code until the contest is over, and this is not the reason for this post. The reason is, that the nice version takes about 2 seconds, and somebody else has coded a Python solution that takes only 1 second (I have no idea what his code looks like). This post is about a fast anagram finding algorithm, and how I developed this algorithm. The final result takes about 0.11 seconds.</p>
<h1>Algorithm</h1>
<p>The most basic algorithm has two phases:</p>
<ol>
<li>Read in the file
<li>Build all combinations of two words and compare the letter count with the query.
</ol>
<p>Building the combinations is usually done with two nested loops and takes O(n^2) runtime. This is slow, so I have added another step in between:</p>
<h2>Idea #1: Filter out Candidate Words</h2>
<p>The second step is really slow, but it would be a lot faster if it has to handle less words. So I wrote a little filtering step that lets only words through which are made out of the same letters as the query word.</p>
<p>For example when the query is <tt>documenting</tt>, the word <tt>men</tt> or <tt>go</tt> and even <tt>too</tt> are extracted, even if the number of letters might not match. But that&#8217;s not important, what is important is that the number of possible words are reduced a lot, and so the next phase is faster.</p>
<h2>Idea #2: Use a Commutative Hashing Function</h2>
<p>String comparisons are slow. To common way to find out if the strings <tt>coming</tt> with <tt>tuned</tt> is an anagram of the word <tt>documenting</tt> is to sort the letters and make a comparison, like this:<br />
[sourcecode language="ruby"]<br />
irb(main):003:0&gt; &quot;documenting&quot;.unpack(&quot;c*&quot;).sort.pack(&quot;c*&quot;)<br />
=&gt; &quot;cdegimnnotu&quot;<br />
irb(main):004:0&gt; (&quot;coming&quot; + &quot;tuned&quot;).unpack(&quot;c*&quot;).sort.pack(&quot;c*&quot;)<br />
=&gt; &quot;cdegimnnotu&quot;<br />
[/sourcecode]<br />
The strings are equal, so we have a match. But this comparison is terribly slow! What&#8217;s worse, the computations have to be redone for each match. It would be much better to just compare hash values, and find a hash function to quickly check if we might have a match, and only do the string comparison when the hash check matches. The hash has to be good enough that we don&#8217;t have too much false positives (hashes are equal but the real comparisons not) to get a speed advantage. So why not just sum up all the letters bytes?<br />
[sourcecode language="ruby"]<br />
irb(main):005:0&gt; &quot;documenting&quot;.sum<br />
=&gt; 1181<br />
irb(main):006:0&gt; &quot;coming&quot;.sum + &quot;tuned&quot;.sum<br />
=&gt; 1181<br />
[/sourcecode]<br />
Ruby&#8217;s <a href="http://www.ruby-doc.org/core/classes/String.html#M000857">String#sum</a> does exactly this. we can now precalculate the sum for each word, and to find a match we just add the two hashes and compare the result to the query&#8217;s hash:<br />
[sourcecode language="ruby"]<br />
irb(main):007:0&gt; query=&quot;documenting&quot;; first=&quot;coming&quot;; second=&quot;tuned&quot;<br />
=&gt; &quot;tuned&quot;<br />
irb(main):008:0&gt; first.sum + second.sum == query.sum<br />
=&gt; true<br />
[/sourcecode]<br />
When this very quick check returns true, we have to do the string comparison to be absolutely sure it is a match. This considerably speeds up the whole program, but it is still O(n^2).</p>
<h2>Idea #3: Reformulate Problem</h2>
<p>Now here comes the trickiest and coolest part. Since Idea #2 the slowest part is matching the numbers, with still quadratic complexity. But the hard task is not anagram finding any more, we have reduced it to finding two hashes that combined have the same hash as the query. We can reformulate this problem into something completely detached from the anagram problem:</p>
<blockquote><p>
Given a list of numbers, find all combination of two numbers that add up to a given number
</p></blockquote>
<p>When we concentrate on just this problem and ignore the rest, we might come up with a better way of doing things.</p>
<p>I came up with a fast solution, described below. Somebody posted a better solution that is both faster and simpler, if you want just this final solution <a href="#idea4">skip ahead to Idea #4</a> as the following description is outdated.</p>
<p>It clearly looks stupid to just try all combinations to add the numbers.<br />
So lets sort them first. Quicksort is fast, especially with numbers, so no worries here. Now consider a list of numbers like this example:</p>
<pre>1   3   7   10   10   12   17   20   22   23   24   24   25   26   30</pre>
<p>Find all the combinations of two number that add up to 27. They are</p>
<ul>
<li>1 + 26 = 27
<li>3 + 24 = 27
<li>7 + 20 = 27
<li>10 + 17 = 27
<li>10 + 17 = 27 (a second time)
</ul>
<p>You can detect a pattern here: the first number always increases, the second number always decreases! We can now formulate an algorithm for this:</p>
<p>We can have two pointers to the array, one starting from the left side, the other starting from the right side. When the numbers behind the pointers add up to a bigger result than the query (e.g. 1 + 30 = 31), we decrease the right pointer to find a smaller combination (1 + 26 = 27). When the sums are too small (1 + 25 = 26), we move the left pointer to the right (3 + 25 = 28).</p>
<p>This way we walk through the whole array in O(n) time and the sum of the pointers is always kept as close the the desired result as possible. When the pointers meet each other, we can stop the whole process or otherwise we would just reverse the words.</p>
<p>This algorithm gets a bit more complicated when you consider that we might have lots of numbers in it that are equal, whenever this happens you have to fall back into an O(n^2) matching algorithm for just this section.</p>
<h2><a name="idea4"></a>Idea #4: Use Hash directly</h2>
<p><b>UPDATE</b> Scrap the implementation in idea #3. A blog post here from a reader of this article posted a way to do this really in O(n), without any sorting which is O(n*log(n)). The idea is to use a hashmap that maps from the hash key of the word to its matches:<br />
[sourcecode language="ruby"]<br />
M = {}<br />
S = the target sum<br />
for each element e in the list<br />
      if M[S-e] exists? (e,S-e) is a pair<br />
      add e to the M<br />
[/sourcecode]<br />
Just use a Hashmap that maps from the cummulative hash of a word to a list of words that have the same hash. Whenever a new word is added, get the list of words that is stored under <tt>query.sum - current_word.sum</tt>. When the hashes are the same we just have to create a list of all the matches under this key, and check each of the matches sequentially for equality. This is just normal hash collision handling through a linked list. That&#8217;s very simple and works like a charm.</p>
<p>I have revised the code, it got both simpler and faster. That&#8217;s a win-win situation, wohoo!</p>
<h1>The Sourcecode</h1>
<p>I hope the code is understandable now with the above explanation. If you have any questions or ideas, please share them here!</p>
<p>[sourcecode language="ruby"]<br />
#!/usr/bin/ruby</p>
<p># created by Martin Ankerl http://martin.ankerl.com/</p>
<p>class String<br />
	# creates an array of characters<br />
	def letters<br />
		unpack(&quot;c*&quot;)<br />
	end<br />
end</p>
<p>class Array<br />
	# converts an array of letters back into a String<br />
	def word<br />
		pack(&quot;c*&quot;)<br />
	end<br />
end</p>
<p>query = &quot;documenting&quot;<br />
query_letters_sorted = query.letters.sort<br />
txt = File.read(&#8216;wordlist.txt&#8217;).downcase</p>
<p># to quickly check if a letter is part of the query word<br />
used_letters = Array.new(256, nil)<br />
query_letters_sorted.each do |letter|<br />
	used_letters[letter] = true<br />
end</p>
<p># Maps from cummulative hash of a word to a list of words that have this hash code.<br />
hashToWords = Hash.new do |hash, key|<br />
	hash[key] = Array.new<br />
end</p>
<p>query_hash = query.sum</p>
<p>prev = 0<br />
txt_size = txt.size<br />
separator = 10<br />
idx = txt.index(separator, prev)<br />
while prev &lt; txt_size</p>
<p>	letter_idx = prev</p>
<p>	# no need to check end of word because it is \n<br />
	# which is not part of the word anyways<br />
	while used_letters[txt[letter_idx]]<br />
		letter_idx += 1<br />
	end</p>
<p>	# ignore word if the above quick check fails<br />
	if letter_idx == idx<br />
		word = txt[prev, idx-prev]</p>
<p>		# check all key matches<br />
		key = word.sum<br />
		hashToWords[query_hash - key].each do |other_word|<br />
			if (word.letters + other_word.letters).sort == query_letters_sorted<br />
				puts &quot;#{word} #{other_word}&quot;<br />
				puts &quot;#{other_word} #{word}&quot;<br />
			end<br />
		end</p>
<p>		# insert word<br />
		hashToWords[key] &lt;&lt; word<br />
	end</p>
<p>	prev = idx + 1</p>
<p>	# no need to check end of file because we have to end with new line<br />
	idx = txt.index(separator, prev)<br />
end<br />
[/sourcecode]</p>
<p>When you rewrite the algorithm in C++ or Java or Python I am sure it will be faster than this one. But this is not the point of this post. The point is, &#8220;The Best Optimizer is between Your Ears&#8221; (Michael Abrash, <a href="http://www.byte.com/abrash/">Graphics Programming Black Book</a>).</p>
<p>Have fun!</p>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta"><span class="tag-links"><a href="http://martin.ankerl.com/tag/programming/" rel="tag">programming</a><a href="http://martin.ankerl.com/tag/ruby/" rel="tag">ruby</a></span></footer></article><!-- #post-## -->
	<nav class="navigation post-navigation" role="navigation">
		<h1 class="screen-reader-text">Post navigation</h1>
		<div class="nav-links">
			<a href="http://martin.ankerl.com/2008/05/27/job-interview-question-sorting-records/" rel="prev"><span class="meta-nav">Previous Post</span>Job Interview Question: Sorting Records</a><a href="http://martin.ankerl.com/2008/08/30/actioncam-damberg-kriterium/" rel="next"><span class="meta-nav">Next Post</span>ActionCam Damberg Kriterium</a>		</div><!-- .nav-links -->
	</nav><!-- .navigation -->
	
<div id="comments" class="comments-area">

	
	<h2 class="comments-title">
		5 thoughts on &ldquo;Two Word Anagram Finder Algorithm (in Ruby)&rdquo;	</h2>

	
	<ol class="comment-list">
				<li id="comment-610" class="comment even thread-even depth-1">
			<article id="div-comment-610" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/1fdbadd832ce6c6656788bd1ab7f419e?s=34&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D34&amp;r=G' class='avatar avatar-34 photo' height='34' width='34' />						<b class="fn">A</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-610">
							<time datetime="2008-08-10T07:30:23+00:00">
								August 10, 2008 at 7:30 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>&#8220;Given a list of numbers, find all combination of two numbers that add up to a given number &#8220;,</p>
<p>You trade memory for speed and make this faster.</p>
<p>can be solved using a hashmap in O(n)</p>
<p>soln:</p>
<pre>M = {}
S = the target sum
for each element e in the list
      if M[S-e] exists? (e,S-e) is a pair
      add e to the M</pre>
<p>This will be ammortized O(n) -</p>
<p>Caveat: if there is more than 1 repeat this may need tweaking..i.e. 1,2,2,2,3<br />
with sum S=4<br />
the pairs from the algo above are (2,2), (2,2) and (3,1)<br />
in reality it is (2,2), (2,2) , (2,2) and (3,1)<br />
3 pairs of 2s because there are 3C2 ways of choosing a pair of 2s from three 2s.</p>
				</div><!-- .comment-content -->

				<div class="reply">
					<a class='comment-reply-link' href='/2008/08/09/two-word-anagram-finder-algorithm/?replytocom=610#respond' onclick='return addComment.moveForm("div-comment-610", "610", "respond", "156")'>Reply</a>				</div><!-- .reply -->
			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-611" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-611" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/fae1704291b10722d46c592ffed1815a?s=34&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D34&amp;r=G' class='avatar avatar-34 photo' height='34' width='34' />						<b class="fn"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-611">
							<time datetime="2008-08-10T07:46:49+00:00">
								August 10, 2008 at 7:46 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Great idea A, thanks! This should be even faster. I will try this next week when I am back from my holidays.</p>
<p>UPDATE Ok I have just implemented your idea, and the result is a much simpler and faster code. Thanks again, I have also updated the blog entry above and added the new code. This does not really need much tweaking when there are more than one match, just keep a list of all the matches and try each of these, just like normal hash collision handling.</p>
				</div><!-- .comment-content -->

				<div class="reply">
					<a class='comment-reply-link' href='/2008/08/09/two-word-anagram-finder-algorithm/?replytocom=611#respond' onclick='return addComment.moveForm("div-comment-611", "611", "respond", "156")'>Reply</a>				</div><!-- .reply -->
			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-612" class="comment even thread-even depth-1">
			<article id="div-comment-612" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/fae1704291b10722d46c592ffed1815a?s=34&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D34&amp;r=G' class='avatar avatar-34 photo' height='34' width='34' />						<b class="fn"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-612">
							<time datetime="2008-08-10T08:35:46+00:00">
								August 10, 2008 at 8:35 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>On second thought, there is a way to get rid of the linked list search that is required when words have the same hash key. This is just a braindump of me and might be gibberish and not work at all but I don&#8217;t want to forget it while Im on holiday.</p>
<p>A possible way to get rid of the linked list search is to use <a href="http://en.wikipedia.org/wiki/Cuckoo_hashing" rel="nofollow">cuckoo hashing</a>. We just need another cummulative hash function (e.g. XOR of the letters), then we should be able to get rid of the filtering and have O(n) build up speed, and O(1) query speed. Will look into this next week.</p>
				</div><!-- .comment-content -->

				<div class="reply">
					<a class='comment-reply-link' href='/2008/08/09/two-word-anagram-finder-algorithm/?replytocom=612#respond' onclick='return addComment.moveForm("div-comment-612", "612", "respond", "156")'>Reply</a>				</div><!-- .reply -->
			</article><!-- .comment-body -->
</li><!-- #comment-## -->
		<li id="comment-6780" class="comment odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-6780" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://0.gravatar.com/avatar/c8cbd867c0df86570fd293ac196a9d86?s=34&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D34&amp;r=G' class='avatar avatar-34 photo' height='34' width='34' />						<b class="fn">Ajay Kumar Sahu</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-6780">
							<time datetime="2013-08-08T09:29:00+00:00">
								August 8, 2013 at 9:29 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>word1 = &#8220;madam&#8221;<br />
word2 = &#8220;adamm&#8221;</p>
<p>puts  word1.sum == word2.sum ?  &#8216;It&#8217;s an Anagram !&#8217;  :  &#8216;Better Luck Next Time!!!&#8217;</p>
<p>Can this get better ?</p>
				</div><!-- .comment-content -->

				<div class="reply">
					<a class='comment-reply-link' href='/2008/08/09/two-word-anagram-finder-algorithm/?replytocom=6780#respond' onclick='return addComment.moveForm("div-comment-6780", "6780", "respond", "156")'>Reply</a>				</div><!-- .reply -->
			</article><!-- .comment-body -->
<ol class="children">
		<li id="comment-6781" class="comment even depth-2">
			<article id="div-comment-6781" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='http://1.gravatar.com/avatar/fae1704291b10722d46c592ffed1815a?s=34&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D34&amp;r=G' class='avatar avatar-34 photo' height='34' width='34' />						<b class="fn"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-6781">
							<time datetime="2013-08-08T09:41:00+00:00">
								August 8, 2013 at 9:41 am							</time>
						</a>
											</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>Just using .sum to check if a word is an anagram does not work, e.g. &#8220;bla&#8221;.sum == 303 and &#8220;ama&#8221;.sum is also 303.</p>
				</div><!-- .comment-content -->

				<div class="reply">
					<a class='comment-reply-link' href='/2008/08/09/two-word-anagram-finder-algorithm/?replytocom=6781#respond' onclick='return addComment.moveForm("div-comment-6781", "6781", "respond", "156")'>Reply</a>				</div><!-- .reply -->
			</article><!-- .comment-body -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	</ol><!-- .comment-list -->

	
	
	
									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2008/08/09/two-word-anagram-finder-algorithm/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://martin.ankerl.com/wp-comments-post.php" method="post" id="commentform" class="comment-form" novalidate>
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="email" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="url" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='156' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="5f631f4a94" /></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments">Notify me of follow-up comments by email.</label></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog">Notify me of new posts by email.</label></p><script type='text/javascript' src="http://martin.ankerl.com/wp-content/plugins/akismet/_inc/form.js?e08d73"></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="146"/></p>					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->
		</div><!-- #content -->
	</div><!-- #primary -->

<div id="content-sidebar" class="content-sidebar widget-area" role="complementary">
	<aside id="text-8" class="widget widget_text"><h1 class="widget-title">Bitcoins are Awesome</h1>			<div class="textwidget"><script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
	wallet_address: "1By7kt5ZCCER6YXZYcDyfbh9fj89VJMvsq"
	, currency: "bitcoin"
	, counter: "amount"
	, alignment: "bl"
	, qrcode: true
	, auto_show: false
	, lbl_button: "Donate"
	, lbl_address: ""
	, lbl_count: "donations"
	, lbl_amount: "BTC"
});
</script></div>
		</aside><aside id="recent-comments-3" class="widget widget_recent_comments"><h1 class="widget-title">Recent Comments</h1><ul id="recentcomments"><li class="recentcomments">Sukhman on <a href="http://martin.ankerl.com/2006/05/01/particle-swarm-optimization/#comment-6793">Particle Swarm Optimization</a></li><li class="recentcomments"><a href='http://www.gonwan.com/?p=74' rel='external nofollow' class='url'>Compact Gnome Theme in Hardy | ????</a> on <a href="http://martin.ankerl.com/2008/10/10/how-to-make-a-compact-gnome-theme/#comment-6792">How to Make a Compact Gnome Theme</a></li><li class="recentcomments"><a href='http://blog.recursiveprocess.com/2014/03/19/chaos-game-v2/' rel='external nofollow' class='url'>Chaos Game v2 &raquo; A Recursive Process</a> on <a href="http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/#comment-6791">How to Generate Random Colors Programmatically</a></li><li class="recentcomments">Ayyaz Shaukat on <a href="http://martin.ankerl.com/2005/11/30/howto-create-manifestmf-classpath-from-ant/#comment-6790">HOWTO Create MANIFEST.MF Classpath From Ant</a></li><li class="recentcomments"><a href='http://myflorencefreetrees.com/computer-themes-beautiful-photos/' rel='external nofollow' class='url'>Computer Themes Beautiful Photos | Digital Dominance</a> on <a href="http://martin.ankerl.com/2008/05/13/human-compact-gnome-theme/#comment-6789">Human Compact Gnome Theme (for Ubuntu 8.04)</a></li><li class="recentcomments">Malcom Miles on <a href="http://martin.ankerl.com/2011/06/06/smallest-working-qr-code/#comment-6782">Smallest working QR Code</a></li><li class="recentcomments"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a> on <a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-6781">Two Word Anagram Finder Algorithm (in Ruby)</a></li><li class="recentcomments">Ajay Kumar Sahu on <a href="http://martin.ankerl.com/2008/08/09/two-word-anagram-finder-algorithm/#comment-6780">Two Word Anagram Finder Algorithm (in Ruby)</a></li><li class="recentcomments">Tom Hallman on <a href="http://martin.ankerl.com/2005/11/30/howto-create-manifestmf-classpath-from-ant/#comment-6779">HOWTO Create MANIFEST.MF Classpath From Ant</a></li><li class="recentcomments"><a href='http://ubuntu.jamesnsheri.com/2012/10/10/installing-a-new-theme-on-12-04/' rel='external nofollow' class='url'>Installing a new theme on 12.04 | Ubuntu InfoUbuntu Info</a> on <a href="http://martin.ankerl.com/2007/11/04/clearlooks-compact-gnome-theme/#comment-6778">Clearlooks Compact Gnome Theme</a></li><li class="recentcomments"><a href='http://wyldeplayground.net/installing-a-new-theme-on-12-04/' rel='external nofollow' class='url'>Installing a new theme on 12.04 | WyldePlayground.netWyldePlayground.net -</a> on <a href="http://martin.ankerl.com/2007/11/04/clearlooks-compact-gnome-theme/#comment-6777">Clearlooks Compact Gnome Theme</a></li><li class="recentcomments"><a href='http://blog.spiralofhope.com/411-9x15-versus-dosemus-vga.html' rel='external nofollow' class='url'>9&#215;15 versus DOSEMU&#8217;s vga | spiralofhope</a> on <a href="http://martin.ankerl.com/2007/09/01/comprehensive-linux-terminal-performance-comparison/#comment-6776">Comprehensive Linux Terminal Performance Comparison</a></li><li class="recentcomments">Mary on <a href="http://martin.ankerl.com/2012/01/15/low-carb-high-fat-big-video-roundup/#comment-6775">Low Carb High Fat &#8212; Big Video Roundup</a></li><li class="recentcomments"><a href='http://www.LimitlessMindset.com/' rel='external nofollow' class='url'>Jonathan Roseland</a> on <a href="http://martin.ankerl.com/2011/09/30/single-n-back/#comment-6774">Single N-Back</a></li><li class="recentcomments"><a href='http://cashup4life.com/cool-computer-themes-pictures/' rel='external nofollow' class='url'>Cool Computer Themes pictures | Adware</a> on <a href="http://martin.ankerl.com/2008/05/13/human-compact-gnome-theme/#comment-6773">Human Compact Gnome Theme (for Ubuntu 8.04)</a></li><li class="recentcomments"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a> on <a href="http://martin.ankerl.com/2007/01/05/three-laws-of-software-development/#comment-6771">Three Laws of Software Development</a></li><li class="recentcomments">richardchaven on <a href="http://martin.ankerl.com/2007/01/05/three-laws-of-software-development/#comment-6770">Three Laws of Software Development</a></li><li class="recentcomments"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a> on <a href="http://martin.ankerl.com/2007/01/09/textanalyzer-automatically-extract-characteristic-words/#comment-6769">TextAnalyzer &#8211; Automatically Extract Characteristic Words</a></li><li class="recentcomments">Attilio Altieri on <a href="http://martin.ankerl.com/2007/01/09/textanalyzer-automatically-extract-characteristic-words/#comment-6768">TextAnalyzer &#8211; Automatically Extract Characteristic Words</a></li><li class="recentcomments"><a href='http://martin.ankerl.com/' rel='external nofollow' class='url'>Martin Ankerl</a> on <a href="http://martin.ankerl.com/2007/01/09/textanalyzer-automatically-extract-characteristic-words/#comment-6767">TextAnalyzer &#8211; Automatically Extract Characteristic Words</a></li></ul></aside></div><!-- #content-sidebar -->
<div id="secondary">
		<h2 class="site-description">Chunky bacon!!</h2>
	
	
		<div id="primary-sidebar" class="primary-sidebar widget-area" role="complementary">
				<aside id="recent-posts-4" class="widget widget_recent_entries">		<h1 class="widget-title">Recent Posts</h1>		<ul>
					<li>
				<a href="http://martin.ankerl.com/2014/06/16/bin-picking/">Bin Picking</a>
							<span class="post-date">June 16, 2014</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2014/06/16/via-ferrata-drachenwand-2013/">Via Ferrata Drachenwand 2013</a>
							<span class="post-date">June 16, 2014</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/11/14/calculate-how-much-of-what-you-should-eat/">Calculate How Much Of What You Should Eat</a>
							<span class="post-date">November 14, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/07/28/actioncam-videos/">Actioncam Videos</a>
							<span class="post-date">July 28, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/06/24/cholesterol-and-heart-disease/">Cholesterol and Heart Disease</a>
							<span class="post-date">June 24, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/06/07/freearc-compression-settings/">FreeArc Compression Settings</a>
							<span class="post-date">June 7, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/06/07/your-brain-on-a-ketogenic-diet/">Your Brain on a Ketogenic Diet</a>
							<span class="post-date">June 7, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/02/25/reconstructme-public-beta/">ReconstructMe Public Beta</a>
							<span class="post-date">February 25, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/02/05/everything-here-under-creative-commons/">Everything here under Creative Commons</a>
							<span class="post-date">February 5, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/01/25/optimized-approximative-pow-in-c-and-cpp/">Optimized Approximative pow() in C / C++</a>
							<span class="post-date">January 25, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/01/15/chunky-bacon/">Chunky bacon</a>
							<span class="post-date">January 15, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/01/15/low-carb-high-fat-big-video-roundup/">Low Carb High Fat &#8212; Big Video Roundup</a>
							<span class="post-date">January 15, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/01/06/relative-risk-for-dummies/">Relative Risk for Dummies</a>
							<span class="post-date">January 6, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2012/01/04/health-software-engineering/">Health &#038; Software Engineering</a>
							<span class="post-date">January 4, 2012</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2011/11/15/solving-the-instagram-challenge-quickly/">Quickly Solving the &#8220;Instagram Engineering Challenge: The Unshredder&#8221;</a>
							<span class="post-date">November 15, 2011</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2011/10/13/here-is-a-quick-list-of-application/">Here is a quick list of application&hellip;</a>
							<span class="post-date">October 13, 2011</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2011/09/30/single-n-back/">Single N-Back</a>
							<span class="post-date">September 30, 2011</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2011/06/13/download-bitcoin-logos/">Download Bitcoin Logos</a>
							<span class="post-date">June 13, 2011</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2011/06/06/smallest-working-qr-code/">Smallest working QR Code</a>
							<span class="post-date">June 6, 2011</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2011/04/30/looking-for-something-new/">Looking for something new?</a>
							<span class="post-date">April 30, 2011</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2010/12/10/cleverness-considered-harmful/">Cleverness Considered Harmful</a>
							<span class="post-date">December 10, 2010</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/12/23/svn-shortlog-compact-beautiful-subversion-changelog/">svn-shortlog &#8212; Compact &amp; Beautiful Subversion Changelog</a>
							<span class="post-date">December 23, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/">How to Generate Random Colors Programmatically</a>
							<span class="post-date">December 9, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/11/15/how-to-download-any-flash-video-with-flashrip-in-ubuntu/">How To: Download Any Flash Video with flashrip in Ubuntu</a>
							<span class="post-date">November 15, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/11/13/irob-feeder-in-action-video/">iRob Feeder in Action (Video)</a>
							<span class="post-date">November 13, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/05/22/online-password-encrypter-for-apache/">Online Password Encrypter for Apache</a>
							<span class="post-date">May 22, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/05/13/scientific-approach-to-green-tea-prepreation/">Scientific Approach to Green Tea Preparation</a>
							<span class="post-date">May 13, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/04/16/java-challenge-the-mysterious-method-wrapper/">Java Challenge &#8211; The Mysterious Method Wrapper</a>
							<span class="post-date">April 16, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/01/22/beautiful-font-hinting-in-ubuntu-810/">Beautiful Font Hinting in Ubuntu 8.10 and 9.04</a>
							<span class="post-date">January 22, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/01/05/java-15-collections-hierarchy-graph/">Java 1.5 Collections Hierarchy Graph</a>
							<span class="post-date">January 5, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2009/01/05/approximation-of-sqrtx-in-java/">Approximation of sqrt(x) in Java</a>
							<span class="post-date">January 5, 2009</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/12/31/why-the-zune-crashes/">Why the Zune crashes?</a>
							<span class="post-date">December 31, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/12/27/top-10-posts-of-2008/">Top 10 Posts of 2008</a>
							<span class="post-date">December 27, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/12/25/ripping-multilanguage-dvds-with-subtitles-using-only-mencoder/">Ripping Multilanguage DVDs with Subtitles using Mencoder</a>
							<span class="post-date">December 25, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/12/22/amazing-caching-proxy-in-java/">Amazing Caching Proxy in Java</a>
							<span class="post-date">December 22, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/11/04/human-compact-themes-for-ubuntu-810/">Human Compact Themes (for Ubuntu 8.10)</a>
							<span class="post-date">November 4, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/10/10/how-to-make-a-compact-gnome-theme/">How to Make a Compact Gnome Theme</a>
							<span class="post-date">October 10, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/10/04/create-high-quality-flash-videos-in-ubuntu/">Create High Quality Flash Videos in Ubuntu</a>
							<span class="post-date">October 4, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/09/29/via-ferretta-teufelsteig/">Via Ferrata Teufelsteig</a>
							<span class="post-date">September 29, 2008</span>
						</li>
					<li>
				<a href="http://martin.ankerl.com/2008/08/30/actioncam-damberg-kriterium/">ActionCam Damberg Kriterium</a>
							<span class="post-date">August 30, 2008</span>
						</li>
				</ul>
		</aside>	</div><!-- #primary-sidebar -->
	</div><!-- #secondary -->

		</div><!-- #main -->

		<footer id="colophon" class="site-footer" role="contentinfo">

			
<div id="supplementary">
	<div id="footer-sidebar" class="footer-sidebar widget-area" role="complementary">
		<aside id="text-6" class="widget widget_text">			<div class="textwidget"><a rel="license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" class="aligncenter" style="border-width:0" src="http://martin.ankerl.com/wp-content/uploads/2012/02/88x31.png?e08d73" width="88" height="31" /></a> This <span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" rel="dct:type">work</span> is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/3.0/">Creative Commons Attribution 3.0 Unported License</a>.</div>
		</aside><aside id="linkcat-2" class="widget widget_links"><h1 class="widget-title">Friends</h1>
	<ul class='xoxo blogroll'>
<li><a href="http://www.fsmat.at/~bkabelka/" title="ex colleague at PROFACTOR">Bernhard Kabelka</a></li>
<li><a href="http://cheind.wordpress.com/" title="colleague and friend">Christoph Heindl</a></li>

	</ul>
</aside>
<aside id="linkcat-108" class="widget widget_links"><h1 class="widget-title">Sites</h1>
	<ul class='xoxo blogroll'>
<li><a href="http://aikidoschule.at/" title="Aikido Schule Steyr">Aikido Schule Steyr</a></li>
<li><a href="http://javadoc.ankerl.com/" title="Searches Java JDK">Javadoc Search Engine</a></li>
<li><a href="http://opensource.ankerl.com/" title="Searches all major and many minor open source hosting sites. The sites are updated regularly.">Open Source Search Engine</a></li>

	</ul>
</aside>
	</div><!-- #footer-sidebar -->
</div><!-- #supplementary -->

			<div class="site-info">
								<a href="http://wordpress.org/">Proudly powered by WordPress</a>
			</div><!-- .site-info -->
		</footer><!-- #colophon -->
	</div><!-- #page -->

		<div style="display:none">
	<div class="grofile-hash-map-1fdbadd832ce6c6656788bd1ab7f419e">
	</div>
	<div class="grofile-hash-map-fae1704291b10722d46c592ffed1815a">
	</div>
	<div class="grofile-hash-map-c8cbd867c0df86570fd293ac196a9d86">
	</div>
	</div>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src="http://martin.ankerl.com/wp-content/plugins/jetpack/modules/wpgroho.js?e08d73"></script>
<script type='text/javascript' src="http://martin.ankerl.com/wp-includes/js/comment-reply.min.js?e08d73"></script>
<script type='text/javascript' src="http://martin.ankerl.com/wp-includes/js/masonry.min.js?e08d73"></script>
<script type='text/javascript' src="http://martin.ankerl.com/wp-includes/js/jquery/jquery.masonry.min.js?e08d73"></script>
<script type='text/javascript' src="http://martin.ankerl.com/wp-content/themes/twentyfourteen/js/functions.js?e08d73"></script>

	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:3.0.1',blog:'29625112',post:'156',tz:'2'});
	var load_cmc = function(){linktracker_init(29625112,156,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script></body>
</html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: enhanced
Database Caching using disk
Object Caching 1854/2238 objects using disk

 Served from: martin.ankerl.com @ 2014-07-23 09:26:01 by W3 Total Cache -->
