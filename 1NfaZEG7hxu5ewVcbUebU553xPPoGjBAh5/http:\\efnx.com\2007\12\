http://efnx.com/2007/12/
HTTP/1.1 200 OK
Server: nginx/1.2.4
Date: Wed, 23 Jul 2014 16:14:56 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
X-Powered-By: PHP/5.4.4-9
X-Pingback: http://efnx.com/xmlrpc.php

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">

<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="shortcut icon" href="http://www.efnx.com/favicon.gif" type="image/x-icon" />

<title>EFNX   &raquo;  2007  &raquo;  December</title>

<meta name="generator" content="WordPress 3.6.2-alpha" /> <!-- leave this for stats -->

<link rel="stylesheet" href="http://efnx.com/wp-content/themes/efnx_v2/style.css" type="text/css" media="screen" />
<link rel="alternate" type="application/rss+xml" title="EFNX RSS Feed" href="http://efnx.com/feed/" />
<link rel="pingback" href="http://efnx.com/xmlrpc.php" />

<style type="text/css" media="screen">

	#page { background: url("http://efnx.com/wp-content/themes/efnx_v2/images/pageBG.gif") repeat-y; border: none; }

</style>


            <script type="text/javascript">//<![CDATA[
            // Google Analytics for WordPress by Yoast v4.3.3 | http://yoast.com/wordpress/google-analytics/
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-3059480-1']);
				            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
            //]]></script>
			<link rel='stylesheet' id='wp-lightbox-2.min.css-css'  href='http://efnx.com/wp-content/plugins/wp-lightbox-2/styles/lightbox.min.css?ver=1.3.4' type='text/css' media='all' />
<link rel='stylesheet' id='codecolorer-css'  href='http://efnx.com/wp-content/plugins/codecolorer/codecolorer.css?ver=0.9.9' type='text/css' media='screen' />
<script type='text/javascript' src='http://efnx.com/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://efnx.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://efnx.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://efnx.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.6.2-alpha" />
</head>
<body>
		<div class="cloud" style="left:62%; top:54%"></div>
				<div class="cloud" style="left:86%; top:122%"></div>
				<div class="cloud" style="left:26%; top:-5%"></div>
				<div class="cloud" style="left:43%; top:194%"></div>
				<div class="cloud" style="left:88%; top:101%"></div>
		
<div id="page">

<div id="header">
	<div id="headerimg">
		<h1><a href="http://efnx.com/">The <br />efnx code blog.</a></h1>
		<div class="description">A blog of code.</div>
		<br>
		<a style="color:rgb(136, 85, 204); font-size:smaller" class="description" href="bitcoin:1NfaZEG7hxu5ewVcbUebU553xPPoGjBAh5?label=efnx.com">You can send me a tip in BTC ;) 1NfaZEG7hxu5ewVcbUebU553xPPoGjBAh5 </a>
	</div>
</div>
<hr />

	<div id="content" class="narrowcolumn">
		
 	   	  		<h2 class="pagetitle">Archive for December, 2007</h2>
 	  

		<div class="navigation">
			<div class="alignleft"></div>
			<div class="alignright"></div>
		</div>

				<div class="post">
				<h3 id="post-39"><a href="http://efnx.com/as3-window-class-real-time-skinnable/" rel="bookmark" title="Permanent Link to AS3 Window Class (real-time skinnable)">AS3 Window Class (real-time skinnable)</a></h3>
				<small>Wednesday, December 12th, 2007</small>

				<div class="entry">
					<p>[edit august 21st 2008] Hey guys this code is available but it is messy and the project has been scrapped. I will pick it up again, probably with OpenGL and C++[/edit]</p>
<p>In an effort to (maybe) find a new job, depending on what happens with my current one, I&#8217;m releasing a preview of my GUI classes. This class is a window class. It contains your display objects in a nice, draggable, scrollable and real-time skinnable window. You can make your own graphics for the window and configure button placement, scrollbar offsets, label, offsets and all other text goodies from an external config.xml script. There&#8217;s nothing to keep in your library and it&#8217;s not that big. It would be nice if anyone who uses it can tell me their memory stats, as I&#8217;m currently looking to make sure my code is clean and there are no leaks. Click the link below for a little demo.</p>
<p><a href="http://www.efnx.com/Flash/GUI/GUI.html" >Here&#8217;s the demo!</a></p>
<p>If you&#8217;re interested in using the class you can dive in headfirst at your own risk. It&#8217;s kinda long (about 1200 lines). I&#8217;ll be working on completely revising it from the ground up as it really is a big mess right now.</p>
<p>Source: <a href="http://blog.efnx.com/wp-content/uploads/2008/08/guitar.gz"  title='GUI - messy'>GUI &#8211; mess</a></p>
				</div>

				<p class="postmetadata">Tags: <a href="http://efnx.com/tag/as3/" rel="tag">AS3</a>, <a href="http://efnx.com/tag/gui/" rel="tag">GUI</a>, <a href="http://efnx.com/tag/windowing/" rel="tag">windowing</a><br /> Posted in <a href="http://efnx.com/topics/as3/" title="View all posts in AS3" rel="category tag">AS3</a> |   <a href="http://efnx.com/as3-window-class-real-time-skinnable/#comments" title="Comment on AS3 Window Class (real-time skinnable)">3 Comments &#187;</a></p>

			</div>

				<div class="post">
				<h3 id="post-37"><a href="http://efnx.com/as3-dolatertodo-function-queue/" rel="bookmark" title="Permanent Link to AS3 doLater/todo Function Queue">AS3 doLater/todo Function Queue</a></h3>
				<small>Saturday, December 8th, 2007</small>

				<div class="entry">
					<p>While working on my windowing system I ran into a problem. Every time I tried to set the width of my window class instance I&#8217;d get an error from my bitmap resource handler telling me the resources hadn&#8217;t been loaded. This makes it impossible to set widths for a window before it&#8217;s loaded, and since the entire system is supposed to be deployable online, loading time is not anything I can count on. I wrote this small class to take care of executing functions at a given time (like after loading is finished). The class is called Queue and here is some usage:</p>
<div class="codecolorer-container actionscript twitlight" style="overflow:auto;white-space:nowrap;width:500px;height:300px;"><div class="actionscript codecolorer"><span class="kw3">import</span> com.<span class="me1">efnx</span>.<span class="me1">utils</span>.<span class="me1">Queue</span>;<br />
<br />
<span class="kw2">function</span> blah<span class="br0">&#40;</span>val1:<span class="kw3">int</span>, val2:<span class="kw3">int</span><span class="br0">&#41;</span>:<span class="kw3">void</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw3">trace</span><span class="br0">&#40;</span>val1+val2<span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">function</span> blah2<span class="br0">&#40;</span>val1:<span class="kw3">int</span>, val2:<span class="kw3">int</span><span class="br0">&#41;</span>:<span class="kw3">void</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw3">trace</span><span class="br0">&#40;</span>val1+val2<span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">var</span> queue:Queue = <span class="kw2">new</span> Queue<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; queue.<span class="kw3">push</span><span class="br0">&#40;</span>blah, <span class="nu0">1</span>, <span class="nu0">5</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; queue.<span class="kw3">push</span><span class="br0">&#40;</span>blah, <span class="nu0">2</span>, <span class="nu0">5</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; queue.<span class="kw3">push</span><span class="br0">&#40;</span>blah, <span class="nu0">4</span>, <span class="nu0">5</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; queue.<span class="kw3">push</span><span class="br0">&#40;</span>blah2, <span class="nu0">3</span>, <span class="nu0">5</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <br />
<span class="kw3">trace</span><span class="br0">&#40;</span>queue<span class="br0">&#41;</span>;<br />
<br />
queue.<span class="kw3">start</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;</div></div>
<p>That code does this -> First we define two different functions, blah and blah2. Then we push the functions to be executed into the queue. Here&#8217;s the interesting part. <s>Since the Dictionary Object inside the class used to list functions is not weakly referenced</s> Duplicate entries cannot be made by the same function regardless of it&#8217;s parameters. In the the example above I push blah into the queue three times, but the only one that fires and traces is the third because the queue&#8217;s key is the function itself [or the "closure object (ie. the "behind the scenes" object that facilitates method closure by maintaining a reference back to the method and its scope)" as described by <a href="http://gskinner.com/blog/archives/2006/07/as3_dictionary.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://gskinner.com']);">Grant Skinner</a>], so the function replaces itself in the queue. This is nice for doing things like setting widths and resizing, although not so great for things like sending different strings to some handler. As of now calling start() applies the functions asynchronously and nullifies anything left in the queue. You&#8217;ll see the output traces this:</p>
<div class="codecolorer-container actionscript twitlight" style="overflow:auto;white-space:nowrap;width:500px;"><div class="actionscript codecolorer"><span class="kw3">object</span> <span class="br0">&#91;</span>Queue<span class="br0">&#93;</span><br />
-<span class="sy0">&gt;</span>&nbsp; <span class="kw2">function</span> <span class="kw2">Function</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span> &nbsp;<span class="nu0">3</span>,<span class="nu0">5</span><br />
-<span class="sy0">&gt;</span>&nbsp; <span class="kw2">function</span> <span class="kw2">Function</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span> &nbsp;<span class="nu0">4</span>,<span class="nu0">5</span><br />
<span class="nu0">8</span><br />
<span class="nu0">9</span></div></div>
<p>First it traces the Queue Object which contains references to the two functions and their parameters (not in the order we gave them) then the output. Bam! Done. Oops! Not quite&#8230; &#8230;At any point you can flush the queue without executing the functions by calling abort(). There, done.</p>
<p>This class can be easily extended or modified to include directives to execute functions in a given order or multiple entries of one function, so get crackin!</p>
<p><b>Source</b><br />
<a href="http://blog.efnx.com/wp-content/uploads/2007/12/blogefnxcom-queue.zip" onclick="javascript:_gaq.push(['_trackEvent','download','http://blog.efnx.com/wp-content/uploads/2007/12/blogefnxcom-queue.zip']);" title='Queue Class Source Code'>Queue Class Source Code</a></p>
				</div>

				<p class="postmetadata">Tags: <a href="http://efnx.com/tag/as3/" rel="tag">AS3</a>, <a href="http://efnx.com/tag/dolater/" rel="tag">doLater</a>, <a href="http://efnx.com/tag/function/" rel="tag">function</a>, <a href="http://efnx.com/tag/list/" rel="tag">list</a>, <a href="http://efnx.com/tag/queue/" rel="tag">queue</a>, <a href="http://efnx.com/tag/todo/" rel="tag">todo</a><br /> Posted in <a href="http://efnx.com/topics/as3/" title="View all posts in AS3" rel="category tag">AS3</a> |   <a href="http://efnx.com/as3-dolatertodo-function-queue/#comments" title="Comment on AS3 doLater/todo Function Queue">4 Comments &#187;</a></p>

			</div>

				<div class="post">
				<h3 id="post-35"><a href="http://efnx.com/as3-bitmap-resource-manager/" rel="bookmark" title="Permanent Link to AS3 Bitmap Resource Manager">AS3 Bitmap Resource Manager</a></h3>
				<small>Saturday, December 1st, 2007</small>

				<div class="entry">
					<p>I&#8217;m now using a new class for this task which can be found <a href="http://blog.efnx.com/?p=55" >here</a>. That said, feel free to read on about this outdated class.</p>
<p>I&#8217;ve completely rewritten my multiple bitmap loader into a new machine. It now uses weak referenced dictionary objects to store bitmapData after it has been extracted or loaded from the web. It is meant to hold all instances of bitmapData for a class, a set of classes or a whole game even. The class, bitmapDataRsrc, takes either a bitmap, bitmapData or string path to an image or an array consisting of either bitmaps, bitmapData, string paths, or some combination thereof, along with a string identifier and loads the bitmapData into a dictionary object with it&#8217;s identifier as a key. It then pushes it&#8217;s load status [true or false] into another dictionary with the object itself as the key, so every bitmapData resource and it&#8217;s load status is accessible through the identifier. Once every resource is loaded bitmapDataRsrc dispatches an Event.COMPLETE event. For instance, let&#8217;s say I wanted to load and store all the bitmapData needed to build a GUI window:</p>
<div class="codecolorer-container actionscript twitlight" style="overflow:auto;white-space:nowrap;width:500px;height:300px;"><div class="actionscript codecolorer"><span class="kw3">import</span> com.<span class="me1">efnx</span>.<span class="me1">utils</span>.<span class="me1">bitmapDataRsrc</span>;<br />
<br />
<span class="kw2">var</span> rsrc:bitmapDataRsrc = <span class="kw2">new</span> bitmapDataRsrc<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<br />
rsrc.<span class="me1">addEventListener</span><span class="br0">&#40;</span>Event.<span class="me1">COMPLETE</span>, attachGraphicElements, <span class="kw2">false</span>, <span class="nu0">0</span>, <span class="kw2">true</span><span class="br0">&#41;</span>;<br />
<br />
<span class="co1">//load resources///////////////////////</span><br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/bottomBar.png&quot;</span>, <span class="st0">&quot;bottomBar&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/contentBG.png&quot;</span>, <span class="st0">&quot;contentBG&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/contentOverlay.png&quot;</span>, <span class="st0">&quot;contentOverlay&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/leftArrowDown.png&quot;</span>, <span class="st0">&quot;leftArrowDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/leftArrowOver.png&quot;</span>, <span class="st0">&quot;leftArrowOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/leftArrowUp.png&quot;</span>, <span class="st0">&quot;leftArrowUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/upArrowDown.png&quot;</span>, <span class="st0">&quot;upArrowDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/upArrowOver.png&quot;</span>, <span class="st0">&quot;upArrowOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/upArrowUp.png&quot;</span>, <span class="st0">&quot;upArrowUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/rightArrowDown.png&quot;</span>, <span class="st0">&quot;rightArrowDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/rightArrowOver.png&quot;</span>, <span class="st0">&quot;rightArrowOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/rightArrowUp.png&quot;</span>, <span class="st0">&quot;rightArrowUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/downArrowDown.png&quot;</span>, <span class="st0">&quot;downArrowDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/downArrowOver.png&quot;</span>, <span class="st0">&quot;downArrowOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/downArrowUp.png&quot;</span>, <span class="st0">&quot;downArrowUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/leftBar.png&quot;</span>, <span class="st0">&quot;leftBar&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/leftBottomCorner.png&quot;</span>, <span class="st0">&quot;bottomLeftCorner&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/MbuttonDown.png&quot;</span>, <span class="st0">&quot;MbuttonDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/MbuttonOver.png&quot;</span>, <span class="st0">&quot;MbuttonOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/MbuttonUp.png&quot;</span>, <span class="st0">&quot;MbuttonUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/ObuttonDown.png&quot;</span>, <span class="st0">&quot;ObuttonDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/ObuttonOver.png&quot;</span>, <span class="st0">&quot;ObuttonOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/ObuttonUp.png&quot;</span>, <span class="st0">&quot;ObuttonUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/resizeDown.png&quot;</span>, <span class="st0">&quot;resizeDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/resizeOver.png&quot;</span>, <span class="st0">&quot;resizeOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/resizeUp.png&quot;</span>, <span class="st0">&quot;resizeUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/rightBar.png&quot;</span>, <span class="st0">&quot;rightBar&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/rightBottomCorner.png&quot;</span>, <span class="st0">&quot;bottomRightCorner&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/hBarLeft.png&quot;</span>, <span class="st0">&quot;hBarLeft&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/hBarMiddle.png&quot;</span>, <span class="st0">&quot;hBarMiddle&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/hBarRight.png&quot;</span>, <span class="st0">&quot;hBarRight&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/vBarBottom.png&quot;</span>, <span class="st0">&quot;vBarBottom&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/vBarMiddle.png&quot;</span>, <span class="st0">&quot;vBarMiddle&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/vBarTop.png&quot;</span>, <span class="st0">&quot;vBarTop&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/windowBarLeft.png&quot;</span>, <span class="st0">&quot;upperLeftCorner&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/windowBarMiddle.png&quot;</span>, <span class="st0">&quot;topBar&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/windowBarRight.png&quot;</span>, <span class="st0">&quot;upperRightCorner&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/XbuttonDown.png&quot;</span>, <span class="st0">&quot;XbuttonDown&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/XbuttonUp.png&quot;</span>, <span class="st0">&quot;XbuttonUp&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="st0">&quot;rsrc2/XbuttonOver.png&quot;</span>, <span class="st0">&quot;XbuttonOver&quot;</span><span class="br0">&#41;</span>;</div></div>
<p>After the resources are done loading you can access the bitmapData using the get() function with the string identifier [2nd parameter] passed with the load() function. Below I&#8217;ll demonstrate accessing the last bitmapData, XbuttonOver.png.</p>
<div class="codecolorer-container actionscript twitlight" style="overflow:auto;white-space:nowrap;width:500px;"><div class="actionscript codecolorer"><span class="kw2">function</span> attachGraphicElements<span class="br0">&#40;</span>event:Event<span class="br0">&#41;</span>:<span class="kw3">void</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp;<span class="kw2">var</span> bitmap:Bitmap = <span class="kw2">new</span> Bitmap<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp;bitmap.<span class="me1">bitmapData</span> = rsrc.<span class="kw3">get</span><span class="br0">&#40;</span><span class="st0">&quot;XbuttonOver&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp;addChild<span class="br0">&#40;</span>bitmap<span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div></div>
<p>If you get lazy and decide not to give bitmapDataRsrc string identifiers to identify your resource, it will make one up for you. If you decide to pass an array of bitmaps, bitmapData and string paths to images as the first parameter to the load() function, and pass a string identifier as the second parameter your resources will be indexed as &#8220;string identifier + number&#8221; so that all your resources are accessible. When passing an array of resources you can identify each one yourself by first indexing the resource and string identifier in another array and then pushing that array into the parameter array. In this case a second parameter to the load function is not needed. Check it out:</p>
<div class="codecolorer-container actionscript twitlight" style="overflow:auto;white-space:nowrap;width:500px;"><div class="actionscript codecolorer"><span class="kw3">import</span> com.<span class="me1">efnx</span>.<span class="me1">utils</span>.<span class="me1">bitmapDataRsrc</span>;<br />
<br />
<span class="kw2">var</span> rsrc:bitmapDataRsrc = <span class="kw2">new</span> bitmapDataRsrc<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="kw2">var</span> <span class="kw3">array</span>:<span class="kw3">Array</span>;<br />
<span class="kw2">var</span> <span class="kw3">string</span>:<span class="kw3">String</span>;<br />
<br />
<span class="kw1">for</span><span class="br0">&#40;</span><span class="kw2">var</span> i:<span class="kw3">int</span> = <span class="nu0">0</span>; i<span class="sy0">&lt;</span><span class="nu0">100</span>; i++<span class="br0">&#41;</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw3">string</span> = <span class="st0">&quot;image&quot;</span>+i;<br />
&nbsp; &nbsp; <span class="kw3">array</span> = <span class="kw2">new</span> <span class="kw3">Array</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="kw3">array</span>.<span class="kw3">push</span><span class="br0">&#40;</span><span class="st0">&quot;rsrcPath&quot;</span>+<span class="kw3">string</span>+<span class="st0">&quot;.png&quot;</span>, <span class="kw3">string</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
rsrc.<span class="kw3">load</span><span class="br0">&#40;</span><span class="kw3">array</span><span class="br0">&#41;</span>;</div></div>
<p>I find it a lot easier to load resources one by one and name them, it&#8217;s a lot better for me, I like to get to know my bitmapData, but it&#8217;s good to have options.</p>
<p>The isLoaded property can be checked to find out if all resources have loaded. At any point the load status of a single resource can be found by calling the hasLoaded(&#8220;string identifier&#8221;):Boolean function. If no identifier is given bitmapDataRsrc returns it&#8217;s isLoaded property. To destroy a given resource call unload(&#8220;string identifier&#8221;) and to destroy all resources in the manager call unloadAll():</p>
<div class="codecolorer-container actionscript twitlight" style="overflow:auto;white-space:nowrap;width:500px;"><div class="actionscript codecolorer"><span class="kw3">trace</span><span class="br0">&#40;</span>rsrc.<span class="me1">isLoaded</span><span class="br0">&#41;</span>;<br />
<span class="kw3">trace</span><span class="br0">&#40;</span>rsrc.<span class="me1">hasLoaded</span><span class="br0">&#40;</span><span class="st0">&quot;XbuttonOver&quot;</span><span class="br0">&#41;</span>;<br />
rsrc.<span class="me1">unload</span><span class="br0">&#40;</span><span class="st0">&quot;XbuttonOver&quot;</span><span class="br0">&#41;</span>;<br />
rsrc.<span class="me1">unloadAll</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;</div></div>
<p><b>Source</b><br />
<a href="http://blog.efnx.com/wp-content/uploads/2007/12/blogefnxcom-bitmapdatarsrc.zip" onclick="javascript:_gaq.push(['_trackEvent','download','http://blog.efnx.com/wp-content/uploads/2007/12/blogefnxcom-bitmapdatarsrc.zip']);" title='bitmapDataRsrc Source'>bitmapDataRsrc Source</a></p>
				</div>

				<p class="postmetadata">Tags: <a href="http://efnx.com/tag/bitmapdata/" rel="tag">bitmapData</a>, <a href="http://efnx.com/tag/dictionary/" rel="tag">dictionary</a>, <a href="http://efnx.com/tag/handler/" rel="tag">handler</a>, <a href="http://efnx.com/tag/loader/" rel="tag">loader</a>, <a href="http://efnx.com/tag/manager/" rel="tag">manager</a>, <a href="http://efnx.com/tag/resource/" rel="tag">resource</a><br /> Posted in <a href="http://efnx.com/topics/as3/" title="View all posts in AS3" rel="category tag">AS3</a> |   <a href="http://efnx.com/as3-bitmap-resource-manager/#comments" title="Comment on AS3 Bitmap Resource Manager">4 Comments &#187;</a></p>

			</div>

		
		<div class="navigation">
			<div class="alignleft"></div>
			<div class="alignright"></div>
		</div>

	
	</div>

	<div id="sidebar">
		<ul>
			<li id="pages-2" class="widget widget_pages"><h2 class="widgettitle">Pages</h2>		<ul>
			<li class="page_item page-item-2"><a href="http://efnx.com/about/">About</a></li>
		</ul>
		</li><li id="search-2" class="widget widget_search"><form method="get" id="searchform" action="http://efnx.com/">
<div><input type="text" value="" name="s" id="s" />
<input type="submit" id="searchsubmit" value="Search" />
</div>
</form>
</li><li id="text-2" class="widget widget_text"><h2 class="widgettitle">Badges!</h2>			<div class="textwidget"><a href="http://www.haskellers.com/user/2133"><img src="http://www.haskellers.com/static/badge.png" alt="I'm a Haskeller">
</a>
<a href="http://internetdefenseleague.org" onclick="javascript:_gaq.push(['_trackEvent','outbound-widget','http://internetdefenseleague.org']);"><img src="http://internetdefenseleague.org/images/badges/final/footer_badge.png" alt="Member of The Internet Defense League" /></a></div>
		</li><li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>		<ul>
			<li><a href='http://efnx.com/2013/05/' title='May 2013'>May 2013</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2013/04/' title='April 2013'>April 2013</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2013/01/' title='January 2013'>January 2013</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2012/12/' title='December 2012'>December 2012</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2012/11/' title='November 2012'>November 2012</a>&nbsp;(4)</li>
	<li><a href='http://efnx.com/2012/05/' title='May 2012'>May 2012</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2012/01/' title='January 2012'>January 2012</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2010/11/' title='November 2010'>November 2010</a>&nbsp;(3)</li>
	<li><a href='http://efnx.com/2010/10/' title='October 2010'>October 2010</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2010/09/' title='September 2010'>September 2010</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2010/08/' title='August 2010'>August 2010</a>&nbsp;(3)</li>
	<li><a href='http://efnx.com/2010/07/' title='July 2010'>July 2010</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2010/04/' title='April 2010'>April 2010</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2009/12/' title='December 2009'>December 2009</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2009/09/' title='September 2009'>September 2009</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2009/07/' title='July 2009'>July 2009</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2009/06/' title='June 2009'>June 2009</a>&nbsp;(4)</li>
	<li><a href='http://efnx.com/2009/05/' title='May 2009'>May 2009</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2009/04/' title='April 2009'>April 2009</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2009/03/' title='March 2009'>March 2009</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2009/02/' title='February 2009'>February 2009</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2008/11/' title='November 2008'>November 2008</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2008/10/' title='October 2008'>October 2008</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2008/09/' title='September 2008'>September 2008</a>&nbsp;(4)</li>
	<li><a href='http://efnx.com/2008/08/' title='August 2008'>August 2008</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2008/07/' title='July 2008'>July 2008</a>&nbsp;(1)</li>
	<li><a href='http://efnx.com/2008/02/' title='February 2008'>February 2008</a>&nbsp;(2)</li>
	<li><a href='http://efnx.com/2008/01/' title='January 2008'>January 2008</a>&nbsp;(4)</li>
	<li><a href='http://efnx.com/2007/12/' title='December 2007'>December 2007</a>&nbsp;(3)</li>
	<li><a href='http://efnx.com/2007/11/' title='November 2007'>November 2007</a>&nbsp;(6)</li>
	<li><a href='http://efnx.com/2007/10/' title='October 2007'>October 2007</a>&nbsp;(4)</li>
		</ul>
</li>		</ul>
	</div>



<hr />
<div id="follow-me">
	<a href="http://github.com/schell" title="schell/efnx at github">Follow me on GitHub</a> 
	<br />
	<a href="https://plus.google.com/115597057831503979302/" title="schell at google+">Follow me on Google+</a>
	<br />
	<a href="http://twitter.com/#!/schellsan" title="schell/efnx/clckclcks at github">Follow me on Twitter</a>
</div>
	<div id="footer">
	<div style="padding:10px; width:579px; text-align:center;">
		Thrilling.<br />
		EFNX is proudly powered by
		<a href="http://wordpress.org/">WordPress</a>
		<br /><a href="http://efnx.com/feed/">Entries (RSS)</a>
		and <a href="http://efnx.com/comments/feed/">Comments (RSS)</a>. 

		<!-- 20 queries. 0.353 seconds. -->
	</div>
</div>
</div>

<!-- Hacked on till subordinated by Schell Scivally -->

	<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var JQLBSettings = {"fitToScreen":"0","resizeSpeed":"400","displayDownloadLink":"0","navbarOnTop":"0","loopImages":"","resizeCenter":"","marginSize":"","linkTarget":"_self","help":"","prevLinkTitle":"previous image","nextLinkTitle":"next image","prevLinkText":"\u00ab Previous","nextLinkText":"Next \u00bb","closeTitle":"close image gallery","image":"Image ","of":" of ","download":"Download"};
/* ]]> */
</script>
<script type='text/javascript' src='http://efnx.com/wp-content/plugins/wp-lightbox-2/wp-lightbox-2.min.js?ver=1.3.4.1'></script>
</body>
</html>

