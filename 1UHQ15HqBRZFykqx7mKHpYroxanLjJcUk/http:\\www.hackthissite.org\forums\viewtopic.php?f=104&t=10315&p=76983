http://www.hackthissite.org/forums/viewtopic.php?f=104&t=10315&p=76983
HTTP/1.1 200 OK
Date: Thu, 24 Jul 2014 15:22:39 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
Set-Cookie: phpbb3_28pla_u=1; expires=Fri, 24-Jul-2015 15:22:38 GMT; path=/; domain=.hackthissite.org; HttpOnly
Set-Cookie: phpbb3_28pla_k=; expires=Fri, 24-Jul-2015 15:22:38 GMT; path=/; domain=.hackthissite.org; HttpOnly
Set-Cookie: phpbb3_28pla_sid=7f8ec540fdc6d00ff27ba794e0deb207; expires=Fri, 24-Jul-2015 15:22:38 GMT; path=/; domain=.hackthissite.org; HttpOnly
Cache-Control: private, no-cache="set-cookie"
Expires: 0
Pragma: no-cache
Server: HackThisSite Load Balancer
Strict-Transport-Security: max-age=31536000

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-gb" xml:lang="en-gb">
<head>

<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="content-style-type" content="text/css" />
<meta http-equiv="content-language" content="en-gb" />
<meta http-equiv="imagetoolbar" content="no" />
<meta name="resource-type" content="document" />
<meta name="distribution" content="global" />
<meta name="copyright" content="2000, 2002, 2005, 2007 phpBB Group" />
<meta name="keywords" content="" />
<meta name="description" content="" />
<title>Hack This Site Forum &bull; View topic - Dictionary Attacks and a Bash Script?</title>

<script type="text/javascript">
// <![CDATA[
	var jump_page = 'Enter the page number you wish to go to:';
	var on_page = '1';
	var per_page = '';
	var base_url = '';
	var style_cookie = 'phpBBstyle';
	var onload_functions = new Array();
	var onunload_functions = new Array();

	
	/**
	* Find a member
	*/
	function find_username(url)
	{
		popup(url, 760, 570, '_usersearch');
		return false;
	}

	/**
	* New function for handling multiple calls to window.onload and window.unload by pentapenguin
	*/
	window.onload = function()
	{
		for (var i = 0; i < onload_functions.length; i++)
		{
			eval(onload_functions[i]);
		}
	}

	window.onunload = function()
	{
		for (var i = 0; i < onunload_functions.length; i++)
		{
			eval(onunload_functions[i]);
		}
	}

// ]]>
</script>
<script type="text/javascript" src="./styles/Carbon/template/styleswitcher.js"></script>
<script type="text/javascript" src="./styles/Carbon/template/forum_fn.js"></script>

<link href="./styles/Carbon/theme/print.css" rel="stylesheet" type="text/css" media="print" title="printonly" />
<link href="./style.php?sid=7f8ec540fdc6d00ff27ba794e0deb207&amp;id=8&amp;lang=en" rel="stylesheet" type="text/css" media="screen, projection" />

<link href="./styles/Carbon/theme/normal.css" rel="stylesheet" type="text/css" title="A" />
<link href="./styles/Carbon/theme/medium.css" rel="alternate stylesheet" type="text/css" title="A+" />
<link href="./styles/Carbon/theme/large.css" rel="alternate stylesheet" type="text/css" title="A++" />


</head>

<body id="phpbb" class="section-viewtopic ltr">
<span id="blank-element" style="display: none"></span>
<div id="wrap">
	<a id="top" name="top" accesskey="t"></a>
	<div id="page-header">
		<div class="headerbar">
			<div class="inner"><span class="corners-top"><span></span></span>

			<div id="site-description">
				<a href="./index.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" title="Board index" id="logo"><img src="images/spacer.gif" width="920" height="90" alt="" /></a>
				<!-- <p>Training the hacker underground</p> -->
				<p style="display: none;"><a href="#start_here">Skip to content</a></p>
			</div>
			<div style="text-align: center;"><a href="https://www.hackthissite.org/y3dAeono2283Xa28pMB1G4DI6qIh37PsiccXL6V6ntNA1WrbY7o6YDefXGg9aI56UxSi1w4usZ2FV4Ivrq4NoNXKGNzka" target="_blank"><img src="https://www.hackthissite.org/hT05604jL84536v3IV2Pv538tfs8d63uqB995w04f6YX4bLkO70mduWn2WTohsIRjGvtO073r3DdRvmVy392Sp2yIo6MGYeRbAt1QL491YGLqLjXF5h5anBBJLTw8fyM2yDMz4hm9Z7IokOW2z4ea" alt="Mavituna Security - Netsparker Vulnerability Scanner" id="atimg" class="abstaimg" title="Mavituna Security - Netsparker Vulnerability Scanner" border="0" /></a>
<div id="8951c95109" class="pagefair-acceptable"></div><br />[<a href="https://www.hackthissite.org/advertise/">Advertise With HackThisSite.org</a>]<!-- Kontera ContentLink(TM);-->
<script type='text/javascript'>
var dc_AdLinkColor = '#06464' ; 
var dc_PublisherID = 79308 ; 
</script>
<script type='text/javascript' src='http://kona.kontera.com/javascript/lib/KonaLibInline.js'>
</script><br />
<p style="font-size: 16px; font-weight: bold; padding: 0px; margin: 10px 0px 10px 0px;">
<a href="http://www.hackthissite.org/">Hack This Site</a> - 
<a href="./index.php?sid=7f8ec540fdc6d00ff27ba794e0deb207">Forums Index</a></p></div>

			<span class="corners-bottom"><span></span></span></div>
		</div>

		<div class="navbar">
			<div class="inner"><span class="corners-top"><span></span></span>

			<ul class="linklist navlinks">
				<li class="icon-home"><a href="./index.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" accesskey="h">Board index</a>  <strong>&#8249;</strong> <a href="./viewforum.php?f=17&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Computers</a> <strong>&#8249;</strong> <a href="./viewforum.php?f=36&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Programming</a> <strong>&#8249;</strong> <a href="./viewforum.php?f=104&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Interpreted Languages</a></li>

				<!--<li class="rightside"><a href="#" onclick="fontsizeup(); return false;" class="fontsize" title="Change font size">Change font size</a></li>-->

				<li class="rightside"><a href="./viewtopic.php?f=104&amp;t=10315&amp;start=0&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207&amp;view=print" title="Print view" accesskey="p" class="print">Print view</a></li>			</ul>

			
			<ul class="linklist rightside">
				<li class="icon-faq"><a href="./faq.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" title="Frequently Asked Questions">FAQ</a></li>
				                <li class="icon-search"><a href="./search.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" title="View the advanced search options">Search</a></li>
				<li class="icon-members"><a href="./memberlist.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" title="View complete list of members">Members</a></li>					<li class="icon-logout"><a href="./ucp.php?mode=login&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" title="Login" accesskey="l">Login</a></li>
							</ul>

			<span class="corners-bottom"><span></span></span></div>
		</div>

	</div>

	<a name="start_here"></a>
	<div id="page-body">
		
		 <h2><a href="./viewtopic.php?f=104&amp;t=10315&amp;start=0&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Dictionary Attacks and a Bash Script?  </a></h2>
<!-- NOTE: remove the style="display: none" when you want to have the forum description on the topic body --><span style="display: none">For the discussion of Perl, Python, Ruby, and PHP and other interpreted languages.<br /></span>
<div class="topic-actions">

	<div class="buttons">
			<div class="reply-icon"><a href="./posting.php?mode=reply&amp;f=104&amp;t=10315&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" title="Post a reply"><span></span>Post a reply</a></div>
		</div>

			<div class="search-box">
			<form method="post" id="topic-search" action="./search.php?t=10315&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">
			<fieldset>
				<input class="inputbox search tiny"  type="text" name="keywords" id="search_keywords" size="20" value="Search this topic…" onclick="if(this.value=='Search this topic…')this.value='';" onblur="if(this.value=='')this.value='Search this topic…';" />
				<input class="button2" type="submit" value="Search" />
				<input type="hidden" value="10315" name="t" />
				<input type="hidden" value="msgonly" name="sf" />
			</fieldset>
			</form>
		</div>
			<div class="pagination">
			4 posts			 &bull; Page <strong>1</strong> of <strong>1</strong>		</div>
	
</div>
<div class="clear"></div>

	<div id="p76164" class="post bg2 online">
		<div class="inner"><span class="corners-top"><span></span></span>

		<div class="postbody">
			
			<h3 class="first">
								<a href="#p76164">Dictionary Attacks and a Bash Script?</a>
			</h3>
			<p class="author"><a href="./viewtopic.php?p=76164&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207#p76164"><img src="./styles/Carbon/imageset/icon_post_target.gif" width="11" height="9" alt="Post" title="Post" /></a>			by <strong><a href="./memberlist.php?mode=viewprofile&amp;u=52717&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">-Ninjex-</a></strong> on Wed Jun 19, 2013 4:49 am			<br />([msg=76164]see Dictionary Attacks and a Bash Script?[/msg])
			</p>

			
			<div class="content">Catchy title, huh??<br /><br />So here I am, again, another day. Not being able to sleep, due to my insomnia and my mind rushing with endless possibilities, as hours draw near until the alarm rings into my ears warning me that it is time to slave away to the society. So, I sit here and wonder... What to do next... I decide to throw together something for the community.<br /><br />I want to start this with the general concept on dictionary attacking that will work with most hashing / encryption algorithms.<br />Let me give a little history lesson, which is assumed to be the first dictionary attack according to some book I read a while back. The story is similar to this:<br />The unix crypt function was pretty secure for a while. People understood the concept that the first two characters in the hashed string had been the salt used to hash the password for said user account.<br />For example, say we take the string &quot;Ninjex&quot; and give it the salt value of &quot;XR&quot;, and perform the hashing function. We will receive the hash value of: XRrk46JnQhoQs<br /><br />(As a note, I will be adding php code in here so that you guys can follow and understand how this is working and what is going on. I recommend you to use these codes if you do not understand the concepts fully, or to play with the program and give it different inputs and see how it changes the output)<br /><br />Code to encrypt a string with unix crypt with a desired salt (unix.php)<br />To run any of these files, make sure you have php installed. You can run it from the command line by declaring php followed by the program name. i.e. to run the program unix.php, you would type in the command line &quot;php unix.php&quot; without quotes.<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>&lt;?php<br />// unix.php<br />// Made by: Ninjex<br />//This file will convert a string into a hash with a given salt, using the unix crypt function<br /><br />fwrite(STDOUT, &quot;Enter a string to encrypt: &quot;); // asking for a string to encrypt<br />$string = trim(fgets(STDIN)); // grabing the users input and storing it in $string<br />fwrite(STDOUT, &quot;Enter a salt for the hashing function: &quot;); // asking the user for a salt for the hashing function<br />$salt = trim(fgets(STDIN)); // storing the specified salt in $salt<br />$hash = crypt($string,$salt); // using the unix crypt cryptographic hashing algorithm with the desired string and salt<br />echo $hash.&quot;\n&quot;; // print out the hash result and a new line<br />?&gt;<br /></code></dd></dl><br /><br />Now, using the program above, you can see how it is converting the strings into a hash. <br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; php unix.php <br />Enter a string to encrypt: Ninjex<br />Enter a salt for the hashing function: XR<br />XRrk46JnQhoQs<br /></code></dd></dl><br /><br />You must realize the difference between a hash, and something that is simply encrypted. Something which is encrypted can be decrypted with software, meaning that no matter what you input into the decryption software, it will be able to decrypt it, and give the original value. i.e. encryption software could be something like simply changing a letter to the letter that follows, such as:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>a = b<br />b = c<br />c = d<br />etc...<br />z = a</code></dd></dl><br /><br />You could write a piece of software to reverse that process, by having it take the character and replace it with the character before it. Once that is done, no matter what the original value of the encrypted text is, you would be able to figure it out.<br /><br />This however, is not true for hashing functions. A hash is designed as a one-way function, and to be as much as possible collision resistant (meaning that two strings should not give the same hash value)<br />However, think about this; say a hash is always 128 bits long, that would mean that there is 2^128 different possibilities for hash values. This is an extremely large number, yet it is not an infinite number. When a user can input an infinite number of possibilities into the function, there are logically an infinite number of collision possibilities. This is why having a limit on the strings are important, as well as using salts for the encryption, in case two of the values are the same, the salt would change this (most of the time).<br /><br />So back to the story, now that you know the difference between a hash function and encryption function.<br />It is said that a hacker was found tunneling into systems and downloading the /etc/passwd or /etc/shadow file, which contained a list of the users on the network, with their passwords encrypted with the unix crypt function. This seemed to have brought about confusion to some of the information security peoples, as the unix crypt function had not ever been broken before, and seemed safe. Finally, they were able to catch up to the attacker and noticed he had also download a dictionary word list of English words. After further review, they realized he had made a program to take the words in the word list, apply a desired salt depending on the hash, convert it using the unix crypt function, and then compared it to the original value. This, is a dictionary attack.<br /><br />So now, I will walk you through a small tutorial on running a dictionary attack.<br />The first thing we are going to need is a wordlist and hashes to work with. So, open up a text editor, such as gedit, nano, leaf, vim, etc, add in a few words to a file and save it as words.lst. The words need to be separated by a new line feed (press enter after every word you enter into the dictionary)  For this example, we will use the following:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>hello<br />dude<br />bro<br />ninjex<br />wadup<br />yolo<br />doors<br />walls<br />man<br />blah<br /></code></dd></dl><br /><br />Alright, so now we have a very small word list here, which is great for learning. You always want to start off small, and then work your way up, as you progress.<br /><br />Anyways, now that we have our word list, we will need a hash. In this example we will be using a MD5 hash value for &quot;yolo&quot;.<br />To do this, we can either write a simple program to convert the word into MD5, or we can use an application somewhere online such as: <a href="http://www.md5decrypter.co.uk/hash-a-password.aspx" class="postlink">md5decrypter</a>, In this post, I will be giving you a quick php code that will do this for you, and you can check it with the site above, and ensure they match:<br />I called this file md5.php (execute from command line with: php md5.php)<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>&lt;?php<br />// md5.php<br />// Made by: Ninjex<br />// This script will convert the given input into MD5<br /><br />fwrite(STDOUT, &quot;Enter a string to convert into MD5: &quot;); // asking for a string to convert<br />$word = rtrim(fgets(STDIN)); // storing user input into $word and removing trailing white space<br />$hash = md5($word); // convert the string into md5 and store it in $hash<br />echo $hash.&quot;\n&quot;; // echo the hash value with a carriage return (new line)<br />?&gt;<br /></code></dd></dl><br /><br />As you will see, the md5 value for yolo is: 4fded1464736e77865df232cbcb4cd19<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; php md5.php <br />Enter a string to convert into MD5: yolo<br />4fded1464736e77865df232cbcb4cd19<br /></code></dd></dl><br /><br />This checks out from my programs end, as well as the website. We can assure the script works properly.<br /><br />So, now that we have our wordlist, and a hash to work with, we are looking more like that brilliant hacker, whom thought of a dictionary attack. Now, the next thing we are going to need is a program that will take each word in the word list, convert it into MD5, and compare that value to the hash value: 4fded1464736e77865df232cbcb4cd19 (yolo) Alright, what are we waiting for, let's build a program to do that and name it dictionary.php<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>&lt;?php<br /><br />// dictionary.php <br />// Made by: Ninjex <br />// This tool is used to find md5 hash values via dictionary attack.<br />//************************************************************************************************************************************<br /><br />fwrite(STDOUT, &quot;Please enter in the hash to run the dictionary attack on: &quot;); // asking for the hash<br />$hash = trim(fgets(STDIN)); // grab the hash with STDIN<br />fwrite(STDOUT, &quot;Please enter the full path to your dictionary: &quot;); // asking for dictionary<br />$dict = trim(fgets(STDIN));<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />if(!file_exists($dict)){ // if the file dictionary is invalid<br />&nbsp; &nbsp; echo &quot;The dictionary path you entered was invalid, please try again!\n&quot;; // printing invalid path<br />&nbsp; &nbsp; exit; // close the program<br />} // closing if<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />$dictionary = fopen($dict, &quot;r&quot;); // declaring our dictionary file with read privileges.<br />$hashed = NULL; // setting a variable hashed which will be used to hash words to NULL for the while loop.<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />while(!feof($dictionary) &amp;&amp; $hashed != $hash) { // while the hashed word != the hash and we are not at the end of the file.<br />&nbsp; &nbsp; $word = fgets($dictionary); // grab the current word on the current line<br />&nbsp; &nbsp; $word = rtrim($word); // remove trailing whitespace from the word on the line (\n)<br />&nbsp; &nbsp; $hashed = md5($word); // convert the word into md5 and store it into $hashed<br />} // closing while<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />if($hashed == $hash) { // if the hash is found, print out the word that was converted and matched<br />&nbsp; &nbsp; echo &quot;The value of the hash is: $word\n&quot;; // echo the original value of the hash<br />} // closing if<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />if($hashed != $hash) { // If the hashed words and the hash never found a match<br />&nbsp; &nbsp; echo &quot;The value of the hash is not in this dictionary!\n&quot;; // echo that the value was not inside our dictionary<br />&nbsp; &nbsp; } // closing if<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />fclose($dictionary); // close our dictionary file<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />?&gt;<br /></code></dd></dl><br /><br />After running the program, I received the following, and you should get something similar:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; php dictionary.php <br />Please enter in the hash to decrypt: 4fded1464736e77865df232cbcb4cd19<br />Please enter the full path to your dictionary: /home/ninjex/words.lst<br />The value of the hash is: yolo<br /></code></dd></dl><br /><br />Alright, so we now have a working dictionary attack. So now let's talk about optimizing performance, as well as making the script display more information about what is going on (this will reduce performance greatly, but is nice to learn what is going on)<br /><br />To do this, I will first edit the program above to display more information about what is going on during run time, and call it dict-detailed.php<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>&lt;?php<br /><br />// dict-detailed.php<br />// Made by: Ninjex<br />// This is a detailed version of dictinary.php, it will show what is going on during the process of the program<br /><br />fwrite(STDOUT, &quot;Please enter in the hash to decrypt: &quot;); // asking for the hash<br />$hash = trim(fgets(STDIN)); // grab the hash with STDIN<br />fwrite(STDOUT, &quot;Please enter the full path to your dictionary: &quot;); // asking for dictionary<br />$dict = trim(fgets(STDIN));<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />if(!file_exists($dict)){ // if the file dictionary is invalid<br />&nbsp; &nbsp; echo &quot;The dictionary path you entered was invalid, please try again!\n&quot;; // printing invalid path<br />&nbsp; &nbsp; exit; // close the program<br />} // closing if<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />$dictionary = fopen($dict, &quot;r&quot;); // declaring our dictionary file with read privileges.<br />$hashed = NULL; // setting a variable hashed which will be used to hash words to NULL for the while loop.<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />while(!feof($dictionary) &amp;&amp; $hashed != $hash) { // while the hashed word != the hash and we are not at the end of the file.<br />&nbsp; &nbsp; $word = fgets($dictionary); // grab the current word on the current line<br />&nbsp; &nbsp; $word = rtrim($word); // remove trailing whitespace from the word on the line (\n)<br />&nbsp; &nbsp; $hashed = md5($word); // convert the word into md5 and store it into $hashed<br />&nbsp; &nbsp; echo &quot;converting the word $word into MD5... The value is: $hashed\n&quot;;<br />&nbsp; &nbsp; if($hashed != $hash) {<br />&nbsp; &nbsp;echo &quot;The MD5 value $hashed is not the same as the hash value you are looking for ($hash)\n&quot;;<br />&nbsp; &nbsp;}<br />} // closing while<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />if($hashed == $hash) { // if the hash is found, print out the word that was converted and matched<br />&nbsp; &nbsp; echo &quot;The MD5 value $hash is a match for the MD5 value you are looking for ($hash)\n&quot;;<br />&nbsp; &nbsp; echo &quot;The value of the hash is: $word\n&quot;; // echo the original value of the hash<br />} // closing if<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />if($hashed != $hash) { // If the hashed words and the hash never found a match<br />&nbsp; &nbsp; echo &quot;The value of the hash is not in this dictionary!\n&quot;; // echo that the value was not inside our dictionary<br />&nbsp; &nbsp; } // closing if<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />fclose($dictionary); // close our dictionary file<br /><br />//------------------------------------------------------------------------------------------------------------------------------------<br /><br />?&gt;<br /></code></dd></dl><br /><br />So, first I run this with the hash value of rofl, which is not in our word list and should not be picked up.<br />The MD5 value of rofl is: 7df9ad761904a6cd0dc1358949977da0<br /><br />Here is what we get now:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; php dict-detailed.php<br />Please enter in the hash to decrypt: 7df9ad761904a6cd0dc1358949977da0<br />Please enter the full path to your dictionary: /home/ninjex/words.lst<br />converting the word hello into MD5... The value is: 5d41402abc4b2a76b9719d911017c592<br />The MD5 value 5d41402abc4b2a76b9719d911017c592 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word dude into MD5... The value is: 13b73edae8443990be1aa8f1a483bc27<br />The MD5 value 13b73edae8443990be1aa8f1a483bc27 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word bro into MD5... The value is: 0cfe0ef3a357503c4a4538414b870ca1<br />The MD5 value 0cfe0ef3a357503c4a4538414b870ca1 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word ninjex into MD5... The value is: 28128605a42f04917238713f71545f43<br />The MD5 value 28128605a42f04917238713f71545f43 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word wadup into MD5... The value is: a3f2773a871bf14dc8bcbe7d3b23c9f2<br />The MD5 value a3f2773a871bf14dc8bcbe7d3b23c9f2 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word yolo into MD5... The value is: 4fded1464736e77865df232cbcb4cd19<br />The MD5 value 4fded1464736e77865df232cbcb4cd19 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word doors into MD5... The value is: 57d0a8ca484ed8d1d1b8cc92426da1a6<br />The MD5 value 57d0a8ca484ed8d1d1b8cc92426da1a6 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word walls into MD5... The value is: ed0aa5943823b898342750c7ef3a6959<br />The MD5 value ed0aa5943823b898342750c7ef3a6959 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word man into MD5... The value is: 39c63ddb96a31b9610cd976b896ad4f0<br />The MD5 value 39c63ddb96a31b9610cd976b896ad4f0 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word blah into MD5... The value is: 6f1ed002ab5595859014ebf0951522d9<br />The MD5 value 6f1ed002ab5595859014ebf0951522d9 is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />converting the word&nbsp; into MD5... The value is: d41d8cd98f00b204e9800998ecf8427e<br />The MD5 value d41d8cd98f00b204e9800998ecf8427e is not the same as the hash value you are looking for (7df9ad761904a6cd0dc1358949977da0)<br />The value of the hash is not in this dictionary!<br /></code></dd></dl><br /><br />Alright, that looks good. It shows us how it takes each word, converts it into MD5, and then compares that value to the original hash value. Now, let's run it now with our hash of yolo again and watch how the program processes it:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; php dict-detailed.php<br />Please enter in the hash to decrypt: 4fded1464736e77865df232cbcb4cd19<br />Please enter the full path to your dictionary: /home/ninjex/words.lst<br />converting the word hello into MD5... The value is: 5d41402abc4b2a76b9719d911017c592<br />The MD5 value 5d41402abc4b2a76b9719d911017c592 is not the same as the hash value you are looking for (4fded1464736e77865df232cbcb4cd19)<br />converting the word dude into MD5... The value is: 13b73edae8443990be1aa8f1a483bc27<br />The MD5 value 13b73edae8443990be1aa8f1a483bc27 is not the same as the hash value you are looking for (4fded1464736e77865df232cbcb4cd19)<br />converting the word bro into MD5... The value is: 0cfe0ef3a357503c4a4538414b870ca1<br />The MD5 value 0cfe0ef3a357503c4a4538414b870ca1 is not the same as the hash value you are looking for (4fded1464736e77865df232cbcb4cd19)<br />converting the word ninjex into MD5... The value is: 28128605a42f04917238713f71545f43<br />The MD5 value 28128605a42f04917238713f71545f43 is not the same as the hash value you are looking for (4fded1464736e77865df232cbcb4cd19)<br />converting the word wadup into MD5... The value is: a3f2773a871bf14dc8bcbe7d3b23c9f2<br />The MD5 value a3f2773a871bf14dc8bcbe7d3b23c9f2 is not the same as the hash value you are looking for (4fded1464736e77865df232cbcb4cd19)<br />converting the word yolo into MD5... The value is: 4fded1464736e77865df232cbcb4cd19<br />The MD5 value 4fded1464736e77865df232cbcb4cd19 is a match for the MD5 value you are looking for (4fded1464736e77865df232cbcb4cd19)<br />The value of the hash is: yolo<br /></code></dd></dl><br /><br />As you can see, once it converts and compares and the match is found, it breaks away from the program after giving us the word that was converted for that value.<br /><br />Great, great, so let's talk about a great performance boost we can create here.<br />With the way things are working out, we know we do things in this order for finding the value of hashes:<br />word ---&gt; convert into md5 hash ---&gt; compare to original hash<br />So looking at this, we can easily knock out half of the process. How would we do this? We will create a file with already converted hashes. This file is just a word list of already converted md5 words! So if you take your word list, convert it into md5 and save it, all you have to do now is compare the word to the original hash!<br /><br />Enough talk, let's create a file named convert.php, which will convert our file into the desired format:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>&lt;?php<br /><br />/*///---------------------------------------------------------------------------------------------------------------------------------------------------------<br /> &nbsp; &nbsp;convert.php<br />&nbsp; &nbsp; &nbsp; &nbsp; Created by: Ninjex<br />&nbsp; &nbsp;This is a php script that will convert a specific dictionary file into pre-converted hashes.<br />*///----------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />fwrite(STDOUT, &quot;Please enter the full path to your dictionary file: &quot;);<br />$dict = trim(fgets(STDIN)); // storing location in $dict<br /><br />//------------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />if(file_exists($dict)) { // if the dictionary file exists<br />&nbsp; &nbsp; $dict = fopen($dict, &quot;a+&quot;); // open up the dictionary<br />}<br /><br />//------------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />else { // if the dictionary file does not exist<br />&nbsp; &nbsp; echo &quot;Sorry, the location of the dictionary was not found. Please check the path location and your syntax!\n&quot;;<br />}<br /><br />//------------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />&nbsp; &nbsp; fwrite(STDOUT, &quot;Enter a name you wish to save the new file as: &quot;);<br />&nbsp; &nbsp; $file = trim(fgets(STDIN)); // grabbing a name from user to save the file as<br />&nbsp; &nbsp; $file = fopen($file, &quot;a+&quot;); // open up the file with write privs<br />&nbsp; &nbsp; echo &quot;Would you like to print the hashes to the terminal as they are converted?\n&quot;;<br />&nbsp; &nbsp; echo &quot;Choosing no will save time (Recommended for large files), while choosing yes will allow you to see the conversion in progress &#91;y/n&#93; &quot;;<br />&nbsp; &nbsp; $show = trim(fgets(STDIN)); // does the user want to show the hashes as they are converted?<br /><br />//-------------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />&nbsp; &nbsp; if($show == &quot;y&quot;) { // if the user does want to show the hashes as they are converted<br />&nbsp; &nbsp;&nbsp; &nbsp; while(!feof($dict)) { // while not at the end of the dictionary<br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $word = fgets($dict); // get the word on the current line<br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $word = rtrim($word); // remove trailing white space from that word<br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; $hash = md5($word); // convert that word into md5 format<br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; fwrite($file, $hash . &quot;\n&quot;); // write the word to our file with a carriage return \n<br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; echo &quot;MD5 value: $hash successfully stored inside the desired file!\n&quot;; // display the hash that was converted and added to the file<br />&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; }<br />&nbsp; &nbsp;}<br /><br />//------------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />&nbsp; &nbsp; else { // if the user did not want to show the hashes as they are converted<br />&nbsp; &nbsp;&nbsp; &nbsp; while(!feof($dict)) { // while not at the end of the dictionary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $word = fgets($dict); // get the word on the current line<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $word = rtrim($word); // remove trailing white space from that word<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $hash = md5($word); // convert that word into md5 format<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fwrite($file, $hash . &quot;\n&quot;); // write the word to our rainbow table with a carriage return \n<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; }<br /><br />//-------------------------------------------------------------------------------------------------------------------------------------------------------------<br /><br />&nbsp; &nbsp; fclose($dict); // close the dictionary file<br />&nbsp; &nbsp; fclose($file); // close the file, file<br /><br />?&gt;<br /></code></dd></dl><br /><br />Alright, let's run this and choose the option to display the hashes as they are converted, as we have a tiny word list, and it will be good for peering eyes to get a better understanding on how this is working:<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; php convert.php <br />Please enter the full path to your dictionary file: /home/ninjex/words.lst<br />Enter a name you wish to save the rainbow table as: words-rainbow.lst<br />Would you like to print the hashes to the terminal as they are converted?<br />Choosing no will save time (Recommended for large files), while choosing yes will allow you to see the conversion in progress &#91;y/n&#93; y<br />MD5 value: 5d41402abc4b2a76b9719d911017c592 successfully stored inside the desired file!<br />MD5 value: 13b73edae8443990be1aa8f1a483bc27 successfully stored inside the desired file!<br />MD5 value: 0cfe0ef3a357503c4a4538414b870ca1 successfully stored inside the desired file!<br />MD5 value: 28128605a42f04917238713f71545f43 successfully stored inside the desired file!<br />MD5 value: a3f2773a871bf14dc8bcbe7d3b23c9f2 successfully stored inside the desired file!<br />MD5 value: 4fded1464736e77865df232cbcb4cd19 successfully stored inside the desired file!<br />MD5 value: 57d0a8ca484ed8d1d1b8cc92426da1a6 successfully stored inside the desired file!<br />MD5 value: ed0aa5943823b898342750c7ef3a6959 successfully stored inside the desired file!<br />MD5 value: 39c63ddb96a31b9610cd976b896ad4f0 successfully stored inside the desired file!<br />MD5 value: 6f1ed002ab5595859014ebf0951522d9 successfully stored inside the desired file!<br />MD5 value: d41d8cd98f00b204e9800998ecf8427e successfully stored inside the desired file!<br /></code></dd></dl><br /><br />If you didn't notice, we get an extra value here, which is: d41d8cd98f00b204e9800998ecf8427e this value a empty string value and was added from the carriage return in the while function when adding the words into the file (            fwrite($file, $hash . &quot;\n&quot;); // write the word to our file with a carriage return \n)<br /><br />Okay, so I specified to name the file as words2.lst, so lets do a cat on that and see what we have!<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; cat words2.lst <br />5d41402abc4b2a76b9719d911017c592<br />13b73edae8443990be1aa8f1a483bc27<br />0cfe0ef3a357503c4a4538414b870ca1<br />28128605a42f04917238713f71545f43<br />a3f2773a871bf14dc8bcbe7d3b23c9f2<br />4fded1464736e77865df232cbcb4cd19<br />57d0a8ca484ed8d1d1b8cc92426da1a6<br />ed0aa5943823b898342750c7ef3a6959<br />39c63ddb96a31b9610cd976b896ad4f0<br />6f1ed002ab5595859014ebf0951522d9<br />d41d8cd98f00b204e9800998ecf8427e<br /></code></dd></dl><br /><br />So, now let's change it up a bit. I decided to write a very quick bash script, which I have poor programming in, so maybe someone can help out on this script to improve it. Basically the job of the bash script will be to take a hash, search for it in our already converted hash list, figure out the line number, and then print out the word of that line on our non converted md5 file. (It is important to keep the line numbers the same in both the converted md5 file and the non converted md5 file for this to work!<br />I named this file find.sh<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>#!/bin/bash<br />echo &quot;Enter the hash to search for: &quot;;<br />read hash;<br />echo &quot;Please enter the location to your file of converted hashes&quot;<br />read hashedfile<br />echo &quot;Please enter the location to your non converted hashes&quot;<br />read file<br /><br />line=$(sed -nE /$hash/= $hashedfile)<br />echo &quot;The hash was found on line: $line&quot;<br />command=p<br />value=$(sed -n $line$command $file)<br />echo &quot;The value of the hash is: $value&quot;<br /></code></dd></dl><br /><br />Alright, so you can see the main problems is that there is no error checking here, so your syntax must be correct. Also note that if you use a string that isn't in the file, it will say that the strings value belongs to that of the first word in the non converted md5 file (hello) since there is no error checking.<br /><br />Let's give this a test run, shall we? For this, we will use the value: ed0aa5943823b898342750c7ef3a6959 from our converted md5 file list.<br /><br /><dl class="codebox"><dt>Code: <a href="#" onclick="selectCode(this); return false;">Select all</a></dt><dd><code>ninjex@Kali:~ &gt;&gt; ./find.sh <br />Enter the hash to search for: <br />ed0aa5943823b898342750c7ef3a6959<br />Please enter the location to your file of converted hashes<br />/home/ninjex/words2.lst<br />Please enter the location to your non converted hashes<br />/home/ninjex/words.lst<br />The hash was found on line: 8<br />The value of the hash is: walls<br /></code></dd></dl><br /><br />There you have it, performance doubled, by simply converting the list into md5 and using a bash script from now on to search for the hash in the file, which it can do at a very very fast pace.<br /><br />Alright, I'm getting tired now...<br />I may update this tomorrow with more information, but don't quote me, because I get lazy or busy with projects.<br /><br />I hope you all, or most of you all enjoy this little rant on dictionary attacks,<br />- Ninjex</div>

			<div id="sig76164" class="signature"><span style="color: #0000FF">If you're not willing to learn, no one can help you. If you're determined to learn, no one can stop you.⠠⠵</span><br /><span style="color: #FF0000">The absence of evidence is not evidence of absence.</span><br /><span style="color: #00FFFF">I can explain it for you, but I can't understand it for you.</span></div>
		</div>

					<dl class="postprofile" id="profile76164">
			<dt>
				<a href="./memberlist.php?mode=viewprofile&amp;u=52717&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207"><img src="http://www.hackthissite.org/pages/user/avatar.view.forum.php?id=1777221" width="70" height="70" alt="User avatar" /></a><br />
				<a href="./memberlist.php?mode=viewprofile&amp;u=52717&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">-Ninjex-</a>			</dt>

			<dd>Addict<br /><img src="./images/ranks/blackboll_4.gif" alt="Addict" title="Addict" /></dd>
		<dd>&nbsp;</dd>

		<dd><strong>Posts:</strong> 1179</dd><dd><strong>Joined:</strong> Sun Sep 02, 2012 8:02 pm</dd>			<dd><strong>Blog:</strong> <a href="http://www.hackthissite.org/forums/blog/-Ninjex-/index_sid-7f8ec540fdc6d00ff27ba794e0deb207.html">View Blog (0)</a></dd>
		
		</dl>
	
		<div class="back2top"><a href="#wrap" class="top" title="Top"></a></div>

		<span class="corners-bottom"><span></span></span></div>
	</div>
<hr>
	<hr class="divider" />
	<div id="p76969" class="post bg1">
		<div class="inner"><span class="corners-top"><span></span></span>

		<div class="postbody">
			
			<h3 >
								<a href="#p76969">Re: Dictionary Attacks and a Bash Script?</a>
			</h3>
			<p class="author"><a href="./viewtopic.php?p=76969&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207#p76969"><img src="./styles/Carbon/imageset/icon_post_target.gif" width="11" height="9" alt="Post" title="Post" /></a>			by <strong><a href="./memberlist.php?mode=viewprofile&amp;u=14322&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Goatboy</a></strong> on Thu Aug 22, 2013 9:09 am			<br />([msg=76969]see Re: Dictionary Attacks and a Bash Script?[/msg])
			</p>

			
			<div class="content">Little late to the game, but this is something that would best be posted as an article on the main site.<br /><br />I haven't read the whole thing, though, so I can't say if it would get accepted or not.</div>

			<div id="sig76969" class="signature"><div align="center"><span style="font-style: italic">Assume that everything I say is or could be a lie.</span></div><div align="center">1UHQ15HqBRZFykqx7mKHpYroxanLjJcUk</div></div>
		</div>

					<dl class="postprofile" id="profile76969">
			<dt>
				<a href="./memberlist.php?mode=viewprofile&amp;u=14322&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207"><img src="http://www.hackthissite.org/pages/user/avatar.view.forum.php?id=1160901" width="70" height="70" alt="User avatar" /></a><br />
				<a href="./memberlist.php?mode=viewprofile&amp;u=14322&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Goatboy</a>			</dt>

			<dd>Expert<br /><img src="./images/ranks/blackboll_5.gif" alt="Expert" title="Expert" /></dd>
		<dd>&nbsp;</dd>

		<dd><strong>Posts:</strong> 2788</dd><dd><strong>Joined:</strong> Mon Jul 07, 2008 9:35 pm</dd>			<dd><strong>Blog:</strong> <a href="http://www.hackthissite.org/forums/blog/Goatboy/index_sid-7f8ec540fdc6d00ff27ba794e0deb207.html">View Blog (0)</a></dd>
		
		</dl>
	
		<div class="back2top"><a href="#wrap" class="top" title="Top"></a></div>

		<span class="corners-bottom"><span></span></span></div>
	</div>
<hr>
	<hr class="divider" />
	<div id="p76982" class="post bg2">
		<div class="inner"><span class="corners-top"><span></span></span>

		<div class="postbody">
			
			<h3 >
								<a href="#p76982">Re: Dictionary Attacks and a Bash Script?</a>
			</h3>
			<p class="author"><a href="./viewtopic.php?p=76982&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207#p76982"><img src="./styles/Carbon/imageset/icon_post_target.gif" width="11" height="9" alt="Post" title="Post" /></a>			by <strong><a href="./memberlist.php?mode=viewprofile&amp;u=37972&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" style="color: #FF0000;" class="username-coloured">mShred</a></strong> on Thu Aug 22, 2013 6:55 pm			<br />([msg=76982]see Re: Dictionary Attacks and a Bash Script?[/msg])
			</p>

			
			<div class="content">Hrm. Dunno how I missed this one.<br />I haven't exactly read it either though. But I shall, within time.</div>

			<div id="sig76982" class="signature"><div align="left"><img src="http://i.imgur.com/f4Rd8.png" alt="Image" /></div><br />For those about to rock.</div>
		</div>

					<dl class="postprofile" id="profile76982">
			<dt>
				<a href="./memberlist.php?mode=viewprofile&amp;u=37972&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207"><img src="http://www.hackthissite.org/pages/user/avatar.view.forum.php?id=1462035" width="70" height="70" alt="User avatar" /></a><br />
				<a href="./memberlist.php?mode=viewprofile&amp;u=37972&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" style="color: #FF0000;" class="username-coloured">mShred</a>			</dt>

			<dd>Administrator<br /><img src="./images/ranks/blackboll_admin.gif" alt="Administrator" title="Administrator" /></dd>
		<dd>&nbsp;</dd>

		<dd><strong>Posts:</strong> 1687</dd><dd><strong>Joined:</strong> Tue Jun 22, 2010 4:22 pm</dd>			<dd><strong>Blog:</strong> <a href="http://www.hackthissite.org/forums/blog/mShred/index_sid-7f8ec540fdc6d00ff27ba794e0deb207.html">View Blog (2)</a></dd>
					<dd>
				<ul class="profile-icons">
					<li class="email-icon"><a href="./memberlist.php?mode=email&amp;u=37972&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" title="E-mail"><span>E-mail</span></a></li>				</ul>
			</dd>
		
		</dl>
	
		<div class="back2top"><a href="#wrap" class="top" title="Top"></a></div>

		<span class="corners-bottom"><span></span></span></div>
	</div>
<hr>
	<hr class="divider" />
	<div id="p76983" class="post bg1 online">
		<div class="inner"><span class="corners-top"><span></span></span>

		<div class="postbody">
			
			<h3 >
								<a href="#p76983">Re: Dictionary Attacks and a Bash Script?</a>
			</h3>
			<p class="author"><a href="./viewtopic.php?p=76983&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207#p76983"><img src="./styles/Carbon/imageset/icon_post_target.gif" width="11" height="9" alt="Post" title="Post" /></a>			by <strong><a href="./memberlist.php?mode=viewprofile&amp;u=52717&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">-Ninjex-</a></strong> on Thu Aug 22, 2013 9:15 pm			<br />([msg=76983]see Re: Dictionary Attacks and a Bash Script?[/msg])
			</p>

			
			<div class="content"><blockquote><div><cite>mShred wrote:</cite>Hrm. Dunno how I missed this one.<br />I haven't exactly read it either though. But I shall, within time.</div></blockquote><br /><br />mShred, this is basically the concept you and I took on with the dictionary attacking using our bots. However, in this version it's a bit rough. I encrypted a regular file into md5 as a new file, and used a bash script to find a specified hash's line number if found, and then searched the regular file and echod the data on that line. I should update this with the more efficient way that we came up with.</div>

			<div id="sig76983" class="signature"><span style="color: #0000FF">If you're not willing to learn, no one can help you. If you're determined to learn, no one can stop you.⠠⠵</span><br /><span style="color: #FF0000">The absence of evidence is not evidence of absence.</span><br /><span style="color: #00FFFF">I can explain it for you, but I can't understand it for you.</span></div>
		</div>

					<dl class="postprofile" id="profile76983">
			<dt>
				<a href="./memberlist.php?mode=viewprofile&amp;u=52717&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207"><img src="http://www.hackthissite.org/pages/user/avatar.view.forum.php?id=1777221" width="70" height="70" alt="User avatar" /></a><br />
				<a href="./memberlist.php?mode=viewprofile&amp;u=52717&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">-Ninjex-</a>			</dt>

			<dd>Addict<br /><img src="./images/ranks/blackboll_4.gif" alt="Addict" title="Addict" /></dd>
		<dd>&nbsp;</dd>

		<dd><strong>Posts:</strong> 1179</dd><dd><strong>Joined:</strong> Sun Sep 02, 2012 8:02 pm</dd>			<dd><strong>Blog:</strong> <a href="http://www.hackthissite.org/forums/blog/-Ninjex-/index_sid-7f8ec540fdc6d00ff27ba794e0deb207.html">View Blog (0)</a></dd>
		
		</dl>
	
		<div class="back2top"><a href="#wrap" class="top" title="Top"></a></div>

		<span class="corners-bottom"><span></span></span></div>
	</div>
<hr>
	<hr class="divider" />
	<form id="viewtopic" method="post" action="./viewtopic.php?f=104&amp;t=10315&amp;start=0&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">

	<fieldset class="display-options" style="margin-top: 0; ">
				<label>Display posts from previous: <select name="st" id="st"><option value="0" selected="selected">All posts</option><option value="1">1 day</option><option value="7">7 days</option><option value="14">2 weeks</option><option value="30">1 month</option><option value="90">3 months</option><option value="180">6 months</option><option value="365">1 year</option></select></label>
		<label>Sort by <select name="sk" id="sk"><option value="a">Author</option><option value="t" selected="selected">Post time</option><option value="s">Subject</option></select></label> <label><select name="sd" id="sd"><option value="a" selected="selected">Ascending</option><option value="d">Descending</option></select> <input type="submit" name="sort" value="Go" class="button2" /></label>
	</fieldset>

	</form>
	<hr />

<div class="topic-actions">
	<div class="buttons">
			<div class="reply-icon"><a href="./posting.php?mode=reply&amp;f=104&amp;t=10315&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" title="Post a reply"><span></span>Post a reply</a></div>
		</div>

			<div class="pagination">
			4 posts			 &bull; Page <strong>1</strong> of <strong>1</strong>		</div>
	</div>

	<p></p><p><a href="./viewforum.php?f=104&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207" class="left-box left" accesskey="r">Return to Interpreted Languages</a></p>
	<form method="post" id="jumpbox" action="./viewforum.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" onsubmit="if(document.jumpbox.f.value == -1){return false;}">

			<fieldset class="jumpbox">
				<label for="f" accesskey="j">Jump to:</label>
			<select name="f" id="f" onchange="if(this.options[this.selectedIndex].value != -1){ document.forms['jumpbox'].submit() }">
							<option value="-1">Select a forum</option>
			<option value="-1">------------------</option>				<option value="5">Forum Guidelines</option>
							<option value="87">&nbsp; &nbsp;Terms of Service &amp; Additional Information</option>
							<option value="7">HackThisSite</option>
							<option value="8">&nbsp; &nbsp;News</option>
							<option value="9">&nbsp; &nbsp;Comments &amp; Suggestions</option>
							<option value="18">General Discussion</option>
							<option value="37">&nbsp; &nbsp;General</option>
							<option value="30">&nbsp; &nbsp;Networking</option>
							<option value="32">&nbsp; &nbsp;Telecommunications</option>
							<option value="39">&nbsp; &nbsp;Hardware</option>
							<option value="83">&nbsp; &nbsp;Books</option>
							<option value="33">&nbsp; &nbsp;Off-Topic</option>
							<option value="126">&nbsp; &nbsp;LULZ</option>
							<option value="128">&nbsp; &nbsp;&nbsp; &nbsp;Idiots' Corner</option>
							<option value="131">&nbsp; &nbsp;Gaming</option>
							<option value="155">&nbsp; &nbsp;PDF's and Articles</option>
							<option value="79">NZone</option>
							<option value="76">Graveyard</option>
							<option value="73">HTS Subprojects</option>
							<option value="125">&nbsp; &nbsp;Store</option>
							<option value="80">&nbsp; &nbsp;IRC</option>
							<option value="140">&nbsp; &nbsp;Lectures</option>
							<option value="142">&nbsp; &nbsp;&nbsp; &nbsp;Audio/IRC Downloads</option>
							<option value="144">&nbsp; &nbsp;&nbsp; &nbsp;OFFICIAL Lecture Approvals</option>
							<option value="145">&nbsp; &nbsp;Radio</option>
							<option value="13">HTS Missions</option>
							<option value="14">&nbsp; &nbsp;Basic</option>
							<option value="15">&nbsp; &nbsp;Realistic</option>
							<option value="50">&nbsp; &nbsp;&nbsp; &nbsp;(Real 1) Uncle Arnold's Local Band Review</option>
							<option value="51">&nbsp; &nbsp;&nbsp; &nbsp;(Real 2) Chicago American Nazi Party</option>
							<option value="52">&nbsp; &nbsp;&nbsp; &nbsp;(Real 3) Peace Poetry: HACKED</option>
							<option value="84">&nbsp; &nbsp;&nbsp; &nbsp;(Real 4) Fischer's Animal Products</option>
							<option value="53">&nbsp; &nbsp;&nbsp; &nbsp;(Real 5) Damn Telemarketers!</option>
							<option value="54">&nbsp; &nbsp;&nbsp; &nbsp;(Real 6) ToxiCo Industrial Chemicals</option>
							<option value="55">&nbsp; &nbsp;&nbsp; &nbsp;(Real 7) What's Right For America</option>
							<option value="56">&nbsp; &nbsp;&nbsp; &nbsp;(Real 8) United Banks Of America</option>
							<option value="57">&nbsp; &nbsp;&nbsp; &nbsp;(Real 9) CrappySoft</option>
							<option value="58">&nbsp; &nbsp;&nbsp; &nbsp;(Real 10) Holy Word High School</option>
							<option value="65">&nbsp; &nbsp;&nbsp; &nbsp;(Real 11) BudgetServ Web Hosting</option>
							<option value="64">&nbsp; &nbsp;&nbsp; &nbsp;(Real 12) Heartland School District</option>
							<option value="63">&nbsp; &nbsp;&nbsp; &nbsp;(Real 13) Elbonian Republican Party</option>
							<option value="62">&nbsp; &nbsp;&nbsp; &nbsp;(Real 14) Yuppers Internet Solutions</option>
							<option value="61">&nbsp; &nbsp;&nbsp; &nbsp;(Real 15) seculas Ltd.</option>
							<option value="60">&nbsp; &nbsp;&nbsp; &nbsp;(Real 16) Simple Mail</option>
							<option value="59">&nbsp; &nbsp;&nbsp; &nbsp;Hack This Site</option>
							<option value="16">&nbsp; &nbsp;Application</option>
							<option value="19">&nbsp; &nbsp;Programming</option>
							<option value="22">&nbsp; &nbsp;Extended Basics</option>
							<option value="21">&nbsp; &nbsp;Javascript</option>
							<option value="20">&nbsp; &nbsp;Steganography</option>
							<option value="23">&nbsp; &nbsp;IRC Missions</option>
							<option value="147">&nbsp; &nbsp;Forensic</option>
							<option value="157">&nbsp; &nbsp;User Submitted</option>
							<option value="17">Computers</option>
							<option value="31">&nbsp; &nbsp;Operating Systems</option>
							<option value="26">&nbsp; &nbsp;&nbsp; &nbsp;Microsoft Windows</option>
							<option value="27">&nbsp; &nbsp;&nbsp; &nbsp;*nix</option>
							<option value="124">&nbsp; &nbsp;&nbsp; &nbsp;Mac</option>
							<option value="24">&nbsp; &nbsp;Networking</option>
							<option value="28">&nbsp; &nbsp;Crypto</option>
							<option value="29">&nbsp; &nbsp;Malware</option>
							<option value="35">&nbsp; &nbsp;Telecommunications</option>
							<option value="151">&nbsp; &nbsp;&nbsp; &nbsp;Android</option>
							<option value="152">&nbsp; &nbsp;&nbsp; &nbsp;iOS</option>
							<option value="153">&nbsp; &nbsp;&nbsp; &nbsp;Windows</option>
							<option value="154">&nbsp; &nbsp;&nbsp; &nbsp;Blackberry</option>
							<option value="36">&nbsp; &nbsp;Programming</option>
							<option value="102">&nbsp; &nbsp;&nbsp; &nbsp;C and C++</option>
							<option value="104" selected="selected">&nbsp; &nbsp;&nbsp; &nbsp;Interpreted Languages</option>
							<option value="156">&nbsp; &nbsp;&nbsp; &nbsp;Custom Code</option>
							<option value="38">&nbsp; &nbsp;Web</option>
							<option value="116">&nbsp; &nbsp;Social Engineering</option>
							<option value="40">Philosophy</option>
							<option value="41">&nbsp; &nbsp;Politics</option>
							<option value="42">&nbsp; &nbsp;Ethics</option>
							<option value="43">&nbsp; &nbsp;General</option>
							<option value="67">&nbsp; &nbsp;Religion</option>
							<option value="68">&nbsp; &nbsp;Math &amp; Science</option>
							<option value="90">Graphic Design &amp; Web Design</option>
							<option value="92">&nbsp; &nbsp;General design</option>
							<option value="98">&nbsp; &nbsp;Web Design</option>
							<option value="99">&nbsp; &nbsp;Modeling and Animation</option>
						</select>
			<input type="submit" value="Go" class="button2" />
		</fieldset>
	</form>

	<h3><a href="./viewonline.php?sid=7f8ec540fdc6d00ff27ba794e0deb207">Who is online</a></h3>
	<p>Users browsing this forum: No registered users and 0 guests</p>
</div>

<div id="page-footer">
			<div class="rules">
			<div class="inner"><span class="corners-top"><span></span></span>
			<dl>
				<dd><strong>Disclaimer : </strong></dd><dd>HackThisSite does not support illegal activities.<br />The management of this board is not responsible for the content of any external internet sites.</dd>
			</dl>
			<span class="corners-bottom"><span></span></span></div>
		</div>
	
	<div class="navbar">
		<div class="inner"><span class="corners-top"><span></span></span>

		<ul class="linklist">
			<li class="icon-home"><a href="./index.php?sid=7f8ec540fdc6d00ff27ba794e0deb207" accesskey="h">Board index</a></li>
							<li class="rightside"><a href="./memberlist.php?mode=leaders&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">The team</a> &bull; <a href="./ucp.php?mode=delete_cookies&amp;sid=7f8ec540fdc6d00ff27ba794e0deb207">Delete all board cookies</a> &bull; All times are UTC - 5 hours </li>
		</ul>

		<span class="corners-bottom"><span></span></span></div>
	</div>

	<div class="copyright">Powered by <a href="http://www.phpbb.com/">phpBB</a> &copy; 2000-2009 phpBB Group
      <div class="copyright">Carbon Style By Echo <a href="http://www.echological.com">-=Designs By Echo=-</a> &copy; 2007 Echo
		 	<br /><strong><a href="./acp/index.php?sid=7f8ec540fdc6d00ff27ba794e0deb207">Administration Control Panel</a></strong>
			</div>
</div>

</div>

<div>
	<a id="bottom" name="bottom" accesskey="z"></a>
	</div>

</body>
</html>
