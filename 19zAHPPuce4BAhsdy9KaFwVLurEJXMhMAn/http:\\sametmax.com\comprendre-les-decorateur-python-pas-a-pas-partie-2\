http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/
HTTP/1.1 200 OK
Content-Type: text/html; charset=UTF-8
X-Pingback: http://sametmax.com/xmlrpc.php
Link: <http://wp.me/p2ckfk-b1>; rel=shortlink
Content-Encoding: gzip
Content-Length: 27472
Accept-Ranges: bytes
Date: Wed, 23 Jul 2014 09:23:36 GMT
Age: 0
Connection: close
x-Cache: uncached
url: /comprendre-les-decorateur-python-pas-a-pas-partie-2/

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="fr-FR" >
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>  Comprendre les décorateurs Python pas à pas (partie 2) | Sam &amp; Max: Python, Django, Git et du cul</title>
<meta http-equiv="Content-Language" content="fr" />

<link rel="shortcut icon" href="/wp-content/uploads/2012/05/favicon.ico">

<link rel="stylesheet" href="http://sametmax.com/wp-content/themes/Minimal/style.css?238" type="text/css" media="screen" />
<link rel="alternate" type="application/rss+xml" title="Sam &amp; Max: Python, Django, Git et du cul RSS Feed" href="http://sametmax.com/feed/" />
<link rel="alternate" type="application/atom+xml" title="Sam &amp; Max: Python, Django, Git et du cul Atom Feed" href="http://sametmax.com/feed/atom/" />
<link rel="pingback" href="http://sametmax.com/xmlrpc.php" />


<!--[if lt IE 7]>
	<link rel="stylesheet" type="text/css" href="http://sametmax.com/wp-content/themes/Minimal/css/ie6style.css" />
	<script type="text/javascript" src="http://sametmax.com/wp-content/themes/Minimal/js/DD_belatedPNG_0.0.8a-min.js"></script>
	<script type="text/javascript">DD_belatedPNG.fix('img#logo, #header #search-form, #slogan, a#left_arrow, a#right_arrow, div.slide img.thumb, div#controllers a, a.readmore, a.readmore span, #services .one-third, #services .one-third.first img.icon, #services img.icon, div.sidebar-block .widget ul li');</script>
<![endif]-->
<!--[if IE 7]>
	<link rel="stylesheet" type="text/css" href="http://sametmax.com/wp-content/themes/Minimal/css/ie7style.css" />
<![endif]-->

<script type="text/javascript">
	document.documentElement.className = 'js';
</script>

<script type="text/javascript">
(function() {
	var s = document.createElement('SCRIPT'), s1 = document.getElementsByTagName('SCRIPT')[0];
	s.type = 'text/javascript';
	s.async = true;
	s.src = 'http://widgets.digg.com/buttons.js';
	s1.parentNode.insertBefore(s, s1);
})();
</script>
<link rel="alternate" type="application/rss+xml" title="Sam &amp; Max: Python, Django, Git et du cul &raquo; Feed" href="http://sametmax.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Sam &amp; Max: Python, Django, Git et du cul &raquo; Comments Feed" href="http://sametmax.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Sam &amp; Max: Python, Django, Git et du cul &raquo; Comprendre les décorateurs Python pas à pas (partie 2) Comments Feed" href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/feed/" />
<meta content="Minimal v.3.3" name="generator"/><link media="screen" type="text/css" href="http://sametmax.com/wp-content/themes/Minimal/epanel/page_templates/js/fancybox/jquery.fancybox-1.3.4.css" rel="stylesheet" />
<link media="screen" type="text/css" href="http://sametmax.com/wp-content/themes/Minimal/epanel/page_templates/page_templates.css" rel="stylesheet" /><link rel='stylesheet' id='tags-page-css'  href='http://sametmax.com/wp-content/plugins/tags-page/tags-page.css?ver=3.3.1' type='text/css' media='all' />
<link rel='stylesheet' id='contact-form-7-css'  href='http://sametmax.com/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=3.3' type='text/css' media='all' />
<link rel='stylesheet' id='wp-polls-css'  href='http://sametmax.com/wp-content/plugins/wp-polls/polls-css.css?ver=2.63' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-widgets-css'  href='http://sametmax.com/wp-content/plugins/jetpack/modules/widgets/widgets.css?ver=20121003' type='text/css' media='all' />
<link rel='stylesheet' id='et-shortcodes-css-css'  href='http://sametmax.com/wp-content/themes/Minimal/epanel/shortcodes/shortcodes.css?ver=1.8' type='text/css' media='all' />
<link rel='stylesheet' id='sharedaddy-css'  href='http://sametmax.com/wp-content/plugins/jetpack/modules/sharedaddy/sharing.css?ver=2.6.1' type='text/css' media='all' />
<link rel='stylesheet' id='cfq-css'  href='http://sametmax.com/wp-content/plugins/comment-form-quicktags/style.css?ver=20110712' type='text/css' media='all' />
<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/tags-page/webtoolkit.sortabletable.js?ver=3.3.1'></script>
<script type='text/javascript' src='http://sametmax.com/wp-includes/js/jquery/jquery.js?ver=1.7.1'></script>
<script type='text/javascript' src='http://sametmax.com/wp-includes/js/comment-reply.js?ver=20090102'></script>
<script type='text/javascript' src='http://sametmax.com/wp-content/themes/Minimal/epanel/shortcodes/js/et_shortcodes_frontend.js?ver=1.8'></script>
<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/comment-form-quicktags/quicktags.php?ver=20121011'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://sametmax.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://sametmax.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Checker ses process et les relancer en cas de plantage' href='http://sametmax.com/checker-ses-process-et-les-relancer-en-cas-de-plantage/' />
<link rel='next' title='Comment j&#8217;ai arnaqué un site de vente en ligne' href='http://sametmax.com/comment-jai-arnaque-un-site-de-vente-en-ligne/' />
<meta name="generator" content="WordPress 3.3.1" />
<link rel='canonical' href='http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/' />
<link rel='shortlink' href='http://wp.me/p2ckfk-b1' />
<link rel="payment" type="text/html" title="Flattr this!" href="https://flattr.com/submit/auto?user_id=sam_et_max&amp;popout=1&amp;url=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&amp;language=en_GB&amp;category=text&amp;title=Comprendre+les+d%C3%A9corateurs+Python+pas+%C3%A0+pas+%28partie+2%29&amp;description=Partager%3AEmailMore+Pin+ItShare+on+TumblrDiggPocketNo+related+posts.&amp;tags=decorators%2Cpython%2Cblog" />
<style type="text/css">
.wp-polls .pollbar {
	margin: 1px;
	font-size: 6px;
	line-height: 8px;
	height: 8px;
	background-image: url('http://sametmax.com/wp-content/plugins/wp-polls/images/default/pollbg.gif');
	border: 1px solid #c8c8c8;
}
</style>

<link rel="stylesheet" href="http://sametmax.com/wp-content/plugins/wp-syntax/wp-syntax.css" type="text/css" media="screen" />

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Comprendre les décorateurs Python pas à pas (partie 2)" />
<meta property="og:url" content="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/" />
<meta property="og:description" content="Dans l&#039;article précédent, nous avons vu comment fonctionnaient les décorateurs. Mais dans leur usage quotidien vous aller rencontrer des cas particuliers comme passer des arguments. Voici de quoi y..." />
<meta property="og:site_name" content="Sam &amp; Max: Python, Django, Git et du cul" />
<meta property="og:image" content="http://sametmax.com/wp-content/uploads/2012/05/green-snake-branch-080909_3635_990x742.jpg" />
<meta name="twitter:site" content="@jetpack" />
<meta name="twitter:image:src" content="http://sametmax.com/wp-content/uploads/2012/05/green-snake-branch-080909_3635_990x742.jpg?w=640" />
<meta name="twitter:card" content="summary_large_image" />
<style type="text/css" media="all">
/* <![CDATA[ */
@import url("http://sametmax.com/wp-content/plugins/wp-table-reloaded/css/plugin.css?ver=1.9.3");
@import url("http://sametmax.com/wp-content/plugins/wp-table-reloaded/css/datatables.css?ver=1.9.3");
/* ]]> */
</style>	<style type="text/css">
		#et_pt_portfolio_gallery { margin-left: -11px; }
		.et_pt_portfolio_item { margin-left: 23px; }
		.et_portfolio_small { margin-left: -39px !important; }
		.et_portfolio_small .et_pt_portfolio_item { margin-left: 35px !important; }
		.et_portfolio_large { margin-left: -20px !important; }
		.et_portfolio_large .et_pt_portfolio_item { margin-left: 14px !important; }
	</style>

</head>
<body>
	<div id="page-wrap">
			
		<div id="header">
			<!-- Start Logo -->
				<a href="http://sametmax.com">					<img src="http://sametmax.com/wp-content/uploads/2012/04/logo1.png" alt="Logo" id="logo"/></a>
				
				<p id="slogan">Deux développeurs en vadrouille qui se sortent les doigts du code</p>
					
			<!-- End Logo -->
					
			<!-- Start Searchbox -->
				<div id="search-form">
					<form method="get" id="searchform1" action="http://sametmax.com/">
						<input type="text" value="search this site..." name="s" id="searchinput" />
					</form>
				</div>
								
			<!-- End Searchbox -->
				
				<div class="clear"></div>
				
				<ul id="menu-top-menu" class="superfish nav clearfix"><li id="menu-item-1702" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-1702"><a href="http://sametmax.com/category/programmation/">Programmation</a></li>
<li id="menu-item-1703" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1703"><a href="http://sametmax.com/category/administration-system/">Admin System</a></li>
<li id="menu-item-1704" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1704"><a href="http://sametmax.com/category/philo-et-culture/">Philo et culture</a></li>
<li id="menu-item-1706" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1706"><a href="http://sametmax.com/category/cul/">Cul</a></li>
<li id="menu-item-3340" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3340"><a href="http://sametmax.com/cours-et-tutos/">Cours et tutos</a></li>
<li id="menu-item-2610" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2610"><a href="http://sametmax.com/nos-tweets/">Nos tweets SANS twitter :-)</a></li>
<li id="menu-item-1707" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1707"><a title="Les meilleurs blogs du Web" href="http://multiboards.net/">Multiboards</a></li>
<li id="menu-item-7439" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-7439"><a href="https://github.com/sametmax/">Nos githuberies</a></li>
</ul>									
		</div> <!-- end #header -->

		<div id="breadcrumbs">
		
					<a href="http://sametmax.com">Home</a> &raquo;
				
									<a href="http://sametmax.com/category/programmation/">Programmation</a> &raquo; Comprendre les décorateurs Python pas à pas (partie 2)					
</div> <!-- end #breadcrumbs -->		
	
	<div id="content" class="clearfix">
		<div id="content-area">
					<div class="entry clearfix">
				<h1 class="title">Comprendre les décorateurs Python pas à pas (partie 2)</h1>
					<p class="post-meta">
		Posted  by <a href="http://sametmax.com/author/sam/" title="Posts by Sam" rel="author">Sam</a> on 22 May 2012 in <a href="http://sametmax.com/category/programmation/" title="View all posts in Programmation" rel="category tag">Programmation</a> | <a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comments" title="Comment on Comprendre les décorateurs Python pas à pas (partie 2)">19 comments</a>	</p>
				
							
									
						
								
				<p>Dans la <a href="http://sametmax.com/comprendre-les-decorateurs-python-pas-a-pas-partie-1/">partie 1</a>, nous avons vu comment fonctionnaient les décorateurs. Mais dans leur usage quotidien vous allez rencontrer des cas particuliers:</p>
<ul>
<li>Comment faire si la fonction décorée attend des arguments ?</li>
<li>Comment changer le comportement d&#8217;un décorateur en lui passant des paramètres ?</li>
<li>Comment préserver l&#8217;introspection ?</li>
</ul>
<h2>Introspection</h2>
<p>Un des grands avantages de Python, c&#8217;est qu&#8217;il permet une très forte introspection, c&#8217;est à dire qu&#8217;on peut accéder à énormément d&#8217;informations sur le code lui-même.</p>
<p>Par exemple, si vous mettez une docstring à une fonction:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> ma_fonction<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    <span style="color: #483d8b;">&quot;&quot;&quot;
        C'est une super fonction
    &quot;&quot;&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">pass</span></pre></div></div>

<p>Vous pouvez ensuite récupérer la docstring très facilement:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> ma_fonction.__doc__ <span style="color: #483d8b;">&quot;<span style="color: #000099; font-weight: bold;">\n</span>            C'est une super fonction<span style="color: #000099; font-weight: bold;">\n</span>        &quot;</span></pre></div></div>

<p>Et vous pouvez la lire dans l&#8217;aide:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: #008000;">help</span><span style="color: black;">&#40;</span>ma_fonction<span style="color: black;">&#41;</span>
Help on function ma_fonction <span style="color: #ff7700;font-weight:bold;">in</span> module <span style="color: #dc143c;">__main__</span>:
&nbsp;
ma_fonction<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
    C<span style="color: #483d8b;">'est une super fonction
(END)</span></pre></div></div>

<p>L&#8217;autocompletion, la liste des attributs, le nom de la classe, etc. Toutes ces choses sont rendues accessibles grâce à l&#8217;introspection.</p>
<p>Mais quand vous décorez une fonction, vous l&#8217;enrobez dans une autre, détruisant ces informations:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> decorateur_inutile<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">def</span> wrapper<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
        func<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> wrapper
&nbsp;
@decorateur_inutile
<span style="color: #ff7700;font-weight:bold;">def</span> ma_fonction<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    <span style="color: #483d8b;">&quot;&quot;&quot;
        C'est une super fonction
    &quot;&quot;&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">pass</span>
&nbsp;
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: #ff7700;font-weight:bold;">print</span> ma_fonction.__doc__
<span style="color: #008000;">None</span>
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: #008000;">help</span><span style="color: black;">&#40;</span>ma_fonction<span style="color: black;">&#41;</span>
Help on function wrapper <span style="color: #ff7700;font-weight:bold;">in</span> module <span style="color: #dc143c;">__main__</span>:
&nbsp;
wrapper<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span></pre></div></div>

<p>En effet, <code>ma_fonction</code> contient maitenant <code>wrapper</code> et non la fonction initiale. Heureusement le module <code>functool</code> possède des outils pour y pallier.</p>
<p>Le plus utile est le décorateur <code>@wraps</code>, qui copie littéralement toutes les infos d&#8217;une fonction sur son wrapper:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">from</span> functools <span style="color: #ff7700;font-weight:bold;">import</span> wraps
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> decorateur_inutile<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
    @wraps<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span> <span style="color: #808080; font-style: italic;"># il suffit de décorer le wrapper</span>
    <span style="color: #ff7700;font-weight:bold;">def</span> wrapper<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
        func<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> wrapper
&nbsp;
@decorateur_inutile
<span style="color: #ff7700;font-weight:bold;">def</span> ma_fonction<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    <span style="color: #483d8b;">&quot;&quot;&quot;
        C'est une super fonction
    &quot;&quot;&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">pass</span></pre></div></div>

<p>Et tout s&#8217;arrange:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> ma_fonction.__doc__
<span style="color: #483d8b;">&quot;<span style="color: #000099; font-weight: bold;">\n</span>        C'est une super fonction<span style="color: #000099; font-weight: bold;">\n</span>    &quot;</span></pre></div></div>

<h2>Fonction avec arguments</h2>
<p>Jusqu&#8217;ici les fonctions que nous avons décorées n&#8217;attendaient pas d&#8217;arguments. Il faut en effet faire un petit effort supplémentaire pour les supporter.</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #808080; font-style: italic;"># Pas de magie noire, c'est le wrapper qui passe l'argument:</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> un_decorateur_passant_un_argument<span style="color: black;">&#40;</span>fonction_a_decorer<span style="color: black;">&#41;</span>:
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">def</span> un_wrapper_acceptant_des_arguments<span style="color: black;">&#40;</span>arg1, arg2<span style="color: black;">&#41;</span>:
        <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;J'ai des arguments regarde :&quot;</span>, arg1, arg2
        fonction_a_decorer<span style="color: black;">&#40;</span>arg1, arg2<span style="color: black;">&#41;</span>
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">return</span> un_wrapper_acceptant_des_arguments
&nbsp;
<span style="color: #808080; font-style: italic;"># Puisqu'on appelle en fait un_wrapper_acceptant_des_arguments(),</span>
<span style="color: #808080; font-style: italic;"># il accepte les arguments, et les passe à la fonctions décorée</span>
&nbsp;
@un_decorateur_passant_un_argument
<span style="color: #ff7700;font-weight:bold;">def</span> afficher_nom<span style="color: black;">&#40;</span>nom, prenom<span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Mon nom est&quot;</span>, nom, prenom
&nbsp;
afficher_nom<span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Peter&quot;</span>, <span style="color: #483d8b;">&quot;Venkman&quot;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;"># output:</span>
<span style="color: #808080; font-style: italic;">#J'ai des arguments regarde : Peter Venkman</span>
<span style="color: #808080; font-style: italic;">#My name is Peter Venkman</span></pre></div></div>

<p>Du coup pour décorer une méthode, il suffit d&#8217;accepter que le décorateur accepte <code>self</code>. Le moyen le plus simple est encore d&#8217;accepter <code>*args, **kwargs</code>, comme ça on est paré pour tous les cas.</p>
<p>Mais attention, si vous acceptez <code>*args, **kwargs</code>, la liste des arguments ne sera plus disponible pour l&#8217;introspection. C&#8217;est quelque chose que <code>@wraps</code> ne peut pas changer. La plupart du temps, c&#8217;est un compromis acceptable.</p>
<h2>Passer un argument au décorateur lui-même</h2>
<p>Le problème d&#8217;un décorateur, c&#8217;est qu&#8217;il doit accepter une fonction en paramètre. Pourtant, vous avez bien vu que <code>@wraps</code> accepte lui même un argument. C&#8217;est qu&#8217;il existe donc un moyen de passer un argument au décorateur lui-même.</p>
<p>La solution est tordue: créer un décorateur à la volée. En fait ce decorateur ne sera plus le décorateur, mais le créateur de décorateur. Il y aura donc 3 niveaux d&#8217;imbrication&#8230; C&#8217;est parti pour une session de vaudou :</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> createur_de_decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Je fabrique des décorateurs. Je suis éxécuté une seule fois :&quot;</span> +
           <span style="color: #483d8b;">&quot;à la création du décorateur&quot;</span><span style="color: black;">&#41;</span>
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">def</span> mon_decorateur<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
&nbsp;
        <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Je suis un décorateur, je suis éxécuté une seule fois quand on décore la fonction&quot;</span>
&nbsp;
        <span style="color: #ff7700;font-weight:bold;">def</span> wrapper<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
            <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Je suis le wrapper autour de la fonction décorée. &quot;</span>
                  <span style="color: #483d8b;">&quot;Je suis appelé quand on appelle la fonction décorée. &quot;</span>
                  <span style="color: #483d8b;">&quot;En tant que wrapper, je retourne le RESULTAT de la fonction décorée.&quot;</span><span style="color: black;">&#41;</span>
            <span style="color: #ff7700;font-weight:bold;">return</span> func<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
&nbsp;
        <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;En tant que décorateur, je retourne le wrapper&quot;</span>
&nbsp;
        <span style="color: #ff7700;font-weight:bold;">return</span> wrapper
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;En tant que créateur de décorateur, je retourne un décorateur&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> mon_decorateur
&nbsp;
<span style="color: #808080; font-style: italic;"># Créons un décorateur, c'est juste une fonction après tout.</span>
nouveau_decorateur = createur_de_decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je fabrique des décorateurs. Je suis éxécuté une seule fois : à la création du décorateur.</span>
<span style="color: #808080; font-style: italic;">#En tant que créateur de décorateur, je retourne un décorateur</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># Ensuite décorons la fonction</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> fonction_decoree<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Je suis la fonction décorée&quot;</span>
&nbsp;
fonction_decoree = nouveau_decorateur<span style="color: black;">&#40;</span>fonction_decoree<span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je suis un décorateur, je suis éxécuté une seule fois quand on décore la fonction</span>
<span style="color: #808080; font-style: italic;">#En tant que décorateur, je retourne la fonction décorée</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># Appelons la fonction:</span>
fonction_decoree<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je suis le wrapper autour de la fonction décorée. Je suis appelé quand on appelle la fonction décorée.</span>
<span style="color: #808080; font-style: italic;">#En tant que wrapper, je retourne le RESULTAT de la fonction décorée.</span>
<span style="color: #808080; font-style: italic;">#Je suis la fonction décorée</span></pre></div></div>

<p>Aucune surprise ici. Faisons EXACTEMENT la même chose, mais en sautant les variables intermédiares.</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> fonction_decoree<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Je suis la fonction décorée&quot;</span>
fonction_decoree = createur_de_decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span><span style="color: black;">&#40;</span>fonction_decoree<span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je fabrique des décorateurs. Je suis éxécuté une seule fois : à la création du décorateur.</span>
<span style="color: #808080; font-style: italic;">#En tant que créateur de décorateur, je retourne un décorateur</span>
<span style="color: #808080; font-style: italic;">#Je suis un décorateur, je suis éxécuté une seule fois quand on décore la fonction</span>
<span style="color: #808080; font-style: italic;">#En tant que décorateur, je retourne la fonction décorée.</span>
&nbsp;
<span style="color: #808080; font-style: italic;"># Au final:</span>
fonction_decoree<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je suis le wrapper autour de la fonction décorée. Je suis appelé quand on appelle la fonction décorée.</span>
<span style="color: #808080; font-style: italic;">#En tant que wrapper, je retourne le RESULTAT de la fonction décorée.</span>
<span style="color: #808080; font-style: italic;">#Je suis la fonction décorée</span></pre></div></div>

<p>On recommence, en encore plus court::</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">@createur_de_decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #ff7700;font-weight:bold;">def</span> fonction_decoree<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Je suis la fonction décorée&quot;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je fabrique des décorateurs. Je suis éxécuté une seule fois : à la création du décorateur.</span>
<span style="color: #808080; font-style: italic;">#En tant que créateur de décorateur, je retourne un décorateur</span>
<span style="color: #808080; font-style: italic;">#Je suis un décorateur, je suis éxécuté une seule fois quand on décore la fonction</span>
<span style="color: #808080; font-style: italic;">#En tant que décorateur, je retourne la fonction décorée.</span>
&nbsp;
<span style="color: #808080; font-style: italic;">#Et pour finir:</span>
fonction_decoree<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#ouputs:</span>
<span style="color: #808080; font-style: italic;">#Je suis le wrapper autour de la fonction décorée. Je suis appelé quand on appelle la fonction décorée.</span>
<span style="color: #808080; font-style: italic;">#En tant que wrapper, je retourne le RESULTAT de la fonction décorée.</span>
<span style="color: #808080; font-style: italic;">#Je suis la fonction décorée</span></pre></div></div>

<p>Vous noterez qu&#8217;on a utilisé la notation <code>@</code>, avec un appel de fonction: <code>@createur_de_decorateur()</code> et non <code>@createur_de_decorateur</code> !</p>
<p>Maintenant que nous pouvons générer des décorateurs à la volée, il suffit de passer des arguments au créateur de décorateur:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> createur_de_decorateur_avec_arguments<span style="color: black;">&#40;</span>decorator_arg1, decorator_arg2<span style="color: black;">&#41;</span>:
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Je créé des décorateur et j'accepte des arguments:&quot;</span>, decorator_arg1, decorator_arg2
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">def</span> mon_decorateur<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
        <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;Je suis un décorateur, vous me passez des arguments:&quot;</span>, decorator_arg1, decorator_arg2
&nbsp;
        <span style="color: #808080; font-style: italic;"># Ne pas mélanger les arguments du décorateurs et de la fonction !</span>
        <span style="color: #ff7700;font-weight:bold;">def</span> wrapped<span style="color: black;">&#40;</span>function_arg1, function_arg2<span style="color: black;">&#41;</span> :
            <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Je suis le wrapper autour de la fonction décorée.<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>
                  <span style="color: #483d8b;">&quot;Je peux accéder à toutes les variables<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>
                  <span style="color: #483d8b;">&quot;<span style="color: #000099; font-weight: bold;">\t</span>- du décorateur: {0} {1}<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>
                  <span style="color: #483d8b;">&quot;<span style="color: #000099; font-weight: bold;">\t</span>- de l'appel de la fonction: {2} {3}<span style="color: #000099; font-weight: bold;">\n</span>&quot;</span>
                  <span style="color: #483d8b;">&quot;Et je les passe ensuite à la fonction décorée&quot;</span>
                  .<span style="color: black;">format</span><span style="color: black;">&#40;</span>decorator_arg1, decorator_arg2,
                          function_arg1, function_arg2<span style="color: black;">&#41;</span><span style="color: black;">&#41;</span>
            <span style="color: #ff7700;font-weight:bold;">return</span> func<span style="color: black;">&#40;</span>function_arg1, function_arg2<span style="color: black;">&#41;</span>
&nbsp;
        <span style="color: #ff7700;font-weight:bold;">return</span> wrapped
&nbsp;
    <span style="color: #ff7700;font-weight:bold;">return</span> mon_decorateur
&nbsp;
@createur_de_decorateur_avec_arguments<span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Leonard&quot;</span>, <span style="color: #483d8b;">&quot;Sheldon&quot;</span><span style="color: black;">&#41;</span>
<span style="color: #ff7700;font-weight:bold;">def</span> fonction_decoree_avec_arguments<span style="color: black;">&#40;</span>function_arg1, function_arg2<span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Je suis une fonctions décorée, je ne me soucie que de mes arguments: {0}&quot;</span>
           <span style="color: #483d8b;">&quot; {1}&quot;</span>.<span style="color: black;">format</span><span style="color: black;">&#40;</span>function_arg1, function_arg2<span style="color: black;">&#41;</span><span style="color: black;">&#41;</span>
&nbsp;
fonction_decoree_avec_arguments<span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Rajesh&quot;</span>, <span style="color: #483d8b;">&quot;Howard&quot;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#output:</span>
<span style="color: #808080; font-style: italic;">#Je crée des décorateurs et j'accepte des arguments: Leonard Sheldon</span>
<span style="color: #808080; font-style: italic;">#Je suis un décorateur, vous me passez des arguments: Leonard Sheldon</span>
<span style="color: #808080; font-style: italic;">#Je suis le wrapper autour de la fonction décorée function.</span>
<span style="color: #808080; font-style: italic;">#Je peux accéder à toutes les variables</span>
<span style="color: #808080; font-style: italic;">#   - du décorateur: Leonard Sheldon</span>
<span style="color: #808080; font-style: italic;">#   - de l'appel de la fonction: Rajesh Howard</span>
<span style="color: #808080; font-style: italic;">#Et je les passe ensuite à la fonction décorée</span>
<span style="color: #808080; font-style: italic;">#Je suis une fonction décorée, je ne me soucie que de mes arguments: Rajesh Howard</span></pre></div></div>

<p><code>mon_decorateur</code> a accès aux variables du scope supérieur car elles sont dans une closure. <a href="http://sametmax.com/closure-en-python-et-javascript/">Vous ne pourrez donc pas les modifier</a>.</p>
<p>Et voilà, un décorateur avec des arguments ! Les arguments peuvent être des<br />
variables:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">c1 = <span style="color: #483d8b;">&quot;Penny&quot;</span>
c2 = <span style="color: #483d8b;">&quot;Leslie&quot;</span>
&nbsp;
@createur_de_decorateur_avec_arguments<span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Leonard&quot;</span>, c1<span style="color: black;">&#41;</span>
<span style="color: #ff7700;font-weight:bold;">def</span> fonction_decoree_avec_arguments<span style="color: black;">&#40;</span>function_arg1, function_arg2<span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Je suis une fonctions décorée, je ne me soucie que de mes arguments:&quot;</span>
           <span style="color: #483d8b;">&quot; {0} {1}&quot;</span>.<span style="color: black;">format</span><span style="color: black;">&#40;</span>function_arg1, function_arg2<span style="color: black;">&#41;</span><span style="color: black;">&#41;</span>
&nbsp;
fonction_decoree_avec_arguments<span style="color: black;">&#40;</span>c2, <span style="color: #483d8b;">&quot;Howard&quot;</span><span style="color: black;">&#41;</span>
<span style="color: #808080; font-style: italic;">#output:</span>
<span style="color: #808080; font-style: italic;">#Je créé des décorateurs et j'accepte des arguments: Leonard Penny</span>
<span style="color: #808080; font-style: italic;">#Je suis un décorateur, vous me passez des arguments: Leonard Penny</span>
<span style="color: #808080; font-style: italic;">#Je suis le wrapper autour de la fonction décorée function.</span>
<span style="color: #808080; font-style: italic;">#Je peux accéder à toutes les variables</span>
<span style="color: #808080; font-style: italic;">#   - du décorateur: Leonard Penny</span>
<span style="color: #808080; font-style: italic;">#   - de l'appel de la fonction: Leslie Howard</span>
<span style="color: #808080; font-style: italic;">#Et je les passe ensuite à la fonction décorée</span>
<span style="color: #808080; font-style: italic;">#Je suis une fonctions décorée, je ne me soucie que de mes arguments: Leslie Howard</span></pre></div></div>

<p>Comme vous le voyez, on peut passer des arguments au décorateur comme à n&#8217;importe quelle fonction en utilisant cette astuce. En fait on peut même utiliser <code>*args, **kwargs</code>. Mais rappelez-vous: les décorateurs sont appelés uniquement une fois, au moment de l&#8217;import du script. On ne peut pas changer leurs arguments à posteriori. Quand vous faites <code>from x import ma_fonction</code>, <code>ma_fonction</code> est déjà décorée, et on ne peut rien y changer.</p>
<h2>Super, mais ça sert à quoi un décorateur ?</h2>
<p>Ca a l&#8217;air chouette et tout, mais un exemple d&#8217;usage concret, ça aiderait quand même&#8230;.</p>
<p>Et bien il y a 1000 possibilités. Parmi les usages classiques:</p>
<ul>
<li>étendre la fonction d&#8217;une lib externe qu&#8217;on ne peut pas modifier;</li>
<li>gérer les permissions d&#8217;une fonction;</li>
<li>réagir aux arguments passés;</li>
<li>débugger.</li>
</ul>
<p>Le principe est la réutilisabilité: on fait un seul code, et on décore plein de fonctions avec.</p>
<p>Exemple:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> benchmark<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
    <span style="color: #483d8b;">&quot;&quot;&quot;
    Un décorateur qui affiche le temps qu'une fonction met à s'éxécuter
    &quot;&quot;&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">import</span> <span style="color: #dc143c;">time</span>
    <span style="color: #ff7700;font-weight:bold;">def</span> wrapper<span style="color: black;">&#40;</span><span style="color: #66cc66;">*</span>args, <span style="color: #66cc66;">**</span>kwargs<span style="color: black;">&#41;</span>:
        t = <span style="color: #dc143c;">time</span>.<span style="color: black;">clock</span><span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
        res = func<span style="color: black;">&#40;</span><span style="color: #66cc66;">*</span>args, <span style="color: #66cc66;">**</span>kwargs<span style="color: black;">&#41;</span>
        <span style="color: #ff7700;font-weight:bold;">print</span> func.__name__, <span style="color: #dc143c;">time</span>.<span style="color: black;">clock</span><span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>-t
        <span style="color: #ff7700;font-weight:bold;">return</span> res
    <span style="color: #ff7700;font-weight:bold;">return</span> wrapper
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> <span style="color: #dc143c;">logging</span><span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
    <span style="color: #483d8b;">&quot;&quot;&quot;
    Un décorateur qui log l'activité d'un script.
    (Ok, en vrai ça fait un print, mais ça pourrait logger !)
    &quot;&quot;&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">def</span> wrapper<span style="color: black;">&#40;</span><span style="color: #66cc66;">*</span>args, <span style="color: #66cc66;">**</span>kwargs<span style="color: black;">&#41;</span>:
        res = func<span style="color: black;">&#40;</span><span style="color: #66cc66;">*</span>args, <span style="color: #66cc66;">**</span>kwargs<span style="color: black;">&#41;</span>
        <span style="color: #ff7700;font-weight:bold;">print</span> func.__name__, args, kwargs
        <span style="color: #ff7700;font-weight:bold;">return</span> res
    <span style="color: #ff7700;font-weight:bold;">return</span> wrapper
&nbsp;
<span style="color: #ff7700;font-weight:bold;">def</span> counter<span style="color: black;">&#40;</span>func<span style="color: black;">&#41;</span>:
    <span style="color: #483d8b;">&quot;&quot;&quot;
    Un compter qui compte et affiche le nombre de fonction qu'une fonction
    a été éxécutée
    &quot;&quot;&quot;</span>
    <span style="color: #ff7700;font-weight:bold;">def</span> wrapper<span style="color: black;">&#40;</span><span style="color: #66cc66;">*</span>args, <span style="color: #66cc66;">**</span>kwargs<span style="color: black;">&#41;</span>:
        wrapper.<span style="color: black;">count</span> = wrapper.<span style="color: black;">count</span> + <span style="color: #ff4500;">1</span>
        res = func<span style="color: black;">&#40;</span><span style="color: #66cc66;">*</span>args, <span style="color: #66cc66;">**</span>kwargs<span style="color: black;">&#41;</span>
        <span style="color: #ff7700;font-weight:bold;">print</span> <span style="color: #483d8b;">&quot;{0} a été utilisée: {1}x&quot;</span>.<span style="color: black;">format</span><span style="color: black;">&#40;</span>func.__name__, wrapper.<span style="color: black;">count</span><span style="color: black;">&#41;</span>
        <span style="color: #ff7700;font-weight:bold;">return</span> res
    wrapper.<span style="color: black;">count</span> = <span style="color: #ff4500;">0</span>
    <span style="color: #ff7700;font-weight:bold;">return</span> wrapper
&nbsp;
@counter
@benchmark
@<span style="color: #dc143c;">logging</span>
<span style="color: #ff7700;font-weight:bold;">def</span> reverse_string<span style="color: black;">&#40;</span><span style="color: #dc143c;">string</span><span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">return</span> <span style="color: #dc143c;">string</span><span style="color: black;">&#91;</span>::-<span style="color: #ff4500;">1</span><span style="color: black;">&#93;</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">print</span> reverse_string<span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Karine alla en Irak&quot;</span><span style="color: black;">&#41;</span>
<span style="color: #ff7700;font-weight:bold;">print</span> reverse_string<span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;Sa nana snob porte de trop bons ananas&quot;</span><span style="color: black;">&#41;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">## reverse_string ('Karine alla en Irak',) {}</span>
<span style="color: #808080; font-style: italic;">## wrapper 0.000132</span>
<span style="color: #808080; font-style: italic;">## wrapper a été utilisée: 1x</span>
<span style="color: #808080; font-style: italic;">## karI ne alla eniraK</span>
<span style="color: #808080; font-style: italic;">## reverse_string ('Sa nana snob porte de trop bons ananas',) {}</span>
<span style="color: #808080; font-style: italic;">## wrapper 0.000128</span>
<span style="color: #808080; font-style: italic;">## wrapper a été utilisée: 2x</span>
<span style="color: #808080; font-style: italic;">## sanana snob port ed etrop bons anan aS</span></pre></div></div>

<p>Mais bien sur, le plus cool avec les décorateurs, c&#8217;est qu&#8217;on peut les utiliser immédiatement sans avoir à réécrire quoi ce que soit:</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">import</span> <span style="color: #dc143c;">httplib</span>
&nbsp;
@counter
@benchmark
@<span style="color: #dc143c;">logging</span>
<span style="color: #ff7700;font-weight:bold;">def</span> citation_de_futurama_au_hasard<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
    conn = <span style="color: #dc143c;">httplib</span>.<span style="color: black;">HTTPConnection</span><span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;slashdot.org:80&quot;</span><span style="color: black;">&#41;</span>
    conn.<span style="color: black;">request</span><span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;HEAD&quot;</span>, <span style="color: #483d8b;">&quot;/index.html&quot;</span><span style="color: black;">&#41;</span>
    <span style="color: #ff7700;font-weight:bold;">for</span> key, value <span style="color: #ff7700;font-weight:bold;">in</span> conn.<span style="color: black;">getresponse</span><span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>.<span style="color: black;">getheaders</span><span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
        <span style="color: #ff7700;font-weight:bold;">if</span> key.<span style="color: black;">startswith</span><span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;x-b&quot;</span><span style="color: black;">&#41;</span> <span style="color: #ff7700;font-weight:bold;">or</span> key.<span style="color: black;">startswith</span><span style="color: black;">&#40;</span><span style="color: #483d8b;">&quot;x-f&quot;</span><span style="color: black;">&#41;</span>:
            <span style="color: #ff7700;font-weight:bold;">return</span> value
    <span style="color: #ff7700;font-weight:bold;">return</span> <span style="color: #483d8b;">&quot;No, I'm ... doesn't!&quot;</span>
&nbsp;
<span style="color: #ff7700;font-weight:bold;">print</span> citation_de_futurama_au_hasard<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #ff7700;font-weight:bold;">print</span> citation_de_futurama_au_hasard<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">#output:</span>
<span style="color: #808080; font-style: italic;">#citation_de_futurama_au_hasard () {}</span>
<span style="color: #808080; font-style: italic;">#wrapper 0.02</span>
<span style="color: #808080; font-style: italic;">#wrapper a été utilisée: 1x</span>
<span style="color: #808080; font-style: italic;">#The laws of science be a harsh mistress.</span>
<span style="color: #808080; font-style: italic;">#citation_de_futurama_au_hasard () {}</span>
<span style="color: #808080; font-style: italic;">#wrapper 0.01</span>
<span style="color: #808080; font-style: italic;">#wrapper a été utilisée: 2x</span>
<span style="color: #808080; font-style: italic;">#Curse you, merciful Poseidon!</span></pre></div></div>

<p>Python vient charger de décorateurs dans la lib standard: <code>property</code>, <code>staticmethod</code>, <code>classmethod</code>, etc. Django gère les <a href="https://docs.djangoproject.com/en/dev/topics/auth/#the-login-required-decorator">permissions des vues</a> avec les décorateurs. Bottle <a href="http://sametmax.com/creer-un-site-avec-bottle-en-5-minutes-parceque-7-cest-impossible-voyons/">déclare ses routes</a> avec. Twisted <a href="http://hackedbellini.org/development/writing-asynchronous-python-code-with-twisted-using-inlinecallbacks/">donne l&#8217;impression qu&#8217;un appel asynchrone est synchrone</a> en les utilisant. On peut faire vraiment tout et n&#8217;importe quoi.</p>
<p><em>Un grand merci à gawel, de l&#8217;AFPY, qui m&#8217;a, il y a quelques années, <a href="http://web.archive.org/web/20101223001036/http://www.afpy.org/Members/gawel/python/python-decorators">donné envie de découvrir les décorateurs</a>.</em></p>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-official sd-sharing"><h3 class="sd-title">Partager:</h3><div class="sd-content"><ul><li class="share-twitter"><div class="twitter_button"><iframe allowtransparency="true" frameborder="0" scrolling="no" src="http://platform.twitter.com/widgets/tweet_button.html?url=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&#038;counturl=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&#038;count=horizontal&#038;text=Comprendre%20les%20d%C3%A9corateurs%20Python%20pas%20%C3%A0%20pas%20%28partie%202%29%3A" style="width:101px; height:20px;"></iframe></div></li><li class="share-facebook"><div class="like_button"><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&amp;layout=button_count&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;height=21&amp;locale=en_US&amp;width=90" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:96px; height:21px;" allowTransparency="true"></iframe></div></li><li class="share-google-plus-1"><div class="googleplus1_button"><div class="g-plus" data-action="share" data-annotation="bubble" data-href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/"></div></div></li><li class="share-email"><a rel="nofollow" class="share-email sd-button" href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/?share=email" title="Click to email this to a friend"><span>Email</span></a></li><li><a href="#" class="sharing-anchor sd-button share-more"><span>More</span></a></li><li class="share-end"></li></ul><div class="sharing-hidden"><div class="inner" style="display: none;"><ul><li class="share-reddit"><div class="reddit_button"><iframe src="http://www.reddit.com/static/button/button1.html?width=120&amp;url=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&amp;title=Comprendre%20les%20d%C3%A9corateurs%20Python%20pas%20%C3%A0%20pas%20%28partie%202%29" height="22" width="120" scrolling="no" frameborder="0"></iframe></div></li><li class="share-pinterest"><div class="pinterest_button"><a href="http://pinterest.com/pin/create/button/?url=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&#038;description=Comprendre%20les%20d%C3%A9corateurs%20Python%20pas%20%C3%A0%20pas%20%28partie%202%29&#038;media=http%3A%2F%2Fsametmax.com%2Fwp-content%2Fuploads%2F2012%2F05%2Fgreen-snake-branch-080909_3635_990x742.jpg" class="pin-it-button" count-layout="horizontal"> Pin It</a></div></li><li class="share-end"></li><li class="share-tumblr"><a target="" href="http://www.tumblr.com/share/link/?url=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&name=Comprendre%20les%20d%C3%A9corateurs%20Python%20pas%20%C3%A0%20pas%20%28partie%202%29" title="Share on Tumblr" style="display:inline-block; text-indent:-9999px; overflow:hidden; width:62px; height:20px; background:url('http://platform.tumblr.com/v1/share_2.png') top left no-repeat transparent;">Share on Tumblr</a></li><li class="share-digg"><div class="digg_button"><a rel="nofollow" class="DiggThisButton DiggCompact share-digg sd-button" href="http://digg.com/submit?url=http%3A%2F%2Fsametmax.com%2Fcomprendre-les-decorateur-python-pas-a-pas-partie-2%2F&amp;title=Comprendre%20les%20d%C3%A9corateurs%20Python%20pas%20%C3%A0%20pas%20%28partie%202%29" title="Click to Digg this post"><span>Digg</span></a></div></li><li class="share-end"></li><li class="share-pocket"><div class="pocket_button"><a href="https://getpocket.com/save" class="pocket-btn" data-lang="en" data-save-url="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/" data-pocket-count="horizontal" >Pocket</a></div></li><li class="share-end"></li></ul></div></div></div></div></div><p>No related posts.</p><p class="wp-flattr-button"><a href="http://sametmax.com/?flattrss_redirect&amp;id=683&amp;md5=ce4fc0dcbcec332bcc2e0ed792008364" title="Flattr" target="_blank"><img src="http://sametmax.com/wp-content/plugins/flattr/img/flattr-badge-large.png" alt="flattr this!"/></a></p>											</div> <!-- end .entry -->
			
					
						
			<!-- You can start editing here. -->

	<div id="comment-section" class="clearfix">
		<h3 id="comments">19 comments</h3>
		
		
			<ol class="commentlist clearfix">
			   <li class="comment even thread-even depth-1" id="li-comment-400">
		<div class="bottom_bg">
		   <div id="comment-400" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/547245f18f559eead5f11648437629de?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn"><a href='http://chez-xavier-combelle.blogspot.com/' rel='external nofollow' class='url'>Xavier Combelle</a></span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-400">09/06/2012		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Twister donne l’impression qu’un appel asynchrone est sync<em>h</em>rone en les utilisant.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-401">
		<div class="bottom_bg">
		   <div id="comment-401" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-401">09/06/2012		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Merci, en plus ça me permet de corrigé une autre typo, car je voulais parler de twisted et non de twister.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-1461">
		<div class="bottom_bg">
		   <div id="comment-1461" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/9a2b8f4bc7b8329cf907f2f07556b3f7?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Takanuva</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-1461">20/08/2012		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Bonjour,<br />
J&#8217;espère que malgré l&#8217;ancienneté du post vous lirez encore ce commentaire.<br />
Dans d&#8217;autre post vous utilisez le décorateur &#8220;classmethod&#8221; (<a href="http://0bin.net/paste/457d639ee5d0d954ff5efc3aa1c0fcfc22582ad1#YcymIc9cyRkeffQsn/j4vqKKYMW8zkO4pJkCLh9zQao" rel="nofollow">http://0bin.net/paste/457d639ee5d0d954ff5efc3aa1c0fcfc22582ad1#YcymIc9cyRkeffQsn/j4vqKKYMW8zkO4pJkCLh9zQao</a>=) ça sert à quoi?<br />
De même je ne connais pas les décorateurs &#8220;property&#8221; et &#8220;staticmethod&#8221;, ils servent à quoi? </p>
<p>merci</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-1467">
		<div class="bottom_bg">
		   <div id="comment-1467" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-1467">20/08/2012		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Bonjour @Takanuva,</p>
<p>Je pourrais faire un article là dessus pour plus de détails, mais en résumé:</p>
<p>- classmethod transforme la méthode en méthode de classe. On pas besoin d&#8217;instance pour éxécuter la méthode, et le premier paramètre est la classe elle même. On l&#8217;utilise pour le code commun à toutes les instances, et celles des classes enfants.</p>
<p>- staticmethod transforme la méthode en méthode statique. On as pas besoin d&#8217;instance pour éxécuter la méthode, et aucun paramètre n&#8217;est passé automatiquement à la méthode.  On l&#8217;utilise pour le code de type &#8220;outil&#8221;, mais qui n&#8217;es pas particulièrement lié à la classe, pour des raisons d&#8217;encapsulation.</p>
<p>- property transforme la méthode en propriété, c&#8217;est à dire que la méthode est déguisée pour ressembler à un attribut, mais l&#8217;accès à cet attribut (avec le signe &#8220;=&#8221;) éxécute le code de la méthode. On l&#8217;utilise pour simplifier les APIs.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-2463">
		<div class="bottom_bg">
		   <div id="comment-2463" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/de3d107ed1ccad362b44763106a78178?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn"><a href='http://www.olissea.com/' rel='external nofollow' class='url'>JeromeJ</a></span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-2463">14/10/2012		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p><span class="kamoulox"></span>&#8220;#reverse_string (&#8216;Karine alla en Irak&#8217;,) {}<br />
#wrapper 0.0<br />
#wrapper a été utilisée: 1x<br />
#ablE sanana snob port ed etrop bons anan aS&#8221;</p>
<p>FAUX !</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2973">
		<div class="bottom_bg">
		   <div id="comment-2973" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/337428a6e34734f07be5de0c8ae454cb?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Etienne</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-2973">09/11/2012		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Limpide!</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-10826">
		<div class="bottom_bg">
		   <div id="comment-10826" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://0.gravatar.com/avatar/2a15cf15ba2484312642d641c2cee8fc?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Pickle</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-10826">12/07/2013		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Le dernier lien n&#8217;est pas disponible. Merci WayBack : <a href="http://web.archive.org/web/20101223001036/http://www.afpy.org/Members/gawel/python/python-decorators" rel="nofollow"></p>
<p>Autrement, très instructif comme article !</a></p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-10828">
		<div class="bottom_bg">
		   <div id="comment-10828" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-10828">12/07/2013		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Bien vu la wayback machine. Je rajoute le lien.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-14960">
		<div class="bottom_bg">
		   <div id="comment-14960" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/f85f4b7b24aef894e40edd660c0d318d?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Syl</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-14960">17/10/2013		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Je ne comprend pas comment tu peux faire ça dans la définition de ton wrapper:<br />
<code>wrapper.count = wrapper.count + 1</code></p>
<p>Comment peux-tu définir un attribut d&#8217;objet en dehors d&#8217;une classe?</p>
<p>(sinon, merci pour l&#8217;article, comme d&#8217;hab, clair et utile!)</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-14961">
		<div class="bottom_bg">
		   <div id="comment-14961" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/f85f4b7b24aef894e40edd660c0d318d?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Syl</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-14961">17/10/2013		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Ah oui, et je me demandais aussi s&#8217;il existait une syntaxe en python qui permette de faire ça pour une exécution de fonction et pas sur une définition.</p>
<p>Je m&#8217;explique&#8230;.euh comment dire&#8230;ben&#8230;imagine le décorateur &#8220;benchmark&#8221;, mais qui s&#8217;utiliserait comme le magic quote %timeit de ipython! ^^</p>
<p>Ce serait utile pour des script où on voudrait mesurer l&#8217;action de certaines actions sans avoir à placer des clock() partout&#8230;je sais pas si j&#8217;ai été clair!</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor even thread-even depth-1" id="li-comment-14969">
		<div class="bottom_bg">
		   <div id="comment-14969" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-14969">17/10/2013		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content">
<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">Les attributs en Python peuvent être attribués dynamiquement sur n<span style="color: #483d8b;">'importe quel objet :
&nbsp;
In [1]: class Test:
   ...:     pass
   ...:
&nbsp;
In [2]: t = Test()
&nbsp;
In [3]: t.attribut = '</span>Syl<span style="color: #483d8b;">'
&nbsp;
In [4]: t.attribut
Out[4]: '</span>Syl<span style="color: #483d8b;">'</span></pre></div></div>

<p>Les fonctions sont des objets en Python, donc ça marche.</p>
<p>En fait, on ne déclare presque jamais des attributs en Python.</p>
<p>Quand tu fais dans un <code>__init__</code> :</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;"><span style="color: #008000;">self</span>.<span style="color: black;">attribut</span>.</pre></div></div>

<p>Tu ne déclare pas ton attribut. <code>Self </code>est déjà une instance (celle de l&#8217;objet en cours), et donc tu ne fais qu&#8217;attacher dynamiquement un attribut à une instance.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-14970">
		<div class="bottom_bg">
		   <div id="comment-14970" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/f85f4b7b24aef894e40edd660c0d318d?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Syl</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-14970">17/10/2013		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Merci pour ta réponse Sam.</p>
<p>Mais tout est objet en python, donc dans ce cas, pourquoi j&#8217;ai une erreur en faisant:<br />
<code><br />
a="nem"<br />
a.zobi="la mouche"</p>
<p>AttributeError: 'str' object has no attribute 'zobi'</code></p>
<p>A la limite, &#8216;str&#8217; est un type &#8220;spécial&#8221;, je peux comprendre&#8230;.mais avec une fonction perso:<br />
<code><br />
def test():<br />
    if not test.count: test.count = 0<br />
    else: test.count += 1<br />
    print test.count</p>
<p>AttributeError: 'function' object has no attribute 'count'<br />
</code></p>
<p>Dans l&#8217;exemple de ta réponse, je comprend très bien (bien que je na savais pas qu&#8217;on pouvait créer dynamiquement des attributs) car il s&#8217;agit d&#8217;une classe.</p>
<p>Mais pour une fonction, je comprend pas&#8230;.en fait, c&#8217;est la notion &#8220;d&#8217;attribut de fonction&#8221; qui me turlupine (quel joli mot!).</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-21385">
		<div class="bottom_bg">
		   <div id="comment-21385" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://0.gravatar.com/avatar/6383e6c3fc9fe2413a760682483b5767?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Georges Landa</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-21385">17/03/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Bravo !<br />
Excellent tutorial sur les décorateurs en python !<br />
Remarquable de clarté !<br />
merci,<br />
Georges</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-21394">
		<div class="bottom_bg">
		   <div id="comment-21394" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-21394">17/03/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>@Syl: je suis désolé man, j&#8217;ai jamais répondu à ce com, et je le revoie juste maintenant. Bon, il est sans doute trop tard mais&#8230;</p>
<p>Les deux examples ont deux raison différentes de ne pas fonctionner.</p>
<p>Le premier c&#8217;est que les types de bases sont protégés contre les modifications. Quand je dis protégés, c&#8217;est pas non plus un coffre fort puisqu&#8217;avec un peu d&#8217;astuce on peut le faire, mais ça évite de le faire par erreur. C&#8217;est notament pour éviter des mauvaises pratiques comme le monkey patching des types de base qu&#8217;on peut voir en ruby et javascript et qui entrainent après des casse-tête de debug quand 2 libs le font.</p>
<p>Le second exemple ne fonctionne pas car tu essaye de LIRE un attribut qui n&#8217;existe pas encore dans ton if. Ca ne marche sur AUCUN objet en Python. Par contre, tu peux parfaitement initialiser ton attribut à une valeur avant ta condition, et ça marchera. Les fonctions peuvent avoir des attributs arbitraires  en Python, on s&#8217;en sert beaucoup dans les décorteurs, par exemple je l&#8217;utilise avec django quicky.</p>
<p>@goearges : merci</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-44572">
		<div class="bottom_bg">
		   <div id="comment-44572" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/f869d8b08fbfc78af3851fe85bd2390f?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Moato</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-44572">07/06/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Hello je reprend ce qu&#8217;a essayer de dire Jerome: &#8220;ablE sanana snob port ed etrop bons anan aS&#8221; n&#8217;est pas l&#8217;inverse de &#8220;Karine alla en Irak&#8221;</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-44626">
		<div class="bottom_bg">
		   <div id="comment-44626" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-44626">07/06/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Ah ok. Merci, je corrige.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-90598">
		<div class="bottom_bg">
		   <div id="comment-90598" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/1d1382344586ecff844dacff698c2efb?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Marc</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-90598">09/07/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Salut,</p>
<p>Je vois cette ligne:<br />
&#8221;</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">Vous noterez qu’on a utilisé la notation @, avec un appel de fonction: @createur_de_decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span> et non @createur_de_decorateur <span style="color: #66cc66;">!</span></pre></div></div>

<p>&#8221;</p>
<p>Salut , je ne comprends pas ce que ca change? j&#8217;ai essayé sans et ca na marche pas mais je ne comprends pas du tout pourquoi</p>
<p>merci</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment byuser comment-author-sam bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-90612">
		<div class="bottom_bg">
		   <div id="comment-90612" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='Sam' src='http://sametmax.com/wp-content/uploads/2012/02/Sam_avatar.jpg' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Sam</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-90612">09/07/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content">
<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">@decorateur 
<span style="color: #ff7700;font-weight:bold;">def</span> fonction<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span></pre></div></div>

<p>Va faire :</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">fonction = decorateur<span style="color: black;">&#40;</span>fonction<span style="color: black;">&#41;</span></pre></div></div>

<p>Alors que</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">@decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>
<span style="color: #ff7700;font-weight:bold;">def</span> fonction<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span></pre></div></div>

<p>Va faire :</p>

<div class="wp_syntax"><div class="code"><pre class="python" style="font-family:monospace;">fonction = decorateur<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span><span style="color: black;">&#40;</span>fonction<span style="color: black;">&#41;</span></pre></div></div>

<p>On a un niveau de plus d&#8217;imbrication de wrapper, et donc de fonctions dynamiquement créés. C&#8217;est comme inception, c&#8217;est plus compliqué quand on rajoute des couches.</p>
<p>Note qu&#8217;un décorateur qui doit être appelé ne s&#8217;écrit pas pareil, puisqu&#8217;il doit retourner une fonction qui doit retourner une fonction.</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
   <li class="comment even thread-even depth-1" id="li-comment-90645">
		<div class="bottom_bg">
		   <div id="comment-90645" class="comment-body clearfix">
				<div class="alignleft authordata">
					<img alt='' src='http://1.gravatar.com/avatar/1d1382344586ecff844dacff698c2efb?s=60&amp;d=retro&amp;r=X' class='avatar avatar-60 photo' height='60' width='60' />					
					<div class="clear"></div>
					<div class="comment-author vcard">
						<span class="fn">Marc</span><br/>
						<div class="comment-meta commentmetadata"><a href="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/#comment-90645">09/07/2014		</a></div>
					</div>
				</div>
				
				<div class="comment-wrap">
					
										
					<div class="comment-content"><p>Un grand merci!</p>
</div> <!-- end comment-content-->
									</div> <!-- end comment-wrap-->  
			</div> <!-- end comment-body-->
		</div> <!-- end .bottom_bg-->
</li>
		</ol>
		
			
		
<div>
<p class="rss-comments">
<a href="./feed/" title="Flux RSS des commentaires">Flux RSS des commentaires</a>
</p>
</div>
									<div id="respond">
				<h3 id="reply-title"><span>Leave a Reply</span> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/comprendre-les-decorateur-python-pas-a-pas-partie-2/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://sametmax.com/wp-comments-post.php" method="post" id="commentform">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name</label> <span class="required">*</span><input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email</label> <span class="required">*</span><input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label><script type="text/javascript">var edInserted; if (!edInserted) {edToolbar(); edInserted = true;}</script>
<textarea id="comment" name="comment-c7f60e2d0" cols="45" rows="8" aria-required="true"></textarea>
<script type="text/javascript">var edCanvas = document.getElementById('comment');</script><textarea name="comment" rows="1" cols="1" style="display:none"></textarea></p><input type="hidden" name="comment-replaced" value="true" />						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; &lt;pre lang=&quot;&quot; line=&quot;&quot; escaped=&quot;&quot; highlight=&quot;&quot;&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Submit Comment" />
							<input type='hidden' name='comment_post_ID' value='683' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="5fb4f9e0a1" /></p><script src="http://sametmax.com/?live-comment-preview.js" type="text/javascript"></script><div id="commentPreview"></div><p style="display:none;"><input type="text" name="nxts" value="1406107416" /><input type="text" name="nxts_signed" value="043a090d6774bb39daa0befcaae028e9af4dfe7d" /><input type="text" name="890984ee8b8a9051de66ea1068704" value="" /><input type="text" name="228e2b7a6790488619fa" value="51acc900d67d6ca7fa91" /></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_comments" id="subscribe_comments" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-label" for="subscribe_comments" style="display: inline;">Notify me of follow-up comments by email.</label></p><p class="comment-subscription-form"><input type="checkbox" name="subscribe_blog" id="subscribe_blog" value="subscribe" style="width: auto; -moz-appearance: checkbox; -webkit-appearance: checkbox;" /> <label class="subscribe-label" id="subscribe-blog-label" for="subscribe_blog" style="display: inline;">Notify me of new posts by email.</label></p>					</form>
							</div><!-- #respond -->
						</div> <!-- end comment-section -->

<div>
<p><a href="#" id="playmario">Jouer à mario en attendant que les autres répondent</a></p>





<script type="text/javascript">
    if (typeof jQuery !== 'undefined'){
        jQuery('#playmario').click(function(e){
            jQuery(this).replaceWith('<iframe src="http://www.florian-rappl.de/html5/projects/SuperMario/" style="width:500px;height:450px;overflow:hidden"></iframe><p>En HTML5 canvas :-) http://www.codeproject.com/Articles/396959/Mario5</p>');
            e.preventDefault()
        });
    }
</script>
</div>				</div> <!-- end #content-area -->	
	
<div id="sidebar" class="clearfix">
	<div id="widget-readability-buttons-id-2" class="widget sidebar-block widget-readability-buttons"><!-- This file is used to markup the public facing widget. -->
<h3 class="widgettitle">Une lecture plus fastoche ?</h3><p class="readability-wrapper"> 
  <div
    class="rdbWrapper"
    data-show-read="1"
    data-show-send-to-kindle="0"
    data-show-print="1"
    data-show-email="0"
    data-orientation="0"
    data-version="1"
    data-text-color="#"
    data-bg-color="#">
  </div>
  <script>(function() {var s = document.getElementsByTagName("script")[0],rdb = document.createElement("script"); rdb.type = "text/javascript"; rdb.async = true; rdb.src = document.location.protocol + "//www.readability.com/embed.js"; s.parentNode.insertBefore(rdb, s); })();</script>
</p></div> <!-- end .widget --><div id="text-7" class="widget sidebar-block widget_text"><h3 class="widgettitle"> </h3>			<div class="textwidget"><img src="http://www.adobe.com/images/pdficon_small.png" width="16" height="16"/> <a href="http://pdfcrowd.com/url_to_pdf/">Télécharger cette page en PDF</a> </div>
		</div> <!-- end .widget --><div id="text-4" class="widget sidebar-block widget_text"><h3 class="widgettitle"> </h3>			<div class="textwidget"><a href="http://sametmax.com/appel-a-contributeurs-impertinents/"><img src="http://sametmax.com/wp-content/uploads/2012/07/contributeur.png" width="288px" style="vertical-align: middle;margin-top:-40px;margin-bottom:10px;"></a> </div>
		</div> <!-- end .widget --><div id="text-3" class="widget sidebar-block widget_text"><h3 class="widgettitle"> </h3>			<div class="textwidget"><a href="http://twitter.com/#!/sam_et_max"><img src="http://sametmax.com/wp-content/uploads/2012/05/twitter_icon.png" width="70px" style="vertical-align: middle;margin-top:-40px;"></a>&nbsp;Follow us <a href="http://twitter.com/sam_et_max">@sam_et_max</a></div>
		</div> <!-- end .widget --><div id="blog_subscription-3" class="widget sidebar-block jetpack_subscription_widget"><h3 class="widgettitle"><label for="subscribe-field">Souscrire à nos conneries</label></h3>
		<form action="" method="post" accept-charset="utf-8" id="subscribe-blog-blog_subscription-3">
			<p id="subscribe-text">Entrez votre adresse mail et vous recevrez une notification à chaque nouvel article.</p><p>Rejoignez les 341 abonnés</p>

			<p id="subscribe-email"><input type="text" placeholder="françis@ça-mousse.com" name="email" style="width: 95%; padding: 1px 2px" id="subscribe-field" onclick="if ( this.value == 'Email Address' ) { this.value = ''; }" onblur="if ( this.value == '' ) { this.value = 'Email Address'; }" /></p>

			<p id="subscribe-submit">
				<input type="hidden" name="action" value="subscribe" />
				<input type="hidden" name="source" value="http://sametmax.com/comprendre-les-decorateur-python-pas-a-pas-partie-2/" />
				<input type="hidden" name="sub-type" value="widget" />
				<input type="hidden" name="redirect_fragment" value="blog_subscription-3" />
								<input type="submit" value="J&#039;adhère bon dieu!" name="jetpack_subscriptions_widget" />
			</p>
		</form>

		
</div> <!-- end .widget --> 

	<div id="popular-tabbed" class="widget"> 
		<h3 class="widgettitle">Posts Populaires</h3>
		<ul>
																						<li><a href="http://sametmax.com/on-a-un-nouveau-projet-et-on-a-besoin-dune-info-sur-vous/">On a un nouveau projet et on a besoin d&#8217;UNE info sur vous</a> (267)</li>																														<li><a href="http://sametmax.com/entreprendre-en-france-autopsie-dun-echec/">Entreprendre en France, Autopsie d&#8217;un échec.</a> (114)</li>																														<li><a href="http://sametmax.com/un-gros-troll-de-plus-sur-javacscript/">Un gros Troll de plus sur Javascript</a> (109)</li>																														<li><a href="http://sametmax.com/fizzbuzz-en-python/">FizzBuzz en Python</a> (99)</li>																														<li><a href="http://sametmax.com/beaucoup-de-femmes-sont-de-mauvais-coups/">Beaucoup de femmes sont de mauvais coups</a> (97)</li>																														<li><a href="http://sametmax.com/une-journee-dans-un-fkk-maison-close-allemande/">Une journée dans un FKK (maison close Allemande)</a> (91)</li>																														<li><a href="http://sametmax.com/fetons-le-depart-de-max/">Fêtons le départ de Max</a> (87)</li>																														<li><a href="http://sametmax.com/on-est-en-2013-on-a-marche-sur-la-lune-mais-on-a-toujours-pas/">On est en 2013, on a marché sur la lune, mais on a toujours pas&#8230;</a> (85)</li>													</ul>
	</div> <!-- end #recent-tabbed -->
	 
<div id="tag_cloud-3" class="widget sidebar-block widget_tag_cloud"><h3 class="widgettitle">TagCloud</h3><div class="tagcloud"><a href='http://sametmax.com/tag/bash/' class='tag-link-14' title='16 topics' style='font-size: 11.185628742515pt;'>bash</a>
<a href='http://sametmax.com/tag/bitcoin/' class='tag-link-320' title='6 topics' style='font-size: 8pt;'>bitcoin</a>
<a href='http://sametmax.com/tag/blog/' class='tag-link-107' title='17 topics' style='font-size: 11.437125748503pt;'>blog</a>
<a href='http://sametmax.com/tag/bottle/' class='tag-link-307' title='6 topics' style='font-size: 8pt;'>bottle</a>
<a href='http://sametmax.com/tag/cache/' class='tag-link-333' title='10 topics' style='font-size: 9.5928143712575pt;'>cache</a>
<a href='http://sametmax.com/tag/comprehension-lists/' class='tag-link-20' title='7 topics' style='font-size: 8.4191616766467pt;'>comprehension-lists</a>
<a href='http://sametmax.com/tag/css/' class='tag-link-188' title='8 topics' style='font-size: 8.8383233532934pt;'>css</a>
<a href='http://sametmax.com/tag/cul-2/' class='tag-link-33' title='10 topics' style='font-size: 9.5928143712575pt;'>cul</a>
<a href='http://sametmax.com/tag/decorator/' class='tag-link-265' title='7 topics' style='font-size: 8.4191616766467pt;'>decorator</a>
<a href='http://sametmax.com/tag/django/' class='tag-link-28' title='72 topics' style='font-size: 16.467065868263pt;'>django</a>
<a href='http://sametmax.com/tag/email/' class='tag-link-37' title='6 topics' style='font-size: 8pt;'>email</a>
<a href='http://sametmax.com/tag/encoding/' class='tag-link-54' title='7 topics' style='font-size: 8.4191616766467pt;'>encoding</a>
<a href='http://sametmax.com/tag/error/' class='tag-link-213' title='6 topics' style='font-size: 8pt;'>error</a>
<a href='http://sametmax.com/tag/fun/' class='tag-link-44' title='6 topics' style='font-size: 8pt;'>fun</a>
<a href='http://sametmax.com/tag/git/' class='tag-link-18' title='32 topics' style='font-size: 13.616766467066pt;'>git</a>
<a href='http://sametmax.com/tag/html/' class='tag-link-486' title='7 topics' style='font-size: 8.4191616766467pt;'>html</a>
<a href='http://sametmax.com/tag/http/' class='tag-link-204' title='7 topics' style='font-size: 8.4191616766467pt;'>http</a>
<a href='http://sametmax.com/tag/import/' class='tag-link-215' title='8 topics' style='font-size: 8.8383233532934pt;'>import</a>
<a href='http://sametmax.com/tag/ipython/' class='tag-link-164' title='9 topics' style='font-size: 9.2574850299401pt;'>ipython</a>
<a href='http://sametmax.com/tag/iterable/' class='tag-link-217' title='9 topics' style='font-size: 9.2574850299401pt;'>iterable</a>
<a href='http://sametmax.com/tag/javascript/' class='tag-link-96' title='37 topics' style='font-size: 14.119760479042pt;'>javascript</a>
<a href='http://sametmax.com/tag/jquery/' class='tag-link-112' title='8 topics' style='font-size: 8.8383233532934pt;'>jquery</a>
<a href='http://sametmax.com/tag/lambda/' class='tag-link-292' title='7 topics' style='font-size: 8.4191616766467pt;'>lambda</a>
<a href='http://sametmax.com/tag/linux/' class='tag-link-238' title='6 topics' style='font-size: 8pt;'>linux</a>
<a href='http://sametmax.com/tag/meta/' class='tag-link-102' title='98 topics' style='font-size: 17.640718562874pt;'>meta</a>
<a href='http://sametmax.com/tag/mysql/' class='tag-link-82' title='7 topics' style='font-size: 8.4191616766467pt;'>mysql</a>
<a href='http://sametmax.com/tag/nginx/' class='tag-link-183' title='13 topics' style='font-size: 10.51497005988pt;'>nginx</a>
<a href='http://sametmax.com/tag/nsfw/' class='tag-link-319' title='14 topics' style='font-size: 10.766467065868pt;'>nsfw</a>
<a href='http://sametmax.com/tag/php/' class='tag-link-199' title='6 topics' style='font-size: 8pt;'>php</a>
<a href='http://sametmax.com/tag/poo/' class='tag-link-549' title='12 topics' style='font-size: 10.179640718563pt;'>poo</a>
<a href='http://sametmax.com/tag/python/' class='tag-link-4' title='329 topics' style='font-size: 22pt;'>python</a>
<a href='http://sametmax.com/tag/redis/' class='tag-link-196' title='7 topics' style='font-size: 8.4191616766467pt;'>redis</a>
<a href='http://sametmax.com/tag/ruby/' class='tag-link-325' title='8 topics' style='font-size: 8.8383233532934pt;'>ruby</a>
<a href='http://sametmax.com/tag/server/' class='tag-link-185' title='6 topics' style='font-size: 8pt;'>server</a>
<a href='http://sametmax.com/tag/sexe/' class='tag-link-175' title='6 topics' style='font-size: 8pt;'>sexe</a>
<a href='http://sametmax.com/tag/shell/' class='tag-link-202' title='8 topics' style='font-size: 8.8383233532934pt;'>shell</a>
<a href='http://sametmax.com/tag/ssh/' class='tag-link-206' title='6 topics' style='font-size: 8pt;'>ssh</a>
<a href='http://sametmax.com/tag/sublime-text/' class='tag-link-76' title='8 topics' style='font-size: 8.8383233532934pt;'>sublime text</a>
<a href='http://sametmax.com/tag/twitter/' class='tag-link-371' title='7 topics' style='font-size: 8.4191616766467pt;'>twitter</a>
<a href='http://sametmax.com/tag/ubuntu/' class='tag-link-255' title='13 topics' style='font-size: 10.51497005988pt;'>ubuntu</a>
<a href='http://sametmax.com/tag/unicode/' class='tag-link-53' title='6 topics' style='font-size: 8pt;'>unicode</a>
<a href='http://sametmax.com/tag/unit-tests/' class='tag-link-302' title='6 topics' style='font-size: 8pt;'>unit tests</a>
<a href='http://sametmax.com/tag/unpacking/' class='tag-link-180' title='6 topics' style='font-size: 8pt;'>unpacking</a>
<a href='http://sametmax.com/tag/virtualenv/' class='tag-link-259' title='7 topics' style='font-size: 8.4191616766467pt;'>virtualenv</a>
<a href='http://sametmax.com/tag/yield/' class='tag-link-287' title='8 topics' style='font-size: 8.8383233532934pt;'>yield</a><div class="tag_cloud_footer"><a href="/les-tags/">All Tags</a></div></div>
</div> <!-- end .widget --><div id="archives-2" class="widget sidebar-block widget_archive"><h3 class="widgettitle">Archives</h3>		<ul>
			<li><a href='http://sametmax.com/2014/07/' title='July 2014'>July 2014</a>&nbsp;(10)</li>
	<li><a href='http://sametmax.com/2014/06/' title='June 2014'>June 2014</a>&nbsp;(25)</li>
	<li><a href='http://sametmax.com/2014/05/' title='May 2014'>May 2014</a>&nbsp;(14)</li>
	<li><a href='http://sametmax.com/2014/04/' title='April 2014'>April 2014</a>&nbsp;(10)</li>
	<li><a href='http://sametmax.com/2014/03/' title='March 2014'>March 2014</a>&nbsp;(23)</li>
	<li><a href='http://sametmax.com/2014/02/' title='February 2014'>February 2014</a>&nbsp;(27)</li>
	<li><a href='http://sametmax.com/2014/01/' title='January 2014'>January 2014</a>&nbsp;(17)</li>
	<li><a href='http://sametmax.com/2013/12/' title='December 2013'>December 2013</a>&nbsp;(27)</li>
	<li><a href='http://sametmax.com/2013/11/' title='November 2013'>November 2013</a>&nbsp;(25)</li>
	<li><a href='http://sametmax.com/2013/10/' title='October 2013'>October 2013</a>&nbsp;(27)</li>
	<li><a href='http://sametmax.com/2013/09/' title='September 2013'>September 2013</a>&nbsp;(1)</li>
	<li><a href='http://sametmax.com/2013/08/' title='August 2013'>August 2013</a>&nbsp;(31)</li>
	<li><a href='http://sametmax.com/2013/07/' title='July 2013'>July 2013</a>&nbsp;(32)</li>
	<li><a href='http://sametmax.com/2013/06/' title='June 2013'>June 2013</a>&nbsp;(24)</li>
	<li><a href='http://sametmax.com/2013/05/' title='May 2013'>May 2013</a>&nbsp;(30)</li>
	<li><a href='http://sametmax.com/2013/04/' title='April 2013'>April 2013</a>&nbsp;(31)</li>
	<li><a href='http://sametmax.com/2013/03/' title='March 2013'>March 2013</a>&nbsp;(33)</li>
	<li><a href='http://sametmax.com/2013/02/' title='February 2013'>February 2013</a>&nbsp;(29)</li>
	<li><a href='http://sametmax.com/2013/01/' title='January 2013'>January 2013</a>&nbsp;(34)</li>
	<li><a href='http://sametmax.com/2012/12/' title='December 2012'>December 2012</a>&nbsp;(32)</li>
	<li><a href='http://sametmax.com/2012/11/' title='November 2012'>November 2012</a>&nbsp;(36)</li>
	<li><a href='http://sametmax.com/2012/10/' title='October 2012'>October 2012</a>&nbsp;(35)</li>
	<li><a href='http://sametmax.com/2012/09/' title='September 2012'>September 2012</a>&nbsp;(36)</li>
	<li><a href='http://sametmax.com/2012/08/' title='August 2012'>August 2012</a>&nbsp;(37)</li>
	<li><a href='http://sametmax.com/2012/07/' title='July 2012'>July 2012</a>&nbsp;(33)</li>
	<li><a href='http://sametmax.com/2012/06/' title='June 2012'>June 2012</a>&nbsp;(24)</li>
	<li><a href='http://sametmax.com/2012/05/' title='May 2012'>May 2012</a>&nbsp;(31)</li>
	<li><a href='http://sametmax.com/2012/04/' title='April 2012'>April 2012</a>&nbsp;(20)</li>
	<li><a href='http://sametmax.com/2012/03/' title='March 2012'>March 2012</a>&nbsp;(10)</li>
	<li><a href='http://sametmax.com/2012/02/' title='February 2012'>February 2012</a>&nbsp;(14)</li>
		</ul>
</div> <!-- end .widget --><div id="rss_links-2" class="widget sidebar-block widget_rss_links"><h3 class="widgettitle">Flux RSS</h3><p><a href="http://sametmax.com/feed/" title="Subscribe to Posts"><img src="http://sametmax.com/wp-content/plugins/jetpack/_inc/images/rss/green-small.png" alt="RSS Feed" /></a>&nbsp;<a href="http://sametmax.com/feed/" title="Subscribe to Posts">RSS - Posts</a></p>
</div> <!-- end .widget --><div id="text-6" class="widget sidebar-block widget_text"><h3 class="widgettitle">Planet Python fr</h3>			<div class="textwidget"><a href="http://sametmax.com/planet-python-fr/">Sélection d'articles sur Python du Web français</a></div>
		</div> <!-- end .widget --><div id="text-5" class="widget sidebar-block widget_text"><h3 class="widgettitle"> Envoyez des sioux</h3>			<div class="textwidget"><p><img src="http://sametmax.com/wp-content/uploads/2013/07/bitcoin.png" width="16" height="16"/> On adooooore les bitcoins :</p>

<p>

<a href="bitcoin:19zAHPPuce4BAhsdy9KaFwVLurEJXMhMAn?amount=1X8&label=SamEtMax">19zAHPPuce4BAhsdy9KaFwVLurEJXMhMAn</a>

</p></div>
		</div> <!-- end .widget --></div> <!-- end sidebar -->	</div> <!-- end #content --> 
	
	 <div id="footer" >
		<div id="footer-content">
			
								
				<ul id="menu-bottom-menu" class="bottom-menu"><li id="menu-item-2391" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2391"><a href="http://sametmax.com/contactez-nous/">Contactez-nous</a></li>
</ul>			
			<p id="copyright">Designed by  <a href="http://www.elegantthemes.com" title="Elegant Themes">Elegant WordPress Themes</a></p>
		</div> <!-- end #footer-content -->
	</div> <!-- end #footer -->
</div> <!-- end #page-wrap -->
	 
				
		<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.1/jquery-ui.min.js"></script>
	<script type="text/javascript" src="http://sametmax.com/wp-content/themes/Minimal/js/jquery.cycle.all.min.js"></script> 
	<script type="text/javascript" src="http://sametmax.com/wp-content/themes/Minimal/js/jquery.easing.1.3.js"></script>	
	<script type="text/javascript" src="http://sametmax.com/wp-content/themes/Minimal/js/superfish.js"></script>	
	<script type="text/javascript">
	//<![CDATA[
		jQuery.noConflict();
	
		jQuery('ul.superfish').superfish({ 
			delay:       200,                            // one second delay on mouseout 
			animation:   {opacity:'show',height:'show'},  // fade-in and slide-down animation 
			speed:       'fast',                          // faster animation speed 
			autoArrows:  true,                           // disable generation of arrow mark-up 
			dropShadows: false                            // disable drop shadows 
		}).find("> li > ul > li:last-child, > li > ul > li > ul > li:last-child, > li > ul > li > ul > li > ul > li:last-child").addClass("last-nav-element");
		
		jQuery(".js #featured, .js div#tabbed").css("display","block");

				
		var $featured_content = jQuery('#featured_content'),
			$tabbed_area = jQuery('div#tabbed'),
			$controllers = jQuery('div#controllers'),
			$comments = jQuery('ol.commentlist');
		
		et_search_bar();
		
		if ($featured_content.length) {
			$featured_content.cycle({
									timeout: 3000				,
				speed: 300,
				cleartypeNoBg: true,
				prev:   'a#left_arrow', 
				next:   'a#right_arrow',
				pager:  'div#controllers',
				fx: 'fade'
			});
			
			var controllersWidth = $controllers.width(),
				controllersLeft = Math.round((960 - controllersWidth) / 2);
			if (controllersWidth < 960) $controllers.css('padding-left',controllersLeft);
		};
		
		if ($tabbed_area.length) {
			$tabbed_area.tabs({ fx: { opacity: 'toggle' } });
		};
		
		if ($comments.length) {
			$comments.find(">li").after('<span class="bottom_bg"></span>');
		};
		

		<!---- Random tag line ---->		

var tagLine = function(){
    var tagLines =  [
        'Deux programmeurs qui se sortent les doigts du code',
        '10 ko de js rien que pour charger ce message',
        'Des articles pour geeks qui mettent les points sur les G',
        "Aucun hipster n'a été violenté à l'écriture de ce blog",
        'La programmation avec un grand C',
        'Ornithorynque fuchsia hydrophobe',
        'Python, Django, Git, et du Cul',
        'Nous croisons les effluves',
        'CMB DTC IRL CQFD',
        'Tuent des chatons depuis 1997',
        'Reticulating splines',
        'Error: unexpected end of stupid tag line',
        'Les bikinis et les ordinateurs épargnent les spéculations',
        'F5',
        '<3 (oYo)',
        'Rien que des obsédés du serpent !',
        "Je sers la science et c'est ma joie",
        'On peut tout génie génétiquer!',
        "Réparateurs d'harmonicas, professeurs de plongée",
        "Il faut mettre d'urgence un frein à l'immobilisme!",
        'Ho mon dieu! Ils ont tué Sam, enfoirés!',
        "L'étincelle qui fait déborder le vase",
        'A poil les putes !',
        'Bannis de Reddit !',
        "Bannis de l'AFPY !",
        'Bannis de Claire Chazal!',
        'Bannis de Jean-Pierre Pernaud !',
        'Bannis de Norton !',
        'Et si on faisait des camps pour que les gens puissent se concentrer?',
        'Article.objects.create(type=random.choice(("dev", "cul")))',
        'Le choc des mots, le poids des algos',
        'Kedzalcoilt, le serpent à poil'
    ];
    return tagLines[Math.ceil(Math.random() * 1000000000) % tagLines.length];
};

jQuery('#slogan').show().text(tagLine());

// forcer la redirection faire l'image en full size au click
jQuery('.wp-post-image').click(function(e){e.preventDefault(); window.location.href = jQuery(e.target).attr('src')});

// mettre clippy sur les comments

jQuery(function(){
    var message = "";
    var $comment = jQuery('#comment');
    topagent = null;

    $comment.keyup(function(){

        var content = jQuery(this).val();

        if (content.search(/(^|\s+)(php|vim|emacs|windows|pas?\s*libre)([.!?]|\s+)/i) != -1){
            message = "Il semble que vous teniez de propos trollesques. Attention, nous avons des tampons, et nous n'hésiterons pas à nous en servir !"
        }

        if (content.search(/(^|\s+)(me (tuer|suicider|tirer une balle|pendre|flinguer))([.!?]|\s+)/i) != -1){
            message = "Il semble que vous teniez de propos suicidaires. Sam & Max défendent la liberté d'expression. Allez aux bouts de vos idées !"
        }

        if (content.search(/(^|\s+)(connards?|enculés?|enfoirés?|fils? de pute?)([.!?]|\s+)/i) != -1){
            message = "Il semble que vous teniez des propos injurieux. Ne voulez-vous pas plutôt écrire une lettre d'insultes directement aux auteurs, via le formulaire de contact ?"
        }

        if (content.search(/(^|\s+)(culs?|nichons?|bite|chatte|sodomie|levrette|sexe)([.!?]|\s+)/i) != -1){
            message = "Il semble que vous teniez des propos graveleux. Pourriez-vous donner plus de détails ?"
        }

        if (content.search(/\>\>\>/i) != -1){
            message = "Le triple chevron ne passe pas dans les comments. Désolé :-( Utilisez »» à la place."
        }

        if (content.length > 2000){
            message = "Il semble que vous écriviez un roman. Vous réalisez que ceux qui vont répondre ne l'auront pas lu jusqu'au bout ?"
        }

        if (message){
            $comment.unbind();

            jQuery("<link/>", {
               rel: "stylesheet",
               type: "text/css",
               href: "http://sametmax.com/wp-content/uploads/2012/07/clippy.css"
            }).appendTo("head").one('load ready', function(){
                jQuery.getScript("http://sametmax.com/wp-content/uploads/2012/07/clippy.min_1.js", function(){
                    clippy.load('Clippy', function(agent) {
                        agent.show();
                        var offset = $comment.offset();
                        var left = offset.left + $comment.width() + 10;
                        var top = offset.top;

                        jQuery('.clippy').css({position:'absolute',
                                               display:'block',
                                               left: left, top: top})

                        jQuery('.clippy-balloon').css({position:'absolute',
                                                       display:'block',
                                                       left: left,
                                                       top: top - 50})

                        agent.speak(message);
                        setInterval(function(){agent.stop(); agent.animate()}, 20000);
                    });

                });

            });

        }

    });
});


		<!---- Search Bar Improvements ---->
		function et_search_bar(){
			var $searchform = jQuery('#header div#search-form'),
				$searchinput = $searchform.find("input#searchinput"),
				searchvalue = $searchinput.val();
				
			$searchinput.focus(function(){
				if (jQuery(this).val() === searchvalue) jQuery(this).val("");
			}).blur(function(){
				if (jQuery(this).val() === "") jQuery(this).val(searchvalue);
			});
		};
		
	//]]>	




<!-- Piwik -->

var pkBaseURL = (("https:" == document.location.protocol) ? "https://88.191.153.127:7777/" : "http://88.191.153.127:7777/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
piwikTracker.trackPageView();
piwikTracker.enableLinkTracking();
} catch( err ) {}



	</script>
<noscript>
<img src="http://88.191.153.127:7777/piwik.php?idsite=1&amp;rec=1" style="border:0" alt="" />
</noscript>
		<div style="display:none">
	<div class="grofile-hash-map-547245f18f559eead5f11648437629de">
	</div>
	<div class="grofile-hash-map-bf9ecde8f5e286de6ce5c80206cf9dd6">
	</div>
	<div class="grofile-hash-map-9a2b8f4bc7b8329cf907f2f07556b3f7">
	</div>
	<div class="grofile-hash-map-de3d107ed1ccad362b44763106a78178">
	</div>
	<div class="grofile-hash-map-337428a6e34734f07be5de0c8ae454cb">
	</div>
	<div class="grofile-hash-map-2a15cf15ba2484312642d641c2cee8fc">
	</div>
	<div class="grofile-hash-map-f85f4b7b24aef894e40edd660c0d318d">
	</div>
	<div class="grofile-hash-map-6383e6c3fc9fe2413a760682483b5767">
	</div>
	<div class="grofile-hash-map-f869d8b08fbfc78af3851fe85bd2390f">
	</div>
	<div class="grofile-hash-map-1d1382344586ecff844dacff698c2efb">
	</div>
	</div>
		<script type="text/javascript">
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
					<script type="text/javascript">
			  (function() {
			    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
			    po.src = 'https://apis.google.com/js/plusone.js';
			    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
			  })();
			</script>
				<div id="sharing_email" style="display: none;">
		<form action="/comprendre-les-decorateur-python-pas-a-pas-partie-2/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="text" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="text" name="source_email" id="source_email" value="" />

			
			
			<img style="float: right; display: none" class="loading" src="http://sametmax.com/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
					<script type="text/javascript">
				// Pinterest shared resources
				var s = document.createElement("script");
				s.type = "text/javascript";
				s.async = true;
				s.src = window.location.protocol + "//assets.pinterest.com/js/pinit.js";
				var x = document.getElementsByTagName("script")[0];
				x.parentNode.insertBefore(s, x);
				// if 'Pin it' button has 'counts' make container wider
				jQuery(window).load( function(){ jQuery( 'li.share-pinterest a span:visible' ).closest( '.share-pinterest' ).width( '80px' ); } );
			</script>
		<script type="text/javascript" src="http://platform.tumblr.com/v1/share.js"></script>		<script>
		// Don't use Pocket's default JS as it we need to force init new Pocket share buttons loaded via JS.
		function jetpack_sharing_pocket_init() {
			jQuery.getScript( 'https://widgets.getpocket.com/v1/j/btn.js?v=1' );
		}
		jQuery( document ).on( 'ready', jetpack_sharing_pocket_init );
		jQuery( document.body ).on( 'post-load', jetpack_sharing_pocket_init );
		</script>
		<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/contact-form-7/includes/js/jquery.form.min.js?ver=3.15'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var _wpcf7 = {"loaderUrl":"http:\/\/sametmax.com\/wp-content\/plugins\/contact-form-7\/images\/ajax-loader.gif","sending":"Sending ..."};
/* ]]> */
</script>
<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/contact-form-7/includes/js/scripts.js?ver=3.3'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201430'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var pollsL10n = {"ajax_url":"http:\/\/sametmax.com\/wp-admin\/admin-ajax.php","text_wait":"Your last request is still being processed. Please wait a while ...","text_valid":"Please choose a valid poll answer.","text_multiple":"Maximum number of choices allowed: ","show_loading":"1","show_fading":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/wp-polls/polls-js.js?ver=2.63'></script>
<script type='text/javascript' src='http://s.gravatar.com/js/gprofiles.js?ver=2014Julaa'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/jetpack/modules/wpgroho.js?ver=3.3.1'></script>
<script type='text/javascript' src='http://sametmax.com/wp-content/themes/Minimal/epanel/page_templates/js/fancybox/jquery.easing-1.3.pack.js?ver=1.3.4'></script>
<script type='text/javascript' src='http://sametmax.com/wp-content/themes/Minimal/epanel/page_templates/js/fancybox/jquery.fancybox-1.3.4.pack.js?ver=1.3.4'></script>
<script type='text/javascript' src='http://sametmax.com/wp-content/themes/Minimal/epanel/page_templates/js/et-ptemplates-frontend.js?ver=1.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var recaptcha_options = {"lang":"en"};
/* ]]> */
</script>
<script type='text/javascript' src='http://sametmax.com/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=20121205'></script>

	<script src="http://stats.wordpress.com/e-201430.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:2.6.1',blog:'32490438',post:'683',tz:'0'});
	var load_cmc = function(){linktracker_init(32490438,683,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script>	
</body>
</html>
