http://www.undiscoveredfeatures.com/feeds/posts/default?alt=rss
HTTP/1.0 200 OK
Date: Thu, 24 Jul 2014 06:24:18 GMT
Content-Type: application/rss+xml; charset=UTF-8
Server: GSE
Cache-Control: public, must-revalidate, proxy-revalidate, max-age=1
Vary: Accept-Encoding
Expires: Thu, 24 Jul 2014 06:24:19 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
ETag: W/"1cbd0cd7-1827-45b6-94e0-fe0f199cb770"
Last-Modified: Thu, 17 Jul 2014 06:18:53 GMT
X-Frame-Options: SAMEORIGIN
Alternate-Protocol: 80:quic,80:quic

<?xml version='1.0' encoding='UTF-8'?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0" version="2.0"><channel><atom:id>tag:blogger.com,1999:blog-4980628797186804242</atom:id><lastBuildDate>Thu, 17 Jul 2014 06:18:53 +0000</lastBuildDate><category>Programming</category><category>Photography</category><title>Undiscovered Features</title><description>If it ain&#39;t broke, it doesn&#39;t have enough features.</description><link>http://www.undiscoveredfeatures.com/</link><managingEditor>noreply@blogger.com (Peter Hamilton)</managingEditor><generator>Blogger</generator><openSearch:totalResults>29</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-984526011532042237</guid><pubDate>Sat, 12 Jul 2014 21:04:00 +0000</pubDate><atom:updated>2014-07-12T19:52:56.781-07:00</atom:updated><title>Elixir Tasks vs Scala Futures</title><description>Elixir has introduced a wonderful first class concept called a Task. It allows you to do some work in a new process and easily collect the result, like so: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;iex(1)&amp;gt; something = Task.async fn -&amp;gt;&lt;br /&gt;...(1)&amp;gt; &amp;nbsp; 10 + 6&lt;br /&gt;...(1)&amp;gt; end&lt;br /&gt;%Task{pid: #PID&amp;lt;0.44.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.55&amp;gt;}&lt;br /&gt;iex(2)&amp;gt; Task.await(something)&lt;br /&gt;16&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;On first glance, it looks a lot like constructs found in other languages. For example, Scala has a Future construct that seems similar: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;scala&amp;gt; val something = Future { 10 + 6 }&lt;br /&gt;something: scala.concurrent.Future[Int] = scala.concurrent.impl.Promise$DefaultPromise@5535cbe&lt;br /&gt;scala&amp;gt; Await.result(something, 0 nanos)&lt;br /&gt;res1: Int = 16&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Seems pretty similar on first glance right? While it looks like they offer the same abstraction - the ability to asynchronously execute code and return the result - there are some key differences.&lt;br /&gt;&lt;br /&gt;&lt;h2&gt;&lt;span style=&quot;font-size: x-large;&quot;&gt;Poll based &lt;/span&gt;&lt;/h2&gt;Let&#39;s take a look at Scala Futures. Scala Futures are built on top of JVM threads, along with all the usual suspects - Mutexes, Synchronized Queues, etc. One way in which we can interact with futures is to see if they have completed: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;scala&amp;gt; val something_long = Future { Thread.sleep(10000) }&lt;br /&gt;something_long: scala.concurrent.Future[Unit] = scala.concurrent.impl.Promise$DefaultPromise@1aa6a14b&lt;br /&gt;scala&amp;gt; something_long.isCompleted&lt;br /&gt;res7: Boolean = false&lt;br /&gt;...&lt;br /&gt;scala&amp;gt; something_long.isCompleted&lt;br /&gt;res10: Boolean = true&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;We can poll to see if the Future has completed. This, in fact, is at the core of how the Await.result method works (as of Scala 2.10). It polls the Future for completion until either the time runs out or the Future has completed. Once complete, the internal value of the Future is returned. &lt;br /&gt;&lt;br /&gt;This polling mechanism is built upon the Future being in shared memory. Any thread can access it and therefore any thread can wait for it to complete. Multiple threads can fetch the result and the result can be fetched multiple times. &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;scala&amp;gt; val something = Future { 10 + 6 }&lt;br /&gt;something: scala.concurrent.Future[Int] = scala.concurrent.impl.Promise$DefaultPromise@47041bea&lt;br /&gt;scala&amp;gt; Await.result(something, 0 nanos)&lt;br /&gt;res12: Int = 16&lt;br /&gt;scala&amp;gt; Await.result(something, 0 nanos)&lt;br /&gt;res13: Int = 16&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span style=&quot;font-size: x-large;&quot;&gt;Push Based &lt;/span&gt;&lt;/h2&gt;Now let&#39;s look at Elixir Tasks. Tasks are built on top of message passing. Without the Task construct, the same thing can be (crudely) implemented using standard Elixir code: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;iex(4)&amp;gt; parent = self&lt;br /&gt;#PID&amp;lt;0.40.0&amp;gt;&lt;br /&gt;iex(5)&amp;gt; something = spawn_link fn -&amp;gt;&lt;br /&gt;...(5)&amp;gt;   send parent, 10 + 6&lt;br /&gt;...(5)&amp;gt; end&lt;br /&gt;#PID&amp;lt;0.54.0&amp;gt;&lt;br /&gt;iex(6)&amp;gt; receive do&lt;br /&gt;...(6)&amp;gt;   x -&amp;gt; x&lt;br /&gt;...(6)&amp;gt; end&lt;br /&gt;16&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;Tasks give us a bit more convenience than the above code, but at their core they are fairly simple. A new process is spawned. When it completes, it sends the response back to the parent process. &lt;br /&gt;&lt;br /&gt;Because the result is pushed to the parent process, we find ourselves with a limitation. Task.await must be called from the parent process. If called from a different process, it will never receive the message and thus time out: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;iex(9)&amp;gt; something_nested = Task.async fn -&amp;gt;&lt;br /&gt;...(9)&amp;gt;   Task.async fn -&amp;gt;&lt;br /&gt;...(9)&amp;gt;     &quot;nested&quot;&lt;br /&gt;...(9)&amp;gt;   end&lt;br /&gt;...(9)&amp;gt; end&lt;br /&gt;%Task{pid: #PID&amp;lt;0.73.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.138&amp;gt;}&lt;br /&gt;iex(10)&amp;gt; something = Task.await(something_nested, 1000)&lt;br /&gt;%Task{pid: #PID&amp;lt;0.74.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.140&amp;gt;}&lt;br /&gt;iex(11)&amp;gt; Task.await(something, 1000)&lt;br /&gt;** (exit) exited in: Task.await(%Task{pid: #PID&amp;lt;0.74.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.140&amp;gt;}, 1000)&lt;br /&gt;    ** (EXIT) time out&lt;br /&gt;    (elixir) lib/task.ex:173: Task.await/2&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt; A task spawned in another task fails to return a value, exactly as we expected. If we call await inside the first task, all is well: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;iex(13)&amp;gt; something_nested = Task.async fn -&amp;gt;&lt;br /&gt;...(13)&amp;gt;   something = Task.async fn -&amp;gt;&lt;br /&gt;...(13)&amp;gt;     &quot;nested&quot;&lt;br /&gt;...(13)&amp;gt;   end&lt;br /&gt;...(13)&amp;gt;   Task.await(something, 1000)&lt;br /&gt;...(13)&amp;gt; end&lt;br /&gt;%Task{pid: #PID&amp;lt;0.99.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.214&amp;gt;}&lt;br /&gt;iex(14)&amp;gt; Task.await(something_nested, 1000)&lt;br /&gt;&quot;nested&quot;&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;We also can&#39;t fetch the value twice: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;iex(21)&amp;gt; something = Task.async fn -&amp;gt; 10 end&lt;br /&gt;%Task{pid: #PID&amp;lt;0.118.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.259&amp;gt;}&lt;br /&gt;iex(22)&amp;gt; Task.await(something, 1000)&lt;br /&gt;10&lt;br /&gt;iex(23)&amp;gt; Task.await(something, 1000)&lt;br /&gt;** (exit) exited in: Task.await(%Task{pid: #PID&amp;lt;0.118.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.259&amp;gt;}, 1000)&lt;br /&gt;    ** (EXIT) time out&lt;br /&gt;    (elixir) lib/task.ex:173: Task.await/2&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span style=&quot;font-size: x-large;&quot;&gt;Failure &lt;/span&gt;&lt;/h2&gt;With Scala Futures, errors are largely silent, at least until you try to use the value: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;scala&amp;gt; val somethingBroken = Future { throw new Exception(&quot;oops&quot;) }&lt;br /&gt;somethingBroken: scala.concurrent.Future[Nothing] = scala.concurrent.impl.Promise$DefaultPromise@65e93514&lt;br /&gt;&lt;br /&gt;scala&amp;gt; somethingBroken.isCompleted&lt;br /&gt;res18: Boolean = true&lt;br /&gt;&lt;br /&gt;scala&amp;gt; Await.result(somethingBroken, 0 nanos)&lt;br /&gt;java.lang.Exception: oops&lt;br /&gt; at $anonfun$1.apply(&lt;console&gt;:15)&lt;br /&gt; at $anonfun$1.apply(&lt;console&gt;:15)&lt;br /&gt; at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)&lt;br /&gt; at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)&lt;br /&gt; at scala.concurrent.impl.ExecutionContextImpl$$anon$3.exec(ExecutionContextImpl.scala:107)&lt;br /&gt; at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)&lt;br /&gt; at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)&lt;br /&gt; at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)&lt;br /&gt; at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)&lt;br /&gt;&lt;/console&gt;&lt;/console&gt;&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;With Elixir Tasks, an exception in a task will cause the parent process to crash. This is part of the Erlang/Elixir &quot;Let it crash&quot; philosophy. &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;iex(1)&amp;gt; self&lt;br /&gt;#PID&amp;lt;0.145.0&amp;gt;&lt;br /&gt;iex(2)&amp;gt; response = Task.async fn -&amp;gt; raise &quot;oops&quot; end&lt;br /&gt;&lt;br /&gt;=ERROR REPORT==== 12-Jul-2014::14:44:36 ===&lt;br /&gt;** Task &amp;lt;0.149.0&amp;gt; terminating&lt;br /&gt;** Started from &amp;lt;0.145.0&amp;gt;&lt;br /&gt;** When function  == #Fun&amp;lt;erl_eval.20.106461118&amp;gt;&lt;br /&gt;**      arguments == []&lt;br /&gt;** Reason for termination ==&lt;br /&gt;** {#{&#39;__exception__&#39; =&amp;gt; true,&#39;__struct__&#39; =&amp;gt; &#39;Elixir.RuntimeError&#39;,message =&amp;gt; &amp;lt;&amp;lt;&quot;oops&quot;&amp;gt;&amp;gt;},&lt;br /&gt;    [{&#39;Elixir.Task.Supervised&#39;,do_apply,2,&lt;br /&gt;                               [{file,&quot;lib/task/supervised.ex&quot;},{line,70}]},&lt;br /&gt;     {&#39;Elixir.Task.Supervised&#39;,async,3,&lt;br /&gt;                               [{file,&quot;lib/task/supervised.ex&quot;},{line,15}]},&lt;br /&gt;     {proc_lib,init_p_do_apply,3,[{file,&quot;proc_lib.erl&quot;},{line,239}]}]}&lt;br /&gt;** (EXIT from #PID&amp;lt;0.145.0&amp;gt;) an exception was raised:&lt;br /&gt;    ** (RuntimeError) oops&lt;br /&gt;        (elixir) lib/task/supervised.ex:70: Task.Supervised.do_apply/2&lt;br /&gt;        (elixir) lib/task/supervised.ex:15: Task.Supervised.async/3&lt;br /&gt;        (stdlib) proc_lib.erl:239: :proc_lib.init_p_do_apply/3&lt;br /&gt;&lt;br /&gt;Interactive Elixir (0.14.2) - press Ctrl+C to exit (type h() ENTER for help)&lt;br /&gt;iex(1)&amp;gt; self&lt;br /&gt;#PID&amp;lt;0.150.0&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;&lt;/pre&gt;Tasks fit in nicely with the rest of the OTP ecosystem, complete with supervisors and monitors. &lt;br /&gt;&lt;h2&gt;&lt;span style=&quot;font-size: x-large;&quot;&gt;Why this matters &lt;/span&gt;&lt;/h2&gt;If you are coming to Elixir from a language like Scala, you might be tempted to treat Tasks like you would Futures. This is generally a bad idea. While they represent similar intents, the implementation means that they provide different abstractions. A Future provides an abstraction for access of future shared state. A Task provides an abstraction for access of a future response that is limited to a single process. This follows the general pattern in Erlang/Elixir of not sharing state. &lt;br /&gt;&lt;br /&gt;The effect of this difference needs to be understood when writing code. &lt;br /&gt;&lt;br /&gt;In Scala we frequently provide libraries that return Futures. It allows us to compose functionality from a variety of sources and build pipelines of execution. The underlying execution is abstracted away. (A discussion of various ExecutionContexts is beyond this post.) &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;scala&amp;gt; val response = for {&lt;br /&gt;     |   a &amp;lt;- responseA&lt;br /&gt;     |   b &amp;lt;- responseB&lt;br /&gt;     | } yield {&lt;br /&gt;     |   a + b&lt;br /&gt;     | }&lt;br /&gt;response: scala.concurrent.Future[Int] = scala.concurrent.impl.Promise$DefaultPromise@3b05298d&lt;br /&gt;&lt;br /&gt;scala&amp;gt; Await.result(response, 0 nanos)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;In Elixir we want to always be explicit about where code is being executed. Rather than have libraries launch tasks on our behalf, the better technique is for libraries to return functions. We can then launch these functions wherever we want: &lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;iex(15)&amp;gt; fun1 = fn -&amp;gt; 25 end&lt;br /&gt;#Function&amp;lt;20.106461118/0 in :erl_eval.expr/5&amp;gt;&lt;br /&gt;iex(16)&amp;gt; fun2 = fn -&amp;gt; 35 end&lt;br /&gt;#Function&amp;lt;20.106461118/0 in :erl_eval.expr/5&amp;gt;&lt;br /&gt;iex(17)&amp;gt; response = Task.async fn -&amp;gt;&lt;br /&gt;...(17)&amp;gt;   responseA = Task.async fun1&lt;br /&gt;...(17)&amp;gt;   responseB = Task.async fun2&lt;br /&gt;...(17)&amp;gt;   Task.await(responseA) + Task.await(responseB)&lt;br /&gt;...(17)&amp;gt; end&lt;br /&gt;%Task{pid: #PID&amp;lt;0.109.0&amp;gt;, ref: #Reference&amp;lt;0.0.0.240&amp;gt;}&lt;br /&gt;iex(18)&amp;gt; Task.await(response)&lt;br /&gt;60&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span style=&quot;font-size: x-large;&quot;&gt;Conclusion &lt;/span&gt;&lt;/h2&gt;Elixir has been a blast to work with. The language gives you very powerful constructs that enable you to build powerful and robust systems. Understanding how to use these structures is crucial. In the case of Tasks it is important to always be explicit about where code is executing. If you have any questions feel free to ask here or on IRC in #elixir-lang.</description><link>http://www.undiscoveredfeatures.com/2014/07/elixir-tasks-vs-scala-futures.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-7232763040934467499</guid><pubDate>Mon, 30 Sep 2013 06:28:00 +0000</pubDate><atom:updated>2013-09-29T23:38:04.114-07:00</atom:updated><title>How I develop - A stream of consciousness</title><description>&lt;span style=&quot;font-family: inherit;&quot;&gt;I recently took the time to dump my &quot;stream of consciousness&quot; for someone trying to wrap their head around how to go about designing an application. With his permission, here is the initial email (from the Utah Ruby Users Group mailing list):&lt;/span&gt;&lt;br /&gt;&lt;div style=&quot;padding-left: 50px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;I don&#39;t spend a lot of time writing code, but I&#39;ve been trying to steadily improve my ability to build functional prototypes in ROR and I&#39;m looking for suggestions on how to improve my model design skills.&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;The entire MVC approach is new to me - I first learned to write code before many of you were born, but I haven&#39;t had to use it in any work-related responsibilities for 20 years.&amp;nbsp; Any suggested resources would be appreciated.&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;I feel like I learn best by going through examples with explanations.&amp;nbsp; The Michael Hartl tutorial was a helpful beginning, but I&#39;m having difficulty finding other examples where I can see the functioning app (or a description of the functionality), and a list of all the models - especially with some reasoning behind their decisions.&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;As an example, my current side project is to make an app I can use with my children to assign and track their chores, and how much allowance I should pay them based on what they&#39;ve done.&amp;nbsp; Here&#39;s a few details on how the app would work...&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;Chores are assigned to people, and they have a recurring frequency (daily, weekly, monthly,...).&amp;nbsp; Sometimes the person that did the chore is not the person assigned to do it.&amp;nbsp; I want to track all the dates a chore was done, who was assigned to do it, and who actually did it.&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;In my mind I can see tracking that information as attributes of a chore, or I could have a separate model for chores performed.&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;How do I make that decision?&amp;nbsp; While I&#39;d like advice on this specific example, I&#39;m really trying to understand more generally.&amp;nbsp; I&#39;m finding that this is the most time consuming and difficult part of each new project I undertake.&lt;/span&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;br style=&quot;background-color: white; color: #222222; font-size: 13px;&quot; /&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;Any suggestions on how to learn model design &quot;best practices&quot; would be appreciated.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=&quot;color: #222222;&quot;&gt;To which I responded:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;padding-left: 50px;&quot;&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Remember that this is less about Ruby and Rails and more about software design as a whole. I recommend&amp;nbsp;&lt;a href=&quot;http://www.amazon.com/gp/product/0135974445/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=0135974445&amp;amp;linkCode=as2&amp;amp;tag=undiscover-20&quot; style=&quot;color: #1155cc;&quot; target=&quot;_blank&quot;&gt;Agile Software Development, Principles, Patterns, and Practices&lt;/a&gt;&amp;nbsp;for a better understanding of the design process. (That&#39;s a shameless affiliate link by the way) There&#39;s a great example of building a bowling score tracker that demonstrates how to incrementally design. I&#39;m going to walk you through a similar process, but at a higher level than code. This description is unedited (don&#39;t worry, no foul language) and is meant to be a stream of consciousness so you can get a feel for how I design things. Everyone is going to have a different process though, and I expect many here to disagree with my decisions. Here goes nothing:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;I always try to approach problems from a top down perspective. I mostly work on REST apis, so I&#39;m going to walk through your example from that approach.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;So in your example, we definitely have people or users. This would be a normal resource endpoint&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;and we have a list of all chores. This would be another resource endpoint.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/chores&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;we probably have an endpoint that returns all chores assigned to a user&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/assigned_chores&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;and we may even scope those down by frequency (this is a a little off the beaten REST path, but don&#39;t let that deter you. Naming things is hard, and as long as there is consistency and a degree of intuition shown, it&#39;s fine)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/assigned_chores/daily&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/assigned_chores/&lt;wbr&gt;&lt;/wbr&gt;weekly&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/assigned_chores/&lt;wbr&gt;&lt;/wbr&gt;monthly&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;and a user has a list of chores completed by them&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/completed_chores&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Now that I have some endpoints, I start thinking about how to implement them.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;For /users , this is going to be pretty straightforward.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;For /chores, I see some ambiguity. Is a chore the action being performed? or a reusable description of a chore? in other words, is it &quot;Bobby clean up his room&quot; or &quot;Clean bedroom. Pick up toys. Put away clothes.&quot; The former is simpler, but it means you are going to repeat yourself when you create the &quot;Sally clean up her room&quot; task. The latter is going to be more complex, but you will be able to reuse the Chore description multiple times. The latter is probably the more correct way, but it feels potentially over-engineered for me. When it comes to avoiding repeating myself, I tend to follow a Rule of 3s. If I repeat myself at least 3 times, I do something about it. Until then, I try to go the simple route for the sake of getting things done. (Usually also weigh in on the cost of changing my mind later. In this case, a chore will have a description field. If we decide to go with the reusable descriptions, we could drop the description field and replace it with a task_id, where a Task contains the reusable description)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Anyway, let&#39;s assume we don&#39;t mind repeating ourself and stick with a chore representing &quot;Clean Bobby&#39;s Room&quot; and we&#39;ll just create another chore for &quot;Clean Sally&#39;s Room&quot;. With that assumption, Let&#39;s look at types of actions we want to perform:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;CREATE: We create a chore (description and frequency) and assign a user to it&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;READ: We return a chore (description and frequency) along with the assigned_user, the date of completion, the user who completed it.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;At this point I start to wonder: How does date of completion and user who completed it work with a recurring chore? If we only care about the last person to complete the chore, then this would be fine. I suspect though, that paying allowance once a week means we want to see each time a daily chore was completed and who completed it.&amp;nbsp;So let&#39;s try again:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;READ: We return a chore (description and frequency) along with the assigned_user and a list of dates of completion tied to who completed it at that point in time.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;This introduces a new model requirement. we need to be able to do something like @chore.completion_events (as I said, naming is hard... there&#39;s probably a better name than completion_events) so now we have a new endpoint:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;blockquote style=&quot;border: none; margin: 0px 0px 0px 40px; padding: 0px;&quot;&gt;&lt;div class=&quot;gmail_extra&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/chores/1/completion_events&lt;/span&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;with actions CRUD, where we have a user and a completion date assigned to it. For index, we will probably want to be able to query on a date range, giving us the answer to the question &quot;Who took out the trash in the last 7 days?&quot; and other similar questions.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;UPDATE: Since the act of completing a chore is now accomplished by creating a CompletionEvent, we only use update on chores to update the description and the assignee.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;DELETE: Pretty straightforward.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;As we continue to our other endpoints, it looks like we&#39;ve answered most questions.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/assigned_chores will be a list of chores with user_id = 1. I would make this just an Index action, and leave CRUD up to the /chores endpoint.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/assigned_chores/{&lt;wbr&gt;&lt;/wbr&gt;daily,weekly,monthly} are going to be extra routes pointing to /users/1/assigned_chores and setting a param for &quot;frequency&quot; or something that can be used to filter the query. This will then also be an Index only action. Now that I think about this, these routes seem superfluous. Probably aren&#39;t needed.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;/users/1/completed_chores is going to be a little complex. We will want to do a lookup on CompletionEvents by user_id, and then for each of those we will want to fetch the associated Chore. We will also want a date range for this most likely so we can answer the question &quot;What chores did Bobby do this week?&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;So now, without even really touching Ruby or the underlying implementation, we see that we need 3 models:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;User&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Chore&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;CompletionEvent&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;with an optional 4th model (depending on a design decision):&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Task (a Chore has a task_id so multiple chores can share a description)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The attributes:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;User&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; name&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Chore&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; task_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; user_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;CompletionEvent&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; date&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; user_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; chore_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Task&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; description&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;And the relationships (ActiveRecord associations):&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;User has many Chores&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;User has many CompletionEvents&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Chore belongs to Task&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Chore belongs to User&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Chore has many CompletionEvents&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;CompletionEvent belongs to User&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;CompletionEvent belongs to Chore&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Task has many Chores&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;gmail_extra&quot; style=&quot;background-color: white; color: #222222; font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;And there you have it. That should be fairly complete (I&#39;m sure you can attach other attributes, like how much to pay them in allowance and stuff like that). From there, implementation is going to mostly be trivial. You&#39;ll encounter some tricky implementation details like what @user.completed_chores actually looks like, but often it&#39;s just because there are so many good ways to implement it that sometimes we get hung up on finding the great way to implement it. I would focus on just getting things done at that point. Don&#39;t worry about whether you should be using a has_many :through with :conditions or whatever. Just get the data that you need. If you notice something is clumsy, look for a way to clean it up. But if it works then don&#39;t worry too much about the right way. It is far easier to learn a shortcut if you&#39;ve done it the long way a couple of times.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;background-color: white; color: #222222;&quot;&gt;I don&#39;t claim that this is the best solution, but I do feel it demonstrates a good balance between GSD (getting stuff done) and a well thought-out design. I&#39;m sure there are better designs and I&#39;m sure there are worse designs. In any case, I felt that it was worthy of a post and will be a helpful resource to someone.&lt;/span&gt;&lt;/span&gt;</description><link>http://www.undiscoveredfeatures.com/2013/09/how-i-develop-stream-of-consciousness.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-2700671491839047552</guid><pubDate>Sat, 01 Jun 2013 05:59:00 +0000</pubDate><atom:updated>2013-05-31T22:59:26.370-07:00</atom:updated><title>Copy as Curl</title><description>At work the other day I noticed something new in the Chrome browser developer console. Under the &quot;History&quot; tab, if you right click on a source you are presented with the following menu:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-Ur5qctYQ8NM/UamLD_xxEZI/AAAAAAAACeM/g5xk6N7Ak_s/s1600/CopyAsCurlCropped.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;568&quot; src=&quot;http://4.bp.blogspot.com/-Ur5qctYQ8NM/UamLD_xxEZI/AAAAAAAACeM/g5xk6N7Ak_s/s640/CopyAsCurlCropped.jpg&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The menu item that intrigued me was &quot;Copy as Curl&quot;. For those who are not Unix savvy, curl is a common utility that allows you to fetch a web page without using a browser. It is a very useful tool in web development. When I clicked on Copy as Curl, I pasted this into my terminal:&lt;br /&gt;&lt;br /&gt;&lt;script src=&quot;https://gist.github.com/hamiltop/5689406.js&quot;&gt;&lt;/script&gt; The command returned gibberish, but I noticed that it had the &lt;span style=&quot;background-color: white; font-family: Consolas, &#39;Liberation Mono&#39;, Courier, monospace; font-size: 12px; line-height: 16px; white-space: pre;&quot;&gt;&quot;Accept-Encoding: gzip,deflate,sdch&quot;&lt;/span&gt;&quot; header set, which means the content is compressed. By piping the results into gunzip (and then jsonpp) I was able to get the following:&lt;br /&gt;&lt;script src=&quot;https://gist.github.com/hamiltop/5689428.js&quot;&gt;&lt;/script&gt; Overall I thought it was a pretty cool feature. If you are still wondering why that output would be useful, it is because that output is extremely easy to parse from a programming perspective. You could use this to easily build a script that monitored the price for a specific laptop configuration for example.&lt;br /&gt;&lt;br /&gt;Well made software provides solutions to needs we don&#39;t know about. I don&#39;t think I ever thought &quot;I wish there was a way to make an identical request with curl&quot;, but now that I know about it, I will use it a ton.</description><link>http://www.undiscoveredfeatures.com/2013/05/copy-as-curl.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-Ur5qctYQ8NM/UamLD_xxEZI/AAAAAAAACeM/g5xk6N7Ak_s/s72-c/CopyAsCurlCropped.jpg" height="72" width="72"/><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-5836091617692657880</guid><pubDate>Mon, 11 Mar 2013 07:26:00 +0000</pubDate><atom:updated>2013-03-11T09:06:54.949-07:00</atom:updated><category domain="http://www.blogger.com/atom/ns#">Programming</category><title>SQLite and MongoDB had a baby</title><description>And I call it.... MongoLiteDB&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I&#39;m probably infringing on some trademarks and all sorts of proprietary things, but that&#39;s the name I gave it over at&amp;nbsp;&lt;a href=&quot;https://github.com/hamiltop/MongoLiteDB&quot;&gt;GitHub&lt;/a&gt;. If that&#39;s a problem, then I expect the affected parties will contact me and I will be&amp;nbsp;accommodating.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;What is it? If the name isn&#39;t clear, it combines some of the strengths of the two solutions while conveniently ignoring requirements I don&#39;t care about, namely performance. It provides a very simple to set up, simple to use database.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;SQLite is a great lightweight database solution. It uses a single file to store and retrieve all entries and therefore does not require an external service. It does however require a schema, which can be tedious to maintain and update in a rapidly changing project. MongoDB is a great schema free database. Without having to manage a schema, I can hack away to my heart&#39;s content. It does however require an external service. It isn&#39;t what I would call a lightweight solution.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;In SQLite, a great deal of performance gains result from the structured nature of the data. In MongoDB, the external service works all kinds of magic in order to provide a performant schema free solution. Without either of these, performance probably sucks. (I haven&#39;t bothered to benchmark it.)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I decided I sometimes just didn&#39;t care about performance. In my simple applications, I don&#39;t expect to have significant traffic. I don&#39;t even think anyone but me will use the service. I want a solution that is as frictionless as possible during development and prototyping. Performance is my last concern. And so MongoLiteDB was born.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I probably spent more time building MongoLiteDB than it would have taken me to maintain my SQLite schema. I mostly built MongoLiteDB because it was something new and exciting. Hopefully myself and other can get some use out of it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Anyway, read more about it over on&amp;nbsp;&lt;a href=&quot;https://github.com/hamiltop/MongoLiteDB&quot;&gt;GitHub&lt;/a&gt;. It&#39;s pretty raw still. The code needs comments. The documentation is nonexistent. It&#39;s not even packaged as a Gem yet. If it&#39;s interesting to you, please let me know. Leave comments on this blog. Fork the project. File Issues. I think this would be a fun project to expand upon and interest from the community will be a great motivator to do so.&lt;/div&gt;</description><link>http://www.undiscoveredfeatures.com/2013/03/sqlite-and-mongodb-had-baby.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-404395882578768025</guid><pubDate>Sat, 28 Apr 2012 06:06:00 +0000</pubDate><atom:updated>2012-04-27T23:07:26.472-07:00</atom:updated><category domain="http://www.blogger.com/atom/ns#">Photography</category><title>Macro Tubes, Canon T3i and Focus Stacking</title><description>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;So I got a new toy this week -&amp;nbsp;&lt;a href=&quot;http://www.amazon.com/gp/product/B004UM7124/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B004UM7124&quot;&gt;Macro Extension Tube Kit Compatible with Canon Cameras&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=B004UM7124&quot; style=&quot;border-bottom-style: none !important; border-color: initial !important; border-image: initial !important; border-left-style: none !important; border-right-style: none !important; border-top-style: none !important; border-width: initial !important; margin-bottom: 0px !important; margin-left: 0px !important; margin-right: 0px !important; margin-top: 0px !important;&quot; width=&quot;1&quot; /&gt;. &amp;nbsp;Essentially it&#39;s a set of spacers that tweak the focus range of standard lenses to allow them to shoot macro more effectively. &amp;nbsp;They can be a little clunky to use, as they are literally just a spacer between the lens and the camera. &amp;nbsp;This means you lose any connectivity between camera and lens - aperture control and autofocus are lost. &amp;nbsp;But they cost less than $10 shipped, so I figured they would be fun to play around with. &amp;nbsp;The alternative was to invest in a macro lens, which I can&#39;t justify.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Anyway, they arrived on a particularly boring day. &amp;nbsp;Construction in our neighborhood meant a planned power outage for half the day. &amp;nbsp;Seeing as I am studying &lt;b&gt;Electrical &lt;/b&gt;and Computer Engineering, I didn&#39;t have much to do without &lt;b&gt;Electricity&lt;/b&gt;. &amp;nbsp;So I got to play with them for a few hours, figuring out how to do everything a little more manually than usual.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;&lt;br class=&quot;Apple-interchange-newline&quot; /&gt;&lt;/div&gt;So I took a few random shots:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-AR1FrQU9p-Q/T5uGCidiAeI/AAAAAAAAAtQ/bkoCzaaJcm0/s1600/Computer+Screen.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;179&quot; src=&quot;http://1.bp.blogspot.com/-AR1FrQU9p-Q/T5uGCidiAeI/AAAAAAAAAtQ/bkoCzaaJcm0/s320/Computer+Screen.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Close up of my computer monitor. &amp;nbsp;Each pixel is composed of 3 little bars - red, green, and blue - which can be see quite clearly. &amp;nbsp;This was zoomed in a bit from the original image and cropped.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-eHhBCiTCG-g/T5uGZzWclXI/AAAAAAAAAtY/jy6tBGoj8ow/s1600/IMG_5594.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://4.bp.blogspot.com/-eHhBCiTCG-g/T5uGZzWclXI/AAAAAAAAAtY/jy6tBGoj8ow/s320/IMG_5594.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;A close up of my tool case.&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-kAikWWiqpQU/T5uGxA2ZNPI/AAAAAAAAAtg/5VPI87fhGnw/s1600/IMG_5622.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://2.bp.blogspot.com/-kAikWWiqpQU/T5uGxA2ZNPI/AAAAAAAAAtg/5VPI87fhGnw/s320/IMG_5622.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The tag on my son&#39;s stuffed animal.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;They were some pretty random images, mostly the result of thinking &quot;What could I take a close up picture of next?&quot;, &amp;nbsp;but I was pleased with the clarity of using the macro tubes. &amp;nbsp;They do create a pretty narrow depth of field, so manual focus is tricky, but it&#39;s fun to play around with.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;One interesting subject I have been looking at is focus stacking. &amp;nbsp;When you have a narrow depth of field, you can take multiple pictures of a subject, at different focuses, and later combine them into a complete image, with a greater depth of field than any of the originals. &amp;nbsp;So I gave it a shot by taking a picture of my wedding ring sitting on top of a white piece of paper. &amp;nbsp;The software I used was&amp;nbsp;&lt;a href=&quot;http://wiki.panotools.org/Enfuse&quot; target=&quot;_blank&quot;&gt;Enfuse&lt;/a&gt;, which is a little tricky to use, but once setup it does a great job of pulling the whole image together.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-quxXK1rkfzc/T5t7sUg-y4I/AAAAAAAAAsA/YZk5H6Ed2VI/s1600/IMG_5636.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;212&quot; src=&quot;http://2.bp.blogspot.com/-quxXK1rkfzc/T5t7sUg-y4I/AAAAAAAAAsA/YZk5H6Ed2VI/s320/IMG_5636.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The middle of the paper comes into focus, as well as the bottom edge of the ring.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-_BERhrAZmPk/T5t7a_Ozw5I/AAAAAAAAAr4/OwrZ-erbIVQ/s1600/IMG_5637.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://4.bp.blogspot.com/-_BERhrAZmPk/T5t7a_Ozw5I/AAAAAAAAAr4/OwrZ-erbIVQ/s320/IMG_5637.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The paper is in focus in the top right of the image. &amp;nbsp;The bottom left is out of focus. &amp;nbsp;The ring is completely out of focus.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-XUFCEeUnwA8/T5t7-dQYuQI/AAAAAAAAAsI/AnleM13WxwY/s1600/IMG_5638.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://3.bp.blogspot.com/-XUFCEeUnwA8/T5t7-dQYuQI/AAAAAAAAAsI/AnleM13WxwY/s320/IMG_5638.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The bottom left of the paper is in sharp focus, and a good part of the far side of the ring is in focus.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-w-RRxNVjHrQ/T5t8Oqb2AkI/AAAAAAAAAsQ/HtloLiEBO3E/s1600/IMG_5639.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://1.bp.blogspot.com/-w-RRxNVjHrQ/T5t8Oqb2AkI/AAAAAAAAAsQ/HtloLiEBO3E/s320/IMG_5639.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The paper is starting to move out of focus, as is the far side of the ring.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-6_80qeYBGCs/T5t8eVOZAzI/AAAAAAAAAsY/QwomEGI-GwY/s1600/IMG_5640.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://1.bp.blogspot.com/-6_80qeYBGCs/T5t8eVOZAzI/AAAAAAAAAsY/QwomEGI-GwY/s320/IMG_5640.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The paper is out of focus, and the near side of the ring is coming into focus.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-aKbpiPpc91M/T5t8u6jJNaI/AAAAAAAAAsg/Eu4N6WTA6CE/s1600/IMG_5641.JPG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;213&quot; src=&quot;http://2.bp.blogspot.com/-aKbpiPpc91M/T5t8u6jJNaI/AAAAAAAAAsg/Eu4N6WTA6CE/s320/IMG_5641.JPG&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;The near side of the ring is in sharp focus.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;And the final result:&lt;/div&gt;&lt;br /&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-OH6qQASJk7A/T5t-TN-vxeI/AAAAAAAAAtA/bKu9d2ci0FU/s1600/stacked.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;425&quot; src=&quot;http://1.bp.blogspot.com/-OH6qQASJk7A/T5t-TN-vxeI/AAAAAAAAAtA/bKu9d2ci0FU/s640/stacked.jpg&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;Notice how the paper, the far side of the ring, and the near side of the ring are all in focus.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;I used pretty conservative and standard setting with Enfuse. &amp;nbsp;Some things are more in focus than others, which I could probably fix by tuning Enfuse a little more. &amp;nbsp;I was very impressed by how well Enfuse combined the images on it&#39;s own.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Overall, the macro tubes are fun to play around with. &amp;nbsp;Probably worth the $10 to have on hand in case you ever feel an artistic need to take macro shots. &amp;nbsp;Enfuse and focus stacking are definitely something I&#39;m going to have to play around with more in the future.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</description><link>http://www.undiscoveredfeatures.com/2012/04/macro-tubes-canon-t3i-and-focus.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/-AR1FrQU9p-Q/T5uGCidiAeI/AAAAAAAAAtQ/bkoCzaaJcm0/s72-c/Computer+Screen.jpg" height="72" width="72"/><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-8781059474088998200</guid><pubDate>Thu, 05 Apr 2012 15:59:00 +0000</pubDate><atom:updated>2012-04-05T08:59:13.108-07:00</atom:updated><title>Using Raphael.js and Backbone.js together</title><description>I&#39;m a big fan of &lt;a href=&quot;http://documentcloud.github.com/backbone/&quot;&gt;Backbone.js&lt;/a&gt;.  It&#39;s lightweight enough to throw into any webapp I&#39;m building, large or small.  At the very least it gives me some guidelines on how to organize my code.  In larger apps the synchronization with the backend makes my life a lot easier.&lt;br /&gt;&lt;br /&gt;An app I&#39;m currently working on makes heavy use of &lt;a href=&quot;http://raphaeljs.com/&quot;&gt;Raphael.js&lt;/a&gt;, a great SVG library.  In order to unify my handling of user events, I extended the Backbone.js library a little.  It&#39;s a simple change, but I really like what it did to the organization of code.&lt;br /&gt;&lt;br /&gt;&lt;script src=&quot;https://gist.github.com/2312041.js?file=Backbone.RaphaelView.js.coffee&quot;&gt;&lt;/script&gt;&lt;br /&gt;&lt;br /&gt;As you can see, my goal was to be able to address user interaction with Raphael object in the way I can address interaction with the DOM.  DOM events can be specified under events via a &quot;&amp;lt;selector&amp;gt; &amp;lt;event&amp;gt;&quot; syntax, so one can do &quot;.button click&quot; or &quot;#myElement customEvent&quot;.  Since Raphael abstracts out the DOM from the SVG objects, I wanted to preserve the Raphael events but be able to throw them in with DOM events.  So the delegateRaphaelEvents method converts Raphael events to DOM events in the form &quot;raphael:&amp;lt;object name&amp;gt;:&amp;lt;event&amp;gt;&quot;. &amp;nbsp;The assigned callback function gets passed two objects, a jquery event object and a raphael event object.&lt;br /&gt;&lt;br /&gt;It works great and keeps my code well organized. &amp;nbsp;Enjoy!</description><link>http://www.undiscoveredfeatures.com/2012/04/using-raphaeljs-and-backbonejs-together.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>5</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-9042877806247074657</guid><pubDate>Wed, 14 Mar 2012 18:45:00 +0000</pubDate><atom:updated>2012-03-14T18:25:09.888-07:00</atom:updated><title>March Madness</title><description>I just created a random bracket generator.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://freerandombracket.com/&quot;&gt;http://freerandombracket.com&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Each time you load the page a new random bracket comes up.&lt;br /&gt;&lt;br /&gt;Each matchup is decided by a very simple weighted algorithm:&lt;br /&gt;&lt;br /&gt;Team Score = sqrt(Team Seed) * &amp;lt;random value between 0 and 100&amp;gt;&lt;br /&gt;&lt;br /&gt;For each matchup, the score is calculated for both teams. &amp;nbsp;Whichever team has the lowest score moves on to the next round.&lt;br /&gt;&lt;br /&gt;The page should be printable.&lt;br /&gt;&lt;br /&gt;Enjoy!&lt;br /&gt;&lt;br /&gt;EDIT: &amp;nbsp;The above calculation was a little too loose. &amp;nbsp;It meant that 1 out of 4 matchups between 1 seeds and 16 seeds would be an upset. &amp;nbsp;So I changed it to the following:&lt;br /&gt;&lt;br /&gt;Team Score = (30 + Seed^2)*&amp;lt;random value&amp;gt;&lt;br /&gt;&lt;br /&gt;This led to a little more realistic match ups, where 9 times out of 10, a 1 seed would beat a 16 seed, a 1 seed would beat a 2 seed 10% more often than an upset, and an 8 seed would win against a 9 seed 20% more often.&lt;br /&gt;&lt;br /&gt;I&#39;m still playing with it, but as of right now that is the algorithm being used.</description><link>http://www.undiscoveredfeatures.com/2012/03/march-madness.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-6864305045909618110</guid><pubDate>Tue, 31 Jan 2012 06:57:00 +0000</pubDate><atom:updated>2012-01-30T22:57:40.706-08:00</atom:updated><title>Manage My MiFi</title><description>A few months ago I made a&amp;nbsp;&lt;a href=&quot;http://www.undiscoveredfeatures.com/2011/08/3g-connectivity-no-data-plan.html&quot; target=&quot;_blank&quot;&gt;post&lt;/a&gt;&amp;nbsp;about a m&lt;a href=&quot;http://www.truconnect.com/&quot; target=&quot;_blank&quot;&gt;obile broadband provider&lt;/a&gt;&amp;nbsp;called Truconnect. &amp;nbsp;They provide mobile access without a set plan or contract. &amp;nbsp;I know the founders personally and after some discussion I proposed an interesting mobile app. &amp;nbsp;I present &lt;a href=&quot;http://www.truconnect.com/manage-my-mifi/&quot; target=&quot;_blank&quot;&gt;Manage My MiFi&lt;/a&gt;:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-E94J5oE3P0k/TyeLqWLgENI/AAAAAAAAAN4/SW-p7nckKFc/s1600/htc_evo_landscape.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;384&quot; src=&quot;http://2.bp.blogspot.com/-E94J5oE3P0k/TyeLqWLgENI/AAAAAAAAAN4/SW-p7nckKFc/s640/htc_evo_landscape.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;One of the big benefits of using Truconnect is only paying for the data I use (see previous post on why a mobile access without a plan is a good thing). &amp;nbsp;Since keeping track of that data usage is crucial, &amp;nbsp;I developed an&amp;nbsp;application for Android and iOS that monitors data usage of a connected MiFi device. &amp;nbsp;I also built a Mac OS X widget. &amp;nbsp;It works well and I use it all the time myself.&lt;br /&gt;&lt;br /&gt;It works with all MiFi devices (made by Novatel) on all major carriers. &amp;nbsp;If anyone is interested in Truconnect service, download the &lt;a href=&quot;http://itunes.apple.com/us/app/manage-my-mifi/id492589477&quot; target=&quot;_blank&quot;&gt;free&lt;/a&gt; &lt;a href=&quot;https://market.android.com/details?id=com.truconnect&quot; target=&quot;_blank&quot;&gt;app&lt;/a&gt; to learn more (There will occasionally be a promo code in the app for new customers to use, so check before signing up!).&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Technical notes: &amp;nbsp;(for those interested)&lt;br /&gt;&lt;br /&gt;The app was a blast to build. &amp;nbsp;The app concept was conceived just before Christmas and we wanted to launch it in time for CES. &amp;nbsp;That left about a week to develop the application and submit it to the respective app stores. &amp;nbsp;I decided to build on the PhoneGap framework, as that would allow cross platform support with minimal effort. &amp;nbsp;This also made it easy to build a Mac OS X widget. &amp;nbsp;A Windows Gadget shouldn&#39;t be too hard either (let me know in the comments if there&#39;s an interest in it). &amp;nbsp;I actually did a good portion of the development in the car driving home from a skiing trip to Mammoth Mountain. &amp;nbsp;Surprisingly enough, we got the app finished and approved in time for CES. &amp;nbsp;It was displayed at the TruConnect booth and was featured in a &lt;a href=&quot;http://finance.yahoo.com/news/truconnect-app-puts-mifi-users-182400866.html&quot; target=&quot;_blank&quot;&gt;press release&lt;/a&gt;. &amp;nbsp;I went down for the last day and it was pretty cool to see something I built on display. &amp;nbsp;Now I want to see people using it!</description><link>http://www.undiscoveredfeatures.com/2012/01/manage-my-mifi.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-E94J5oE3P0k/TyeLqWLgENI/AAAAAAAAAN4/SW-p7nckKFc/s72-c/htc_evo_landscape.png" height="72" width="72"/><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-4046555502858623497</guid><pubDate>Tue, 03 Jan 2012 01:49:00 +0000</pubDate><atom:updated>2012-01-02T21:22:29.175-08:00</atom:updated><title>Space Invaders - 2 Player</title><description>Last semester I took a course on embedded systems. &amp;nbsp;The class revolved around building the classic Space Invaders game. &amp;nbsp;We built the game on the &lt;a href=&quot;http://www.digilentinc.com/Products/Detail.cfm?Prod=XUPV2P&quot;&gt;Virtex-II Development Platform&lt;/a&gt;&amp;nbsp;which involves an FPGA with a PowerPC processor. &amp;nbsp;The combination of a &quot;fast enough&quot; processor and an FPGA meant we could do some pretty cool things. &amp;nbsp;We developed some custom hardware to act as a DMA audio controller, for example. &amp;nbsp;One part of the course is a creative assignment, where we were supposed to create a substantial addition to the game. &amp;nbsp;We decided to make it a two player game, but wanted to do a little more hardware development. &amp;nbsp;So we picked up two&lt;a href=&quot;http://www.sparkfun.com/products/9582&quot;&gt; RF transceivers&lt;/a&gt;&amp;nbsp;and added wireless communication. &amp;nbsp;Here&#39;s the final product:&lt;br /&gt;&lt;br /&gt;&lt;iframe allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;300&quot; mozallowfullscreen=&quot;&quot; src=&quot;http://player.vimeo.com/video/34487751?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; webkitallowfullscreen=&quot;&quot; width=&quot;400&quot;&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;a href=&quot;http://vimeo.com/34487751&quot;&gt;Space Invaders - 2 Player&lt;/a&gt; from &lt;a href=&quot;http://vimeo.com/user9274302&quot;&gt;Peter Hamilton&lt;/a&gt; on &lt;a href=&quot;http://vimeo.com/&quot;&gt;Vimeo&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;As you can see, the graphics are pretty good (the video skews them a bit) and the gameplay is very smooth. &amp;nbsp;My friend Jeremy worked hard to make it an exact copy. &amp;nbsp;As far as multiplayer goes, the video explains the additional rules for 2 players. &amp;nbsp;Every time a player kills an alien, there is a 30% chance it reappears on the other persons screen as a yellow alien. &amp;nbsp;When a player shoots a spaceship, a random number of aliens (between 1 and 7), appear on the other players screen. &amp;nbsp;The game state is synced over the wireless connection 10 times a second.&lt;br /&gt;&lt;br /&gt;This turned out to be a blast. &amp;nbsp;It was fun to build and pretty fun to play. &amp;nbsp;It added a very fun competitive element to an a classic game. &amp;nbsp;We actually left it running in the lab for a few weeks and students in the class would frequently challenge each other.&lt;br /&gt;&lt;br /&gt;&amp;nbsp;Overall it was a pretty cool project.&lt;br /&gt;&lt;br /&gt;Thanks to Jeremy Mickelson and Jared Pilcher, my lab partners.&lt;br /&gt;&lt;br /&gt;Edit: &lt;a href=&quot;http://news.ycombinator.com/item?id=3418292&quot;&gt;Hacker news comments&lt;/a&gt;</description><link>http://www.undiscoveredfeatures.com/2012/01/space-invaders-2-player.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-6460646909394464161</guid><pubDate>Mon, 14 Nov 2011 06:35:00 +0000</pubDate><atom:updated>2011-11-15T10:47:26.667-08:00</atom:updated><category domain="http://www.blogger.com/atom/ns#">Programming</category><title>Smuggling data in pointers</title><description>While reading up on&amp;nbsp;&lt;a href=&quot;http://en.wikipedia.org/wiki/ABA_problem&quot;&gt;The ABA Problem&lt;/a&gt;&amp;nbsp;I came across a fantastic hack. &amp;nbsp;The ABA problem, in a nutshell, results from the inability to atomically access both a pointer and a &quot;marked&quot; bit at the same time (read the wikipedia page). &amp;nbsp;One fun, but very hackish solution is to &quot;smuggle&quot; data in a pointer. &amp;nbsp;Example:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;#include &quot;stdio.h&quot;&lt;br /&gt;void * smuggle(void * ptr, int value){&lt;br /&gt;  return (void *)( (long long)ptr | (value &amp;amp; 3) );&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;int recoverData(void * ptr){&lt;br /&gt;  return (long long)ptr &amp;amp; 3;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;void * recoverPointer(void * ptr){&lt;br /&gt;  return (void *)( (long long)ptr &amp;amp; (~3) );&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;int main(){&lt;br /&gt;  int a = 90;&lt;br /&gt;  int b = 2;&lt;br /&gt;  int * c = &amp;amp;a;&lt;br /&gt;  void * d = smuggle((void *)c, b);&lt;br /&gt;  printf(&quot;The value of a is %d\n&quot;, *( (int *) recoverPointer(d) ) );&lt;br /&gt;  printf(&quot;The value of b is %d\n&quot;, recoverData(d) );&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The above code outputs:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;The value of a is 90&lt;br /&gt;The value of b is 2&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;So what happened?  On a Unix system like OS X or Linux (as well as almost every operating system), memory is aligned to specific addresses.  Since a pointer is nothing more than an address, the alignment has an interesting effect on the value of the pointer.&lt;br /&gt;&lt;br /&gt;If I run the above code, the integer &lt;i&gt;a&lt;/i&gt;&amp;nbsp;has an address of 0x68537518. &amp;nbsp;This isn&#39;t set in stone, and will be different each time I run the program. &amp;nbsp;If we look at the addresses in binary it looks like this:&lt;br /&gt;&lt;br /&gt;0110 1000 0101 0011 0111 0101 0001 1000&lt;br /&gt;&lt;br /&gt;Run the code again and we get 0x66601518:&lt;br /&gt;&lt;br /&gt;0110 0110 0110 0000 0001 0101 0001 1000&lt;br /&gt;&lt;br /&gt;If we look at the address of integer &lt;i&gt;b&lt;/i&gt;&amp;nbsp;in the same run we get 0x66601514:&lt;br /&gt;&lt;br /&gt;0110 0110 0110 0000 0001 0101 0001 0100&lt;br /&gt;&lt;br /&gt;There is a lot of similarity in those addresses, but I want to point out the last two binary bits. &amp;nbsp;In all addresses, they are zero. &amp;nbsp;This is because of alignment. &amp;nbsp;The compiler will align the bits so they always start on a value that is a multiple of four, since integers are 4 bytes (32 bits) long. &amp;nbsp;This means all integer addresses will always end in 00.&lt;br /&gt;&lt;br /&gt;So the &lt;i&gt;smuggle &lt;/i&gt;method above takes advantage of that fact. &amp;nbsp;Since we know the values are always going to be 00, we can replace them with an arbitrary value between 0 and 3. &amp;nbsp;When we want to retrieve the smuggled data, we only look at the lowest two bits. &amp;nbsp;When we want to dereference the pointer, we zero those bits out and voila, we have our original address.&lt;br /&gt;&lt;br /&gt;In almost all applications, this would be a pretty useless trick, but in the case of the ABA problem, one can provide a couple of flags in addition to the pointer to better describe the value it is pointing to. &amp;nbsp;This allows instructions such as compare-and-set to atomically access both pieces of data.&lt;br /&gt;&lt;br /&gt;Pretty cool little trick, eh?&lt;br /&gt;&lt;br /&gt;EDIT: &amp;nbsp;After a number of comments condemning this practice, I wanted to state that, for the record, you don&#39;t want to do this. &amp;nbsp;There are some corner cases where this is very useful, but generally should be avoided.</description><link>http://www.undiscoveredfeatures.com/2011/11/smuggling-data-in-pointers.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>12</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-5703204189501553418</guid><pubDate>Fri, 07 Oct 2011 19:11:00 +0000</pubDate><atom:updated>2011-10-07T12:11:38.505-07:00</atom:updated><title>Dangerous Roads in Michigan - The iPhone App</title><description>I recently built a pretty cool little iPhone app for a group in Michigan.  &lt;br /&gt;&lt;br /&gt;Here&#39;s their web site:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.dangeronourroads.com/&quot;&gt;http://www.dangeronourroads.com/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Here&#39;s a news article about it:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.wilx.com/home/headlines/New_Mobile_App_Launched_To_Track_Michigans_Worst_Roads_Bridges_131288459.html&quot;&gt;http://www.wilx.com/home/headlines/New_Mobile_App_Launched_To_Track_Michigans_Worst_Roads_Bridges_131288459.html&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Here&#39;s the app in the app store:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://itunes.apple.com/us/app/michigan-danger-on-our-roads/id465543077?mt=8&quot;&gt;http://itunes.apple.com/us/app/michigan-danger-on-our-roads/id465543077?mt=8&lt;/a&gt;</description><link>http://www.undiscoveredfeatures.com/2011/10/dangerous-roads-in-michigan-iphone-app.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-320879824536402581</guid><pubDate>Tue, 04 Oct 2011 17:44:00 +0000</pubDate><atom:updated>2011-10-04T10:49:06.337-07:00</atom:updated><title>New Baby</title><description>Great news!  I&#39;m a father.  My wife gave birth to our healthy baby boy yesterday.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;a href=&quot;https://lh3.googleusercontent.com/-oolLgpuSgdU/TooRZcNTQ1I/AAAAAAAAAH0/X-CHrJGQ1-s/s816/11%2B-%2B1&quot; imageanchor=&quot;1&quot; style=&quot;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;380&quot; src=&quot;https://lh3.googleusercontent.com/-oolLgpuSgdU/TooRZcNTQ1I/AAAAAAAAAH0/X-CHrJGQ1-s/s640/11%2B-%2B1&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Since this is a tech blog, I thought I&#39;d post about the script I wrote at 2:30 am.&lt;br /&gt;&lt;br /&gt;My wife wanted me to time her contractions for her. &amp;nbsp;I started using my phone, but soon decided to write a quick program. &amp;nbsp;I wrote the following program in python to keep track of contractions:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://github.com/hamiltop/Contraction-Timer&quot;&gt;https://github.com/hamiltop/Contraction-Timer&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;It&#39;s a command line utility that works as follows:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;Melker:contraction_timer peter$ python timer.py&lt;br /&gt;&lt;br /&gt;Welcome to Contraction Timer.&lt;br /&gt;Any time a contraction either starts or stops, press any key to record it&lt;br /&gt;Press any key to start timing first contraction&lt;br /&gt;&lt;br /&gt;Timing Contraction&lt;br /&gt;&lt;br /&gt;Contraction was 0 minutes and &amp;nbsp;31 seconds long&lt;br /&gt;&lt;br /&gt;Waiting for new contraction to start&lt;br /&gt;&lt;br /&gt;Time between contractions was 0 minutes and 20 seconds long&lt;br /&gt;&lt;br /&gt;Timing Contraction&lt;br /&gt;&lt;br /&gt;Contraction was 1 minutes and &amp;nbsp;4 seconds long&lt;br /&gt;&lt;br /&gt;Waiting for new contraction to start&lt;br /&gt;&lt;br /&gt;Time between contractions was 0 minutes and 5 seconds long&lt;br /&gt;&lt;br /&gt;Timing Contraction&lt;br /&gt;&lt;br /&gt;....&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;We didn&#39;t get to use it for very long, because labor got really intense and we went into the hospital, but I found the fact I decided to write it while my wife was in labor was amusing.</description><link>http://www.undiscoveredfeatures.com/2011/10/new-baby.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://lh3.googleusercontent.com/-oolLgpuSgdU/TooRZcNTQ1I/AAAAAAAAAH0/X-CHrJGQ1-s/s72-c/11%2B-%2B1" height="72" width="72"/><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-6469735245896689955</guid><pubDate>Mon, 26 Sep 2011 06:05:00 +0000</pubDate><atom:updated>2011-09-26T12:28:23.748-07:00</atom:updated><title>Kelley Blue Book</title><description>So I&#39;m still passively in the market for a car. &amp;nbsp;I wanted to do some analysis using kbb.com. &amp;nbsp;The problem is that their interface is terrible if you want trend data. &amp;nbsp;I wanted to see the private party &quot;good condition&quot; (the middle 80% range) price for a range of years and a range of mileages. &amp;nbsp;Doing it through the website was painful, so I wrote the following script (Ruby):&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;1 require &quot;open-uri&quot;&lt;br /&gt;  2 require &quot;nokogiri&quot;&lt;br /&gt;  3 require &quot;csv&quot;&lt;br /&gt;  4 &lt;br /&gt;  5 years = (2006..2010)&lt;br /&gt;  6 mileages = (0..10).map{ |v| 10000 + v*5000 }&lt;br /&gt;  7 &lt;br /&gt;  8 data = {}&lt;br /&gt;  9 &lt;br /&gt; 10 years.each do |year|&lt;br /&gt; 11   data[year] = {}&lt;br /&gt; 12   mileages.each do |mileage|&lt;br /&gt; 13     sleep 2&lt;br /&gt; 14     doc = Nokogiri::HTML(open(&quot;http://www.kbb.com/mazda/mazda5/#{year}-mazda-mazda5/sport-minivan-4d/?pricetype=private-party&amp;amp;anchor=true&amp;amp;mileage=#{mileage}&quot;))&lt;br /&gt; 15     data[year][mileage] = doc.css(&quot;.good-value .value&quot;).text&lt;br /&gt; 16     puts &quot;year: #{year} mileage: #{mileage} value: #{data[year][mileage]}&quot;&lt;br /&gt; 17   end&lt;br /&gt; 18 end&lt;br /&gt; 19 &lt;br /&gt; 20 CSV.open(&quot;mazda5.csv&quot;, &quot;w&quot;) do |csv|&lt;br /&gt; 21   csv &amp;lt;&amp;lt; [&quot;&quot;].concat(years.to_a)&lt;br /&gt; 22   mileages.each do |mileage|&lt;br /&gt; 23     csv &amp;lt;&amp;lt; [mileage].concat(data.values.map{ |y| y[mileage] })&lt;br /&gt; 24   end&lt;br /&gt; 25 end&lt;/pre&gt;&lt;br /&gt;This produced a nice spreadsheet file and then I created the following chart (y axis is cost, x axis is mileage):&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-n4zXmcqCb6c/ToALr1IR5BI/AAAAAAAAAHk/1XCIEanQD8U/s1600/chart_1+%25281%2529.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/-n4zXmcqCb6c/ToALr1IR5BI/AAAAAAAAAHk/1XCIEanQD8U/s1600/chart_1+%25281%2529.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Interesting observations:&lt;br /&gt;&lt;br /&gt;The car seems to depreciate at the same rate with respect to miles, regardless of the year. &amp;nbsp;(ie, the slope of the lines are all about the same)&lt;br /&gt;&lt;br /&gt;The car seems to depreciate at about the same rate with respect to time for the first few years. &amp;nbsp;(ie, the space between lines is constant for 2010,2009,2008)&lt;br /&gt;&lt;br /&gt;There is a big drop in value between 2008 and 2007 models, and a slightly smaller gap between 2007 and 2006 models.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Conclusions:&lt;br /&gt;&lt;br /&gt;1) &amp;nbsp;I like ruby. &amp;nbsp;The library I used, nokogiri, is great. &amp;nbsp;I&#39;ve tried some python libraries, like beautiful soup and lxml, but none are as succinct as nokogiri, especially when it comes to css selectors.&lt;br /&gt;2) &amp;nbsp;I find it interesting that there is such a sharp drop between 2008 and 2007. &amp;nbsp;I always thought the car dropped in value more during the first 3 years than in years 4-8.&lt;br /&gt;3) &amp;nbsp;In the first three years, depreciation is about $500/year and $500/10k miles. &amp;nbsp;So if trends continued, you could buy a 2010 and sell the car after 2 years and 20k for 2000 less than you bought it for.</description><link>http://www.undiscoveredfeatures.com/2011/09/kelly-blue-book.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-n4zXmcqCb6c/ToALr1IR5BI/AAAAAAAAAHk/1XCIEanQD8U/s72-c/chart_1+%25281%2529.png" height="72" width="72"/><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-4587487423731385518</guid><pubDate>Wed, 03 Aug 2011 14:54:00 +0000</pubDate><atom:updated>2011-08-03T07:54:26.198-07:00</atom:updated><title>3G Connectivity – No Data Plan</title><description>&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;&amp;lt;TLDR below&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;Being the somewhat connected guy that I am, I am always looking for a way to get mobile access to the internet without having to donate a pint of blood at the same time.&amp;nbsp;&amp;nbsp; Most of the time I am on my home, school or office Wifi network, but occasionally I could use a mobile connection. &amp;nbsp;When I say occasionally, I mean the once or twice a year I actually go somewhere. &amp;nbsp;A 10 hour drive from Utah to LA is a pretty big time sink. &amp;nbsp;One such trip, I borrowed my fathers mobile broadband card and put in a good 4-5 hours of web development. &amp;nbsp;On such an occasion, I would easily pay the 45 bucks/month for the mobile broadband but as I said, that&#39;s only an occasional thing. &amp;nbsp;For most months, that would be a waste of money.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;I&#39;ve looked at various pay as you go mobile broadband plans, but they are always so gimmicky. Plans like 10 bucks for 10 days totaling 100 MB. &amp;nbsp;I&#39;m not even sure what that means, to be honest. &amp;nbsp;Do I get to pick the 10 days?&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;I came across a company called &lt;a href=&quot;http://www.truconnect.com/&quot;&gt;TruConnect&lt;/a&gt; that does have a “pay as you go” pricing scheme.&amp;nbsp;&amp;nbsp; For a pretty reasonable monthly access fee of $4.99 , you can connect anywhere and anytime and then just pay for actual usage at 3.9 cents a megabyte.&amp;nbsp;&amp;nbsp; So 200 MB (which is enough for anything except Netflix) for about $8. &amp;nbsp;That&#39;s cheap enough that I can keep a device with me in my bag and use it when I need to.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;color: #333333; font-family: arial, sans-serif; font-size: x-small;&quot;&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-style-span&quot; style=&quot;border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 13px;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;They offer two different devices: a USB stick for laptops or a MiFi mobile hotspot for tablets or laptops.&amp;nbsp;&amp;nbsp; The MiFi is your usual run of the mill device. &amp;nbsp;(It lets you connect several Wifi devices to a mobile hotspot that you create on the fly).&amp;nbsp; &amp;nbsp;The 3G service itself is really pretty zippy – no problems with email or surfing the web.&amp;nbsp;&amp;nbsp; I&#39;ve used it with tablet, laptops, even my desktop when my internet wasn&#39;t working. &amp;nbsp;It worked fine – no problems. &amp;nbsp;The devices are not subsidized, as you aren&#39;t locked into a contract, but they are very reasonably priced. &amp;nbsp;$69.99 for the USB and $89.99 for the MiFi&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Interesting Applications:&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;The obvious use case is pretty great. &amp;nbsp;It&#39;s a cheap way for me to have inexpensive internet on the go. &amp;nbsp;But what really intrigues me is the couple of MB a month applications. &amp;nbsp;I plugged my USB 3g device into a Beagle Board (3&quot; by 3&quot; ARM based computer) and was able to connect it up to the internet and suddenly my embedded projects are 3g enabled. &amp;nbsp;I can keep the machine on and run a ssh (remote login) server on it at just under 1 MB/day. &amp;nbsp;For around 6 bucks a month I can put that device anywhere and still have access to it. &amp;nbsp;Other interesting applications:&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Car computer - GPS navigation, Pandora (at ~ 1 MB/minute, not the cheapest solution, but still not terrible)&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Shared office plan - Since there&#39;s no plan, the device isn&#39;t tied to anyone in particular. &amp;nbsp;Keep 2 or 3 available in the office for anyone travelling.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Tablet/iPod Touch - Add 3g access to a mobile device.&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Anyone got any good ideas? &amp;nbsp;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot; style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&amp;lt;TLDR&amp;gt; &lt;a href=&quot;http://www.truconnect.com/&quot;&gt;TruConnect&lt;/a&gt;&amp;nbsp;offers a cheap 3g mobile broadband plan. &amp;nbsp;It&#39;s a pay-as-you-go model, (with a $4.99/month &quot;keep my device active&quot; fee), at 3.9 cents/MB with no contracts or commitments of any kind.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</description><link>http://www.undiscoveredfeatures.com/2011/08/3g-connectivity-no-data-plan.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-5286893448703506417</guid><pubDate>Wed, 22 Jun 2011 06:59:00 +0000</pubDate><atom:updated>2011-06-22T07:23:42.217-07:00</atom:updated><title>Bitcoin - A decentralized economy</title><description>So those embedded in the hacker/nerd industry have probably heard about something called Bitcoin. &amp;nbsp;Here&#39;s the standard video presentation on what bitcoin is:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;object class=&quot;BLOGGER-youtube-video&quot; classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot; data-thumbnail-src=&quot;http://2.gvt0.com/vi/Um63OQz3bjo/0.jpg&quot; height=&quot;266&quot; width=&quot;320&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Um63OQz3bjo&amp;fs=1&amp;source=uds&quot; /&gt;&lt;param name=&quot;bgcolor&quot; value=&quot;#FFFFFF&quot; /&gt;&lt;embed width=&quot;320&quot; height=&quot;266&quot;  src=&quot;http://www.youtube.com/v/Um63OQz3bjo&amp;fs=1&amp;source=uds&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;So what&#39;s my take on bitcoin? &lt;br /&gt;&lt;br /&gt;Bitcoin as a currency:&lt;br /&gt;&lt;br /&gt;First off, it is really easy to use. &amp;nbsp;I bought some computer parts with bitcoin last week. &amp;nbsp;I ordered them from cablesaurus.com, chose Bitcoin as my payment method. &amp;nbsp;They sent me an email with a bitcoin address and an amount. &amp;nbsp;I sent it and they shipped the item. &amp;nbsp;Very simple. &amp;nbsp;No seller fees. &amp;nbsp;Easy to keep track of on the selling end - the address I sent to was unique and only used for my transaction. &amp;nbsp;It&#39;s essentially online cash. &amp;nbsp;No rolling back transactions. &amp;nbsp;It&#39;s difficult to trace who spent it. &lt;br /&gt;&lt;br /&gt;Bitcoin mining:&lt;br /&gt;&lt;br /&gt;I have a &quot;mining rig&quot; as they call it, and it generates around 0.2 BTC (bitcoins) per day. &amp;nbsp;I have a program that I leave running 24/7. &amp;nbsp;0.2 BTC is not that much, but my total hardware cost was around 150 bucks. &amp;nbsp;At the current exchange rate ( it&#39;s been floating around $15 per BTC,) that&#39;s about 10 bitcoins. &amp;nbsp;So far I&#39;ve mined ~ 3.50 BTC. &amp;nbsp;In about a month I&#39;ll have paid off the rest of my hardware. &amp;nbsp;There are a few other costs in there. &amp;nbsp;The electricity required to run my computer for a month is about 144 kWhrs. &amp;nbsp;At $0.07 per kWhr (Idaho is cheap... I love it,) &amp;nbsp;that&#39;s an extra 10 bucks a month in overhead, which is low enough to still make bitcoin profitable. &amp;nbsp;I&#39;m just a hobbyist miner. &amp;nbsp;I do it because I find the concept intriguing, not because I&#39;m trying to make a big profit. &amp;nbsp;Some people do try to make significant profits and have rigs that generate 100 times what I do. &amp;nbsp;One person I know personally mines around 200-300 coins a month, or $3,000-$5,000 worth of BTC. &amp;nbsp;Not enough to quit your day job, but not too bad for just letting hardware run.&lt;br /&gt;&lt;br /&gt;Future as a currency:&lt;br /&gt;&lt;br /&gt;In the past month, the bitcoin exchange has been pretty crazy. &amp;nbsp;It went from $1 a few months ago to $30/BTC in early June. &amp;nbsp;It then crashed down to $10, and has been stabilizing between 15 and 20. &amp;nbsp;Then this last weekend one of the main exchanges was hacked and all sorts of crazy stuff happened. &amp;nbsp;Bitcoin has gotten its fair share of press coverage. &amp;nbsp;A couple of US Senators have labeled it as a money laundering ploy and a vehicle for drug trafficking. &amp;nbsp;If it survives the next few months I think it may stick around.&lt;br /&gt;&lt;br /&gt;One interesting use that is emerging is online tip jars. &amp;nbsp;A few communities have emerged where it is customary to tip a blog writer a fraction of a coin if you found the article interesting. &amp;nbsp;With no transaction fees, leaving the equivalent of a nickel in a virtual tip jar is quite simple. &amp;nbsp;A blog with 1000 readers can make a couple of bucks if people tipped a few thousandths of a bitcoin each. &lt;br /&gt;&lt;br /&gt;I&#39;m not sure where it&#39;s ultimately going, but I find it to be a really interesting economic microcosm. &amp;nbsp;Since nobody is in charge, it ends up being a very interesting demonstration in economics, both macro and micro. &amp;nbsp;I expect to have my mining costs paid off soon, and if they don&#39;t I think I&#39;ve made enough to clear any losses when I sell my equipment on craigslist (it is all high end computer gaming equipment, so it shouldn&#39;t be too hard to sell).&lt;br /&gt;&lt;br /&gt;I could go into much more detail on technical side of things. &amp;nbsp;It&#39;s a pretty intricate and complicated system. &amp;nbsp;Pretty genius in my opinion. &amp;nbsp;It will be interesting to see how things play out.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Comments? &amp;nbsp;Questions?&lt;br /&gt;&lt;br /&gt;Donations? &amp;nbsp;Bitcoin: &amp;nbsp;1J7meb6uwvKEjQrabtNVBqVS9nrF8TxpuT</description><link>http://www.undiscoveredfeatures.com/2011/06/bitcoin-decentralized-economy.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>6</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-5463247100898163807</guid><pubDate>Thu, 26 May 2011 05:42:00 +0000</pubDate><atom:updated>2011-05-26T19:49:58.229-07:00</atom:updated><title>Solid State Drives</title><description>I&#39;m spending this summer working as an intern for Micron in the Solid State Drive Product Engineering group. &amp;nbsp;I&#39;m working on some interesting things that haven&#39;t come to market yet. &amp;nbsp;Since I&#39;ve been here, I&#39;ve talked to a few friends who don&#39;t know much about SSDs. &amp;nbsp;Here are a few questions with answers. &amp;nbsp;There&#39;s nothing here that you couldn&#39;t find by searching around.&lt;br /&gt;&lt;br /&gt;1) &amp;nbsp;Are SSDs as reliable as traditional hard drives?&lt;br /&gt;&lt;br /&gt;While I can&#39;t make any blanket statements, here are a few points to consider. &amp;nbsp;SSDs contain no mechanical parts. &amp;nbsp;Traditional hard drives have motors and spin and things move around. &amp;nbsp;If a tiny component were to break, you would hear a wonderful clicking noise before seeing the &quot;Blue Screen of Death&quot;. &amp;nbsp;SSDs do not suffer from the same problems.&lt;br /&gt;&lt;br /&gt;2) &amp;nbsp;Do SSDs wear out faster than traditional hard drives?&lt;br /&gt;&lt;br /&gt;Not all SSDs are created equal. &amp;nbsp;Because SSDs use flash memory, there is a limited number of times each block can be erase and rewritten. &amp;nbsp;This varies greatly from 3k writes to 100k writes. &amp;nbsp;But even at 3k writes, that means that you can erase and rewrite the entire drive 3 thousand times before it fails. &amp;nbsp;On a 64GB drive, that means you will write 192 TB of data, or 100 GB a day (more than the entire drive) for the next 5 years. &amp;nbsp;One concern is if you rewrite a single file more than 3k times. &amp;nbsp;Most SSDs are smart enough to &quot;share the wealth&quot; and move that file around so it wears the drive out evenly. &amp;nbsp;Think of it like rotating your cars tires. &amp;nbsp;Since not all SSDs are created equally, do a little research into the life of the drive. &amp;nbsp;Most manufacturers release that information (Micron does).&lt;br /&gt;&lt;br /&gt;3) &amp;nbsp;SSDs are really expensive. &amp;nbsp;Do they really make a difference?&lt;br /&gt;&lt;br /&gt;According to many benchmarks I&#39;ve seen, a good SSD will speed up your random file access something like a half second. &amp;nbsp;Not much on paper. &amp;nbsp;But in actual use, that half second makes a lot of difference. &amp;nbsp;Many people say that an SSD is not something you notice being there, but you definitely notice when it&#39;s not. &amp;nbsp;With an SSD, opening an application is practically instantaneous. &amp;nbsp;Reboots take 20 seconds. &amp;nbsp;Everything just feels so much snappier. &amp;nbsp;There&#39;s a reason so many people have said that an SSD is the best&amp;nbsp;available&amp;nbsp;upgrade to your computer.&lt;br /&gt;&lt;br /&gt;If anyone has other questions, just ask in the comments.&lt;br /&gt;&lt;br /&gt;I&#39;m having a blast. &amp;nbsp;There&#39;s a lot of cool stuff going on under the hood. &amp;nbsp;Micron is unique in that they are one of the few companies who manufacture their own memory. &amp;nbsp;This lets us do some cool things most other SSD companies can&#39;t do. &amp;nbsp;Cool stuff on the horizon.&lt;br /&gt;&lt;br /&gt;UPDATE:&lt;br /&gt;I figured it would be cool to post the drives I&#39;m working with:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Crucial-CT256M4SSD2-256GB-SSD-SATA/dp/B004W2JL2A?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=bil&amp;amp;camp=213689&amp;amp;creative=392969&quot; imageanchor=&quot;1&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Crucial CT256M4SSD2 256GB M4 SSD 2.5&amp;quot; SATA III&quot; src=&quot;http://ws.amazon.com/widgets/q?MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL160_&amp;amp;ASIN=B004W2JL2A&amp;amp;tag=undiscover-20&quot; /&gt;&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=bil&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B004W2JL2A&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Lexar-Media-Crucial-2-5-Inch-CT512M4SSD2/dp/B004W2JL3Y?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial 512 GB m4 2.5-Inch Solid State Drive SATA 6Gb/s&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B004W2JL3Y&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Crucial-CT256M4SSD2-256GB-SSD-SATA/dp/B004W2JL2A?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial 256 GB m4 2.5-Inch Solid State Drive SATA 6Gb/s&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B004W2JL2A&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Lexar-Media-Crucial-2-5-Inch-CT128M4SSD2/dp/B004W2JKZI?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial 128 GB m4 2.5-Inch Solid State Drive SATA 6Gb/s&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B004W2JKZI&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Lexar-Media-Crucial-64-2-5-Inch-CT064M4SSD2/dp/B004W2JKWG?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial 64 GB m4 2.5-Inch Solid State Drive SATA 6Gb/s&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B004W2JKWG&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;br /&gt;Those are the new models that just launched last month. (That 512 GB is expensive, I know)&lt;br /&gt;&lt;br /&gt;These are the last generation of drives. &amp;nbsp;Still very fast. &amp;nbsp;They&#39;ve got a lot of great reviews, which is why I&#39;m linking to them.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Crucial-Technology-RealSSD-Solid-CTFDDAC256MAG-1G1/dp/B0039SM0B2?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=bil&amp;amp;camp=213689&amp;amp;creative=392969&quot; imageanchor=&quot;1&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Crucial Technology 256 GB Crucial RealSSD C300 Series Solid State Drive CTFDDAC256MAG-1G1&quot; src=&quot;http://ws.amazon.com/widgets/q?MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL160_&amp;amp;ASIN=B0039SM0B2&amp;amp;tag=undiscover-20&quot; /&gt;&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=bil&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B0039SM0B2&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Crucial-Technology-RealSSD-Solid-CTFDDAC256MAG-1G1/dp/B0039SM0B2?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial Technology 256 GB Crucial RealSSD C300 Series Solid State Drive&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B0039SM0B2&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Crucial-Technology-RealSSD-Solid-CTFDDAC128MAG-1G1/dp/B0039SM0AS?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial Technology 128 GB Crucial RealSSD C300 Series Solid State Drive&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B0039SM0AS&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/Crucial-RealSSD-2-5-Inch-Transfer-CTFDDAC064MAG-1G1CCA/dp/B003YNX3TU?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;link_code=btl&amp;amp;camp=213689&amp;amp;creative=392969&quot; target=&quot;_blank&quot;&gt;Crucial Technology 64 GB Crucial RealSSD C300 Series Solid State Drive&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=btl&amp;amp;camp=213689&amp;amp;creative=392969&amp;amp;o=1&amp;amp;a=B003YNX3TU&quot; style=&quot;border: none !important; margin: 0px !important; padding: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;&lt;br /&gt;Also, I should probably make some sort of disclaimer. &amp;nbsp;I work for Micron. &amp;nbsp;This blog is in no way affiliated with Micron. &amp;nbsp;The views expressed here are my own and do not represent Micron in any way.</description><link>http://www.undiscoveredfeatures.com/2011/05/solid-state-drives.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-3516643660239852153</guid><pubDate>Tue, 19 Apr 2011 08:03:00 +0000</pubDate><atom:updated>2011-04-19T01:03:23.978-07:00</atom:updated><title>Transformation</title><description>I took the second half of the History of Creativity course this semester. &amp;nbsp;For the first half my project was the Park in the Shade app described in previous blog posts. &amp;nbsp;(&lt;a href=&quot;http://www.undiscoveredfeatures.com/2010/08/park-in-shade.html&quot;&gt;here&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&quot;http://www.undiscoveredfeatures.com/2010/09/park-in-shade-iphone.html&quot;&gt;here&lt;/a&gt;). &amp;nbsp;This time around I wanted to make something a little less useful, a little more &quot;creative&quot;.&lt;br /&gt;&lt;br /&gt;One Electrical Engineering class I took this semester focused on various transformations. &amp;nbsp;These are extremely useful because they &amp;nbsp;make it possible for engineers like me to build things like MP3 players and stuff. &amp;nbsp;The idea is that by doing some clever math, suddenly we have a signal (like a sound wave) in a new domain, which let&#39;s use do even more clever math. &amp;nbsp;Lot&#39;s of clever math, &amp;nbsp;We actually use imaginary numbers a lot here. &amp;nbsp;By imaginary numbers i mean sqrt(-1) and such, not numbers like eleventy billion as my wife believes. &amp;nbsp;But the end result is that you can carry a little device in your pocket that can recreate a sound wave almost perfectly. &amp;nbsp;Cool stuff.&lt;br /&gt;&lt;br /&gt;So I decided to create an art piece called Transformation. &amp;nbsp;I started with this image:&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-BbR66SAibjU/Ta09O30Jo_I/AAAAAAAAACU/tFr8e8kXXOo/s1600/jimmer.bmp&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;http://2.bp.blogspot.com/-BbR66SAibjU/Ta09O30Jo_I/AAAAAAAAACU/tFr8e8kXXOo/s200/jimmer.bmp&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;I then did a few simple things to it. &amp;nbsp;First, I shrunk it down from 100x100 pixels to 20x20. &amp;nbsp;100x100 was just too big to work with.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-Q1LIgqvQnco/Ta09eB9IX1I/AAAAAAAAACY/RY6BHVr6cI8/s1600/jimmer_20x20.bmp&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;http://2.bp.blogspot.com/-Q1LIgqvQnco/Ta09eB9IX1I/AAAAAAAAACY/RY6BHVr6cI8/s200/jimmer_20x20.bmp&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Now it looked grainy and course, but you could still see what it was. &amp;nbsp;Then I converted it to Grayscale.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-ccgrX6veDh8/Ta09y1HZXtI/AAAAAAAAACc/Ky7ckOvOqc8/s1600/jimmer_20x20_L.bmp&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;http://3.bp.blogspot.com/-ccgrX6veDh8/Ta09y1HZXtI/AAAAAAAAACc/Ky7ckOvOqc8/s200/jimmer_20x20_L.bmp&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Once it was in grayscale, it meant I had 400 values (20x20 pixels), with each value represented as a number between 0 (black) and 255 (white). &amp;nbsp;I quantized these values, essentially rounding them down to the nearest 20. &amp;nbsp;So values between 0 and 19 would get 0. &amp;nbsp;Values between 20 and 39 would get 20. &amp;nbsp;And so on. &amp;nbsp;So instead of 255 possible values, I only had 13 values, in steps of 20. &amp;nbsp;This didn&#39;t have a huge effect, as you can see, but it helped with my final step.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-qWkg91zYWJQ/Ta0-Uvez84I/AAAAAAAAACg/33xwPd6g4aA/s1600/jimmer_20x20_L_downsampled.bmp&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;200&quot; src=&quot;http://3.bp.blogspot.com/-qWkg91zYWJQ/Ta0-Uvez84I/AAAAAAAAACg/33xwPd6g4aA/s200/jimmer_20x20_L_downsampled.bmp&quot; width=&quot;200&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;For my final step, I took the values from the above image, and converted them to depth in a 3D model. &amp;nbsp;I wrote a clever little script that output this grid:&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;02 01 00 03 06 04 03 02 00 00 00 00 05 02 01 01 00 00 01 02&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;08 01 01 02 02 02 02 03 01 00 00 02 03 03 03 03 01 00 01 02&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;02 02 02 01 02 01 07 08 08 08 08 03 01 03 03 02 03 00 00 01&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;01 02 02 03 01 06 08 07 07 07 07 07 06 05 01 01 03 05 01 02&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;01 05 03 03 04 07 06 06 07 07 06 07 07 09 01 01 01 03 02 03&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;01 03 03 05 05 05 04 02 05 03 05 07 02 04 10 01 03 05 01 02&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;04 01 03 03 04 04 04 05 06 04 05 06 03 04 07 09 06 01 01 02&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;04 03 06 05 03 09 01 02 06 05 05 04 06 07 06 07 10 08 01 00&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;01 01 04 06 12 10 09 08 02 04 04 03 02 01 04 04 07 09 09 06&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;02 02 01 06 10 09 07 07 08 04 05 02 01 05 04 08 08 08 10 10&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;05 02 02 10 11 07 04 04 05 02 08 06 08 06 03 04 06 07 09 10&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;07 08 11 10 10 04 03 01 05 03 06 10 05 09 00 06 03 06 08 09&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;05 10 09 10 09 02 02 04 04 01 11 03 09 09 01 03 03 05 07 08&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;06 09 10 10 00 00 03 00 04 03 09 00 10 09 09 04 03 03 04 07&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;10 09 09 09 00 00 00 00 03 05 10 09 09 09 05 02 07 06 09 08&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;07 09 10 10 11 12 00 01 00 01 07 06 07 08 02 04 06 08 07 08&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;07 07 10 10 09 10 10 12 09 12 12 09 10 09 05 05 10 08 08 08&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;07 08 08 09 08 09 11 12 12 12 11 12 12 12 12 09 08 07 08 08&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;04 03 09 08 05 11 11 05 07 08 12 04 01 10 11 10 07 07 08 09&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;04 04 07 07 03 11 11 12 05 07 09 04 03 09 11 11 04 05 08 00&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Each number above corresponds to the length of a wooden dowel. &amp;nbsp;The measurements are in quarter inches, so a 10 would mean 2 1/2 inches, a 12 would mean 3 inches, etc. &amp;nbsp;Once I had the grid laid out for me, I assembled the dowels that I had cut. &amp;nbsp;The final result was this:&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-3ObGweTYdJA/Ta0_cqP2stI/AAAAAAAAACk/1X4IcWPHhCE/s1600/IMAG0009.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;237&quot; src=&quot;http://3.bp.blogspot.com/-3ObGweTYdJA/Ta0_cqP2stI/AAAAAAAAACk/1X4IcWPHhCE/s400/IMAG0009.jpg&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;It&#39;s hard to show it in a photo, but it was amazing how well this process created a 3D model from a 2D image. &amp;nbsp;His arms and head are clear enough. &amp;nbsp;His eyes and mouth are pretty clear as well. &amp;nbsp;There are a few interesting artifacts. &amp;nbsp;In the top left corner, there&#39;s a random dowel sticking out. &amp;nbsp;If you look in the original image, there&#39;s a fan in that corner wearing a white shirt. &amp;nbsp;Jimmer&#39;s hair, since it&#39;s darker than his face, seems to disappear. &amp;nbsp;But overall, shape seems to be kept intact.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;It was a fun little project. &amp;nbsp;Not all that useful, but interesting nonetheless. &amp;nbsp;It would be cool to use my script to produce a little finer image. &amp;nbsp;Maybe use a 3D printer like a&amp;nbsp;&lt;a href=&quot;http://reprap.org/wiki/Main_Page&quot;&gt;RepRap&lt;/a&gt;, so I could keep the image at full resolution. &amp;nbsp;I shrunk the image down to 20x20 because even then I had to cut and assemble 400 dowels. &amp;nbsp;At full resolution that would have been 10,000. &amp;nbsp;With a RepRap, I wouldn&#39;t have to care. &amp;nbsp;It would take a bit longer to print, but that&#39;s not a big deal.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Anyone else got any interesting applications / improvements?&lt;/div&gt;</description><link>http://www.undiscoveredfeatures.com/2011/04/transformation.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://2.bp.blogspot.com/-BbR66SAibjU/Ta09O30Jo_I/AAAAAAAAACU/tFr8e8kXXOo/s72-c/jimmer.bmp" height="72" width="72"/><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-3847067869481320761</guid><pubDate>Mon, 07 Mar 2011 08:42:00 +0000</pubDate><atom:updated>2011-03-07T00:46:22.474-08:00</atom:updated><title>Finance or Pay Cash</title><description>So, my wife and I are looking at buying a new car about 6 months from now. &amp;nbsp;We&#39;ve started crunching numbers to see what we can afford and plan to pay cash.&lt;br /&gt;&lt;br /&gt;A while back, I heard a strategy when buying a car. &amp;nbsp;Instead of paying cash, try to get a loan with a low interest rate. &amp;nbsp;If you are able to get a low enough rate, it can be profitable to take the loan and invest the cash you have saved up. &amp;nbsp;At the end of the loan period, you will have made more interest on the cash you had saved than you paid on the loan.&lt;br /&gt;&lt;br /&gt;Sounds like a good, sophisticated, &quot;I understand opportunity cost&quot;, economic approach. &amp;nbsp;Professor James Kearl (of BYU&#39;s infamous Econ 110 class) would be proud.&lt;br /&gt;&lt;br /&gt;Then I took a closer look at the numbers, and discovered a flaw in the argument:&lt;br /&gt;&lt;br /&gt;Assumptions:&lt;br /&gt;&lt;br /&gt;Car costs $20,000&lt;br /&gt;The load period is 5 years&lt;br /&gt;The loan interest rate is 5%&lt;br /&gt;The investment interest rate is guaranteed at 6% &amp;nbsp;(after taxes, etc.)&lt;br /&gt;&lt;br /&gt;So the blind calculations are (after 5 years):&lt;br /&gt;&lt;br /&gt;Total cost of loan (principle + interest): &amp;nbsp;$22,645.48&lt;br /&gt;Total value of investment (principle + interest): &amp;nbsp;$26,977.00&lt;br /&gt;&lt;br /&gt;So theoretically we make ~$4,300 by being smart. &amp;nbsp;&quot;Self, Great Day!&quot;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;PROBLEM: &amp;nbsp;The argument forgot about the monthly payment. &amp;nbsp;It needs to come from somewhere. &amp;nbsp;Here&#39;s the breakdown:&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Assuming no other income, we must make the monthly payment from our investment. &amp;nbsp;The payment is $377.42/month.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;The total cost of the loan is the same, but the total value of the investment takes a hit, as the principle decreases (and with it the interest amount earned) each month.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;If we do the math, after making the final payment, we are left with $512.74 in our account.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Not too bad still. &amp;nbsp;We make 500 bucks. &amp;nbsp;&quot;Self, Not-too-shabby day!&quot;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;I decided to explore the case where we have a monthly income. &amp;nbsp;Let&#39;s say we have a monthly income surplus of exactly $377.42/month, allowing us to make the monthly payment without affecting our investment. &amp;nbsp;Sounds great! &amp;nbsp;We pay a total of&amp;nbsp;$22,645.48 and have $26,977.00 in our investment. &amp;nbsp;We make ~$4,300!&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;ALTERNATIVE: &amp;nbsp;What if we paid cash, and decided to invest that $377.42/month instead. &amp;nbsp;So we would empty our investment by paying cash, and instead of paying a monthly payment to the bank, we would use it to replenish our investment. &amp;nbsp;So at the end of 5 years:&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Total paid for car: &amp;nbsp;$20,000.00&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Total in investment: $26,464.27&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Total gain: &amp;nbsp;$6,464.27 &amp;nbsp;&quot;Self, &amp;nbsp;Great day!!!!!!!!!&quot;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;So in conclusion, taking the loan and investing the cash appears to not be such a great deal after all. &amp;nbsp;It only seems to make sense if you are &amp;nbsp;(1) expecting no additional income during the loan and (2) guaranteed a high enough interest rate on your investment. &amp;nbsp;Even then it&#39;s only a difference of $500. &amp;nbsp;Not sure if that&#39;s enough to offset the risk of something going wrong. &amp;nbsp;If you expect to have enough income to make the monthly payments from your surplus, then it is much better to pay in cash upfront and invest the monthly payment amount. &amp;nbsp;It requires diligence, but clearly pays off.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Did I miss anything? &amp;nbsp;The assumptions I made may not be very realistic, but I think they are generous enough to show a favorable, yet possible scenario. &amp;nbsp;If things were more generous (like an interest rate of 10% on the investment) then perhaps the numbers would change.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;Thoughts? &amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;</description><link>http://www.undiscoveredfeatures.com/2011/03/finance-or-pay-cash.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>3</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-6238795972457181282</guid><pubDate>Wed, 16 Feb 2011 07:25:00 +0000</pubDate><atom:updated>2011-02-15T23:25:53.162-08:00</atom:updated><title>HD antenna</title><description>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Building an HD antenna has been on my Todo list for a while. &amp;nbsp;Apparently there are a bunch of HD channels freely available for anyone with an HD tuner. &amp;nbsp;I had always planned on following &lt;a href=&quot;http://blog.makezine.com/archive/2009/01/maker-workshop-dtv-antenna-steadyca.html&quot;&gt;this guide&lt;/a&gt;,&amp;nbsp;but today I came across &lt;a href=&quot;http://blamcast.net/articles/how-to-make-an-hdtv-antenna&quot;&gt;this blog post&lt;/a&gt;. &amp;nbsp; The guy made an antenna out of some wire and a paper towel roll! &amp;nbsp;&quot;I&#39;ve gotta try this&quot; was my response. &amp;nbsp;30 minutes later (It took some adjusting to get right), I had 16 channels, 3 (NBC, ABC, and CBS) were in HD. &amp;nbsp;Crystal clear HD. &amp;nbsp;Much clearer than the cable that comes with the apartment. &amp;nbsp;I also get Universal Sport, which I&#39;ve now discovered carries exclusively skiing during the wintertime. &amp;nbsp;All for free!&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Here&#39;s my paper towel roll by our window.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-AHRXS7Q051Y/TVt4njjJkGI/AAAAAAAAAB0/dn4b0bbT2GA/s1600/CIMG0010.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;320&quot; src=&quot;http://3.bp.blogspot.com/-AHRXS7Q051Y/TVt4njjJkGI/AAAAAAAAAB0/dn4b0bbT2GA/s320/CIMG0010.jpg&quot; width=&quot;239&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;The original poster just plugged his cable directly into the TV (look at his post... it&#39;s kinda funny). &amp;nbsp;I did that originally, but found it to be a little too finicky. &amp;nbsp;So I used some alligator clips to connect my wire to a coax cable that I plugged into the TV.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-u4ohKz-fp7E/TVt4ouFatDI/AAAAAAAAAB4/biyEPXkOPzQ/s1600/CIMG0011.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;239&quot; src=&quot;http://1.bp.blogspot.com/-u4ohKz-fp7E/TVt4ouFatDI/AAAAAAAAAB4/biyEPXkOPzQ/s320/CIMG0011.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-P69g4ckeW1c/TVt4pDCuDFI/AAAAAAAAAB8/V4urA80K_Ck/s1600/CIMG0012.jpg&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;239&quot; src=&quot;http://3.bp.blogspot.com/-P69g4ckeW1c/TVt4pDCuDFI/AAAAAAAAAB8/V4urA80K_Ck/s320/CIMG0012.jpg&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I&#39;m amazed at how well this works. &amp;nbsp;Above all I&#39;m amazed that free over the air channels are higher quality than non digital cable. &amp;nbsp;Since we get NBC (translation: &amp;nbsp;The Office, Community, Parks and Recreation, and 30 Rock) &amp;nbsp;I doubt I&#39;ll be plugging our cable connection back in anytime soon. &amp;nbsp;I will probably build the nicer hanger version, as the cardboard tube needs to be set up &quot;just right&quot; for it to work, but I&#39;m impressed nonetheless.</description><link>http://www.undiscoveredfeatures.com/2011/02/hd-antenna.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-AHRXS7Q051Y/TVt4njjJkGI/AAAAAAAAAB0/dn4b0bbT2GA/s72-c/CIMG0010.jpg" height="72" width="72"/><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-496468762794911339</guid><pubDate>Sun, 23 Jan 2011 17:59:00 +0000</pubDate><atom:updated>2011-01-23T09:59:26.576-08:00</atom:updated><title>Take advantage of 802.11n</title><description>So I just bought a Macbook Air 11&quot;. &amp;nbsp;It&#39;s a fantastic machine, I would recommend it to anyone with a budget for one. &amp;nbsp;I got the base version, which only has a 64GB SSD. &amp;nbsp;I find myself transferring files to and from the device and my old laptop quite frequently. &amp;nbsp;Transferring a whole season of Dr. Who, for example, &amp;nbsp;is ~10GB, and takes a while over the 802.11g network we have set up. &amp;nbsp;Theoretically I could use a crossover cable and transfer at gigabit speeds, but the Macbook Air doesn&#39;t have a LAN port. &amp;nbsp;Both machines have 802.11n built in, but I don&#39;t feel a need to buy an N router. &amp;nbsp;So I put both machines in ad-hoc mode, and transferred the files with around 10x speedup. &amp;nbsp;I found it to be extremely useful.&lt;br /&gt;&lt;br /&gt;Here&#39;s a tutorial explaining how to create an ad-hoc network.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;object width=&quot;320&quot; height=&quot;266&quot; class=&quot;BLOGGER-youtube-video&quot; classid=&quot;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&quot; codebase=&quot;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&quot; data-thumbnail-src=&quot;http://0.gvt0.com/vi/iyXp4IzhvTg/0.jpg&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/iyXp4IzhvTg&amp;fs=1&amp;source=uds&quot; /&gt;&lt;param name=&quot;bgcolor&quot; value=&quot;#FFFFFF&quot; /&gt;&lt;embed width=&quot;320&quot; height=&quot;266&quot; src=&quot;http://www.youtube.com/v/iyXp4IzhvTg&amp;fs=1&amp;source=uds&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Good luck.</description><link>http://www.undiscoveredfeatures.com/2011/01/take-advantage-of-80211n.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-4037260384305204579</guid><pubDate>Wed, 05 Jan 2011 19:34:00 +0000</pubDate><atom:updated>2011-01-05T11:34:30.991-08:00</atom:updated><title>Apple Computers resale value</title><description>My Macbook pro has recently been the recipient of water damage.&amp;nbsp; I want to hold out until the MBP line gets a refresh before replacing my machine.&amp;nbsp; I&#39;m not sure I can survive without a laptop until then, so I&#39;ve been looking at a few options:&lt;br /&gt;&lt;br /&gt;1)&amp;nbsp; Just deal with it.&amp;nbsp; I&#39;ve got a desktop machine (running linux) and I&#39;ve got OS X installed in Virtualbox if I have to do some iOS development.&lt;br /&gt;2)&amp;nbsp; Just get a Macbook Pro.&amp;nbsp; It&#39;s a great machine and will do everything I need to do.&lt;br /&gt;3)&amp;nbsp; Buy a new laptop now and sell it when the MBP line gets refreshed.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Number 3 was intriguing to me.&amp;nbsp; I could have a laptop now, but still get the new MBP line.&amp;nbsp; I started exploring the resale value of used apple laptops.&amp;nbsp; I looked on ebay, looking only at completed listings.&amp;nbsp; I looked at 4 different apple products, hoping to see which retains it&#39;s value the best.&amp;nbsp; I took ~10 samples of each model, (among the 10 were varying configurations, which I took into account for the purchase price).&amp;nbsp; These were all in mint condition still under the manufacturers warranty.&lt;br /&gt;&lt;br /&gt;Results:&lt;br /&gt;&lt;br /&gt;White Macbooks sold for an average of 73% of the original cost. &lt;br /&gt;13&quot; Macbook Pros sold for an average of 78% of the original cost.&lt;br /&gt;Ipads sold for an average of 88% of the original cost.&lt;br /&gt;11&quot; Macbook Airs sold for an average of 87% of the original cost.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;First, even 73% isn&#39;t terrible for a used laptop, although the White Macbooks were the most inconsistent, so the average may be misleading.&lt;br /&gt;&lt;br /&gt;Second, I was impressed by the 88% and 87% of the iPad and the Macbook Air.&amp;nbsp; I guess without any alternatives to these two machines, prices stay pretty rigid.&lt;br /&gt;&lt;br /&gt;I haven&#39;t made any purchases yet, but I think I&#39;m going to purchase an 11&quot; macbook air.&amp;nbsp; Why 11&quot; instead of 13&quot;?&amp;nbsp; I&#39;m guessing that when the new MBP line comes around, the 13&quot; macbook air will be competing with the MBP 13&quot;, causing the resale price to fall due to decreased demand and increased supply.&amp;nbsp; Just speculation though.&amp;nbsp; The 11&quot; is unique enough to be pretty stable in my oppinion.&lt;br /&gt;&lt;br /&gt;Just thought it was an interesting observation.&amp;nbsp; Thoughts?</description><link>http://www.undiscoveredfeatures.com/2011/01/apple-computers-resale-value.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>1</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-2242361303279624762</guid><pubDate>Tue, 21 Dec 2010 08:34:00 +0000</pubDate><atom:updated>2010-12-21T00:34:24.152-08:00</atom:updated><title>Wake up to music</title><description>My friend and I were discussing Social Media marketing, and how buzzword laden it has become.  I&#39;m personally of the &quot;Field of Dreams&quot; opinion.  If you build it they will come.  Granted, I&#39;m wrong, but I enjoy building it much more than I enjoy marketing it, especially when the marketing is dry and boring.  SEO, Twitter, Facebook and other online marketing seems too simple to be interesting.  Everything I&#39;ve read on it is generally just being meticulous about keyword usage and diligent about consistency.  Not quite my cup of tea.  &lt;br /&gt;&lt;br /&gt;So my friend and I decided, in classic Seinfeld style, to start a blog about &quot;Nothing!&quot;.  We wanted to see if all this online marketing really is as simple as it seems.  So we started a blog, bought 15 articles from textbroker.com , and started posting them.  We&#39;ve create a Facebook page and a twitter account, and are currently working on a few other things.&lt;br /&gt;&lt;br /&gt;The blog is called &lt;a href=&quot;http://wakeuptomusic.com/&quot;&gt;Wake Up To Music&lt;/a&gt;. &amp;nbsp;A few times a week, we post a song along with a paragraph on why it&#39;s a great &amp;nbsp;song to wake up to. &amp;nbsp;We hope people will see it and think, &quot;Hey! &amp;nbsp;That is a great song. &amp;nbsp;I don&#39;t own it. &amp;nbsp;I&#39;m going to click this link to Amazon/iTunes(coming soon) and buy it.&quot; &amp;nbsp;We get a cut through their affiliate program and hopefully earn enough to cover costs (~$2/article).&lt;br /&gt;&lt;br /&gt;This is going to be an interesting little experiment. &amp;nbsp;The stakes are pretty low here, so we want to try some very clever marketing techniques. &amp;nbsp;Simple things like raffling off iTunes gift cards on Twitter. &amp;nbsp;Or building an iPhone alarm app that will wake you up to the iTunes preview of the latest posted song.&lt;br /&gt;&lt;br /&gt;This may flop. &amp;nbsp;Or it may work out and pay for lunch a couple of times a week. &amp;nbsp;We&#39;ll see.</description><link>http://www.undiscoveredfeatures.com/2010/12/wake-up-to-music.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-7171228048177391017</guid><pubDate>Sat, 04 Dec 2010 10:21:00 +0000</pubDate><atom:updated>2010-12-05T18:12:30.723-08:00</atom:updated><title>10,000 ints in 1 page of memory (4KB)</title><description>So I was talking to a friend of mine about some interesting job interview questions. &amp;nbsp;He mentioned a favorite of his:&lt;br /&gt;&lt;br /&gt;You are writing an application which continuously receives integer values between 1 and 10,000. &amp;nbsp;Your job is, once the input stream ceases, to output each integer received in ascending order. &amp;nbsp;You don&#39;t know how many there will be, and you can only use a page (4KB) of memory. &amp;nbsp;What do you do?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;So there is a pretty straightforward and simple method using the whole page as a giant bitmap.&lt;br /&gt;&lt;br /&gt;I came up with a different solution. &amp;nbsp;This is still a little flawed, but the idea is pretty solid.  Also, the code is pretty ugly...  It was a proof of concept and so I just hacked away.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;#define ARRAYSIZE 2000&lt;br /&gt;#define OVERLAYCOUNT 32&lt;br /&gt;&lt;br /&gt;// So we have them all stored in an array of short ints with 2000 items.&lt;br /&gt;short x[ARRAYSIZE];&lt;br /&gt;void addToX(int z);&lt;br /&gt;&lt;br /&gt;// Here&#39;s the data we are going to be adding in. &amp;nbsp;&lt;br /&gt;// Can be changed around, grown, shrunk&lt;br /&gt;void populateX(){&lt;br /&gt;&amp;nbsp;&amp;nbsp;int values[20] = {&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;2,3454,6666,1666,1234,&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;1532,532,1235,6543,3434,&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;2432,555,232,1555,6432,&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;6789,8767,6766,8766,12&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;};&lt;br /&gt;&amp;nbsp;&amp;nbsp;int i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;for(i = 0; i &amp;lt; 20; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;addToX(values[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// When we receive a value, we xor it into it&#39;s bucket.&lt;br /&gt;void addToX(int z){&lt;br /&gt;&amp;nbsp;&amp;nbsp;x[z%ARRAYSIZE] ^=z;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;int main(){&lt;br /&gt;&amp;nbsp;&amp;nbsp;populateX();&lt;br /&gt;&amp;nbsp;&amp;nbsp;// each slot will be a xor of up to 5 numbers of &lt;br /&gt;&amp;nbsp;&amp;nbsp;// the form i + 2000j&lt;br /&gt;&amp;nbsp;&amp;nbsp;short i,j,k;&lt;br /&gt;&amp;nbsp;&amp;nbsp;int imax = 10000/ARRAYSIZE;&lt;br /&gt;&amp;nbsp;&amp;nbsp;for(i = 0; i &amp;lt; imax ; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;for(j = 0; j &amp;lt; ARRAYSIZE; j++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;short valueToCheck = x[j];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;int a;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;int l;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;// walk through all 32 combinations of 5 xors, &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;//figure out which one it is&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;// this is a bit encoding of which numbers &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;// could be stored there.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;for(l = 0; l &amp;lt; OVERLAYCOUNT; l++){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;printf(&quot;\tTrying %d\n&quot;,l);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;short guessValues = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// see if the least bit is set. &amp;nbsp;If so, &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//xor the new value calculated with&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// our guess. &amp;nbsp;increment a ( the multiplier)&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// and shift b to get access to the next bit;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;a = 0; &amp;nbsp;//&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;int b = l; // make a copy we can tweak&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;do{&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if(b &amp;amp; 1){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;short newValue =j + ARRAYSIZE*a;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;guessValues = guessValues ^ newValue;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;a++; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}while(b&amp;gt;&amp;gt;=1);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// if the generated value from this version of&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// the bitmapping is equal to the value,&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// we know which 5 numbers were entered.&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if(guessValues == valueToCheck){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;break;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;int n = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;// In order to preserve ascending order, only printout &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;//the i&#39;th lowest bit, if set&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;l&amp;gt;&amp;gt;=i;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;if(l &amp;amp; 1){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;printf(&quot;%d\n&quot;,j + ARRAYSIZE*i);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Output (newlines added for clarity):&lt;br /&gt;&lt;br /&gt;2&lt;br /&gt;12&lt;br /&gt;232&lt;br /&gt;532&lt;br /&gt;555&lt;br /&gt;&lt;br /&gt;1234&lt;br /&gt;1235&lt;br /&gt;1532&lt;br /&gt;1555&lt;br /&gt;1666&lt;br /&gt;&lt;br /&gt;2432&lt;br /&gt;3434&lt;br /&gt;3454&lt;br /&gt;6432&lt;br /&gt;6543&lt;br /&gt;&lt;br /&gt;6666&lt;br /&gt;6766&lt;br /&gt;6789&lt;br /&gt;8766&lt;br /&gt;8767&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Other Thoughts:&lt;br /&gt;Here I used the full 4KB to hold 2000 short ints.  The bitmapping method uses 1250 bytes.  Theoretically I could tighten this down to ~600 bytes by setting the overlay count to 2^32 and the array size to be 300 (at 2 bytes for a short int);&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Known issues:&lt;br /&gt;&lt;br /&gt;It doesn&#39;t handle duplicates.  &lt;br /&gt;&lt;br /&gt;It is a little buggy, due to certain scenarios where a^b^c == e^d^f.  This could probably be fixed by an additional check before printout.  The check could be guessValue^b^c == a, as a^b^c^b^c == a and e^d^f^b^c !- a.&lt;br /&gt;&lt;br /&gt;Interesting solution to say the least.&lt;br /&gt;&lt;br /&gt;Thoughts?</description><link>http://www.undiscoveredfeatures.com/2010/12/10000-ints-in-1-page-of-memory-4kb.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>3</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-7470869471338921499</guid><pubDate>Sat, 25 Sep 2010 14:40:00 +0000</pubDate><atom:updated>2010-09-25T07:40:45.862-07:00</atom:updated><title>Park in the Shade - IPhone</title><description>So I finally got around to building an iPhone version of my Park in the Shade app. &amp;nbsp;You can check it out&amp;nbsp;&lt;a href=&quot;itms://itunes.apple.com/us/app/park-in-the-shade/id391296993?mt=8&quot;&gt;In the App Store&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;It works, (or at least... should work... we&#39;ll see). &amp;nbsp;I need to do an overhaul of the graphics. &amp;nbsp;I am not a graphic designer. &amp;nbsp;If anyone want to redesign it feel free to let me know.&lt;br /&gt;&lt;br /&gt;Enjoy!</description><link>http://www.undiscoveredfeatures.com/2010/09/park-in-shade-iphone.html</link><author>noreply@blogger.com (Peter Hamilton)</author><thr:total>0</thr:total></item><item><guid isPermaLink="false">tag:blogger.com,1999:blog-4980628797186804242.post-580087758025872116</guid><pubDate>Sat, 04 Sep 2010 04:18:00 +0000</pubDate><atom:updated>2010-10-05T08:16:24.401-07:00</atom:updated><title>Fermat&#39;s Last Theorem</title><description>I just finished a great book on Fermat&#39;s Last Theorem.  &lt;br /&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/0385493622?ie=UTF8&amp;amp;tag=undiscover-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0385493622&quot;&gt;Fermat&#39;s Enigma&lt;/a&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;http://www.assoc-amazon.com/e/ir?t=undiscover-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=0385493622&quot; style=&quot;border: none !important; margin: 0px !important;&quot; width=&quot;1&quot; /&gt;&lt;br /&gt;It was very well written and I enjoyed it because it explored each great mathematician from Pythagoras up through Andrew Wiles (who solved the problem).  I would recommend the book to anyone interested in math, especially those who enjoy number theory.&lt;br /&gt;&lt;br /&gt;For those of you who don&#39;t know much about number theory, it&#39;s a branch of mathematics dealing with the property of numbers.  Just like how chemists examine oxygen, carbon, etc. to see how they interact with each other, number theorists examine how numbers interact.  For example, there are certain numbers called perfect numbers.  6 is one of them.  The factors of 6 (1,2,3) add up to 6.  Numbers have properties such as being prime, perfect squares, odd, even.  These don&#39;t seem to be assigned at random.  There is a pattern to many of these, and number theorists try to discover these patterns.  The book is about one particular relation, and how it took over 300 years to prove.&lt;br /&gt;&lt;br /&gt;In reading it, I came up with a few theorems and proofs that I found interesting.  While not technically difficult, they caught my attention.&lt;br /&gt;&lt;br /&gt;In reading it, I came up with a few theorems and proofs that I found interesting.  While not technically difficult, they caught my attention.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/_Ri0vC02reOk/TKtBGwYXz-I/AAAAAAAAAA4/BQ3pZZFEYK0/s1600/equation+1.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/_Ri0vC02reOk/TKtBGwYXz-I/AAAAAAAAAA4/BQ3pZZFEYK0/s1600/equation+1.gif&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This is most clearly demonstrated with&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/_Ri0vC02reOk/TKtBHe0ifnI/AAAAAAAAAA8/fouZgRX1uI0/s1600/equation+2.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://4.bp.blogspot.com/_Ri0vC02reOk/TKtBHe0ifnI/AAAAAAAAAA8/fouZgRX1uI0/s1600/equation+2.gif&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/_Ri0vC02reOk/TKtA2X_8uBI/AAAAAAAAAA0/iSdfBUakrCs/s1600/equation+4.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/_Ri0vC02reOk/TKtA2X_8uBI/AAAAAAAAAA0/iSdfBUakrCs/s1600/equation+4.gif&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;But is in fact true for all values of a and x.  The proof by induction is quite simple.&lt;br /&gt;&lt;br /&gt;The other problem I&#39;ve been exploring has less to do with equations and is more of a simple puzzle.  It&#39;s called &quot;The Broken Weight Problem&quot;.  The idea is that using a standard balance, what is the minimum number of weights needed to weigh anything of whole values between 1 and 40.&lt;br /&gt;&lt;br /&gt;The initial thought is that you need 6 weights, values 1,2,4,8,16, and 32.  This is based on the assumption that you can only add weights to one side of the balance.&lt;br /&gt;&lt;br /&gt;The actual solution is that you need 4 weights, values 1, 3, 9, and 27.  This only works if you add these weights to both sides to get a balanced measurement.  For example, to measure an orange of weight 2 you put the orange and a 1 lb weight  on one side and balance it with a 3 lb weight.&lt;br /&gt;&lt;br /&gt;The first solution is the powers of 2, the second is the powers of 3.  So I started thinking about a scenario in which the solution would be the powers of 4.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/_Ri0vC02reOk/TIE0cyfn8BI/AAAAAAAAAAk/xdojQsM_wIU/s1600/balance3.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://2.bp.blogspot.com/_Ri0vC02reOk/TIE0cyfn8BI/AAAAAAAAAAk/xdojQsM_wIU/s320/balance3.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Consider a balance like the one above. &amp;nbsp; The object to be weighed is placed in B. &amp;nbsp;The weights can be placed in A, B, or C. &amp;nbsp;The weights in C would have a factor of 2 applied due to leverage. &amp;nbsp;In this scenario, the only weights needed would be 1, 4, 16, 64, etc. &amp;nbsp;(The powers of 4). &amp;nbsp; So to get a number like 35, one could put 16 and in C and &amp;nbsp;4 in A, totaling 36 on the left. &amp;nbsp;Put the object being weighed and the 1 weight in B, balancing the scale.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://1.bp.blogspot.com/_Ri0vC02reOk/TIHEQH79t_I/AAAAAAAAAAs/7w4Vpy0uDhM/s1600/balance4.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://1.bp.blogspot.com/_Ri0vC02reOk/TIHEQH79t_I/AAAAAAAAAAs/7w4Vpy0uDhM/s320/balance4.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;In this case, D would be a counter balance. &amp;nbsp;The weights in D would also have a factor of 2. &amp;nbsp;In this scenario, the weights needed would be 1, 5, 25, 125, etc. (The powers of 5).&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;I don&#39;t have a proof for this, but I suspect this pattern continues as you add arms to the balance. &amp;nbsp;The next set would have a spot for weights on the left side that would be a factor of 3 and would result in the powers of 6 being the minimum set of weights. &amp;nbsp;The following set would add an arm on the right side with a factor of three. &amp;nbsp;This would result in the powers of 7 being the minimum set of weights.&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Why is this important at all? &amp;nbsp;It&#39;s not really. &amp;nbsp;But I found it to be an interesting pattern. &amp;nbsp;There are probably some applications in number theory dealing with various bases, and I may try to write it up as some equations someday and try to prove it. &amp;nbsp;But this is enough for now.&lt;/div&gt;</description><link>http://www.undiscoveredfeatures.com/2010/09/fermats-last-theorem.html</link><author>noreply@blogger.com (Peter Hamilton)</author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://1.bp.blogspot.com/_Ri0vC02reOk/TKtBGwYXz-I/AAAAAAAAAA4/BQ3pZZFEYK0/s72-c/equation+1.gif" height="72" width="72"/><thr:total>0</thr:total></item></channel></rss>
