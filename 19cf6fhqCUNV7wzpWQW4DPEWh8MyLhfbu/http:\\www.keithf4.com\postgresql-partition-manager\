http://www.keithf4.com/postgresql-partition-manager/
HTTP/1.0 200 OK
Date: Tue, 22 Jul 2014 15:37:48 GMT
Server: Apache/2.2.22 (Debian)
X-Powered-By: PHP/5.4.4-14+deb7u12
X-Pingback: http://www.keithf4.com/xmlrpc.php
Link: <http://www.keithf4.com/?p=255>; rel=shortlink
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 9503
Connection: close
Content-Type: text/html; charset=UTF-8

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head profile="http://gmpg.org/xfn/11">
<title>   PostgreSQL Partition Manager at Keith&#039;s Ramblings&#8230;</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="description" content="WARNING: If accidentally read, induce vomiting" />
<meta name="generator" content="WordPress 3.9.1" /> <!-- leave this for stats please -->
<link href="http://www.keithf4.com/wp-content/themes/journalist/style.css" rel="stylesheet" type="text/css" media="screen" />
<link rel="alternate" type="application/rss+xml" title="Keith&#039;s Ramblings&#8230; RSS Feed" href="http://www.keithf4.com/feed/" />
<link rel="shortcut icon" type="image/x-png" href="http://www.keithf4.com/wp-content/themes/journalist/favicon.png" />
<link rel="pingback" href="http://www.keithf4.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Keith&#039;s Ramblings... &raquo; PostgreSQL Partition Manager Comments Feed" href="http://www.keithf4.com/postgresql-partition-manager/feed/" />
<link rel='stylesheet' id='crayon-css'  href='http://www.keithf4.com/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.6.5' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-classic-css'  href='http://www.keithf4.com/wp-content/plugins/crayon-syntax-highlighter/themes/classic/classic.css?ver=2.6.5' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.keithf4.com/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.6.5' type='text/css' media='all' />
<script type='text/javascript' src='http://www.keithf4.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://www.keithf4.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var quicktagsL10n = {"closeAllOpenTags":"Close all open tags","closeTags":"close tags","enterURL":"Enter the URL","enterImageURL":"Enter the URL of the image","enterImageDescription":"Enter a description of the image","fullscreen":"fullscreen","toggleFullscreen":"Toggle fullscreen mode","textdirection":"text direction","toggleTextdirection":"Toggle Editor Text Direction"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.keithf4.com/wp-includes/js/quicktags.min.js?ver=3.9.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.6.5","is_admin":"0","ajaxurl":"http:\/\/www.keithf4.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
var CrayonTagEditorSettings = {"home_url":"http:\/\/www.keithf4.com","css":"crayon-te","css_selected":"crayon-selected","code_css":"#crayon-code","url_css":"#crayon-url","url_info_css":"#crayon-te-url-info","lang_css":"#crayon-lang","title_css":"#crayon-title","mark_css":"#crayon-mark","range_css":"#crayon-range","inline_css":"crayon-inline","inline_hide_css":"crayon-hide-inline","inline_hide_only_css":"crayon-hide-inline-only","hl_css":"#crayon-highlight","switch_html":"#content-html","switch_tmce":"#content-tmce","tinymce_button_generic":".mce-btn","tinymce_button":"a.mce_crayon_tinymce,.mce-i-crayon_tinymce","tinymce_button_unique":"mce_crayon_tinymce","tinymce_highlight":"mce-active","submit_css":"#crayon-te-ok","cancel_css":"#crayon-te-cancel","content_css":"#crayon-te-content","dialog_title_css":"#crayon-te-title","submit_wrapper_css":"#crayon-te-submit-wrapper","data_value":"data-value","attr_sep":":","css_sep":"_","fallback_lang":"default","dialog_title_add":"Add Crayon Code","dialog_title_edit":"Edit Crayon Code","submit_add":"Add","submit_edit":"Save","bar":"#crayon-te-bar","bar_content":"#crayon-te-bar-content","extensions":{"scpt":"applescript","applescript":"applescript","swf":"as","fla":"as","cs":"c#","h":"c++","hh":"c++","hpp":"c++","hxx":"c++","h++":"c++","cc":"c++","cpp":"c++","cxx":"c++","c++":"c++","pas":"delphi","java":"java","class":"java","jar":"java","mv":"miva","mvc":"miva","mvt":"miva","m":"objc","mm":"objc","pl":"perl","py":"python","pyw":"python","pyc":"python","pyo":"python","pyd":"python","rb":"ruby","rbx":"ruby","rhtml":"ruby","vbs":"vb"}};
var CrayonSyntaxSettings = {"version":"2.6.5","is_admin":"0","ajaxurl":"http:\/\/www.keithf4.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.keithf4.com/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.te.min.js?ver=2.6.5'></script>
<script type='text/javascript' src='http://www.keithf4.com/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.4.7.3'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.keithf4.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.keithf4.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Mimeo &#8211; Repulling Incremental Replication Data' href='http://www.keithf4.com/mimeo-repulling-incremental-replication-data/' />
<link rel='next' title='Table Partitioning &amp; Long Names' href='http://www.keithf4.com/table-partitioning-long-names/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://www.keithf4.com/postgresql-partition-manager/' />
<link rel='shortlink' href='http://www.keithf4.com/?p=255' />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<style type="text/css">.broken_link, a.broken_link {
	text-decoration: line-through;
}</style><!-- Google Analytics Tracking by Google Analyticator 6.4.7.3: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
                var analyticsFileTypes = [''];
                            var analyticsSnippet = 'enabled';
                var analyticsEventTracking = 'enabled';
            </script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-28065688-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body>
<div id="container" class="group">

<h1><a href="http://www.keithf4.com/">Keith&#039;s Ramblings&#8230;</a></h1>
<div id="bubble"><p>WARNING: If accidentally read, induce vomiting</p></div> <!-- erase this line if you want to turn the bubble off -->

<div id="content" class="group">

<h2 id="post-255"><a href="http://www.keithf4.com/postgresql-partition-manager/" rel="bookmark">PostgreSQL Partition Manager</a></h2>
<p class="comments"><a href="http://www.keithf4.com/postgresql-partition-manager/#comments"><span class="dsq-postid" rel="255 http://www.keithf4.com/?p=255">without comments</span></a></p>

<div class="main">
	<p>I&#8217;ve finally gotten a lot of the planned features implemented for another extension, so it&#8217;s about time I wrote a blog post on it. One of the bigger features missing from PostgreSQL that some other database systems have is table partition management. That&#8217;s not to say there isn&#8217;t <a href="http://www.postgresql.org/docs/9.2/static/ddl-partitioning.html" target="_blank">a way to do it</a>, or that it isn&#8217;t <a href="http://wiki.postgresql.org/wiki/Table_partitioning" target="_blank">being worked on</a>, but at the current time it&#8217;s not the easiest thing to get going from scratch.</p>
<p>The most common method of partitioning that I&#8217;ve seen is either time or serial/id based. There are of course other partitioning methods used, such as alphabetically or via UUID. But those methods are usually a once-and-done setup and don&#8217;t require as much on-going maintenance. Time &amp; serial based partitioning require new tables and/or functions to be created indefinitely and it can be quite a challenge to set it up and handle all edge cases consistently.Â  So that is what my <a href="https://github.com/keithf4/pg_partman" target="_blank">PG Partition Manager</a> extension does. It currently only handles inserts to the parent table, but I&#8217;ll be trying to get update support in the future. It automates several processes involved in partitioning:</p>
<ul>
<li>Parent &amp; child table creation</li>
<li>Trigger function creation and updating</li>
<li>Dropping unneeded partitions</li>
<li>Moving existing data into partitions</li>
<li>Undoing partitioning and moving data back into the parent.</li>
</ul>
<p>I went with triggers vs rules for handling inserts on the parent. <a href="http://www.fuzzy.cz/en/articles/automatic-management-of-partitions-in-postgresql/" target="_blank">Another blog post</a> better explains the differences, so please read there if you&#8217;re more curious about them. Child tables are always pre-created before they are needed to handle the race condition with triggers and creating partitions on the fly.</p>
<h3>Static vs Dynamic</h3>
<p>The other major difference of methods for partitioning with triggers is whether you statically list each child table in the trigger function or use a dynamic function that determines which child table to insert to based on the data in the statement. The first, static method leads to better performance since the query plan in the function can be cached. However, the more child tables that are added to the conditional statement, the slower performance becomes, so this method is usually limited to partition sets where only recent data is inserted. The dynamic method uses an EXECUTE statement in the function to designate which child table to use on the fly, so it cannot be cached. But, it is capable of handling inserts to any child table in the set at any time. This extension supports both of these methods.</p>
<h3>Time &amp; Serial Partitioning</h3>
<p>For time-based partitioning, the following time periods are supported: yearly, quarterly, monthly, weekly, daily, hourly, half-hourly, quarter-hourly. If anyone needs decade, century, or a smaller regular time interval I can probably get that added fairly easily. Just put in a request on github. Outside of that, dynamic or non-regular time periods are bit more challenging, so I don&#8217;t know if I&#8217;ll ever be doing that. The tables are pre-created using a cronjob to call a maintenance function. The number of child table to pre-create is configurable. That premake number also designates how many child tables the static partitioning method will handle, both forward and backward in time. So if you partition daily with a premake value of 4 (the default) on July 4th, it will handle inserting data from June 30th to July 8th.</p>
<p>Serial/id-based partitioning is done using a fixed integer interval that each child table will contain based on an integer column&#8217;s value (typically the primary key). Pre-creation is not managed via cron since it&#8217;s not predictable how quickly or slowly a partition will fill up. At the cost of a slight performance hit vs the time-based method, the current partition column value is checked at each insert and when it reaches 50% of maximum, the next partition is made. Partitions are still pre-made in the same manner, though, so the next partition being created is typically several intervals ahead to avoid race conditions of the next child table not existing for an insert.</p>
<p>For both time &amp; serial based partitioning, if for some reason the required child doesn&#8217;t exist, it is inserted into the parent. A check_parent() function is included so you can monitor all partition sets managed by the extension for data getting put into the parent table.</p>
<p>To make configuring indexes, constraints, defaults &amp; permissions easier, all of those table properties are inherited from the parent. Just set what you need on the parent, and all future partitions will obtain those properties. Due to performance issues, privileges are not retroactively added to all prior partitions if you change them on an existing partition set. But there is a function included to do that for you when your systems can handle it.</p>
<h3>Partitioning Existing Data</h3>
<p>Tables with existing data can also be partitioned with minimal impact to a production system. When you create a partition set, a brief, exclusive lock is taken on the given parent table to add the required trigger and child tables. Any new data inserted from then on is properly partitioned. All existing data is left in the new parent table and an included python script can move that data in batches, creating all child tables that are needed.</p>
<p>To give you an example of how well this works, I successfully partitioned a high-traffic, 74 million row table with zero noticeable interruption. It took about a 2-3 second lock on parent table which caused inserts to wait but they all successfully completed once new partitions &amp; triggers were in place. I then partitioned the existing data using a 1 hour interval to avoid large, long insert batches and the 5 second wait option to ease the load on the streaming slave a bit. This averaged 50,000 &#8211; 200,000 rows per batch and the slave never fell more than 100 seconds behind and quickly caught up once it was done. Here is the script command that did that:</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53ce854d26a59345579414" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea  class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
python partition_data.py -p "tracking.hits" -t time -c "host=localhost dbname=mydb" -i "1 hour" -w 5</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53ce854d26a59345579414-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53ce854d26a59345579414-1"><span class="crayon-e">python </span><span class="crayon-v">partition_data</span><span class="crayon-sy">.</span><span class="crayon-v">py</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-i">p</span><span class="crayon-h"> </span><span class="crayon-s">"tracking.hits"</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-i">t</span><span class="crayon-h"> </span><span class="crayon-v">time</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-s">"host=localhost dbname=mydb"</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-s">"1 hour"</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-i">w</span><span class="crayon-h"> </span><span class="crayon-cn">5</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p>There is also an included python script that can undo a partition set, moving all data from child tables back into the parent. This script can actually work on any inheritance table setup in postgres, not just ones managed by the extension.</p>
<h3>Retention</h3>
<p>One of the biggest advantages of partitioning is being able to remove unneeded data without expensive delete commands and/or table bloat. Using the extension&#8217;s retention configuration options, the same maintenance function that manages pre-making time-based partitions can also automatically drop partitions you no longer need. By default, tables are just uninherited from the parent and not actually dropped, but you can also have it drop just the indexes from the old child table to recover space, move the table to a different schema or actually drop the table. Moving the table to a new schema also allows the use of another included python script that can use pg_dump to extract the tables in that schema out along with a SHA-512 hash before actually dropping them from the database. This allows you to keep old data around without having it take up space in the database itself.</p>
<h3>Monitoring</h3>
<p>To provide monitoring of any issues with partition creation and and audit trail, my <a href="https://github.com/omniti-labs/pg_jobmon" target="_blank">pg_jobmon</a> extension works with pg_partman as well. It is optional and will automatically be used if it is available. The premake value was set to 4 by default because pg_jobmon&#8217;s default is to alert when a function fails to run 3 times in a row. That way it just works by default to raise an alert before the last partition is used up.</p>
<h3>Conclusion</h3>
<p>I&#8217;ve gotten a lot of positive feedback from people when I&#8217;ve given Lightning Talks at recent <a href="http://www.pgcon.org" target="_blank">PostgreSQL</a> <a href="http://postgresopen.org" target="_blank">conferences</a> about this extension. It&#8217;s also made common partitioning solutions for clients a lot easier to implement. Not having partitioning built into PostgreSQL still has its shortcomings, one of the biggest being primary/unique keys not being enforced across the entire partition set unless that column happens to be the one the partition constraints are based on. Or lack of constraint exclusion support outside of the partition column. But, along with update support, I&#8217;m working on some other options that won&#8217;t provide a perfect solution to these issues, but will hopefully make trying to manage them easier.</p>
</div>

<div class="meta group">
<div class="signature">
    <p>Written by Keith <span class="edit"></span></p>
    <p>July 8th, 2013 at 11:48 am</p>
</div>	
<div class="tags">
    <p>Posted in <a href="http://www.keithf4.com/category/postgresql-stuff/" title="View all posts in PostgreSQL" rel="category tag">PostgreSQL</a></p>
    <p>Tagged with <a href="http://www.keithf4.com/tag/extensions/" rel="tag">extensions</a>, <a href="http://www.keithf4.com/tag/partitioning/" rel="tag">partitioning</a>, <a href="http://www.keithf4.com/tag/pg_partman/" rel="tag">pg_partman</a>, <a href="http://www.keithf4.com/tag/postgresql/" rel="tag">postgresql</a></p></div>
</div>

<div class="navigation group">
    <div class="alignleft">&laquo; <a href="http://www.keithf4.com/mimeo-repulling-incremental-replication-data/" rel="prev">Mimeo &#8211; Repulling Incremental Replication Data</a></div>
    <div class="alignright"><a href="http://www.keithf4.com/table-partitioning-long-names/" rel="next">Table Partitioning &#038; Long Names</a> &raquo;</div>
</div>


<div id="disqus_thread">
    </div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://www.keithf4.com/postgresql-partition-manager/';
    var disqus_identifier = '255 http://www.keithf4.com/?p=255';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'keithf4';
    var disqus_title = "PostgreSQL Partition Manager";
    var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /* Add the ability to add javascript callbacks */
        
        /*
           All currently supported events:
            * preData â fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=255';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
        ],
        'trackback_url': "http:\/\/www.keithf4.com\/postgresql-partition-manager\/trackback\/"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/' + 'embed' + '.js' + '?pname=wordpress&pver=2.77';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>


</div> 

<div id="sidebar">
<h3>My Stuff</h3>		<ul>
			<li class="page_item page-item-24"><a href="http://www.keithf4.com/projects/">Projects</a></li>
<li class="page_item page-item-512"><a href="http://www.keithf4.com/publications/">Publications</a></li>
		</ul>
					<div class="textwidget"><script src="http://coinwidget.com/widget/coin.js"></script>
<script>
CoinWidgetCom.go({
        wallet_address: "19cf6fhqCUNV7wzpWQW4DPEWh8MyLhfbu"
        , currency: "bitcoin"
        , counter: "count"
        , alignment: "bl"
        , qrcode: true
        , auto_show: false
        , lbl_button: "Donate"
        , lbl_address: "My Bitcoin Address:"
        , lbl_count: "donations"
        , lbl_amount: "BTC"
});
</script>
<br><br>
<a href="http://steamcommunity.com/profiles/76561197984029286/wishlist/" target="_blank">Steam Wishlist</a></div>
		<form role="search" method="get" id="searchform" class="searchform" action="http://www.keithf4.com/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form>				<h3>Recent Posts</h3>		<ul>
					<li>
				<a href="http://www.keithf4.com/table-partitioning-and-foreign-keys/">Table Partitioning and Foreign Keys</a>
						</li>
					<li>
				<a href="http://www.keithf4.com/partitioning-with-custom-time-intervals/">Partitioning With Custom Time Intervals</a>
						</li>
					<li>
				<a href="http://www.keithf4.com/version-specific-postgresql-extension-features/">Version Specific PostgreSQL Extension Features</a>
						</li>
					<li>
				<a href="http://www.keithf4.com/managing-constraint-exclusion-in-table-partitioning/">Managing Constraint Exclusion in Table Partitioning</a>
						</li>
					<li>
				<a href="http://www.keithf4.com/monitoring_streaming_slave_lag/">Monitoring Streaming Slave Lag Effectively</a>
						</li>
				</ul>
		<h3>Tags</h3><div class="tagcloud"><a href='http://www.keithf4.com/tag/backup/' class='tag-link-22' title='1 topic' style='font-size: 8pt;'>backup</a>
<a href='http://www.keithf4.com/tag/circonus/' class='tag-link-11' title='1 topic' style='font-size: 8pt;'>circonus</a>
<a href='http://www.keithf4.com/tag/dst/' class='tag-link-16' title='1 topic' style='font-size: 8pt;'>dst</a>
<a href='http://www.keithf4.com/tag/extensions/' class='tag-link-25' title='17 topics' style='font-size: 19.586206896552pt;'>extensions</a>
<a href='http://www.keithf4.com/tag/fdw/' class='tag-link-18' title='2 topics' style='font-size: 10.172413793103pt;'>fdw</a>
<a href='http://www.keithf4.com/tag/full-text-search/' class='tag-link-6' title='1 topic' style='font-size: 8pt;'>full-text search</a>
<a href='http://www.keithf4.com/tag/logging/' class='tag-link-14' title='3 topics' style='font-size: 11.620689655172pt;'>logging</a>
<a href='http://www.keithf4.com/tag/mimeo/' class='tag-link-26' title='6 topics' style='font-size: 14.637931034483pt;'>mimeo</a>
<a href='http://www.keithf4.com/tag/minecraft/' class='tag-link-21' title='1 topic' style='font-size: 8pt;'>minecraft</a>
<a href='http://www.keithf4.com/tag/monitoring/' class='tag-link-9' title='5 topics' style='font-size: 13.793103448276pt;'>monitoring</a>
<a href='http://www.keithf4.com/tag/nagios/' class='tag-link-10' title='1 topic' style='font-size: 8pt;'>nagios</a>
<a href='http://www.keithf4.com/tag/oracle/' class='tag-link-17' title='2 topics' style='font-size: 10.172413793103pt;'>oracle</a>
<a href='http://www.keithf4.com/tag/partitioning/' class='tag-link-28' title='4 topics' style='font-size: 12.827586206897pt;'>partitioning</a>
<a href='http://www.keithf4.com/tag/pg_dump/' class='tag-link-13' title='2 topics' style='font-size: 10.172413793103pt;'>pg_dump</a>
<a href='http://www.keithf4.com/tag/pg_extractor/' class='tag-link-12' title='2 topics' style='font-size: 10.172413793103pt;'>pg_extractor</a>
<a href='http://www.keithf4.com/tag/pg_jobmon/' class='tag-link-8' title='5 topics' style='font-size: 13.793103448276pt;'>pg_jobmon</a>
<a href='http://www.keithf4.com/tag/pg_partman/' class='tag-link-29' title='6 topics' style='font-size: 14.637931034483pt;'>pg_partman</a>
<a href='http://www.keithf4.com/tag/pg_upgrade/' class='tag-link-15' title='1 topic' style='font-size: 8pt;'>pg_upgrade</a>
<a href='http://www.keithf4.com/tag/postgresql/' class='tag-link-3' title='28 topics' style='font-size: 22pt;'>postgresql</a>
<a href='http://www.keithf4.com/tag/replication/' class='tag-link-27' title='5 topics' style='font-size: 13.793103448276pt;'>replication</a>
<a href='http://www.keithf4.com/tag/schema/' class='tag-link-24' title='1 topic' style='font-size: 8pt;'>schema</a>
<a href='http://www.keithf4.com/tag/tips/' class='tag-link-4' title='8 topics' style='font-size: 15.844827586207pt;'>tips</a>
<a href='http://www.keithf4.com/tag/wuala/' class='tag-link-23' title='1 topic' style='font-size: 8pt;'>wuala</a></div>
<h3>Recent Comments</h3><ul id="recentcomments"><li class="recentcomments">arun desai on <a href="http://www.keithf4.com/table-partitioning-and-foreign-keys/#comment-914">Table Partitioning and Foreign Keys</a></li><li class="recentcomments">keithf4 on <a href="http://www.keithf4.com/table-partitioning-and-foreign-keys/#comment-913">Table Partitioning and Foreign Keys</a></li><li class="recentcomments">arun desai on <a href="http://www.keithf4.com/table-partitioning-and-foreign-keys/#comment-912">Table Partitioning and Foreign Keys</a></li><li class="recentcomments">keithf4 on <a href="http://www.keithf4.com/managing-constraint-exclusion-in-table-partitioning/#comment-911">Managing Constraint Exclusion in Table Partitioning</a></li><li class="recentcomments">arun desai on <a href="http://www.keithf4.com/managing-constraint-exclusion-in-table-partitioning/#comment-910">Managing Constraint Exclusion in Table Partitioning</a></li></ul><h3>About Me</h3>			<div class="textwidget">I'm a database administrator with <a href="http://www.omniti.com">OmniTI, Inc</a> and play way too many video games. You can find me lurking in #postgresql on <a href="http://freenode.net/">Freenode IRC</a>
or join me in <a href="https://secure.eveonline.com/trial/?invc=afd96c42-585c-4789-94ee-2677abcc9f33&action=buddy" target="_blank">Tranquility</a>.</div>
		<h3>Archives</h3>		<ul>
	<li><a href='http://www.keithf4.com/2014/05/'>May 2014</a></li>
	<li><a href='http://www.keithf4.com/2014/02/'>February 2014</a></li>
	<li><a href='http://www.keithf4.com/2014/01/'>January 2014</a></li>
	<li><a href='http://www.keithf4.com/2013/10/'>October 2013</a></li>
	<li><a href='http://www.keithf4.com/2013/09/'>September 2013</a></li>
	<li><a href='http://www.keithf4.com/2013/07/'>July 2013</a></li>
	<li><a href='http://www.keithf4.com/2013/04/'>April 2013</a></li>
	<li><a href='http://www.keithf4.com/2013/03/'>March 2013</a></li>
	<li><a href='http://www.keithf4.com/2013/02/'>February 2013</a></li>
	<li><a href='http://www.keithf4.com/2013/01/'>January 2013</a></li>
	<li><a href='http://www.keithf4.com/2012/12/'>December 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/11/'>November 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/10/'>October 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/07/'>July 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/06/'>June 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/04/'>April 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/03/'>March 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/02/'>February 2012</a></li>
	<li><a href='http://www.keithf4.com/2012/01/'>January 2012</a></li>
		</ul>


</div>

</div>

<div id="footer">
	<p>The Journalist template by <a href="http://lucianmarin.com/" rel="designer">Lucian E. Marin</a> &mdash; Built for <a href="http://wordpress.org/">WordPress</a></p>
</div>

</body>
</html>
