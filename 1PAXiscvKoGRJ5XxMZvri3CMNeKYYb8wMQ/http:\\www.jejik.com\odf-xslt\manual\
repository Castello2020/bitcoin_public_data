http://www.jejik.com/odf-xslt/manual/
HTTP/1.1 200 OK
Date: Fri, 11 Jul 2014 06:09:10 GMT
Server: Apache
X-Powered-By: PHP/5.4.4-14
Set-Cookie: lw_user_data=a%3A2%3A%7Bs%3A7%3A%22user_id%22%3Bi%3A1%3Bs%3A11%3A%22autologinid%22%3Bs%3A0%3A%22%22%3B%7D; expires=Sat, 11-Jul-2015 06:09:10 GMT; path=/
Set-Cookie: lw_user_sid=861b289a367693b2522809fa77379de7; path=/
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 7778
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<!--
			<rdf:RDF 
				xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
				xmlns:dc="http://purl.org/dc/elements/1.1/"
				xmlns:cc="http://web.resource.org/cc/">
				<cc:Work>
					<dc:creator>Stichting Lone Wolves</dc:creator>
					<dc:title>Lone Wolves - Web, game, and open source development</dc:title>
					<dc:description>A blog about web development and open source game programming, home of Hearts for GNOME</dc:description> 
					<dc:date>2014-07-11T08:09:10Z</dc:date>
					<cc:license rdf:resource="http://creativecommons.org/licenses/by-sa/2.5/" />
				</cc:Work>
				<cc:License>
					<cc:requires rdf:resource="http://web.resource.org/cc/Notice" />
					<cc:requires rdf:resource="http://web.resource.org/cc/Attribution" />
					<cc:requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
					<cc:permits rdf:resource="http://web.resource.org/cc/Reproduction" />
					<cc:permits rdf:resource="http://web.resource.org/cc/Distribution" />
					<cc:permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
				</cc:License>
			</rdf:RDF>
		-->
		<title>Lone Wolves - Web, game, and open source development</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
		<meta http-equiv="pragma" content="no-cache" />
		<meta http-equiv="cache-control" content="no-cache" />
		<meta name="keywords" content="lone, wolves, game, web, open source, gnome, hearts, development, linux" />
		<meta name="author" content="Sander Marechal"/>
		<meta name="description" content="A blog about web development and open source game programming, home of Hearts for GNOME" />
		<style type="text/css" media="screen">@import "/main.css";</style>
		<style type="text/css" media="screen">@import "/geshi.css";</style>
				<link rel="alternate" type="application/atom+xml" title="Lone Wolves Atom 1.0 (full)" href="/feeds/full/atom.xml" />
		<link rel="alternate" type="application/atom+xml" title="Lone Wolves Atom 1.0 (articles)" href="/feeds/articles/atom.xml" />
		<link rel="alternate" type="application/atom+xml" title="Lone Wolves Atom 1.0 (blurb)" href="/feeds/blurb/atom.xml" />
		<link rel="alternate" type="application/rss+xml" title="Lone Wolves RSS 2.0 (full)" href="/feeds/full/rss.xml" />
		<link rel="alternate" type="application/rss+xml" title="Lone Wolves RSS 2.0 (articles)" href="/feeds/articles/rss.xml" />
		<link rel="alternate" type="application/rss+xml" title="Lone Wolves RSS 2.0 (blurb)" href="/feeds/blurb/rss.xml" />
		<link rel="pingback" href="http://www.jejik.com/pingback" />
		<link href="http://www.jejik.com/" rel="home" />
		<!--[if IE]><style type="text/css" media="screen">@import "/ie.css";</style><![endif]-->
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	</head>
	<body>
				<div id="wrapper">
			<div id="header">
				<h1><a href="/" rel="home">Lone Wolves</a></h1>
				<h2>Web, game, and open source development</h2>
				<span id="skip_to_menu"><a href="#menu_start">Skip to menu</a></span>
			</div><div id="page">
	<div class="page">
		<h1><img src="/images/odf-xslt/odf-xslt-64.png" /> ODF-XSLT Manual</h1>
		
		<p>
			This manual will explain how to download and install the pp-odf-xslt package,
			how to create ODF-XSLT templates from within your favourite office applications
			and how to use the commandline tool to convert those templates to new ODF documents.
			At the end it will show you how you can use and extend the ODF-XSLT library inside
			your PHP applications. Developers who want to use ODF-XSLT in their applications
			will also want to read the <a href="/api/odf-xslt/">API Reference</a>.
		</p>
		
		<h2><a href="#0" id="0">0: Table of contents</a></h2>
		<ul class="toc">
			<li>
				<a href="#1">1: Installation instructions</a>
				<ul class="toc">
					<li><a href="#1_1">1.1: Requirements</a></li>
					<li><a href="#1_2">1.2: Installation</a></li>
				</ul>
			</li>
			<li>
				<a href="#2">2: Creating ODF-XSLT document templates</a>
				<ul class="toc">
					<li><a href="#2_1">2.1: Creating XSLT stylesheets directly</a></li>
					<li>
						<a href="#2_2">2.2: Marking up ODF documents</a>
						<ul class="toc">
							<li><a href="#2_2_1">2.2.1: ODF-XSLT template sytntax</a></li>
							<li><a href="#2_2_2">2.2.2: Variable substitution</a></li>
							<li><a href="#2_2_3">2.2.3: Table row repeat</a></li>
							<li><a href="#2_2_4">2.2.4: Table column repeat</a></li>
							<li><a href="#2_2_5">2.2.5: Image replacement</a></li>
						</ul>
					</li>
				</ul>
			</li>
			<li><a href="#3">3: Using the commandline tool</a></li>
			<li>
				<a href="#4">4: Embedding and extending the ODF-XSLT library</a>
				<ul class="toc">
					<li><a href="#4_1">4.1: Basic implementation</a></li>
					<li><a href="#4_2">4.2: Extending the base processor</a></li>
				</ul>
			</li>
			<li><a href="#5">5: References</a></li>
		</ul>
		
		<h2><a href="#1" id="1">1: Installation instructions</a></h2>
		
		<h3><a href="#1_1" id="1_1">1.1: Requirements</a></h3>
		
		<p>To use PHP-ODF-XSLT, you will need the following libraries installed on your system:</p>
		<ul>
			<li>PHP 5.2 or later</li>
			<li>PHP CLI for the commandline utility</li>
			<li>libxslt and the PHP XSL extension</li>
			<li>zlib and the PHP Zip extension</li>
		</ul>
		
		<h3><a href="#1_2" id="1_2">1.2: Installation</a></h3>
		
		<p>
			Download the odf-xslt package from the <a href="/odf-xslt/download/">download section</a> and
			extract it somewhere convenient. Then open up a terminal and from the package directory run the following
			commands:
		</p>
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">make &amp;&amp; sudo make install</div></li>
</ol></div></div>		
		<h2><a href="#2" id="2">2: Creating ODF-XSLT document templates</a></h2>
		
		<p>ODF-XSLT documents are basically just ODF documents where XSLT markup has been insterted in the XML files
		inside the ODF container. Usually just in content.xml and styles.xml because these two are automatically parsed by
		the ODFXSLTProcessor. You can generate these XSLT documents directly using your favourite XML tool, or you can
		generate them from specially marked up ODF documents using your favourite ODF editor, such as OpenOffice.org.</p>
		
		<h3><a href="#2_1" id="2_1">2.1: Creating XSLT stylesheets directly</a></h3>
		
		<p>If you unzip an ODF-XSLT file and take a look at the content.xml file, you can see that it's just plain XSLT.
		If you understand the <a href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=office">OpenDocument Format specification</a> and the
		<a href="http://www.w3.org/TR/xslt">XSL Transformations specification</a> then you could generate these documents manually
		or from within another application. Below is an excerpt of a simple ODF-XSLT document.</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;?<span class="re1">xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">xslt:stylesheet</span> <span class="re0">xmlns:xslt</span>=<span class="st0">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3"> &nbsp; &nbsp;<span class="re0">xmlns:office</span>=<span class="st0">&quot;urn:oasis:names:tc:opendocument:xmlns:office:1.0&quot;</span> ... <span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">xslt:template</span> <span class="re0">match</span>=<span class="st0">&quot;/&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">office:document-content<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">office:body<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">office:text<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:sequence-decls<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">text:sequence-decls<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>A value: <span class="sc3">&lt;<span class="re1">xslt:value-of</span> <span class="re0">select</span>=<span class="st0">&quot;/foo/bar&quot;</span> <span class="re2">/&gt;</span>&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">xslt:for-each</span> <span class="re0">select</span>=<span class="st0">&quot;/foo/quu&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>A repeated paragraph<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">xslt:for-each<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">office:text<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">office:body<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">office:document-content<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;/<span class="re1">xslt:template<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;/<span class="re1">xslt:stylesheet<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<h3><a href="#2_2" id="2_2">2.2: Marking up ODF documents</a></h3>
		
		<p>Instead of creating ODF-XSLT documents manually, you can also use your favourite ODF-compliant
		Office application to create specially marked-up ODF documents. The ODFXSLTProcesser translates these documents
		on&ndash;the&ndash;fly to ODF-XSLT documents which are then processed with the supplied XML data to create
		the final ODF document.</p>
		
		<h4><a href="#2_2_1" id="2_2_1">2.2.1: ODF-XSLT template sytntax</a></h4>
		
		<p>The basic syntax to create ODF-XSLT documents is simple, but powerfull. You do need a basic understanding of
		the <a href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=office">OpenDocument Format</a>, 
		<a href="http://www.w3.org/TR/xslt">XSL Transformations</a> and <a href="http://www.w3.org/TR/xpath">XPath</a> though.
		The ODF-XSLT syntax lets you insert XSLT tags at specified locations inside your ODF document. The basic syntax is:</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">{@&lt;position&gt; &lt;xpath-expression&gt; &lt;xslt-expression&gt;}</div></li>
</ol></div></div>		
		<p>With the XPath expression you select one or more XML nodes in your ODF document. The XSLT expression is then insterted into
		the document at the specified position. The position parameter can be one of <tt>before</tt>, <tt>after</tt>, <tt>append</tt> or
		<tt>replace</tt>. An example to clarify this. Suppose that you wish to repeat a certain paragraph, once for each
		node in the XML file. The paragraph "Repeat me" looks like this in XML:</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>Repeat me<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<p>You can simply add the ODF-XSLT expressions directly in the paragraph:</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">{@before .. &lt;xslt:for-each select=&quot;/foo/bar&quot;&gt;}Repeat me{@after .. &lt;/xslt:for-each&gt;}</div></li>
</ol></div></div>		
		<p>The XPath expression ".." points to the &lt;text:p&gt; node. Note that you need to disable automatic hyperlinking in your office suite, to prevent it from creating mailto links
		from the code. The ODFXSLTProcesor cannot read the template syntax if they are broken up by ODF style rules. In XML, the paragraph looks like this:</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>{@before .. <span class="sc1">&amp;lt;</span>xslt:for-each select=&quot;/foo/bar&quot;<span class="sc1">&amp;gt;</span>}Repeat me{@after .. <span class="sc1">&amp;lt;</span>/xslt:for-each<span class="sc1">&amp;gt;</span>}<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<p>The two ODF-XSLT expressions say: Add &lt;xslt:for-each select="/foo/bar"&gt; before the &lt;text:p&gt; node, and add 
		&lt;/xslt:for-each&gt; after it. When the ODFXSLTProcessor parses it, the XSLT looks like this:</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">xslt:for-each</span> <span class="re0">select</span>=<span class="st0">&quot;/foo/bar&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>Repeat me<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;/<span class="re1">xslt:for-each<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<p>This piece of XSLT can be combined with an XML file to create a new ODF file. Below is a sample XML file
		and the XML that it will result in:</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;?<span class="re1">xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">foo<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">bar<span class="re2">&gt;</span></span></span>Quu<span class="sc3">&lt;/<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">bar<span class="re2">&gt;</span></span></span>Quux<span class="sc3">&lt;/<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">bar<span class="re2">&gt;</span></span></span>Quuz<span class="sc3">&lt;/<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;/<span class="re1">foo<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		<p>becomes</p>
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>Repeat me<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>Repeat me<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">text:p</span> <span class="re0">text:style-name</span>=<span class="st0">&quot;Standard&quot;</span><span class="re2">&gt;</span></span>Repeat me<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<p>Because you can add any XSLT tags to any ODF node through XPath, the possibilities are virtually endless.
		But adding lots of XSLT directly into the document doesn't look very good. The ODFXSLTProcessor recognises
		two alternative methods. The first method is inserting an ODF text placeholder into the document. In
		OpenOffice.org Writer you can do that via insert->field->other menu. You can use anything you want as the
		placeholder text. The placeholder reference should be an XPath expression into the data XML that points to
		whatever the placeholder should be replaced with. See the screenshot below.</p>
		
		<img src="/images/odf-xslt/placeholder.png" />
		
		<p>A second way to unclutter your document is to use &lt;text:script&gt; elements to put your ODF-XSLT snippets in.
		If you use <tt>ODF-XSLT</tt> as the script language parameter then the ODFXSLTProcessor will strip the script elements
		after processing the template snippets. Here's a screenshot showing the "Repeat me" example implemented with script
		elements.</p>
		
		<img src="/images/odf-xslt/script.png" />
		
		<h4><a href="#2_2_2" id="2_2_2">2.2.2: Variable substitution</a></h4>
		
		<p>The easiest method by far for simple variable substitution is the placeholder text method explained in
		<a href="#2_2_1">section 2.2.1</a>. The XPath expression in the reference field of the placeholder is run from
		where you currently are in the XML data field. Take for example the following XML data:</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;?<span class="re1">xml</span> <span class="re0">version</span>=<span class="st0">&quot;1.0&quot;</span> <span class="re0">encoding</span>=<span class="st0">&quot;UTF-8&quot;</span><span class="re2">?&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">foo<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">baz<span class="re2">&gt;</span></span></span>quu<span class="sc3">&lt;/<span class="re1">baz<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">baz<span class="re2">&gt;</span></span></span>quux<span class="sc3">&lt;/<span class="re1">baz<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;/<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">baz<span class="re2">&gt;</span></span></span>quuu<span class="sc3">&lt;/<span class="re1">baz<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">baz<span class="re2">&gt;</span></span></span>quuux<span class="sc3">&lt;/<span class="re1">baz<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;/<span class="re1">bar<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;/<span class="re1">foo<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<p>When you are doing a <a href="#2_2_3">row repeat</a> on <tt>/foo/bar</tt> and you want the placeholder to be replaced
		with the value of the baz element, then the reference field of the placeholder should simply be <tt>baz</tt>.</p>
		
		<h4><a href="#2_2_3" id="2_2_3">2.2.3: Table row repeat</a></h4>
		
		<p>Repeating table rows is pretty simple. Create a table in your ODF document and put an ODF-XSLT script
		element in one of the cells of the row you want to repeat. If you want to repeat over the <tt>/foo/bar</tt> elements
		from the previous example, then the code for the script element should be:</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">{@before ancestor::table:table-row[1] &lt;xslt:for-each select=&quot;/foo/bar&quot;&gt;}</div></li>
<li class="li1"><div class="de1">{@after ancestor::table:table-row[1] &lt;/xslt:for-each&gt;}</div></li>
</ol></div></div>		
		<h4><a href="#2_2_4" id="2_2_4">2.2.4: Table column repeat</a></h4>
		
		<p>Table column repeat is slightly harder than table row repeat. That's because of the way that tables
		are built in ODF. Tables in ODF are very similar to tables in HTML: you have rows containing cells, with
		column definitions separately in the table header. For example:</p>
		
		<div class="geshi-wrap"><div class="xml geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="sc3">&lt;<span class="re1">table:table</span> <span class="re0">table:name</span>=<span class="st0">&quot;MyTable&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">table:table-column</span><span class="re2">/&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">table:table-column</span><span class="re2">/&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">table:table-row<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">table:table-cell</span> <span class="re0">office:value-type</span>=<span class="st0">&quot;string&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:p<span class="re2">&gt;</span></span></span>Column A<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">table:table-cell<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">table:table-cell</span> <span class="re0">office:value-type</span>=<span class="st0">&quot;string&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:p<span class="re2">&gt;</span></span></span>Column B<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">table:table-cell<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;/<span class="re1">table:table-row<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;<span class="re1">table:table-row<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">table:table-cell</span> <span class="re0">office:value-type</span>=<span class="st0">&quot;string&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:p<span class="re2">&gt;</span></span></span>Column A<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">table:table-cell<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">table:table-cell</span> <span class="re0">office:value-type</span>=<span class="st0">&quot;string&quot;</span><span class="re2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc3">&lt;<span class="re1">text:p<span class="re2">&gt;</span></span></span>Column B<span class="sc3">&lt;/<span class="re1">text:p<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc3">&lt;/<span class="re1">table:table-cell<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc3">&lt;/<span class="re1">table:table-row<span class="re2">&gt;</span></span></span></div></li>
<li class="li1"><div class="de1"><span class="sc3">&lt;/<span class="re1">table:table<span class="re2">&gt;</span></span></span></div></li>
</ol></div></div>		
		<p>If you want to repeat column B for each /foo/bar from the example data XML then you need to repeat the second
		cell in each row <em>and</em> you need to repeat the second table-column. To do so, create a script element in the top
		cell of the second column and insert the following code. The first two rules repeat the second table-column element.
		The second two rules repeat the second cell element of each row.</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">{@before ancestor::table:table[1]/table:table-column[2] &lt;xslt:for-each select=&quot;/foo/bar&quot;&gt;}</div></li>
<li class="li1"><div class="de1">{@after ancestor::table:table[1]/table:table-column[2] &lt;/xslt:for-each&gt;}</div></li>
<li class="li1"><div class="de1">{@before ancestor::table:table[1]/table:table-row/table:table-cell[2] &lt;xslt:for-each select=&quot;/foo/bar&quot;&gt;}</div></li>
<li class="li1"><div class="de1">{@after ancestor::table:table[1]/table:table-row/table:table-cell[2] &lt;/xslt:for-each&gt;}</div></li>
</ol></div></div>		
		<h4><a href="#2_2_5" id="2_2_5">2.2.5: Image replacement</a></h4>
		
		<p>Image replacement is most easily done from within the image itself. Insert an image into the document and
		format it the way you want it. Then place the ODF-XSLT code into the images "alternative text" attribute. For example,
		if the data XML contains the full path to the image you want to use in /foo/image-path, then put the following code into
		the alternative text field:</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">{@child ../draw:image</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &lt;xslt:attribute name=&quot;xlink:href&gt;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;xslt:value-of select=&quot;/foo/image-path&quot;/&gt;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/xslt:attribute&gt;}</div></li>
</ol></div></div>		
		<p>This will replace the image xlink:href attribute of the image with the value of /foo/image-path from the data XML.
		The ODFXSLTProcessor will check all the image xlink:href paths and make sure that the actual images are included
		in the ODF container.</p>
		
		<img src="/images/odf-xslt/chart.png" />
		
		<h2><a href="#3" id="3">3: Using the commandline tool</a></h2>
		
		<p>The odf-xslt package comes with a commandine tool called <tt>odfxsltproc</tt> that allows you to convert XML data to ODF documents easily.
		It processed XML data from STDIN and outputs to a specified location. Usage:</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">odfxsltproc &lt;stylesheet&gt; &lt;output location&gt;</div></li>
</ol></div></div>		
		<p>Example usage when converting an XML file to ODF:</p>
		
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">$ odf-xsltproc ~/my-odf-xslt.odt ~/my-document.odt &amp;lt; ~/my-data.xml</div></li>
</ol></div></div>		
		<h2><a href="#4" id="4">4: Embedding and extending the ODF-XSLT library</a></h2>
		
		<h3><a href="#4_1" id="4_1">4.1: Basic implementation</a></h3>
		
		<p>Using the ODFXSLTProcessor in your own PHP application is very easy. Simply instanciate a new
		ODFXSLTProcessor, load a stylesheet and call transform_to_file() or transform_to_memory() with
		the XML data as a PHP DOMDocument. The example below should explain itself.</p>
		
		<div class="geshi-wrap"><div class="php geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="kw2">&lt;?php</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="kw1">require_once</span><span class="br0">&#40;</span><span class="st_h">'odf-xslt/odf-xslt.php'</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="re0">$data</span> <span class="sy2">=</span> <span class="kw2">new</span> DOMDocument<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$data</span><span class="sy2">-&gt;</span><span class="me1">loadXML</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;foo&gt;&lt;bar&gt;Quu&lt;/bar&gt;&lt;/foo&gt;&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span> <span class="sy2">=</span> <span class="kw2">new</span> ODFXSLTProcessor<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">cache_dir</span> <span class="sy2">=</span> <span class="st0">&quot;/tmp/&quot;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">import_stylesheet</span><span class="br0">&#40;</span><span class="st0">&quot;/home/you/my-odf-xslt.odt&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">transform_to_file</span><span class="br0">&#40;</span><span class="re0">$data</span><span class="sy3">,</span> <span class="st0">&quot;/home/you/my-document.odt&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="kw2">?&gt;</span></div></li>
</ol></div></div>		
		<p>For a complete overview of the ODFXSLTProcessor you should read the <a href="/api/odf-xslt/">ODF-XSLT API Documentation</a>.</p>
		
		<h3><a href="#4_2" id="4_2">4.2: Extending the base processor</a></h3>
		
		<p>If you want to extend the functionality of the ODFXSLTProcessor then you do not need to subclass
		it. The processor allows you to register custom preprocessor and postprocessor functions. The preprocessor
		is executed after the XSLT tags have been inserted but before the XML data is parsed. The postprocessor
		is called after the XML data has been parsed. Pre- and postprocessors are executed in the order they are
		registered and are executed once for each ODF XML file specified in the $container_files class attribute.
		By default those are the content.xml and styles.xml files.</p>
		
		<p>The example below shows a post-processor that removes all empty paragraphs.</p>
		
		<div class="geshi-wrap"><div class="php geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="kw2">&lt;?php</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="kw1">require_once</span><span class="br0">&#40;</span><span class="st_h">'odf-xslt/odf-xslt.php'</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="kw2">function</span> remove_empty_paras<span class="br0">&#40;</span><span class="re0">$raw_xml</span><span class="sy3">,</span> <span class="sy1">&amp;</span><span class="re0">$processor</span><span class="sy3">,</span> <span class="re0">$user_data</span><span class="br0">&#41;</span></div></li>
<li class="li1"><div class="de1"><span class="br0">&#123;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$dom</span> <span class="sy2">=</span> <span class="kw2">new</span> DOMDocument<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$dom</span><span class="sy2">-&gt;</span><span class="me1">loadXML</span><span class="br0">&#40;</span><span class="re0">$raw_xml</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$dom</span><span class="sy2">-&gt;</span><span class="me1">getElementsByTagNameNS</span><span class="br0">&#40;</span><span class="st0">&quot;urn:oasis:names:tc:opendocument:xmlns:text:1.0&quot;</span><span class="sy3">,</span> <span class="st0">&quot;p&quot;</span><span class="br0">&#41;</span> <span class="kw1">as</span> <span class="re0">$node</span><span class="br0">&#41;</span> <span class="br0">&#123;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="kw1">empty</span><span class="br0">&#40;</span><span class="re0">$node</span><span class="sy2">-&gt;</span><span class="me1">nodeValue</span><span class="br0">&#41;</span><span class="br0">&#41;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$node</span><span class="sy2">-&gt;</span><span class="me1">parentNode</span><span class="sy2">-&gt;</span><span class="me1">removeChild</span><span class="br0">&#40;</span><span class="re0">$node</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$dom</span><span class="sy2">-&gt;</span><span class="me1">saveXML</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="br0">&#125;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="re0">$data</span> <span class="sy2">=</span> <span class="kw2">new</span> DOMDocument<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$data</span><span class="sy2">-&gt;</span><span class="me1">loadXML</span><span class="br0">&#40;</span><span class="st0">&quot;&lt;foo&gt;&lt;bar&gt;Quu&lt;/bar&gt;&lt;/foo&gt;&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span> <span class="sy2">=</span> <span class="kw2">new</span> ODFXSLTProcessor<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">cache_dir</span> <span class="sy2">=</span> <span class="st0">&quot;/tmp/&quot;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">register_postprocessor</span><span class="br0">&#40;</span><span class="st0">&quot;remove_empty_paras&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">import_stylesheet</span><span class="br0">&#40;</span><span class="st0">&quot;/home/you/my-odf-xslt.odt&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1"><span class="re0">$processor</span><span class="sy2">-&gt;</span><span class="me1">transform_to_file</span><span class="br0">&#40;</span><span class="re0">$data</span><span class="sy3">,</span> <span class="st0">&quot;/home/you/my-document.odt&quot;</span><span class="br0">&#41;</span><span class="sy3">;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="kw2">?&gt;</span></div></li>
</ol></div></div>		
		<h2><a href="#5" id="5">5: References</a></h2>
		
		<ol>
			<li><a href="http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=office">OpenDocument specification</a></li>
			<li><a href="http://www.w3.org/TR/xslt">XSL Transformations (XSLT) Version 1.0</a></li>
			<li><a href="http://www.w3.org/TR/xpath">XML Path Language (XPath) Version 1.0</a></li>
		</ol>
	</div>
</div>					<div id="right">
			<div id="menu">				
				<div class="menu">
					<h3>Menu</h3>
					<ul>
						<li><img src="/images/icons/home.png" alt="" />&nbsp;<a name="menu_start" id="menu_start" href="/" rel="home">Home</a></li>
						<li><img src="/images/icons/archives.png" alt="" />&nbsp;<a href="/archives/">Blog &nbsp;archives</a></li>
						<li><img src="/images/icons/webdev.png" alt="" />&nbsp;<a href="/pages/webdevelopment/">Web&nbsp;development</a>
							<ul>
								<li><img src="/images/icons/work.png" alt="" />&nbsp;<a href="/pages/pastwork/">Past work</a></li>
								<!-- <li><img src="/images/icons/money.png" alt="" />&nbsp;<a href="#">Hire&nbsp;us</a></li> -->
							</ul>
						</li>
						<li><img src="/images/icons/projects.png" alt="" />&nbsp;<a href="/pages/projects/">Projects</a>
							<ul>
																	<li><img src="/images/icons/hearts.png" alt="" />&nbsp;<a href="/gnome-hearts/">Gnome Hearts</a></li>
																									<li><img src="/images/icons/odf-xslt.png" alt="" />&nbsp;<a href="/odf-xslt/">ODF-XSLT Generator</a>
										<ul>
											<li><img src="/images/icons/package.png" alt="" />&nbsp;<a href="/odf-xslt/download/">Download</a></li>
											<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="/odf-xslt/manual/">Manual</a></li>
											<li><img src="/images/icons/book.png" alt="" />&nbsp;<a href="/api/odf-xslt/">API Reference</a></li>
											<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="/odf-xslt/todo/">ToDo and roadmap</a></li>
										</ul>
									</li>
																<li><img src="/images/icons/officeshots.png" alt="" />&nbsp;<a href="http://www.officeshots.org/">Officeshots.org <img src="/images/icons/external.png" /></a></li>
							</ul>
						</li>
						<li><img src="/images/icons/resources.png" alt="" />&nbsp;<a href="/pages/resources/">Resources</a>
							<ul>
								<li><img src="/images/icons/buggie.png" alt="" />&nbsp;<a href="http://bugzilla.jejik.com">Bugzilla</a></li>
								<li><img src="/images/icons/subversion.png" alt="" />&nbsp;<a href="http://svn.jejik.com">Subversion</a></li>
								<li><img src="/images/icons/lists.png" alt="" />&nbsp;<a href="http://lists.jejik.com">Mailing&nbsp;lists</a></li>
								<li><img src="/images/icons/book.png" alt="" />&nbsp;<a href="/api/">API References</a></li>
							</ul>
						</li>
						<li><img src="/images/icons/about-us.png" alt="" />&nbsp;<a href="/pages/about_us/">About&nbsp;us</a></li>
						<li><img src="/images/icons/contact.png" alt="" />&nbsp;<a href="/contact.php">Contact</a></li>
						<li><img src="/images/icons/pillar.png" alt="" />&nbsp;<a href="/pages/old_stuff/">Old&nbsp;stuff</a></li>
													<li><img src="/images/icons/login.png" alt="" />&nbsp;<a href="/login.php?ref=%2Fodf-xslt%2Fmanual%2F">Your&nbsp;account</a></li>
												<li><img src="/images/icons/rss.png" alt="" />&nbsp;<a href="/pages/feeds/">Feeds</a></li>
					</ul>
				</div>
                <div class="menu bitcoin">
                    <h3>Donate!</h3>
                    <p>Please consider donating if my work has been useful to you.</p>
                    <img src="/images/other/blockchain-address.png" />
                    <p>Bitcoin address:</p>
                    <tt>1PAXiscvKoGRJ5XxMZvri3CMNeKYYb8wMQ</tt>
                </div>
				
								
				
								
								
									<div class="menu">
						<h3>Similar software</h3>
						<ul>
							<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="http://www.artofsolving.com/opensource/jodreports">JODReports&nbsp;<img src="/images/icons/external.png" /></a></li>
							<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="http://jooreports.sourceforge.net/">JOOReports&nbsp;<img src="/images/icons/external.png" /></a></li>
							<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="http://extensions.services.openoffice.org/project/reportdesign">SUN&nbsp;Report&nbsp;Builder&nbsp;<img src="/images/icons/external.png" /></a></li>
						</ul>
					</div>
								
							</div>	
			</div>
					<div id="footer">
				<p>
					Copyright&copy; 2003-2014 Stichting Lone Wolves
					[ <a href="http://validator.w3.org/check?uri=referer">XHTML</a>
					| <a href="http://jigsaw.w3.org/css-validator/check/referer">CSS</a>
					| <a href="http://www.w3.org/WAI/WCAG1AA-Conformance" title="Explanation of Level Double-A Conformance">WAI-AA</a>
					| <a href="http://www.section508.gov/" title="">508</a>
					| <a href="/pages/privacy">Privacy policy</a> ]
				</p>
			</div>
		</div>
		<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
		</script>
		<script type="text/javascript">
			_uacct = "UA-1746114-1";
			urchinTracker();
		</script>
	</body>
</html>
