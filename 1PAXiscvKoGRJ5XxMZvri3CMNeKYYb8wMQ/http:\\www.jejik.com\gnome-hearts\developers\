http://www.jejik.com/gnome-hearts/developers/
HTTP/1.1 200 OK
Date: Mon, 14 Jul 2014 00:30:22 GMT
Server: Apache
X-Powered-By: PHP/5.4.4-14
Set-Cookie: lw_user_data=a%3A2%3A%7Bs%3A7%3A%22user_id%22%3Bi%3A1%3Bs%3A11%3A%22autologinid%22%3Bs%3A0%3A%22%22%3B%7D; expires=Tue, 14-Jul-2015 00:30:22 GMT; path=/
Set-Cookie: lw_user_sid=31582fee0cf1bc4b420a0a1d58a9c287; path=/
Vary: Accept-Encoding
Content-Encoding: gzip
Content-Length: 7843
Connection: close
Content-Type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<!--
			<rdf:RDF 
				xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
				xmlns:dc="http://purl.org/dc/elements/1.1/"
				xmlns:cc="http://web.resource.org/cc/">
				<cc:Work>
					<dc:creator>Stichting Lone Wolves</dc:creator>
					<dc:title>Lone Wolves - Web, game, and open source development</dc:title>
					<dc:description>A blog about web development and open source game programming, home of Hearts for GNOME</dc:description> 
					<dc:date>2014-07-14T02:30:22Z</dc:date>
					<cc:license rdf:resource="http://creativecommons.org/licenses/by-sa/2.5/" />
				</cc:Work>
				<cc:License>
					<cc:requires rdf:resource="http://web.resource.org/cc/Notice" />
					<cc:requires rdf:resource="http://web.resource.org/cc/Attribution" />
					<cc:requires rdf:resource="http://web.resource.org/cc/ShareAlike" />
					<cc:permits rdf:resource="http://web.resource.org/cc/Reproduction" />
					<cc:permits rdf:resource="http://web.resource.org/cc/Distribution" />
					<cc:permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
				</cc:License>
			</rdf:RDF>
		-->
		<title>Lone Wolves - Web, game, and open source development</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
		<meta http-equiv="pragma" content="no-cache" />
		<meta http-equiv="cache-control" content="no-cache" />
		<meta name="keywords" content="lone, wolves, game, web, open source, gnome, hearts, development, linux" />
		<meta name="author" content="Sander Marechal"/>
		<meta name="description" content="A blog about web development and open source game programming, home of Hearts for GNOME" />
		<style type="text/css" media="screen">@import "/main.css";</style>
		<style type="text/css" media="screen">@import "/geshi.css";</style>
				<link rel="alternate" type="application/atom+xml" title="Lone Wolves Atom 1.0 (full)" href="/feeds/full/atom.xml" />
		<link rel="alternate" type="application/atom+xml" title="Lone Wolves Atom 1.0 (articles)" href="/feeds/articles/atom.xml" />
		<link rel="alternate" type="application/atom+xml" title="Lone Wolves Atom 1.0 (blurb)" href="/feeds/blurb/atom.xml" />
		<link rel="alternate" type="application/rss+xml" title="Lone Wolves RSS 2.0 (full)" href="/feeds/full/rss.xml" />
		<link rel="alternate" type="application/rss+xml" title="Lone Wolves RSS 2.0 (articles)" href="/feeds/articles/rss.xml" />
		<link rel="alternate" type="application/rss+xml" title="Lone Wolves RSS 2.0 (blurb)" href="/feeds/blurb/rss.xml" />
		<link rel="pingback" href="http://www.jejik.com/pingback" />
		<link href="http://www.jejik.com/" rel="home" />
		<!--[if IE]><style type="text/css" media="screen">@import "/ie.css";</style><![endif]-->
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	</head>
	<body>
				<div id="wrapper">
			<div id="header">
				<h1><a href="/" rel="home">Lone Wolves</a></h1>
				<h2>Web, game, and open source development</h2>
				<span id="skip_to_menu"><a href="#menu_start">Skip to menu</a></span>
			</div><div id="page">
	<div class="page">
		<h1><img src="/images/hearts/hearts-icon.png" /> Hearts Developer Guidelines</h1>
		<p>
			This guide gives a brief overview of the Hearts package and related resources on this website.
		<p>
		
		<h2><a href="#0" id="0">0: Table of contents</a></h2>
		<ul class="toc">
			<li><a href="#1">1: Getting help</a></li>
			<li><a href="#2">2: Obtaining the source</a>
				<ul class="toc">
					<li><a href="#2_1">2.1: From the web</a></li>
					<li><a href="#2_2">2.2: Through subversion</a></li>
				</ul>
			</li>
			<li><a href="#3">3: Compiling and installing</a>
				<ul class="toc">
					<li><a href="#3_1">3.1: Prerequisites</a></li>
					<li><a href="#3_2">3.2: Preparing the source</a></li>
					<li><a href="#3_3">3.3: Compiling and installing</a></li>
				</ul>
			</li>
			<li><a href="#4">4: Source overview</a>
				<ul class="toc">
					<li><a href="#4_1">4.1: The core game</a></li>
					<li><a href="#4_2">4.2: The player scripts</a>
						<ul class="toc">
							<li><a href="#4_2_1">4.2.1: Creating and editing players</a></li>
							<li><a href="#4_2_2">4.2.2: Datastructures and global variables</a></li>
							<li><a href="#4_2_3">4.2.3: Implementing the AI</a></li>
							<li><a href="#4_2_4">4.2.4: The Trick object</a></li>
							<li><a href="#4_2_5">4.2.5: Functions provided to you</a></li>
						</ul>
					</li>
				</ul>
			</li>
			<li><a href="#5">5: Contributing</a>
				<ul class="toc">
					<li><a href="#5_1">5.1: Bugs and feature requests</a></li>
					<li><a href="#5_2">5.2: Translating Hearts</a></li>
					<li><a href="#5_3">5.1: Submitting patches</a></li>
				</ul>
			</li>
		</ul>
		
		<h2><a href="#1" id="1">1: Getting help</a></h2>
		<p>
			This documentation (when complete) should give a good overview of the steps required to build, install and 
			modify the Hearts game. Right now it's still in the process of being written though. If you need any help
			(or if you simply want to talk about the game) feel free to sign up to the 
			<a href="http://lists.jejik.com/cgi-bin/mailman/listinfo/hearts">Hearts mailing list</a>.
		</p>
		
		<h2><a href="#2" id="2">2: Obtaining the source</a></h2>
		
		<h3><a href="#2_1" id="2_1">2.1: From the web</a></h3>
		<p>
			You can download a nightly snapshot of the Hearts trunk at: <a href="http://www.jejik.com/files/gnome-hearts/gnome-hearts.snapshot.tar.gz">http://www.jejik.com/files/gnome-hearts/gnome-hearts.snapshot.tar.gz</a></li>
			You can also browse our Subversion repositories online at <a href="http://svn.jejik.com">http://svn.jejik.com</a>. You can also download a
			release tarball from the <a href="/gnome-hearts/download">download</a> page, but because the game is constantly under development, the
			release sources may be outdated.
		</p>
		
		<h3><a href="#2_2" id="2_2">2.2: Through Subversion</a></h3>
		<p>
			If you have <a href="http://subversion.tigris.org/">Subversion</a> installed on your system, you can grab the latest
			sources directly from the repository. Our repository is readable by guests (commits require an account though). Use
			the following command:
		</p>
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">svn checkout https://svn.jejik.com/gnome-hearts/trunk</div></li>
</ol></div></div>		
		<h2><a href="#3" id="3">3: Compiling and installing</a></h2>
		
		<h3><a href="#3_1" id="3_1">3.1: Prerequisites</a></h3>
		<p>
			Before you can compile and install Hearts, you need several other packages and libraries:
		</p>
		<ul>
			<li>gnome 2 and GTK 2</li>
			<li>libgnomeui (plus headers)</li>
			<li>gnome-common (for the AM_GLIB_GNU_GETTEXT() m4 macro's)</li>
			<li>libglade2 (plus headers)</li>
			<li>gmodule (to make sure the --export-dynamic compiler flag is used. This is part of glib)</li>
			<li>python2.3 or better (plus headers)</li>
			<li>
				intltool and gettext (plus headers). You need intltool 0.41 for Subversion builds. Release packages can be built with an older intltool.<br />
			</li>
		</ul>
		<p>
			Aside from the packages and libraries listed in the above list, you also need a decent C build enviroment
			(the build-essential package on Debian and deratives), the GNU autotools, the GNU gettext package and GNOME's intltool
			package.
		</p>
		
		<h3><a href="#3_2" id="3_2">3.2: Preparing the source</a></h3>
		<p>
			Untar the sources somewhere convenient and run the <tt>./bootstrap</tt> script. If you downloaded a release tarball
			then you can skip this step. Release packages are already bootstrapped. This script checks some things
			in your build enviroment, processes some macro's and runs various autotools in the right order. If all goes well then
			the only thing it will output is that you can run the <tt>./configure</tt> script (it will not run it for you, so you can play
			with the standard <tt>./configure</tt> options yourself).
		</p>
		<p>
			Note that you need a working internet connection for this step to fully execute. If you do not, then <tt>./bootstrap</tt>
			will complain that it cannot get some config files from the internet. Download them yourself (or get them via other means), add
			them in the package root directory and rerun the ./bootstrap. You need the following two files:
		</p>
		<ul>
			<li><a href="http://cvs.savannah.gnu.org/viewcvs/*checkout*/config/config/config.sub">http://cvs.savannah.gnu.org/viewcvs/*checkout*/config/config/config.sub</a></li>
			<li><a href="http://cvs.savannah.gnu.org/viewcvs/*checkout*/config/config/config.guess">http://cvs.savannah.gnu.org/viewcvs/*checkout*/config/config/config.guess</a></li>
		</ul>
		
		<h3><a href="#3_3" id="3_3">3.3: Compiling and installing</a></h3>
		<p>Compiling and installing is done the usual way (for GNU packages that is) through the invocation of the magical commands:</p>
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">$ ./configure</div></li>
<li class="li1"><div class="de1">$ make</div></li>
<li class="li1"><div class="de1">$ sudo make install</div></li>
<li class="li1"><div class="de1">$ make clean</div></li>
</ol></div></div>		<p>
			If the <tt>./bootstrap</tt> ran without errors and you have all required libraries then there should be no errors. If you
			find that other libraries than the one's listed above are required, please post to the mailing list so we can update this
			document. The compilation will throw a few warnings at the end. These are caused by Python and can be ignored.
		</p>
		<p>
			If you configure Hearts with the same prefix as you have installed gnome-games and gnome-games-extra-data then Hearts will
			be able to use the card styles provided by those packages. Make sure you uninstall and version of hearts you already have
			before doing so. Also, you should probabely delete the .gnome-hearts.cfg file from your home directory because hearts won't be
			able to find the old paths. For most Linux systems you should configuring the package with:
		</p>
		<div class="geshi-wrap"><div class="text geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">./configure --prefix=/usr</div></li>
</ol></div></div>		<h2><a href="#4" id="4">4: Source overview</a></h2>
		<p>
			The Hearts source code consists of two main parts: the core game written in C and the computer opponents in various
			Python scripts. If you want to work on the computer opponents then you don't need to know C. Simply edit the Python scripts
			(or create a new player script) and put it in the /scripts/players directory.
		</p>
		
		<h3><a href="#4_1" id="4_1">4.1: The core game</a></h3>
		<p>The core game is written in C and can be found in the /src directory. The overview below lists what can be found where.</p>
		<ul>
			<li><tt>/src/background.c</tt> - Manages the background image of the playingarea.</li>
			<li><tt>/src/cards.c</tt> - Manages decks of cards, hands of cards and the trick. The game's scoring rules are implemented in here.</li>
			<li><tt>/src/cards-image.c</tt> - Interface for the card faces.</li>
			<li><tt>/src/cfg.c</tt> - Manages the configuration files.</li>
			<li><tt>/src/events.c</tt> - Handles all GTK events. Also contains most of the game flow.</li>
			<li><tt>/src/hearts.c</tt> - This contains the main() function and core game functions such as (re)starting games and rounds.</li>
			<li><tt>/src/player-api.c</tt> - Contains the functions that are exposed to the Python AI players.</li>
			<li><tt>/src/player.c</tt> - Here is the player's C implementation (play a card, pass cards, etcetera).</li>
			<li><tt>/src/preimage.c</tt> - A helper object for cards-images.c that handles the source image data.</li>
			<li><tt>/src/ui.c</tt> - This contains all the user interface functions that are not events.</li>
			<li><tt>/scripts/definitions.py</tt> - More functions that player scripts can use.</li>
			<li><tt>/scripts/hearts.py</tt> - Loads and registers all the players in the UI in C.</li>
			<li><tt>/scripts/player.py</tt> - The base player class that AI p[layers derive from.</li>
		</ul>
		<p>
			A note about cards: The only object that actually holds any cards is the <tt>CardsDeck</tt>. All other objects such
			as hands of cards and the trick only pass around pointers to individual cards in the <tt>CardsDeck</tt>.
		</p>
		
		<h3><a href="#4_2" id="4_2">4.2: The player scripts</a></h3>
		
		<h4><a href="#4_2_1" id="4_2_1">4.2.1: Creating and editing players</a></h4>
		<p>
			The computer opponents are implemented as separate Python scripts in the <tt>/scripts/players</tt> directory. Each Python script
			is a distinct player. If you want to create your own players, simply write a script and put it in the players
			directory. If you want an example player script, take a look at the standard AI in <tt>/scripts/stock_ai.py</tt>. Just copy
			that to <tt>/scripts/players/your_player.py</tt> and start editing it. The player should become selectable from the
			preferences dialog.
		</p>
		
		<p>
			Each player runs as a separate Python module inside the core hearts game. That means that you are free to use global
			variables to keep track of things during the game over different tricks and rounds.
		</p>
		
		<h4><a href="#4_2_2" id="4_2_2">4.2.2: Datastructures and global variables</a></h4>
		<p>
			The core game sets several class attributes in your player. These attributes are re&iuml;nitialized
			before each function call, so feel free to munge them. Most of these attributes contain cards or lists of cards.
			A card is a tuple with two values. The first value is the suit of the card and the second is the rank.
			In Python you would define a card with:
		</p>
		<div class="geshi-wrap"><div class="python geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">card = <span class="br0">&#40;</span><span class="nu0">1</span>, <span class="nu0">12</span><span class="br0">&#41;</span></div></li>
</ol></div></div>		<p>You can use numbers, but for your convenience a range of global variables have been defined by the core game:</p>
		<div class="geshi-wrap"><div class="python geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">clubs, diamonds, hearts, spades = <span class="nu0">0</span>, <span class="nu0">1</span>, <span class="nu0">2</span>, <span class="nu0">3</span></div></li>
<li class="li1"><div class="de1">ace, two, three, ... <span class="me1">ten</span>, jack, queen, king, ace_high = <span class="nu0">1</span>, <span class="nu0">2</span>, <span class="nu0">3</span>, ... <span class="nu0">10</span>, <span class="nu0">11</span>, <span class="nu0">12</span>, <span class="nu0">13</span>, <span class="nu0">14</span></div></li>
<li class="li1"><div class="de1">north, east, south, west = <span class="nu0">1</span>, <span class="nu0">2</span>, <span class="nu0">3</span>, <span class="nu0">4</span></div></li>
<li class="li1"><div class="de1">suit, rank = <span class="nu0">1</span>, <span class="nu0">2</span></div></li>
</ol></div></div>		<p>A list of cards in Python would look like:</p>
		<div class="geshi-wrap"><div class="python geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="kw2">list</span> = <span class="br0">&#91;</span><span class="br0">&#40;</span>diamonds, <span class="nu0">10</span><span class="br0">&#41;</span>, <span class="br0">&#40;</span>spades, queen<span class="br0">&#41;</span>, <span class="br0">&#40;</span>hearts, ace_high<span class="br0">&#41;</span><span class="br0">&#93;</span></div></li>
</ol></div></div>		<p>The core game sets the following class attributes for you before calling one of your functions:</p>
		<dl>
			<dt>hand<dt><dd>A list of cards that you have in your hand</dd>
			<dt>trick</dt>
			<dd>
				An object that represents the trick  that is being played by the players.
				See <a href="#4_2_4">4.2.4: The Trick object</a>.
			</dd>
			<dt>direction</dt><dd>An integer value telling you which player you are.</dd>
		</dl>

		<h4><a href="#4_2_3" id="4_2_3">4.2.3: Implementing the AI</a></h4>
		<p>
			Your player must derive from the <tt>Player</tt> class, and your classname must be prefixed with <tt>PlayerAI</tt>.
			At a bare minimum, your player must implement the <tt>select_cards()</tt> and <tt>play_cards()</tt> method. Hearts will
			quit with a failed assertion if you do not provide these. The <tt>select_cards()</tt> method should return a list of
			three cards that you want to pass on to the next player. The <tt>play_card()</tt> function should return a single <em>valid</em>
			card that you want to play on this trick. You must also set the <tt>self.name</tt> attribute to string containing the name
			of your AI as it should be used in the Hearts game.
		</p>
		<p>
			Optionally, you can also provide a <tt>trick_end()</tt> or <tt>round_end()</tt> method. The <tt>trick_end()</tt> method
			will be called at the end of a trick, when all four players have played their cards and the trick is full.
			The <tt>round_end()</tt> function is called at the end of each round, after all cards have been played (and after the
			<tt>trick_end()</tt> function).
		</p>

		<h4><a href="#4_2_4" id="4_2_4">4.2.4: The Trick object</a></h4>
		<p>
			The Trick object represents the trick that is currently being played by the players. It has the
			following attributes and methods.
		</p>
		<dl>
			<dt>card</dt>
			<dd>
				A list of four cards, representing the card played by north, east, south and west
				respectively. If a player has not played a card yet, it will be <tt>None</tt> instead of a tuple.
			</dd>
			<dt>trump</dt><dd>The suit of the first card played on the trick.</dd>
			<dt>num_played</dt><dd>The amount of cards played on the trick.</dd>
			<dt>first_played</dt><dd>The player (north, east, south or west) that started this trick.</dd>
			<dt>get_winner()</dt><dd>This method returns the winner of the trick or <tt>None</tt> if the trick has not finished yet.</dd>
			<dt>get_highest_card()</dt><dd>Returns the highest trump card on the trick.</dd>
		</dl>
		
		<h4><a href="#4_2_5" id="4_2_5">4.2.5: Functions provided to you</a></h4>
		<p>
			The core game also defines several usefull functions, filters and sorting methods you can use in your player scripts.
			Filters can be used to filter lists of cards. An example:
		</p>
		<div class="geshi-wrap"><div class="python geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1">result_list = <span class="kw2">filter</span><span class="br0">&#40;</span>f_filter_name, <span class="kw2">list</span><span class="br0">&#41;</span></div></li>
</ol></div></div>		<p>Sorting methods can be used as such:</p>
		<div class="geshi-wrap"><div class="python geshi" style="font-family:monospace;"><ol><li class="li1"><div class="de1"><span class="kw2">list</span>.<span class="me1">sort</span><span class="br0">&#40;</span>s_sort_name <span class="br0">&#91;</span>, reverse=<span class="kw2">True</span><span class="br0">&#93;</span><span class="br0">&#41;</span></div></li>
</ol></div></div>		<dl>
			<dt>have_suit(list, suit)</dt>
			<dd>Returns <tt>True</tt> if there are cards of the suit in the list, <tt>False</tt> otherwise.</dd>
			<dt>f_clubs(card)</dt>
			<dd>A filter to get all clubs from a list.</dd>
			<dt>f_diamonds(card)</dt>
			<dd>A filter to get all diamonds from a list.</dd>
			<dt>f_spades(card)</dt>
			<dd>A filter to get all spades from a list.</dd>
			<dt>f_hearts(card)</dt>
			<dd>A filter to get all hearts from a list.</dd>
			<dt>f_pointless_cards(card)</dt>
			<dd>A filter to get all cards that are not worth any points.</dd>
			<dt>f_point_cards(card)</dt>
			<dd>A filter to get all cards worth one or more points from a list.</dd>
			<dt>s_rank(a, b)</dt>
			<dd>Sort cards by their rank value, then by suit. E.g: <tt>[(spades, 1), (hearts, 1), (spades, 2)]</tt></dd>
			<dt>s_suit(a, b)</dt>
			<dd>Sort cards by suit, then by rank. E.g: <tt>[(spades, 1), (spades, 2), (hearts, 1)]</tt></dd>
			<dt>s_points(a, b)</dt>
			<dd>Sort the cards ascending by their point value.</dd>
			<dt>s_random(card)</dt>
			<dd>Randomize a list of cards.</dd>
		</dl>
			
		<h2><a href="#5" id="5">5: Contributing</a></h2>
		
		<h3><a href="#5_1" id="5_1">5.1: Bugs and feature requests</a></h3>
		<p>
			All bugs, feature requests and the like should go in <a href="http://bugzilla.jejik.com">Bugzilla</a>, but before you file a new one, please do a quick
			search of bugzilla and the <a href="http://lists.jejik.com/pipermail/hearts/">mailing list archive</a> to see if your issue has already been reported. We don't
			expect you to search for hours, but do read the first page or so of results to see if your bug is listed.
		</p>
		
		<h3><a href="#5_2" id="5_2">5.2: Translating Hearts</a></h3>
		<p>
			Hearts is translated through Launchpad.net's <a href="https://launchpad.net/">Rosetta</a> system. Translations should
			be added and updated through there, not as diffs for the subversion repository. This makes our life easier because
			we won'thave to resolve conflicts between translations in Subversion and translations in Rosetta. You can find Hearts
			in Rosetta as <a href="https://launchpad.net/products/hearts/trunk/+pots/hearts">https://launchpad.net/products/hearts/trunk/+pots/hearts</a>.
		</p>
		
		<h3><a href="#5_3" id="5_3">5.3: Submitting patches</a></h3>
		<p>
			If you have a patch that you want to contribute then you can send an e-mail to the Hearts mailing list at
			<a href="mailto:hearts@lists.jejik.com">hearts@lists.jejik.com</a>. You must be subscribed to the mailing list to
			do so (to prevent spammers abusing our lists). If you have a Subversion account on our server, you can commit it
			directly. You might want to post it to the list before committing anyway so other people can proofread your code.
			This goes especially for non-trivial patches.
		</p>
	</div>
</div>					<div id="right">
			<div id="menu">				
				<div class="menu">
					<h3>Menu</h3>
					<ul>
						<li><img src="/images/icons/home.png" alt="" />&nbsp;<a name="menu_start" id="menu_start" href="/" rel="home">Home</a></li>
						<li><img src="/images/icons/archives.png" alt="" />&nbsp;<a href="/archives/">Blog &nbsp;archives</a></li>
						<li><img src="/images/icons/webdev.png" alt="" />&nbsp;<a href="/pages/webdevelopment/">Web&nbsp;development</a>
							<ul>
								<li><img src="/images/icons/work.png" alt="" />&nbsp;<a href="/pages/pastwork/">Past work</a></li>
								<!-- <li><img src="/images/icons/money.png" alt="" />&nbsp;<a href="#">Hire&nbsp;us</a></li> -->
							</ul>
						</li>
						<li><img src="/images/icons/projects.png" alt="" />&nbsp;<a href="/pages/projects/">Projects</a>
							<ul>
																	<li><img src="/images/icons/hearts.png" alt="" />&nbsp;<a href="/gnome-hearts/">Gnome Hearts</a>
										<ul>
											<li><img src="/images/icons/package.png" alt="" />&nbsp;<a href="/gnome-hearts/download/">Download</a></li>
											<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="/gnome-hearts/users/">User Documentation</a></li>
											<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="/gnome-hearts/developers/">Developer Guidelines</a></li>
											<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="/gnome-hearts/todo/">ToDo and roadmap</a></li>
											<li><img src="/images/sites/launchpad.png" alt="" />&nbsp;<a href="https://translations.launchpad.net/hearts/trunk/">Launchpad translations <img src="/images/icons/external.png" /></a></li>
										</ul>
									</li>
																									<li><img src="/images/icons/odf-xslt.png" alt="" />&nbsp;<a href="/odf-xslt/">ODF-XSLT Generator</a></li>
																<li><img src="/images/icons/officeshots.png" alt="" />&nbsp;<a href="http://www.officeshots.org/">Officeshots.org <img src="/images/icons/external.png" /></a></li>
							</ul>
						</li>
						<li><img src="/images/icons/resources.png" alt="" />&nbsp;<a href="/pages/resources/">Resources</a>
							<ul>
								<li><img src="/images/icons/buggie.png" alt="" />&nbsp;<a href="http://bugzilla.jejik.com">Bugzilla</a></li>
								<li><img src="/images/icons/subversion.png" alt="" />&nbsp;<a href="http://svn.jejik.com">Subversion</a></li>
								<li><img src="/images/icons/lists.png" alt="" />&nbsp;<a href="http://lists.jejik.com">Mailing&nbsp;lists</a></li>
								<li><img src="/images/icons/book.png" alt="" />&nbsp;<a href="/api/">API References</a></li>
							</ul>
						</li>
						<li><img src="/images/icons/about-us.png" alt="" />&nbsp;<a href="/pages/about_us/">About&nbsp;us</a></li>
						<li><img src="/images/icons/contact.png" alt="" />&nbsp;<a href="/contact.php">Contact</a></li>
						<li><img src="/images/icons/pillar.png" alt="" />&nbsp;<a href="/pages/old_stuff/">Old&nbsp;stuff</a></li>
													<li><img src="/images/icons/login.png" alt="" />&nbsp;<a href="/login.php?ref=%2Fgnome-hearts%2Fdevelopers%2F">Your&nbsp;account</a></li>
												<li><img src="/images/icons/rss.png" alt="" />&nbsp;<a href="/pages/feeds/">Feeds</a></li>
					</ul>
				</div>
                <div class="menu bitcoin">
                    <h3>Donate!</h3>
                    <p>Please consider donating if my work has been useful to you.</p>
                    <img src="/images/other/blockchain-address.png" />
                    <p>Bitcoin address:</p>
                    <tt>1PAXiscvKoGRJ5XxMZvri3CMNeKYYb8wMQ</tt>
                </div>
				
								
				
								
									<div class="menu">
						<h3>Similar software</h3>
						<ul>
							<li><img src="/images/icons/document.png" alt="" />&nbsp;<a href="http://hearts.luispedro.org/">Hearts&nbsp;for&nbsp;KDE&nbsp;<img src="/images/icons/external.png" /></a></li>
						</ul>
					</div>
								
								
							</div>	
			</div>
					<div id="footer">
				<p>
					Copyright&copy; 2003-2014 Stichting Lone Wolves
					[ <a href="http://validator.w3.org/check?uri=referer">XHTML</a>
					| <a href="http://jigsaw.w3.org/css-validator/check/referer">CSS</a>
					| <a href="http://www.w3.org/WAI/WCAG1AA-Conformance" title="Explanation of Level Double-A Conformance">WAI-AA</a>
					| <a href="http://www.section508.gov/" title="">508</a>
					| <a href="/pages/privacy">Privacy policy</a> ]
				</p>
			</div>
		</div>
		<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
		</script>
		<script type="text/javascript">
			_uacct = "UA-1746114-1";
			urchinTracker();
		</script>
	</body>
</html>
